(() => {
  var _0x409c79 = {
    670: _0xc8fcf6 => {
      'use strict';

      var _0x2e6239 = typeof Reflect === "object" ? Reflect : null;
      var _0x31a2c7 = _0x2e6239 && typeof _0x2e6239.apply === "function" ? _0x2e6239.apply : function _0x22b0dd(_0x5b2880, _0x461156, _0x2c81ad) {
        return Function.prototype.apply.call(_0x5b2880, _0x461156, _0x2c81ad);
      };
      var _0xc86d22;
      if (_0x2e6239 && typeof _0x2e6239.ownKeys === "function") {
        _0xc86d22 = _0x2e6239.ownKeys;
      } else if (Object.getOwnPropertySymbols) {
        _0xc86d22 = function _0xfd0b7c(_0x521c39) {
          return Object.getOwnPropertyNames(_0x521c39).concat(Object.getOwnPropertySymbols(_0x521c39));
        };
      } else {
        _0xc86d22 = function _0x4d8c55(_0x2de5a6) {
          return Object.getOwnPropertyNames(_0x2de5a6);
        };
      }
      function _0x360fb8(_0x55d418) {
        if (console && console.warn) {
          console.warn(_0x55d418);
        }
      }
      var _0x4b8d51 = Number.isNaN || function _0x3e9fde(_0x10e07e) {
        return _0x10e07e !== _0x10e07e;
      };
      function _0x4bb43f() {
        _0x4bb43f.init.call(this);
      }
      _0xc8fcf6.exports = _0x4bb43f;
      _0xc8fcf6.exports.once = _0x597145;
      _0x4bb43f.EventEmitter = _0x4bb43f;
      _0x4bb43f.prototype._events = undefined;
      _0x4bb43f.prototype._eventsCount = 0;
      _0x4bb43f.prototype._maxListeners = undefined;
      var _0x434adb = 10;
      function _0x5c870c(_0x643d74) {
        if (typeof _0x643d74 !== "function") {
          throw new TypeError("The \"listener\" argument must be of type Function. Received type " + typeof _0x643d74);
        }
      }
      Object.defineProperty(_0x4bb43f, "defaultMaxListeners", {
        enumerable: true,
        get: function () {
          return _0x434adb;
        },
        set: function (_0x234f1c) {
          if (typeof _0x234f1c !== "number" || _0x234f1c < 0 || _0x4b8d51(_0x234f1c)) {
            throw new RangeError("The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received " + _0x234f1c + ".");
          }
          _0x434adb = _0x234f1c;
        }
      });
      _0x4bb43f.init = function () {
        if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        }
        this._maxListeners = this._maxListeners || undefined;
      };
      _0x4bb43f.prototype.setMaxListeners = function _0x5ebb96(_0x61e801) {
        if (typeof _0x61e801 !== "number" || _0x61e801 < 0 || _0x4b8d51(_0x61e801)) {
          throw new RangeError("The value of \"n\" is out of range. It must be a non-negative number. Received " + _0x61e801 + ".");
        }
        this._maxListeners = _0x61e801;
        return this;
      };
      function _0x4c4c6f(_0x5a7df2) {
        if (_0x5a7df2._maxListeners === undefined) {
          return _0x4bb43f.defaultMaxListeners;
        }
        return _0x5a7df2._maxListeners;
      }
      _0x4bb43f.prototype.getMaxListeners = function _0x338799() {
        return _0x4c4c6f(this);
      };
      _0x4bb43f.prototype.emit = function _0x4ab02d(_0x79ce8b) {
        var _0x5e8b71 = [];
        for (var _0x3d8afa = 1; _0x3d8afa < arguments.length; _0x3d8afa++) {
          _0x5e8b71.push(arguments[_0x3d8afa]);
        }
        var _0x317eaf = _0x79ce8b === "error";
        var _0x4fa7db = this._events;
        if (_0x4fa7db !== undefined) {
          _0x317eaf = _0x317eaf && _0x4fa7db.error === undefined;
        } else if (!_0x317eaf) {
          return false;
        }
        if (_0x317eaf) {
          var _0x4cf47c;
          if (_0x5e8b71.length > 0) {
            _0x4cf47c = _0x5e8b71[0];
          }
          if (_0x4cf47c instanceof Error) {
            throw _0x4cf47c;
          }
          var _0x5616ec = new Error("Unhandled error." + (_0x4cf47c ? " (" + _0x4cf47c.message + ")" : ""));
          _0x5616ec.context = _0x4cf47c;
          throw _0x5616ec;
        }
        var _0x471741 = _0x4fa7db[_0x79ce8b];
        if (_0x471741 === undefined) {
          return false;
        }
        if (typeof _0x471741 === "function") {
          _0x31a2c7(_0x471741, this, _0x5e8b71);
        } else {
          var _0x248449 = _0x471741.length;
          var _0x2ddc75 = _0x3e0329(_0x471741, _0x248449);
          for (var _0x3d8afa = 0; _0x3d8afa < _0x248449; ++_0x3d8afa) {
            _0x31a2c7(_0x2ddc75[_0x3d8afa], this, _0x5e8b71);
          }
        }
        return true;
      };
      function _0x349578(_0x1c2163, _0x23c012, _0x5773a6, _0x2d3d39) {
        var _0x579599;
        var _0x371248;
        var _0x41177d;
        _0x5c870c(_0x5773a6);
        _0x371248 = _0x1c2163._events;
        if (_0x371248 === undefined) {
          _0x371248 = _0x1c2163._events = Object.create(null);
          _0x1c2163._eventsCount = 0;
        } else {
          if (_0x371248.newListener !== undefined) {
            _0x1c2163.emit("newListener", _0x23c012, _0x5773a6.listener ? _0x5773a6.listener : _0x5773a6);
            _0x371248 = _0x1c2163._events;
          }
          _0x41177d = _0x371248[_0x23c012];
        }
        if (_0x41177d === undefined) {
          _0x41177d = _0x371248[_0x23c012] = _0x5773a6;
          ++_0x1c2163._eventsCount;
        } else {
          if (typeof _0x41177d === "function") {
            _0x41177d = _0x371248[_0x23c012] = _0x2d3d39 ? [_0x5773a6, _0x41177d] : [_0x41177d, _0x5773a6];
          } else if (_0x2d3d39) {
            _0x41177d.unshift(_0x5773a6);
          } else {
            _0x41177d.push(_0x5773a6);
          }
          _0x579599 = _0x4c4c6f(_0x1c2163);
          if (_0x579599 > 0 && _0x41177d.length > _0x579599 && !_0x41177d.warned) {
            _0x41177d.warned = true;
            var _0x162394 = new Error("Possible EventEmitter memory leak detected. " + _0x41177d.length + " " + String(_0x23c012) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            _0x162394.name = "MaxListenersExceededWarning";
            _0x162394.emitter = _0x1c2163;
            _0x162394.type = _0x23c012;
            _0x162394.count = _0x41177d.length;
            _0x360fb8(_0x162394);
          }
        }
        return _0x1c2163;
      }
      _0x4bb43f.prototype.addListener = function _0x1fd7fa(_0x4f8151, _0x70129a) {
        return _0x349578(this, _0x4f8151, _0x70129a, false);
      };
      _0x4bb43f.prototype.on = _0x4bb43f.prototype.addListener;
      _0x4bb43f.prototype.prependListener = function _0x318ddc(_0x197df0, _0x1b07e7) {
        return _0x349578(this, _0x197df0, _0x1b07e7, true);
      };
      function _0x1f71c4() {
        if (!this.fired) {
          this.target.removeListener(this.type, this.wrapFn);
          this.fired = true;
          if (arguments.length === 0) {
            return this.listener.call(this.target);
          }
          return this.listener.apply(this.target, arguments);
        }
      }
      function _0x1c63c4(_0x3df3e5, _0x24af47, _0x54ce42) {
        var _0x425fce = {
          fired: false,
          wrapFn: undefined,
          target: _0x3df3e5,
          type: _0x24af47,
          listener: _0x54ce42
        };
        var _0xd4db7d = _0x425fce;
        var _0x4b3c3f = _0x1f71c4.bind(_0xd4db7d);
        _0x4b3c3f.listener = _0x54ce42;
        _0xd4db7d.wrapFn = _0x4b3c3f;
        return _0x4b3c3f;
      }
      _0x4bb43f.prototype.once = function _0x487c0e(_0x602ca4, _0x39d18d) {
        _0x5c870c(_0x39d18d);
        this.on(_0x602ca4, _0x1c63c4(this, _0x602ca4, _0x39d18d));
        return this;
      };
      _0x4bb43f.prototype.prependOnceListener = function _0x25d8dd(_0xdd1b76, _0x554b92) {
        _0x5c870c(_0x554b92);
        this.prependListener(_0xdd1b76, _0x1c63c4(this, _0xdd1b76, _0x554b92));
        return this;
      };
      _0x4bb43f.prototype.removeListener = function _0xa68ae9(_0x4f33fa, _0x586ba9) {
        var _0x32c8b7;
        var _0x4ba194;
        var _0x568a39;
        var _0x573d5a;
        var _0x57f684;
        _0x5c870c(_0x586ba9);
        _0x4ba194 = this._events;
        if (_0x4ba194 === undefined) {
          return this;
        }
        _0x32c8b7 = _0x4ba194[_0x4f33fa];
        if (_0x32c8b7 === undefined) {
          return this;
        }
        if (_0x32c8b7 === _0x586ba9 || _0x32c8b7.listener === _0x586ba9) {
          if (--this._eventsCount === 0) {
            this._events = Object.create(null);
          } else {
            delete _0x4ba194[_0x4f33fa];
            if (_0x4ba194.removeListener) {
              this.emit("removeListener", _0x4f33fa, _0x32c8b7.listener || _0x586ba9);
            }
          }
        } else if (typeof _0x32c8b7 !== "function") {
          _0x568a39 = -1;
          for (_0x573d5a = _0x32c8b7.length - 1; _0x573d5a >= 0; _0x573d5a--) {
            if (_0x32c8b7[_0x573d5a] === _0x586ba9 || _0x32c8b7[_0x573d5a].listener === _0x586ba9) {
              _0x57f684 = _0x32c8b7[_0x573d5a].listener;
              _0x568a39 = _0x573d5a;
              break;
            }
          }
          if (_0x568a39 < 0) {
            return this;
          }
          if (_0x568a39 === 0) {
            _0x32c8b7.shift();
          } else {
            _0x5a6521(_0x32c8b7, _0x568a39);
          }
          if (_0x32c8b7.length === 1) {
            _0x4ba194[_0x4f33fa] = _0x32c8b7[0];
          }
          if (_0x4ba194.removeListener !== undefined) {
            this.emit("removeListener", _0x4f33fa, _0x57f684 || _0x586ba9);
          }
        }
        return this;
      };
      _0x4bb43f.prototype.off = _0x4bb43f.prototype.removeListener;
      _0x4bb43f.prototype.removeAllListeners = function _0x12fe82(_0x2c13e7) {
        var _0x31202c;
        var _0x35271c;
        var _0x5b1671;
        _0x35271c = this._events;
        if (_0x35271c === undefined) {
          return this;
        }
        if (_0x35271c.removeListener === undefined) {
          if (arguments.length === 0) {
            this._events = Object.create(null);
            this._eventsCount = 0;
          } else if (_0x35271c[_0x2c13e7] !== undefined) {
            if (--this._eventsCount === 0) {
              this._events = Object.create(null);
            } else {
              delete _0x35271c[_0x2c13e7];
            }
          }
          return this;
        }
        if (arguments.length === 0) {
          var _0x44faaf = Object.keys(_0x35271c);
          var _0x2c40c8;
          for (_0x5b1671 = 0; _0x5b1671 < _0x44faaf.length; ++_0x5b1671) {
            _0x2c40c8 = _0x44faaf[_0x5b1671];
            if (_0x2c40c8 === "removeListener") {
              continue;
            }
            this.removeAllListeners(_0x2c40c8);
          }
          this.removeAllListeners("removeListener");
          this._events = Object.create(null);
          this._eventsCount = 0;
          return this;
        }
        _0x31202c = _0x35271c[_0x2c13e7];
        if (typeof _0x31202c === "function") {
          this.removeListener(_0x2c13e7, _0x31202c);
        } else if (_0x31202c !== undefined) {
          for (_0x5b1671 = _0x31202c.length - 1; _0x5b1671 >= 0; _0x5b1671--) {
            this.removeListener(_0x2c13e7, _0x31202c[_0x5b1671]);
          }
        }
        return this;
      };
      function _0x2c00e1(_0xbd9064, _0x4686d3, _0x2770d3) {
        var _0x3be6b5 = _0xbd9064._events;
        if (_0x3be6b5 === undefined) {
          return [];
        }
        var _0x3a256d = _0x3be6b5[_0x4686d3];
        if (_0x3a256d === undefined) {
          return [];
        }
        if (typeof _0x3a256d === "function") {
          if (_0x2770d3) {
            return [_0x3a256d.listener || _0x3a256d];
          } else {
            return [_0x3a256d];
          }
        }
        if (_0x2770d3) {
          return _0x4998d5(_0x3a256d);
        } else {
          return _0x3e0329(_0x3a256d, _0x3a256d.length);
        }
      }
      _0x4bb43f.prototype.listeners = function _0xa6fdf4(_0x565d12) {
        return _0x2c00e1(this, _0x565d12, true);
      };
      _0x4bb43f.prototype.rawListeners = function _0x1f496b(_0x32bcea) {
        return _0x2c00e1(this, _0x32bcea, false);
      };
      _0x4bb43f.listenerCount = function (_0x49d443, _0x22c27d) {
        if (typeof _0x49d443.listenerCount === "function") {
          return _0x49d443.listenerCount(_0x22c27d);
        } else {
          return _0x2599f8.call(_0x49d443, _0x22c27d);
        }
      };
      _0x4bb43f.prototype.listenerCount = _0x2599f8;
      function _0x2599f8(_0xbcf548) {
        var _0x4f7934 = this._events;
        if (_0x4f7934 !== undefined) {
          var _0x38abc0 = _0x4f7934[_0xbcf548];
          if (typeof _0x38abc0 === "function") {
            return 1;
          } else if (_0x38abc0 !== undefined) {
            return _0x38abc0.length;
          }
        }
        return 0;
      }
      _0x4bb43f.prototype.eventNames = function _0x1bb12d() {
        if (this._eventsCount > 0) {
          return _0xc86d22(this._events);
        } else {
          return [];
        }
      };
      function _0x3e0329(_0x1f4617, _0x26bef5) {
        var _0x352a58 = new Array(_0x26bef5);
        for (var _0x2f68e4 = 0; _0x2f68e4 < _0x26bef5; ++_0x2f68e4) {
          _0x352a58[_0x2f68e4] = _0x1f4617[_0x2f68e4];
        }
        return _0x352a58;
      }
      function _0x5a6521(_0x281c29, _0xf7a9c4) {
        for (; _0xf7a9c4 + 1 < _0x281c29.length; _0xf7a9c4++) {
          _0x281c29[_0xf7a9c4] = _0x281c29[_0xf7a9c4 + 1];
        }
        _0x281c29.pop();
      }
      function _0x4998d5(_0x4150f8) {
        var _0x56ed89 = new Array(_0x4150f8.length);
        for (var _0x603aba = 0; _0x603aba < _0x56ed89.length; ++_0x603aba) {
          _0x56ed89[_0x603aba] = _0x4150f8[_0x603aba].listener || _0x4150f8[_0x603aba];
        }
        return _0x56ed89;
      }
      function _0x597145(_0x382e80, _0x2bad4f) {
        return new Promise(function (_0x307bc6, _0x1ed84c) {
          function _0x3740b4(_0x19b808) {
            _0x382e80.removeListener(_0x2bad4f, _0x318225);
            _0x1ed84c(_0x19b808);
          }
          function _0x318225() {
            if (typeof _0x382e80.removeListener === "function") {
              _0x382e80.removeListener("error", _0x3740b4);
            }
            _0x307bc6([].slice.call(arguments));
          }
          ;
          _0x5dd8db(_0x382e80, _0x2bad4f, _0x318225, {
            once: true
          });
          if (_0x2bad4f !== "error") {
            _0x5960e4(_0x382e80, _0x3740b4, {
              once: true
            });
          }
        });
      }
      function _0x5960e4(_0x165b03, _0x523e36, _0x1d500e) {
        if (typeof _0x165b03.on === "function") {
          _0x5dd8db(_0x165b03, "error", _0x523e36, _0x1d500e);
        }
      }
      function _0x5dd8db(_0x4a9765, _0x4fbb28, _0x17b477, _0x452a6a) {
        if (typeof _0x4a9765.on === "function") {
          if (_0x452a6a.once) {
            _0x4a9765.once(_0x4fbb28, _0x17b477);
          } else {
            _0x4a9765.on(_0x4fbb28, _0x17b477);
          }
        } else if (typeof _0x4a9765.addEventListener === "function") {
          _0x4a9765.addEventListener(_0x4fbb28, function _0x383146(_0x2da9fa) {
            if (_0x452a6a.once) {
              _0x4a9765.removeEventListener(_0x4fbb28, _0x383146);
            }
            _0x17b477(_0x2da9fa);
          });
        } else {
          throw new TypeError("The \"emitter\" argument must be of type EventEmitter. Received type " + typeof _0x4a9765);
        }
      }
    },
    577: function (_0x5db6f7, _0x11e967, _0x55f187) {
      var _0x25f3ed;
      (function (_0x57d75e, _0x981094, _0x17ab14) {
        if (true) {
          _0x25f3ed = function () {
            return _0x17ab14(_0x57d75e);
          }.call(_0x11e967, _0x55f187, _0x11e967, _0x5db6f7);
          if (_0x25f3ed !== undefined) {
            _0x5db6f7.exports = _0x25f3ed;
          }
        } else {}
      })(this, "UUID", function () {
        function _0xc1cf55(_0x54fb4a, _0x156374, _0x65bc83, _0x4b7625, _0x4f1ce0, _0x183382) {
          function _0x158349(_0x2c2619, _0x3f7bbb) {
            var _0x2ad778 = _0x2c2619.toString(16);
            if (_0x2ad778.length < 2) {
              _0x2ad778 = "0" + _0x2ad778;
            }
            if (_0x3f7bbb) {
              _0x2ad778 = _0x2ad778.toUpperCase();
            }
            return _0x2ad778;
          }
          for (var _0x4b764b = _0x156374; _0x4b764b <= _0x65bc83; _0x4b764b++) {
            _0x4f1ce0[_0x183382++] = _0x158349(_0x54fb4a[_0x4b764b], _0x4b7625);
          }
          return _0x4f1ce0;
        }
        function _0x19a917(_0x1f6abd, _0x3c1fee, _0x358ea5, _0x1b1f4c, _0x3addd2) {
          for (var _0x549e3b = _0x3c1fee; _0x549e3b <= _0x358ea5; _0x549e3b += 2) {
            _0x1b1f4c[_0x3addd2++] = parseInt(_0x1f6abd.substr(_0x549e3b, 2), 16);
          }
        }
        var _0x53363a = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#".split("");
        var _0xff3def = [0, 68, 0, 84, 83, 82, 72, 0, 75, 76, 70, 65, 0, 63, 62, 69, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 64, 0, 73, 66, 74, 71, 81, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 0, 78, 67, 0, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 79, 0, 80, 0, 0];
        function _0x40b5ac(_0x32c1b3, _0x501369) {
          if (_0x501369 % 4 !== 0) {
            throw new Error("z85_encode: invalid input length (multiple of 4 expected)");
          }
          var _0x566fb3 = "";
          var _0x35be6a = 0;
          var _0xc6dc2f = 0;
          while (_0x35be6a < _0x501369) {
            _0xc6dc2f = _0xc6dc2f * 256 + _0x32c1b3[_0x35be6a++];
            if (_0x35be6a % 4 === 0) {
              var _0x5243df = 52200625;
              while (_0x5243df >= 1) {
                var _0x3108d1 = Math.floor(_0xc6dc2f / _0x5243df) % 85;
                _0x566fb3 += _0x53363a[_0x3108d1];
                _0x5243df /= 85;
              }
              _0xc6dc2f = 0;
            }
          }
          return _0x566fb3;
        }
        function _0x5e3622(_0x107673, _0x3e31ce) {
          var _0x257eac = _0x107673.length;
          if (_0x257eac % 5 !== 0) {
            throw new Error("z85_decode: invalid input length (multiple of 5 expected)");
          }
          if (typeof _0x3e31ce === "undefined") {
            _0x3e31ce = new Array(_0x257eac * 4 / 5);
          }
          var _0x549062 = 0;
          var _0x3ab622 = 0;
          var _0x54fe4e = 0;
          while (_0x549062 < _0x257eac) {
            var _0x3edcbd = _0x107673.charCodeAt(_0x549062++) - 32;
            if (_0x3edcbd < 0 || _0x3edcbd >= _0xff3def.length) {
              break;
            }
            _0x54fe4e = _0x54fe4e * 85 + _0xff3def[_0x3edcbd];
            if (_0x549062 % 5 === 0) {
              var _0x3f18b4 = 16777216;
              while (_0x3f18b4 >= 1) {
                _0x3e31ce[_0x3ab622++] = Math.trunc(_0x54fe4e / _0x3f18b4 % 256);
                _0x3f18b4 /= 256;
              }
              _0x54fe4e = 0;
            }
          }
          return _0x3e31ce;
        }
        function _0x340bcb(_0x446510, _0x2a497d) {
          var _0x3ad36f = {
            ibits: 8,
            obits: 8,
            obigendian: true
          };
          for (var _0x430bf5 in _0x2a497d) {
            if (typeof _0x3ad36f[_0x430bf5] !== "undefined") {
              _0x3ad36f[_0x430bf5] = _0x2a497d[_0x430bf5];
            }
          }
          var _0x165513 = [];
          var _0x2d7d38 = 0;
          var _0x57f436;
          var _0x3ce5cd;
          var _0x5052b9 = 0;
          var _0x51210d;
          var _0x5a110c = 0;
          var _0x113286 = _0x446510.length;
          while (true) {
            if (_0x5052b9 === 0) {
              _0x3ce5cd = _0x446510.charCodeAt(_0x2d7d38++);
            }
            _0x57f436 = _0x3ce5cd >> _0x3ad36f.ibits - (_0x5052b9 + 8) & 255;
            _0x5052b9 = (_0x5052b9 + 8) % _0x3ad36f.ibits;
            if (_0x3ad36f.obigendian) {
              if (_0x5a110c === 0) {
                _0x51210d = _0x57f436 << _0x3ad36f.obits - 8;
              } else {
                _0x51210d |= _0x57f436 << _0x3ad36f.obits - 8 - _0x5a110c;
              }
            } else if (_0x5a110c === 0) {
              _0x51210d = _0x57f436;
            } else {
              _0x51210d |= _0x57f436 << _0x5a110c;
            }
            _0x5a110c = (_0x5a110c + 8) % _0x3ad36f.obits;
            if (_0x5a110c === 0) {
              _0x165513.push(_0x51210d);
              if (_0x2d7d38 >= _0x113286) {
                break;
              }
            }
          }
          return _0x165513;
        }
        function _0x5d8928(_0x4f54d1, _0x4b63b2) {
          var _0x578980 = {
            ibits: 32,
            ibigendian: true
          };
          for (var _0x4f65e6 in _0x4b63b2) {
            if (typeof _0x578980[_0x4f65e6] !== "undefined") {
              _0x578980[_0x4f65e6] = _0x4b63b2[_0x4f65e6];
            }
          }
          var _0x4248cc = "";
          var _0x557a3e = 4294967295;
          if (_0x578980.ibits < 32) {
            _0x557a3e = (1 << _0x578980.ibits) - 1;
          }
          var _0x4e9a86 = _0x4f54d1.length;
          for (var _0x860fc5 = 0; _0x860fc5 < _0x4e9a86; _0x860fc5++) {
            var _0x56eba9 = _0x4f54d1[_0x860fc5] & _0x557a3e;
            for (var _0xf16e90 = 0; _0xf16e90 < _0x578980.ibits; _0xf16e90 += 8) {
              if (_0x578980.ibigendian) {
                _0x4248cc += String.fromCharCode(_0x56eba9 >> _0x578980.ibits - 8 - _0xf16e90 & 255);
              } else {
                _0x4248cc += String.fromCharCode(_0x56eba9 >> _0xf16e90 & 255);
              }
            }
          }
          return _0x4248cc;
        }
        var _0x50a685 = 8;
        var _0x3080bd = 8;
        var _0x186e30 = 256;
        function _0x1732db(_0x21766f, _0x5d513b, _0x378c90, _0x109428, _0x1f448b, _0x3e0cac, _0x5e32fa, _0x2aa377) {
          return [_0x2aa377, _0x5e32fa, _0x3e0cac, _0x1f448b, _0x109428, _0x378c90, _0x5d513b, _0x21766f];
        }
        function _0x82f2dc() {
          return _0x1732db(0, 0, 0, 0, 0, 0, 0, 0);
        }
        function _0x8c7876(_0x52901c) {
          return _0x52901c.slice(0);
        }
        function _0x5df45a(_0x23de36) {
          var _0x287dff = _0x82f2dc();
          for (var _0x3b4cbf = 0; _0x3b4cbf < _0x50a685; _0x3b4cbf++) {
            _0x287dff[_0x3b4cbf] = Math.floor(_0x23de36 % _0x186e30);
            _0x23de36 /= _0x186e30;
          }
          return _0x287dff;
        }
        function _0x450ce9(_0x4aa1ae) {
          var _0x280e10 = 0;
          for (var _0x37fc46 = _0x50a685 - 1; _0x37fc46 >= 0; _0x37fc46--) {
            _0x280e10 *= _0x186e30;
            _0x280e10 += _0x4aa1ae[_0x37fc46];
          }
          return Math.floor(_0x280e10);
        }
        function _0x3b8764(_0x58a3b7, _0x5cfc83) {
          var _0x2e8aa4 = 0;
          for (var _0x43a586 = 0; _0x43a586 < _0x50a685; _0x43a586++) {
            _0x2e8aa4 += _0x58a3b7[_0x43a586] + _0x5cfc83[_0x43a586];
            _0x58a3b7[_0x43a586] = Math.floor(_0x2e8aa4 % _0x186e30);
            _0x2e8aa4 = Math.floor(_0x2e8aa4 / _0x186e30);
          }
          return _0x2e8aa4;
        }
        function _0x35ca84(_0x4c302c, _0x643170) {
          var _0x26cab9 = 0;
          for (var _0x54a88a = 0; _0x54a88a < _0x50a685; _0x54a88a++) {
            _0x26cab9 += _0x4c302c[_0x54a88a] * _0x643170;
            _0x4c302c[_0x54a88a] = Math.floor(_0x26cab9 % _0x186e30);
            _0x26cab9 = Math.floor(_0x26cab9 / _0x186e30);
          }
          return _0x26cab9;
        }
        function _0x3d3c65(_0x3770ea, _0x17b5a7) {
          var _0xec5071;
          var _0x3953cf;
          var _0x1cfec1 = new Array(_0x50a685 + _0x50a685);
          for (_0xec5071 = 0; _0xec5071 < _0x50a685 + _0x50a685; _0xec5071++) {
            _0x1cfec1[_0xec5071] = 0;
          }
          var _0x442167;
          for (_0xec5071 = 0; _0xec5071 < _0x50a685; _0xec5071++) {
            _0x442167 = 0;
            for (_0x3953cf = 0; _0x3953cf < _0x50a685; _0x3953cf++) {
              _0x442167 += _0x3770ea[_0xec5071] * _0x17b5a7[_0x3953cf] + _0x1cfec1[_0xec5071 + _0x3953cf];
              _0x1cfec1[_0xec5071 + _0x3953cf] = _0x442167 % _0x186e30;
              _0x442167 /= _0x186e30;
            }
            for (; _0x3953cf < _0x50a685 + _0x50a685 - _0xec5071; _0x3953cf++) {
              _0x442167 += _0x1cfec1[_0xec5071 + _0x3953cf];
              _0x1cfec1[_0xec5071 + _0x3953cf] = _0x442167 % _0x186e30;
              _0x442167 /= _0x186e30;
            }
          }
          for (_0xec5071 = 0; _0xec5071 < _0x50a685; _0xec5071++) {
            _0x3770ea[_0xec5071] = _0x1cfec1[_0xec5071];
          }
          return _0x1cfec1.slice(_0x50a685, _0x50a685);
        }
        function _0x3e546c(_0x3260fe, _0x25e87d) {
          for (var _0x2f84ec = 0; _0x2f84ec < _0x50a685; _0x2f84ec++) {
            _0x3260fe[_0x2f84ec] &= _0x25e87d[_0x2f84ec];
          }
          return _0x3260fe;
        }
        function _0x46e2f5(_0x58dd50, _0x2f9e73) {
          for (var _0x517624 = 0; _0x517624 < _0x50a685; _0x517624++) {
            _0x58dd50[_0x517624] |= _0x2f9e73[_0x517624];
          }
          return _0x58dd50;
        }
        function _0x4a4a05(_0x5caa77, _0x2075de) {
          var _0x266e6f = _0x82f2dc();
          if (_0x2075de % _0x3080bd !== 0) {
            throw new Error("ui64_rorn: only bit rotations supported with a multiple of digit bits");
          }
          var _0x48a447 = Math.floor(_0x2075de / _0x3080bd);
          for (var _0x1c8fc4 = 0; _0x1c8fc4 < _0x48a447; _0x1c8fc4++) {
            for (var _0x5e39d3 = _0x50a685 - 1 - 1; _0x5e39d3 >= 0; _0x5e39d3--) {
              _0x266e6f[_0x5e39d3 + 1] = _0x266e6f[_0x5e39d3];
            }
            _0x266e6f[0] = _0x5caa77[0];
            for (_0x5e39d3 = 0; _0x5e39d3 < _0x50a685 - 1; _0x5e39d3++) {
              _0x5caa77[_0x5e39d3] = _0x5caa77[_0x5e39d3 + 1];
            }
            _0x5caa77[_0x5e39d3] = 0;
          }
          return _0x450ce9(_0x266e6f);
        }
        function _0x100a6f(_0x55603a, _0x25ad66) {
          if (_0x25ad66 > _0x50a685 * _0x3080bd) {
            throw new Error("ui64_ror: invalid number of bits to shift");
          }
          var _0x3213b2 = new Array(_0x50a685 + _0x50a685);
          var _0x282dbd;
          for (_0x282dbd = 0; _0x282dbd < _0x50a685; _0x282dbd++) {
            _0x3213b2[_0x282dbd + _0x50a685] = _0x55603a[_0x282dbd];
            _0x3213b2[_0x282dbd] = 0;
          }
          var _0x644bb9 = Math.floor(_0x25ad66 / _0x3080bd);
          var _0x18431f = _0x25ad66 % _0x3080bd;
          for (_0x282dbd = _0x644bb9; _0x282dbd < _0x50a685 + _0x50a685 - 1; _0x282dbd++) {
            _0x3213b2[_0x282dbd - _0x644bb9] = (_0x3213b2[_0x282dbd] >>> _0x18431f | _0x3213b2[_0x282dbd + 1] << _0x3080bd - _0x18431f) & (1 << _0x3080bd) - 1;
          }
          _0x3213b2[_0x50a685 + _0x50a685 - 1 - _0x644bb9] = _0x3213b2[_0x50a685 + _0x50a685 - 1] >>> _0x18431f & (1 << _0x3080bd) - 1;
          for (_0x282dbd = _0x50a685 + _0x50a685 - 1 - _0x644bb9 + 1; _0x282dbd < _0x50a685 + _0x50a685; _0x282dbd++) {
            _0x3213b2[_0x282dbd] = 0;
          }
          for (_0x282dbd = 0; _0x282dbd < _0x50a685; _0x282dbd++) {
            _0x55603a[_0x282dbd] = _0x3213b2[_0x282dbd + _0x50a685];
          }
          return _0x3213b2.slice(0, _0x50a685);
        }
        function _0x8b49de(_0x19af44, _0x44a928) {
          if (_0x44a928 > _0x50a685 * _0x3080bd) {
            throw new Error("ui64_rol: invalid number of bits to shift");
          }
          var _0x405030 = new Array(_0x50a685 + _0x50a685);
          var _0x486da5;
          for (_0x486da5 = 0; _0x486da5 < _0x50a685; _0x486da5++) {
            _0x405030[_0x486da5 + _0x50a685] = 0;
            _0x405030[_0x486da5] = _0x19af44[_0x486da5];
          }
          var _0x2788c9 = Math.floor(_0x44a928 / _0x3080bd);
          var _0x1db233 = _0x44a928 % _0x3080bd;
          for (_0x486da5 = _0x50a685 - 1 - _0x2788c9; _0x486da5 > 0; _0x486da5--) {
            _0x405030[_0x486da5 + _0x2788c9] = (_0x405030[_0x486da5] << _0x1db233 | _0x405030[_0x486da5 - 1] >>> _0x3080bd - _0x1db233) & (1 << _0x3080bd) - 1;
          }
          _0x405030[0 + _0x2788c9] = _0x405030[0] << _0x1db233 & (1 << _0x3080bd) - 1;
          for (_0x486da5 = 0 + _0x2788c9 - 1; _0x486da5 >= 0; _0x486da5--) {
            _0x405030[_0x486da5] = 0;
          }
          for (_0x486da5 = 0; _0x486da5 < _0x50a685; _0x486da5++) {
            _0x19af44[_0x486da5] = _0x405030[_0x486da5];
          }
          return _0x405030.slice(_0x50a685, _0x50a685);
        }
        function _0x13b4ac(_0x413fc3, _0x3b6c56) {
          for (var _0x23f874 = 0; _0x23f874 < _0x50a685; _0x23f874++) {
            _0x413fc3[_0x23f874] ^= _0x3b6c56[_0x23f874];
          }
        }
        function _0xafc9ab(_0x126f8d, _0xd1fd7) {
          var _0x26d503 = (_0x126f8d & 65535) + (_0xd1fd7 & 65535);
          var _0x28e49a = (_0x126f8d >> 16) + (_0xd1fd7 >> 16) + (_0x26d503 >> 16);
          return _0x28e49a << 16 | _0x26d503 & 65535;
        }
        function _0x229883(_0x535439, _0x2db638) {
          return _0x535439 << _0x2db638 & 4294967295 | _0x535439 >>> 32 - _0x2db638 & 4294967295;
        }
        function _0x300f48(_0x5c95bd, _0x27bfaf) {
          function _0x1003a3(_0x3e9f0f, _0x3d4e99, _0x2448e3, _0x1dd891) {
            if (_0x3e9f0f < 20) {
              return _0x3d4e99 & _0x2448e3 | ~_0x3d4e99 & _0x1dd891;
            }
            if (_0x3e9f0f < 40) {
              return _0x3d4e99 ^ _0x2448e3 ^ _0x1dd891;
            }
            if (_0x3e9f0f < 60) {
              return _0x3d4e99 & _0x2448e3 | _0x3d4e99 & _0x1dd891 | _0x2448e3 & _0x1dd891;
            }
            return _0x3d4e99 ^ _0x2448e3 ^ _0x1dd891;
          }
          function _0x6b0af6(_0x4b1a48) {
            if (_0x4b1a48 < 20) {
              return 1518500249;
            } else if (_0x4b1a48 < 40) {
              return 1859775393;
            } else if (_0x4b1a48 < 60) {
              return -1894007588;
            } else {
              return -899497514;
            }
          }
          _0x5c95bd[_0x27bfaf >> 5] |= 128 << 24 - _0x27bfaf % 32;
          _0x5c95bd[(_0x27bfaf + 64 >> 9 << 4) + 15] = _0x27bfaf;
          var _0x18d530 = Array(80);
          var _0x228a18 = 1732584193;
          var _0x2ed4e9 = -271733879;
          var _0x279f9d = -1732584194;
          var _0x5480da = 271733878;
          var _0xcf94ad = -1009589776;
          for (var _0x135962 = 0; _0x135962 < _0x5c95bd.length; _0x135962 += 16) {
            var _0x4cd8bd = _0x228a18;
            var _0x4f3e5f = _0x2ed4e9;
            var _0x127992 = _0x279f9d;
            var _0x1badea = _0x5480da;
            var _0x4dbe7a = _0xcf94ad;
            for (var _0x3868e0 = 0; _0x3868e0 < 80; _0x3868e0++) {
              if (_0x3868e0 < 16) {
                _0x18d530[_0x3868e0] = _0x5c95bd[_0x135962 + _0x3868e0];
              } else {
                _0x18d530[_0x3868e0] = _0x229883(_0x18d530[_0x3868e0 - 3] ^ _0x18d530[_0x3868e0 - 8] ^ _0x18d530[_0x3868e0 - 14] ^ _0x18d530[_0x3868e0 - 16], 1);
              }
              var _0x4669f8 = _0xafc9ab(_0xafc9ab(_0x229883(_0x228a18, 5), _0x1003a3(_0x3868e0, _0x2ed4e9, _0x279f9d, _0x5480da)), _0xafc9ab(_0xafc9ab(_0xcf94ad, _0x18d530[_0x3868e0]), _0x6b0af6(_0x3868e0)));
              _0xcf94ad = _0x5480da;
              _0x5480da = _0x279f9d;
              _0x279f9d = _0x229883(_0x2ed4e9, 30);
              _0x2ed4e9 = _0x228a18;
              _0x228a18 = _0x4669f8;
            }
            _0x228a18 = _0xafc9ab(_0x228a18, _0x4cd8bd);
            _0x2ed4e9 = _0xafc9ab(_0x2ed4e9, _0x4f3e5f);
            _0x279f9d = _0xafc9ab(_0x279f9d, _0x127992);
            _0x5480da = _0xafc9ab(_0x5480da, _0x1badea);
            _0xcf94ad = _0xafc9ab(_0xcf94ad, _0x4dbe7a);
          }
          return [_0x228a18, _0x2ed4e9, _0x279f9d, _0x5480da, _0xcf94ad];
        }
        function _0x2dc7ea(_0x17df2c) {
          return _0x5d8928(_0x300f48(_0x340bcb(_0x17df2c, {
            ibits: 8,
            obits: 32,
            obigendian: true
          }), _0x17df2c.length * 8), {
            ibits: 32,
            ibigendian: true
          });
        }
        function _0x2c9bfc(_0x1a60d1, _0x2b61e0) {
          function _0x544977(_0x255a60, _0x45bf20, _0x4e3d01, _0x4a09a7, _0x50a77d, _0x40e5c8) {
            return _0xafc9ab(_0x229883(_0xafc9ab(_0xafc9ab(_0x45bf20, _0x255a60), _0xafc9ab(_0x4a09a7, _0x40e5c8)), _0x50a77d), _0x4e3d01);
          }
          function _0x1e6303(_0x33a84a, _0x1289ab, _0x335505, _0x2056cc, _0x16daa9, _0x1629a7, _0x9e6736) {
            return _0x544977(_0x1289ab & _0x335505 | ~_0x1289ab & _0x2056cc, _0x33a84a, _0x1289ab, _0x16daa9, _0x1629a7, _0x9e6736);
          }
          function _0x2c9b18(_0x1e556e, _0x3175db, _0x1429b1, _0x13e90e, _0x2526fa, _0x9a3955, _0x5b1efe) {
            return _0x544977(_0x3175db & _0x13e90e | _0x1429b1 & ~_0x13e90e, _0x1e556e, _0x3175db, _0x2526fa, _0x9a3955, _0x5b1efe);
          }
          function _0xd0e03b(_0x24bdf0, _0xcf888f, _0x3f35c1, _0x5eef37, _0x31dcaa, _0x19f120, _0x44dea2) {
            return _0x544977(_0xcf888f ^ _0x3f35c1 ^ _0x5eef37, _0x24bdf0, _0xcf888f, _0x31dcaa, _0x19f120, _0x44dea2);
          }
          function _0xdcddd7(_0x319dad, _0x3040e7, _0x288fd3, _0x40cc7a, _0x463b79, _0x4ea62a, _0x34a8b8) {
            return _0x544977(_0x288fd3 ^ (_0x3040e7 | ~_0x40cc7a), _0x319dad, _0x3040e7, _0x463b79, _0x4ea62a, _0x34a8b8);
          }
          _0x1a60d1[_0x2b61e0 >> 5] |= 128 << _0x2b61e0 % 32;
          _0x1a60d1[(_0x2b61e0 + 64 >>> 9 << 4) + 14] = _0x2b61e0;
          var _0x4fc5c5 = 1732584193;
          var _0x1305ef = -271733879;
          var _0x27da9e = -1732584194;
          var _0x2c2644 = 271733878;
          for (var _0x953b17 = 0; _0x953b17 < _0x1a60d1.length; _0x953b17 += 16) {
            var _0x43212d = _0x4fc5c5;
            var _0x171547 = _0x1305ef;
            var _0xc4fac1 = _0x27da9e;
            var _0x51a183 = _0x2c2644;
            _0x4fc5c5 = _0x1e6303(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 0], 7, -680876936);
            _0x2c2644 = _0x1e6303(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 1], 12, -389564586);
            _0x27da9e = _0x1e6303(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 2], 17, 606105819);
            _0x1305ef = _0x1e6303(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 3], 22, -1044525330);
            _0x4fc5c5 = _0x1e6303(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 4], 7, -176418897);
            _0x2c2644 = _0x1e6303(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 5], 12, 1200080426);
            _0x27da9e = _0x1e6303(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 6], 17, -1473231341);
            _0x1305ef = _0x1e6303(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 7], 22, -45705983);
            _0x4fc5c5 = _0x1e6303(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 8], 7, 1770035416);
            _0x2c2644 = _0x1e6303(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 9], 12, -1958414417);
            _0x27da9e = _0x1e6303(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 10], 17, -42063);
            _0x1305ef = _0x1e6303(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 11], 22, -1990404162);
            _0x4fc5c5 = _0x1e6303(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 12], 7, 1804603682);
            _0x2c2644 = _0x1e6303(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 13], 12, -40341101);
            _0x27da9e = _0x1e6303(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 14], 17, -1502002290);
            _0x1305ef = _0x1e6303(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 15], 22, 1236535329);
            _0x4fc5c5 = _0x2c9b18(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 1], 5, -165796510);
            _0x2c2644 = _0x2c9b18(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 6], 9, -1069501632);
            _0x27da9e = _0x2c9b18(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 11], 14, 643717713);
            _0x1305ef = _0x2c9b18(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 0], 20, -373897302);
            _0x4fc5c5 = _0x2c9b18(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 5], 5, -701558691);
            _0x2c2644 = _0x2c9b18(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 10], 9, 38016083);
            _0x27da9e = _0x2c9b18(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 15], 14, -660478335);
            _0x1305ef = _0x2c9b18(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 4], 20, -405537848);
            _0x4fc5c5 = _0x2c9b18(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 9], 5, 568446438);
            _0x2c2644 = _0x2c9b18(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 14], 9, -1019803690);
            _0x27da9e = _0x2c9b18(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 3], 14, -187363961);
            _0x1305ef = _0x2c9b18(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 8], 20, 1163531501);
            _0x4fc5c5 = _0x2c9b18(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 13], 5, -1444681467);
            _0x2c2644 = _0x2c9b18(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 2], 9, -51403784);
            _0x27da9e = _0x2c9b18(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 7], 14, 1735328473);
            _0x1305ef = _0x2c9b18(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 12], 20, -1926607734);
            _0x4fc5c5 = _0xd0e03b(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 5], 4, -378558);
            _0x2c2644 = _0xd0e03b(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 8], 11, -2022574463);
            _0x27da9e = _0xd0e03b(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 11], 16, 1839030562);
            _0x1305ef = _0xd0e03b(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 14], 23, -35309556);
            _0x4fc5c5 = _0xd0e03b(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 1], 4, -1530992060);
            _0x2c2644 = _0xd0e03b(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 4], 11, 1272893353);
            _0x27da9e = _0xd0e03b(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 7], 16, -155497632);
            _0x1305ef = _0xd0e03b(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 10], 23, -1094730640);
            _0x4fc5c5 = _0xd0e03b(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 13], 4, 681279174);
            _0x2c2644 = _0xd0e03b(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 0], 11, -358537222);
            _0x27da9e = _0xd0e03b(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 3], 16, -722521979);
            _0x1305ef = _0xd0e03b(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 6], 23, 76029189);
            _0x4fc5c5 = _0xd0e03b(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 9], 4, -640364487);
            _0x2c2644 = _0xd0e03b(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 12], 11, -421815835);
            _0x27da9e = _0xd0e03b(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 15], 16, 530742520);
            _0x1305ef = _0xd0e03b(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 2], 23, -995338651);
            _0x4fc5c5 = _0xdcddd7(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 0], 6, -198630844);
            _0x2c2644 = _0xdcddd7(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 7], 10, 1126891415);
            _0x27da9e = _0xdcddd7(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 14], 15, -1416354905);
            _0x1305ef = _0xdcddd7(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 5], 21, -57434055);
            _0x4fc5c5 = _0xdcddd7(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 12], 6, 1700485571);
            _0x2c2644 = _0xdcddd7(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 3], 10, -1894986606);
            _0x27da9e = _0xdcddd7(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 10], 15, -1051523);
            _0x1305ef = _0xdcddd7(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 1], 21, -2054922799);
            _0x4fc5c5 = _0xdcddd7(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 8], 6, 1873313359);
            _0x2c2644 = _0xdcddd7(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 15], 10, -30611744);
            _0x27da9e = _0xdcddd7(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 6], 15, -1560198380);
            _0x1305ef = _0xdcddd7(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 13], 21, 1309151649);
            _0x4fc5c5 = _0xdcddd7(_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644, _0x1a60d1[_0x953b17 + 4], 6, -145523070);
            _0x2c2644 = _0xdcddd7(_0x2c2644, _0x4fc5c5, _0x1305ef, _0x27da9e, _0x1a60d1[_0x953b17 + 11], 10, -1120210379);
            _0x27da9e = _0xdcddd7(_0x27da9e, _0x2c2644, _0x4fc5c5, _0x1305ef, _0x1a60d1[_0x953b17 + 2], 15, 718787259);
            _0x1305ef = _0xdcddd7(_0x1305ef, _0x27da9e, _0x2c2644, _0x4fc5c5, _0x1a60d1[_0x953b17 + 9], 21, -343485551);
            _0x4fc5c5 = _0xafc9ab(_0x4fc5c5, _0x43212d);
            _0x1305ef = _0xafc9ab(_0x1305ef, _0x171547);
            _0x27da9e = _0xafc9ab(_0x27da9e, _0xc4fac1);
            _0x2c2644 = _0xafc9ab(_0x2c2644, _0x51a183);
          }
          return [_0x4fc5c5, _0x1305ef, _0x27da9e, _0x2c2644];
        }
        function _0x2bfd14(_0x1077a2) {
          return _0x5d8928(_0x2c9bfc(_0x340bcb(_0x1077a2, {
            ibits: 8,
            obits: 32,
            obigendian: false
          }), _0x1077a2.length * 8), {
            ibits: 32,
            ibigendian: false
          });
        }
        function _0xd988bc(_0x4049f0) {
          this.mul = _0x1732db(88, 81, 244, 45, 76, 149, 127, 45);
          this.inc = _0x1732db(20, 5, 123, 126, 247, 103, 129, 79);
          this.mask = _0x1732db(0, 0, 0, 0, 255, 255, 255, 255);
          this.state = _0x8c7876(this.inc);
          this.next();
          _0x3e546c(this.state, this.mask);
          var _0x5db13a;
          if (_0x4049f0 !== undefined) {
            _0x4049f0 = _0x5df45a(_0x4049f0 >>> 0);
          } else if (typeof window === "object" && typeof window.crypto === "object" && typeof window.crypto.getRandomValues === "function") {
            _0x5db13a = new Uint32Array(2);
            window.crypto.getRandomValues(_0x5db13a);
            _0x4049f0 = _0x46e2f5(_0x5df45a(_0x5db13a[0] >>> 0), _0x100a6f(_0x5df45a(_0x5db13a[1] >>> 0), 32));
          } else if (typeof globalThis === "object" && typeof globalThis.crypto === "object" && typeof globalThis.crypto.getRandomValues === "function") {
            _0x5db13a = new Uint32Array(2);
            globalThis.crypto.getRandomValues(_0x5db13a);
            _0x4049f0 = _0x46e2f5(_0x5df45a(_0x5db13a[0] >>> 0), _0x100a6f(_0x5df45a(_0x5db13a[1] >>> 0), 32));
          } else {
            _0x4049f0 = _0x5df45a(Math.random() * 4294967295 >>> 0);
            _0x46e2f5(_0x4049f0, _0x100a6f(_0x5df45a(new Date().getTime()), 32));
          }
          _0x46e2f5(this.state, _0x4049f0);
          this.next();
        }
        _0xd988bc.prototype.next = function () {
          var _0x225f60 = _0x8c7876(this.state);
          _0x3d3c65(this.state, this.mul);
          _0x3b8764(this.state, this.inc);
          var _0x7834dd = _0x8c7876(_0x225f60);
          _0x100a6f(_0x7834dd, 18);
          _0x13b4ac(_0x7834dd, _0x225f60);
          _0x100a6f(_0x7834dd, 27);
          var _0x35e0dc = _0x8c7876(_0x225f60);
          _0x100a6f(_0x35e0dc, 59);
          _0x3e546c(_0x7834dd, this.mask);
          var _0x4bc475 = _0x450ce9(_0x35e0dc);
          var _0x5cf0fc = _0x8c7876(_0x7834dd);
          _0x8b49de(_0x5cf0fc, 32 - _0x4bc475);
          _0x100a6f(_0x7834dd, _0x4bc475);
          _0x13b4ac(_0x7834dd, _0x5cf0fc);
          return _0x450ce9(_0x7834dd);
        };
        _0xd988bc.prototype.reseed = function (_0x34a6cf) {
          if (typeof _0x34a6cf !== "string") {
            throw new Error("UUID: PCG: seed: invalid argument (string expected)");
          }
          var _0x40cba7 = _0x300f48(_0x340bcb(_0x34a6cf, {
            ibits: 8,
            obits: 32,
            obigendian: true
          }), _0x34a6cf.length * 8);
          for (var _0x450995 = 0; _0x450995 < _0x40cba7.length; _0x450995++) {
            _0x13b4ac(_0x1e346a.state, _0x5df45a(_0x40cba7[_0x450995] >>> 0));
          }
        };
        var _0x1e346a = new _0xd988bc();
        _0xd988bc.reseed = function (_0x241531) {
          _0x1e346a.reseed(_0x241531);
        };
        function _0x341cad(_0xccb20f, _0x891747) {
          var _0x1e04dd = [];
          for (var _0x26d123 = 0; _0x26d123 < _0xccb20f; _0x26d123++) {
            _0x1e04dd[_0x26d123] = _0x1e346a.next() % _0x891747;
          }
          return _0x1e04dd;
        }
        var _0x562890 = 0;
        var _0x6cf4e3 = 0;
        function _0x45afe0() {
          if (arguments.length === 1 && typeof arguments[0] === "string") {
            this.parse.apply(this, arguments);
          } else if (arguments.length >= 1 && typeof arguments[0] === "number") {
            this.make.apply(this, arguments);
          } else if (arguments.length >= 1) {
            throw new Error("UUID: constructor: invalid arguments");
          } else {
            for (var _0x436c8 = 0; _0x436c8 < 16; _0x436c8++) {
              this[_0x436c8] = 0;
            }
          }
        }
        if (typeof Uint8Array !== "undefined") {
          _0x45afe0.prototype = new Uint8Array(16);
        } else if (Buffer) {
          _0x45afe0.prototype = Buffer.alloc(16);
        } else {
          _0x45afe0.prototype = new Array(16);
        }
        _0x45afe0.prototype.constructor = _0x45afe0;
        _0x45afe0.prototype.make = function (_0x5b7490) {
          var _0x484ae6;
          var _0x42987b = this;
          if (_0x5b7490 === 1) {
            var _0x277ef8 = new Date();
            var _0x24baa8 = _0x277ef8.getTime();
            if (_0x24baa8 !== _0x562890) {
              _0x6cf4e3 = 0;
            } else {
              _0x6cf4e3++;
            }
            _0x562890 = _0x24baa8;
            var _0x35fad2 = _0x5df45a(_0x24baa8);
            _0x35ca84(_0x35fad2, 10000);
            _0x3b8764(_0x35fad2, _0x1732db(1, 178, 29, 210, 19, 129, 64, 0));
            if (_0x6cf4e3 > 0) {
              _0x3b8764(_0x35fad2, _0x5df45a(_0x6cf4e3));
            }
            var _0x5037b6;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[3] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[2] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[1] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[0] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[5] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[4] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[7] = _0x5037b6 & 255;
            _0x5037b6 = _0x4a4a05(_0x35fad2, 8);
            _0x42987b[6] = _0x5037b6 & 15;
            var _0x3ef973 = _0x341cad(2, 255);
            _0x42987b[8] = _0x3ef973[0];
            _0x42987b[9] = _0x3ef973[1];
            var _0x292977 = _0x341cad(6, 255);
            _0x292977[0] |= 1;
            _0x292977[0] |= 2;
            for (_0x484ae6 = 0; _0x484ae6 < 6; _0x484ae6++) {
              _0x42987b[10 + _0x484ae6] = _0x292977[_0x484ae6];
            }
          } else if (_0x5b7490 === 4) {
            var _0x3ac338 = _0x341cad(16, 255);
            for (_0x484ae6 = 0; _0x484ae6 < 16; _0x484ae6++) {
              this[_0x484ae6] = _0x3ac338[_0x484ae6];
            }
          } else if (_0x5b7490 === 3 || _0x5b7490 === 5) {
            var _0x1fe069 = "";
            var _0x4676e4 = typeof arguments[1] === "object" && arguments[1] instanceof _0x45afe0 ? arguments[1] : new _0x45afe0().parse(arguments[1]);
            for (_0x484ae6 = 0; _0x484ae6 < 16; _0x484ae6++) {
              _0x1fe069 += String.fromCharCode(_0x4676e4[_0x484ae6]);
            }
            _0x1fe069 += arguments[2];
            var _0x42da5c = _0x5b7490 === 3 ? _0x2bfd14(_0x1fe069) : _0x2dc7ea(_0x1fe069);
            for (_0x484ae6 = 0; _0x484ae6 < 16; _0x484ae6++) {
              _0x42987b[_0x484ae6] = _0x42da5c.charCodeAt(_0x484ae6);
            }
          } else {
            throw new Error("UUID: make: invalid version");
          }
          _0x42987b[6] &= 15;
          _0x42987b[6] |= _0x5b7490 << 4;
          _0x42987b[8] &= 63;
          _0x42987b[8] |= 2 << 6;
          return _0x42987b;
        };
        _0x45afe0.prototype.format = function (_0x1c13c7) {
          var _0x4c5040;
          var _0x44039c;
          if (_0x1c13c7 === "z85") {
            _0x4c5040 = _0x40b5ac(this, 16);
          } else if (_0x1c13c7 === "b16") {
            _0x44039c = Array(32);
            _0xc1cf55(this, 0, 15, true, _0x44039c, 0);
            _0x4c5040 = _0x44039c.join("");
          } else if (_0x1c13c7 === undefined || _0x1c13c7 === "std") {
            _0x44039c = new Array(36);
            _0xc1cf55(this, 0, 3, false, _0x44039c, 0);
            _0x44039c[8] = "-";
            _0xc1cf55(this, 4, 5, false, _0x44039c, 9);
            _0x44039c[13] = "-";
            _0xc1cf55(this, 6, 7, false, _0x44039c, 14);
            _0x44039c[18] = "-";
            _0xc1cf55(this, 8, 9, false, _0x44039c, 19);
            _0x44039c[23] = "-";
            _0xc1cf55(this, 10, 15, false, _0x44039c, 24);
            _0x4c5040 = _0x44039c.join("");
          }
          return _0x4c5040;
        };
        _0x45afe0.prototype.toString = function (_0x586974) {
          return this.format(_0x586974);
        };
        _0x45afe0.prototype.toJSON = function () {
          return this.format("std");
        };
        _0x45afe0.prototype.parse = function (_0x14eeba, _0x12b343) {
          if (typeof _0x14eeba !== "string") {
            throw new Error("UUID: parse: invalid argument (type string expected)");
          }
          if (_0x12b343 === "z85") {
            _0x5e3622(_0x14eeba, this);
          } else if (_0x12b343 === "b16") {
            _0x19a917(_0x14eeba, 0, 35, this, 0);
          } else if (_0x12b343 === undefined || _0x12b343 === "std") {
            var _0x36e3e0 = {
              nil: "00000000-0000-0000-0000-000000000000",
              "ns:DNS": "6ba7b810-9dad-11d1-80b4-00c04fd430c8",
              "ns:URL": "6ba7b811-9dad-11d1-80b4-00c04fd430c8",
              "ns:OID": "6ba7b812-9dad-11d1-80b4-00c04fd430c8",
              "ns:X500": "6ba7b814-9dad-11d1-80b4-00c04fd430c8"
            };
            if (_0x36e3e0[_0x14eeba] !== undefined) {
              _0x14eeba = _0x36e3e0[_0x14eeba];
            } else if (!_0x14eeba.match(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/)) {
              throw new Error("UUID: parse: invalid string representation (expected \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")");
            }
            _0x19a917(_0x14eeba, 0, 7, this, 0);
            _0x19a917(_0x14eeba, 9, 12, this, 4);
            _0x19a917(_0x14eeba, 14, 17, this, 6);
            _0x19a917(_0x14eeba, 19, 22, this, 8);
            _0x19a917(_0x14eeba, 24, 35, this, 10);
          }
          return this;
        };
        _0x45afe0.prototype.export = function () {
          var _0x235ea3 = Array(16);
          for (var _0x32dab8 = 0; _0x32dab8 < 16; _0x32dab8++) {
            _0x235ea3[_0x32dab8] = this[_0x32dab8];
          }
          return _0x235ea3;
        };
        _0x45afe0.prototype.import = function (_0x3f7acd) {
          if (typeof _0x3f7acd !== "object" || !(_0x3f7acd instanceof Array)) {
            throw new Error("UUID: import: invalid argument (type Array expected)");
          }
          if (_0x3f7acd.length !== 16) {
            throw new Error("UUID: import: invalid argument (Array of length 16 expected)");
          }
          for (var _0x150aed = 0; _0x150aed < 16; _0x150aed++) {
            if (typeof _0x3f7acd[_0x150aed] !== "number") {
              throw new Error("UUID: import: invalid array element #" + _0x150aed + " (type Number expected)");
            }
            if (!isFinite(_0x3f7acd[_0x150aed]) || Math.floor(_0x3f7acd[_0x150aed]) !== _0x3f7acd[_0x150aed]) {
              throw new Error("UUID: import: invalid array element #" + _0x150aed + " (Number with integer value expected)");
            }
            if (_0x3f7acd[_0x150aed] < 0 || _0x3f7acd[_0x150aed] > 255) {
              throw new Error("UUID: import: invalid array element #" + _0x150aed + " (Number with integer value in range 0...255 expected)");
            }
            this[_0x150aed] = _0x3f7acd[_0x150aed];
          }
          return this;
        };
        _0x45afe0.prototype.compare = function (_0xf37d9c) {
          if (typeof _0xf37d9c !== "object") {
            throw new Error("UUID: compare: invalid argument (type UUID expected)");
          }
          if (!(_0xf37d9c instanceof _0x45afe0)) {
            throw new Error("UUID: compare: invalid argument (type UUID expected)");
          }
          for (var _0x345220 = 0; _0x345220 < 16; _0x345220++) {
            if (this[_0x345220] < _0xf37d9c[_0x345220]) {
              return -1;
            } else if (this[_0x345220] > _0xf37d9c[_0x345220]) {
              return +1;
            }
          }
          return 0;
        };
        _0x45afe0.prototype.equal = function (_0x4bd6a3) {
          return this.compare(_0x4bd6a3) === 0;
        };
        _0x45afe0.prototype.fold = function (_0x4e3fac) {
          if (typeof _0x4e3fac === "undefined") {
            throw new Error("UUID: fold: invalid argument (number of fold operations expected)");
          }
          if (_0x4e3fac < 1 || _0x4e3fac > 4) {
            throw new Error("UUID: fold: invalid argument (1-4 fold operations expected)");
          }
          var _0x10ef9f = 16 / Math.pow(2, _0x4e3fac);
          var _0x49b486 = new Array(_0x10ef9f);
          for (var _0x301bf5 = 0; _0x301bf5 < _0x10ef9f; _0x301bf5++) {
            var _0x394228 = 0;
            for (var _0x456816 = 0; _0x301bf5 + _0x456816 < 16; _0x456816 += _0x10ef9f) {
              _0x394228 ^= this[_0x301bf5 + _0x456816];
            }
            _0x49b486[_0x301bf5] = _0x394228;
          }
          return _0x49b486;
        };
        _0x45afe0.PCG = _0xd988bc;
        return _0x45afe0;
      });
    }
  };
  var _0x4d2ae0 = {};
  function _0x3cbfd9(_0x1e7dfc) {
    var _0x4139f7 = _0x4d2ae0[_0x1e7dfc];
    if (_0x4139f7 !== undefined) {
      return _0x4139f7.exports;
    }
    var _0x828ce7 = _0x4d2ae0[_0x1e7dfc] = {
      exports: {}
    };
    _0x409c79[_0x1e7dfc].call(_0x828ce7.exports, _0x828ce7, _0x828ce7.exports, _0x3cbfd9);
    return _0x828ce7.exports;
  }
  (() => {
    _0x3cbfd9.g = function () {
      if (typeof globalThis === "object") {
        return globalThis;
      }
      try {
        return this || new Function("return this")();
      } catch (_0xdc8600) {
        if (typeof window === "object") {
          return window;
        }
      }
    }();
  })();
  var _0x2c5c92 = {};
  (() => {
    'use strict';

    ;
    function _0x227447(_0x21c273, _0x2a730f, _0x2e81d5, _0x4934e7, _0x5a9096, _0x4b7897, _0x322cc6) {
      try {
        var _0x152662 = _0x21c273[_0x4b7897](_0x322cc6);
        var _0x21a6f8 = _0x152662.value;
      } catch (_0x573c9d) {
        _0x2e81d5(_0x573c9d);
        return;
      }
      if (_0x152662.done) {
        _0x2a730f(_0x21a6f8);
      } else {
        Promise.resolve(_0x21a6f8).then(_0x4934e7, _0x5a9096);
      }
    }
    function _0x442a27(_0x486da1) {
      return function () {
        var _0x3204e1 = this;
        var _0x38d31a = arguments;
        return new Promise(function (_0x57da70, _0x5b5fd6) {
          var _0x3895f1 = _0x486da1.apply(_0x3204e1, _0x38d31a);
          function _0xddfd7a(_0x1267e4) {
            _0x227447(_0x3895f1, _0x57da70, _0x5b5fd6, _0xddfd7a, _0x1d8640, "next", _0x1267e4);
          }
          function _0x1d8640(_0x4c819d) {
            _0x227447(_0x3895f1, _0x57da70, _0x5b5fd6, _0xddfd7a, _0x1d8640, "throw", _0x4c819d);
          }
          _0xddfd7a(undefined);
        });
      };
    }
    function _0x5c6fba(_0x3d474a, _0x4a918f) {
      var _0x63bee9;
      var _0x7a50de;
      var _0x3d34aa;
      var _0x4000ce;
      var _0x5470db = {
        label: 0,
        sent: function () {
          if (_0x3d34aa[0] & 1) {
            throw _0x3d34aa[1];
          }
          return _0x3d34aa[1];
        },
        trys: [],
        ops: []
      };
      _0x4000ce = {
        next: _0x284503(0),
        throw: _0x284503(1),
        return: _0x284503(2)
      };
      if (typeof Symbol === "function") {
        _0x4000ce[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4000ce;
      function _0x284503(_0x267c55) {
        return function (_0x182c81) {
          return _0x3554c8([_0x267c55, _0x182c81]);
        };
      }
      function _0x3554c8(_0x4d2e67) {
        if (_0x63bee9) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5470db) {
          try {
            _0x63bee9 = 1;
            if (_0x7a50de && (_0x3d34aa = _0x4d2e67[0] & 2 ? _0x7a50de.return : _0x4d2e67[0] ? _0x7a50de.throw || ((_0x3d34aa = _0x7a50de.return) && _0x3d34aa.call(_0x7a50de), 0) : _0x7a50de.next) && !(_0x3d34aa = _0x3d34aa.call(_0x7a50de, _0x4d2e67[1])).done) {
              return _0x3d34aa;
            }
            _0x7a50de = 0;
            if (_0x3d34aa) {
              _0x4d2e67 = [_0x4d2e67[0] & 2, _0x3d34aa.value];
            }
            switch (_0x4d2e67[0]) {
              case 0:
              case 1:
                _0x3d34aa = _0x4d2e67;
                break;
              case 4:
                _0x5470db.label++;
                var _0x443fc2 = {
                  value: _0x4d2e67[1],
                  done: false
                };
                return _0x443fc2;
              case 5:
                _0x5470db.label++;
                _0x7a50de = _0x4d2e67[1];
                _0x4d2e67 = [0];
                continue;
              case 7:
                _0x4d2e67 = _0x5470db.ops.pop();
                _0x5470db.trys.pop();
                continue;
              default:
                if (!(_0x3d34aa = _0x5470db.trys, _0x3d34aa = _0x3d34aa.length > 0 && _0x3d34aa[_0x3d34aa.length - 1]) && (_0x4d2e67[0] === 6 || _0x4d2e67[0] === 2)) {
                  _0x5470db = 0;
                  continue;
                }
                if (_0x4d2e67[0] === 3 && (!_0x3d34aa || _0x4d2e67[1] > _0x3d34aa[0] && _0x4d2e67[1] < _0x3d34aa[3])) {
                  _0x5470db.label = _0x4d2e67[1];
                  break;
                }
                if (_0x4d2e67[0] === 6 && _0x5470db.label < _0x3d34aa[1]) {
                  _0x5470db.label = _0x3d34aa[1];
                  _0x3d34aa = _0x4d2e67;
                  break;
                }
                if (_0x3d34aa && _0x5470db.label < _0x3d34aa[2]) {
                  _0x5470db.label = _0x3d34aa[2];
                  _0x5470db.ops.push(_0x4d2e67);
                  break;
                }
                if (_0x3d34aa[2]) {
                  _0x5470db.ops.pop();
                }
                _0x5470db.trys.pop();
                continue;
            }
            _0x4d2e67 = _0x4a918f.call(_0x3d474a, _0x5470db);
          } catch (_0x5d05d2) {
            _0x4d2e67 = [6, _0x5d05d2];
            _0x7a50de = 0;
          } finally {
            _0x63bee9 = _0x3d34aa = 0;
          }
        }
        if (_0x4d2e67[0] & 5) {
          throw _0x4d2e67[1];
        }
        var _0x947e78 = {
          value: _0x4d2e67[0] ? _0x4d2e67[1] : undefined,
          done: true
        };
        return _0x947e78;
      }
    }
    var _0x4b962e;
    var _0x493de5 = new Map();
    function _0x5405ae() {
      return _0x353c2b.apply(this, arguments);
    }
    function _0x353c2b() {
      _0x353c2b = _0x442a27(function () {
        return _0x5c6fba(this, function (_0x45e746) {
          switch (_0x45e746.label) {
            case 0:
              if (!!globalThis.exports.config.IsConfigReady()) {
                return [3, 2];
              }
              return [4, new Promise(function (_0x5470b4) {
                return setTimeout(_0x5470b4, 100);
              })];
            case 1:
              _0x45e746.sent();
              return [3, 0];
            case 2:
              _0x4b962e = globalThis.exports.config.GetModuleConfig("main");
              return [2];
          }
        });
      });
      return _0x353c2b.apply(this, arguments);
    }
    on("np-config:configLoaded", function (_0x2c12e2, _0x2d5f71) {
      if (_0x2c12e2 === "main") {
        _0x4b962e = _0x2d5f71;
      } else if (_0x493de5.has(_0x2c12e2)) {
        _0x493de5.set(_0x2c12e2, _0x2d5f71);
      }
    });
    function _0x2cb3b7(_0x3bdcf7) {
      return _0x4b962e[_0x3bdcf7];
    }
    function _0x3fbba9(_0x259dc4, _0xe3fb97) {
      if (!_0x493de5.has(_0x259dc4)) {
        var _0x34a09e = _0x3cbfd9.g.exports.config.GetModuleConfig(_0x259dc4);
        if (_0x34a09e === undefined) {
          return;
        }
        _0x493de5.set(_0x259dc4, _0x34a09e);
      }
      var _0xb2b138 = _0x493de5.get(_0x259dc4);
      if (_0xe3fb97) {
        return _0xb2b138?.[_0xe3fb97];
      } else {
        return _0xb2b138;
      }
    }
    ;
    var _0x56ab52 = [];
    function _0x1b3521(_0x518724, _0x1c7632) {
      AddEventHandler(`_npx_uiReq:${_0x518724}`, _0x1c7632);
      exports["np-ui"].RegisterUIEvent(_0x518724);
      _0x56ab52.push(_0x518724);
    }
    function _0x1a6d35(_0x54610a) {
      exports["np-ui"].SendUIMessage(_0x54610a);
    }
    function _0x47ae5e(_0x530f49, _0x1964cf) {
      exports["np-ui"].SetUIFocus(_0x530f49, _0x1964cf);
    }
    function _0x533aa1() {
      return exports["np-ui"].GetUIFocus();
    }
    AddEventHandler("_npx_uiReady", function () {
      _0x56ab52.forEach(function (_0x3eaa7d) {
        return exports["np-ui"].RegisterUIEvent(_0x3eaa7d);
      });
    });
    ;
    const _0x1ee92e = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
    var _0x47560a = {
      randomUUID: _0x1ee92e
    };
    const _0x5a83e2 = _0x47560a;
    ;
    let _0x116d84;
    const _0x150bc3 = new Uint8Array(16);
    function _0x4c120c() {
      if (!_0x116d84) {
        _0x116d84 = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
        if (!_0x116d84) {
          throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        }
      }
      return _0x116d84(_0x150bc3);
    }
    ;
    const _0xf0e131 = [];
    for (let _0x4ee8d2 = 0; _0x4ee8d2 < 256; ++_0x4ee8d2) {
      _0xf0e131.push((_0x4ee8d2 + 256).toString(16).slice(1));
    }
    function _0x6ba3a0(_0x36c725, _0x2a70a7 = 0) {
      return (_0xf0e131[_0x36c725[_0x2a70a7 + 0]] + _0xf0e131[_0x36c725[_0x2a70a7 + 1]] + _0xf0e131[_0x36c725[_0x2a70a7 + 2]] + _0xf0e131[_0x36c725[_0x2a70a7 + 3]] + "-" + _0xf0e131[_0x36c725[_0x2a70a7 + 4]] + _0xf0e131[_0x36c725[_0x2a70a7 + 5]] + "-" + _0xf0e131[_0x36c725[_0x2a70a7 + 6]] + _0xf0e131[_0x36c725[_0x2a70a7 + 7]] + "-" + _0xf0e131[_0x36c725[_0x2a70a7 + 8]] + _0xf0e131[_0x36c725[_0x2a70a7 + 9]] + "-" + _0xf0e131[_0x36c725[_0x2a70a7 + 10]] + _0xf0e131[_0x36c725[_0x2a70a7 + 11]] + _0xf0e131[_0x36c725[_0x2a70a7 + 12]] + _0xf0e131[_0x36c725[_0x2a70a7 + 13]] + _0xf0e131[_0x36c725[_0x2a70a7 + 14]] + _0xf0e131[_0x36c725[_0x2a70a7 + 15]]).toLowerCase();
    }
    function _0x2913b4(_0x3e049d, _0x9920a1 = 0) {
      const _0x2626fd = _0x6ba3a0(_0x3e049d, _0x9920a1);
      if (!validate(_0x2626fd)) {
        throw TypeError("Stringified UUID is invalid");
      }
      return _0x2626fd;
    }
    const _0x19b60c = null && _0x2913b4;
    ;
    function _0x3bdf16(_0x5610fc, _0x5ca510, _0x39ecec) {
      if (_0x5a83e2.randomUUID && !_0x5ca510 && !_0x5610fc) {
        return _0x5a83e2.randomUUID();
      }
      _0x5610fc = _0x5610fc || {};
      const _0x1051e8 = _0x5610fc.random || (_0x5610fc.rng || _0x4c120c)();
      _0x1051e8[6] = _0x1051e8[6] & 15 | 64;
      _0x1051e8[8] = _0x1051e8[8] & 63 | 128;
      if (_0x5ca510) {
        _0x39ecec = _0x39ecec || 0;
        for (let _0x5f2dc5 = 0; _0x5f2dc5 < 16; ++_0x5f2dc5) {
          _0x5ca510[_0x39ecec + _0x5f2dc5] = _0x1051e8[_0x5f2dc5];
        }
        return _0x5ca510;
      }
      return _0x6ba3a0(_0x1051e8);
    }
    const _0x53bb93 = _0x3bdf16;
    ;
    const _0x493822 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    ;
    function _0x581eb1(_0x539ee9) {
      return typeof _0x539ee9 === "string" && _0x493822.test(_0x539ee9);
    }
    const _0x37c9c1 = _0x581eb1;
    ;
    function _0x1f84ee(_0xb0694f) {
      if (!_0x37c9c1(_0xb0694f)) {
        throw TypeError("Invalid UUID");
      }
      let _0x39479d;
      const _0x341502 = new Uint8Array(16);
      _0x341502[0] = (_0x39479d = parseInt(_0xb0694f.slice(0, 8), 16)) >>> 24;
      _0x341502[1] = _0x39479d >>> 16 & 255;
      _0x341502[2] = _0x39479d >>> 8 & 255;
      _0x341502[3] = _0x39479d & 255;
      _0x341502[4] = (_0x39479d = parseInt(_0xb0694f.slice(9, 13), 16)) >>> 8;
      _0x341502[5] = _0x39479d & 255;
      _0x341502[6] = (_0x39479d = parseInt(_0xb0694f.slice(14, 18), 16)) >>> 8;
      _0x341502[7] = _0x39479d & 255;
      _0x341502[8] = (_0x39479d = parseInt(_0xb0694f.slice(19, 23), 16)) >>> 8;
      _0x341502[9] = _0x39479d & 255;
      _0x341502[10] = (_0x39479d = parseInt(_0xb0694f.slice(24, 36), 16)) / 1099511627776 & 255;
      _0x341502[11] = _0x39479d / 4294967296 & 255;
      _0x341502[12] = _0x39479d >>> 24 & 255;
      _0x341502[13] = _0x39479d >>> 16 & 255;
      _0x341502[14] = _0x39479d >>> 8 & 255;
      _0x341502[15] = _0x39479d & 255;
      return _0x341502;
    }
    const _0x21643a = _0x1f84ee;
    ;
    function _0x3202fe(_0x23ee50) {
      _0x23ee50 = unescape(encodeURIComponent(_0x23ee50));
      const _0x592f11 = [];
      for (let _0x1646c3 = 0; _0x1646c3 < _0x23ee50.length; ++_0x1646c3) {
        _0x592f11.push(_0x23ee50.charCodeAt(_0x1646c3));
      }
      return _0x592f11;
    }
    const _0x3c6efa = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    const _0x4404dd = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
    function _0x1dc35e(_0x54ff87, _0xd678a2, _0x50edb8) {
      function _0x554f3d(_0x3bbe4a, _0x7a2683, _0x5e34b9, _0x21cf9b) {
        if (typeof _0x3bbe4a === "string") {
          _0x3bbe4a = _0x3202fe(_0x3bbe4a);
        }
        if (typeof _0x7a2683 === "string") {
          _0x7a2683 = _0x21643a(_0x7a2683);
        }
        if (_0x7a2683?.length !== 16) {
          throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
        }
        let _0x2a8c33 = new Uint8Array(16 + _0x3bbe4a.length);
        _0x2a8c33.set(_0x7a2683);
        _0x2a8c33.set(_0x3bbe4a, _0x7a2683.length);
        _0x2a8c33 = _0x50edb8(_0x2a8c33);
        _0x2a8c33[6] = _0x2a8c33[6] & 15 | _0xd678a2;
        _0x2a8c33[8] = _0x2a8c33[8] & 63 | 128;
        if (_0x5e34b9) {
          _0x21cf9b = _0x21cf9b || 0;
          for (let _0x59b8a8 = 0; _0x59b8a8 < 16; ++_0x59b8a8) {
            _0x5e34b9[_0x21cf9b + _0x59b8a8] = _0x2a8c33[_0x59b8a8];
          }
          return _0x5e34b9;
        }
        return _0x6ba3a0(_0x2a8c33);
      }
      try {
        _0x554f3d.name = _0x54ff87;
      } catch (_0x5bb235) {}
      _0x554f3d.DNS = _0x3c6efa;
      _0x554f3d.URL = _0x4404dd;
      return _0x554f3d;
    }
    ;
    function _0x103170(_0xdef54, _0xffa77, _0xe61086, _0x22210c) {
      switch (_0xdef54) {
        case 0:
          return _0xffa77 & _0xe61086 ^ ~_0xffa77 & _0x22210c;
        case 1:
          return _0xffa77 ^ _0xe61086 ^ _0x22210c;
        case 2:
          return _0xffa77 & _0xe61086 ^ _0xffa77 & _0x22210c ^ _0xe61086 & _0x22210c;
        case 3:
          return _0xffa77 ^ _0xe61086 ^ _0x22210c;
      }
    }
    function _0x1b1177(_0x385dc2, _0xf78485) {
      return _0x385dc2 << _0xf78485 | _0x385dc2 >>> 32 - _0xf78485;
    }
    function _0x2e4cf5(_0x3a6d2b) {
      const _0x176dbb = [1518500249, 1859775393, 2400959708, 3395469782];
      const _0x31a28d = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
      if (typeof _0x3a6d2b === "string") {
        const _0x17e218 = unescape(encodeURIComponent(_0x3a6d2b));
        _0x3a6d2b = [];
        for (let _0x1ed9b4 = 0; _0x1ed9b4 < _0x17e218.length; ++_0x1ed9b4) {
          _0x3a6d2b.push(_0x17e218.charCodeAt(_0x1ed9b4));
        }
      } else if (!Array.isArray(_0x3a6d2b)) {
        _0x3a6d2b = Array.prototype.slice.call(_0x3a6d2b);
      }
      _0x3a6d2b.push(128);
      const _0x4fca04 = _0x3a6d2b.length / 4 + 2;
      const _0x533960 = Math.ceil(_0x4fca04 / 16);
      const _0x5ba0ac = new Array(_0x533960);
      for (let _0x56536a = 0; _0x56536a < _0x533960; ++_0x56536a) {
        const _0x56f03c = new Uint32Array(16);
        for (let _0x5a6d08 = 0; _0x5a6d08 < 16; ++_0x5a6d08) {
          _0x56f03c[_0x5a6d08] = _0x3a6d2b[_0x56536a * 64 + _0x5a6d08 * 4] << 24 | _0x3a6d2b[_0x56536a * 64 + _0x5a6d08 * 4 + 1] << 16 | _0x3a6d2b[_0x56536a * 64 + _0x5a6d08 * 4 + 2] << 8 | _0x3a6d2b[_0x56536a * 64 + _0x5a6d08 * 4 + 3];
        }
        _0x5ba0ac[_0x56536a] = _0x56f03c;
      }
      _0x5ba0ac[_0x533960 - 1][14] = (_0x3a6d2b.length - 1) * 8 / Math.pow(2, 32);
      _0x5ba0ac[_0x533960 - 1][14] = Math.floor(_0x5ba0ac[_0x533960 - 1][14]);
      _0x5ba0ac[_0x533960 - 1][15] = (_0x3a6d2b.length - 1) * 8 & 4294967295;
      for (let _0x1f369f = 0; _0x1f369f < _0x533960; ++_0x1f369f) {
        const _0x156193 = new Uint32Array(80);
        for (let _0x30eb6d = 0; _0x30eb6d < 16; ++_0x30eb6d) {
          _0x156193[_0x30eb6d] = _0x5ba0ac[_0x1f369f][_0x30eb6d];
        }
        for (let _0x1efd21 = 16; _0x1efd21 < 80; ++_0x1efd21) {
          _0x156193[_0x1efd21] = _0x1b1177(_0x156193[_0x1efd21 - 3] ^ _0x156193[_0x1efd21 - 8] ^ _0x156193[_0x1efd21 - 14] ^ _0x156193[_0x1efd21 - 16], 1);
        }
        let _0x5a3252 = _0x31a28d[0];
        let _0x2cb138 = _0x31a28d[1];
        let _0xf8a6da = _0x31a28d[2];
        let _0x497db2 = _0x31a28d[3];
        let _0x365eb7 = _0x31a28d[4];
        for (let _0x39857c = 0; _0x39857c < 80; ++_0x39857c) {
          const _0x1914de = Math.floor(_0x39857c / 20);
          const _0x175caa = _0x1b1177(_0x5a3252, 5) + _0x103170(_0x1914de, _0x2cb138, _0xf8a6da, _0x497db2) + _0x365eb7 + _0x176dbb[_0x1914de] + _0x156193[_0x39857c] >>> 0;
          _0x365eb7 = _0x497db2;
          _0x497db2 = _0xf8a6da;
          _0xf8a6da = _0x1b1177(_0x2cb138, 30) >>> 0;
          _0x2cb138 = _0x5a3252;
          _0x5a3252 = _0x175caa;
        }
        _0x31a28d[0] = _0x31a28d[0] + _0x5a3252 >>> 0;
        _0x31a28d[1] = _0x31a28d[1] + _0x2cb138 >>> 0;
        _0x31a28d[2] = _0x31a28d[2] + _0xf8a6da >>> 0;
        _0x31a28d[3] = _0x31a28d[3] + _0x497db2 >>> 0;
        _0x31a28d[4] = _0x31a28d[4] + _0x365eb7 >>> 0;
      }
      return [_0x31a28d[0] >> 24 & 255, _0x31a28d[0] >> 16 & 255, _0x31a28d[0] >> 8 & 255, _0x31a28d[0] & 255, _0x31a28d[1] >> 24 & 255, _0x31a28d[1] >> 16 & 255, _0x31a28d[1] >> 8 & 255, _0x31a28d[1] & 255, _0x31a28d[2] >> 24 & 255, _0x31a28d[2] >> 16 & 255, _0x31a28d[2] >> 8 & 255, _0x31a28d[2] & 255, _0x31a28d[3] >> 24 & 255, _0x31a28d[3] >> 16 & 255, _0x31a28d[3] >> 8 & 255, _0x31a28d[3] & 255, _0x31a28d[4] >> 24 & 255, _0x31a28d[4] >> 16 & 255, _0x31a28d[4] >> 8 & 255, _0x31a28d[4] & 255];
    }
    const _0x521963 = _0x2e4cf5;
    ;
    const _0x3fadc4 = _0x1dc35e("v5", 80, _0x521963);
    const _0x516194 = _0x3fadc4;
    ; /*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */
    const _0x54052f = 4;
    const _0x1f5704 = 0;
    const _0x306497 = 1;
    const _0x5141b0 = 2;
    function _0x47acf2(_0xfac363) {
      let _0x5d4c67 = _0xfac363.length;
      while (--_0x5d4c67 >= 0) {
        _0xfac363[_0x5d4c67] = 0;
      }
    }
    const _0x54aa60 = 0;
    const _0x2348a1 = 1;
    const _0x3481dd = 2;
    const _0x1c76fb = 3;
    const _0x5b9dc6 = 258;
    const _0x1045c1 = 29;
    const _0x4ecc99 = 256;
    const _0x270a4a = _0x4ecc99 + 1 + _0x1045c1;
    const _0x401149 = 30;
    const _0x2811a2 = 19;
    const _0x7f7b3 = _0x270a4a * 2 + 1;
    const _0x597033 = 15;
    const _0x4ca835 = 16;
    const _0x40dca0 = 7;
    const _0x19e42d = 256;
    const _0x3b4fd1 = 16;
    const _0x3b1433 = 17;
    const _0x2da0da = 18;
    const _0x433b42 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]);
    const _0x349661 = new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);
    const _0x2072ff = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]);
    const _0x5e7ce3 = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
    const _0x4d0c15 = 512;
    const _0x2b6782 = new Array((_0x270a4a + 2) * 2);
    _0x47acf2(_0x2b6782);
    const _0x45d3bf = new Array(_0x401149 * 2);
    _0x47acf2(_0x45d3bf);
    const _0x130b97 = new Array(_0x4d0c15);
    _0x47acf2(_0x130b97);
    const _0x40b719 = new Array(_0x5b9dc6 - _0x1c76fb + 1);
    _0x47acf2(_0x40b719);
    const _0x2a04b2 = new Array(_0x1045c1);
    _0x47acf2(_0x2a04b2);
    const _0x4a2e70 = new Array(_0x401149);
    _0x47acf2(_0x4a2e70);
    function _0x4f73bf(_0x1f4cfa, _0x350c15, _0x415093, _0x5ec747, _0x563150) {
      this.static_tree = _0x1f4cfa;
      this.extra_bits = _0x350c15;
      this.extra_base = _0x415093;
      this.elems = _0x5ec747;
      this.max_length = _0x563150;
      this.has_stree = _0x1f4cfa && _0x1f4cfa.length;
    }
    let _0x32f4b8;
    let _0x42862e;
    let _0x142ee7;
    function _0x1bbb24(_0x386c7b, _0x3fa276) {
      this.dyn_tree = _0x386c7b;
      this.max_code = 0;
      this.stat_desc = _0x3fa276;
    }
    const _0x3e386e = _0x360c08 => {
      if (_0x360c08 < 256) {
        return _0x130b97[_0x360c08];
      } else {
        return _0x130b97[256 + (_0x360c08 >>> 7)];
      }
    };
    const _0x348c57 = (_0xc22a8e, _0x52487f) => {
      _0xc22a8e.pending_buf[_0xc22a8e.pending++] = _0x52487f & 255;
      _0xc22a8e.pending_buf[_0xc22a8e.pending++] = _0x52487f >>> 8 & 255;
    };
    const _0x410f4f = (_0x25b3b1, _0x1fa911, _0x22360d) => {
      if (_0x25b3b1.bi_valid > _0x4ca835 - _0x22360d) {
        _0x25b3b1.bi_buf |= _0x1fa911 << _0x25b3b1.bi_valid & 65535;
        _0x348c57(_0x25b3b1, _0x25b3b1.bi_buf);
        _0x25b3b1.bi_buf = _0x1fa911 >> _0x4ca835 - _0x25b3b1.bi_valid;
        _0x25b3b1.bi_valid += _0x22360d - _0x4ca835;
      } else {
        _0x25b3b1.bi_buf |= _0x1fa911 << _0x25b3b1.bi_valid & 65535;
        _0x25b3b1.bi_valid += _0x22360d;
      }
    };
    const _0x115cfa = (_0xb2205, _0x404a4f, _0x36e9ef) => {
      _0x410f4f(_0xb2205, _0x36e9ef[_0x404a4f * 2], _0x36e9ef[_0x404a4f * 2 + 1]);
    };
    const _0x5414d0 = (_0x2a6a1e, _0x4f1da4) => {
      let _0x31adc4 = 0;
      do {
        _0x31adc4 |= _0x2a6a1e & 1;
        _0x2a6a1e >>>= 1;
        _0x31adc4 <<= 1;
      } while (--_0x4f1da4 > 0);
      return _0x31adc4 >>> 1;
    };
    const _0x1d79c5 = _0x2d14fc => {
      if (_0x2d14fc.bi_valid === 16) {
        _0x348c57(_0x2d14fc, _0x2d14fc.bi_buf);
        _0x2d14fc.bi_buf = 0;
        _0x2d14fc.bi_valid = 0;
      } else if (_0x2d14fc.bi_valid >= 8) {
        _0x2d14fc.pending_buf[_0x2d14fc.pending++] = _0x2d14fc.bi_buf & 255;
        _0x2d14fc.bi_buf >>= 8;
        _0x2d14fc.bi_valid -= 8;
      }
    };
    const _0x544a38 = (_0x32736c, _0x5f1a38) => {
      const _0x3f450d = _0x5f1a38.dyn_tree;
      const _0x1d747c = _0x5f1a38.max_code;
      const _0x5a5838 = _0x5f1a38.stat_desc.static_tree;
      const _0x5d2d1e = _0x5f1a38.stat_desc.has_stree;
      const _0x530577 = _0x5f1a38.stat_desc.extra_bits;
      const _0x15b36a = _0x5f1a38.stat_desc.extra_base;
      const _0xdc07ee = _0x5f1a38.stat_desc.max_length;
      let _0x378a56;
      let _0x1e9446;
      let _0x3b80df;
      let _0x1f552a;
      let _0x150da9;
      let _0x1f2fb7;
      let _0x7a8501 = 0;
      for (_0x1f552a = 0; _0x1f552a <= _0x597033; _0x1f552a++) {
        _0x32736c.bl_count[_0x1f552a] = 0;
      }
      _0x3f450d[_0x32736c.heap[_0x32736c.heap_max] * 2 + 1] = 0;
      for (_0x378a56 = _0x32736c.heap_max + 1; _0x378a56 < _0x7f7b3; _0x378a56++) {
        _0x1e9446 = _0x32736c.heap[_0x378a56];
        _0x1f552a = _0x3f450d[_0x3f450d[_0x1e9446 * 2 + 1] * 2 + 1] + 1;
        if (_0x1f552a > _0xdc07ee) {
          _0x1f552a = _0xdc07ee;
          _0x7a8501++;
        }
        _0x3f450d[_0x1e9446 * 2 + 1] = _0x1f552a;
        if (_0x1e9446 > _0x1d747c) {
          continue;
        }
        _0x32736c.bl_count[_0x1f552a]++;
        _0x150da9 = 0;
        if (_0x1e9446 >= _0x15b36a) {
          _0x150da9 = _0x530577[_0x1e9446 - _0x15b36a];
        }
        _0x1f2fb7 = _0x3f450d[_0x1e9446 * 2];
        _0x32736c.opt_len += _0x1f2fb7 * (_0x1f552a + _0x150da9);
        if (_0x5d2d1e) {
          _0x32736c.static_len += _0x1f2fb7 * (_0x5a5838[_0x1e9446 * 2 + 1] + _0x150da9);
        }
      }
      if (_0x7a8501 === 0) {
        return;
      }
      do {
        _0x1f552a = _0xdc07ee - 1;
        while (_0x32736c.bl_count[_0x1f552a] === 0) {
          _0x1f552a--;
        }
        _0x32736c.bl_count[_0x1f552a]--;
        _0x32736c.bl_count[_0x1f552a + 1] += 2;
        _0x32736c.bl_count[_0xdc07ee]--;
        _0x7a8501 -= 2;
      } while (_0x7a8501 > 0);
      for (_0x1f552a = _0xdc07ee; _0x1f552a !== 0; _0x1f552a--) {
        _0x1e9446 = _0x32736c.bl_count[_0x1f552a];
        while (_0x1e9446 !== 0) {
          _0x3b80df = _0x32736c.heap[--_0x378a56];
          if (_0x3b80df > _0x1d747c) {
            continue;
          }
          if (_0x3f450d[_0x3b80df * 2 + 1] !== _0x1f552a) {
            _0x32736c.opt_len += (_0x1f552a - _0x3f450d[_0x3b80df * 2 + 1]) * _0x3f450d[_0x3b80df * 2];
            _0x3f450d[_0x3b80df * 2 + 1] = _0x1f552a;
          }
          _0x1e9446--;
        }
      }
    };
    const _0x4af547 = (_0x50d389, _0x1a16fc, _0x48ef51) => {
      const _0x5e1b38 = new Array(_0x597033 + 1);
      let _0x37c0ab = 0;
      let _0x2458f7;
      let _0x2bd04c;
      for (_0x2458f7 = 1; _0x2458f7 <= _0x597033; _0x2458f7++) {
        _0x37c0ab = _0x37c0ab + _0x48ef51[_0x2458f7 - 1] << 1;
        _0x5e1b38[_0x2458f7] = _0x37c0ab;
      }
      for (_0x2bd04c = 0; _0x2bd04c <= _0x1a16fc; _0x2bd04c++) {
        let _0x2f6766 = _0x50d389[_0x2bd04c * 2 + 1];
        if (_0x2f6766 === 0) {
          continue;
        }
        _0x50d389[_0x2bd04c * 2] = _0x5414d0(_0x5e1b38[_0x2f6766]++, _0x2f6766);
      }
    };
    const _0x1396cb = () => {
      let _0x37d6c7;
      let _0x229750;
      let _0x5aee8e;
      let _0xca1dd6;
      let _0x3a26fe;
      const _0x50e4b9 = new Array(_0x597033 + 1);
      _0x5aee8e = 0;
      for (_0xca1dd6 = 0; _0xca1dd6 < _0x1045c1 - 1; _0xca1dd6++) {
        _0x2a04b2[_0xca1dd6] = _0x5aee8e;
        for (_0x37d6c7 = 0; _0x37d6c7 < 1 << _0x433b42[_0xca1dd6]; _0x37d6c7++) {
          _0x40b719[_0x5aee8e++] = _0xca1dd6;
        }
      }
      _0x40b719[_0x5aee8e - 1] = _0xca1dd6;
      _0x3a26fe = 0;
      for (_0xca1dd6 = 0; _0xca1dd6 < 16; _0xca1dd6++) {
        _0x4a2e70[_0xca1dd6] = _0x3a26fe;
        for (_0x37d6c7 = 0; _0x37d6c7 < 1 << _0x349661[_0xca1dd6]; _0x37d6c7++) {
          _0x130b97[_0x3a26fe++] = _0xca1dd6;
        }
      }
      _0x3a26fe >>= 7;
      for (; _0xca1dd6 < _0x401149; _0xca1dd6++) {
        _0x4a2e70[_0xca1dd6] = _0x3a26fe << 7;
        for (_0x37d6c7 = 0; _0x37d6c7 < 1 << _0x349661[_0xca1dd6] - 7; _0x37d6c7++) {
          _0x130b97[256 + _0x3a26fe++] = _0xca1dd6;
        }
      }
      for (_0x229750 = 0; _0x229750 <= _0x597033; _0x229750++) {
        _0x50e4b9[_0x229750] = 0;
      }
      _0x37d6c7 = 0;
      while (_0x37d6c7 <= 143) {
        _0x2b6782[_0x37d6c7 * 2 + 1] = 8;
        _0x37d6c7++;
        _0x50e4b9[8]++;
      }
      while (_0x37d6c7 <= 255) {
        _0x2b6782[_0x37d6c7 * 2 + 1] = 9;
        _0x37d6c7++;
        _0x50e4b9[9]++;
      }
      while (_0x37d6c7 <= 279) {
        _0x2b6782[_0x37d6c7 * 2 + 1] = 7;
        _0x37d6c7++;
        _0x50e4b9[7]++;
      }
      while (_0x37d6c7 <= 287) {
        _0x2b6782[_0x37d6c7 * 2 + 1] = 8;
        _0x37d6c7++;
        _0x50e4b9[8]++;
      }
      _0x4af547(_0x2b6782, _0x270a4a + 1, _0x50e4b9);
      for (_0x37d6c7 = 0; _0x37d6c7 < _0x401149; _0x37d6c7++) {
        _0x45d3bf[_0x37d6c7 * 2 + 1] = 5;
        _0x45d3bf[_0x37d6c7 * 2] = _0x5414d0(_0x37d6c7, 5);
      }
      _0x32f4b8 = new _0x4f73bf(_0x2b6782, _0x433b42, _0x4ecc99 + 1, _0x270a4a, _0x597033);
      _0x42862e = new _0x4f73bf(_0x45d3bf, _0x349661, 0, _0x401149, _0x597033);
      _0x142ee7 = new _0x4f73bf(new Array(0), _0x2072ff, 0, _0x2811a2, _0x40dca0);
    };
    const _0x3ad366 = _0x89ecf5 => {
      let _0x5e927f;
      for (_0x5e927f = 0; _0x5e927f < _0x270a4a; _0x5e927f++) {
        _0x89ecf5.dyn_ltree[_0x5e927f * 2] = 0;
      }
      for (_0x5e927f = 0; _0x5e927f < _0x401149; _0x5e927f++) {
        _0x89ecf5.dyn_dtree[_0x5e927f * 2] = 0;
      }
      for (_0x5e927f = 0; _0x5e927f < _0x2811a2; _0x5e927f++) {
        _0x89ecf5.bl_tree[_0x5e927f * 2] = 0;
      }
      _0x89ecf5.dyn_ltree[_0x19e42d * 2] = 1;
      _0x89ecf5.opt_len = _0x89ecf5.static_len = 0;
      _0x89ecf5.sym_next = _0x89ecf5.matches = 0;
    };
    const _0x391e7b = _0x26251e => {
      if (_0x26251e.bi_valid > 8) {
        _0x348c57(_0x26251e, _0x26251e.bi_buf);
      } else if (_0x26251e.bi_valid > 0) {
        _0x26251e.pending_buf[_0x26251e.pending++] = _0x26251e.bi_buf;
      }
      _0x26251e.bi_buf = 0;
      _0x26251e.bi_valid = 0;
    };
    const _0x4c1c39 = (_0x1dff9c, _0x438e94, _0x4a13f0, _0x425340) => {
      const _0x2053c6 = _0x438e94 * 2;
      const _0x331650 = _0x4a13f0 * 2;
      return _0x1dff9c[_0x2053c6] < _0x1dff9c[_0x331650] || _0x1dff9c[_0x2053c6] === _0x1dff9c[_0x331650] && _0x425340[_0x438e94] <= _0x425340[_0x4a13f0];
    };
    const _0x568551 = (_0x3b0b89, _0x4db42c, _0x5c5d8e) => {
      const _0x2f4c34 = _0x3b0b89.heap[_0x5c5d8e];
      let _0x478088 = _0x5c5d8e << 1;
      while (_0x478088 <= _0x3b0b89.heap_len) {
        if (_0x478088 < _0x3b0b89.heap_len && _0x4c1c39(_0x4db42c, _0x3b0b89.heap[_0x478088 + 1], _0x3b0b89.heap[_0x478088], _0x3b0b89.depth)) {
          _0x478088++;
        }
        if (_0x4c1c39(_0x4db42c, _0x2f4c34, _0x3b0b89.heap[_0x478088], _0x3b0b89.depth)) {
          break;
        }
        _0x3b0b89.heap[_0x5c5d8e] = _0x3b0b89.heap[_0x478088];
        _0x5c5d8e = _0x478088;
        _0x478088 <<= 1;
      }
      _0x3b0b89.heap[_0x5c5d8e] = _0x2f4c34;
    };
    const _0x38e56a = (_0xfa4915, _0x338e65, _0x360186) => {
      let _0x532115;
      let _0x2eb5aa;
      let _0xc4dd99 = 0;
      let _0x4a2416;
      let _0x669a10;
      if (_0xfa4915.sym_next !== 0) {
        do {
          _0x532115 = _0xfa4915.pending_buf[_0xfa4915.sym_buf + _0xc4dd99++] & 255;
          _0x532115 += (_0xfa4915.pending_buf[_0xfa4915.sym_buf + _0xc4dd99++] & 255) << 8;
          _0x2eb5aa = _0xfa4915.pending_buf[_0xfa4915.sym_buf + _0xc4dd99++];
          if (_0x532115 === 0) {
            _0x115cfa(_0xfa4915, _0x2eb5aa, _0x338e65);
          } else {
            _0x4a2416 = _0x40b719[_0x2eb5aa];
            _0x115cfa(_0xfa4915, _0x4a2416 + _0x4ecc99 + 1, _0x338e65);
            _0x669a10 = _0x433b42[_0x4a2416];
            if (_0x669a10 !== 0) {
              _0x2eb5aa -= _0x2a04b2[_0x4a2416];
              _0x410f4f(_0xfa4915, _0x2eb5aa, _0x669a10);
            }
            _0x532115--;
            _0x4a2416 = _0x3e386e(_0x532115);
            _0x115cfa(_0xfa4915, _0x4a2416, _0x360186);
            _0x669a10 = _0x349661[_0x4a2416];
            if (_0x669a10 !== 0) {
              _0x532115 -= _0x4a2e70[_0x4a2416];
              _0x410f4f(_0xfa4915, _0x532115, _0x669a10);
            }
          }
        } while (_0xc4dd99 < _0xfa4915.sym_next);
      }
      _0x115cfa(_0xfa4915, _0x19e42d, _0x338e65);
    };
    const _0x83dc61 = (_0x5e062c, _0x2bd3f6) => {
      const _0x37b0fd = _0x2bd3f6.dyn_tree;
      const _0x4ca70e = _0x2bd3f6.stat_desc.static_tree;
      const _0x4468ee = _0x2bd3f6.stat_desc.has_stree;
      const _0xf7f3a8 = _0x2bd3f6.stat_desc.elems;
      let _0x145ba7;
      let _0x19bddd;
      let _0x84c52b = -1;
      let _0x23eaa8;
      _0x5e062c.heap_len = 0;
      _0x5e062c.heap_max = _0x7f7b3;
      for (_0x145ba7 = 0; _0x145ba7 < _0xf7f3a8; _0x145ba7++) {
        if (_0x37b0fd[_0x145ba7 * 2] !== 0) {
          _0x5e062c.heap[++_0x5e062c.heap_len] = _0x84c52b = _0x145ba7;
          _0x5e062c.depth[_0x145ba7] = 0;
        } else {
          _0x37b0fd[_0x145ba7 * 2 + 1] = 0;
        }
      }
      while (_0x5e062c.heap_len < 2) {
        _0x23eaa8 = _0x5e062c.heap[++_0x5e062c.heap_len] = _0x84c52b < 2 ? ++_0x84c52b : 0;
        _0x37b0fd[_0x23eaa8 * 2] = 1;
        _0x5e062c.depth[_0x23eaa8] = 0;
        _0x5e062c.opt_len--;
        if (_0x4468ee) {
          _0x5e062c.static_len -= _0x4ca70e[_0x23eaa8 * 2 + 1];
        }
      }
      _0x2bd3f6.max_code = _0x84c52b;
      for (_0x145ba7 = _0x5e062c.heap_len >> 1; _0x145ba7 >= 1; _0x145ba7--) {
        _0x568551(_0x5e062c, _0x37b0fd, _0x145ba7);
      }
      _0x23eaa8 = _0xf7f3a8;
      do {
        _0x145ba7 = _0x5e062c.heap[1];
        _0x5e062c.heap[1] = _0x5e062c.heap[_0x5e062c.heap_len--];
        _0x568551(_0x5e062c, _0x37b0fd, 1);
        _0x19bddd = _0x5e062c.heap[1];
        _0x5e062c.heap[--_0x5e062c.heap_max] = _0x145ba7;
        _0x5e062c.heap[--_0x5e062c.heap_max] = _0x19bddd;
        _0x37b0fd[_0x23eaa8 * 2] = _0x37b0fd[_0x145ba7 * 2] + _0x37b0fd[_0x19bddd * 2];
        _0x5e062c.depth[_0x23eaa8] = (_0x5e062c.depth[_0x145ba7] >= _0x5e062c.depth[_0x19bddd] ? _0x5e062c.depth[_0x145ba7] : _0x5e062c.depth[_0x19bddd]) + 1;
        _0x37b0fd[_0x145ba7 * 2 + 1] = _0x37b0fd[_0x19bddd * 2 + 1] = _0x23eaa8;
        _0x5e062c.heap[1] = _0x23eaa8++;
        _0x568551(_0x5e062c, _0x37b0fd, 1);
      } while (_0x5e062c.heap_len >= 2);
      _0x5e062c.heap[--_0x5e062c.heap_max] = _0x5e062c.heap[1];
      _0x544a38(_0x5e062c, _0x2bd3f6);
      _0x4af547(_0x37b0fd, _0x84c52b, _0x5e062c.bl_count);
    };
    const _0x687e7f = (_0x580060, _0x42c7cd, _0x2e8ffb) => {
      let _0x1a83c2;
      let _0x10b7c5 = -1;
      let _0x3d1169;
      let _0x3d295d = _0x42c7cd[1];
      let _0x5e0014 = 0;
      let _0x21b3a8 = 7;
      let _0x55f9a6 = 4;
      if (_0x3d295d === 0) {
        _0x21b3a8 = 138;
        _0x55f9a6 = 3;
      }
      _0x42c7cd[(_0x2e8ffb + 1) * 2 + 1] = 65535;
      for (_0x1a83c2 = 0; _0x1a83c2 <= _0x2e8ffb; _0x1a83c2++) {
        _0x3d1169 = _0x3d295d;
        _0x3d295d = _0x42c7cd[(_0x1a83c2 + 1) * 2 + 1];
        if (++_0x5e0014 < _0x21b3a8 && _0x3d1169 === _0x3d295d) {
          continue;
        } else if (_0x5e0014 < _0x55f9a6) {
          _0x580060.bl_tree[_0x3d1169 * 2] += _0x5e0014;
        } else if (_0x3d1169 !== 0) {
          if (_0x3d1169 !== _0x10b7c5) {
            _0x580060.bl_tree[_0x3d1169 * 2]++;
          }
          _0x580060.bl_tree[_0x3b4fd1 * 2]++;
        } else if (_0x5e0014 <= 10) {
          _0x580060.bl_tree[_0x3b1433 * 2]++;
        } else {
          _0x580060.bl_tree[_0x2da0da * 2]++;
        }
        _0x5e0014 = 0;
        _0x10b7c5 = _0x3d1169;
        if (_0x3d295d === 0) {
          _0x21b3a8 = 138;
          _0x55f9a6 = 3;
        } else if (_0x3d1169 === _0x3d295d) {
          _0x21b3a8 = 6;
          _0x55f9a6 = 3;
        } else {
          _0x21b3a8 = 7;
          _0x55f9a6 = 4;
        }
      }
    };
    const _0x1a2441 = (_0x13988a, _0x24cff6, _0x4a9091) => {
      let _0x479ffa;
      let _0x1bd2ad = -1;
      let _0x86385c;
      let _0x3d58dd = _0x24cff6[1];
      let _0x148b18 = 0;
      let _0x11378b = 7;
      let _0x2b2f76 = 4;
      if (_0x3d58dd === 0) {
        _0x11378b = 138;
        _0x2b2f76 = 3;
      }
      for (_0x479ffa = 0; _0x479ffa <= _0x4a9091; _0x479ffa++) {
        _0x86385c = _0x3d58dd;
        _0x3d58dd = _0x24cff6[(_0x479ffa + 1) * 2 + 1];
        if (++_0x148b18 < _0x11378b && _0x86385c === _0x3d58dd) {
          continue;
        } else if (_0x148b18 < _0x2b2f76) {
          do {
            _0x115cfa(_0x13988a, _0x86385c, _0x13988a.bl_tree);
          } while (--_0x148b18 !== 0);
        } else if (_0x86385c !== 0) {
          if (_0x86385c !== _0x1bd2ad) {
            _0x115cfa(_0x13988a, _0x86385c, _0x13988a.bl_tree);
            _0x148b18--;
          }
          _0x115cfa(_0x13988a, _0x3b4fd1, _0x13988a.bl_tree);
          _0x410f4f(_0x13988a, _0x148b18 - 3, 2);
        } else if (_0x148b18 <= 10) {
          _0x115cfa(_0x13988a, _0x3b1433, _0x13988a.bl_tree);
          _0x410f4f(_0x13988a, _0x148b18 - 3, 3);
        } else {
          _0x115cfa(_0x13988a, _0x2da0da, _0x13988a.bl_tree);
          _0x410f4f(_0x13988a, _0x148b18 - 11, 7);
        }
        _0x148b18 = 0;
        _0x1bd2ad = _0x86385c;
        if (_0x3d58dd === 0) {
          _0x11378b = 138;
          _0x2b2f76 = 3;
        } else if (_0x86385c === _0x3d58dd) {
          _0x11378b = 6;
          _0x2b2f76 = 3;
        } else {
          _0x11378b = 7;
          _0x2b2f76 = 4;
        }
      }
    };
    const _0x369e4c = _0x11f99a => {
      let _0x573769;
      _0x687e7f(_0x11f99a, _0x11f99a.dyn_ltree, _0x11f99a.l_desc.max_code);
      _0x687e7f(_0x11f99a, _0x11f99a.dyn_dtree, _0x11f99a.d_desc.max_code);
      _0x83dc61(_0x11f99a, _0x11f99a.bl_desc);
      for (_0x573769 = _0x2811a2 - 1; _0x573769 >= 3; _0x573769--) {
        if (_0x11f99a.bl_tree[_0x5e7ce3[_0x573769] * 2 + 1] !== 0) {
          break;
        }
      }
      _0x11f99a.opt_len += (_0x573769 + 1) * 3 + 5 + 5 + 4;
      return _0x573769;
    };
    const _0xe890d7 = (_0x45fc97, _0x220367, _0x1c361c, _0x3e7ff8) => {
      let _0x5333ef;
      _0x410f4f(_0x45fc97, _0x220367 - 257, 5);
      _0x410f4f(_0x45fc97, _0x1c361c - 1, 5);
      _0x410f4f(_0x45fc97, _0x3e7ff8 - 4, 4);
      for (_0x5333ef = 0; _0x5333ef < _0x3e7ff8; _0x5333ef++) {
        _0x410f4f(_0x45fc97, _0x45fc97.bl_tree[_0x5e7ce3[_0x5333ef] * 2 + 1], 3);
      }
      _0x1a2441(_0x45fc97, _0x45fc97.dyn_ltree, _0x220367 - 1);
      _0x1a2441(_0x45fc97, _0x45fc97.dyn_dtree, _0x1c361c - 1);
    };
    const _0x34eec7 = _0x23546f => {
      let _0x317fbe = 4093624447;
      let _0x5aca47;
      for (_0x5aca47 = 0; _0x5aca47 <= 31; _0x5aca47++, _0x317fbe >>>= 1) {
        if (_0x317fbe & 1 && _0x23546f.dyn_ltree[_0x5aca47 * 2] !== 0) {
          return _0x1f5704;
        }
      }
      if (_0x23546f.dyn_ltree[18] !== 0 || _0x23546f.dyn_ltree[20] !== 0 || _0x23546f.dyn_ltree[26] !== 0) {
        return _0x306497;
      }
      for (_0x5aca47 = 32; _0x5aca47 < _0x4ecc99; _0x5aca47++) {
        if (_0x23546f.dyn_ltree[_0x5aca47 * 2] !== 0) {
          return _0x306497;
        }
      }
      return _0x1f5704;
    };
    let _0x391707 = false;
    const _0x18441a = _0x55ed3a => {
      if (!_0x391707) {
        _0x1396cb();
        _0x391707 = true;
      }
      _0x55ed3a.l_desc = new _0x1bbb24(_0x55ed3a.dyn_ltree, _0x32f4b8);
      _0x55ed3a.d_desc = new _0x1bbb24(_0x55ed3a.dyn_dtree, _0x42862e);
      _0x55ed3a.bl_desc = new _0x1bbb24(_0x55ed3a.bl_tree, _0x142ee7);
      _0x55ed3a.bi_buf = 0;
      _0x55ed3a.bi_valid = 0;
      _0x3ad366(_0x55ed3a);
    };
    const _0x262e89 = (_0x3f9716, _0x367281, _0x52e951, _0x5c7cfe) => {
      _0x410f4f(_0x3f9716, (_0x54aa60 << 1) + (_0x5c7cfe ? 1 : 0), 3);
      _0x391e7b(_0x3f9716);
      _0x348c57(_0x3f9716, _0x52e951);
      _0x348c57(_0x3f9716, ~_0x52e951);
      if (_0x52e951) {
        _0x3f9716.pending_buf.set(_0x3f9716.window.subarray(_0x367281, _0x367281 + _0x52e951), _0x3f9716.pending);
      }
      _0x3f9716.pending += _0x52e951;
    };
    const _0x3eb723 = _0x1368fa => {
      _0x410f4f(_0x1368fa, _0x2348a1 << 1, 3);
      _0x115cfa(_0x1368fa, _0x19e42d, _0x2b6782);
      _0x1d79c5(_0x1368fa);
    };
    const _0x2f842d = (_0xfc1507, _0x563a24, _0x19f3c7, _0x2bf0c9) => {
      let _0x27e738;
      let _0x3a81ab;
      let _0x42f00f = 0;
      if (_0xfc1507.level > 0) {
        if (_0xfc1507.strm.data_type === _0x5141b0) {
          _0xfc1507.strm.data_type = _0x34eec7(_0xfc1507);
        }
        _0x83dc61(_0xfc1507, _0xfc1507.l_desc);
        _0x83dc61(_0xfc1507, _0xfc1507.d_desc);
        _0x42f00f = _0x369e4c(_0xfc1507);
        _0x27e738 = _0xfc1507.opt_len + 3 + 7 >>> 3;
        _0x3a81ab = _0xfc1507.static_len + 3 + 7 >>> 3;
        if (_0x3a81ab <= _0x27e738) {
          _0x27e738 = _0x3a81ab;
        }
      } else {
        _0x27e738 = _0x3a81ab = _0x19f3c7 + 5;
      }
      if (_0x19f3c7 + 4 <= _0x27e738 && _0x563a24 !== -1) {
        _0x262e89(_0xfc1507, _0x563a24, _0x19f3c7, _0x2bf0c9);
      } else if (_0xfc1507.strategy === _0x54052f || _0x3a81ab === _0x27e738) {
        _0x410f4f(_0xfc1507, (_0x2348a1 << 1) + (_0x2bf0c9 ? 1 : 0), 3);
        _0x38e56a(_0xfc1507, _0x2b6782, _0x45d3bf);
      } else {
        _0x410f4f(_0xfc1507, (_0x3481dd << 1) + (_0x2bf0c9 ? 1 : 0), 3);
        _0xe890d7(_0xfc1507, _0xfc1507.l_desc.max_code + 1, _0xfc1507.d_desc.max_code + 1, _0x42f00f + 1);
        _0x38e56a(_0xfc1507, _0xfc1507.dyn_ltree, _0xfc1507.dyn_dtree);
      }
      _0x3ad366(_0xfc1507);
      if (_0x2bf0c9) {
        _0x391e7b(_0xfc1507);
      }
    };
    const _0x5cf8d2 = (_0x2c102f, _0x519c59, _0x11bebe) => {
      _0x2c102f.pending_buf[_0x2c102f.sym_buf + _0x2c102f.sym_next++] = _0x519c59;
      _0x2c102f.pending_buf[_0x2c102f.sym_buf + _0x2c102f.sym_next++] = _0x519c59 >> 8;
      _0x2c102f.pending_buf[_0x2c102f.sym_buf + _0x2c102f.sym_next++] = _0x11bebe;
      if (_0x519c59 === 0) {
        _0x2c102f.dyn_ltree[_0x11bebe * 2]++;
      } else {
        _0x2c102f.matches++;
        _0x519c59--;
        _0x2c102f.dyn_ltree[(_0x40b719[_0x11bebe] + _0x4ecc99 + 1) * 2]++;
        _0x2c102f.dyn_dtree[_0x3e386e(_0x519c59) * 2]++;
      }
      return _0x2c102f.sym_next === _0x2c102f.sym_end;
    };
    var _0x90ed52 = _0x18441a;
    var _0x44c9a9 = _0x262e89;
    var _0x573597 = _0x2f842d;
    var _0x5f18ce = _0x5cf8d2;
    var _0xa504a4 = _0x3eb723;
    var _0x219bb8 = {
      _tr_init: _0x90ed52,
      _tr_stored_block: _0x44c9a9,
      _tr_flush_block: _0x573597,
      _tr_tally: _0x5f18ce,
      _tr_align: _0xa504a4
    };
    var _0x1a831e = _0x219bb8;
    const _0x399fde = (_0x30b14e, _0x38b15b, _0x55c54d, _0x1eb5b0) => {
      let _0x241777 = _0x30b14e & 65535 | 0;
      let _0x879149 = _0x30b14e >>> 16 & 65535 | 0;
      let _0x339608 = 0;
      while (_0x55c54d !== 0) {
        _0x339608 = _0x55c54d > 2000 ? 2000 : _0x55c54d;
        _0x55c54d -= _0x339608;
        do {
          _0x241777 = _0x241777 + _0x38b15b[_0x1eb5b0++] | 0;
          _0x879149 = _0x879149 + _0x241777 | 0;
        } while (--_0x339608);
        _0x241777 %= 65521;
        _0x879149 %= 65521;
      }
      return _0x241777 | _0x879149 << 16 | 0;
    };
    var _0x3fc282 = _0x399fde;
    const _0x4e55a2 = () => {
      let _0x5571bc;
      let _0x426586 = [];
      for (var _0x977a65 = 0; _0x977a65 < 256; _0x977a65++) {
        _0x5571bc = _0x977a65;
        for (var _0x5114f5 = 0; _0x5114f5 < 8; _0x5114f5++) {
          _0x5571bc = _0x5571bc & 1 ? _0x5571bc >>> 1 ^ 3988292384 : _0x5571bc >>> 1;
        }
        _0x426586[_0x977a65] = _0x5571bc;
      }
      return _0x426586;
    };
    const _0x176478 = new Uint32Array(_0x4e55a2());
    const _0x366dc9 = (_0x55d4d5, _0x464c24, _0x4e0064, _0x42378b) => {
      const _0x353c6e = _0x176478;
      const _0x2e54c9 = _0x42378b + _0x4e0064;
      _0x55d4d5 ^= -1;
      for (let _0xca223c = _0x42378b; _0xca223c < _0x2e54c9; _0xca223c++) {
        _0x55d4d5 = _0x55d4d5 >>> 8 ^ _0x353c6e[(_0x55d4d5 ^ _0x464c24[_0xca223c]) & 255];
      }
      return _0x55d4d5 ^ -1;
    };
    var _0x144de8 = _0x366dc9;
    var _0x112a80 = {
      "2": "need dictionary",
      "1": "stream end",
      "0": "",
      "-1": "file error",
      "-2": "stream error",
      "-3": "data error",
      "-4": "insufficient memory",
      "-5": "buffer error",
      "-6": "incompatible version"
    };
    var _0x1c8790 = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_MEM_ERROR: -4,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8
    };
    var _0x5b3789 = _0x1c8790;
    const {
      _tr_init: _0x1be570,
      _tr_stored_block: _0x3c2f66,
      _tr_flush_block: _0x5001c5,
      _tr_tally: _0x1a877d,
      _tr_align: _0x7f5504
    } = _0x1a831e;
    const {
      Z_NO_FLUSH: _0xcfa57b,
      Z_PARTIAL_FLUSH: _0x4aa0c5,
      Z_FULL_FLUSH: _0x10b0f8,
      Z_FINISH: _0x530dd1,
      Z_BLOCK: _0x4dd50e,
      Z_OK: _0x178c3e,
      Z_STREAM_END: _0x2a85e0,
      Z_STREAM_ERROR: _0x4cdef4,
      Z_DATA_ERROR: _0x44d78b,
      Z_BUF_ERROR: _0x49b637,
      Z_DEFAULT_COMPRESSION: _0x5759dc,
      Z_FILTERED: _0x23545e,
      Z_HUFFMAN_ONLY: _0x2e0225,
      Z_RLE: _0x5f0dc9,
      Z_FIXED: _0x492854,
      Z_DEFAULT_STRATEGY: _0x2269e5,
      Z_UNKNOWN: _0x464e9d,
      Z_DEFLATED: _0x5ef623
    } = _0x5b3789;
    const _0x19bad7 = 9;
    const _0x3db619 = 15;
    const _0x215320 = 8;
    const _0x5b4ecc = 29;
    const _0x5c8bbd = 256;
    const _0x289b14 = _0x5c8bbd + 1 + _0x5b4ecc;
    const _0x4a3d92 = 30;
    const _0x16a58e = 19;
    const _0x1e97c2 = _0x289b14 * 2 + 1;
    const _0x499c30 = 15;
    const _0x28e0bb = 3;
    const _0xd0ebcb = 258;
    const _0x9c522c = _0xd0ebcb + _0x28e0bb + 1;
    const _0x4612e5 = 32;
    const _0x46a4c6 = 42;
    const _0x427e17 = 57;
    const _0x545e9c = 69;
    const _0x52b6a5 = 73;
    const _0x1e99ab = 91;
    const _0x23ad66 = 103;
    const _0x2717c1 = 113;
    const _0x2552b2 = 666;
    const _0x42d42f = 1;
    const _0x413844 = 2;
    const _0x44d950 = 3;
    const _0x1954a0 = 4;
    const _0x1c3846 = 3;
    const _0x348184 = (_0x2163a7, _0x2e5a47) => {
      _0x2163a7.msg = _0x112a80[_0x2e5a47];
      return _0x2e5a47;
    };
    const _0x2c3b5b = _0x45f73a => {
      return _0x45f73a * 2 - (_0x45f73a > 4 ? 9 : 0);
    };
    const _0x120f8c = _0x2f96e6 => {
      let _0x97a33e = _0x2f96e6.length;
      while (--_0x97a33e >= 0) {
        _0x2f96e6[_0x97a33e] = 0;
      }
    };
    const _0x28e5a0 = _0x7982ed => {
      let _0x1a9b05;
      let _0x1d20ca;
      let _0x110bac;
      let _0x1048a3 = _0x7982ed.w_size;
      _0x1a9b05 = _0x7982ed.hash_size;
      _0x110bac = _0x1a9b05;
      do {
        _0x1d20ca = _0x7982ed.head[--_0x110bac];
        _0x7982ed.head[_0x110bac] = _0x1d20ca >= _0x1048a3 ? _0x1d20ca - _0x1048a3 : 0;
      } while (--_0x1a9b05);
      _0x1a9b05 = _0x1048a3;
      _0x110bac = _0x1a9b05;
      do {
        _0x1d20ca = _0x7982ed.prev[--_0x110bac];
        _0x7982ed.prev[_0x110bac] = _0x1d20ca >= _0x1048a3 ? _0x1d20ca - _0x1048a3 : 0;
      } while (--_0x1a9b05);
    };
    let _0x396f12 = (_0x31fa36, _0x36136a, _0x2c3c90) => (_0x36136a << _0x31fa36.hash_shift ^ _0x2c3c90) & _0x31fa36.hash_mask;
    let _0x1546e7 = _0x396f12;
    const _0x48b5d0 = _0x1324fd => {
      const _0x3c9244 = _0x1324fd.state;
      let _0xd295b0 = _0x3c9244.pending;
      if (_0xd295b0 > _0x1324fd.avail_out) {
        _0xd295b0 = _0x1324fd.avail_out;
      }
      if (_0xd295b0 === 0) {
        return;
      }
      _0x1324fd.output.set(_0x3c9244.pending_buf.subarray(_0x3c9244.pending_out, _0x3c9244.pending_out + _0xd295b0), _0x1324fd.next_out);
      _0x1324fd.next_out += _0xd295b0;
      _0x3c9244.pending_out += _0xd295b0;
      _0x1324fd.total_out += _0xd295b0;
      _0x1324fd.avail_out -= _0xd295b0;
      _0x3c9244.pending -= _0xd295b0;
      if (_0x3c9244.pending === 0) {
        _0x3c9244.pending_out = 0;
      }
    };
    const _0x2ee676 = (_0x22f3b7, _0x50976e) => {
      _0x5001c5(_0x22f3b7, _0x22f3b7.block_start >= 0 ? _0x22f3b7.block_start : -1, _0x22f3b7.strstart - _0x22f3b7.block_start, _0x50976e);
      _0x22f3b7.block_start = _0x22f3b7.strstart;
      _0x48b5d0(_0x22f3b7.strm);
    };
    const _0x180526 = (_0x2f20c5, _0x304ed5) => {
      _0x2f20c5.pending_buf[_0x2f20c5.pending++] = _0x304ed5;
    };
    const _0x226f70 = (_0x370031, _0x30abc1) => {
      _0x370031.pending_buf[_0x370031.pending++] = _0x30abc1 >>> 8 & 255;
      _0x370031.pending_buf[_0x370031.pending++] = _0x30abc1 & 255;
    };
    const _0x46bcc7 = (_0x5bf35e, _0x3bf621, _0xf0115f, _0x11cfb7) => {
      let _0x389da2 = _0x5bf35e.avail_in;
      if (_0x389da2 > _0x11cfb7) {
        _0x389da2 = _0x11cfb7;
      }
      if (_0x389da2 === 0) {
        return 0;
      }
      _0x5bf35e.avail_in -= _0x389da2;
      _0x3bf621.set(_0x5bf35e.input.subarray(_0x5bf35e.next_in, _0x5bf35e.next_in + _0x389da2), _0xf0115f);
      if (_0x5bf35e.state.wrap === 1) {
        _0x5bf35e.adler = _0x3fc282(_0x5bf35e.adler, _0x3bf621, _0x389da2, _0xf0115f);
      } else if (_0x5bf35e.state.wrap === 2) {
        _0x5bf35e.adler = _0x144de8(_0x5bf35e.adler, _0x3bf621, _0x389da2, _0xf0115f);
      }
      _0x5bf35e.next_in += _0x389da2;
      _0x5bf35e.total_in += _0x389da2;
      return _0x389da2;
    };
    const _0x2c551f = (_0x1be6df, _0x140a2) => {
      let _0x1befda = _0x1be6df.max_chain_length;
      let _0x2d2857 = _0x1be6df.strstart;
      let _0x3d14a1;
      let _0x8336d4;
      let _0x15fc35 = _0x1be6df.prev_length;
      let _0xd2da1c = _0x1be6df.nice_match;
      const _0x47da86 = _0x1be6df.strstart > _0x1be6df.w_size - _0x9c522c ? _0x1be6df.strstart - (_0x1be6df.w_size - _0x9c522c) : 0;
      const _0x2e92a7 = _0x1be6df.window;
      const _0x3fbc69 = _0x1be6df.w_mask;
      const _0x35690c = _0x1be6df.prev;
      const _0x1991a1 = _0x1be6df.strstart + _0xd0ebcb;
      let _0x1f57cb = _0x2e92a7[_0x2d2857 + _0x15fc35 - 1];
      let _0x26c9fc = _0x2e92a7[_0x2d2857 + _0x15fc35];
      if (_0x1be6df.prev_length >= _0x1be6df.good_match) {
        _0x1befda >>= 2;
      }
      if (_0xd2da1c > _0x1be6df.lookahead) {
        _0xd2da1c = _0x1be6df.lookahead;
      }
      do {
        _0x3d14a1 = _0x140a2;
        if (_0x2e92a7[_0x3d14a1 + _0x15fc35] !== _0x26c9fc || _0x2e92a7[_0x3d14a1 + _0x15fc35 - 1] !== _0x1f57cb || _0x2e92a7[_0x3d14a1] !== _0x2e92a7[_0x2d2857] || _0x2e92a7[++_0x3d14a1] !== _0x2e92a7[_0x2d2857 + 1]) {
          continue;
        }
        _0x2d2857 += 2;
        _0x3d14a1++;
        do {} while (_0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2e92a7[++_0x2d2857] === _0x2e92a7[++_0x3d14a1] && _0x2d2857 < _0x1991a1);
        _0x8336d4 = _0xd0ebcb - (_0x1991a1 - _0x2d2857);
        _0x2d2857 = _0x1991a1 - _0xd0ebcb;
        if (_0x8336d4 > _0x15fc35) {
          _0x1be6df.match_start = _0x140a2;
          _0x15fc35 = _0x8336d4;
          if (_0x8336d4 >= _0xd2da1c) {
            break;
          }
          _0x1f57cb = _0x2e92a7[_0x2d2857 + _0x15fc35 - 1];
          _0x26c9fc = _0x2e92a7[_0x2d2857 + _0x15fc35];
        }
      } while ((_0x140a2 = _0x35690c[_0x140a2 & _0x3fbc69]) > _0x47da86 && --_0x1befda !== 0);
      if (_0x15fc35 <= _0x1be6df.lookahead) {
        return _0x15fc35;
      }
      return _0x1be6df.lookahead;
    };
    const _0x26440f = _0xe75e58 => {
      const _0x358dd0 = _0xe75e58.w_size;
      let _0x1de562;
      let _0x2f87ca;
      let _0x2a8ead;
      do {
        _0x2f87ca = _0xe75e58.window_size - _0xe75e58.lookahead - _0xe75e58.strstart;
        if (_0xe75e58.strstart >= _0x358dd0 + (_0x358dd0 - _0x9c522c)) {
          _0xe75e58.window.set(_0xe75e58.window.subarray(_0x358dd0, _0x358dd0 + _0x358dd0 - _0x2f87ca), 0);
          _0xe75e58.match_start -= _0x358dd0;
          _0xe75e58.strstart -= _0x358dd0;
          _0xe75e58.block_start -= _0x358dd0;
          if (_0xe75e58.insert > _0xe75e58.strstart) {
            _0xe75e58.insert = _0xe75e58.strstart;
          }
          _0x28e5a0(_0xe75e58);
          _0x2f87ca += _0x358dd0;
        }
        if (_0xe75e58.strm.avail_in === 0) {
          break;
        }
        _0x1de562 = _0x46bcc7(_0xe75e58.strm, _0xe75e58.window, _0xe75e58.strstart + _0xe75e58.lookahead, _0x2f87ca);
        _0xe75e58.lookahead += _0x1de562;
        if (_0xe75e58.lookahead + _0xe75e58.insert >= _0x28e0bb) {
          _0x2a8ead = _0xe75e58.strstart - _0xe75e58.insert;
          _0xe75e58.ins_h = _0xe75e58.window[_0x2a8ead];
          _0xe75e58.ins_h = _0x1546e7(_0xe75e58, _0xe75e58.ins_h, _0xe75e58.window[_0x2a8ead + 1]);
          while (_0xe75e58.insert) {
            _0xe75e58.ins_h = _0x1546e7(_0xe75e58, _0xe75e58.ins_h, _0xe75e58.window[_0x2a8ead + _0x28e0bb - 1]);
            _0xe75e58.prev[_0x2a8ead & _0xe75e58.w_mask] = _0xe75e58.head[_0xe75e58.ins_h];
            _0xe75e58.head[_0xe75e58.ins_h] = _0x2a8ead;
            _0x2a8ead++;
            _0xe75e58.insert--;
            if (_0xe75e58.lookahead + _0xe75e58.insert < _0x28e0bb) {
              break;
            }
          }
        }
      } while (_0xe75e58.lookahead < _0x9c522c && _0xe75e58.strm.avail_in !== 0);
    };
    const _0x84ced6 = (_0x1c59eb, _0x40db06) => {
      let _0x5d3c84 = _0x1c59eb.pending_buf_size - 5 > _0x1c59eb.w_size ? _0x1c59eb.w_size : _0x1c59eb.pending_buf_size - 5;
      let _0x323da7;
      let _0x58ce23;
      let _0x153a5a;
      let _0x5b291d = 0;
      let _0x426f20 = _0x1c59eb.strm.avail_in;
      do {
        _0x323da7 = 65535;
        _0x153a5a = _0x1c59eb.bi_valid + 42 >> 3;
        if (_0x1c59eb.strm.avail_out < _0x153a5a) {
          break;
        }
        _0x153a5a = _0x1c59eb.strm.avail_out - _0x153a5a;
        _0x58ce23 = _0x1c59eb.strstart - _0x1c59eb.block_start;
        if (_0x323da7 > _0x58ce23 + _0x1c59eb.strm.avail_in) {
          _0x323da7 = _0x58ce23 + _0x1c59eb.strm.avail_in;
        }
        if (_0x323da7 > _0x153a5a) {
          _0x323da7 = _0x153a5a;
        }
        if (_0x323da7 < _0x5d3c84 && (_0x323da7 === 0 && _0x40db06 !== _0x530dd1 || _0x40db06 === _0xcfa57b || _0x323da7 !== _0x58ce23 + _0x1c59eb.strm.avail_in)) {
          break;
        }
        _0x5b291d = _0x40db06 === _0x530dd1 && _0x323da7 === _0x58ce23 + _0x1c59eb.strm.avail_in ? 1 : 0;
        _0x3c2f66(_0x1c59eb, 0, 0, _0x5b291d);
        _0x1c59eb.pending_buf[_0x1c59eb.pending - 4] = _0x323da7;
        _0x1c59eb.pending_buf[_0x1c59eb.pending - 3] = _0x323da7 >> 8;
        _0x1c59eb.pending_buf[_0x1c59eb.pending - 2] = ~_0x323da7;
        _0x1c59eb.pending_buf[_0x1c59eb.pending - 1] = ~_0x323da7 >> 8;
        _0x48b5d0(_0x1c59eb.strm);
        if (_0x58ce23) {
          if (_0x58ce23 > _0x323da7) {
            _0x58ce23 = _0x323da7;
          }
          _0x1c59eb.strm.output.set(_0x1c59eb.window.subarray(_0x1c59eb.block_start, _0x1c59eb.block_start + _0x58ce23), _0x1c59eb.strm.next_out);
          _0x1c59eb.strm.next_out += _0x58ce23;
          _0x1c59eb.strm.avail_out -= _0x58ce23;
          _0x1c59eb.strm.total_out += _0x58ce23;
          _0x1c59eb.block_start += _0x58ce23;
          _0x323da7 -= _0x58ce23;
        }
        if (_0x323da7) {
          _0x46bcc7(_0x1c59eb.strm, _0x1c59eb.strm.output, _0x1c59eb.strm.next_out, _0x323da7);
          _0x1c59eb.strm.next_out += _0x323da7;
          _0x1c59eb.strm.avail_out -= _0x323da7;
          _0x1c59eb.strm.total_out += _0x323da7;
        }
      } while (_0x5b291d === 0);
      _0x426f20 -= _0x1c59eb.strm.avail_in;
      if (_0x426f20) {
        if (_0x426f20 >= _0x1c59eb.w_size) {
          _0x1c59eb.matches = 2;
          _0x1c59eb.window.set(_0x1c59eb.strm.input.subarray(_0x1c59eb.strm.next_in - _0x1c59eb.w_size, _0x1c59eb.strm.next_in), 0);
          _0x1c59eb.strstart = _0x1c59eb.w_size;
          _0x1c59eb.insert = _0x1c59eb.strstart;
        } else {
          if (_0x1c59eb.window_size - _0x1c59eb.strstart <= _0x426f20) {
            _0x1c59eb.strstart -= _0x1c59eb.w_size;
            _0x1c59eb.window.set(_0x1c59eb.window.subarray(_0x1c59eb.w_size, _0x1c59eb.w_size + _0x1c59eb.strstart), 0);
            if (_0x1c59eb.matches < 2) {
              _0x1c59eb.matches++;
            }
            if (_0x1c59eb.insert > _0x1c59eb.strstart) {
              _0x1c59eb.insert = _0x1c59eb.strstart;
            }
          }
          _0x1c59eb.window.set(_0x1c59eb.strm.input.subarray(_0x1c59eb.strm.next_in - _0x426f20, _0x1c59eb.strm.next_in), _0x1c59eb.strstart);
          _0x1c59eb.strstart += _0x426f20;
          _0x1c59eb.insert += _0x426f20 > _0x1c59eb.w_size - _0x1c59eb.insert ? _0x1c59eb.w_size - _0x1c59eb.insert : _0x426f20;
        }
        _0x1c59eb.block_start = _0x1c59eb.strstart;
      }
      if (_0x1c59eb.high_water < _0x1c59eb.strstart) {
        _0x1c59eb.high_water = _0x1c59eb.strstart;
      }
      if (_0x5b291d) {
        return _0x1954a0;
      }
      if (_0x40db06 !== _0xcfa57b && _0x40db06 !== _0x530dd1 && _0x1c59eb.strm.avail_in === 0 && _0x1c59eb.strstart === _0x1c59eb.block_start) {
        return _0x413844;
      }
      _0x153a5a = _0x1c59eb.window_size - _0x1c59eb.strstart;
      if (_0x1c59eb.strm.avail_in > _0x153a5a && _0x1c59eb.block_start >= _0x1c59eb.w_size) {
        _0x1c59eb.block_start -= _0x1c59eb.w_size;
        _0x1c59eb.strstart -= _0x1c59eb.w_size;
        _0x1c59eb.window.set(_0x1c59eb.window.subarray(_0x1c59eb.w_size, _0x1c59eb.w_size + _0x1c59eb.strstart), 0);
        if (_0x1c59eb.matches < 2) {
          _0x1c59eb.matches++;
        }
        _0x153a5a += _0x1c59eb.w_size;
        if (_0x1c59eb.insert > _0x1c59eb.strstart) {
          _0x1c59eb.insert = _0x1c59eb.strstart;
        }
      }
      if (_0x153a5a > _0x1c59eb.strm.avail_in) {
        _0x153a5a = _0x1c59eb.strm.avail_in;
      }
      if (_0x153a5a) {
        _0x46bcc7(_0x1c59eb.strm, _0x1c59eb.window, _0x1c59eb.strstart, _0x153a5a);
        _0x1c59eb.strstart += _0x153a5a;
        _0x1c59eb.insert += _0x153a5a > _0x1c59eb.w_size - _0x1c59eb.insert ? _0x1c59eb.w_size - _0x1c59eb.insert : _0x153a5a;
      }
      if (_0x1c59eb.high_water < _0x1c59eb.strstart) {
        _0x1c59eb.high_water = _0x1c59eb.strstart;
      }
      _0x153a5a = _0x1c59eb.bi_valid + 42 >> 3;
      _0x153a5a = _0x1c59eb.pending_buf_size - _0x153a5a > 65535 ? 65535 : _0x1c59eb.pending_buf_size - _0x153a5a;
      _0x5d3c84 = _0x153a5a > _0x1c59eb.w_size ? _0x1c59eb.w_size : _0x153a5a;
      _0x58ce23 = _0x1c59eb.strstart - _0x1c59eb.block_start;
      if (_0x58ce23 >= _0x5d3c84 || (_0x58ce23 || _0x40db06 === _0x530dd1) && _0x40db06 !== _0xcfa57b && _0x1c59eb.strm.avail_in === 0 && _0x58ce23 <= _0x153a5a) {
        _0x323da7 = _0x58ce23 > _0x153a5a ? _0x153a5a : _0x58ce23;
        _0x5b291d = _0x40db06 === _0x530dd1 && _0x1c59eb.strm.avail_in === 0 && _0x323da7 === _0x58ce23 ? 1 : 0;
        _0x3c2f66(_0x1c59eb, _0x1c59eb.block_start, _0x323da7, _0x5b291d);
        _0x1c59eb.block_start += _0x323da7;
        _0x48b5d0(_0x1c59eb.strm);
      }
      if (_0x5b291d) {
        return _0x44d950;
      } else {
        return _0x42d42f;
      }
    };
    const _0x51a268 = (_0x5e3829, _0x2f976d) => {
      let _0xa3eb0d;
      let _0x13abc2;
      while (true) {
        if (_0x5e3829.lookahead < _0x9c522c) {
          _0x26440f(_0x5e3829);
          if (_0x5e3829.lookahead < _0x9c522c && _0x2f976d === _0xcfa57b) {
            return _0x42d42f;
          }
          if (_0x5e3829.lookahead === 0) {
            break;
          }
        }
        _0xa3eb0d = 0;
        if (_0x5e3829.lookahead >= _0x28e0bb) {
          _0x5e3829.ins_h = _0x1546e7(_0x5e3829, _0x5e3829.ins_h, _0x5e3829.window[_0x5e3829.strstart + _0x28e0bb - 1]);
          _0xa3eb0d = _0x5e3829.prev[_0x5e3829.strstart & _0x5e3829.w_mask] = _0x5e3829.head[_0x5e3829.ins_h];
          _0x5e3829.head[_0x5e3829.ins_h] = _0x5e3829.strstart;
        }
        if (_0xa3eb0d !== 0 && _0x5e3829.strstart - _0xa3eb0d <= _0x5e3829.w_size - _0x9c522c) {
          _0x5e3829.match_length = _0x2c551f(_0x5e3829, _0xa3eb0d);
        }
        if (_0x5e3829.match_length >= _0x28e0bb) {
          _0x13abc2 = _0x1a877d(_0x5e3829, _0x5e3829.strstart - _0x5e3829.match_start, _0x5e3829.match_length - _0x28e0bb);
          _0x5e3829.lookahead -= _0x5e3829.match_length;
          if (_0x5e3829.match_length <= _0x5e3829.max_lazy_match && _0x5e3829.lookahead >= _0x28e0bb) {
            _0x5e3829.match_length--;
            do {
              _0x5e3829.strstart++;
              _0x5e3829.ins_h = _0x1546e7(_0x5e3829, _0x5e3829.ins_h, _0x5e3829.window[_0x5e3829.strstart + _0x28e0bb - 1]);
              _0xa3eb0d = _0x5e3829.prev[_0x5e3829.strstart & _0x5e3829.w_mask] = _0x5e3829.head[_0x5e3829.ins_h];
              _0x5e3829.head[_0x5e3829.ins_h] = _0x5e3829.strstart;
            } while (--_0x5e3829.match_length !== 0);
            _0x5e3829.strstart++;
          } else {
            _0x5e3829.strstart += _0x5e3829.match_length;
            _0x5e3829.match_length = 0;
            _0x5e3829.ins_h = _0x5e3829.window[_0x5e3829.strstart];
            _0x5e3829.ins_h = _0x1546e7(_0x5e3829, _0x5e3829.ins_h, _0x5e3829.window[_0x5e3829.strstart + 1]);
          }
        } else {
          _0x13abc2 = _0x1a877d(_0x5e3829, 0, _0x5e3829.window[_0x5e3829.strstart]);
          _0x5e3829.lookahead--;
          _0x5e3829.strstart++;
        }
        if (_0x13abc2) {
          _0x2ee676(_0x5e3829, false);
          if (_0x5e3829.strm.avail_out === 0) {
            return _0x42d42f;
          }
        }
      }
      _0x5e3829.insert = _0x5e3829.strstart < _0x28e0bb - 1 ? _0x5e3829.strstart : _0x28e0bb - 1;
      if (_0x2f976d === _0x530dd1) {
        _0x2ee676(_0x5e3829, true);
        if (_0x5e3829.strm.avail_out === 0) {
          return _0x44d950;
        }
        return _0x1954a0;
      }
      if (_0x5e3829.sym_next) {
        _0x2ee676(_0x5e3829, false);
        if (_0x5e3829.strm.avail_out === 0) {
          return _0x42d42f;
        }
      }
      return _0x413844;
    };
    const _0x564d88 = (_0x43c873, _0x56c152) => {
      let _0x317d33;
      let _0x55da9d;
      let _0x193081;
      while (true) {
        if (_0x43c873.lookahead < _0x9c522c) {
          _0x26440f(_0x43c873);
          if (_0x43c873.lookahead < _0x9c522c && _0x56c152 === _0xcfa57b) {
            return _0x42d42f;
          }
          if (_0x43c873.lookahead === 0) {
            break;
          }
        }
        _0x317d33 = 0;
        if (_0x43c873.lookahead >= _0x28e0bb) {
          _0x43c873.ins_h = _0x1546e7(_0x43c873, _0x43c873.ins_h, _0x43c873.window[_0x43c873.strstart + _0x28e0bb - 1]);
          _0x317d33 = _0x43c873.prev[_0x43c873.strstart & _0x43c873.w_mask] = _0x43c873.head[_0x43c873.ins_h];
          _0x43c873.head[_0x43c873.ins_h] = _0x43c873.strstart;
        }
        _0x43c873.prev_length = _0x43c873.match_length;
        _0x43c873.prev_match = _0x43c873.match_start;
        _0x43c873.match_length = _0x28e0bb - 1;
        if (_0x317d33 !== 0 && _0x43c873.prev_length < _0x43c873.max_lazy_match && _0x43c873.strstart - _0x317d33 <= _0x43c873.w_size - _0x9c522c) {
          _0x43c873.match_length = _0x2c551f(_0x43c873, _0x317d33);
          if (_0x43c873.match_length <= 5 && (_0x43c873.strategy === _0x23545e || _0x43c873.match_length === _0x28e0bb && _0x43c873.strstart - _0x43c873.match_start > 4096)) {
            _0x43c873.match_length = _0x28e0bb - 1;
          }
        }
        if (_0x43c873.prev_length >= _0x28e0bb && _0x43c873.match_length <= _0x43c873.prev_length) {
          _0x193081 = _0x43c873.strstart + _0x43c873.lookahead - _0x28e0bb;
          _0x55da9d = _0x1a877d(_0x43c873, _0x43c873.strstart - 1 - _0x43c873.prev_match, _0x43c873.prev_length - _0x28e0bb);
          _0x43c873.lookahead -= _0x43c873.prev_length - 1;
          _0x43c873.prev_length -= 2;
          do {
            if (++_0x43c873.strstart <= _0x193081) {
              _0x43c873.ins_h = _0x1546e7(_0x43c873, _0x43c873.ins_h, _0x43c873.window[_0x43c873.strstart + _0x28e0bb - 1]);
              _0x317d33 = _0x43c873.prev[_0x43c873.strstart & _0x43c873.w_mask] = _0x43c873.head[_0x43c873.ins_h];
              _0x43c873.head[_0x43c873.ins_h] = _0x43c873.strstart;
            }
          } while (--_0x43c873.prev_length !== 0);
          _0x43c873.match_available = 0;
          _0x43c873.match_length = _0x28e0bb - 1;
          _0x43c873.strstart++;
          if (_0x55da9d) {
            _0x2ee676(_0x43c873, false);
            if (_0x43c873.strm.avail_out === 0) {
              return _0x42d42f;
            }
          }
        } else if (_0x43c873.match_available) {
          _0x55da9d = _0x1a877d(_0x43c873, 0, _0x43c873.window[_0x43c873.strstart - 1]);
          if (_0x55da9d) {
            _0x2ee676(_0x43c873, false);
          }
          _0x43c873.strstart++;
          _0x43c873.lookahead--;
          if (_0x43c873.strm.avail_out === 0) {
            return _0x42d42f;
          }
        } else {
          _0x43c873.match_available = 1;
          _0x43c873.strstart++;
          _0x43c873.lookahead--;
        }
      }
      if (_0x43c873.match_available) {
        _0x55da9d = _0x1a877d(_0x43c873, 0, _0x43c873.window[_0x43c873.strstart - 1]);
        _0x43c873.match_available = 0;
      }
      _0x43c873.insert = _0x43c873.strstart < _0x28e0bb - 1 ? _0x43c873.strstart : _0x28e0bb - 1;
      if (_0x56c152 === _0x530dd1) {
        _0x2ee676(_0x43c873, true);
        if (_0x43c873.strm.avail_out === 0) {
          return _0x44d950;
        }
        return _0x1954a0;
      }
      if (_0x43c873.sym_next) {
        _0x2ee676(_0x43c873, false);
        if (_0x43c873.strm.avail_out === 0) {
          return _0x42d42f;
        }
      }
      return _0x413844;
    };
    const _0x2d66fb = (_0x1726b4, _0x3e8f91) => {
      let _0x3502b4;
      let _0x576f4d;
      let _0x3d55de;
      let _0xa38af5;
      const _0x52ac21 = _0x1726b4.window;
      while (true) {
        if (_0x1726b4.lookahead <= _0xd0ebcb) {
          _0x26440f(_0x1726b4);
          if (_0x1726b4.lookahead <= _0xd0ebcb && _0x3e8f91 === _0xcfa57b) {
            return _0x42d42f;
          }
          if (_0x1726b4.lookahead === 0) {
            break;
          }
        }
        _0x1726b4.match_length = 0;
        if (_0x1726b4.lookahead >= _0x28e0bb && _0x1726b4.strstart > 0) {
          _0x3d55de = _0x1726b4.strstart - 1;
          _0x576f4d = _0x52ac21[_0x3d55de];
          if (_0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de]) {
            _0xa38af5 = _0x1726b4.strstart + _0xd0ebcb;
            do {} while (_0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x576f4d === _0x52ac21[++_0x3d55de] && _0x3d55de < _0xa38af5);
            _0x1726b4.match_length = _0xd0ebcb - (_0xa38af5 - _0x3d55de);
            if (_0x1726b4.match_length > _0x1726b4.lookahead) {
              _0x1726b4.match_length = _0x1726b4.lookahead;
            }
          }
        }
        if (_0x1726b4.match_length >= _0x28e0bb) {
          _0x3502b4 = _0x1a877d(_0x1726b4, 1, _0x1726b4.match_length - _0x28e0bb);
          _0x1726b4.lookahead -= _0x1726b4.match_length;
          _0x1726b4.strstart += _0x1726b4.match_length;
          _0x1726b4.match_length = 0;
        } else {
          _0x3502b4 = _0x1a877d(_0x1726b4, 0, _0x1726b4.window[_0x1726b4.strstart]);
          _0x1726b4.lookahead--;
          _0x1726b4.strstart++;
        }
        if (_0x3502b4) {
          _0x2ee676(_0x1726b4, false);
          if (_0x1726b4.strm.avail_out === 0) {
            return _0x42d42f;
          }
        }
      }
      _0x1726b4.insert = 0;
      if (_0x3e8f91 === _0x530dd1) {
        _0x2ee676(_0x1726b4, true);
        if (_0x1726b4.strm.avail_out === 0) {
          return _0x44d950;
        }
        return _0x1954a0;
      }
      if (_0x1726b4.sym_next) {
        _0x2ee676(_0x1726b4, false);
        if (_0x1726b4.strm.avail_out === 0) {
          return _0x42d42f;
        }
      }
      return _0x413844;
    };
    const _0x32c1f6 = (_0x25d474, _0x5280f9) => {
      let _0x15faa;
      while (true) {
        if (_0x25d474.lookahead === 0) {
          _0x26440f(_0x25d474);
          if (_0x25d474.lookahead === 0) {
            if (_0x5280f9 === _0xcfa57b) {
              return _0x42d42f;
            }
            break;
          }
        }
        _0x25d474.match_length = 0;
        _0x15faa = _0x1a877d(_0x25d474, 0, _0x25d474.window[_0x25d474.strstart]);
        _0x25d474.lookahead--;
        _0x25d474.strstart++;
        if (_0x15faa) {
          _0x2ee676(_0x25d474, false);
          if (_0x25d474.strm.avail_out === 0) {
            return _0x42d42f;
          }
        }
      }
      _0x25d474.insert = 0;
      if (_0x5280f9 === _0x530dd1) {
        _0x2ee676(_0x25d474, true);
        if (_0x25d474.strm.avail_out === 0) {
          return _0x44d950;
        }
        return _0x1954a0;
      }
      if (_0x25d474.sym_next) {
        _0x2ee676(_0x25d474, false);
        if (_0x25d474.strm.avail_out === 0) {
          return _0x42d42f;
        }
      }
      return _0x413844;
    };
    function _0x5acc2c(_0x235d69, _0x5a0b16, _0x457c8d, _0x53af3f, _0x5ee170) {
      this.good_length = _0x235d69;
      this.max_lazy = _0x5a0b16;
      this.nice_length = _0x457c8d;
      this.max_chain = _0x53af3f;
      this.func = _0x5ee170;
    }
    const _0xcdcfe5 = [new _0x5acc2c(0, 0, 0, 0, _0x84ced6), new _0x5acc2c(4, 4, 8, 4, _0x51a268), new _0x5acc2c(4, 5, 16, 8, _0x51a268), new _0x5acc2c(4, 6, 32, 32, _0x51a268), new _0x5acc2c(4, 4, 16, 16, _0x564d88), new _0x5acc2c(8, 16, 32, 32, _0x564d88), new _0x5acc2c(8, 16, 128, 128, _0x564d88), new _0x5acc2c(8, 32, 128, 256, _0x564d88), new _0x5acc2c(32, 128, 258, 1024, _0x564d88), new _0x5acc2c(32, 258, 258, 4096, _0x564d88)];
    const _0x257ef8 = _0x171319 => {
      _0x171319.window_size = _0x171319.w_size * 2;
      _0x120f8c(_0x171319.head);
      _0x171319.max_lazy_match = _0xcdcfe5[_0x171319.level].max_lazy;
      _0x171319.good_match = _0xcdcfe5[_0x171319.level].good_length;
      _0x171319.nice_match = _0xcdcfe5[_0x171319.level].nice_length;
      _0x171319.max_chain_length = _0xcdcfe5[_0x171319.level].max_chain;
      _0x171319.strstart = 0;
      _0x171319.block_start = 0;
      _0x171319.lookahead = 0;
      _0x171319.insert = 0;
      _0x171319.match_length = _0x171319.prev_length = _0x28e0bb - 1;
      _0x171319.match_available = 0;
      _0x171319.ins_h = 0;
    };
    function _0xe1bc0d() {
      this.strm = null;
      this.status = 0;
      this.pending_buf = null;
      this.pending_buf_size = 0;
      this.pending_out = 0;
      this.pending = 0;
      this.wrap = 0;
      this.gzhead = null;
      this.gzindex = 0;
      this.method = _0x5ef623;
      this.last_flush = -1;
      this.w_size = 0;
      this.w_bits = 0;
      this.w_mask = 0;
      this.window = null;
      this.window_size = 0;
      this.prev = null;
      this.head = null;
      this.ins_h = 0;
      this.hash_size = 0;
      this.hash_bits = 0;
      this.hash_mask = 0;
      this.hash_shift = 0;
      this.block_start = 0;
      this.match_length = 0;
      this.prev_match = 0;
      this.match_available = 0;
      this.strstart = 0;
      this.match_start = 0;
      this.lookahead = 0;
      this.prev_length = 0;
      this.max_chain_length = 0;
      this.max_lazy_match = 0;
      this.level = 0;
      this.strategy = 0;
      this.good_match = 0;
      this.nice_match = 0;
      this.dyn_ltree = new Uint16Array(_0x1e97c2 * 2);
      this.dyn_dtree = new Uint16Array((_0x4a3d92 * 2 + 1) * 2);
      this.bl_tree = new Uint16Array((_0x16a58e * 2 + 1) * 2);
      _0x120f8c(this.dyn_ltree);
      _0x120f8c(this.dyn_dtree);
      _0x120f8c(this.bl_tree);
      this.l_desc = null;
      this.d_desc = null;
      this.bl_desc = null;
      this.bl_count = new Uint16Array(_0x499c30 + 1);
      this.heap = new Uint16Array(_0x289b14 * 2 + 1);
      _0x120f8c(this.heap);
      this.heap_len = 0;
      this.heap_max = 0;
      this.depth = new Uint16Array(_0x289b14 * 2 + 1);
      _0x120f8c(this.depth);
      this.sym_buf = 0;
      this.lit_bufsize = 0;
      this.sym_next = 0;
      this.sym_end = 0;
      this.opt_len = 0;
      this.static_len = 0;
      this.matches = 0;
      this.insert = 0;
      this.bi_buf = 0;
      this.bi_valid = 0;
    }
    const _0x282b59 = _0x52afb8 => {
      if (!_0x52afb8) {
        return 1;
      }
      const _0x4c9260 = _0x52afb8.state;
      if (!_0x4c9260 || _0x4c9260.strm !== _0x52afb8 || _0x4c9260.status !== _0x46a4c6 && _0x4c9260.status !== _0x427e17 && _0x4c9260.status !== _0x545e9c && _0x4c9260.status !== _0x52b6a5 && _0x4c9260.status !== _0x1e99ab && _0x4c9260.status !== _0x23ad66 && _0x4c9260.status !== _0x2717c1 && _0x4c9260.status !== _0x2552b2) {
        return 1;
      }
      return 0;
    };
    const _0x5549aa = _0x4d3fba => {
      if (_0x282b59(_0x4d3fba)) {
        return _0x348184(_0x4d3fba, _0x4cdef4);
      }
      _0x4d3fba.total_in = _0x4d3fba.total_out = 0;
      _0x4d3fba.data_type = _0x464e9d;
      const _0x14bf3e = _0x4d3fba.state;
      _0x14bf3e.pending = 0;
      _0x14bf3e.pending_out = 0;
      if (_0x14bf3e.wrap < 0) {
        _0x14bf3e.wrap = -_0x14bf3e.wrap;
      }
      _0x14bf3e.status = _0x14bf3e.wrap === 2 ? _0x427e17 : _0x14bf3e.wrap ? _0x46a4c6 : _0x2717c1;
      _0x4d3fba.adler = _0x14bf3e.wrap === 2 ? 0 : 1;
      _0x14bf3e.last_flush = -2;
      _0x1be570(_0x14bf3e);
      return _0x178c3e;
    };
    const _0x321bc1 = _0x1f1400 => {
      const _0xa4b3a9 = _0x5549aa(_0x1f1400);
      if (_0xa4b3a9 === _0x178c3e) {
        _0x257ef8(_0x1f1400.state);
      }
      return _0xa4b3a9;
    };
    const _0x2880b4 = (_0x16a300, _0x47dc77) => {
      if (_0x282b59(_0x16a300) || _0x16a300.state.wrap !== 2) {
        return _0x4cdef4;
      }
      _0x16a300.state.gzhead = _0x47dc77;
      return _0x178c3e;
    };
    const _0x381bad = (_0x39a303, _0x2dc308, _0x28247f, _0x36f486, _0x2456d1, _0xaaed32) => {
      if (!_0x39a303) {
        return _0x4cdef4;
      }
      let _0x533cce = 1;
      if (_0x2dc308 === _0x5759dc) {
        _0x2dc308 = 6;
      }
      if (_0x36f486 < 0) {
        _0x533cce = 0;
        _0x36f486 = -_0x36f486;
      } else if (_0x36f486 > 15) {
        _0x533cce = 2;
        _0x36f486 -= 16;
      }
      if (_0x2456d1 < 1 || _0x2456d1 > _0x19bad7 || _0x28247f !== _0x5ef623 || _0x36f486 < 8 || _0x36f486 > 15 || _0x2dc308 < 0 || _0x2dc308 > 9 || _0xaaed32 < 0 || _0xaaed32 > _0x492854 || _0x36f486 === 8 && _0x533cce !== 1) {
        return _0x348184(_0x39a303, _0x4cdef4);
      }
      if (_0x36f486 === 8) {
        _0x36f486 = 9;
      }
      const _0x4f1cf1 = new _0xe1bc0d();
      _0x39a303.state = _0x4f1cf1;
      _0x4f1cf1.strm = _0x39a303;
      _0x4f1cf1.status = _0x46a4c6;
      _0x4f1cf1.wrap = _0x533cce;
      _0x4f1cf1.gzhead = null;
      _0x4f1cf1.w_bits = _0x36f486;
      _0x4f1cf1.w_size = 1 << _0x4f1cf1.w_bits;
      _0x4f1cf1.w_mask = _0x4f1cf1.w_size - 1;
      _0x4f1cf1.hash_bits = _0x2456d1 + 7;
      _0x4f1cf1.hash_size = 1 << _0x4f1cf1.hash_bits;
      _0x4f1cf1.hash_mask = _0x4f1cf1.hash_size - 1;
      _0x4f1cf1.hash_shift = ~~((_0x4f1cf1.hash_bits + _0x28e0bb - 1) / _0x28e0bb);
      _0x4f1cf1.window = new Uint8Array(_0x4f1cf1.w_size * 2);
      _0x4f1cf1.head = new Uint16Array(_0x4f1cf1.hash_size);
      _0x4f1cf1.prev = new Uint16Array(_0x4f1cf1.w_size);
      _0x4f1cf1.lit_bufsize = 1 << _0x2456d1 + 6;
      _0x4f1cf1.pending_buf_size = _0x4f1cf1.lit_bufsize * 4;
      _0x4f1cf1.pending_buf = new Uint8Array(_0x4f1cf1.pending_buf_size);
      _0x4f1cf1.sym_buf = _0x4f1cf1.lit_bufsize;
      _0x4f1cf1.sym_end = (_0x4f1cf1.lit_bufsize - 1) * 3;
      _0x4f1cf1.level = _0x2dc308;
      _0x4f1cf1.strategy = _0xaaed32;
      _0x4f1cf1.method = _0x28247f;
      return _0x321bc1(_0x39a303);
    };
    const _0x18b42d = (_0x3890c2, _0x52a66a) => {
      return _0x381bad(_0x3890c2, _0x52a66a, _0x5ef623, _0x3db619, _0x215320, _0x2269e5);
    };
    const _0x59be03 = (_0x3456ad, _0x157f16) => {
      if (_0x282b59(_0x3456ad) || _0x157f16 > _0x4dd50e || _0x157f16 < 0) {
        if (_0x3456ad) {
          return _0x348184(_0x3456ad, _0x4cdef4);
        } else {
          return _0x4cdef4;
        }
      }
      const _0x319aa9 = _0x3456ad.state;
      if (!_0x3456ad.output || _0x3456ad.avail_in !== 0 && !_0x3456ad.input || _0x319aa9.status === _0x2552b2 && _0x157f16 !== _0x530dd1) {
        return _0x348184(_0x3456ad, _0x3456ad.avail_out === 0 ? _0x49b637 : _0x4cdef4);
      }
      const _0x5b940c = _0x319aa9.last_flush;
      _0x319aa9.last_flush = _0x157f16;
      if (_0x319aa9.pending !== 0) {
        _0x48b5d0(_0x3456ad);
        if (_0x3456ad.avail_out === 0) {
          _0x319aa9.last_flush = -1;
          return _0x178c3e;
        }
      } else if (_0x3456ad.avail_in === 0 && _0x2c3b5b(_0x157f16) <= _0x2c3b5b(_0x5b940c) && _0x157f16 !== _0x530dd1) {
        return _0x348184(_0x3456ad, _0x49b637);
      }
      if (_0x319aa9.status === _0x2552b2 && _0x3456ad.avail_in !== 0) {
        return _0x348184(_0x3456ad, _0x49b637);
      }
      if (_0x319aa9.status === _0x46a4c6 && _0x319aa9.wrap === 0) {
        _0x319aa9.status = _0x2717c1;
      }
      if (_0x319aa9.status === _0x46a4c6) {
        let _0x4ad51f = _0x5ef623 + (_0x319aa9.w_bits - 8 << 4) << 8;
        let _0x463ed4 = -1;
        if (_0x319aa9.strategy >= _0x2e0225 || _0x319aa9.level < 2) {
          _0x463ed4 = 0;
        } else if (_0x319aa9.level < 6) {
          _0x463ed4 = 1;
        } else if (_0x319aa9.level === 6) {
          _0x463ed4 = 2;
        } else {
          _0x463ed4 = 3;
        }
        _0x4ad51f |= _0x463ed4 << 6;
        if (_0x319aa9.strstart !== 0) {
          _0x4ad51f |= _0x4612e5;
        }
        _0x4ad51f += 31 - _0x4ad51f % 31;
        _0x226f70(_0x319aa9, _0x4ad51f);
        if (_0x319aa9.strstart !== 0) {
          _0x226f70(_0x319aa9, _0x3456ad.adler >>> 16);
          _0x226f70(_0x319aa9, _0x3456ad.adler & 65535);
        }
        _0x3456ad.adler = 1;
        _0x319aa9.status = _0x2717c1;
        _0x48b5d0(_0x3456ad);
        if (_0x319aa9.pending !== 0) {
          _0x319aa9.last_flush = -1;
          return _0x178c3e;
        }
      }
      if (_0x319aa9.status === _0x427e17) {
        _0x3456ad.adler = 0;
        _0x180526(_0x319aa9, 31);
        _0x180526(_0x319aa9, 139);
        _0x180526(_0x319aa9, 8);
        if (!_0x319aa9.gzhead) {
          _0x180526(_0x319aa9, 0);
          _0x180526(_0x319aa9, 0);
          _0x180526(_0x319aa9, 0);
          _0x180526(_0x319aa9, 0);
          _0x180526(_0x319aa9, 0);
          _0x180526(_0x319aa9, _0x319aa9.level === 9 ? 2 : _0x319aa9.strategy >= _0x2e0225 || _0x319aa9.level < 2 ? 4 : 0);
          _0x180526(_0x319aa9, _0x1c3846);
          _0x319aa9.status = _0x2717c1;
          _0x48b5d0(_0x3456ad);
          if (_0x319aa9.pending !== 0) {
            _0x319aa9.last_flush = -1;
            return _0x178c3e;
          }
        } else {
          _0x180526(_0x319aa9, (_0x319aa9.gzhead.text ? 1 : 0) + (_0x319aa9.gzhead.hcrc ? 2 : 0) + (!_0x319aa9.gzhead.extra ? 0 : 4) + (!_0x319aa9.gzhead.name ? 0 : 8) + (!_0x319aa9.gzhead.comment ? 0 : 16));
          _0x180526(_0x319aa9, _0x319aa9.gzhead.time & 255);
          _0x180526(_0x319aa9, _0x319aa9.gzhead.time >> 8 & 255);
          _0x180526(_0x319aa9, _0x319aa9.gzhead.time >> 16 & 255);
          _0x180526(_0x319aa9, _0x319aa9.gzhead.time >> 24 & 255);
          _0x180526(_0x319aa9, _0x319aa9.level === 9 ? 2 : _0x319aa9.strategy >= _0x2e0225 || _0x319aa9.level < 2 ? 4 : 0);
          _0x180526(_0x319aa9, _0x319aa9.gzhead.os & 255);
          if (_0x319aa9.gzhead.extra && _0x319aa9.gzhead.extra.length) {
            _0x180526(_0x319aa9, _0x319aa9.gzhead.extra.length & 255);
            _0x180526(_0x319aa9, _0x319aa9.gzhead.extra.length >> 8 & 255);
          }
          if (_0x319aa9.gzhead.hcrc) {
            _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending, 0);
          }
          _0x319aa9.gzindex = 0;
          _0x319aa9.status = _0x545e9c;
        }
      }
      if (_0x319aa9.status === _0x545e9c) {
        if (_0x319aa9.gzhead.extra) {
          let _0x44f2c5 = _0x319aa9.pending;
          let _0x30551a = (_0x319aa9.gzhead.extra.length & 65535) - _0x319aa9.gzindex;
          while (_0x319aa9.pending + _0x30551a > _0x319aa9.pending_buf_size) {
            let _0x2a961e = _0x319aa9.pending_buf_size - _0x319aa9.pending;
            _0x319aa9.pending_buf.set(_0x319aa9.gzhead.extra.subarray(_0x319aa9.gzindex, _0x319aa9.gzindex + _0x2a961e), _0x319aa9.pending);
            _0x319aa9.pending = _0x319aa9.pending_buf_size;
            if (_0x319aa9.gzhead.hcrc && _0x319aa9.pending > _0x44f2c5) {
              _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending - _0x44f2c5, _0x44f2c5);
            }
            _0x319aa9.gzindex += _0x2a961e;
            _0x48b5d0(_0x3456ad);
            if (_0x319aa9.pending !== 0) {
              _0x319aa9.last_flush = -1;
              return _0x178c3e;
            }
            _0x44f2c5 = 0;
            _0x30551a -= _0x2a961e;
          }
          let _0x4d62cd = new Uint8Array(_0x319aa9.gzhead.extra);
          _0x319aa9.pending_buf.set(_0x4d62cd.subarray(_0x319aa9.gzindex, _0x319aa9.gzindex + _0x30551a), _0x319aa9.pending);
          _0x319aa9.pending += _0x30551a;
          if (_0x319aa9.gzhead.hcrc && _0x319aa9.pending > _0x44f2c5) {
            _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending - _0x44f2c5, _0x44f2c5);
          }
          _0x319aa9.gzindex = 0;
        }
        _0x319aa9.status = _0x52b6a5;
      }
      if (_0x319aa9.status === _0x52b6a5) {
        if (_0x319aa9.gzhead.name) {
          let _0x56877d = _0x319aa9.pending;
          let _0x33c958;
          do {
            if (_0x319aa9.pending === _0x319aa9.pending_buf_size) {
              if (_0x319aa9.gzhead.hcrc && _0x319aa9.pending > _0x56877d) {
                _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending - _0x56877d, _0x56877d);
              }
              _0x48b5d0(_0x3456ad);
              if (_0x319aa9.pending !== 0) {
                _0x319aa9.last_flush = -1;
                return _0x178c3e;
              }
              _0x56877d = 0;
            }
            if (_0x319aa9.gzindex < _0x319aa9.gzhead.name.length) {
              _0x33c958 = _0x319aa9.gzhead.name.charCodeAt(_0x319aa9.gzindex++) & 255;
            } else {
              _0x33c958 = 0;
            }
            _0x180526(_0x319aa9, _0x33c958);
          } while (_0x33c958 !== 0);
          if (_0x319aa9.gzhead.hcrc && _0x319aa9.pending > _0x56877d) {
            _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending - _0x56877d, _0x56877d);
          }
          _0x319aa9.gzindex = 0;
        }
        _0x319aa9.status = _0x1e99ab;
      }
      if (_0x319aa9.status === _0x1e99ab) {
        if (_0x319aa9.gzhead.comment) {
          let _0x400057 = _0x319aa9.pending;
          let _0x1f8da2;
          do {
            if (_0x319aa9.pending === _0x319aa9.pending_buf_size) {
              if (_0x319aa9.gzhead.hcrc && _0x319aa9.pending > _0x400057) {
                _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending - _0x400057, _0x400057);
              }
              _0x48b5d0(_0x3456ad);
              if (_0x319aa9.pending !== 0) {
                _0x319aa9.last_flush = -1;
                return _0x178c3e;
              }
              _0x400057 = 0;
            }
            if (_0x319aa9.gzindex < _0x319aa9.gzhead.comment.length) {
              _0x1f8da2 = _0x319aa9.gzhead.comment.charCodeAt(_0x319aa9.gzindex++) & 255;
            } else {
              _0x1f8da2 = 0;
            }
            _0x180526(_0x319aa9, _0x1f8da2);
          } while (_0x1f8da2 !== 0);
          if (_0x319aa9.gzhead.hcrc && _0x319aa9.pending > _0x400057) {
            _0x3456ad.adler = _0x144de8(_0x3456ad.adler, _0x319aa9.pending_buf, _0x319aa9.pending - _0x400057, _0x400057);
          }
        }
        _0x319aa9.status = _0x23ad66;
      }
      if (_0x319aa9.status === _0x23ad66) {
        if (_0x319aa9.gzhead.hcrc) {
          if (_0x319aa9.pending + 2 > _0x319aa9.pending_buf_size) {
            _0x48b5d0(_0x3456ad);
            if (_0x319aa9.pending !== 0) {
              _0x319aa9.last_flush = -1;
              return _0x178c3e;
            }
          }
          _0x180526(_0x319aa9, _0x3456ad.adler & 255);
          _0x180526(_0x319aa9, _0x3456ad.adler >> 8 & 255);
          _0x3456ad.adler = 0;
        }
        _0x319aa9.status = _0x2717c1;
        _0x48b5d0(_0x3456ad);
        if (_0x319aa9.pending !== 0) {
          _0x319aa9.last_flush = -1;
          return _0x178c3e;
        }
      }
      if (_0x3456ad.avail_in !== 0 || _0x319aa9.lookahead !== 0 || _0x157f16 !== _0xcfa57b && _0x319aa9.status !== _0x2552b2) {
        let _0x33a480 = _0x319aa9.level === 0 ? _0x84ced6(_0x319aa9, _0x157f16) : _0x319aa9.strategy === _0x2e0225 ? _0x32c1f6(_0x319aa9, _0x157f16) : _0x319aa9.strategy === _0x5f0dc9 ? _0x2d66fb(_0x319aa9, _0x157f16) : _0xcdcfe5[_0x319aa9.level].func(_0x319aa9, _0x157f16);
        if (_0x33a480 === _0x44d950 || _0x33a480 === _0x1954a0) {
          _0x319aa9.status = _0x2552b2;
        }
        if (_0x33a480 === _0x42d42f || _0x33a480 === _0x44d950) {
          if (_0x3456ad.avail_out === 0) {
            _0x319aa9.last_flush = -1;
          }
          return _0x178c3e;
        }
        if (_0x33a480 === _0x413844) {
          if (_0x157f16 === _0x4aa0c5) {
            _0x7f5504(_0x319aa9);
          } else if (_0x157f16 !== _0x4dd50e) {
            _0x3c2f66(_0x319aa9, 0, 0, false);
            if (_0x157f16 === _0x10b0f8) {
              _0x120f8c(_0x319aa9.head);
              if (_0x319aa9.lookahead === 0) {
                _0x319aa9.strstart = 0;
                _0x319aa9.block_start = 0;
                _0x319aa9.insert = 0;
              }
            }
          }
          _0x48b5d0(_0x3456ad);
          if (_0x3456ad.avail_out === 0) {
            _0x319aa9.last_flush = -1;
            return _0x178c3e;
          }
        }
      }
      if (_0x157f16 !== _0x530dd1) {
        return _0x178c3e;
      }
      if (_0x319aa9.wrap <= 0) {
        return _0x2a85e0;
      }
      if (_0x319aa9.wrap === 2) {
        _0x180526(_0x319aa9, _0x3456ad.adler & 255);
        _0x180526(_0x319aa9, _0x3456ad.adler >> 8 & 255);
        _0x180526(_0x319aa9, _0x3456ad.adler >> 16 & 255);
        _0x180526(_0x319aa9, _0x3456ad.adler >> 24 & 255);
        _0x180526(_0x319aa9, _0x3456ad.total_in & 255);
        _0x180526(_0x319aa9, _0x3456ad.total_in >> 8 & 255);
        _0x180526(_0x319aa9, _0x3456ad.total_in >> 16 & 255);
        _0x180526(_0x319aa9, _0x3456ad.total_in >> 24 & 255);
      } else {
        _0x226f70(_0x319aa9, _0x3456ad.adler >>> 16);
        _0x226f70(_0x319aa9, _0x3456ad.adler & 65535);
      }
      _0x48b5d0(_0x3456ad);
      if (_0x319aa9.wrap > 0) {
        _0x319aa9.wrap = -_0x319aa9.wrap;
      }
      if (_0x319aa9.pending !== 0) {
        return _0x178c3e;
      } else {
        return _0x2a85e0;
      }
    };
    const _0x24f987 = _0x4e5094 => {
      if (_0x282b59(_0x4e5094)) {
        return _0x4cdef4;
      }
      const _0x2833b0 = _0x4e5094.state.status;
      _0x4e5094.state = null;
      if (_0x2833b0 === _0x2717c1) {
        return _0x348184(_0x4e5094, _0x44d78b);
      } else {
        return _0x178c3e;
      }
    };
    const _0x3a5bfd = (_0x5d39a3, _0x3a1c0f) => {
      let _0x31dbd5 = _0x3a1c0f.length;
      if (_0x282b59(_0x5d39a3)) {
        return _0x4cdef4;
      }
      const _0x55d2cf = _0x5d39a3.state;
      const _0x10f7cd = _0x55d2cf.wrap;
      if (_0x10f7cd === 2 || _0x10f7cd === 1 && _0x55d2cf.status !== _0x46a4c6 || _0x55d2cf.lookahead) {
        return _0x4cdef4;
      }
      if (_0x10f7cd === 1) {
        _0x5d39a3.adler = _0x3fc282(_0x5d39a3.adler, _0x3a1c0f, _0x31dbd5, 0);
      }
      _0x55d2cf.wrap = 0;
      if (_0x31dbd5 >= _0x55d2cf.w_size) {
        if (_0x10f7cd === 0) {
          _0x120f8c(_0x55d2cf.head);
          _0x55d2cf.strstart = 0;
          _0x55d2cf.block_start = 0;
          _0x55d2cf.insert = 0;
        }
        let _0x387477 = new Uint8Array(_0x55d2cf.w_size);
        _0x387477.set(_0x3a1c0f.subarray(_0x31dbd5 - _0x55d2cf.w_size, _0x31dbd5), 0);
        _0x3a1c0f = _0x387477;
        _0x31dbd5 = _0x55d2cf.w_size;
      }
      const _0x7b9e67 = _0x5d39a3.avail_in;
      const _0xe1452f = _0x5d39a3.next_in;
      const _0x4a422f = _0x5d39a3.input;
      _0x5d39a3.avail_in = _0x31dbd5;
      _0x5d39a3.next_in = 0;
      _0x5d39a3.input = _0x3a1c0f;
      _0x26440f(_0x55d2cf);
      while (_0x55d2cf.lookahead >= _0x28e0bb) {
        let _0x1d33c3 = _0x55d2cf.strstart;
        let _0x10fbc0 = _0x55d2cf.lookahead - (_0x28e0bb - 1);
        do {
          _0x55d2cf.ins_h = _0x1546e7(_0x55d2cf, _0x55d2cf.ins_h, _0x55d2cf.window[_0x1d33c3 + _0x28e0bb - 1]);
          _0x55d2cf.prev[_0x1d33c3 & _0x55d2cf.w_mask] = _0x55d2cf.head[_0x55d2cf.ins_h];
          _0x55d2cf.head[_0x55d2cf.ins_h] = _0x1d33c3;
          _0x1d33c3++;
        } while (--_0x10fbc0);
        _0x55d2cf.strstart = _0x1d33c3;
        _0x55d2cf.lookahead = _0x28e0bb - 1;
        _0x26440f(_0x55d2cf);
      }
      _0x55d2cf.strstart += _0x55d2cf.lookahead;
      _0x55d2cf.block_start = _0x55d2cf.strstart;
      _0x55d2cf.insert = _0x55d2cf.lookahead;
      _0x55d2cf.lookahead = 0;
      _0x55d2cf.match_length = _0x55d2cf.prev_length = _0x28e0bb - 1;
      _0x55d2cf.match_available = 0;
      _0x5d39a3.next_in = _0xe1452f;
      _0x5d39a3.input = _0x4a422f;
      _0x5d39a3.avail_in = _0x7b9e67;
      _0x55d2cf.wrap = _0x10f7cd;
      return _0x178c3e;
    };
    var _0x48d20b = _0x18b42d;
    var _0x5954fc = _0x381bad;
    var _0x1b179d = _0x321bc1;
    var _0x3755b5 = _0x5549aa;
    var _0x3dc372 = _0x2880b4;
    var _0x37a7d3 = _0x59be03;
    var _0x1407b3 = _0x24f987;
    var _0x1255aa = _0x3a5bfd;
    var _0x1af2c1 = "pako deflate (from Nodeca project)";
    var _0x129b13 = {
      deflateInit: _0x48d20b,
      deflateInit2: _0x5954fc,
      deflateReset: _0x1b179d,
      deflateResetKeep: _0x3755b5,
      deflateSetHeader: _0x3dc372,
      deflate: _0x37a7d3,
      deflateEnd: _0x1407b3,
      deflateSetDictionary: _0x1255aa,
      deflateInfo: _0x1af2c1
    };
    var _0x2776ba = _0x129b13;
    const _0x126583 = (_0x4c0604, _0x1a2dd7) => {
      return Object.prototype.hasOwnProperty.call(_0x4c0604, _0x1a2dd7);
    };
    function _0x22de12(_0x36312e) {
      const _0x2a7402 = Array.prototype.slice.call(arguments, 1);
      while (_0x2a7402.length) {
        const _0x3042c5 = _0x2a7402.shift();
        if (!_0x3042c5) {
          continue;
        }
        if (typeof _0x3042c5 !== "object") {
          throw new TypeError(_0x3042c5 + "must be non-object");
        }
        for (const _0x301d26 in _0x3042c5) {
          if (_0x126583(_0x3042c5, _0x301d26)) {
            _0x36312e[_0x301d26] = _0x3042c5[_0x301d26];
          }
        }
      }
      return _0x36312e;
    }
    var _0x229311 = _0x1af701 => {
      let _0x11a706 = 0;
      for (let _0x57b550 = 0, _0x5bd0d3 = _0x1af701.length; _0x57b550 < _0x5bd0d3; _0x57b550++) {
        _0x11a706 += _0x1af701[_0x57b550].length;
      }
      const _0x1c5348 = new Uint8Array(_0x11a706);
      for (let _0x317264 = 0, _0x344e39 = 0, _0x250d33 = _0x1af701.length; _0x317264 < _0x250d33; _0x317264++) {
        let _0x53694e = _0x1af701[_0x317264];
        _0x1c5348.set(_0x53694e, _0x344e39);
        _0x344e39 += _0x53694e.length;
      }
      return _0x1c5348;
    };
    var _0x531f62 = {
      assign: _0x22de12,
      flattenChunks: _0x229311
    };
    var _0x32e369 = _0x531f62;
    let _0x29f86f = true;
    try {
      String.fromCharCode.apply(null, new Uint8Array(1));
    } catch (_0x3bffa0) {
      _0x29f86f = false;
    }
    const _0x2d08fb = new Uint8Array(256);
    for (let _0x589dc7 = 0; _0x589dc7 < 256; _0x589dc7++) {
      _0x2d08fb[_0x589dc7] = _0x589dc7 >= 252 ? 6 : _0x589dc7 >= 248 ? 5 : _0x589dc7 >= 240 ? 4 : _0x589dc7 >= 224 ? 3 : _0x589dc7 >= 192 ? 2 : 1;
    }
    _0x2d08fb[254] = _0x2d08fb[254] = 1;
    var _0x114ed4 = _0x1183fd => {
      if (typeof TextEncoder === "function" && TextEncoder.prototype.encode) {
        return new TextEncoder().encode(_0x1183fd);
      }
      let _0x1c5899;
      let _0x77f1d2;
      let _0xc07eaa;
      let _0xf2eb94;
      let _0x4aa461;
      let _0x1c3d19 = _0x1183fd.length;
      let _0x4e8966 = 0;
      for (_0xf2eb94 = 0; _0xf2eb94 < _0x1c3d19; _0xf2eb94++) {
        _0x77f1d2 = _0x1183fd.charCodeAt(_0xf2eb94);
        if ((_0x77f1d2 & 64512) === 55296 && _0xf2eb94 + 1 < _0x1c3d19) {
          _0xc07eaa = _0x1183fd.charCodeAt(_0xf2eb94 + 1);
          if ((_0xc07eaa & 64512) === 56320) {
            _0x77f1d2 = 65536 + (_0x77f1d2 - 55296 << 10) + (_0xc07eaa - 56320);
            _0xf2eb94++;
          }
        }
        _0x4e8966 += _0x77f1d2 < 128 ? 1 : _0x77f1d2 < 2048 ? 2 : _0x77f1d2 < 65536 ? 3 : 4;
      }
      _0x1c5899 = new Uint8Array(_0x4e8966);
      _0x4aa461 = 0;
      _0xf2eb94 = 0;
      for (; _0x4aa461 < _0x4e8966; _0xf2eb94++) {
        _0x77f1d2 = _0x1183fd.charCodeAt(_0xf2eb94);
        if ((_0x77f1d2 & 64512) === 55296 && _0xf2eb94 + 1 < _0x1c3d19) {
          _0xc07eaa = _0x1183fd.charCodeAt(_0xf2eb94 + 1);
          if ((_0xc07eaa & 64512) === 56320) {
            _0x77f1d2 = 65536 + (_0x77f1d2 - 55296 << 10) + (_0xc07eaa - 56320);
            _0xf2eb94++;
          }
        }
        if (_0x77f1d2 < 128) {
          _0x1c5899[_0x4aa461++] = _0x77f1d2;
        } else if (_0x77f1d2 < 2048) {
          _0x1c5899[_0x4aa461++] = _0x77f1d2 >>> 6 | 192;
          _0x1c5899[_0x4aa461++] = _0x77f1d2 & 63 | 128;
        } else if (_0x77f1d2 < 65536) {
          _0x1c5899[_0x4aa461++] = _0x77f1d2 >>> 12 | 224;
          _0x1c5899[_0x4aa461++] = _0x77f1d2 >>> 6 & 63 | 128;
          _0x1c5899[_0x4aa461++] = _0x77f1d2 & 63 | 128;
        } else {
          _0x1c5899[_0x4aa461++] = _0x77f1d2 >>> 18 | 240;
          _0x1c5899[_0x4aa461++] = _0x77f1d2 >>> 12 & 63 | 128;
          _0x1c5899[_0x4aa461++] = _0x77f1d2 >>> 6 & 63 | 128;
          _0x1c5899[_0x4aa461++] = _0x77f1d2 & 63 | 128;
        }
      }
      return _0x1c5899;
    };
    const _0x392035 = (_0x44ce0d, _0x2608ca) => {
      if (_0x2608ca < 65534) {
        if (_0x44ce0d.subarray && _0x29f86f) {
          return String.fromCharCode.apply(null, _0x44ce0d.length === _0x2608ca ? _0x44ce0d : _0x44ce0d.subarray(0, _0x2608ca));
        }
      }
      let _0x2e3fcc = "";
      for (let _0x29accb = 0; _0x29accb < _0x2608ca; _0x29accb++) {
        _0x2e3fcc += String.fromCharCode(_0x44ce0d[_0x29accb]);
      }
      return _0x2e3fcc;
    };
    var _0x4d656e = (_0x5c5164, _0x582eab) => {
      const _0x25a2e2 = _0x582eab || _0x5c5164.length;
      if (typeof TextDecoder === "function" && TextDecoder.prototype.decode) {
        return new TextDecoder().decode(_0x5c5164.subarray(0, _0x582eab));
      }
      let _0x20c27d;
      let _0x492d89;
      const _0x86ee04 = new Array(_0x25a2e2 * 2);
      _0x492d89 = 0;
      _0x20c27d = 0;
      while (_0x20c27d < _0x25a2e2) {
        let _0x3ccca7 = _0x5c5164[_0x20c27d++];
        if (_0x3ccca7 < 128) {
          _0x86ee04[_0x492d89++] = _0x3ccca7;
          continue;
        }
        let _0x2a477c = _0x2d08fb[_0x3ccca7];
        if (_0x2a477c > 4) {
          _0x86ee04[_0x492d89++] = 65533;
          _0x20c27d += _0x2a477c - 1;
          continue;
        }
        _0x3ccca7 &= _0x2a477c === 2 ? 31 : _0x2a477c === 3 ? 15 : 7;
        while (_0x2a477c > 1 && _0x20c27d < _0x25a2e2) {
          _0x3ccca7 = _0x3ccca7 << 6 | _0x5c5164[_0x20c27d++] & 63;
          _0x2a477c--;
        }
        if (_0x2a477c > 1) {
          _0x86ee04[_0x492d89++] = 65533;
          continue;
        }
        if (_0x3ccca7 < 65536) {
          _0x86ee04[_0x492d89++] = _0x3ccca7;
        } else {
          _0x3ccca7 -= 65536;
          _0x86ee04[_0x492d89++] = _0x3ccca7 >> 10 & 1023 | 55296;
          _0x86ee04[_0x492d89++] = _0x3ccca7 & 1023 | 56320;
        }
      }
      return _0x392035(_0x86ee04, _0x492d89);
    };
    var _0x5851c = (_0x2708a4, _0x2354a6) => {
      _0x2354a6 = _0x2354a6 || _0x2708a4.length;
      if (_0x2354a6 > _0x2708a4.length) {
        _0x2354a6 = _0x2708a4.length;
      }
      let _0x3d2ab3 = _0x2354a6 - 1;
      while (_0x3d2ab3 >= 0 && (_0x2708a4[_0x3d2ab3] & 192) === 128) {
        _0x3d2ab3--;
      }
      if (_0x3d2ab3 < 0) {
        return _0x2354a6;
      }
      if (_0x3d2ab3 === 0) {
        return _0x2354a6;
      }
      if (_0x3d2ab3 + _0x2d08fb[_0x2708a4[_0x3d2ab3]] > _0x2354a6) {
        return _0x3d2ab3;
      } else {
        return _0x2354a6;
      }
    };
    var _0x39c155 = {
      string2buf: _0x114ed4,
      buf2string: _0x4d656e,
      utf8border: _0x5851c
    };
    var _0x5d2021 = _0x39c155;
    function _0x2c3963() {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    }
    var _0x36d9fd = _0x2c3963;
    const _0x5e3fc9 = Object.prototype.toString;
    const {
      Z_NO_FLUSH: _0x217f91,
      Z_SYNC_FLUSH: _0x1f942d,
      Z_FULL_FLUSH: _0x110890,
      Z_FINISH: _0x5b8b88,
      Z_OK: _0x26ac0e,
      Z_STREAM_END: _0x578876,
      Z_DEFAULT_COMPRESSION: _0x3eaccc,
      Z_DEFAULT_STRATEGY: _0x22be81,
      Z_DEFLATED: _0x24b7f9
    } = _0x5b3789;
    function _0x1fc73e(_0x181a0c) {
      var _0x3573b4 = {
        level: _0x3eaccc,
        method: _0x24b7f9,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: _0x22be81
      };
      this.options = _0x32e369.assign(_0x3573b4, _0x181a0c || {});
      let _0xa3f66a = this.options;
      if (_0xa3f66a.raw && _0xa3f66a.windowBits > 0) {
        _0xa3f66a.windowBits = -_0xa3f66a.windowBits;
      } else if (_0xa3f66a.gzip && _0xa3f66a.windowBits > 0 && _0xa3f66a.windowBits < 16) {
        _0xa3f66a.windowBits += 16;
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new _0x36d9fd();
      this.strm.avail_out = 0;
      let _0x34ba53 = _0x2776ba.deflateInit2(this.strm, _0xa3f66a.level, _0xa3f66a.method, _0xa3f66a.windowBits, _0xa3f66a.memLevel, _0xa3f66a.strategy);
      if (_0x34ba53 !== _0x26ac0e) {
        throw new Error(_0x112a80[_0x34ba53]);
      }
      if (_0xa3f66a.header) {
        _0x2776ba.deflateSetHeader(this.strm, _0xa3f66a.header);
      }
      if (_0xa3f66a.dictionary) {
        let _0x20597d;
        if (typeof _0xa3f66a.dictionary === "string") {
          _0x20597d = _0x5d2021.string2buf(_0xa3f66a.dictionary);
        } else if (_0x5e3fc9.call(_0xa3f66a.dictionary) === "[object ArrayBuffer]") {
          _0x20597d = new Uint8Array(_0xa3f66a.dictionary);
        } else {
          _0x20597d = _0xa3f66a.dictionary;
        }
        _0x34ba53 = _0x2776ba.deflateSetDictionary(this.strm, _0x20597d);
        if (_0x34ba53 !== _0x26ac0e) {
          throw new Error(_0x112a80[_0x34ba53]);
        }
        this._dict_set = true;
      }
    }
    _0x1fc73e.prototype.push = function (_0xbeb869, _0x855214) {
      const _0x2518a3 = this.strm;
      const _0x4f73c6 = this.options.chunkSize;
      let _0x946a09;
      let _0x5277b7;
      if (this.ended) {
        return false;
      }
      if (_0x855214 === ~~_0x855214) {
        _0x5277b7 = _0x855214;
      } else {
        _0x5277b7 = _0x855214 === true ? _0x5b8b88 : _0x217f91;
      }
      if (typeof _0xbeb869 === "string") {
        _0x2518a3.input = _0x5d2021.string2buf(_0xbeb869);
      } else if (_0x5e3fc9.call(_0xbeb869) === "[object ArrayBuffer]") {
        _0x2518a3.input = new Uint8Array(_0xbeb869);
      } else {
        _0x2518a3.input = _0xbeb869;
      }
      _0x2518a3.next_in = 0;
      _0x2518a3.avail_in = _0x2518a3.input.length;
      while (true) {
        if (_0x2518a3.avail_out === 0) {
          _0x2518a3.output = new Uint8Array(_0x4f73c6);
          _0x2518a3.next_out = 0;
          _0x2518a3.avail_out = _0x4f73c6;
        }
        if ((_0x5277b7 === _0x1f942d || _0x5277b7 === _0x110890) && _0x2518a3.avail_out <= 6) {
          this.onData(_0x2518a3.output.subarray(0, _0x2518a3.next_out));
          _0x2518a3.avail_out = 0;
          continue;
        }
        _0x946a09 = _0x2776ba.deflate(_0x2518a3, _0x5277b7);
        if (_0x946a09 === _0x578876) {
          if (_0x2518a3.next_out > 0) {
            this.onData(_0x2518a3.output.subarray(0, _0x2518a3.next_out));
          }
          _0x946a09 = _0x2776ba.deflateEnd(this.strm);
          this.onEnd(_0x946a09);
          this.ended = true;
          return _0x946a09 === _0x26ac0e;
        }
        if (_0x2518a3.avail_out === 0) {
          this.onData(_0x2518a3.output);
          continue;
        }
        if (_0x5277b7 > 0 && _0x2518a3.next_out > 0) {
          this.onData(_0x2518a3.output.subarray(0, _0x2518a3.next_out));
          _0x2518a3.avail_out = 0;
          continue;
        }
        if (_0x2518a3.avail_in === 0) {
          break;
        }
      }
      return true;
    };
    _0x1fc73e.prototype.onData = function (_0x4ec00d) {
      this.chunks.push(_0x4ec00d);
    };
    _0x1fc73e.prototype.onEnd = function (_0x2c2142) {
      if (_0x2c2142 === _0x26ac0e) {
        this.result = _0x32e369.flattenChunks(this.chunks);
      }
      this.chunks = [];
      this.err = _0x2c2142;
      this.msg = this.strm.msg;
    };
    function _0x224718(_0x53dda7, _0x4b9f0a) {
      const _0x12fd44 = new _0x1fc73e(_0x4b9f0a);
      _0x12fd44.push(_0x53dda7, true);
      if (_0x12fd44.err) {
        throw _0x12fd44.msg || _0x112a80[_0x12fd44.err];
      }
      return _0x12fd44.result;
    }
    function _0x15c9ee(_0x355efa, _0x2b3c34) {
      _0x2b3c34 = _0x2b3c34 || {};
      _0x2b3c34.raw = true;
      return _0x224718(_0x355efa, _0x2b3c34);
    }
    function _0x1b0c2b(_0x2996c5, _0x37f4fd) {
      _0x37f4fd = _0x37f4fd || {};
      _0x37f4fd.gzip = true;
      return _0x224718(_0x2996c5, _0x37f4fd);
    }
    var _0x4fae36 = _0x1fc73e;
    var _0x5b356e = _0x224718;
    var _0x20cbff = _0x15c9ee;
    var _0x5f0779 = _0x1b0c2b;
    var _0x17dee3 = _0x5b3789;
    var _0x50fc2e = {
      Deflate: _0x4fae36,
      deflate: _0x5b356e,
      deflateRaw: _0x20cbff,
      gzip: _0x5f0779,
      constants: _0x17dee3
    };
    var _0x164c33 = _0x50fc2e;
    const _0x23ddfd = 16209;
    const _0xa03d0a = 16191;
    var _0x26e41d = function _0x1245dc(_0x305c42, _0x2a2d03) {
      let _0x915443;
      let _0x131164;
      let _0x302a0a;
      let _0x1d7f7b;
      let _0x2ae9f6;
      let _0x1c1107;
      let _0x3bea5b;
      let _0x3fd089;
      let _0x2c9c6b;
      let _0x50836a;
      let _0x5c00c4;
      let _0x4bdd3f;
      let _0x3cd8cd;
      let _0x12907f;
      let _0x27aa03;
      let _0xd16d13;
      let _0x286b0d;
      let _0x10d1b6;
      let _0x5bd24d;
      let _0x2bc983;
      let _0x3882e1;
      let _0x20258a;
      let _0x492c16;
      let _0x9ca648;
      const _0x5a14b2 = _0x305c42.state;
      _0x915443 = _0x305c42.next_in;
      _0x492c16 = _0x305c42.input;
      _0x131164 = _0x915443 + (_0x305c42.avail_in - 5);
      _0x302a0a = _0x305c42.next_out;
      _0x9ca648 = _0x305c42.output;
      _0x1d7f7b = _0x302a0a - (_0x2a2d03 - _0x305c42.avail_out);
      _0x2ae9f6 = _0x302a0a + (_0x305c42.avail_out - 257);
      _0x1c1107 = _0x5a14b2.dmax;
      _0x3bea5b = _0x5a14b2.wsize;
      _0x3fd089 = _0x5a14b2.whave;
      _0x2c9c6b = _0x5a14b2.wnext;
      _0x50836a = _0x5a14b2.window;
      _0x5c00c4 = _0x5a14b2.hold;
      _0x4bdd3f = _0x5a14b2.bits;
      _0x3cd8cd = _0x5a14b2.lencode;
      _0x12907f = _0x5a14b2.distcode;
      _0x27aa03 = (1 << _0x5a14b2.lenbits) - 1;
      _0xd16d13 = (1 << _0x5a14b2.distbits) - 1;
      _0x3e62fb: do {
        if (_0x4bdd3f < 15) {
          _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
          _0x4bdd3f += 8;
          _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
          _0x4bdd3f += 8;
        }
        _0x286b0d = _0x3cd8cd[_0x5c00c4 & _0x27aa03];
        _0x53b208: while (true) {
          _0x10d1b6 = _0x286b0d >>> 24;
          _0x5c00c4 >>>= _0x10d1b6;
          _0x4bdd3f -= _0x10d1b6;
          _0x10d1b6 = _0x286b0d >>> 16 & 255;
          if (_0x10d1b6 === 0) {
            _0x9ca648[_0x302a0a++] = _0x286b0d & 65535;
          } else if (_0x10d1b6 & 16) {
            _0x5bd24d = _0x286b0d & 65535;
            _0x10d1b6 &= 15;
            if (_0x10d1b6) {
              if (_0x4bdd3f < _0x10d1b6) {
                _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
                _0x4bdd3f += 8;
              }
              _0x5bd24d += _0x5c00c4 & (1 << _0x10d1b6) - 1;
              _0x5c00c4 >>>= _0x10d1b6;
              _0x4bdd3f -= _0x10d1b6;
            }
            if (_0x4bdd3f < 15) {
              _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
              _0x4bdd3f += 8;
              _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
              _0x4bdd3f += 8;
            }
            _0x286b0d = _0x12907f[_0x5c00c4 & _0xd16d13];
            _0x59acc9: while (true) {
              _0x10d1b6 = _0x286b0d >>> 24;
              _0x5c00c4 >>>= _0x10d1b6;
              _0x4bdd3f -= _0x10d1b6;
              _0x10d1b6 = _0x286b0d >>> 16 & 255;
              if (_0x10d1b6 & 16) {
                _0x2bc983 = _0x286b0d & 65535;
                _0x10d1b6 &= 15;
                if (_0x4bdd3f < _0x10d1b6) {
                  _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
                  _0x4bdd3f += 8;
                  if (_0x4bdd3f < _0x10d1b6) {
                    _0x5c00c4 += _0x492c16[_0x915443++] << _0x4bdd3f;
                    _0x4bdd3f += 8;
                  }
                }
                _0x2bc983 += _0x5c00c4 & (1 << _0x10d1b6) - 1;
                if (_0x2bc983 > _0x1c1107) {
                  _0x305c42.msg = "invalid distance too far back";
                  _0x5a14b2.mode = _0x23ddfd;
                  break _0x3e62fb;
                }
                _0x5c00c4 >>>= _0x10d1b6;
                _0x4bdd3f -= _0x10d1b6;
                _0x10d1b6 = _0x302a0a - _0x1d7f7b;
                if (_0x2bc983 > _0x10d1b6) {
                  _0x10d1b6 = _0x2bc983 - _0x10d1b6;
                  if (_0x10d1b6 > _0x3fd089) {
                    if (_0x5a14b2.sane) {
                      _0x305c42.msg = "invalid distance too far back";
                      _0x5a14b2.mode = _0x23ddfd;
                      break _0x3e62fb;
                    }
                  }
                  _0x3882e1 = 0;
                  _0x20258a = _0x50836a;
                  if (_0x2c9c6b === 0) {
                    _0x3882e1 += _0x3bea5b - _0x10d1b6;
                    if (_0x10d1b6 < _0x5bd24d) {
                      _0x5bd24d -= _0x10d1b6;
                      do {
                        _0x9ca648[_0x302a0a++] = _0x50836a[_0x3882e1++];
                      } while (--_0x10d1b6);
                      _0x3882e1 = _0x302a0a - _0x2bc983;
                      _0x20258a = _0x9ca648;
                    }
                  } else if (_0x2c9c6b < _0x10d1b6) {
                    _0x3882e1 += _0x3bea5b + _0x2c9c6b - _0x10d1b6;
                    _0x10d1b6 -= _0x2c9c6b;
                    if (_0x10d1b6 < _0x5bd24d) {
                      _0x5bd24d -= _0x10d1b6;
                      do {
                        _0x9ca648[_0x302a0a++] = _0x50836a[_0x3882e1++];
                      } while (--_0x10d1b6);
                      _0x3882e1 = 0;
                      if (_0x2c9c6b < _0x5bd24d) {
                        _0x10d1b6 = _0x2c9c6b;
                        _0x5bd24d -= _0x10d1b6;
                        do {
                          _0x9ca648[_0x302a0a++] = _0x50836a[_0x3882e1++];
                        } while (--_0x10d1b6);
                        _0x3882e1 = _0x302a0a - _0x2bc983;
                        _0x20258a = _0x9ca648;
                      }
                    }
                  } else {
                    _0x3882e1 += _0x2c9c6b - _0x10d1b6;
                    if (_0x10d1b6 < _0x5bd24d) {
                      _0x5bd24d -= _0x10d1b6;
                      do {
                        _0x9ca648[_0x302a0a++] = _0x50836a[_0x3882e1++];
                      } while (--_0x10d1b6);
                      _0x3882e1 = _0x302a0a - _0x2bc983;
                      _0x20258a = _0x9ca648;
                    }
                  }
                  while (_0x5bd24d > 2) {
                    _0x9ca648[_0x302a0a++] = _0x20258a[_0x3882e1++];
                    _0x9ca648[_0x302a0a++] = _0x20258a[_0x3882e1++];
                    _0x9ca648[_0x302a0a++] = _0x20258a[_0x3882e1++];
                    _0x5bd24d -= 3;
                  }
                  if (_0x5bd24d) {
                    _0x9ca648[_0x302a0a++] = _0x20258a[_0x3882e1++];
                    if (_0x5bd24d > 1) {
                      _0x9ca648[_0x302a0a++] = _0x20258a[_0x3882e1++];
                    }
                  }
                } else {
                  _0x3882e1 = _0x302a0a - _0x2bc983;
                  do {
                    _0x9ca648[_0x302a0a++] = _0x9ca648[_0x3882e1++];
                    _0x9ca648[_0x302a0a++] = _0x9ca648[_0x3882e1++];
                    _0x9ca648[_0x302a0a++] = _0x9ca648[_0x3882e1++];
                    _0x5bd24d -= 3;
                  } while (_0x5bd24d > 2);
                  if (_0x5bd24d) {
                    _0x9ca648[_0x302a0a++] = _0x9ca648[_0x3882e1++];
                    if (_0x5bd24d > 1) {
                      _0x9ca648[_0x302a0a++] = _0x9ca648[_0x3882e1++];
                    }
                  }
                }
              } else if ((_0x10d1b6 & 64) === 0) {
                _0x286b0d = _0x12907f[(_0x286b0d & 65535) + (_0x5c00c4 & (1 << _0x10d1b6) - 1)];
                continue _0x59acc9;
              } else {
                _0x305c42.msg = "invalid distance code";
                _0x5a14b2.mode = _0x23ddfd;
                break _0x3e62fb;
              }
              break;
            }
          } else if ((_0x10d1b6 & 64) === 0) {
            _0x286b0d = _0x3cd8cd[(_0x286b0d & 65535) + (_0x5c00c4 & (1 << _0x10d1b6) - 1)];
            continue _0x53b208;
          } else if (_0x10d1b6 & 32) {
            _0x5a14b2.mode = _0xa03d0a;
            break _0x3e62fb;
          } else {
            _0x305c42.msg = "invalid literal/length code";
            _0x5a14b2.mode = _0x23ddfd;
            break _0x3e62fb;
          }
          break;
        }
      } while (_0x915443 < _0x131164 && _0x302a0a < _0x2ae9f6);
      _0x5bd24d = _0x4bdd3f >> 3;
      _0x915443 -= _0x5bd24d;
      _0x4bdd3f -= _0x5bd24d << 3;
      _0x5c00c4 &= (1 << _0x4bdd3f) - 1;
      _0x305c42.next_in = _0x915443;
      _0x305c42.next_out = _0x302a0a;
      _0x305c42.avail_in = _0x915443 < _0x131164 ? 5 + (_0x131164 - _0x915443) : 5 - (_0x915443 - _0x131164);
      _0x305c42.avail_out = _0x302a0a < _0x2ae9f6 ? 257 + (_0x2ae9f6 - _0x302a0a) : 257 - (_0x302a0a - _0x2ae9f6);
      _0x5a14b2.hold = _0x5c00c4;
      _0x5a14b2.bits = _0x4bdd3f;
      return;
    };
    const _0x59ccd8 = 15;
    const _0x4a53e6 = 852;
    const _0x11b312 = 592;
    const _0x5eb3a6 = 0;
    const _0x515db0 = 1;
    const _0x1ee90d = 2;
    const _0xbe9a2e = new Uint16Array([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]);
    const _0x4983cf = new Uint8Array([16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]);
    const _0x10fe01 = new Uint16Array([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]);
    const _0x37d84c = new Uint8Array([16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64]);
    const _0x38a77b = (_0x3c7e14, _0x54ed4c, _0x1d905d, _0x575ad5, _0x44d89a, _0x29307a, _0x10fb57, _0x5bdaa5) => {
      const _0x3d2164 = _0x5bdaa5.bits;
      let _0x1038af = 0;
      let _0x4826b3 = 0;
      let _0x492dd2 = 0;
      let _0xf8dc84 = 0;
      let _0x5ae320 = 0;
      let _0x148968 = 0;
      let _0x3f1faf = 0;
      let _0x2562a7 = 0;
      let _0x3f886a = 0;
      let _0x21d793 = 0;
      let _0x2fda75;
      let _0x36115a;
      let _0x56b9a0;
      let _0x8865c0;
      let _0x5c88c9;
      let _0x1e67aa = null;
      let _0x21bd80;
      const _0xae6384 = new Uint16Array(_0x59ccd8 + 1);
      const _0x559e6d = new Uint16Array(_0x59ccd8 + 1);
      let _0x531827 = null;
      let _0x2d6378;
      let _0x4e5ca0;
      let _0x4b45be;
      for (_0x1038af = 0; _0x1038af <= _0x59ccd8; _0x1038af++) {
        _0xae6384[_0x1038af] = 0;
      }
      for (_0x4826b3 = 0; _0x4826b3 < _0x575ad5; _0x4826b3++) {
        _0xae6384[_0x54ed4c[_0x1d905d + _0x4826b3]]++;
      }
      _0x5ae320 = _0x3d2164;
      for (_0xf8dc84 = _0x59ccd8; _0xf8dc84 >= 1; _0xf8dc84--) {
        if (_0xae6384[_0xf8dc84] !== 0) {
          break;
        }
      }
      if (_0x5ae320 > _0xf8dc84) {
        _0x5ae320 = _0xf8dc84;
      }
      if (_0xf8dc84 === 0) {
        _0x44d89a[_0x29307a++] = 1 << 24 | 64 << 16 | 0;
        _0x44d89a[_0x29307a++] = 1 << 24 | 64 << 16 | 0;
        _0x5bdaa5.bits = 1;
        return 0;
      }
      for (_0x492dd2 = 1; _0x492dd2 < _0xf8dc84; _0x492dd2++) {
        if (_0xae6384[_0x492dd2] !== 0) {
          break;
        }
      }
      if (_0x5ae320 < _0x492dd2) {
        _0x5ae320 = _0x492dd2;
      }
      _0x2562a7 = 1;
      for (_0x1038af = 1; _0x1038af <= _0x59ccd8; _0x1038af++) {
        _0x2562a7 <<= 1;
        _0x2562a7 -= _0xae6384[_0x1038af];
        if (_0x2562a7 < 0) {
          return -1;
        }
      }
      if (_0x2562a7 > 0 && (_0x3c7e14 === _0x5eb3a6 || _0xf8dc84 !== 1)) {
        return -1;
      }
      _0x559e6d[1] = 0;
      for (_0x1038af = 1; _0x1038af < _0x59ccd8; _0x1038af++) {
        _0x559e6d[_0x1038af + 1] = _0x559e6d[_0x1038af] + _0xae6384[_0x1038af];
      }
      for (_0x4826b3 = 0; _0x4826b3 < _0x575ad5; _0x4826b3++) {
        if (_0x54ed4c[_0x1d905d + _0x4826b3] !== 0) {
          _0x10fb57[_0x559e6d[_0x54ed4c[_0x1d905d + _0x4826b3]]++] = _0x4826b3;
        }
      }
      if (_0x3c7e14 === _0x5eb3a6) {
        _0x1e67aa = _0x531827 = _0x10fb57;
        _0x21bd80 = 20;
      } else if (_0x3c7e14 === _0x515db0) {
        _0x1e67aa = _0xbe9a2e;
        _0x531827 = _0x4983cf;
        _0x21bd80 = 257;
      } else {
        _0x1e67aa = _0x10fe01;
        _0x531827 = _0x37d84c;
        _0x21bd80 = 0;
      }
      _0x21d793 = 0;
      _0x4826b3 = 0;
      _0x1038af = _0x492dd2;
      _0x5c88c9 = _0x29307a;
      _0x148968 = _0x5ae320;
      _0x3f1faf = 0;
      _0x56b9a0 = -1;
      _0x3f886a = 1 << _0x5ae320;
      _0x8865c0 = _0x3f886a - 1;
      if (_0x3c7e14 === _0x515db0 && _0x3f886a > _0x4a53e6 || _0x3c7e14 === _0x1ee90d && _0x3f886a > _0x11b312) {
        return 1;
      }
      while (true) {
        _0x2d6378 = _0x1038af - _0x3f1faf;
        if (_0x10fb57[_0x4826b3] + 1 < _0x21bd80) {
          _0x4e5ca0 = 0;
          _0x4b45be = _0x10fb57[_0x4826b3];
        } else if (_0x10fb57[_0x4826b3] >= _0x21bd80) {
          _0x4e5ca0 = _0x531827[_0x10fb57[_0x4826b3] - _0x21bd80];
          _0x4b45be = _0x1e67aa[_0x10fb57[_0x4826b3] - _0x21bd80];
        } else {
          _0x4e5ca0 = 96;
          _0x4b45be = 0;
        }
        _0x2fda75 = 1 << _0x1038af - _0x3f1faf;
        _0x36115a = 1 << _0x148968;
        _0x492dd2 = _0x36115a;
        do {
          _0x36115a -= _0x2fda75;
          _0x44d89a[_0x5c88c9 + (_0x21d793 >> _0x3f1faf) + _0x36115a] = _0x2d6378 << 24 | _0x4e5ca0 << 16 | _0x4b45be | 0;
        } while (_0x36115a !== 0);
        _0x2fda75 = 1 << _0x1038af - 1;
        while (_0x21d793 & _0x2fda75) {
          _0x2fda75 >>= 1;
        }
        if (_0x2fda75 !== 0) {
          _0x21d793 &= _0x2fda75 - 1;
          _0x21d793 += _0x2fda75;
        } else {
          _0x21d793 = 0;
        }
        _0x4826b3++;
        if (--_0xae6384[_0x1038af] === 0) {
          if (_0x1038af === _0xf8dc84) {
            break;
          }
          _0x1038af = _0x54ed4c[_0x1d905d + _0x10fb57[_0x4826b3]];
        }
        if (_0x1038af > _0x5ae320 && (_0x21d793 & _0x8865c0) !== _0x56b9a0) {
          if (_0x3f1faf === 0) {
            _0x3f1faf = _0x5ae320;
          }
          _0x5c88c9 += _0x492dd2;
          _0x148968 = _0x1038af - _0x3f1faf;
          _0x2562a7 = 1 << _0x148968;
          while (_0x148968 + _0x3f1faf < _0xf8dc84) {
            _0x2562a7 -= _0xae6384[_0x148968 + _0x3f1faf];
            if (_0x2562a7 <= 0) {
              break;
            }
            _0x148968++;
            _0x2562a7 <<= 1;
          }
          _0x3f886a += 1 << _0x148968;
          if (_0x3c7e14 === _0x515db0 && _0x3f886a > _0x4a53e6 || _0x3c7e14 === _0x1ee90d && _0x3f886a > _0x11b312) {
            return 1;
          }
          _0x56b9a0 = _0x21d793 & _0x8865c0;
          _0x44d89a[_0x56b9a0] = _0x5ae320 << 24 | _0x148968 << 16 | _0x5c88c9 - _0x29307a | 0;
        }
      }
      if (_0x21d793 !== 0) {
        _0x44d89a[_0x5c88c9 + _0x21d793] = _0x1038af - _0x3f1faf << 24 | 64 << 16 | 0;
      }
      _0x5bdaa5.bits = _0x5ae320;
      return 0;
    };
    var _0x1d6fec = _0x38a77b;
    const _0x271e0d = 0;
    const _0x2786bd = 1;
    const _0x3d3c5b = 2;
    const {
      Z_FINISH: _0x27b54b,
      Z_BLOCK: _0x77cf12,
      Z_TREES: _0x459c21,
      Z_OK: _0x2c1305,
      Z_STREAM_END: _0x4da3df,
      Z_NEED_DICT: _0x4babc7,
      Z_STREAM_ERROR: _0x45400b,
      Z_DATA_ERROR: _0x1181a4,
      Z_MEM_ERROR: _0x37742e,
      Z_BUF_ERROR: _0x33b735,
      Z_DEFLATED: _0x1a8ab2
    } = _0x5b3789;
    const _0x476fcc = 16180;
    const _0x324a9f = 16181;
    const _0x16c4a1 = 16182;
    const _0x172932 = 16183;
    const _0x505158 = 16184;
    const _0x1db3f4 = 16185;
    const _0x10073f = 16186;
    const _0x2ff77f = 16187;
    const _0x27462a = 16188;
    const _0x3b5a02 = 16189;
    const _0x5abd1d = 16190;
    const _0x9b51b9 = 16191;
    const _0x1d58c9 = 16192;
    const _0x12425d = 16193;
    const _0x3d5de9 = 16194;
    const _0x423093 = 16195;
    const _0xa22e2 = 16196;
    const _0x5932c8 = 16197;
    const _0x48c09c = 16198;
    const _0x4d758c = 16199;
    const _0x356d02 = 16200;
    const _0xc1a28b = 16201;
    const _0x2314d7 = 16202;
    const _0x40a22b = 16203;
    const _0x52807d = 16204;
    const _0x2166da = 16205;
    const _0x10cd65 = 16206;
    const _0x4645e8 = 16207;
    const _0x521027 = 16208;
    const _0x1cb97e = 16209;
    const _0x1cfc4c = 16210;
    const _0x380d0a = 16211;
    const _0x3ff7dc = 852;
    const _0x141adf = 592;
    const _0x18ed2a = 15;
    const _0x58fca6 = _0x18ed2a;
    const _0x466aa9 = _0x2d5fae => {
      return (_0x2d5fae >>> 24 & 255) + (_0x2d5fae >>> 8 & 65280) + ((_0x2d5fae & 65280) << 8) + ((_0x2d5fae & 255) << 24);
    };
    function _0x44b52b() {
      this.strm = null;
      this.mode = 0;
      this.last = false;
      this.wrap = 0;
      this.havedict = false;
      this.flags = 0;
      this.dmax = 0;
      this.check = 0;
      this.total = 0;
      this.head = null;
      this.wbits = 0;
      this.wsize = 0;
      this.whave = 0;
      this.wnext = 0;
      this.window = null;
      this.hold = 0;
      this.bits = 0;
      this.length = 0;
      this.offset = 0;
      this.extra = 0;
      this.lencode = null;
      this.distcode = null;
      this.lenbits = 0;
      this.distbits = 0;
      this.ncode = 0;
      this.nlen = 0;
      this.ndist = 0;
      this.have = 0;
      this.next = null;
      this.lens = new Uint16Array(320);
      this.work = new Uint16Array(288);
      this.lendyn = null;
      this.distdyn = null;
      this.sane = 0;
      this.back = 0;
      this.was = 0;
    }
    const _0x3f4368 = _0x589811 => {
      if (!_0x589811) {
        return 1;
      }
      const _0x31911f = _0x589811.state;
      if (!_0x31911f || _0x31911f.strm !== _0x589811 || _0x31911f.mode < _0x476fcc || _0x31911f.mode > _0x380d0a) {
        return 1;
      }
      return 0;
    };
    const _0x207940 = _0x24dd82 => {
      if (_0x3f4368(_0x24dd82)) {
        return _0x45400b;
      }
      const _0x2a0be1 = _0x24dd82.state;
      _0x24dd82.total_in = _0x24dd82.total_out = _0x2a0be1.total = 0;
      _0x24dd82.msg = "";
      if (_0x2a0be1.wrap) {
        _0x24dd82.adler = _0x2a0be1.wrap & 1;
      }
      _0x2a0be1.mode = _0x476fcc;
      _0x2a0be1.last = 0;
      _0x2a0be1.havedict = 0;
      _0x2a0be1.flags = -1;
      _0x2a0be1.dmax = 32768;
      _0x2a0be1.head = null;
      _0x2a0be1.hold = 0;
      _0x2a0be1.bits = 0;
      _0x2a0be1.lencode = _0x2a0be1.lendyn = new Int32Array(_0x3ff7dc);
      _0x2a0be1.distcode = _0x2a0be1.distdyn = new Int32Array(_0x141adf);
      _0x2a0be1.sane = 1;
      _0x2a0be1.back = -1;
      return _0x2c1305;
    };
    const _0x32dae5 = _0x37a967 => {
      if (_0x3f4368(_0x37a967)) {
        return _0x45400b;
      }
      const _0x2db4cc = _0x37a967.state;
      _0x2db4cc.wsize = 0;
      _0x2db4cc.whave = 0;
      _0x2db4cc.wnext = 0;
      return _0x207940(_0x37a967);
    };
    const _0x23b80c = (_0x56d7ce, _0x17c6a1) => {
      let _0x5e1266;
      if (_0x3f4368(_0x56d7ce)) {
        return _0x45400b;
      }
      const _0x15af7f = _0x56d7ce.state;
      if (_0x17c6a1 < 0) {
        _0x5e1266 = 0;
        _0x17c6a1 = -_0x17c6a1;
      } else {
        _0x5e1266 = (_0x17c6a1 >> 4) + 5;
        if (_0x17c6a1 < 48) {
          _0x17c6a1 &= 15;
        }
      }
      if (_0x17c6a1 && (_0x17c6a1 < 8 || _0x17c6a1 > 15)) {
        return _0x45400b;
      }
      if (_0x15af7f.window !== null && _0x15af7f.wbits !== _0x17c6a1) {
        _0x15af7f.window = null;
      }
      _0x15af7f.wrap = _0x5e1266;
      _0x15af7f.wbits = _0x17c6a1;
      return _0x32dae5(_0x56d7ce);
    };
    const _0x57d33e = (_0x374f97, _0x1b1cea) => {
      if (!_0x374f97) {
        return _0x45400b;
      }
      const _0x29dab6 = new _0x44b52b();
      _0x374f97.state = _0x29dab6;
      _0x29dab6.strm = _0x374f97;
      _0x29dab6.window = null;
      _0x29dab6.mode = _0x476fcc;
      const _0x201615 = _0x23b80c(_0x374f97, _0x1b1cea);
      if (_0x201615 !== _0x2c1305) {
        _0x374f97.state = null;
      }
      return _0x201615;
    };
    const _0x5dc358 = _0x2214d8 => {
      return _0x57d33e(_0x2214d8, _0x58fca6);
    };
    let _0x1bb067 = true;
    let _0x5cca11;
    let _0x14b6d4;
    const _0x277025 = _0x307d2c => {
      if (_0x1bb067) {
        _0x5cca11 = new Int32Array(512);
        _0x14b6d4 = new Int32Array(32);
        let _0x25718f = 0;
        while (_0x25718f < 144) {
          _0x307d2c.lens[_0x25718f++] = 8;
        }
        while (_0x25718f < 256) {
          _0x307d2c.lens[_0x25718f++] = 9;
        }
        while (_0x25718f < 280) {
          _0x307d2c.lens[_0x25718f++] = 7;
        }
        while (_0x25718f < 288) {
          _0x307d2c.lens[_0x25718f++] = 8;
        }
        _0x1d6fec(_0x2786bd, _0x307d2c.lens, 0, 288, _0x5cca11, 0, _0x307d2c.work, {
          bits: 9
        });
        _0x25718f = 0;
        while (_0x25718f < 32) {
          _0x307d2c.lens[_0x25718f++] = 5;
        }
        _0x1d6fec(_0x3d3c5b, _0x307d2c.lens, 0, 32, _0x14b6d4, 0, _0x307d2c.work, {
          bits: 5
        });
        _0x1bb067 = false;
      }
      _0x307d2c.lencode = _0x5cca11;
      _0x307d2c.lenbits = 9;
      _0x307d2c.distcode = _0x14b6d4;
      _0x307d2c.distbits = 5;
    };
    const _0x84daa2 = (_0x33c867, _0x1319ec, _0x545576, _0x14d6d6) => {
      let _0x2d86f3;
      const _0x476803 = _0x33c867.state;
      if (_0x476803.window === null) {
        _0x476803.wsize = 1 << _0x476803.wbits;
        _0x476803.wnext = 0;
        _0x476803.whave = 0;
        _0x476803.window = new Uint8Array(_0x476803.wsize);
      }
      if (_0x14d6d6 >= _0x476803.wsize) {
        _0x476803.window.set(_0x1319ec.subarray(_0x545576 - _0x476803.wsize, _0x545576), 0);
        _0x476803.wnext = 0;
        _0x476803.whave = _0x476803.wsize;
      } else {
        _0x2d86f3 = _0x476803.wsize - _0x476803.wnext;
        if (_0x2d86f3 > _0x14d6d6) {
          _0x2d86f3 = _0x14d6d6;
        }
        _0x476803.window.set(_0x1319ec.subarray(_0x545576 - _0x14d6d6, _0x545576 - _0x14d6d6 + _0x2d86f3), _0x476803.wnext);
        _0x14d6d6 -= _0x2d86f3;
        if (_0x14d6d6) {
          _0x476803.window.set(_0x1319ec.subarray(_0x545576 - _0x14d6d6, _0x545576), 0);
          _0x476803.wnext = _0x14d6d6;
          _0x476803.whave = _0x476803.wsize;
        } else {
          _0x476803.wnext += _0x2d86f3;
          if (_0x476803.wnext === _0x476803.wsize) {
            _0x476803.wnext = 0;
          }
          if (_0x476803.whave < _0x476803.wsize) {
            _0x476803.whave += _0x2d86f3;
          }
        }
      }
      return 0;
    };
    const _0xed323 = (_0x4371e6, _0xb21200) => {
      let _0x9da93f;
      let _0x1d6a8f;
      let _0x25a5f9;
      let _0x15ebb5;
      let _0x20d764;
      let _0x628ad3;
      let _0xa012f3;
      let _0x2ea8cf;
      let _0x265392;
      let _0x593d1d;
      let _0x324666;
      let _0x297290;
      let _0x56d6d3;
      let _0x2a98f9;
      let _0x10a69d = 0;
      let _0x8de514;
      let _0x1e27b0;
      let _0x17a99f;
      let _0x28e0ee;
      let _0x2bfbdb;
      let _0x322774;
      let _0x382965;
      let _0x57dbba;
      const _0xf4f0cb = new Uint8Array(4);
      let _0x184bc7;
      let _0x5da020;
      const _0x4f95db = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
      if (_0x3f4368(_0x4371e6) || !_0x4371e6.output || !_0x4371e6.input && _0x4371e6.avail_in !== 0) {
        return _0x45400b;
      }
      _0x9da93f = _0x4371e6.state;
      if (_0x9da93f.mode === _0x9b51b9) {
        _0x9da93f.mode = _0x1d58c9;
      }
      _0x20d764 = _0x4371e6.next_out;
      _0x25a5f9 = _0x4371e6.output;
      _0xa012f3 = _0x4371e6.avail_out;
      _0x15ebb5 = _0x4371e6.next_in;
      _0x1d6a8f = _0x4371e6.input;
      _0x628ad3 = _0x4371e6.avail_in;
      _0x2ea8cf = _0x9da93f.hold;
      _0x265392 = _0x9da93f.bits;
      _0x593d1d = _0x628ad3;
      _0x324666 = _0xa012f3;
      _0x57dbba = _0x2c1305;
      _0x4bd9ff: while (true) {
        switch (_0x9da93f.mode) {
          case _0x476fcc:
            if (_0x9da93f.wrap === 0) {
              _0x9da93f.mode = _0x1d58c9;
              break;
            }
            while (_0x265392 < 16) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            if (_0x9da93f.wrap & 2 && _0x2ea8cf === 35615) {
              if (_0x9da93f.wbits === 0) {
                _0x9da93f.wbits = 15;
              }
              _0x9da93f.check = 0;
              _0xf4f0cb[0] = _0x2ea8cf & 255;
              _0xf4f0cb[1] = _0x2ea8cf >>> 8 & 255;
              _0x9da93f.check = _0x144de8(_0x9da93f.check, _0xf4f0cb, 2, 0);
              _0x2ea8cf = 0;
              _0x265392 = 0;
              _0x9da93f.mode = _0x324a9f;
              break;
            }
            if (_0x9da93f.head) {
              _0x9da93f.head.done = false;
            }
            if (!(_0x9da93f.wrap & 1) || (((_0x2ea8cf & 255) << 8) + (_0x2ea8cf >> 8)) % 31) {
              _0x4371e6.msg = "incorrect header check";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            if ((_0x2ea8cf & 15) !== _0x1a8ab2) {
              _0x4371e6.msg = "unknown compression method";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x2ea8cf >>>= 4;
            _0x265392 -= 4;
            _0x382965 = (_0x2ea8cf & 15) + 8;
            if (_0x9da93f.wbits === 0) {
              _0x9da93f.wbits = _0x382965;
            }
            if (_0x382965 > 15 || _0x382965 > _0x9da93f.wbits) {
              _0x4371e6.msg = "invalid window size";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.dmax = 1 << _0x9da93f.wbits;
            _0x9da93f.flags = 0;
            _0x4371e6.adler = _0x9da93f.check = 1;
            _0x9da93f.mode = _0x2ea8cf & 512 ? _0x3b5a02 : _0x9b51b9;
            _0x2ea8cf = 0;
            _0x265392 = 0;
            break;
          case _0x324a9f:
            while (_0x265392 < 16) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            _0x9da93f.flags = _0x2ea8cf;
            if ((_0x9da93f.flags & 255) !== _0x1a8ab2) {
              _0x4371e6.msg = "unknown compression method";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            if (_0x9da93f.flags & 57344) {
              _0x4371e6.msg = "unknown header flags set";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            if (_0x9da93f.head) {
              _0x9da93f.head.text = _0x2ea8cf >> 8 & 1;
            }
            if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
              _0xf4f0cb[0] = _0x2ea8cf & 255;
              _0xf4f0cb[1] = _0x2ea8cf >>> 8 & 255;
              _0x9da93f.check = _0x144de8(_0x9da93f.check, _0xf4f0cb, 2, 0);
            }
            _0x2ea8cf = 0;
            _0x265392 = 0;
            _0x9da93f.mode = _0x16c4a1;
          case _0x16c4a1:
            while (_0x265392 < 32) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            if (_0x9da93f.head) {
              _0x9da93f.head.time = _0x2ea8cf;
            }
            if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
              _0xf4f0cb[0] = _0x2ea8cf & 255;
              _0xf4f0cb[1] = _0x2ea8cf >>> 8 & 255;
              _0xf4f0cb[2] = _0x2ea8cf >>> 16 & 255;
              _0xf4f0cb[3] = _0x2ea8cf >>> 24 & 255;
              _0x9da93f.check = _0x144de8(_0x9da93f.check, _0xf4f0cb, 4, 0);
            }
            _0x2ea8cf = 0;
            _0x265392 = 0;
            _0x9da93f.mode = _0x172932;
          case _0x172932:
            while (_0x265392 < 16) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            if (_0x9da93f.head) {
              _0x9da93f.head.xflags = _0x2ea8cf & 255;
              _0x9da93f.head.os = _0x2ea8cf >> 8;
            }
            if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
              _0xf4f0cb[0] = _0x2ea8cf & 255;
              _0xf4f0cb[1] = _0x2ea8cf >>> 8 & 255;
              _0x9da93f.check = _0x144de8(_0x9da93f.check, _0xf4f0cb, 2, 0);
            }
            _0x2ea8cf = 0;
            _0x265392 = 0;
            _0x9da93f.mode = _0x505158;
          case _0x505158:
            if (_0x9da93f.flags & 1024) {
              while (_0x265392 < 16) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x9da93f.length = _0x2ea8cf;
              if (_0x9da93f.head) {
                _0x9da93f.head.extra_len = _0x2ea8cf;
              }
              if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
                _0xf4f0cb[0] = _0x2ea8cf & 255;
                _0xf4f0cb[1] = _0x2ea8cf >>> 8 & 255;
                _0x9da93f.check = _0x144de8(_0x9da93f.check, _0xf4f0cb, 2, 0);
              }
              _0x2ea8cf = 0;
              _0x265392 = 0;
            } else if (_0x9da93f.head) {
              _0x9da93f.head.extra = null;
            }
            _0x9da93f.mode = _0x1db3f4;
          case _0x1db3f4:
            if (_0x9da93f.flags & 1024) {
              _0x297290 = _0x9da93f.length;
              if (_0x297290 > _0x628ad3) {
                _0x297290 = _0x628ad3;
              }
              if (_0x297290) {
                if (_0x9da93f.head) {
                  _0x382965 = _0x9da93f.head.extra_len - _0x9da93f.length;
                  if (!_0x9da93f.head.extra) {
                    _0x9da93f.head.extra = new Uint8Array(_0x9da93f.head.extra_len);
                  }
                  _0x9da93f.head.extra.set(_0x1d6a8f.subarray(_0x15ebb5, _0x15ebb5 + _0x297290), _0x382965);
                }
                if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
                  _0x9da93f.check = _0x144de8(_0x9da93f.check, _0x1d6a8f, _0x297290, _0x15ebb5);
                }
                _0x628ad3 -= _0x297290;
                _0x15ebb5 += _0x297290;
                _0x9da93f.length -= _0x297290;
              }
              if (_0x9da93f.length) {
                break _0x4bd9ff;
              }
            }
            _0x9da93f.length = 0;
            _0x9da93f.mode = _0x10073f;
          case _0x10073f:
            if (_0x9da93f.flags & 2048) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x297290 = 0;
              do {
                _0x382965 = _0x1d6a8f[_0x15ebb5 + _0x297290++];
                if (_0x9da93f.head && _0x382965 && _0x9da93f.length < 65536) {
                  _0x9da93f.head.name += String.fromCharCode(_0x382965);
                }
              } while (_0x382965 && _0x297290 < _0x628ad3);
              if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
                _0x9da93f.check = _0x144de8(_0x9da93f.check, _0x1d6a8f, _0x297290, _0x15ebb5);
              }
              _0x628ad3 -= _0x297290;
              _0x15ebb5 += _0x297290;
              if (_0x382965) {
                break _0x4bd9ff;
              }
            } else if (_0x9da93f.head) {
              _0x9da93f.head.name = null;
            }
            _0x9da93f.length = 0;
            _0x9da93f.mode = _0x2ff77f;
          case _0x2ff77f:
            if (_0x9da93f.flags & 4096) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x297290 = 0;
              do {
                _0x382965 = _0x1d6a8f[_0x15ebb5 + _0x297290++];
                if (_0x9da93f.head && _0x382965 && _0x9da93f.length < 65536) {
                  _0x9da93f.head.comment += String.fromCharCode(_0x382965);
                }
              } while (_0x382965 && _0x297290 < _0x628ad3);
              if (_0x9da93f.flags & 512 && _0x9da93f.wrap & 4) {
                _0x9da93f.check = _0x144de8(_0x9da93f.check, _0x1d6a8f, _0x297290, _0x15ebb5);
              }
              _0x628ad3 -= _0x297290;
              _0x15ebb5 += _0x297290;
              if (_0x382965) {
                break _0x4bd9ff;
              }
            } else if (_0x9da93f.head) {
              _0x9da93f.head.comment = null;
            }
            _0x9da93f.mode = _0x27462a;
          case _0x27462a:
            if (_0x9da93f.flags & 512) {
              while (_0x265392 < 16) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              if (_0x9da93f.wrap & 4 && _0x2ea8cf !== (_0x9da93f.check & 65535)) {
                _0x4371e6.msg = "header crc mismatch";
                _0x9da93f.mode = _0x1cb97e;
                break;
              }
              _0x2ea8cf = 0;
              _0x265392 = 0;
            }
            if (_0x9da93f.head) {
              _0x9da93f.head.hcrc = _0x9da93f.flags >> 9 & 1;
              _0x9da93f.head.done = true;
            }
            _0x4371e6.adler = _0x9da93f.check = 0;
            _0x9da93f.mode = _0x9b51b9;
            break;
          case _0x3b5a02:
            while (_0x265392 < 32) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            _0x4371e6.adler = _0x9da93f.check = _0x466aa9(_0x2ea8cf);
            _0x2ea8cf = 0;
            _0x265392 = 0;
            _0x9da93f.mode = _0x5abd1d;
          case _0x5abd1d:
            if (_0x9da93f.havedict === 0) {
              _0x4371e6.next_out = _0x20d764;
              _0x4371e6.avail_out = _0xa012f3;
              _0x4371e6.next_in = _0x15ebb5;
              _0x4371e6.avail_in = _0x628ad3;
              _0x9da93f.hold = _0x2ea8cf;
              _0x9da93f.bits = _0x265392;
              return _0x4babc7;
            }
            _0x4371e6.adler = _0x9da93f.check = 1;
            _0x9da93f.mode = _0x9b51b9;
          case _0x9b51b9:
            if (_0xb21200 === _0x77cf12 || _0xb21200 === _0x459c21) {
              break _0x4bd9ff;
            }
          case _0x1d58c9:
            if (_0x9da93f.last) {
              _0x2ea8cf >>>= _0x265392 & 7;
              _0x265392 -= _0x265392 & 7;
              _0x9da93f.mode = _0x10cd65;
              break;
            }
            while (_0x265392 < 3) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            _0x9da93f.last = _0x2ea8cf & 1;
            _0x2ea8cf >>>= 1;
            _0x265392 -= 1;
            switch (_0x2ea8cf & 3) {
              case 0:
                _0x9da93f.mode = _0x12425d;
                break;
              case 1:
                _0x277025(_0x9da93f);
                _0x9da93f.mode = _0x4d758c;
                if (_0xb21200 === _0x459c21) {
                  _0x2ea8cf >>>= 2;
                  _0x265392 -= 2;
                  break _0x4bd9ff;
                }
                break;
              case 2:
                _0x9da93f.mode = _0xa22e2;
                break;
              case 3:
                _0x4371e6.msg = "invalid block type";
                _0x9da93f.mode = _0x1cb97e;
            }
            _0x2ea8cf >>>= 2;
            _0x265392 -= 2;
            break;
          case _0x12425d:
            _0x2ea8cf >>>= _0x265392 & 7;
            _0x265392 -= _0x265392 & 7;
            while (_0x265392 < 32) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            if ((_0x2ea8cf & 65535) !== (_0x2ea8cf >>> 16 ^ 65535)) {
              _0x4371e6.msg = "invalid stored block lengths";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.length = _0x2ea8cf & 65535;
            _0x2ea8cf = 0;
            _0x265392 = 0;
            _0x9da93f.mode = _0x3d5de9;
            if (_0xb21200 === _0x459c21) {
              break _0x4bd9ff;
            }
          case _0x3d5de9:
            _0x9da93f.mode = _0x423093;
          case _0x423093:
            _0x297290 = _0x9da93f.length;
            if (_0x297290) {
              if (_0x297290 > _0x628ad3) {
                _0x297290 = _0x628ad3;
              }
              if (_0x297290 > _0xa012f3) {
                _0x297290 = _0xa012f3;
              }
              if (_0x297290 === 0) {
                break _0x4bd9ff;
              }
              _0x25a5f9.set(_0x1d6a8f.subarray(_0x15ebb5, _0x15ebb5 + _0x297290), _0x20d764);
              _0x628ad3 -= _0x297290;
              _0x15ebb5 += _0x297290;
              _0xa012f3 -= _0x297290;
              _0x20d764 += _0x297290;
              _0x9da93f.length -= _0x297290;
              break;
            }
            _0x9da93f.mode = _0x9b51b9;
            break;
          case _0xa22e2:
            while (_0x265392 < 14) {
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            _0x9da93f.nlen = (_0x2ea8cf & 31) + 257;
            _0x2ea8cf >>>= 5;
            _0x265392 -= 5;
            _0x9da93f.ndist = (_0x2ea8cf & 31) + 1;
            _0x2ea8cf >>>= 5;
            _0x265392 -= 5;
            _0x9da93f.ncode = (_0x2ea8cf & 15) + 4;
            _0x2ea8cf >>>= 4;
            _0x265392 -= 4;
            if (_0x9da93f.nlen > 286 || _0x9da93f.ndist > 30) {
              _0x4371e6.msg = "too many length or distance symbols";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.have = 0;
            _0x9da93f.mode = _0x5932c8;
          case _0x5932c8:
            while (_0x9da93f.have < _0x9da93f.ncode) {
              while (_0x265392 < 3) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x9da93f.lens[_0x4f95db[_0x9da93f.have++]] = _0x2ea8cf & 7;
              _0x2ea8cf >>>= 3;
              _0x265392 -= 3;
            }
            while (_0x9da93f.have < 19) {
              _0x9da93f.lens[_0x4f95db[_0x9da93f.have++]] = 0;
            }
            _0x9da93f.lencode = _0x9da93f.lendyn;
            _0x9da93f.lenbits = 7;
            var _0x474a09 = {
              bits: _0x9da93f.lenbits
            };
            _0x184bc7 = _0x474a09;
            _0x57dbba = _0x1d6fec(_0x271e0d, _0x9da93f.lens, 0, 19, _0x9da93f.lencode, 0, _0x9da93f.work, _0x184bc7);
            _0x9da93f.lenbits = _0x184bc7.bits;
            if (_0x57dbba) {
              _0x4371e6.msg = "invalid code lengths set";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.have = 0;
            _0x9da93f.mode = _0x48c09c;
          case _0x48c09c:
            while (_0x9da93f.have < _0x9da93f.nlen + _0x9da93f.ndist) {
              while (true) {
                _0x10a69d = _0x9da93f.lencode[_0x2ea8cf & (1 << _0x9da93f.lenbits) - 1];
                _0x8de514 = _0x10a69d >>> 24;
                _0x1e27b0 = _0x10a69d >>> 16 & 255;
                _0x17a99f = _0x10a69d & 65535;
                if (_0x8de514 <= _0x265392) {
                  break;
                }
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              if (_0x17a99f < 16) {
                _0x2ea8cf >>>= _0x8de514;
                _0x265392 -= _0x8de514;
                _0x9da93f.lens[_0x9da93f.have++] = _0x17a99f;
              } else {
                if (_0x17a99f === 16) {
                  _0x5da020 = _0x8de514 + 2;
                  while (_0x265392 < _0x5da020) {
                    if (_0x628ad3 === 0) {
                      break _0x4bd9ff;
                    }
                    _0x628ad3--;
                    _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                    _0x265392 += 8;
                  }
                  _0x2ea8cf >>>= _0x8de514;
                  _0x265392 -= _0x8de514;
                  if (_0x9da93f.have === 0) {
                    _0x4371e6.msg = "invalid bit length repeat";
                    _0x9da93f.mode = _0x1cb97e;
                    break;
                  }
                  _0x382965 = _0x9da93f.lens[_0x9da93f.have - 1];
                  _0x297290 = 3 + (_0x2ea8cf & 3);
                  _0x2ea8cf >>>= 2;
                  _0x265392 -= 2;
                } else if (_0x17a99f === 17) {
                  _0x5da020 = _0x8de514 + 3;
                  while (_0x265392 < _0x5da020) {
                    if (_0x628ad3 === 0) {
                      break _0x4bd9ff;
                    }
                    _0x628ad3--;
                    _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                    _0x265392 += 8;
                  }
                  _0x2ea8cf >>>= _0x8de514;
                  _0x265392 -= _0x8de514;
                  _0x382965 = 0;
                  _0x297290 = 3 + (_0x2ea8cf & 7);
                  _0x2ea8cf >>>= 3;
                  _0x265392 -= 3;
                } else {
                  _0x5da020 = _0x8de514 + 7;
                  while (_0x265392 < _0x5da020) {
                    if (_0x628ad3 === 0) {
                      break _0x4bd9ff;
                    }
                    _0x628ad3--;
                    _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                    _0x265392 += 8;
                  }
                  _0x2ea8cf >>>= _0x8de514;
                  _0x265392 -= _0x8de514;
                  _0x382965 = 0;
                  _0x297290 = 11 + (_0x2ea8cf & 127);
                  _0x2ea8cf >>>= 7;
                  _0x265392 -= 7;
                }
                if (_0x9da93f.have + _0x297290 > _0x9da93f.nlen + _0x9da93f.ndist) {
                  _0x4371e6.msg = "invalid bit length repeat";
                  _0x9da93f.mode = _0x1cb97e;
                  break;
                }
                while (_0x297290--) {
                  _0x9da93f.lens[_0x9da93f.have++] = _0x382965;
                }
              }
            }
            if (_0x9da93f.mode === _0x1cb97e) {
              break;
            }
            if (_0x9da93f.lens[256] === 0) {
              _0x4371e6.msg = "invalid code -- missing end-of-block";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.lenbits = 9;
            var _0x34c717 = {
              bits: _0x9da93f.lenbits
            };
            _0x184bc7 = _0x34c717;
            _0x57dbba = _0x1d6fec(_0x2786bd, _0x9da93f.lens, 0, _0x9da93f.nlen, _0x9da93f.lencode, 0, _0x9da93f.work, _0x184bc7);
            _0x9da93f.lenbits = _0x184bc7.bits;
            if (_0x57dbba) {
              _0x4371e6.msg = "invalid literal/lengths set";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.distbits = 6;
            _0x9da93f.distcode = _0x9da93f.distdyn;
            var _0x519bea = {
              bits: _0x9da93f.distbits
            };
            _0x184bc7 = _0x519bea;
            _0x57dbba = _0x1d6fec(_0x3d3c5b, _0x9da93f.lens, _0x9da93f.nlen, _0x9da93f.ndist, _0x9da93f.distcode, 0, _0x9da93f.work, _0x184bc7);
            _0x9da93f.distbits = _0x184bc7.bits;
            if (_0x57dbba) {
              _0x4371e6.msg = "invalid distances set";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.mode = _0x4d758c;
            if (_0xb21200 === _0x459c21) {
              break _0x4bd9ff;
            }
          case _0x4d758c:
            _0x9da93f.mode = _0x356d02;
          case _0x356d02:
            if (_0x628ad3 >= 6 && _0xa012f3 >= 258) {
              _0x4371e6.next_out = _0x20d764;
              _0x4371e6.avail_out = _0xa012f3;
              _0x4371e6.next_in = _0x15ebb5;
              _0x4371e6.avail_in = _0x628ad3;
              _0x9da93f.hold = _0x2ea8cf;
              _0x9da93f.bits = _0x265392;
              _0x26e41d(_0x4371e6, _0x324666);
              _0x20d764 = _0x4371e6.next_out;
              _0x25a5f9 = _0x4371e6.output;
              _0xa012f3 = _0x4371e6.avail_out;
              _0x15ebb5 = _0x4371e6.next_in;
              _0x1d6a8f = _0x4371e6.input;
              _0x628ad3 = _0x4371e6.avail_in;
              _0x2ea8cf = _0x9da93f.hold;
              _0x265392 = _0x9da93f.bits;
              if (_0x9da93f.mode === _0x9b51b9) {
                _0x9da93f.back = -1;
              }
              break;
            }
            _0x9da93f.back = 0;
            while (true) {
              _0x10a69d = _0x9da93f.lencode[_0x2ea8cf & (1 << _0x9da93f.lenbits) - 1];
              _0x8de514 = _0x10a69d >>> 24;
              _0x1e27b0 = _0x10a69d >>> 16 & 255;
              _0x17a99f = _0x10a69d & 65535;
              if (_0x8de514 <= _0x265392) {
                break;
              }
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            if (_0x1e27b0 && (_0x1e27b0 & 240) === 0) {
              _0x28e0ee = _0x8de514;
              _0x2bfbdb = _0x1e27b0;
              _0x322774 = _0x17a99f;
              while (true) {
                _0x10a69d = _0x9da93f.lencode[_0x322774 + ((_0x2ea8cf & (1 << _0x28e0ee + _0x2bfbdb) - 1) >> _0x28e0ee)];
                _0x8de514 = _0x10a69d >>> 24;
                _0x1e27b0 = _0x10a69d >>> 16 & 255;
                _0x17a99f = _0x10a69d & 65535;
                if (_0x28e0ee + _0x8de514 <= _0x265392) {
                  break;
                }
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x2ea8cf >>>= _0x28e0ee;
              _0x265392 -= _0x28e0ee;
              _0x9da93f.back += _0x28e0ee;
            }
            _0x2ea8cf >>>= _0x8de514;
            _0x265392 -= _0x8de514;
            _0x9da93f.back += _0x8de514;
            _0x9da93f.length = _0x17a99f;
            if (_0x1e27b0 === 0) {
              _0x9da93f.mode = _0x2166da;
              break;
            }
            if (_0x1e27b0 & 32) {
              _0x9da93f.back = -1;
              _0x9da93f.mode = _0x9b51b9;
              break;
            }
            if (_0x1e27b0 & 64) {
              _0x4371e6.msg = "invalid literal/length code";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.extra = _0x1e27b0 & 15;
            _0x9da93f.mode = _0xc1a28b;
          case _0xc1a28b:
            if (_0x9da93f.extra) {
              _0x5da020 = _0x9da93f.extra;
              while (_0x265392 < _0x5da020) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x9da93f.length += _0x2ea8cf & (1 << _0x9da93f.extra) - 1;
              _0x2ea8cf >>>= _0x9da93f.extra;
              _0x265392 -= _0x9da93f.extra;
              _0x9da93f.back += _0x9da93f.extra;
            }
            _0x9da93f.was = _0x9da93f.length;
            _0x9da93f.mode = _0x2314d7;
          case _0x2314d7:
            while (true) {
              _0x10a69d = _0x9da93f.distcode[_0x2ea8cf & (1 << _0x9da93f.distbits) - 1];
              _0x8de514 = _0x10a69d >>> 24;
              _0x1e27b0 = _0x10a69d >>> 16 & 255;
              _0x17a99f = _0x10a69d & 65535;
              if (_0x8de514 <= _0x265392) {
                break;
              }
              if (_0x628ad3 === 0) {
                break _0x4bd9ff;
              }
              _0x628ad3--;
              _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
              _0x265392 += 8;
            }
            if ((_0x1e27b0 & 240) === 0) {
              _0x28e0ee = _0x8de514;
              _0x2bfbdb = _0x1e27b0;
              _0x322774 = _0x17a99f;
              while (true) {
                _0x10a69d = _0x9da93f.distcode[_0x322774 + ((_0x2ea8cf & (1 << _0x28e0ee + _0x2bfbdb) - 1) >> _0x28e0ee)];
                _0x8de514 = _0x10a69d >>> 24;
                _0x1e27b0 = _0x10a69d >>> 16 & 255;
                _0x17a99f = _0x10a69d & 65535;
                if (_0x28e0ee + _0x8de514 <= _0x265392) {
                  break;
                }
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x2ea8cf >>>= _0x28e0ee;
              _0x265392 -= _0x28e0ee;
              _0x9da93f.back += _0x28e0ee;
            }
            _0x2ea8cf >>>= _0x8de514;
            _0x265392 -= _0x8de514;
            _0x9da93f.back += _0x8de514;
            if (_0x1e27b0 & 64) {
              _0x4371e6.msg = "invalid distance code";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.offset = _0x17a99f;
            _0x9da93f.extra = _0x1e27b0 & 15;
            _0x9da93f.mode = _0x40a22b;
          case _0x40a22b:
            if (_0x9da93f.extra) {
              _0x5da020 = _0x9da93f.extra;
              while (_0x265392 < _0x5da020) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x9da93f.offset += _0x2ea8cf & (1 << _0x9da93f.extra) - 1;
              _0x2ea8cf >>>= _0x9da93f.extra;
              _0x265392 -= _0x9da93f.extra;
              _0x9da93f.back += _0x9da93f.extra;
            }
            if (_0x9da93f.offset > _0x9da93f.dmax) {
              _0x4371e6.msg = "invalid distance too far back";
              _0x9da93f.mode = _0x1cb97e;
              break;
            }
            _0x9da93f.mode = _0x52807d;
          case _0x52807d:
            if (_0xa012f3 === 0) {
              break _0x4bd9ff;
            }
            _0x297290 = _0x324666 - _0xa012f3;
            if (_0x9da93f.offset > _0x297290) {
              _0x297290 = _0x9da93f.offset - _0x297290;
              if (_0x297290 > _0x9da93f.whave) {
                if (_0x9da93f.sane) {
                  _0x4371e6.msg = "invalid distance too far back";
                  _0x9da93f.mode = _0x1cb97e;
                  break;
                }
              }
              if (_0x297290 > _0x9da93f.wnext) {
                _0x297290 -= _0x9da93f.wnext;
                _0x56d6d3 = _0x9da93f.wsize - _0x297290;
              } else {
                _0x56d6d3 = _0x9da93f.wnext - _0x297290;
              }
              if (_0x297290 > _0x9da93f.length) {
                _0x297290 = _0x9da93f.length;
              }
              _0x2a98f9 = _0x9da93f.window;
            } else {
              _0x2a98f9 = _0x25a5f9;
              _0x56d6d3 = _0x20d764 - _0x9da93f.offset;
              _0x297290 = _0x9da93f.length;
            }
            if (_0x297290 > _0xa012f3) {
              _0x297290 = _0xa012f3;
            }
            _0xa012f3 -= _0x297290;
            _0x9da93f.length -= _0x297290;
            do {
              _0x25a5f9[_0x20d764++] = _0x2a98f9[_0x56d6d3++];
            } while (--_0x297290);
            if (_0x9da93f.length === 0) {
              _0x9da93f.mode = _0x356d02;
            }
            break;
          case _0x2166da:
            if (_0xa012f3 === 0) {
              break _0x4bd9ff;
            }
            _0x25a5f9[_0x20d764++] = _0x9da93f.length;
            _0xa012f3--;
            _0x9da93f.mode = _0x356d02;
            break;
          case _0x10cd65:
            if (_0x9da93f.wrap) {
              while (_0x265392 < 32) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf |= _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              _0x324666 -= _0xa012f3;
              _0x4371e6.total_out += _0x324666;
              _0x9da93f.total += _0x324666;
              if (_0x9da93f.wrap & 4 && _0x324666) {
                _0x4371e6.adler = _0x9da93f.check = _0x9da93f.flags ? _0x144de8(_0x9da93f.check, _0x25a5f9, _0x324666, _0x20d764 - _0x324666) : _0x3fc282(_0x9da93f.check, _0x25a5f9, _0x324666, _0x20d764 - _0x324666);
              }
              _0x324666 = _0xa012f3;
              if (_0x9da93f.wrap & 4 && (_0x9da93f.flags ? _0x2ea8cf : _0x466aa9(_0x2ea8cf)) !== _0x9da93f.check) {
                _0x4371e6.msg = "incorrect data check";
                _0x9da93f.mode = _0x1cb97e;
                break;
              }
              _0x2ea8cf = 0;
              _0x265392 = 0;
            }
            _0x9da93f.mode = _0x4645e8;
          case _0x4645e8:
            if (_0x9da93f.wrap && _0x9da93f.flags) {
              while (_0x265392 < 32) {
                if (_0x628ad3 === 0) {
                  break _0x4bd9ff;
                }
                _0x628ad3--;
                _0x2ea8cf += _0x1d6a8f[_0x15ebb5++] << _0x265392;
                _0x265392 += 8;
              }
              if (_0x9da93f.wrap & 4 && _0x2ea8cf !== (_0x9da93f.total & 4294967295)) {
                _0x4371e6.msg = "incorrect length check";
                _0x9da93f.mode = _0x1cb97e;
                break;
              }
              _0x2ea8cf = 0;
              _0x265392 = 0;
            }
            _0x9da93f.mode = _0x521027;
          case _0x521027:
            _0x57dbba = _0x4da3df;
            break _0x4bd9ff;
          case _0x1cb97e:
            _0x57dbba = _0x1181a4;
            break _0x4bd9ff;
          case _0x1cfc4c:
            return _0x37742e;
          case _0x380d0a:
          default:
            return _0x45400b;
        }
      }
      _0x4371e6.next_out = _0x20d764;
      _0x4371e6.avail_out = _0xa012f3;
      _0x4371e6.next_in = _0x15ebb5;
      _0x4371e6.avail_in = _0x628ad3;
      _0x9da93f.hold = _0x2ea8cf;
      _0x9da93f.bits = _0x265392;
      if (_0x9da93f.wsize || _0x324666 !== _0x4371e6.avail_out && _0x9da93f.mode < _0x1cb97e && (_0x9da93f.mode < _0x10cd65 || _0xb21200 !== _0x27b54b)) {
        if (_0x84daa2(_0x4371e6, _0x4371e6.output, _0x4371e6.next_out, _0x324666 - _0x4371e6.avail_out)) ;
      }
      _0x593d1d -= _0x4371e6.avail_in;
      _0x324666 -= _0x4371e6.avail_out;
      _0x4371e6.total_in += _0x593d1d;
      _0x4371e6.total_out += _0x324666;
      _0x9da93f.total += _0x324666;
      if (_0x9da93f.wrap & 4 && _0x324666) {
        _0x4371e6.adler = _0x9da93f.check = _0x9da93f.flags ? _0x144de8(_0x9da93f.check, _0x25a5f9, _0x324666, _0x4371e6.next_out - _0x324666) : _0x3fc282(_0x9da93f.check, _0x25a5f9, _0x324666, _0x4371e6.next_out - _0x324666);
      }
      _0x4371e6.data_type = _0x9da93f.bits + (_0x9da93f.last ? 64 : 0) + (_0x9da93f.mode === _0x9b51b9 ? 128 : 0) + (_0x9da93f.mode === _0x4d758c || _0x9da93f.mode === _0x3d5de9 ? 256 : 0);
      if ((_0x593d1d === 0 && _0x324666 === 0 || _0xb21200 === _0x27b54b) && _0x57dbba === _0x2c1305) {
        _0x57dbba = _0x33b735;
      }
      return _0x57dbba;
    };
    const _0x1e1ea3 = _0x435f29 => {
      if (_0x3f4368(_0x435f29)) {
        return _0x45400b;
      }
      let _0x538bee = _0x435f29.state;
      _0x538bee.window &&= null;
      _0x435f29.state = null;
      return _0x2c1305;
    };
    const _0x3fad85 = (_0x5f430f, _0x595f46) => {
      if (_0x3f4368(_0x5f430f)) {
        return _0x45400b;
      }
      const _0x10a50a = _0x5f430f.state;
      if ((_0x10a50a.wrap & 2) === 0) {
        return _0x45400b;
      }
      _0x10a50a.head = _0x595f46;
      _0x595f46.done = false;
      return _0x2c1305;
    };
    const _0x516861 = (_0x4e3026, _0xbc1518) => {
      const _0x3a6f6d = _0xbc1518.length;
      let _0x2e907c;
      let _0x538c39;
      let _0x5c147c;
      if (_0x3f4368(_0x4e3026)) {
        return _0x45400b;
      }
      _0x2e907c = _0x4e3026.state;
      if (_0x2e907c.wrap !== 0 && _0x2e907c.mode !== _0x5abd1d) {
        return _0x45400b;
      }
      if (_0x2e907c.mode === _0x5abd1d) {
        _0x538c39 = 1;
        _0x538c39 = _0x3fc282(_0x538c39, _0xbc1518, _0x3a6f6d, 0);
        if (_0x538c39 !== _0x2e907c.check) {
          return _0x1181a4;
        }
      }
      _0x5c147c = _0x84daa2(_0x4e3026, _0xbc1518, _0x3a6f6d, _0x3a6f6d);
      if (_0x5c147c) {
        _0x2e907c.mode = _0x1cfc4c;
        return _0x37742e;
      }
      _0x2e907c.havedict = 1;
      return _0x2c1305;
    };
    var _0x27df34 = _0x32dae5;
    var _0x52b2d1 = _0x23b80c;
    var _0x1c4152 = _0x207940;
    var _0x5674a9 = _0x5dc358;
    var _0x2e4f99 = _0x57d33e;
    var _0x3cc2ff = _0xed323;
    var _0x4913f3 = _0x1e1ea3;
    var _0x725d99 = _0x3fad85;
    var _0x47e358 = _0x516861;
    var _0xa95635 = "pako inflate (from Nodeca project)";
    var _0x5a6ea7 = {
      inflateReset: _0x27df34,
      inflateReset2: _0x52b2d1,
      inflateResetKeep: _0x1c4152,
      inflateInit: _0x5674a9,
      inflateInit2: _0x2e4f99,
      inflate: _0x3cc2ff,
      inflateEnd: _0x4913f3,
      inflateGetHeader: _0x725d99,
      inflateSetDictionary: _0x47e358,
      inflateInfo: _0xa95635
    };
    var _0x5c5b67 = _0x5a6ea7;
    function _0x4c3a3d() {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = false;
    }
    var _0x1e0e83 = _0x4c3a3d;
    const _0x1a7827 = Object.prototype.toString;
    const {
      Z_NO_FLUSH: _0x59403e,
      Z_FINISH: _0x16b84a,
      Z_OK: _0x1c9f7c,
      Z_STREAM_END: _0x4038d9,
      Z_NEED_DICT: _0x1a5225,
      Z_STREAM_ERROR: _0x4ed83a,
      Z_DATA_ERROR: _0x521ab3,
      Z_MEM_ERROR: _0x10885e
    } = _0x5b3789;
    function _0x2d2712(_0x2594d6) {
      this.options = _0x32e369.assign({
        chunkSize: 65536,
        windowBits: 15,
        to: ""
      }, _0x2594d6 || {});
      const _0xc44a23 = this.options;
      if (_0xc44a23.raw && _0xc44a23.windowBits >= 0 && _0xc44a23.windowBits < 16) {
        _0xc44a23.windowBits = -_0xc44a23.windowBits;
        if (_0xc44a23.windowBits === 0) {
          _0xc44a23.windowBits = -15;
        }
      }
      if (_0xc44a23.windowBits >= 0 && _0xc44a23.windowBits < 16 && (!_0x2594d6 || !_0x2594d6.windowBits)) {
        _0xc44a23.windowBits += 32;
      }
      if (_0xc44a23.windowBits > 15 && _0xc44a23.windowBits < 48) {
        if ((_0xc44a23.windowBits & 15) === 0) {
          _0xc44a23.windowBits |= 15;
        }
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new _0x36d9fd();
      this.strm.avail_out = 0;
      let _0x16d6f7 = _0x5c5b67.inflateInit2(this.strm, _0xc44a23.windowBits);
      if (_0x16d6f7 !== _0x1c9f7c) {
        throw new Error(_0x112a80[_0x16d6f7]);
      }
      this.header = new _0x1e0e83();
      _0x5c5b67.inflateGetHeader(this.strm, this.header);
      if (_0xc44a23.dictionary) {
        if (typeof _0xc44a23.dictionary === "string") {
          _0xc44a23.dictionary = _0x5d2021.string2buf(_0xc44a23.dictionary);
        } else if (_0x1a7827.call(_0xc44a23.dictionary) === "[object ArrayBuffer]") {
          _0xc44a23.dictionary = new Uint8Array(_0xc44a23.dictionary);
        }
        if (_0xc44a23.raw) {
          _0x16d6f7 = _0x5c5b67.inflateSetDictionary(this.strm, _0xc44a23.dictionary);
          if (_0x16d6f7 !== _0x1c9f7c) {
            throw new Error(_0x112a80[_0x16d6f7]);
          }
        }
      }
    }
    _0x2d2712.prototype.push = function (_0x53bf94, _0x51d3e4) {
      const _0x4bd3e1 = this.strm;
      const _0x4c14d4 = this.options.chunkSize;
      const _0x344545 = this.options.dictionary;
      let _0xbc68b8;
      let _0x27b4c7;
      let _0x325469;
      if (this.ended) {
        return false;
      }
      if (_0x51d3e4 === ~~_0x51d3e4) {
        _0x27b4c7 = _0x51d3e4;
      } else {
        _0x27b4c7 = _0x51d3e4 === true ? _0x16b84a : _0x59403e;
      }
      if (_0x1a7827.call(_0x53bf94) === "[object ArrayBuffer]") {
        _0x4bd3e1.input = new Uint8Array(_0x53bf94);
      } else {
        _0x4bd3e1.input = _0x53bf94;
      }
      _0x4bd3e1.next_in = 0;
      _0x4bd3e1.avail_in = _0x4bd3e1.input.length;
      while (true) {
        if (_0x4bd3e1.avail_out === 0) {
          _0x4bd3e1.output = new Uint8Array(_0x4c14d4);
          _0x4bd3e1.next_out = 0;
          _0x4bd3e1.avail_out = _0x4c14d4;
        }
        _0xbc68b8 = _0x5c5b67.inflate(_0x4bd3e1, _0x27b4c7);
        if (_0xbc68b8 === _0x1a5225 && _0x344545) {
          _0xbc68b8 = _0x5c5b67.inflateSetDictionary(_0x4bd3e1, _0x344545);
          if (_0xbc68b8 === _0x1c9f7c) {
            _0xbc68b8 = _0x5c5b67.inflate(_0x4bd3e1, _0x27b4c7);
          } else if (_0xbc68b8 === _0x521ab3) {
            _0xbc68b8 = _0x1a5225;
          }
        }
        while (_0x4bd3e1.avail_in > 0 && _0xbc68b8 === _0x4038d9 && _0x4bd3e1.state.wrap > 0 && _0x53bf94[_0x4bd3e1.next_in] !== 0) {
          _0x5c5b67.inflateReset(_0x4bd3e1);
          _0xbc68b8 = _0x5c5b67.inflate(_0x4bd3e1, _0x27b4c7);
        }
        switch (_0xbc68b8) {
          case _0x4ed83a:
          case _0x521ab3:
          case _0x1a5225:
          case _0x10885e:
            this.onEnd(_0xbc68b8);
            this.ended = true;
            return false;
        }
        _0x325469 = _0x4bd3e1.avail_out;
        if (_0x4bd3e1.next_out) {
          if (_0x4bd3e1.avail_out === 0 || _0xbc68b8 === _0x4038d9) {
            if (this.options.to === "string") {
              let _0x298336 = _0x5d2021.utf8border(_0x4bd3e1.output, _0x4bd3e1.next_out);
              let _0x4e9b6c = _0x4bd3e1.next_out - _0x298336;
              let _0x4385db = _0x5d2021.buf2string(_0x4bd3e1.output, _0x298336);
              _0x4bd3e1.next_out = _0x4e9b6c;
              _0x4bd3e1.avail_out = _0x4c14d4 - _0x4e9b6c;
              if (_0x4e9b6c) {
                _0x4bd3e1.output.set(_0x4bd3e1.output.subarray(_0x298336, _0x298336 + _0x4e9b6c), 0);
              }
              this.onData(_0x4385db);
            } else {
              this.onData(_0x4bd3e1.output.length === _0x4bd3e1.next_out ? _0x4bd3e1.output : _0x4bd3e1.output.subarray(0, _0x4bd3e1.next_out));
            }
          }
        }
        if (_0xbc68b8 === _0x1c9f7c && _0x325469 === 0) {
          continue;
        }
        if (_0xbc68b8 === _0x4038d9) {
          _0xbc68b8 = _0x5c5b67.inflateEnd(this.strm);
          this.onEnd(_0xbc68b8);
          this.ended = true;
          return true;
        }
        if (_0x4bd3e1.avail_in === 0) {
          break;
        }
      }
      return true;
    };
    _0x2d2712.prototype.onData = function (_0x46c01f) {
      this.chunks.push(_0x46c01f);
    };
    _0x2d2712.prototype.onEnd = function (_0x5b8cb4) {
      if (_0x5b8cb4 === _0x1c9f7c) {
        if (this.options.to === "string") {
          this.result = this.chunks.join("");
        } else {
          this.result = _0x32e369.flattenChunks(this.chunks);
        }
      }
      this.chunks = [];
      this.err = _0x5b8cb4;
      this.msg = this.strm.msg;
    };
    function _0x3e3a83(_0x1b1ff7, _0x421f8f) {
      const _0x3035d0 = new _0x2d2712(_0x421f8f);
      _0x3035d0.push(_0x1b1ff7);
      if (_0x3035d0.err) {
        throw _0x3035d0.msg || _0x112a80[_0x3035d0.err];
      }
      return _0x3035d0.result;
    }
    function _0x28058a(_0x332030, _0x37ec3c) {
      _0x37ec3c = _0x37ec3c || {};
      _0x37ec3c.raw = true;
      return _0x3e3a83(_0x332030, _0x37ec3c);
    }
    var _0x458e01 = _0x2d2712;
    var _0x77c7a8 = _0x3e3a83;
    var _0x177587 = _0x28058a;
    var _0x2a3d04 = _0x3e3a83;
    var _0x228fa0 = _0x5b3789;
    var _0x1c46d2 = {
      Inflate: _0x458e01,
      inflate: _0x77c7a8,
      inflateRaw: _0x177587,
      ungzip: _0x2a3d04,
      constants: _0x228fa0
    };
    var _0x494e9c = _0x1c46d2;
    const {
      Deflate: _0x58c214,
      deflate: _0xee5f64,
      deflateRaw: _0x417726,
      gzip: _0x32e92d
    } = _0x164c33;
    const {
      Inflate: _0x2960a9,
      inflate: _0x4569fa,
      inflateRaw: _0x1c3bfb,
      ungzip: _0x120b0a
    } = _0x494e9c;
    var _0x3bf8f4 = _0x58c214;
    var _0x162728 = _0xee5f64;
    var _0x8f64a5 = _0x417726;
    var _0x404769 = _0x32e92d;
    var _0x5ca645 = _0x2960a9;
    var _0x83249 = _0x4569fa;
    var _0x449196 = _0x1c3bfb;
    var _0x23cba3 = _0x120b0a;
    var _0x23a736 = _0x5b3789;
    var _0x3e5270 = {
      Deflate: _0x3bf8f4,
      deflate: _0x162728,
      deflateRaw: _0x8f64a5,
      gzip: _0x404769,
      Inflate: _0x5ca645,
      inflate: _0x83249,
      inflateRaw: _0x449196,
      ungzip: _0x23cba3,
      constants: _0x23a736
    };
    var _0x468eaa = _0x3e5270;
    var _0xb1a23d = _0x3cbfd9(577);
    ;
    var _0x28776a = Object.defineProperty;
    var _0x5a2b34 = (_0xf12c0e, _0x3d88cd) => {
      for (var _0x27454f in _0x3d88cd) {
        _0x28776a(_0xf12c0e, _0x27454f, {
          get: _0x3d88cd[_0x27454f],
          enumerable: true
        });
      }
    };
    var _0x337d23 = (_0x3ca8b5, _0x5459f5, _0x1d38fb) => {
      if (!_0x5459f5.has(_0x3ca8b5)) {
        throw TypeError("Cannot " + _0x1d38fb);
      }
    };
    var _0x4af770 = (_0x4dcd63, _0x3fec56, _0x2e43b6) => {
      _0x337d23(_0x4dcd63, _0x3fec56, "read from private field");
      if (_0x2e43b6) {
        return _0x2e43b6.call(_0x4dcd63);
      } else {
        return _0x3fec56.get(_0x4dcd63);
      }
    };
    var _0xf875d8 = (_0x3b42d0, _0x292d48, _0x384237) => {
      if (_0x292d48.has(_0x3b42d0)) {
        throw TypeError("Cannot add the same private member more than once");
      }
      if (_0x292d48 instanceof WeakSet) {
        _0x292d48.add(_0x3b42d0);
      } else {
        _0x292d48.set(_0x3b42d0, _0x384237);
      }
    };
    var _0x2399ff = (_0x47dfbe, _0x102cdb, _0x5f2b99, _0xbb4e1c) => {
      _0x337d23(_0x47dfbe, _0x102cdb, "write to private field");
      if (_0xbb4e1c) {
        _0xbb4e1c.call(_0x47dfbe, _0x5f2b99);
      } else {
        _0x102cdb.set(_0x47dfbe, _0x5f2b99);
      }
      return _0x5f2b99;
    };
    var _0x4c2785 = (_0x3b9ac4, _0x498706, _0x3c1a68) => {
      _0x337d23(_0x3b9ac4, _0x498706, "access private method");
      return _0x3c1a68;
    };
    var _0x4fe769 = {
      ESC: 322,
      F1: 288,
      F2: 289,
      F3: 170,
      F5: 166,
      F6: 167,
      F7: 168,
      F8: 169,
      F9: 56,
      F10: 57,
      "~": 243,
      "#1": 157,
      "#2": 158,
      "#3": 160,
      "#4": 164,
      "#5": 165,
      "#6": 159,
      "#7": 161,
      "#8": 162,
      "#9": 163,
      "-": 84,
      "=": 83,
      BACKSPACE: 177,
      TAB: 37,
      Q: 44,
      W: 32,
      E: 38,
      R: 45,
      T: 245,
      Y: 246,
      U: 303,
      P: 199,
      ENTER: 18,
      CAPS: 137,
      A: 34,
      S: 8,
      D: 9,
      F: 23,
      G: 47,
      H: 74,
      K: 311,
      L: 182,
      LEFTSHIFT: 21,
      Z: 20,
      X: 73,
      C: 26,
      V: 0,
      B: 29,
      N: 249,
      M: 244,
      ",": 82,
      ".": 81,
      LEFTCTRL: 36,
      LEFTALT: 19,
      SPACE: 22,
      RIGHTCTRL: 70,
      HOME: 213,
      PAGEUP: 10,
      PAGEDOWN: 11,
      DELETE: 178,
      LEFT: 174,
      RIGHT: 175,
      TOP: 27,
      DOWN: 173,
      NENTER: 201,
      N4: 108,
      N5: 60,
      N6: 107,
      "N+": 96,
      "N-": 97,
      N7: 117,
      N8: 61,
      N9: 118
    };
    var _0x3c74ef = {};
    var _0x2ddf8a = {
      MathUtils: () => _0x381d98
    };
    _0x5a2b34(_0x3c74ef, _0x2ddf8a);
    var _0xb4221c;
    var _0x40ab26;
    var _0x3eb3c6 = class _0x16fb79 {
      constructor(_0x4b78ac, _0xab506d, _0x499f98) {
        _0xf875d8(this, _0xb4221c);
        const _0x33de79 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x4b78ac, _0xab506d, _0x499f98);
        this.x = _0x33de79.x;
        this.y = _0x33de79.y;
        this.z = _0x33de79.z;
      }
      equals(_0x1adc4d, _0x2024a0, _0x4b3dde) {
        const _0x1570c1 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x1adc4d, _0x2024a0, _0x4b3dde);
        return this.x === _0x1570c1.x && this.y === _0x1570c1.y && this.z === _0x1570c1.z;
      }
      add(_0x14a295, _0x10109b, _0x5e47c1, _0x3d154b) {
        let _0xdba185 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x14a295, _0x10109b, _0x5e47c1);
        this.x += _0x3d154b ? _0xdba185.x * _0x3d154b : _0xdba185.x;
        this.y += _0x3d154b ? _0xdba185.y * _0x3d154b : _0xdba185.y;
        this.z += _0x3d154b ? _0xdba185.z * _0x3d154b : _0xdba185.z;
        return this;
      }
      addScalar(_0x46dffc) {
        if (typeof _0x46dffc !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x += _0x46dffc;
        this.y += _0x46dffc;
        this.z += _0x46dffc;
        return this;
      }
      sub(_0x32589f, _0x999b07, _0x502c35, _0x752610) {
        const _0xb57789 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x32589f, _0x999b07, _0x502c35);
        this.x -= _0x752610 ? _0xb57789.x * _0x752610 : _0xb57789.x;
        this.y -= _0x752610 ? _0xb57789.y * _0x752610 : _0xb57789.y;
        this.z -= _0x752610 ? _0xb57789.z * _0x752610 : _0xb57789.z;
        return this;
      }
      subScalar(_0x4a965c) {
        if (typeof _0x4a965c !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x -= _0x4a965c;
        this.y -= _0x4a965c;
        this.z -= _0x4a965c;
        return this;
      }
      multiply(_0x3f4326, _0x7baca5, _0x57acea) {
        const _0x27d197 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x3f4326, _0x7baca5, _0x57acea);
        this.x *= _0x27d197.x;
        this.y *= _0x27d197.y;
        this.z *= _0x27d197.z;
        return this;
      }
      multiplyScalar(_0x33925d) {
        if (typeof _0x33925d !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x *= _0x33925d;
        this.y *= _0x33925d;
        this.z *= _0x33925d;
        return this;
      }
      divide(_0x239f51, _0x2997b8, _0x3f34b5) {
        const _0x2b33f3 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x239f51, _0x2997b8, _0x3f34b5);
        this.x /= _0x2b33f3.x;
        this.y /= _0x2b33f3.y;
        this.z /= _0x2b33f3.z;
        return this;
      }
      divideScalar(_0x3489a3) {
        if (typeof _0x3489a3 !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x /= _0x3489a3;
        this.y /= _0x3489a3;
        this.z /= _0x3489a3;
        return this;
      }
      round() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
      }
      floor() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
      }
      ceil() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
      }
      getCenter(_0x4fbef1, _0x3c2046, _0x57a8d2) {
        const _0x621f20 = _0x4c2785(this, _0xb4221c, _0x40ab26).call(this, _0x4fbef1, _0x3c2046, _0x57a8d2);
        return new _0x16fb79((this.x + _0x621f20.x) / 2, (this.y + _0x621f20.y) / 2, (this.z + _0x621f20.z) / 2);
      }
      getDistance(_0x1f6fe3, _0x2d92bd, _0x51a997) {
        const [_0x473b64, _0x20f1e5, _0x32c4d3] = _0x1f6fe3 instanceof Array ? _0x1f6fe3 : typeof _0x1f6fe3 === "object" ? [_0x1f6fe3.x, _0x1f6fe3.y, _0x1f6fe3.z] : [_0x1f6fe3, _0x2d92bd, _0x51a997];
        if (typeof _0x473b64 !== "number" || typeof _0x20f1e5 !== "number" || typeof _0x32c4d3 !== "number") {
          throw new Error("Invalid vector coordinates");
        }
        const [_0x539898, _0x5babb5, _0x52f53f] = [this.x - _0x473b64, this.y - _0x20f1e5, this.z - _0x32c4d3];
        return Math.sqrt(_0x539898 * _0x539898 + _0x5babb5 * _0x5babb5 + _0x52f53f * _0x52f53f);
      }
      toArray(_0x103f23) {
        if (typeof _0x103f23 === "number") {
          return [parseFloat(this.x.toFixed(_0x103f23)), parseFloat(this.y.toFixed(_0x103f23)), parseFloat(this.z.toFixed(_0x103f23))];
        }
        return [this.x, this.y, this.z];
      }
      toJSON(_0x157ce6) {
        if (typeof _0x157ce6 === "number") {
          return {
            x: parseFloat(this.x.toFixed(_0x157ce6)),
            y: parseFloat(this.y.toFixed(_0x157ce6)),
            z: parseFloat(this.z.toFixed(_0x157ce6))
          };
        }
        var _0x727af7 = {
          x: this.x,
          y: this.y,
          z: this.z
        };
        return _0x727af7;
      }
      toString(_0x3ea19b) {
        return JSON.stringify(this.toJSON(_0x3ea19b));
      }
    };
    _0xb4221c = new WeakSet();
    _0x40ab26 = function (_0x197556, _0x19edf7, _0x2e85d3) {
      let _0x3ed205 = {
        x: 0,
        y: 0,
        z: 0
      };
      if (_0x197556 instanceof _0x3eb3c6) {
        _0x3ed205 = _0x197556;
      } else if (_0x197556 instanceof Array) {
        var _0x1a5a42 = {
          x: _0x197556[0],
          y: _0x197556[1],
          z: _0x197556[2]
        };
        _0x3ed205 = _0x1a5a42;
      } else if (typeof _0x197556 === "object") {
        _0x3ed205 = _0x197556;
      } else {
        var _0x332059 = {
          x: _0x197556,
          y: _0x19edf7,
          z: _0x2e85d3
        };
        _0x3ed205 = _0x332059;
      }
      if (typeof _0x3ed205.x !== "number" || typeof _0x3ed205.y !== "number" || typeof _0x3ed205.z !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return _0x3ed205;
    };
    var _0x36b213 = _0x3eb3c6;
    var _0x4f7369;
    var _0x300e46;
    var _0x4d7bce = class {
      constructor(_0x5c6dbf) {
        _0xf875d8(this, _0x4f7369, undefined);
        _0xf875d8(this, _0x300e46, undefined);
        _0x2399ff(this, _0x300e46, _0x5c6dbf ?? 5);
        _0x2399ff(this, _0x4f7369, new Map());
      }
      setTTL(_0x1ad80e) {
        _0x2399ff(this, _0x300e46, _0x1ad80e);
      }
      set(_0x1c4ae2, _0x128739, _0x4cfb98) {
        _0x4af770(this, _0x4f7369).set(_0x1c4ae2, {
          value: _0x128739,
          expiration: Date.now() + (_0x4cfb98 ?? _0x4af770(this, _0x300e46)) * 1000
        });
        return this;
      }
      get(_0x25890c, _0x3b20f2 = false) {
        const _0x2ce467 = _0x4af770(this, _0x4f7369).get(_0x25890c);
        const _0x44a9dc = _0x2ce467 ? _0x3b20f2 ? true : _0x2ce467.expiration > Date.now() : false;
        if (!_0x2ce467 || !_0x44a9dc) {
          if (_0x2ce467) {
            _0x4af770(this, _0x4f7369).delete(_0x25890c);
          }
          return;
        }
        return _0x2ce467.value;
      }
      has(_0x12c83d, _0x4a7ff3 = false) {
        const _0x10d4c2 = _0x4af770(this, _0x4f7369).get(_0x12c83d);
        const _0x1b8f59 = _0x10d4c2 ? _0x4a7ff3 ? true : _0x10d4c2.expiration > Date.now() : false;
        if (_0x10d4c2 && !_0x1b8f59) {
          _0x4af770(this, _0x4f7369).delete(_0x12c83d);
        }
        return _0x1b8f59;
      }
      delete(_0x14cc52) {
        return _0x4af770(this, _0x4f7369).delete(_0x14cc52);
      }
      clear() {
        _0x4af770(this, _0x4f7369).clear();
      }
      values(_0xa1d32c = false) {
        const _0x52816b = [];
        const _0x2d02cf = Date.now();
        for (const _0x5ebb3e of _0x4af770(this, _0x4f7369).values()) {
          if (_0xa1d32c || _0x5ebb3e.expiration > _0x2d02cf) {
            _0x52816b.push(_0x5ebb3e.value);
          }
        }
        return _0x52816b;
      }
      keys(_0x18df6a = false) {
        const _0x21e823 = [];
        const _0x977b8e = Date.now();
        for (const [_0xd76a3a, _0x94f239] of _0x4af770(this, _0x4f7369).entries()) {
          if (_0x18df6a || _0x94f239.expiration > _0x977b8e) {
            _0x21e823.push(_0xd76a3a);
          }
        }
        return _0x21e823;
      }
      entries(_0x28a7fd = false) {
        const _0xf7da40 = [];
        const _0x51c615 = Date.now();
        for (const [_0x1550ec, _0x2477d2] of _0x4af770(this, _0x4f7369).entries()) {
          if (_0x28a7fd || _0x2477d2.expiration > _0x51c615) {
            _0xf7da40.push([_0x1550ec, _0x2477d2.value]);
          }
        }
        return _0xf7da40;
      }
    };
    _0x4f7369 = new WeakMap();
    _0x300e46 = new WeakMap();
    var _0x47ba2a;
    var _0x24f954;
    var _0x4714c2;
    var _0x2bec62;
    var _0xe1dd84;
    var _0x1a5fa7;
    var _0x1b319e;
    var _0xfa4f04;
    var _0x2a3cb1;
    var _0xc5c6e8;
    var _0x3657ed;
    var _0x3febf3;
    var _0x4f6557;
    var _0x3c215a;
    var _0x2740e2;
    var _0x3cbb42;
    var _0x34fe99;
    var _0x1299e1;
    var _0x9f2350;
    var _0x24a5ce;
    var _0x186669;
    var _0x57c6f5;
    var _0x4bda7f = class {
      constructor(_0x45f460, _0x385919, _0x49e7e5, _0x4dd287, _0x4713d4, _0x2e8466 = 30, _0x2eac27 = false) {
        _0xf875d8(this, _0x4f6557);
        _0xf875d8(this, _0x2740e2);
        _0xf875d8(this, _0x34fe99);
        _0xf875d8(this, _0x9f2350);
        _0xf875d8(this, _0x186669);
        _0xf875d8(this, _0x47ba2a, undefined);
        _0xf875d8(this, _0x24f954, undefined);
        _0xf875d8(this, _0x4714c2, undefined);
        _0xf875d8(this, _0x2bec62, undefined);
        _0xf875d8(this, _0xe1dd84, undefined);
        _0xf875d8(this, _0x1a5fa7, undefined);
        _0xf875d8(this, _0x1b319e, undefined);
        _0xf875d8(this, _0xfa4f04, undefined);
        _0xf875d8(this, _0x2a3cb1, undefined);
        _0xf875d8(this, _0xc5c6e8, undefined);
        _0xf875d8(this, _0x3657ed, undefined);
        _0xf875d8(this, _0x3febf3, undefined);
        _0x2399ff(this, _0x47ba2a, _0x45f460);
        _0x2399ff(this, _0x24f954, _0x4dd287);
        _0x2399ff(this, _0x4714c2, _0x4713d4);
        _0x2399ff(this, _0x2bec62, _0x385919);
        _0x2399ff(this, _0xe1dd84, _0x49e7e5);
        _0x2399ff(this, _0x1a5fa7, _0x2eac27);
        _0x2399ff(this, _0x1b319e, _0x2e8466);
        _0x2399ff(this, _0x2a3cb1, _0x4af770(this, _0x24f954).x / _0x2e8466);
        _0x2399ff(this, _0xc5c6e8, _0x4af770(this, _0x24f954).y / _0x2e8466);
        _0x2399ff(this, _0xfa4f04, _0x4af770(this, _0x2a3cb1) * _0x4af770(this, _0xc5c6e8));
        _0x2399ff(this, _0x3657ed, _0x4c2785(this, _0x4f6557, _0x3c215a).call(this, _0x4af770(this, _0x47ba2a), _0x4af770(this, _0x1b319e), _0x4af770(this, _0x2a3cb1), _0x4af770(this, _0xc5c6e8), _0x4af770(this, _0x1a5fa7)));
        _0x2399ff(this, _0x3febf3, _0x4c2785(this, _0x2740e2, _0x3cbb42).call(this, _0x4af770(this, _0x3657ed), _0x4af770(this, _0xfa4f04)));
      }
      get cells() {
        return _0x4af770(this, _0x3657ed);
      }
      get cellSize() {
        return _0x4af770(this, _0x1b319e);
      }
      get cellWidth() {
        return _0x4af770(this, _0x2a3cb1);
      }
      get cellHeight() {
        return _0x4af770(this, _0xc5c6e8);
      }
      get gridArea() {
        return _0x4af770(this, _0x3febf3);
      }
      get gridCoverage() {
        return _0x4af770(this, _0x3febf3) / _0x4af770(this, _0x4714c2) * 100;
      }
      isPointInsideGrid(_0x103e65) {
        var _0x160309;
        const _0x268bba = _0x103e65.x - _0x4af770(this, _0x2bec62).x;
        const _0x190ef5 = _0x103e65.y - _0x4af770(this, _0x2bec62).y;
        const _0x23f5e2 = Math.floor(_0x268bba * _0x4af770(this, _0x1b319e) / _0x4af770(this, _0x24f954).x);
        const _0x2ca6f9 = Math.floor(_0x190ef5 * _0x4af770(this, _0x1b319e) / _0x4af770(this, _0x24f954).y);
        let _0x5eb66c = (_0x160309 = _0x4af770(this, _0x3657ed)[_0x23f5e2]) == null ? undefined : _0x160309[_0x2ca6f9];
        if (!_0x5eb66c && _0x4af770(this, _0x1a5fa7)) {
          _0x5eb66c = _0x4c2785(this, _0x9f2350, _0x24a5ce).call(this, _0x23f5e2, _0x2ca6f9, _0x4af770(this, _0x2a3cb1), _0x4af770(this, _0xc5c6e8), _0x4af770(this, _0x47ba2a));
          _0x4af770(this, _0x3657ed)[_0x23f5e2][_0x2ca6f9] = _0x5eb66c;
          if (!_0x5eb66c) {
            return false;
          }
          _0x2399ff(this, _0x3febf3, _0x4af770(this, _0x3febf3) + _0x4af770(this, _0xfa4f04));
        }
        return _0x5eb66c ?? false;
      }
    };
    _0x47ba2a = new WeakMap();
    _0x24f954 = new WeakMap();
    _0x4714c2 = new WeakMap();
    _0x2bec62 = new WeakMap();
    _0xe1dd84 = new WeakMap();
    _0x1a5fa7 = new WeakMap();
    _0x1b319e = new WeakMap();
    _0xfa4f04 = new WeakMap();
    _0x2a3cb1 = new WeakMap();
    _0xc5c6e8 = new WeakMap();
    _0x3657ed = new WeakMap();
    _0x3febf3 = new WeakMap();
    _0x4f6557 = new WeakSet();
    _0x3c215a = function (_0x4d7559, _0x2a8d7a, _0x2acb12, _0x29b032, _0x9d4cfb) {
      const _0x1e8ca5 = {};
      for (let _0x495002 = 0; _0x495002 < _0x2a8d7a; _0x495002++) {
        _0x1e8ca5[_0x495002] = {};
        if (_0x9d4cfb) {
          continue;
        }
        for (let _0x2b875e = 0; _0x2b875e < _0x2a8d7a; _0x2b875e++) {
          const _0x235026 = _0x4c2785(this, _0x9f2350, _0x24a5ce).call(this, _0x495002, _0x2b875e, _0x2acb12, _0x29b032, _0x4d7559);
          if (!_0x235026) {
            continue;
          }
          _0x1e8ca5[_0x495002][_0x2b875e] = true;
        }
      }
      return _0x1e8ca5;
    };
    _0x2740e2 = new WeakSet();
    _0x3cbb42 = function (_0x34b686, _0x46e39c) {
      let _0x178d94 = 0;
      for (const _0x1a7ec6 in _0x34b686) {
        for (const _0x892674 in _0x34b686[_0x1a7ec6]) {
          _0x178d94 += _0x46e39c;
        }
      }
      return _0x178d94;
    };
    _0x34fe99 = new WeakSet();
    _0x1299e1 = function (_0x2a5ac8, _0x117c57, _0x13ebc5, _0x1e0c68) {
      const _0x1f8510 = [];
      const _0x5c2b6f = _0x2a5ac8 * _0x13ebc5 + _0x4af770(this, _0x2bec62).x;
      const _0x348581 = _0x117c57 * _0x1e0c68 + _0x4af770(this, _0x2bec62).y;
      _0x1f8510.push(new _0x3d13e4(_0x5c2b6f, _0x348581));
      _0x1f8510.push(new _0x3d13e4(_0x5c2b6f + _0x13ebc5, _0x348581));
      _0x1f8510.push(new _0x3d13e4(_0x5c2b6f + _0x13ebc5, _0x348581 + _0x1e0c68));
      _0x1f8510.push(new _0x3d13e4(_0x5c2b6f, _0x348581 + _0x1e0c68));
      return _0x1f8510;
    };
    _0x9f2350 = new WeakSet();
    _0x24a5ce = function (_0x1b9ad9, _0x3b244e, _0x3a2fc0, _0x51b74c, _0x523a0c) {
      const _0x42da86 = _0x4c2785(this, _0x34fe99, _0x1299e1).call(this, _0x1b9ad9, _0x3b244e, _0x3a2fc0, _0x51b74c);
      let _0x4877b0 = false;
      for (const _0x2a6438 of _0x42da86) {
        const _0xe0704d = _0x3ab810.MathUtils.windingNumber(_0x2a6438, _0x523a0c);
        if (_0xe0704d !== 0) {
          _0x4877b0 = true;
          break;
        }
      }
      if (!_0x4877b0) {
        return false;
      }
      for (let _0x495929 = 0; _0x495929 < _0x42da86.length; _0x495929++) {
        const _0x44b51d = _0x42da86[_0x495929];
        const _0x249e7b = _0x42da86[(_0x495929 + 1) % _0x42da86.length];
        for (let _0x5ecdf9 = 0; _0x5ecdf9 < _0x523a0c.length; _0x5ecdf9++) {
          const _0x2ffb61 = _0x523a0c[_0x5ecdf9];
          const _0x879c10 = _0x523a0c[(_0x5ecdf9 + 1) % _0x523a0c.length];
          if (_0x4c2785(this, _0x186669, _0x57c6f5).call(this, _0x44b51d, _0x249e7b, _0x2ffb61, _0x879c10)) {
            return false;
          }
        }
      }
      return true;
    };
    _0x186669 = new WeakSet();
    _0x57c6f5 = function (_0x164283, _0x2353a1, _0x5186a9, _0x47b9ea) {
      const _0x2f04cd = (_0x2353a1.x - _0x164283.x) * (_0x47b9ea.y - _0x5186a9.y) - (_0x2353a1.y - _0x164283.y) * (_0x47b9ea.x - _0x5186a9.x);
      const _0x28411f = (_0x164283.y - _0x5186a9.y) * (_0x47b9ea.x - _0x5186a9.x) - (_0x164283.x - _0x5186a9.x) * (_0x47b9ea.y - _0x5186a9.y);
      const _0xffb011 = (_0x164283.y - _0x5186a9.y) * (_0x2353a1.x - _0x164283.x) - (_0x164283.x - _0x5186a9.x) * (_0x2353a1.y - _0x164283.y);
      if (_0x2f04cd === 0) {
        return _0x28411f === 0 && _0xffb011 === 0;
      }
      const _0x5884f4 = _0x28411f / _0x2f04cd;
      const _0x639998 = _0xffb011 / _0x2f04cd;
      return _0x5884f4 >= 0 && _0x5884f4 <= 1 && _0x639998 >= 0 && _0x639998 <= 1;
    };
    var _0x56f3e0;
    var _0x578f21;
    var _0x25d41c;
    var _0x389ec3;
    var _0x10c6be;
    var _0x3faffe;
    var _0x17672e;
    var _0x5494ae;
    var _0x201225;
    var _0x949966;
    var _0xe290b;
    var _0x56a25d;
    var _0x202ea4;
    var _0x37b4c1;
    var _0x2636ea;
    var _0x236a7f;
    var _0x42921b;
    var _0x1b8e3a;
    var _0x4c6b75 = class {
      constructor(_0x21fec0, _0x59fd78 = {}, _0x13a2af = {}) {
        _0xf875d8(this, _0x201225);
        _0xf875d8(this, _0xe290b);
        _0xf875d8(this, _0x202ea4);
        _0xf875d8(this, _0x2636ea);
        _0xf875d8(this, _0x42921b);
        _0xf875d8(this, _0x56f3e0, undefined);
        _0xf875d8(this, _0x578f21, undefined);
        _0xf875d8(this, _0x25d41c, undefined);
        _0xf875d8(this, _0x389ec3, undefined);
        _0xf875d8(this, _0x10c6be, undefined);
        _0xf875d8(this, _0x3faffe, undefined);
        _0xf875d8(this, _0x17672e, undefined);
        _0xf875d8(this, _0x5494ae, undefined);
        _0x2399ff(this, _0x56f3e0, _0x3ab810.getUUID());
        _0x2399ff(this, _0x578f21, _0x21fec0);
        _0x2399ff(this, _0x25d41c, _0x4c2785(this, _0x201225, _0x949966).call(this, _0x21fec0));
        _0x2399ff(this, _0x389ec3, _0x4c2785(this, _0xe290b, _0x56a25d).call(this, _0x21fec0));
        _0x2399ff(this, _0x10c6be, _0x4c2785(this, _0x42921b, _0x1b8e3a).call(this, _0x21fec0));
        _0x2399ff(this, _0x3faffe, _0x4c2785(this, _0x2636ea, _0x236a7f).call(this, _0x4af770(this, _0x25d41c), _0x4af770(this, _0x389ec3)));
        _0x2399ff(this, _0x17672e, _0x4c2785(this, _0x202ea4, _0x37b4c1).call(this, _0x4af770(this, _0x25d41c), _0x4af770(this, _0x389ec3)));
        this.options = _0x59fd78;
        this.data = _0x13a2af;
        if (!this.options.useGrid && !this.options.useLazyGrid) {
          return;
        }
        _0x2399ff(this, _0x5494ae, new _0x4bda7f(_0x4af770(this, _0x578f21), _0x4af770(this, _0x25d41c), _0x4af770(this, _0x389ec3), _0x4af770(this, _0x3faffe), _0x4af770(this, _0x10c6be), _0x59fd78.gridCellSize, _0x59fd78.useLazyGrid));
      }
      get id() {
        return _0x4af770(this, _0x56f3e0);
      }
      get center() {
        return _0x4af770(this, _0x17672e);
      }
      get min() {
        return _0x4af770(this, _0x25d41c);
      }
      get max() {
        return _0x4af770(this, _0x389ec3);
      }
      get points() {
        return [..._0x4af770(this, _0x578f21)];
      }
      isPointInside(_0x5927ce) {
        if (_0x5927ce.x < _0x4af770(this, _0x25d41c).x || _0x5927ce.x > _0x4af770(this, _0x389ec3).x) {
          return false;
        } else if (_0x5927ce.y < _0x4af770(this, _0x25d41c).y || _0x5927ce.y > _0x4af770(this, _0x389ec3).y) {
          return false;
        }
        if ((this.options.minZ || this.options.maxZ) && _0x5927ce instanceof _0x36b213) {
          const _0x12c184 = this.options.minZ ?? -Infinity;
          const _0x2deb81 = this.options.maxZ ?? Infinity;
          if (_0x5927ce.z < _0x12c184 || _0x5927ce.z > _0x2deb81) {
            return false;
          }
        }
        if ((this.options.useGrid || this.options.useLazyGrid) && _0x4af770(this, _0x5494ae)) {
          return _0x4af770(this, _0x5494ae).isPointInsideGrid(_0x5927ce);
        }
        const _0x960fab = _0x3ab810.MathUtils.windingNumber(_0x5927ce, _0x4af770(this, _0x578f21));
        return _0x960fab !== 0;
      }
      addPoint(_0x1df3d6) {
        _0x4af770(this, _0x578f21).push(_0x1df3d6);
      }
      removePoint(_0x1fce15) {
        const _0x339999 = _0x4af770(this, _0x578f21).findIndex(_0x277c53 => _0x277c53.x === _0x1fce15.x && _0x277c53.y === _0x1fce15.y);
        if (_0x339999 === -1) {
          return;
        }
        _0x4af770(this, _0x578f21).splice(_0x339999, 1);
      }
      removeLastPoint() {
        _0x4af770(this, _0x578f21).pop();
      }
      recalculate() {
        _0x2399ff(this, _0x25d41c, _0x4c2785(this, _0x201225, _0x949966).call(this, _0x4af770(this, _0x578f21)));
        _0x2399ff(this, _0x389ec3, _0x4c2785(this, _0xe290b, _0x56a25d).call(this, _0x4af770(this, _0x578f21)));
        _0x2399ff(this, _0x10c6be, _0x4c2785(this, _0x42921b, _0x1b8e3a).call(this, _0x4af770(this, _0x578f21)));
        _0x2399ff(this, _0x3faffe, _0x4c2785(this, _0x2636ea, _0x236a7f).call(this, _0x4af770(this, _0x25d41c), _0x4af770(this, _0x389ec3)));
        _0x2399ff(this, _0x17672e, _0x4c2785(this, _0x202ea4, _0x37b4c1).call(this, _0x4af770(this, _0x25d41c), _0x4af770(this, _0x389ec3)));
        if (!this.options.useGrid) {
          return;
        }
        _0x2399ff(this, _0x5494ae, new _0x4bda7f(_0x4af770(this, _0x578f21), _0x4af770(this, _0x25d41c), _0x4af770(this, _0x389ec3), _0x4af770(this, _0x3faffe), _0x4af770(this, _0x10c6be), this.options.gridCellSize, this.options.useLazyGrid));
      }
    };
    _0x56f3e0 = new WeakMap();
    _0x578f21 = new WeakMap();
    _0x25d41c = new WeakMap();
    _0x389ec3 = new WeakMap();
    _0x10c6be = new WeakMap();
    _0x3faffe = new WeakMap();
    _0x17672e = new WeakMap();
    _0x5494ae = new WeakMap();
    _0x201225 = new WeakSet();
    _0x949966 = function (_0x201f04) {
      let _0x5a8a4c = Number.MAX_SAFE_INTEGER;
      let _0x429246 = Number.MAX_SAFE_INTEGER;
      for (const _0x48e08b of _0x201f04) {
        _0x5a8a4c = Math.min(_0x5a8a4c, _0x48e08b.x);
        _0x429246 = Math.min(_0x429246, _0x48e08b.y);
      }
      return new _0x3d13e4(_0x5a8a4c, _0x429246);
    };
    _0xe290b = new WeakSet();
    _0x56a25d = function (_0x3c9f32) {
      let _0x3fbe53 = Number.MIN_SAFE_INTEGER;
      let _0x1a45da = Number.MIN_SAFE_INTEGER;
      for (const _0x2bcdaa of _0x3c9f32) {
        _0x3fbe53 = Math.max(_0x3fbe53, _0x2bcdaa.x);
        _0x1a45da = Math.max(_0x1a45da, _0x2bcdaa.y);
      }
      return new _0x3d13e4(_0x3fbe53, _0x1a45da);
    };
    _0x202ea4 = new WeakSet();
    _0x37b4c1 = function (_0xb90bbc, _0x372bd5) {
      const _0x45fb6a = _0x372bd5.add(_0xb90bbc);
      return _0x45fb6a.divideScalar(2);
    };
    _0x2636ea = new WeakSet();
    _0x236a7f = function (_0x37377b, _0x285564) {
      return _0x285564.sub(_0x37377b);
    };
    _0x42921b = new WeakSet();
    _0x1b8e3a = function (_0x33baef) {
      let _0x2b03c5 = 0;
      for (let _0x5a557f = 0, _0x1cab52 = _0x33baef.length - 1; _0x5a557f < _0x33baef.length; _0x1cab52 = _0x5a557f++) {
        const _0xa619a3 = _0x33baef[_0x5a557f];
        const _0xf34590 = _0x33baef[_0x1cab52];
        _0x2b03c5 += _0xa619a3.x * _0xf34590.y;
        _0x2b03c5 -= _0xa619a3.y * _0xf34590.x;
      }
      return Math.abs(_0x2b03c5 / 2);
    };
    var _0x33b36;
    var _0x39ddb0;
    var _0x323473 = class _0x4d4112 {
      constructor(_0x4b3b3d, _0x1c5e12) {
        _0xf875d8(this, _0x33b36);
        const _0x4553f6 = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x4b3b3d, _0x1c5e12);
        this.x = _0x4553f6.x;
        this.y = _0x4553f6.y;
      }
      equals(_0x3ab5d4, _0x22631c) {
        const _0x5148bc = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x3ab5d4, _0x22631c);
        return this.x === _0x5148bc.x && this.y === _0x5148bc.y;
      }
      add(_0x1e8f7f, _0x2e5580, _0x3d18ef) {
        const _0xafa91c = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x1e8f7f, _0x2e5580);
        const _0x564d37 = this.x + (_0x3d18ef ? _0xafa91c.x * _0x3d18ef : _0xafa91c.x);
        const _0x616f = this.y + (_0x3d18ef ? _0xafa91c.y * _0x3d18ef : _0xafa91c.y);
        return new _0x4d4112(_0x564d37, _0x616f);
      }
      addScalar(_0x28a1e6) {
        if (typeof _0x28a1e6 !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x5d8346 = this.x + _0x28a1e6;
        const _0x357b66 = this.y + _0x28a1e6;
        return new _0x4d4112(_0x5d8346, _0x357b66);
      }
      sub(_0x12c15c, _0x2f83ee, _0x1d781b) {
        const _0x5cce39 = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x12c15c, _0x2f83ee);
        const _0x4a1390 = this.x - (_0x1d781b ? _0x5cce39.x * _0x1d781b : _0x5cce39.x);
        const _0x21dfda = this.y - (_0x1d781b ? _0x5cce39.y * _0x1d781b : _0x5cce39.y);
        return new _0x4d4112(_0x4a1390, _0x21dfda);
      }
      subScalar(_0x38a9fa) {
        if (typeof _0x38a9fa !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x4aa6d0 = this.x - _0x38a9fa;
        const _0x4c0d0b = this.y - _0x38a9fa;
        return new _0x4d4112(_0x4aa6d0, _0x4c0d0b);
      }
      multiply(_0x475478, _0x3d718d) {
        const _0x2e5e15 = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x475478, _0x3d718d);
        const _0x565320 = this.x * _0x2e5e15.x;
        const _0x5c8595 = this.y * _0x2e5e15.y;
        return new _0x4d4112(_0x565320, _0x5c8595);
      }
      multiplyScalar(_0x564e27) {
        if (typeof _0x564e27 !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x5a8d00 = this.x * _0x564e27;
        const _0x38a18d = this.y * _0x564e27;
        return new _0x4d4112(_0x5a8d00, _0x38a18d);
      }
      divide(_0x30fa84, _0x5bd18f) {
        const _0x4ec085 = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x30fa84, _0x5bd18f);
        const _0x378766 = this.x / _0x4ec085.x;
        const _0x2a37cc = this.y / _0x4ec085.y;
        return new _0x4d4112(_0x378766, _0x2a37cc);
      }
      divideScalar(_0xf68562) {
        if (typeof _0xf68562 !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x3acdf3 = this.x / _0xf68562;
        const _0x543da4 = this.y / _0xf68562;
        return new _0x4d4112(_0x3acdf3, _0x543da4);
      }
      round() {
        const _0x4f8e6f = Math.round(this.x);
        const _0x1f05b6 = Math.round(this.y);
        return new _0x4d4112(_0x4f8e6f, _0x1f05b6);
      }
      floor() {
        const _0x51654c = Math.floor(this.x);
        const _0x551955 = Math.floor(this.y);
        return new _0x4d4112(_0x51654c, _0x551955);
      }
      ceil() {
        const _0x2fa0d9 = Math.ceil(this.x);
        const _0xbbbc55 = Math.ceil(this.y);
        return new _0x4d4112(_0x2fa0d9, _0xbbbc55);
      }
      getCenter(_0x4af338, _0x2c7e35) {
        const _0x1ae2c1 = _0x4c2785(this, _0x33b36, _0x39ddb0).call(this, _0x4af338, _0x2c7e35);
        return new _0x4d4112((this.x + _0x1ae2c1.x) / 2, (this.y + _0x1ae2c1.y) / 2);
      }
      getDistance(_0x11107f, _0x56c92f) {
        const [_0x1639d4, _0x2b3b5c] = _0x11107f instanceof Array ? _0x11107f : typeof _0x11107f === "object" ? [_0x11107f.x, _0x11107f.y] : [_0x11107f, _0x56c92f];
        if (typeof _0x1639d4 !== "number" || typeof _0x2b3b5c !== "number") {
          throw new Error("Invalid vector coordinates");
        }
        const [_0x2fff70, _0x44c64e] = [this.x - _0x1639d4, this.y - _0x2b3b5c];
        return Math.sqrt(_0x2fff70 * _0x2fff70 + _0x44c64e * _0x44c64e);
      }
      toArray(_0x55a014) {
        if (typeof _0x55a014 === "number") {
          return [parseFloat(this.x.toFixed(_0x55a014)), parseFloat(this.y.toFixed(_0x55a014))];
        }
        return [this.x, this.y];
      }
      toJSON(_0x4b933a) {
        if (typeof _0x4b933a === "number") {
          return {
            x: parseFloat(this.x.toFixed(_0x4b933a)),
            y: parseFloat(this.y.toFixed(_0x4b933a))
          };
        }
        var _0x39dd7e = {
          x: this.x,
          y: this.y
        };
        return _0x39dd7e;
      }
      toString(_0x297486) {
        return JSON.stringify(this.toJSON(_0x297486));
      }
    };
    _0x33b36 = new WeakSet();
    _0x39ddb0 = function (_0x15c1e3, _0x3ec1e0) {
      let _0x20e598 = {
        x: 0,
        y: 0
      };
      if (_0x15c1e3 instanceof _0x323473 || _0x15c1e3 instanceof _0x36b213) {
        _0x20e598 = _0x15c1e3;
      } else if (_0x15c1e3 instanceof Array) {
        var _0x45efb2 = {
          x: _0x15c1e3[0],
          y: _0x15c1e3[1]
        };
        _0x20e598 = _0x45efb2;
      } else if (typeof _0x15c1e3 === "object") {
        _0x20e598 = _0x15c1e3;
      } else {
        var _0x37a046 = {
          x: _0x15c1e3,
          y: _0x3ec1e0
        };
        _0x20e598 = _0x37a046;
      }
      if (typeof _0x20e598.x !== "number" || typeof _0x20e598.y !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return _0x20e598;
    };
    var _0x3d13e4 = _0x323473;
    var _0x620022 = (_0x26b05c, _0x3b606e, _0x25d12f) => {
      return Math.min(Math.max(_0x26b05c, _0x3b606e), _0x25d12f);
    };
    var _0x887881 = (_0x5f17a6, _0x5df9dd, _0x5dfc5a) => {
      return _0x5df9dd[0] + (_0x5dfc5a - _0x5f17a6[0]) * (_0x5df9dd[1] - _0x5df9dd[0]) / (_0x5f17a6[1] - _0x5f17a6[0]);
    };
    var _0x127505 = ([_0x1450bb, _0x387a3b, _0xbb4843], [_0x251f46, _0x19ed30, _0x17388f]) => {
      const [_0x203c2b, _0x3a9757, _0x2641e8] = [_0x1450bb - _0x251f46, _0x387a3b - _0x19ed30, _0xbb4843 - _0x17388f];
      return Math.sqrt(_0x203c2b * _0x203c2b + _0x3a9757 * _0x3a9757 + _0x2641e8 * _0x2641e8);
    };
    var _0x186dea = (_0x4837b2, _0x4b20c8) => {
      if (_0x4b20c8) {
        return Math.floor(Math.random() * (_0x4b20c8 - _0x4837b2 + 1) + _0x4837b2);
      } else {
        return Math.floor(Math.random() * _0x4837b2);
      }
    };
    var _0x2847cd = (_0x3cc27f, _0x36bbd0) => {
      if (_0x3cc27f instanceof _0x3d13e4) {
        return _0x3cc27f;
      } else if (_0x3cc27f instanceof _0x36b213) {
        return new _0x3d13e4(_0x3cc27f);
      } else if (_0x3cc27f instanceof Array) {
        return new _0x3d13e4(_0x3cc27f);
      } else if (typeof _0x3cc27f === "object") {
        return new _0x3d13e4(_0x3cc27f);
      }
      if (typeof _0x3cc27f !== "number" || typeof _0x36bbd0 !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return new _0x3d13e4(_0x3cc27f, _0x36bbd0);
    };
    var _0x25f34f = (_0x21fed2, _0x390e40, _0x1e4b2d) => {
      if (_0x21fed2 instanceof _0x36b213) {
        return _0x21fed2;
      } else if (_0x21fed2 instanceof Array) {
        return new _0x36b213(_0x21fed2);
      } else if (typeof _0x21fed2 === "object") {
        return new _0x36b213(_0x21fed2);
      }
      if (typeof _0x21fed2 !== "number" || typeof _0x390e40 !== "number" || typeof _0x1e4b2d !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return new _0x36b213(_0x21fed2, _0x390e40, _0x1e4b2d);
    };
    var _0x9f9a54 = (_0x21dc59, _0xcdd7fd) => {
      let _0x17e3ad = 0;
      const _0x359cb5 = (_0x379db8, _0xdf160e, _0x25cabe) => {
        return (_0xdf160e.x - _0x379db8.x) * (_0x25cabe.y - _0x379db8.y) - (_0x25cabe.x - _0x379db8.x) * (_0xdf160e.y - _0x379db8.y);
      };
      for (let _0x33f272 = 0; _0x33f272 < _0xcdd7fd.length; _0x33f272++) {
        const _0x6411f1 = _0xcdd7fd[_0x33f272];
        const _0x566ba1 = _0xcdd7fd[(_0x33f272 + 1) % _0xcdd7fd.length];
        if (_0x6411f1.y <= _0x21dc59.y) {
          if (_0x566ba1.y > _0x21dc59.y && _0x359cb5(_0x6411f1, _0x566ba1, _0x21dc59) > 0) {
            _0x17e3ad++;
          }
        } else if (_0x566ba1.y <= _0x21dc59.y && _0x359cb5(_0x6411f1, _0x566ba1, _0x21dc59) < 0) {
          _0x17e3ad--;
        }
      }
      return _0x17e3ad;
    };
    var _0x16bf72 = {
      clamp: _0x620022,
      getMapRange: _0x887881,
      getDistance: _0x127505,
      getRandomNumber: _0x186dea,
      parseVector2: _0x2847cd,
      parseVector3: _0x25f34f,
      windingNumber: _0x9f9a54
    };
    var _0x381d98 = _0x16bf72;
    function _0x478dac(_0x17f244, _0x514df6) {
      const _0x477405 = "_";
      const _0x277916 = _0x44c3f1((_0x90c638, _0x4b1631, ..._0x56941f) => {
        return _0x17f244(_0x90c638, ..._0x56941f);
      }, _0x514df6);
      return {
        get: function (..._0x4c8dbc) {
          return _0x277916.get(_0x477405, ..._0x4c8dbc);
        },
        reset: function () {
          _0x277916.reset(_0x477405);
        }
      };
    }
    function _0x44c3f1(_0x246124, _0x540aed) {
      const _0x8d9dd2 = _0x540aed.timeToLive || 60000;
      const _0x27cc8b = {};
      async function _0x3ba5ce(_0x5b8d4e, ..._0x11b9a8) {
        let _0x4e8c57 = _0x27cc8b[_0x5b8d4e];
        if (!_0x4e8c57) {
          _0x4e8c57 = {
            value: null,
            lastUpdated: 0
          };
          _0x27cc8b[_0x5b8d4e] = _0x4e8c57;
        }
        const _0x5bf944 = Date.now();
        if (_0x4e8c57.lastUpdated === 0 || _0x5bf944 - _0x4e8c57.lastUpdated > _0x8d9dd2) {
          const [_0x42ffbf, _0x456556] = await _0x246124(_0x4e8c57, _0x5b8d4e, ..._0x11b9a8);
          if (_0x42ffbf) {
            _0x4e8c57.lastUpdated = _0x5bf944;
            _0x4e8c57.value = _0x456556;
          }
          return _0x456556;
        }
        return await new Promise(_0x4702b2 => setTimeout(() => _0x4702b2(_0x4e8c57.value), 0));
      }
      return {
        get: async function (_0x1ef4c5, ..._0x44c832) {
          return await _0x3ba5ce(_0x1ef4c5, ..._0x44c832);
        },
        reset: function (_0x1789ff) {
          const _0x27d370 = _0x27cc8b[_0x1789ff];
          if (_0x27d370) {
            _0x27d370.lastUpdated = 0;
          }
        }
      };
    }
    function _0x3db50d() {
      if (globalThis && typeof globalThis.crypto === "object") {
        return _0x53bb93();
      } else {
        return new _0xb1a23d(4).toString();
      }
    }
    function _0xe8a881(_0x590c64) {
      return _0x516194(_0x590c64, _0x516194.URL);
    }
    function _0x246d6e(_0x3f16bf, _0x476198) {
      return new Promise((_0x3df6f7, _0x22cfc8) => {
        const _0x1a2d75 = Date.now();
        const _0x3a9b09 = setInterval(() => {
          const _0x3b9b29 = Date.now() - _0x1a2d75 > _0x476198;
          if (_0x3f16bf() || _0x3b9b29) {
            clearInterval(_0x3a9b09);
            return _0x3df6f7(_0x3b9b29);
          }
        }, 1);
      });
    }
    function _0x1be336(_0x4bccf3) {
      return new Promise(_0x4f0413 => setTimeout(() => _0x4f0413(), _0x4bccf3));
    }
    function _0x1978be() {
      return _0x1be336(0);
    }
    var _0x1a8b3a = {
      cache: _0x478dac,
      cacheableMap: _0x44c3f1,
      waitForCondition: _0x246d6e,
      getUUID: _0x3db50d,
      getStringHash: _0xe8a881,
      wait: _0x1be336,
      waitForNextFrame: _0x1978be,
      deflate: _0x162728,
      inflate: _0x83249,
      ..._0x3c74ef
    };
    var _0x3ab810 = _0x1a8b3a;
    var _0x300e55 = (_0x1791ef => {
      _0x1791ef[_0x1791ef.hat = 0] = "hat";
      _0x1791ef[_0x1791ef.mask = 1] = "mask";
      _0x1791ef[_0x1791ef.glasses = 2] = "glasses";
      _0x1791ef[_0x1791ef.armor = 3] = "armor";
      _0x1791ef[_0x1791ef.shoes = 4] = "shoes";
      _0x1791ef[_0x1791ef.idcard = 5] = "idcard";
      _0x1791ef[_0x1791ef.mobilephone = 6] = "mobilephone";
      _0x1791ef[_0x1791ef.keyring = 7] = "keyring";
      _0x1791ef[_0x1791ef.bankcard = 8] = "bankcard";
      _0x1791ef[_0x1791ef.backpack = 9] = "backpack";
      return _0x1791ef;
    })(_0x300e55 || {});
    ;
    function _0x31ccfe(_0x1ceeef, _0x35df12) {
      if (_0x35df12 == null || _0x35df12 > _0x1ceeef.length) {
        _0x35df12 = _0x1ceeef.length;
      }
      for (var _0x3b92f4 = 0, _0x109a52 = new Array(_0x35df12); _0x3b92f4 < _0x35df12; _0x3b92f4++) {
        _0x109a52[_0x3b92f4] = _0x1ceeef[_0x3b92f4];
      }
      return _0x109a52;
    }
    function _0x1ea4c4(_0xefb842) {
      if (Array.isArray(_0xefb842)) {
        return _0xefb842;
      }
    }
    function _0x2f0431(_0x355bad, _0x1afce4, _0x2c8ee2, _0x2e8f8f, _0x1b3c9c, _0xb5d862, _0x33697d) {
      try {
        var _0x378843 = _0x355bad[_0xb5d862](_0x33697d);
        var _0x5e0664 = _0x378843.value;
      } catch (_0x2f368d) {
        _0x2c8ee2(_0x2f368d);
        return;
      }
      if (_0x378843.done) {
        _0x1afce4(_0x5e0664);
      } else {
        Promise.resolve(_0x5e0664).then(_0x2e8f8f, _0x1b3c9c);
      }
    }
    function _0x5afb78(_0x517d43) {
      return function () {
        var _0x250fba = this;
        var _0x454469 = arguments;
        return new Promise(function (_0x1865e7, _0x176bf0) {
          var _0x30d964 = _0x517d43.apply(_0x250fba, _0x454469);
          function _0x16cb15(_0x44529b) {
            _0x2f0431(_0x30d964, _0x1865e7, _0x176bf0, _0x16cb15, _0x415a5c, "next", _0x44529b);
          }
          function _0x415a5c(_0x4c65) {
            _0x2f0431(_0x30d964, _0x1865e7, _0x176bf0, _0x16cb15, _0x415a5c, "throw", _0x4c65);
          }
          _0x16cb15(undefined);
        });
      };
    }
    function _0x1f4ac5(_0x7be5d0, _0x3dcb78, _0x7304c9) {
      if (_0x3dcb78 in _0x7be5d0) {
        var _0x4e4321 = {
          value: _0x7304c9,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x7be5d0, _0x3dcb78, _0x4e4321);
      } else {
        _0x7be5d0[_0x3dcb78] = _0x7304c9;
      }
      return _0x7be5d0;
    }
    function _0xba30f3(_0x31d46d, _0xeac134) {
      var _0x30025f = _0x31d46d == null ? null : typeof Symbol !== "undefined" && _0x31d46d[Symbol.iterator] || _0x31d46d["@@iterator"];
      if (_0x30025f == null) {
        return;
      }
      var _0x42bb1f = [];
      var _0x174de1 = true;
      var _0x44ff8a = false;
      var _0x255819;
      var _0x29f49a;
      try {
        for (_0x30025f = _0x30025f.call(_0x31d46d); !(_0x174de1 = (_0x255819 = _0x30025f.next()).done); _0x174de1 = true) {
          _0x42bb1f.push(_0x255819.value);
          if (_0xeac134 && _0x42bb1f.length === _0xeac134) {
            break;
          }
        }
      } catch (_0xb544d) {
        _0x44ff8a = true;
        _0x29f49a = _0xb544d;
      } finally {
        try {
          if (!_0x174de1 && _0x30025f.return != null) {
            _0x30025f.return();
          }
        } finally {
          if (_0x44ff8a) {
            throw _0x29f49a;
          }
        }
      }
      return _0x42bb1f;
    }
    function _0x5cdef9() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x243978(_0x31e2ce) {
      for (var _0x368d46 = 1; _0x368d46 < arguments.length; _0x368d46++) {
        var _0x417266 = arguments[_0x368d46] ?? {};
        var _0x3800f7 = Object.keys(_0x417266);
        if (typeof Object.getOwnPropertySymbols === "function") {
          _0x3800f7 = _0x3800f7.concat(Object.getOwnPropertySymbols(_0x417266).filter(function (_0x7e2da1) {
            return Object.getOwnPropertyDescriptor(_0x417266, _0x7e2da1).enumerable;
          }));
        }
        _0x3800f7.forEach(function (_0x409db1) {
          _0x1f4ac5(_0x31e2ce, _0x409db1, _0x417266[_0x409db1]);
        });
      }
      return _0x31e2ce;
    }
    function _0x5afd60(_0x1517bc, _0x38b45f) {
      var _0x444d73 = Object.keys(_0x1517bc);
      if (Object.getOwnPropertySymbols) {
        var _0x4c2974 = Object.getOwnPropertySymbols(_0x1517bc);
        if (_0x38b45f) {
          _0x4c2974 = _0x4c2974.filter(function (_0x4b0457) {
            return Object.getOwnPropertyDescriptor(_0x1517bc, _0x4b0457).enumerable;
          });
        }
        _0x444d73.push.apply(_0x444d73, _0x4c2974);
      }
      return _0x444d73;
    }
    function _0xab8183(_0x1d81c1, _0x163054) {
      _0x163054 = _0x163054 ?? {};
      if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(_0x1d81c1, Object.getOwnPropertyDescriptors(_0x163054));
      } else {
        _0x5afd60(Object(_0x163054)).forEach(function (_0x21242a) {
          Object.defineProperty(_0x1d81c1, _0x21242a, Object.getOwnPropertyDescriptor(_0x163054, _0x21242a));
        });
      }
      return _0x1d81c1;
    }
    function _0x52487b(_0x347def, _0x13b43d) {
      return _0x1ea4c4(_0x347def) || _0xba30f3(_0x347def, _0x13b43d) || _0x1facce(_0x347def, _0x13b43d) || _0x5cdef9();
    }
    function _0x1facce(_0x3a3874, _0x20b03a) {
      if (!_0x3a3874) {
        return;
      }
      if (typeof _0x3a3874 === "string") {
        return _0x31ccfe(_0x3a3874, _0x20b03a);
      }
      var _0x3ec585 = Object.prototype.toString.call(_0x3a3874).slice(8, -1);
      if (_0x3ec585 === "Object" && _0x3a3874.constructor) {
        _0x3ec585 = _0x3a3874.constructor.name;
      }
      if (_0x3ec585 === "Map" || _0x3ec585 === "Set") {
        return Array.from(_0x3ec585);
      }
      if (_0x3ec585 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x3ec585)) {
        return _0x31ccfe(_0x3a3874, _0x20b03a);
      }
    }
    function _0x19ae1e(_0x5be15, _0x2d6570) {
      var _0x3d45bc;
      var _0x466007;
      var _0x1f1252;
      var _0x3010b9;
      var _0x92460e = {
        label: 0,
        sent: function () {
          if (_0x1f1252[0] & 1) {
            throw _0x1f1252[1];
          }
          return _0x1f1252[1];
        },
        trys: [],
        ops: []
      };
      _0x3010b9 = {
        next: _0x420aae(0),
        throw: _0x420aae(1),
        return: _0x420aae(2)
      };
      if (typeof Symbol === "function") {
        _0x3010b9[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3010b9;
      function _0x420aae(_0x115424) {
        return function (_0x10fb1b) {
          return _0x4c9977([_0x115424, _0x10fb1b]);
        };
      }
      function _0x4c9977(_0x16492a) {
        if (_0x3d45bc) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x92460e) {
          try {
            _0x3d45bc = 1;
            if (_0x466007 && (_0x1f1252 = _0x16492a[0] & 2 ? _0x466007.return : _0x16492a[0] ? _0x466007.throw || ((_0x1f1252 = _0x466007.return) && _0x1f1252.call(_0x466007), 0) : _0x466007.next) && !(_0x1f1252 = _0x1f1252.call(_0x466007, _0x16492a[1])).done) {
              return _0x1f1252;
            }
            _0x466007 = 0;
            if (_0x1f1252) {
              _0x16492a = [_0x16492a[0] & 2, _0x1f1252.value];
            }
            switch (_0x16492a[0]) {
              case 0:
              case 1:
                _0x1f1252 = _0x16492a;
                break;
              case 4:
                _0x92460e.label++;
                var _0x237a8f = {
                  value: _0x16492a[1],
                  done: false
                };
                return _0x237a8f;
              case 5:
                _0x92460e.label++;
                _0x466007 = _0x16492a[1];
                _0x16492a = [0];
                continue;
              case 7:
                _0x16492a = _0x92460e.ops.pop();
                _0x92460e.trys.pop();
                continue;
              default:
                if (!(_0x1f1252 = _0x92460e.trys, _0x1f1252 = _0x1f1252.length > 0 && _0x1f1252[_0x1f1252.length - 1]) && (_0x16492a[0] === 6 || _0x16492a[0] === 2)) {
                  _0x92460e = 0;
                  continue;
                }
                if (_0x16492a[0] === 3 && (!_0x1f1252 || _0x16492a[1] > _0x1f1252[0] && _0x16492a[1] < _0x1f1252[3])) {
                  _0x92460e.label = _0x16492a[1];
                  break;
                }
                if (_0x16492a[0] === 6 && _0x92460e.label < _0x1f1252[1]) {
                  _0x92460e.label = _0x1f1252[1];
                  _0x1f1252 = _0x16492a;
                  break;
                }
                if (_0x1f1252 && _0x92460e.label < _0x1f1252[2]) {
                  _0x92460e.label = _0x1f1252[2];
                  _0x92460e.ops.push(_0x16492a);
                  break;
                }
                if (_0x1f1252[2]) {
                  _0x92460e.ops.pop();
                }
                _0x92460e.trys.pop();
                continue;
            }
            _0x16492a = _0x2d6570.call(_0x5be15, _0x92460e);
          } catch (_0x2b8f08) {
            _0x16492a = [6, _0x2b8f08];
            _0x466007 = 0;
          } finally {
            _0x3d45bc = _0x1f1252 = 0;
          }
        }
        if (_0x16492a[0] & 5) {
          throw _0x16492a[1];
        }
        var _0x6856dd = {
          value: _0x16492a[0] ? _0x16492a[1] : undefined,
          done: true
        };
        return _0x6856dd;
      }
    }
    function _0x21aea1(_0xea4c08) {
      if (IsWaypointActive()) {
        DeleteWaypoint();
      }
      SetNewWaypoint(_0xea4c08.x, _0xea4c08.y);
    }
    function _0x59e02a(_0x1d4d86, _0x259d8b, _0x22e2f6) {
      var _0x3d9bb2 = _0x52487b(GetScreenCoordFromWorldCoord(_0x1d4d86.x + _0x22e2f6.x, _0x1d4d86.y + _0x22e2f6.y, _0x1d4d86.z + _0x22e2f6.z), 3);
      var _0x33ce10 = _0x3d9bb2[0];
      var _0x2228d7 = _0x3d9bb2[1];
      var _0x520f80 = _0x3d9bb2[2];
      if (_0x33ce10) {
        SetTextScale(0.35, 0.35);
        SetTextFont(4);
        SetTextProportional(true);
        SetTextColour(255, 255, 255, 215);
        SetTextEntry("STRING");
        SetTextCentre(true);
        AddTextComponentString(_0x259d8b);
        DrawText(_0x2228d7, _0x520f80);
        DrawRect(_0x2228d7, _0x520f80 + 0.0125, 0.015 + _0x259d8b.length / 370, 0.03, 41, 11, 41, 68);
      }
    }
    function _0x4d8d60(_0x1c20b4, _0x41b193, _0xe46157, _0x2374dc, _0x3cd923) {
      DrawMarker(_0x41b193, _0x1c20b4.x + _0x2374dc.x, _0x1c20b4.y + _0x2374dc.y, _0x1c20b4.z + _0x2374dc.z, 0, 0, 0, 0, 0, 0, _0xe46157, _0xe46157, _0xe46157, _0x3cd923.r, _0x3cd923.g, _0x3cd923.b, _0x3cd923.a, false, true, 2, false, null, null, null);
    }
    function _0x1002f4(_0x17cbbc, _0x5c6838) {
      return _0x17cbbc | Math.floor(_0x5c6838[0]) * Math.floor(_0x5c6838[1]) << 8;
    }
    function _0x475e50(_0x3defa5) {
      var _0x2dad71 = Math.floor(_0x3defa5.x);
      var _0x118c54 = Math.floor(_0x3defa5.y);
      var _0x34d2c9 = Math.floor(_0x3defa5.z);
      return _0x3ab810.getStringHash(`${_0x2dad71}${_0x118c54}${_0x34d2c9}`);
    }
    function _0x5803d8(_0x55fea0) {
      var _0x1ac25d = GetEntityCoords(_0x55fea0, false);
      return _0x475e50(new _0x36b213(_0x1ac25d));
    }
    function _0x428cf5(_0xecfd04) {
      return _0xdca2f3.apply(this, arguments);
    }
    function _0xdca2f3() {
      _0xdca2f3 = _0x5afb78(function (_0x5a3471) {
        return _0x19ae1e(this, function (_0x255842) {
          switch (_0x255842.label) {
            case 0:
              if (!!HasAnimDictLoaded(_0x5a3471)) {
                return [3, 3];
              }
              RequestAnimDict(_0x5a3471);
              _0x255842.label = 1;
            case 1:
              if (!!HasAnimDictLoaded(_0x5a3471)) {
                return [3, 3];
              }
              return [4, Wait(10)];
            case 2:
              _0x255842.sent();
              return [3, 1];
            case 3:
              return [2];
          }
        });
      });
      return _0xdca2f3.apply(this, arguments);
    }
    function _0x2657e4(_0x2d0b7f, _0x51f07f = "", _0x27c005 = 100) {
      var _0x226e94 = GetCurrentResourceName();
      AddTextEntry(`${_0x226e94.toUpperCase()}_WINDOW_TITLE`, `${_0x2d0b7f || "Enter"}: MAX ${_0x27c005} Characters`);
      DisplayOnscreenKeyboard(1, `${_0x226e94.toUpperCase()}_WINDOW_TITLE`, "", _0x51f07f, "", "", "", _0x27c005);
      return new Promise(function (_0x5beeb5) {
        var _0x2f8482 = setTick(function () {
          var _0x2b3d14 = UpdateOnscreenKeyboard();
          switch (_0x2b3d14) {
            case 3:
              {
                return clearTick(_0x2f8482);
              }
            case 2:
              {
                return clearTick(_0x2f8482);
              }
            case 1:
              {
                return _0x5beeb5(GetOnscreenKeyboardResult());
              }
            default:
              break;
          }
        });
      });
    }
    function _0x54cb5f(_0x2d7de3, _0x3e72cd, _0x5696e9, _0x5184cc) {
      return new Promise(function (_0x1dc7ed) {
        exports["np-phone"].DoPhoneConfirmation(_0x2d7de3, _0x3e72cd, _0x5696e9, _0x1dc7ed, _0x5184cc);
      });
    }
    function _0x2d0ffd(_0x12afd6, _0x5b82d3, _0x5bbe57 = true, _0x544ab5 = "home-screen") {
      var _0xbc2b7e = {
        action: "notification",
        target_app: _0x544ab5,
        title: _0x12afd6,
        body: _0x5b82d3,
        show_even_if_app_active: _0x5bbe57
      };
      var _0x26627a = {
        source: "np-nui",
        app: "phone",
        data: _0xbc2b7e
      };
      SendUIMessage(_0x26627a);
    }
    function _0x563352(_0x37a5a8) {
      return _0x46c9e0.apply(this, arguments);
    }
    function _0x46c9e0() {
      _0x46c9e0 = _0x5afb78(function (_0x71b2ab) {
        var _0x101670;
        return _0x19ae1e(this, function (_0x25534c) {
          switch (_0x25534c.label) {
            case 0:
              if (!!HasAnimDictLoaded(_0x71b2ab)) {
                return [3, 3];
              }
              RequestAnimDict(_0x71b2ab);
              _0x101670 = false;
              setTimeout(function () {
                return _0x101670 = true;
              }, 60000);
              _0x25534c.label = 1;
            case 1:
              if (!!HasAnimDictLoaded(_0x71b2ab) || !!_0x101670) {
                return [3, 3];
              }
              return [4, Wait(10)];
            case 2:
              _0x25534c.sent();
              return [3, 1];
            case 3:
              return [2];
          }
        });
      });
      return _0x46c9e0.apply(this, arguments);
    }
    function _0x668078(_0xdbf23a, _0x329dee, _0x4481f7 = false) {
      return new Promise(function (_0x672e5e) {
        exports["np-taskbar"].taskBar(_0xdbf23a, _0x329dee, _0x4481f7, true, null, false, _0x672e5e);
      });
    }
    function _0x388d20(_0x119852, _0x1e32a1) {
      return new Promise(function (_0x4730a5) {
        exports.skillchecks.taskBarSkill(_0x119852, _0x1e32a1, _0x4730a5);
      });
    }
    function _0x3b0911(_0x44d566, _0x1b80d8 = {}, _0x5c1922 = {}) {
      var _0x30fc1e = _0xab8183(_0x243978({}, _0x1b80d8, _0x5c1922), {
        _hideKeys: Object.keys(_0x5c1922)
      });
      emit("player:receiveItem", _0x44d566, 1, false, {}, JSON.stringify(_0x30fc1e));
    }
    function _0xeb8878(_0xa59efb) {
      if (_0xa59efb.length < 1) {
        return false;
      }
      var _0x44f1d1 = exports.isPed.isPed("cid");
      var _0x223094 = true;
      var _0x28ada0 = false;
      var _0x54323a = undefined;
      try {
        for (var _0x44dd89 = _0xa59efb[Symbol.iterator](), _0x227c05; !(_0x223094 = (_0x227c05 = _0x44dd89.next()).done); _0x223094 = true) {
          var _0x442012 = _0x227c05.value;
          var _0x5a7cc0 = JSON.parse(_0x442012.information);
          if (_0x5a7cc0.characterId === _0x44f1d1) {
            return true;
          }
        }
      } catch (_0x196402) {
        _0x28ada0 = true;
        _0x54323a = _0x196402;
      } finally {
        try {
          if (!_0x223094 && _0x44dd89.return != null) {
            _0x44dd89.return();
          }
        } finally {
          if (_0x28ada0) {
            throw _0x54323a;
          }
        }
      }
      return false;
    }
    ;
    function _0x115d17(_0x9cc461, _0x4de07b) {
      if (!(_0x9cc461 instanceof _0x4de07b)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x14a940(_0x3059df, _0xbe13b5) {
      for (var _0x5ae873 = 0; _0x5ae873 < _0xbe13b5.length; _0x5ae873++) {
        var _0x4f2ca0 = _0xbe13b5[_0x5ae873];
        _0x4f2ca0.enumerable = _0x4f2ca0.enumerable || false;
        _0x4f2ca0.configurable = true;
        if ("value" in _0x4f2ca0) {
          _0x4f2ca0.writable = true;
        }
        Object.defineProperty(_0x3059df, _0x4f2ca0.key, _0x4f2ca0);
      }
    }
    function _0x3039fd(_0x363fba, _0xb0c0c2, _0x3e9dd9) {
      if (_0xb0c0c2) {
        _0x14a940(_0x363fba.prototype, _0xb0c0c2);
      }
      if (_0x3e9dd9) {
        _0x14a940(_0x363fba, _0x3e9dd9);
      }
      return _0x363fba;
    }
    function _0x2aa6a4(_0x20ccaa, _0x14d239, _0x47625b) {
      if (_0x14d239 in _0x20ccaa) {
        var _0x1432c2 = {
          value: _0x47625b,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x20ccaa, _0x14d239, _0x1432c2);
      } else {
        _0x20ccaa[_0x14d239] = _0x47625b;
      }
      return _0x20ccaa;
    }
    var _0x1f4826 = function () {
      'use strict';

      function _0x5ef7bf(_0x48eb94 = 0, _0x743ab5 = 0, _0x556dd4 = 0) {
        _0x115d17(this, _0x5ef7bf);
        _0x2aa6a4(this, "x", undefined);
        _0x2aa6a4(this, "y", undefined);
        _0x2aa6a4(this, "z", undefined);
        this.x = _0x48eb94;
        this.y = _0x743ab5;
        this.z = _0x556dd4;
      }
      var _0x37f5f3 = {
        key: "setFromArray",
        value: function _0x3b41f2(_0x4971c1) {
          this.x = _0x4971c1[0];
          this.y = _0x4971c1[1];
          this.z = _0x4971c1[2];
          return this;
        }
      };
      _0x3039fd(_0x5ef7bf, [_0x37f5f3, {
        key: "getArray",
        value: function _0x1f0dee() {
          return [this.x, this.y, this.z];
        }
      }, {
        key: "add",
        value: function _0x55c806(_0x3e098f) {
          this.x += _0x3e098f.x;
          this.y += _0x3e098f.y;
          this.z += _0x3e098f.z;
          return this;
        }
      }, {
        key: "addScalar",
        value: function _0x150f38(_0x48a978) {
          this.x += _0x48a978;
          this.y += _0x48a978;
          this.z += _0x48a978;
          return this;
        }
      }, {
        key: "sub",
        value: function _0x265ecd(_0x1e2edd) {
          this.x -= _0x1e2edd.x;
          this.y -= _0x1e2edd.y;
          this.z -= _0x1e2edd.z;
          return this;
        }
      }, {
        key: "equals",
        value: function _0x45281d(_0x4696cf) {
          return this.x === _0x4696cf.x && this.y === _0x4696cf.y && this.z === _0x4696cf.z;
        }
      }, {
        key: "subScalar",
        value: function _0x39ad90(_0x3e66eb) {
          this.x -= _0x3e66eb;
          this.y -= _0x3e66eb;
          this.z -= _0x3e66eb;
          return this;
        }
      }, {
        key: "round",
        value: function _0x5d6037() {
          this.x = Math.round(this.x);
          this.y = Math.round(this.y);
          this.z = Math.round(this.z);
          return this;
        }
      }, {
        key: "floor",
        value: function _0x5f74bb() {
          this.x = Math.floor(this.x);
          this.y = Math.floor(this.y);
          this.z = Math.floor(this.z);
          return this;
        }
      }, {
        key: "ceil",
        value: function _0x3d2417() {
          this.x = Math.ceil(this.x);
          this.y = Math.ceil(this.y);
          this.z = Math.ceil(this.z);
          return this;
        }
      }, {
        key: "getDistance",
        value: function _0x37bc75(_0x435b4f) {
          var _0x4b7fce = [this.x - _0x435b4f.x, this.y - _0x435b4f.y, this.z - _0x435b4f.z];
          var _0x3257ef = _0x4b7fce[0];
          var _0x1c79c3 = _0x4b7fce[1];
          var _0x55fb44 = _0x4b7fce[2];
          return Math.sqrt(_0x3257ef * _0x3257ef + _0x1c79c3 * _0x1c79c3 + _0x55fb44 * _0x55fb44);
        }
      }, {
        key: "getDistanceFromArray",
        value: function _0x5e5e39(_0x4f68a3) {
          var _0x1aa587 = [this.x - _0x4f68a3[0], this.y - _0x4f68a3[1], this.z - _0x4f68a3[2]];
          var _0x3685b1 = _0x1aa587[0];
          var _0x4afd2a = _0x1aa587[1];
          var _0x5574b7 = _0x1aa587[2];
          return Math.sqrt(_0x3685b1 * _0x3685b1 + _0x4afd2a * _0x4afd2a + _0x5574b7 * _0x5574b7);
        }
      }], [{
        key: "fromArray",
        value: function _0x3f0eaa(_0x259e09) {
          return new _0x5ef7bf(_0x259e09[0], _0x259e09[1], _0x259e09[2]);
        }
      }, {
        key: "fromObject",
        value: function _0x4804e0(_0x2418cb) {
          return new _0x5ef7bf(_0x2418cb.x, _0x2418cb.y, _0x2418cb.z);
        }
      }]);
      return _0x5ef7bf;
    }();
    ;
    function _0xffc2ae(_0x26733d, _0xbedb93, _0x430c6b, _0x3eacbb, _0x3ca108, _0x2606d9, _0x295b76) {
      try {
        var _0x22064f = _0x26733d[_0x2606d9](_0x295b76);
        var _0x4d84bf = _0x22064f.value;
      } catch (_0x372e91) {
        _0x430c6b(_0x372e91);
        return;
      }
      if (_0x22064f.done) {
        _0xbedb93(_0x4d84bf);
      } else {
        Promise.resolve(_0x4d84bf).then(_0x3eacbb, _0x3ca108);
      }
    }
    function _0x5029ab(_0x1e3bdc) {
      return function () {
        var _0x390e47 = this;
        var _0x3d82b4 = arguments;
        return new Promise(function (_0x1cd52c, _0x3eb7d8) {
          var _0x5f2734 = _0x1e3bdc.apply(_0x390e47, _0x3d82b4);
          function _0x323ee8(_0xb4c45f) {
            _0xffc2ae(_0x5f2734, _0x1cd52c, _0x3eb7d8, _0x323ee8, _0x23a46f, "next", _0xb4c45f);
          }
          function _0x23a46f(_0x5029d3) {
            _0xffc2ae(_0x5f2734, _0x1cd52c, _0x3eb7d8, _0x323ee8, _0x23a46f, "throw", _0x5029d3);
          }
          _0x323ee8(undefined);
        });
      };
    }
    function _0x15f9a9(_0x33602d, _0x5e3b5c) {
      var _0x164e0f;
      var _0x16ab49;
      var _0xd88d28;
      var _0x31d4b5;
      var _0x5d2c33 = {
        label: 0,
        sent: function () {
          if (_0xd88d28[0] & 1) {
            throw _0xd88d28[1];
          }
          return _0xd88d28[1];
        },
        trys: [],
        ops: []
      };
      _0x31d4b5 = {
        next: _0x1eebfd(0),
        throw: _0x1eebfd(1),
        return: _0x1eebfd(2)
      };
      if (typeof Symbol === "function") {
        _0x31d4b5[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x31d4b5;
      function _0x1eebfd(_0x5da65a) {
        return function (_0x4e4d77) {
          return _0x4e947b([_0x5da65a, _0x4e4d77]);
        };
      }
      function _0x4e947b(_0x52f8b2) {
        if (_0x164e0f) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5d2c33) {
          try {
            _0x164e0f = 1;
            if (_0x16ab49 && (_0xd88d28 = _0x52f8b2[0] & 2 ? _0x16ab49.return : _0x52f8b2[0] ? _0x16ab49.throw || ((_0xd88d28 = _0x16ab49.return) && _0xd88d28.call(_0x16ab49), 0) : _0x16ab49.next) && !(_0xd88d28 = _0xd88d28.call(_0x16ab49, _0x52f8b2[1])).done) {
              return _0xd88d28;
            }
            _0x16ab49 = 0;
            if (_0xd88d28) {
              _0x52f8b2 = [_0x52f8b2[0] & 2, _0xd88d28.value];
            }
            switch (_0x52f8b2[0]) {
              case 0:
              case 1:
                _0xd88d28 = _0x52f8b2;
                break;
              case 4:
                _0x5d2c33.label++;
                var _0x4df0f7 = {
                  value: _0x52f8b2[1],
                  done: false
                };
                return _0x4df0f7;
              case 5:
                _0x5d2c33.label++;
                _0x16ab49 = _0x52f8b2[1];
                _0x52f8b2 = [0];
                continue;
              case 7:
                _0x52f8b2 = _0x5d2c33.ops.pop();
                _0x5d2c33.trys.pop();
                continue;
              default:
                if (!(_0xd88d28 = _0x5d2c33.trys, _0xd88d28 = _0xd88d28.length > 0 && _0xd88d28[_0xd88d28.length - 1]) && (_0x52f8b2[0] === 6 || _0x52f8b2[0] === 2)) {
                  _0x5d2c33 = 0;
                  continue;
                }
                if (_0x52f8b2[0] === 3 && (!_0xd88d28 || _0x52f8b2[1] > _0xd88d28[0] && _0x52f8b2[1] < _0xd88d28[3])) {
                  _0x5d2c33.label = _0x52f8b2[1];
                  break;
                }
                if (_0x52f8b2[0] === 6 && _0x5d2c33.label < _0xd88d28[1]) {
                  _0x5d2c33.label = _0xd88d28[1];
                  _0xd88d28 = _0x52f8b2;
                  break;
                }
                if (_0xd88d28 && _0x5d2c33.label < _0xd88d28[2]) {
                  _0x5d2c33.label = _0xd88d28[2];
                  _0x5d2c33.ops.push(_0x52f8b2);
                  break;
                }
                if (_0xd88d28[2]) {
                  _0x5d2c33.ops.pop();
                }
                _0x5d2c33.trys.pop();
                continue;
            }
            _0x52f8b2 = _0x5e3b5c.call(_0x33602d, _0x5d2c33);
          } catch (_0x511aa7) {
            _0x52f8b2 = [6, _0x511aa7];
            _0x16ab49 = 0;
          } finally {
            _0x164e0f = _0xd88d28 = 0;
          }
        }
        if (_0x52f8b2[0] & 5) {
          throw _0x52f8b2[1];
        }
        var _0x3f1fca = {
          value: _0x52f8b2[0] ? _0x52f8b2[1] : undefined,
          done: true
        };
        return _0x3f1fca;
      }
    }
    function _0x49f07c() {
      return _0x1a0c74.apply(this, arguments);
    }
    function _0x1a0c74() {
      _0x1a0c74 = _0x5029ab(function () {
        return _0x15f9a9(this, function (_0x1f2f79) {
          _0x4995a5("towing", ["job_towing"]);
          _0x4995a5("lumberjack", ["job_lumberjack"]);
          _0x4995a5("news", ["job_news"]);
          _0x4995a5("hunting", ["job_hunting"]);
          return [2];
        });
      });
      return _0x1a0c74.apply(this, arguments);
    }
    var _0x599355 = new Map();
    function _0x13a1d8(_0x4d9221) {
      if (!_0x599355.has(_0x4d9221)) {
        _0x599355.set(_0x4d9221, new Set());
      }
      _0x599355.get(_0x4d9221);
    }
    function _0x4995a5(_0x35b8a4, _0x59ab7a) {
      _0x599355.set(_0x35b8a4, new Set(_0x59ab7a));
    }
    function _0x25eb34(_0xa0a4a9, _0x190789) {
      if (!_0x599355.has(_0xa0a4a9)) {
        _0x599355.set(_0xa0a4a9, new Set());
      }
      return _0x599355.get(_0xa0a4a9).add(_0x190789);
    }
    function _0xca0856(_0x2e742b, _0x148237) {
      _0x599355.get(_0x2e742b).delete(_0x148237);
    }
    function _0x3fcd63(_0x269e92, _0x5b7b7c) {
      var _0x417722 = _0x599355.get(_0x269e92);
      if (!_0x417722) {
        return false;
      }
      return _0x417722.has(_0x5b7b7c);
    }
    globalThis.exports("IsJobGarage", _0x3fcd63);
    function _0x3c1ed0(_0x41a551, _0x104e7c) {
      return _0x3fcd63(_0x41a551, _0x104e7c);
    }
    ;
    var _0x4ed76a;
    function _0x1e2268(_0x3de122) {
      RPC.execute("np:jobs:checkIn", _0x3de122).then(function (_0x58877e) {
        var _0x449f93;
        _0x4ed76a = ((_0x449f93 = _0x58877e) === null || _0x449f93 === undefined ? undefined : _0x449f93.job?.id) ?? "unemployed";
        emit("np-jobs:jobChanged", _0x4ed76a);
        var _0x191894 = {
          action: "jobs-update",
          state: _0x58877e
        };
        var _0x330900 = {
          source: "np-nui",
          app: "phone",
          data: _0x191894
        };
        _0x1a6d35(_0x330900);
        if (!_0x58877e?.job) {
          return;
        }
        emit("np-ui:jobs:sendNotification", "Job Center", "Checked In as a " + _0x58877e.job.name, true);
      });
    }
    globalThis.exports("JobCheckIn", _0x1e2268);
    on("np-jobs:signIn", function (_0x4e138a) {
      _0x1e2268(_0x4e138a.jobId);
    });
    function _0x7cfbee() {
      RPC.execute("np:jobs:checkOut").then(function (_0x36178a) {
        _0x4ed76a = "unemployed";
        emit("np-jobs:jobChanged", _0x4ed76a);
        var _0x3177b0 = {
          action: "jobs-update",
          state: _0x36178a
        };
        var _0x479747 = {
          source: "np-nui",
          app: "phone",
          data: _0x3177b0
        };
        _0x1a6d35(_0x479747);
      });
    }
    globalThis.exports("JobCheckOut", _0x7cfbee);
    on("np-jobs:signOut", function () {
      return _0x7cfbee();
    });
    function _0x56b6ba() {
      return _0x4ed76a;
    }
    globalThis.exports("GetPlayerJob", _0x56b6ba);
    function _0x16cde5(_0x492b2e) {
      return _0x4ed76a === _0x492b2e;
    }
    globalThis.exports("IsJobEmployee", _0x16cde5);
    function _0x2b8b17(_0x339ac5) {
      RPC.execute("np:jobs:getPayCheck", _0x339ac5);
    }
    globalThis.exports("GetPayCheck", _0x2b8b17);
    function _0x518037(_0x4cb10c) {
      return _0x2cb3b7("progression")?.[`job:${_0x4cb10c}`] === true;
    }
    globalThis.exports("IsJobProgressionEnabled", _0x518037);
    function _0x6a8de4(_0x341b85) {
      return exports["np-progression"].GetProgression(`jobs:${_0x341b85}`) || 0;
    }
    globalThis.exports("GetJobProgression", _0x6a8de4);
    function _0x249f2b() {
      console.log("Jobs Loaded");
      RPC.execute("np:jobs:getNPCs").then(function (_0xf3cc41) {
        emit("np:jobs:createNPCs", _0xf3cc41);
      });
    }
    AddEventHandler("jobs:checkIn", function (_0x36f006, _0x48af1a, _0x198bb5) {
      if (_0x48af1a && _0x198bb5.job) {
        _0x1e2268(_0x198bb5.job.id);
      }
    });
    AddEventHandler("jobs:checkOut", function (_0x12721e, _0x4e4ba0, _0x2ab6a1) {
      if (_0x4e4ba0 && _0x2ab6a1.job) {
        _0x7cfbee();
      }
    });
    AddEventHandler("jobs:getPaycheck", function (_0x184ecd, _0xc2fc75, _0x2e67de) {
      if (_0xc2fc75 && _0x2e67de.job) {
        _0x2b8b17(_0x2e67de.job);
      }
    });
    on("np:vehicles:hasJobGarageAccess", function (_0x3e34f3, _0x1b05b5) {
      _0x1b05b5(_0x3c1ed0(_0x4ed76a, _0x3e34f3));
    });
    ;
    function _0x21d056(_0x54d38c, _0x5c462e) {
      if (_0x5c462e == null || _0x5c462e > _0x54d38c.length) {
        _0x5c462e = _0x54d38c.length;
      }
      for (var _0x1ed94d = 0, _0xb3acc5 = new Array(_0x5c462e); _0x1ed94d < _0x5c462e; _0x1ed94d++) {
        _0xb3acc5[_0x1ed94d] = _0x54d38c[_0x1ed94d];
      }
      return _0xb3acc5;
    }
    function _0x5f4ca6(_0x343b1d) {
      if (Array.isArray(_0x343b1d)) {
        return _0x343b1d;
      }
    }
    function _0x266ea9(_0x31db5c, _0x29e75f, _0x538376, _0x16cc35, _0x3012dc, _0x102039, _0xf49516) {
      try {
        var _0x196ed0 = _0x31db5c[_0x102039](_0xf49516);
        var _0xb783f = _0x196ed0.value;
      } catch (_0x24cd02) {
        _0x538376(_0x24cd02);
        return;
      }
      if (_0x196ed0.done) {
        _0x29e75f(_0xb783f);
      } else {
        Promise.resolve(_0xb783f).then(_0x16cc35, _0x3012dc);
      }
    }
    function _0x3dd8fb(_0x25c9eb) {
      return function () {
        var _0x5ac802 = this;
        var _0x5e364a = arguments;
        return new Promise(function (_0x490882, _0x54f6d8) {
          var _0x2eb609 = _0x25c9eb.apply(_0x5ac802, _0x5e364a);
          function _0x1797b4(_0x237b9b) {
            _0x266ea9(_0x2eb609, _0x490882, _0x54f6d8, _0x1797b4, _0x534e63, "next", _0x237b9b);
          }
          function _0x534e63(_0x1485b1) {
            _0x266ea9(_0x2eb609, _0x490882, _0x54f6d8, _0x1797b4, _0x534e63, "throw", _0x1485b1);
          }
          _0x1797b4(undefined);
        });
      };
    }
    function _0x49470e(_0x4b7b1c, _0x2adf4d) {
      var _0x1ae0ab = _0x4b7b1c == null ? null : typeof Symbol !== "undefined" && _0x4b7b1c[Symbol.iterator] || _0x4b7b1c["@@iterator"];
      if (_0x1ae0ab == null) {
        return;
      }
      var _0x5839c4 = [];
      var _0x555424 = true;
      var _0x302913 = false;
      var _0x596df5;
      var _0x3db5eb;
      try {
        for (_0x1ae0ab = _0x1ae0ab.call(_0x4b7b1c); !(_0x555424 = (_0x596df5 = _0x1ae0ab.next()).done); _0x555424 = true) {
          _0x5839c4.push(_0x596df5.value);
          if (_0x2adf4d && _0x5839c4.length === _0x2adf4d) {
            break;
          }
        }
      } catch (_0x18704d) {
        _0x302913 = true;
        _0x3db5eb = _0x18704d;
      } finally {
        try {
          if (!_0x555424 && _0x1ae0ab.return != null) {
            _0x1ae0ab.return();
          }
        } finally {
          if (_0x302913) {
            throw _0x3db5eb;
          }
        }
      }
      return _0x5839c4;
    }
    function _0x4dfe46() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x21ae79(_0x42be05, _0x450e94) {
      return _0x5f4ca6(_0x42be05) || _0x49470e(_0x42be05, _0x450e94) || _0x5e194f(_0x42be05, _0x450e94) || _0x4dfe46();
    }
    function _0x5e194f(_0x543c55, _0x37db19) {
      if (!_0x543c55) {
        return;
      }
      if (typeof _0x543c55 === "string") {
        return _0x21d056(_0x543c55, _0x37db19);
      }
      var _0x27ffd2 = Object.prototype.toString.call(_0x543c55).slice(8, -1);
      if (_0x27ffd2 === "Object" && _0x543c55.constructor) {
        _0x27ffd2 = _0x543c55.constructor.name;
      }
      if (_0x27ffd2 === "Map" || _0x27ffd2 === "Set") {
        return Array.from(_0x27ffd2);
      }
      if (_0x27ffd2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x27ffd2)) {
        return _0x21d056(_0x543c55, _0x37db19);
      }
    }
    function _0x7d64b2(_0x4b0a42, _0x2c716f) {
      var _0x1ac59d;
      var _0x18f85e;
      var _0x594362;
      var _0x5227dd;
      var _0x2cce76 = {
        label: 0,
        sent: function () {
          if (_0x594362[0] & 1) {
            throw _0x594362[1];
          }
          return _0x594362[1];
        },
        trys: [],
        ops: []
      };
      _0x5227dd = {
        next: _0x501b13(0),
        throw: _0x501b13(1),
        return: _0x501b13(2)
      };
      if (typeof Symbol === "function") {
        _0x5227dd[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5227dd;
      function _0x501b13(_0x3316c7) {
        return function (_0x30155a) {
          return _0x5d2bda([_0x3316c7, _0x30155a]);
        };
      }
      function _0x5d2bda(_0x3deedb) {
        if (_0x1ac59d) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2cce76) {
          try {
            _0x1ac59d = 1;
            if (_0x18f85e && (_0x594362 = _0x3deedb[0] & 2 ? _0x18f85e.return : _0x3deedb[0] ? _0x18f85e.throw || ((_0x594362 = _0x18f85e.return) && _0x594362.call(_0x18f85e), 0) : _0x18f85e.next) && !(_0x594362 = _0x594362.call(_0x18f85e, _0x3deedb[1])).done) {
              return _0x594362;
            }
            _0x18f85e = 0;
            if (_0x594362) {
              _0x3deedb = [_0x3deedb[0] & 2, _0x594362.value];
            }
            switch (_0x3deedb[0]) {
              case 0:
              case 1:
                _0x594362 = _0x3deedb;
                break;
              case 4:
                _0x2cce76.label++;
                var _0xb21e04 = {
                  value: _0x3deedb[1],
                  done: false
                };
                return _0xb21e04;
              case 5:
                _0x2cce76.label++;
                _0x18f85e = _0x3deedb[1];
                _0x3deedb = [0];
                continue;
              case 7:
                _0x3deedb = _0x2cce76.ops.pop();
                _0x2cce76.trys.pop();
                continue;
              default:
                if (!(_0x594362 = _0x2cce76.trys, _0x594362 = _0x594362.length > 0 && _0x594362[_0x594362.length - 1]) && (_0x3deedb[0] === 6 || _0x3deedb[0] === 2)) {
                  _0x2cce76 = 0;
                  continue;
                }
                if (_0x3deedb[0] === 3 && (!_0x594362 || _0x3deedb[1] > _0x594362[0] && _0x3deedb[1] < _0x594362[3])) {
                  _0x2cce76.label = _0x3deedb[1];
                  break;
                }
                if (_0x3deedb[0] === 6 && _0x2cce76.label < _0x594362[1]) {
                  _0x2cce76.label = _0x594362[1];
                  _0x594362 = _0x3deedb;
                  break;
                }
                if (_0x594362 && _0x2cce76.label < _0x594362[2]) {
                  _0x2cce76.label = _0x594362[2];
                  _0x2cce76.ops.push(_0x3deedb);
                  break;
                }
                if (_0x594362[2]) {
                  _0x2cce76.ops.pop();
                }
                _0x2cce76.trys.pop();
                continue;
            }
            _0x3deedb = _0x2c716f.call(_0x4b0a42, _0x2cce76);
          } catch (_0x3900fd) {
            _0x3deedb = [6, _0x3900fd];
            _0x18f85e = 0;
          } finally {
            _0x1ac59d = _0x594362 = 0;
          }
        }
        if (_0x3deedb[0] & 5) {
          throw _0x3deedb[1];
        }
        var _0x2ed316 = {
          value: _0x3deedb[0] ? _0x3deedb[1] : undefined,
          done: true
        };
        return _0x2ed316;
      }
    }
    function _0x3b14df() {
      return _0x295ccd.apply(this, arguments);
    }
    function _0x295ccd() {
      _0x295ccd = _0x3dd8fb(function () {
        return _0x7d64b2(this, function (_0x5e231c) {
          console.log("[JOBS] Loading");
          return [2];
        });
      });
      return _0x295ccd.apply(this, arguments);
    }
    _0x1b3521("np-ui:getJobCenterJobs", function () {
      var _0x4545e9 = _0x3dd8fb(function (_0x461db0, _0x4570d4) {
        var _0x4af7a2;
        var _0x45cbd5;
        var _0x1d462f;
        return _0x7d64b2(this, function (_0x548369) {
          switch (_0x548369.label) {
            case 0:
              return [4, RPC.execute("phone:getJobCenterJobs")];
            case 1:
              _0x4af7a2 = _0x21ae79.apply(undefined, [_0x548369.sent(), 2]);
              _0x45cbd5 = _0x4af7a2[0];
              _0x1d462f = _0x4af7a2[1];
              var _0x4ea4fc = {
                ok: _0x1d462f == false,
                message: _0x1d462f || ""
              };
              var _0x42573a = {
                data: _0x45cbd5,
                meta: _0x4ea4fc
              };
              _0x4570d4(_0x42573a);
              emit("np:jobs:jobCenterJobs", _0x45cbd5);
              return [2];
          }
        });
      });
      return function (_0x258a87, _0x51acbf) {
        return _0x4545e9.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:createJobCenterGroup", function (_0x41b5af, _0x46e211) {
      RPC.execute("phone:createJobCenterGroup", _0x41b5af.requestId, _0x41b5af.character.id);
      _0x46e211({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    _0x1b3521("np-ui:requestToJoinJobCenterGroup", function () {
      var _0x26e170 = _0x3dd8fb(function (_0x5b4622, _0x4d99e1) {
        return _0x7d64b2(this, function (_0x331575) {
          RPC.execute("phone:requestToJoinJobCenterGroup", _0x5b4622.requestId, _0x5b4622.character.id, _0x5b4622.group.id);
          _0x4d99e1({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0xd8adf2, _0xd66972) {
        return _0x26e170.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:requestToJoinJobCenterGroupCancel", function () {
      var _0x56f3d1 = _0x3dd8fb(function (_0x3eabfb, _0x435b37) {
        return _0x7d64b2(this, function (_0x56b6fc) {
          RPC.execute("phone:requestToJoinJobCenterGroupCancel", _0x3eabfb.requestId, _0x3eabfb.character.id);
          _0x435b37({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x3270f3, _0x2c4f5f) {
        return _0x56f3d1.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:requestToJoinJobCenterGroupAccept", function () {
      var _0x307681 = _0x3dd8fb(function (_0x227720, _0x4d0da9) {
        return _0x7d64b2(this, function (_0x5cf02d) {
          RPC.execute("phone:requestToJoinJobCenterGroupAccept", _0x227720.request_id, _0x227720.group_id, _0x227720.member_id);
          _0x4d0da9({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x4e74c9, _0x422977) {
        return _0x307681.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:requestToJoinJobCenterGroupReject", function () {
      var _0x16ffc3 = _0x3dd8fb(function (_0x376b0f, _0x3938c2) {
        return _0x7d64b2(this, function (_0x1aec50) {
          RPC.execute("phone:requestToJoinJobCenterGroupReject", _0x376b0f.request_id, _0x376b0f.group_id, _0x376b0f.member_id);
          _0x3938c2({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x1a0630, _0x1beb4c) {
        return _0x16ffc3.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:jobCenterGroupDisband", function () {
      var _0x1c9ab9 = _0x3dd8fb(function (_0x2bfca2, _0xf0d30d) {
        return _0x7d64b2(this, function (_0x9fcc0c) {
          RPC.execute("phone:jobCenterGroupDisband", _0x2bfca2.group_id, _0x2bfca2.character.id);
          _0xf0d30d({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x3e4c2a, _0x1e611c) {
        return _0x1c9ab9.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:jobCenterGroupLeave", function () {
      var _0x1820d6 = _0x3dd8fb(function (_0x111552, _0x45a627) {
        return _0x7d64b2(this, function (_0x323cd3) {
          RPC.execute("phone:jobCenterGroupLeave", _0x111552.group_id, _0x111552.character.id);
          _0x45a627({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x210cf3, _0xb879f2) {
        return _0x1820d6.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:jobCenterGroupRemove", function () {
      var _0x4047a2 = _0x3dd8fb(function (_0x7f336e, _0xa64fe9) {
        return _0x7d64b2(this, function (_0x13e359) {
          RPC.execute("phone:jobCenterGroupRemove", _0x7f336e.group_id, _0x7f336e.member_id);
          _0xa64fe9({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x48762f, _0x2862de) {
        return _0x4047a2.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:jobCenterGroupPromote", function () {
      var _0x1aa97e = _0x3dd8fb(function (_0x3be95c, _0x39b198) {
        return _0x7d64b2(this, function (_0x17c4f4) {
          RPC.execute("phone:jobCenterGroupPromote", _0x3be95c.group_id, _0x3be95c.member_id);
          _0x39b198({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x95af8d, _0x39e19e) {
        return _0x1aa97e.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:setGPSMarker", function () {
      var _0x1b84c6 = _0x3dd8fb(function (_0x531feb, _0x2ef5f4) {
        return _0x7d64b2(this, function (_0x4e17f7) {
          _0x21aea1(_0x1f4826.fromObject(_0x531feb.coords));
          _0x2ef5f4({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          return [2];
        });
      });
      return function (_0x4a2f7c, _0x3ea900) {
        return _0x1b84c6.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:jobCenterGroupReady", function (_0x56dfa8, _0x128d07) {
      RPC.execute("phone:jobCenterGroupReady", _0x56dfa8.group_id, _0x56dfa8.character.id);
      _0x128d07({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    _0x1b3521("np-ui:jobCenterGroupNotReady", function (_0x4bf729, _0x187e92) {
      RPC.execute("phone:jobCenterGroupNotReady", _0x4bf729.group_id, _0x4bf729.character.id);
      _0x187e92({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    _0x1b3521("np-ui:jobCenterActivityAccept", function () {
      var _0x8118aa = _0x3dd8fb(function (_0x53f282, _0x3f9dc7) {
        var _0x18e4c1;
        return _0x7d64b2(this, function (_0x2d3d1a) {
          switch (_0x2d3d1a.label) {
            case 0:
              return [4, RPC.execute("phone:jobCenterActivityAccept", _0x53f282.activity_id, _0x53f282.group_id, _0x53f282.character.id)];
            case 1:
              _0x18e4c1 = _0x2d3d1a.sent();
              var _0x509677 = {
                ok: _0x18e4c1,
                message: ""
              };
              var _0x30e38f = {
                data: {},
                meta: _0x509677
              };
              _0x3f9dc7(_0x30e38f);
              return [2];
          }
        });
      });
      return function (_0x2ebbb6, _0x1f121e) {
        return _0x8118aa.apply(this, arguments);
      };
    }());
    _0x1b3521("np-ui:jobCenterActivityReject", function (_0x502496, _0x29402f) {
      RPC.execute("phone:jobCenterActivityReject", _0x502496.activity_id, _0x502496.character.id);
      _0x29402f({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    _0x1b3521("np-ui:jobCenterActivityAbandon", function (_0x1455a3, _0x182b09) {
      RPC.execute("phone:jobCenterActivityAbandon", _0x1455a3.activity.id, _0x1455a3.character.id);
      _0x182b09({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    _0x1b3521("np-ui:jobCenterCheckout", function (_0x19fe10, _0x8fc417) {
      _0x7cfbee();
      _0x8fc417({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    onNet("np-ui:updateJobState", function (_0x193298) {
      var _0x27a772 = {
        action: "jobs-update",
        state: _0x193298
      };
      var _0x3ce39a = {
        source: "np-nui",
        app: "phone",
        data: _0x27a772
      };
      _0x1a6d35(_0x3ce39a);
    });
    onNet("np-ui:jobs:sendNotification", function (_0x623994, _0xaed61e, _0x38085b) {
      var _0x122f4b = {
        action: "notification",
        target_app: "jobs",
        title: _0x623994,
        body: _0xaed61e,
        show_even_if_app_active: _0x38085b
      };
      var _0x35ef0d = {
        source: "np-nui",
        app: "phone",
        data: _0x122f4b
      };
      _0x1a6d35(_0x35ef0d);
    });
    onNet("np-ui:jobs:groupInviteRequest", function (_0x254277, _0x516b48, _0x2c02e6) {
      var _0x226094 = {
        action: "job-group-join-request",
        member: _0x2c02e6,
        group_id: _0x516b48,
        request_id: _0x254277
      };
      var _0x538279 = {
        source: "np-nui",
        app: "phone",
        data: _0x226094
      };
      _0x1a6d35(_0x538279);
    });
    onNet("np-ui:jobs:groupInviteCompleted", function (_0x5f3bf7, _0x7ba21c) {
      var _0x5664b0 = {
        action: _0x7ba21c ? "job-group-join-accept" : "job-group-join-deny",
        requestId: _0x5f3bf7
      };
      var _0xa68b37 = {
        source: "np-nui",
        app: "phone",
        data: _0x5664b0
      };
      _0x1a6d35(_0xa68b37);
    });
    onNet("np-ui:jobs:requestResponse", function (_0x124d3e, _0x5ee692) {
      var _0x519c5f = {
        action: _0x5ee692,
        requestId: _0x124d3e
      };
      var _0x1616e0 = {
        source: "np-nui",
        app: "phone",
        data: _0x519c5f
      };
      _0x1a6d35(_0x1616e0);
    });
    onNet("np-ui:jobs:groupActivityOffer", function (_0x382063, _0x30f788, _0x2e57c0) {
      var _0x574453 = {
        action: "job-group-offer-activity",
        activity_id: _0x382063,
        group_id: _0x2e57c0,
        message: _0x30f788
      };
      var _0x25d599 = {
        source: "np-nui",
        app: "phone",
        data: _0x574453
      };
      _0x1a6d35(_0x25d599);
    });
    onNet("np-ui:jobs:pendingSelection", function (_0x189f8b, _0x548170) {
      var _0x28e23c = {
        action: "jobs-pending-selection",
        activity_id: _0x189f8b,
        got_job: _0x548170
      };
      var _0xadc968 = {
        source: "np-nui",
        app: "phone",
        data: _0x28e23c
      };
      _0x1a6d35(_0xadc968);
    });
    var _0x1ba36b = _0x3cbfd9(670);
    ;
    function _0x485252(_0x27ad0c) {
      if (_0x27ad0c === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x27ad0c;
    }
    function _0x243f29(_0x499733, _0x38ebce) {
      if (!(_0x499733 instanceof _0x38ebce)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x7bad06(_0x6f9f7d, _0x47122c) {
      for (var _0x5d2bd3 = 0; _0x5d2bd3 < _0x47122c.length; _0x5d2bd3++) {
        var _0x279e73 = _0x47122c[_0x5d2bd3];
        _0x279e73.enumerable = _0x279e73.enumerable || false;
        _0x279e73.configurable = true;
        if ("value" in _0x279e73) {
          _0x279e73.writable = true;
        }
        Object.defineProperty(_0x6f9f7d, _0x279e73.key, _0x279e73);
      }
    }
    function _0x1c30e3(_0x43fa01, _0x12de5f, _0x209039) {
      if (_0x12de5f) {
        _0x7bad06(_0x43fa01.prototype, _0x12de5f);
      }
      if (_0x209039) {
        _0x7bad06(_0x43fa01, _0x209039);
      }
      return _0x43fa01;
    }
    function _0x55ca05(_0x28ac09, _0x21c406, _0x362c7c) {
      if (_0x21c406 in _0x28ac09) {
        var _0x4f5750 = {
          value: _0x362c7c,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x28ac09, _0x21c406, _0x4f5750);
      } else {
        _0x28ac09[_0x21c406] = _0x362c7c;
      }
      return _0x28ac09;
    }
    function _0x1d9927(_0x5478c9) {
      _0x1d9927 = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x6d250d(_0xe1af3d) {
        return _0xe1af3d.__proto__ || Object.getPrototypeOf(_0xe1af3d);
      };
      return _0x1d9927(_0x5478c9);
    }
    function _0x5aa77e(_0x18f503, _0x4437a3) {
      if (typeof _0x4437a3 !== "function" && _0x4437a3 !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x18f503.prototype = Object.create(_0x4437a3 && _0x4437a3.prototype, {
        constructor: {
          value: _0x18f503,
          writable: true,
          configurable: true
        }
      });
      if (_0x4437a3) {
        _0x37a0ac(_0x18f503, _0x4437a3);
      }
    }
    function _0x4385a5(_0x20ff76, _0x34c5f4) {
      if (_0x34c5f4 && (_0x16219b(_0x34c5f4) === "object" || typeof _0x34c5f4 === "function")) {
        return _0x34c5f4;
      }
      return _0x485252(_0x20ff76);
    }
    function _0x37a0ac(_0x1ca58a, _0x3e63ef) {
      _0x37a0ac = Object.setPrototypeOf || function _0x97a875(_0x3c566b, _0x49ecc6) {
        _0x3c566b.__proto__ = _0x49ecc6;
        return _0x3c566b;
      };
      return _0x37a0ac(_0x1ca58a, _0x3e63ef);
    }
    function _0x16219b(_0x323824) {
      '@swc/helpers - typeof';

      if (_0x323824 && typeof Symbol !== "undefined" && _0x323824.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x323824;
      }
    }
    function _0x15cd2d() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x596710) {
        return false;
      }
    }
    function _0xc44a62(_0x125b84) {
      var _0x25da7a = _0x15cd2d();
      return function _0x243251() {
        var _0x3194d4 = _0x1d9927(_0x125b84);
        var _0x55b935;
        if (_0x25da7a) {
          var _0x3c02bb = _0x1d9927(this).constructor;
          _0x55b935 = Reflect.construct(_0x3194d4, arguments, _0x3c02bb);
        } else {
          _0x55b935 = _0x3194d4.apply(this, arguments);
        }
        return _0x4385a5(this, _0x55b935);
      };
    }
    var _0x39fc66 = function (_0x34a350) {
      'use strict';

      _0x5aa77e(_0x346301, _0x34a350);
      var _0x10d833 = _0xc44a62(_0x346301);
      function _0x346301(_0x59e0d0, _0x4a6661) {
        _0x243f29(this, _0x346301);
        var _0x466aa5;
        _0x466aa5 = _0x10d833.call(this);
        _0x55ca05(_0x485252(_0x466aa5), "id", undefined);
        _0x55ca05(_0x485252(_0x466aa5), "type", undefined);
        _0x55ca05(_0x485252(_0x466aa5), "data", undefined);
        _0x55ca05(_0x485252(_0x466aa5), "settings", undefined);
        _0x466aa5.id = _0x59e0d0;
        _0x466aa5.type = _0x4a6661;
        return _0x466aa5;
      }
      _0x1c30e3(_0x346301, [{
        key: "updateData",
        value: function _0x5860aa(_0x533cb6, _0x1658fc) {
          this.data[_0x533cb6] = _0x1658fc;
          this.emit("update", "data", _0x533cb6, _0x1658fc);
        }
      }, {
        key: "updateSettings",
        value: function _0x480f03(_0x36f2b6, _0x4bc3f0) {
          this.settings[_0x36f2b6] = _0x4bc3f0;
          this.emit("update", "settings", _0x36f2b6, _0x4bc3f0);
        }
      }]);
      return _0x346301;
    }(_0x1ba36b.EventEmitter);
    ;
    function _0x299693(_0x2947ed, _0x5eb9af, _0x3990ad, _0x692564, _0x198ced, _0x3624ce, _0x131928) {
      try {
        var _0x140338 = _0x2947ed[_0x3624ce](_0x131928);
        var _0x147c10 = _0x140338.value;
      } catch (_0x11f9c3) {
        _0x3990ad(_0x11f9c3);
        return;
      }
      if (_0x140338.done) {
        _0x5eb9af(_0x147c10);
      } else {
        Promise.resolve(_0x147c10).then(_0x692564, _0x198ced);
      }
    }
    function _0x2d99ad(_0xe2a549) {
      return function () {
        var _0x32dfb4 = this;
        var _0x773436 = arguments;
        return new Promise(function (_0x56858a, _0x16058f) {
          var _0x132b04 = _0xe2a549.apply(_0x32dfb4, _0x773436);
          function _0x4d5b6d(_0x2ef166) {
            _0x299693(_0x132b04, _0x56858a, _0x16058f, _0x4d5b6d, _0x12dcf3, "next", _0x2ef166);
          }
          function _0x12dcf3(_0x3e8ee8) {
            _0x299693(_0x132b04, _0x56858a, _0x16058f, _0x4d5b6d, _0x12dcf3, "throw", _0x3e8ee8);
          }
          _0x4d5b6d(undefined);
        });
      };
    }
    function _0x68a0e6(_0x41d9da, _0x12234c) {
      var _0x4f3907;
      var _0x2b2340;
      var _0x149976;
      var _0x46a22b;
      var _0x29e865 = {
        label: 0,
        sent: function () {
          if (_0x149976[0] & 1) {
            throw _0x149976[1];
          }
          return _0x149976[1];
        },
        trys: [],
        ops: []
      };
      _0x46a22b = {
        next: _0x465c02(0),
        throw: _0x465c02(1),
        return: _0x465c02(2)
      };
      if (typeof Symbol === "function") {
        _0x46a22b[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x46a22b;
      function _0x465c02(_0xf7cacc) {
        return function (_0x29294d) {
          return _0x388049([_0xf7cacc, _0x29294d]);
        };
      }
      function _0x388049(_0xa6ac07) {
        if (_0x4f3907) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x29e865) {
          try {
            _0x4f3907 = 1;
            if (_0x2b2340 && (_0x149976 = _0xa6ac07[0] & 2 ? _0x2b2340.return : _0xa6ac07[0] ? _0x2b2340.throw || ((_0x149976 = _0x2b2340.return) && _0x149976.call(_0x2b2340), 0) : _0x2b2340.next) && !(_0x149976 = _0x149976.call(_0x2b2340, _0xa6ac07[1])).done) {
              return _0x149976;
            }
            _0x2b2340 = 0;
            if (_0x149976) {
              _0xa6ac07 = [_0xa6ac07[0] & 2, _0x149976.value];
            }
            switch (_0xa6ac07[0]) {
              case 0:
              case 1:
                _0x149976 = _0xa6ac07;
                break;
              case 4:
                _0x29e865.label++;
                var _0x2cec43 = {
                  value: _0xa6ac07[1],
                  done: false
                };
                return _0x2cec43;
              case 5:
                _0x29e865.label++;
                _0x2b2340 = _0xa6ac07[1];
                _0xa6ac07 = [0];
                continue;
              case 7:
                _0xa6ac07 = _0x29e865.ops.pop();
                _0x29e865.trys.pop();
                continue;
              default:
                if (!(_0x149976 = _0x29e865.trys, _0x149976 = _0x149976.length > 0 && _0x149976[_0x149976.length - 1]) && (_0xa6ac07[0] === 6 || _0xa6ac07[0] === 2)) {
                  _0x29e865 = 0;
                  continue;
                }
                if (_0xa6ac07[0] === 3 && (!_0x149976 || _0xa6ac07[1] > _0x149976[0] && _0xa6ac07[1] < _0x149976[3])) {
                  _0x29e865.label = _0xa6ac07[1];
                  break;
                }
                if (_0xa6ac07[0] === 6 && _0x29e865.label < _0x149976[1]) {
                  _0x29e865.label = _0x149976[1];
                  _0x149976 = _0xa6ac07;
                  break;
                }
                if (_0x149976 && _0x29e865.label < _0x149976[2]) {
                  _0x29e865.label = _0x149976[2];
                  _0x29e865.ops.push(_0xa6ac07);
                  break;
                }
                if (_0x149976[2]) {
                  _0x29e865.ops.pop();
                }
                _0x29e865.trys.pop();
                continue;
            }
            _0xa6ac07 = _0x12234c.call(_0x41d9da, _0x29e865);
          } catch (_0x5d3fad) {
            _0xa6ac07 = [6, _0x5d3fad];
            _0x2b2340 = 0;
          } finally {
            _0x4f3907 = _0x149976 = 0;
          }
        }
        if (_0xa6ac07[0] & 5) {
          throw _0xa6ac07[1];
        }
        var _0x3a3e43 = {
          value: _0xa6ac07[0] ? _0xa6ac07[1] : undefined,
          done: true
        };
        return _0x3a3e43;
      }
    }
    var _0x5e07c3 = null && globalThis;
    function _0x465fb3(_0x17ca40) {
      return new Promise(function (_0x364f03) {
        return setTimeout(_0x364f03, _0x17ca40);
      });
    }
    function _0x19752d(_0x5f5b02) {
      return new Promise(function (_0x30c9b0) {
        setTimeout(function () {
          return _0x30c9b0(false);
        }, _0x5f5b02);
      });
    }
    function _0x43d9f6(_0x40d2ec, _0x399e34) {
      if (_0x40d2ec !== "player") {
        return NetworkGetEntityFromNetworkId(_0x399e34);
      } else {
        return GetPlayerFromServerId(_0x399e34);
      }
    }
    function _0x43a9e4(_0x10d2a6) {
      return JSON.parse(JSON.stringify(_0x10d2a6));
    }
    function _0x362685(_0x4312f9) {
      Object.freeze(_0x4312f9);
      if (typeof _0x4312f9 === "object") {
        for (var _0x27276d in _0x4312f9) {
          if (_0x4312f9.hasOwnProperty(_0x27276d) && typeof _0x4312f9[_0x27276d] === "object") {
            _0x362685(_0x4312f9[_0x27276d]);
          }
        }
      }
    }
    function _0xf7a0e1(_0x3d1d50) {
      var _0xbfa2ef = [];
      _0x3d1d50.forEach(function (_0x1a5642, _0x2c1f87) {
        var _0x214e7d = {
          key: _0x2c1f87,
          value: _0x1a5642
        };
        return _0xbfa2ef.push(_0x214e7d);
      });
      return _0xbfa2ef;
    }
    function _0x13dfa4(_0x10ee6b) {
      var _0xbcbaad = new Map();
      _0x10ee6b.forEach(function (_0x183412) {
        return _0xbcbaad.set(_0x183412.key, _0x183412.value);
      });
      return _0xbcbaad;
    }
    function _0x202a2a(_0x1e467b, _0x432111) {
      return Math.floor(_0x432111 ? Math.random() * (_0x432111 - _0x1e467b) + _0x1e467b : Math.random() * _0x1e467b);
    }
    function _0x1f2caf(_0x4be254) {
      if (_0x4be254) {
        return _0x4be254.getTime() - new Date().getTime();
      }
    }
    function _0x44a4e1(_0x58abcf, _0x5279f5, _0x1ed412) {
      var _0x1aef79 = new Date();
      if (_0x58abcf) {
        _0x1aef79.setSeconds(_0x1aef79.getSeconds() + _0x58abcf);
      }
      if (_0x5279f5) {
        _0x1aef79.setMinutes(_0x1aef79.getMinutes() + _0x5279f5);
      }
      if (_0x1ed412) {
        _0x1aef79.setHours(_0x1aef79.getHours() + _0x1ed412);
      }
      return _0x1aef79;
    }
    function _0x1a3135(_0x288151) {
      return _0x47e0a0.apply(this, arguments);
    }
    function _0x47e0a0() {
      _0x47e0a0 = _0x2d99ad(function (_0x11e182) {
        var _0x19ca83;
        var _0x815b7b;
        return _0x68a0e6(this, function (_0xc6cf90) {
          switch (_0xc6cf90.label) {
            case 0:
              _0x19ca83 = typeof _0x11e182 === "string" ? GetHashKey(_0x11e182) : _0x11e182;
              if (!_0x19ca83 || !!HasModelLoaded(_0x19ca83)) {
                return [3, 3];
              }
              _0x815b7b = false;
              RequestModel(_0x19ca83);
              setTimeout(function () {
                return _0x815b7b = true;
              }, 10000);
              _0xc6cf90.label = 1;
            case 1:
              if (!!HasModelLoaded(_0x19ca83) || !!_0x815b7b) {
                return [3, 3];
              }
              return [4, _0x465fb3(0)];
            case 2:
              _0xc6cf90.sent();
              return [3, 1];
            case 3:
              return [2];
          }
        });
      });
      return _0x47e0a0.apply(this, arguments);
    }
    function _0x5920e8(_0x260e64 = 0) {
      return `\$${new Intl.NumberFormat().format(_0x260e64)}`;
    }
    function _0x588e4b(_0x394b9f, _0x248b23) {
      return Math.floor(_0x248b23 ? Math.random() * (_0x248b23 - _0x394b9f) + _0x394b9f : Math.random() * _0x394b9f);
    }
    function _0x10cb97(_0x1285cc) {
      return _0x1285cc === "police" || _0x1285cc === "doc" || _0x1285cc === "ems" || _0x1285cc === "doctor" || _0x1285cc === "judge";
    }
    function _0x2df36f(_0x4e901f, _0x53fb25, _0x53c8cf) {
      return _0x53fb25[0] + (_0x53c8cf - _0x4e901f[0]) * (_0x53fb25[1] - _0x53fb25[0]) / (_0x4e901f[1] - _0x4e901f[0]);
    }
    function _0x567814(_0x54c8d9, _0x1474b8) {
      var _0xa51a6d = [_0x54c8d9[0] - _0x1474b8[0], _0x54c8d9[1] - _0x1474b8[1], _0x54c8d9[2] - _0x1474b8[2]];
      var _0x505b89 = _0xa51a6d[0];
      var _0x39715d = _0xa51a6d[1];
      var _0x56dbba = _0xa51a6d[2];
      return Math.sqrt(_0x505b89 * _0x505b89 + _0x39715d * _0x39715d + _0x56dbba * _0x56dbba);
    }
    function _0x1fe557(_0x1ff378) {
      if (typeof _0x1ff378 !== "string") {
        return;
      }
      return _0x1ff378.toLowerCase().replace(/^\w|\s\w/g, function (_0x2eb1bb) {
        return _0x2eb1bb.toUpperCase();
      });
    }
    ;
    function _0x235685(_0x434bd9) {
      if (_0x434bd9 === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x434bd9;
    }
    function _0x256a97(_0x4c0ca3, _0x1e3996) {
      if (!(_0x4c0ca3 instanceof _0x1e3996)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x2c8d30(_0x38b5a5, _0x125636) {
      for (var _0x4becd6 = 0; _0x4becd6 < _0x125636.length; _0x4becd6++) {
        var _0x2af38b = _0x125636[_0x4becd6];
        _0x2af38b.enumerable = _0x2af38b.enumerable || false;
        _0x2af38b.configurable = true;
        if ("value" in _0x2af38b) {
          _0x2af38b.writable = true;
        }
        Object.defineProperty(_0x38b5a5, _0x2af38b.key, _0x2af38b);
      }
    }
    function _0x15df16(_0x4eae33, _0x47cd17, _0x4af752) {
      if (_0x47cd17) {
        _0x2c8d30(_0x4eae33.prototype, _0x47cd17);
      }
      if (_0x4af752) {
        _0x2c8d30(_0x4eae33, _0x4af752);
      }
      return _0x4eae33;
    }
    function _0x14377a(_0x2822c6, _0x3de294, _0x5523d6) {
      if (_0x3de294 in _0x2822c6) {
        var _0x15ee67 = {
          value: _0x5523d6,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x2822c6, _0x3de294, _0x15ee67);
      } else {
        _0x2822c6[_0x3de294] = _0x5523d6;
      }
      return _0x2822c6;
    }
    function _0x2b020b(_0x4375da) {
      _0x2b020b = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x2c8302(_0x1aad9e) {
        return _0x1aad9e.__proto__ || Object.getPrototypeOf(_0x1aad9e);
      };
      return _0x2b020b(_0x4375da);
    }
    function _0x27614f(_0x5da820, _0x5ab32a) {
      if (typeof _0x5ab32a !== "function" && _0x5ab32a !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x5da820.prototype = Object.create(_0x5ab32a && _0x5ab32a.prototype, {
        constructor: {
          value: _0x5da820,
          writable: true,
          configurable: true
        }
      });
      if (_0x5ab32a) {
        _0x5defd9(_0x5da820, _0x5ab32a);
      }
    }
    function _0x5c5e16(_0x594d39, _0x5365e4) {
      if (_0x5365e4 && (_0x39e1de(_0x5365e4) === "object" || typeof _0x5365e4 === "function")) {
        return _0x5365e4;
      }
      return _0x235685(_0x594d39);
    }
    function _0x5defd9(_0x126a03, _0x107aa1) {
      _0x5defd9 = Object.setPrototypeOf || function _0x311a84(_0x4be3de, _0x31b800) {
        _0x4be3de.__proto__ = _0x31b800;
        return _0x4be3de;
      };
      return _0x5defd9(_0x126a03, _0x107aa1);
    }
    function _0x39e1de(_0x478e4d) {
      '@swc/helpers - typeof';

      if (_0x478e4d && typeof Symbol !== "undefined" && _0x478e4d.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x478e4d;
      }
    }
    function _0xd8abb7() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x4dbfa9) {
        return false;
      }
    }
    function _0x449048(_0xd614d6) {
      var _0x35b990 = _0xd8abb7();
      return function _0x5e6fb6() {
        var _0x295f5d = _0x2b020b(_0xd614d6);
        var _0x533f85;
        if (_0x35b990) {
          var _0x535d3b = _0x2b020b(this).constructor;
          _0x533f85 = Reflect.construct(_0x295f5d, arguments, _0x535d3b);
        } else {
          _0x533f85 = _0x295f5d.apply(this, arguments);
        }
        return _0x5c5e16(this, _0x533f85);
      };
    }
    var _0x2270e1 = function (_0x4eb75d) {
      'use strict';

      _0x27614f(_0x5070ef, _0x4eb75d);
      var _0x2c7a43 = _0x449048(_0x5070ef);
      function _0x5070ef(_0x5a11f2) {
        _0x256a97(this, _0x5070ef);
        var _0x15208c;
        _0x15208c = _0x2c7a43.call(this, _0x5a11f2.id, _0x5a11f2.type);
        _0x14377a(_0x235685(_0x15208c), "data", undefined);
        _0x14377a(_0x235685(_0x15208c), "settings", undefined);
        _0x15208c.data = _0x5a11f2.data;
        _0x15208c.settings = _0x5a11f2.settings;
        return _0x15208c;
      }
      _0x15df16(_0x5070ef, [{
        key: "handle",
        get: function _0x5b3bed() {
          if (DoesEntityExist(this.data.handle)) {
            return this.data.handle;
          } else {
            return this.data.handle = _0x43d9f6(this.type, this.netId);
          }
        }
      }, {
        key: "netId",
        get: function _0xab7ab7() {
          return this.data.netId;
        }
      }, {
        key: "exist",
        get: function _0x253824() {
          return DoesEntityExist(this.handle);
        }
      }]);
      return _0x5070ef;
    }(_0x39fc66);
    ;
    function _0x13ddb3(_0x20a895) {
      if (_0x20a895 === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x20a895;
    }
    function _0x20bac9(_0xe1d87e, _0x1cc4de) {
      if (!(_0xe1d87e instanceof _0x1cc4de)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x1d5abd(_0x1bbeb4, _0x39953c) {
      for (var _0x246c29 = 0; _0x246c29 < _0x39953c.length; _0x246c29++) {
        var _0x225c2c = _0x39953c[_0x246c29];
        _0x225c2c.enumerable = _0x225c2c.enumerable || false;
        _0x225c2c.configurable = true;
        if ("value" in _0x225c2c) {
          _0x225c2c.writable = true;
        }
        Object.defineProperty(_0x1bbeb4, _0x225c2c.key, _0x225c2c);
      }
    }
    function _0x3d7e71(_0x4aaa88, _0x26adb1, _0x10515a) {
      if (_0x26adb1) {
        _0x1d5abd(_0x4aaa88.prototype, _0x26adb1);
      }
      if (_0x10515a) {
        _0x1d5abd(_0x4aaa88, _0x10515a);
      }
      return _0x4aaa88;
    }
    function _0x479b44(_0x5e0a1e) {
      _0x479b44 = Object.setPrototypeOf ? Object.getPrototypeOf : function _0xc18596(_0x5a55f4) {
        return _0x5a55f4.__proto__ || Object.getPrototypeOf(_0x5a55f4);
      };
      return _0x479b44(_0x5e0a1e);
    }
    function _0x3ac762(_0x3198c6, _0x80b9df) {
      if (typeof _0x80b9df !== "function" && _0x80b9df !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x3198c6.prototype = Object.create(_0x80b9df && _0x80b9df.prototype, {
        constructor: {
          value: _0x3198c6,
          writable: true,
          configurable: true
        }
      });
      if (_0x80b9df) {
        _0x2318af(_0x3198c6, _0x80b9df);
      }
    }
    function _0x2c6ea2(_0x49171b, _0x566b51) {
      if (_0x566b51 && (_0x372b17(_0x566b51) === "object" || typeof _0x566b51 === "function")) {
        return _0x566b51;
      }
      return _0x13ddb3(_0x49171b);
    }
    function _0x2318af(_0xed38d9, _0x1ced14) {
      _0x2318af = Object.setPrototypeOf || function _0x3227fd(_0x4aa4fa, _0x4a9253) {
        _0x4aa4fa.__proto__ = _0x4a9253;
        return _0x4aa4fa;
      };
      return _0x2318af(_0xed38d9, _0x1ced14);
    }
    function _0x372b17(_0x184c7d) {
      '@swc/helpers - typeof';

      if (_0x184c7d && typeof Symbol !== "undefined" && _0x184c7d.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x184c7d;
      }
    }
    function _0x4f05d3() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x3b9ffb) {
        return false;
      }
    }
    function _0x4a7c27(_0x602a56) {
      var _0x34f834 = _0x4f05d3();
      return function _0xc1980d() {
        var _0xe4f47c = _0x479b44(_0x602a56);
        var _0x527888;
        if (_0x34f834) {
          var _0x1e74b2 = _0x479b44(this).constructor;
          _0x527888 = Reflect.construct(_0xe4f47c, arguments, _0x1e74b2);
        } else {
          _0x527888 = _0xe4f47c.apply(this, arguments);
        }
        return _0x2c6ea2(this, _0x527888);
      };
    }
    var _0x3793c5 = function (_0x175daf) {
      'use strict';

      _0x3ac762(_0xc0f04e, _0x175daf);
      var _0x3b39cb = _0x4a7c27(_0xc0f04e);
      function _0xc0f04e(_0x1b99c2) {
        _0x20bac9(this, _0xc0f04e);
        var _0x10d217;
        _0x10d217 = _0x3b39cb.call(this, _0x1b99c2.id, _0x1b99c2.type);
        _0x10d217.data = _0x1b99c2.data;
        _0x10d217.settings = _0x1b99c2.settings;
        return _0x10d217;
      }
      _0x3d7e71(_0xc0f04e, [{
        key: "status",
        get: function _0x1d0ca1() {
          return this.data.status;
        }
      }, {
        key: "damage",
        get: function _0x62387c() {
          return this.data.damage;
        }
      }, {
        key: "requirement",
        get: function _0x4e16d3() {
          return this.settings.requirement;
        }
      }, {
        key: "reference",
        get: function _0x5cfa0d() {
          return this.settings.reference;
        }
      }]);
      return _0xc0f04e;
    }(_0x39fc66);
    ;
    function _0xb740cb(_0x7112e1) {
      if (_0x7112e1 === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x7112e1;
    }
    function _0x18f98f(_0x15ffec, _0x328891) {
      if (!(_0x15ffec instanceof _0x328891)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x46c5a9(_0x482cb7, _0x5572fd) {
      for (var _0x457743 = 0; _0x457743 < _0x5572fd.length; _0x457743++) {
        var _0x3bfc3d = _0x5572fd[_0x457743];
        _0x3bfc3d.enumerable = _0x3bfc3d.enumerable || false;
        _0x3bfc3d.configurable = true;
        if ("value" in _0x3bfc3d) {
          _0x3bfc3d.writable = true;
        }
        Object.defineProperty(_0x482cb7, _0x3bfc3d.key, _0x3bfc3d);
      }
    }
    function _0x291f9d(_0x5f09ae, _0xe372b1, _0x4e6274) {
      if (_0xe372b1) {
        _0x46c5a9(_0x5f09ae.prototype, _0xe372b1);
      }
      if (_0x4e6274) {
        _0x46c5a9(_0x5f09ae, _0x4e6274);
      }
      return _0x5f09ae;
    }
    function _0x5ba61d(_0x87eeba, _0x2cd776, _0x460666) {
      if (_0x2cd776 in _0x87eeba) {
        var _0x9cecf = {
          value: _0x460666,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x87eeba, _0x2cd776, _0x9cecf);
      } else {
        _0x87eeba[_0x2cd776] = _0x460666;
      }
      return _0x87eeba;
    }
    function _0x3fbcbe(_0x5a5c8d) {
      _0x3fbcbe = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x137a15(_0x4d7b6e) {
        return _0x4d7b6e.__proto__ || Object.getPrototypeOf(_0x4d7b6e);
      };
      return _0x3fbcbe(_0x5a5c8d);
    }
    function _0x178cdc(_0x5b0fe1, _0x1e0ccd) {
      if (typeof _0x1e0ccd !== "function" && _0x1e0ccd !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x5b0fe1.prototype = Object.create(_0x1e0ccd && _0x1e0ccd.prototype, {
        constructor: {
          value: _0x5b0fe1,
          writable: true,
          configurable: true
        }
      });
      if (_0x1e0ccd) {
        _0x3b76b1(_0x5b0fe1, _0x1e0ccd);
      }
    }
    function _0x431afe(_0x546b2c, _0x15f6c4) {
      if (_0x15f6c4 && (_0x45e67b(_0x15f6c4) === "object" || typeof _0x15f6c4 === "function")) {
        return _0x15f6c4;
      }
      return _0xb740cb(_0x546b2c);
    }
    function _0x3b76b1(_0x1b531c, _0x5cae04) {
      _0x3b76b1 = Object.setPrototypeOf || function _0x315781(_0x3e0217, _0x51dfb4) {
        _0x3e0217.__proto__ = _0x51dfb4;
        return _0x3e0217;
      };
      return _0x3b76b1(_0x1b531c, _0x5cae04);
    }
    function _0x45e67b(_0x20c9aa) {
      '@swc/helpers - typeof';

      if (_0x20c9aa && typeof Symbol !== "undefined" && _0x20c9aa.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x20c9aa;
      }
    }
    function _0x2be996() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x1ca11e) {
        return false;
      }
    }
    function _0x42cf07(_0x5db82b) {
      var _0x86444a = _0x2be996();
      return function _0x53d43c() {
        var _0x248ede = _0x3fbcbe(_0x5db82b);
        var _0x1cdd75;
        if (_0x86444a) {
          var _0x124dc2 = _0x3fbcbe(this).constructor;
          _0x1cdd75 = Reflect.construct(_0x248ede, arguments, _0x124dc2);
        } else {
          _0x1cdd75 = _0x248ede.apply(this, arguments);
        }
        return _0x431afe(this, _0x1cdd75);
      };
    }
    var _0x2d7bf1 = function (_0x7c2795) {
      'use strict';

      _0x178cdc(_0x1bfb15, _0x7c2795);
      var _0xe4a358 = _0x42cf07(_0x1bfb15);
      function _0x1bfb15() {
        _0x18f98f(this, _0x1bfb15);
        var _0x2946bd;
        _0x2946bd = _0xe4a358.call(this);
        _0x5ba61d(_0xb740cb(_0x2946bd), "taskId", undefined);
        _0x5ba61d(_0xb740cb(_0x2946bd), "active", undefined);
        _0x5ba61d(_0xb740cb(_0x2946bd), "result", undefined);
        _0x5ba61d(_0xb740cb(_0x2946bd), "handlers", undefined);
        _0x5ba61d(_0xb740cb(_0x2946bd), "threads", undefined);
        _0x2946bd.active = true;
        _0x2946bd.threads = new Array();
        _0x2946bd.handlers = new Array();
        return _0x2946bd;
      }
      _0x291f9d(_0x1bfb15, [{
        key: "addThread",
        value: function _0x48590e(_0x22b02e) {
          this.threads.push(typeof _0x22b02e !== "number" ? setTick(_0x22b02e) : _0x22b02e);
        }
      }, {
        key: "addHandler",
        value: function _0x544cf0(_0x54eb37) {
          this.handlers.push(_0x54eb37);
        }
      }, {
        key: "stopTask",
        value: function _0x1dcaeb() {
          this.active = false;
          this.threads.forEach(function (_0x26ea25) {
            return clearTick(_0x26ea25);
          });
          this.handlers.forEach(function (_0x2f8ac4) {
            return _0x2f8ac4.disable();
          });
          this.release();
        }
      }, {
        key: "release",
        value: function _0xba1d2c() {
          this.removeAllListeners("taskEvent");
        }
      }]);
      return _0x1bfb15;
    }(_0x1ba36b.EventEmitter);
    ;
    function _0x574e04(_0x14c2a0, _0x2e15ea) {
      if (!(_0x14c2a0 instanceof _0x2e15ea)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x5aba88(_0x36b6e2, _0x32e05b) {
      for (var _0xab4d81 = 0; _0xab4d81 < _0x32e05b.length; _0xab4d81++) {
        var _0x52dc8f = _0x32e05b[_0xab4d81];
        _0x52dc8f.enumerable = _0x52dc8f.enumerable || false;
        _0x52dc8f.configurable = true;
        if ("value" in _0x52dc8f) {
          _0x52dc8f.writable = true;
        }
        Object.defineProperty(_0x36b6e2, _0x52dc8f.key, _0x52dc8f);
      }
    }
    function _0xeb2f93(_0x1bede8, _0x1d8bb6, _0x525d15) {
      if (_0x1d8bb6) {
        _0x5aba88(_0x1bede8.prototype, _0x1d8bb6);
      }
      if (_0x525d15) {
        _0x5aba88(_0x1bede8, _0x525d15);
      }
      return _0x1bede8;
    }
    function _0x1592e0(_0x19822d, _0x7d2dab, _0x2cb404) {
      if (_0x7d2dab in _0x19822d) {
        var _0x133ca2 = {
          value: _0x2cb404,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x19822d, _0x7d2dab, _0x133ca2);
      } else {
        _0x19822d[_0x7d2dab] = _0x2cb404;
      }
      return _0x19822d;
    }
    var _0x338274 = function () {
      'use strict';

      function _0x1b6ae5(_0x273217, _0x53cb3c) {
        _0x574e04(this, _0x1b6ae5);
        _0x1592e0(this, "sprite", undefined);
        _0x1592e0(this, "scale", undefined);
        _0x1592e0(this, "tickId", undefined);
        _0x1592e0(this, "active", undefined);
        _0x1592e0(this, "color", undefined);
        _0x1592e0(this, "offsets", undefined);
        _0x1592e0(this, "vectors", undefined);
        this.sprite = _0x273217.sprite;
        this.scale = _0x273217.scale;
        this.color = _0x273217.color;
        this.offsets = _0x273217.offsets;
        this.vectors = _0x53cb3c;
      }
      _0xeb2f93(_0x1b6ae5, [{
        key: "enable",
        value: function _0x25c9b4() {
          var _0x38a42d = this;
          if (this.active) {
            return;
          }
          this.active = true;
          this.tickId = setTick(function () {
            _0x4d8d60(_0x38a42d.vectors, _0x38a42d.sprite, _0x38a42d.scale, _0x38a42d.offsets, _0x38a42d.color);
          });
        }
      }, {
        key: "disable",
        value: function _0x44e314() {
          if (!this.active) {
            return;
          }
          this.active = false;
          clearTick(this.tickId);
        }
      }]);
      return _0x1b6ae5;
    }();
    ;
    function _0x555ce4(_0x137e0b) {
      if (_0x137e0b === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x137e0b;
    }
    function _0x15580c(_0x3298c9, _0x24f476, _0x598227, _0xfb145, _0x503d7a, _0x276488, _0x46687c) {
      try {
        var _0x477aae = _0x3298c9[_0x276488](_0x46687c);
        var _0x590c6d = _0x477aae.value;
      } catch (_0x11db29) {
        _0x598227(_0x11db29);
        return;
      }
      if (_0x477aae.done) {
        _0x24f476(_0x590c6d);
      } else {
        Promise.resolve(_0x590c6d).then(_0xfb145, _0x503d7a);
      }
    }
    function _0x1395a0(_0xd0dd47) {
      return function () {
        var _0xe97b0d = this;
        var _0x1fd43d = arguments;
        return new Promise(function (_0x4da40d, _0x309817) {
          var _0x24d9bf = _0xd0dd47.apply(_0xe97b0d, _0x1fd43d);
          function _0x4d616a(_0x4c3748) {
            _0x15580c(_0x24d9bf, _0x4da40d, _0x309817, _0x4d616a, _0x1218d4, "next", _0x4c3748);
          }
          function _0x1218d4(_0x32c031) {
            _0x15580c(_0x24d9bf, _0x4da40d, _0x309817, _0x4d616a, _0x1218d4, "throw", _0x32c031);
          }
          _0x4d616a(undefined);
        });
      };
    }
    function _0x41d10b(_0x170180, _0x3fea23) {
      if (!(_0x170180 instanceof _0x3fea23)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x94c73c(_0x448adb, _0x1ddf86) {
      for (var _0x13e587 = 0; _0x13e587 < _0x1ddf86.length; _0x13e587++) {
        var _0x23dfe2 = _0x1ddf86[_0x13e587];
        _0x23dfe2.enumerable = _0x23dfe2.enumerable || false;
        _0x23dfe2.configurable = true;
        if ("value" in _0x23dfe2) {
          _0x23dfe2.writable = true;
        }
        Object.defineProperty(_0x448adb, _0x23dfe2.key, _0x23dfe2);
      }
    }
    function _0x52dfe4(_0x13f518, _0x390ab7, _0x823a5c) {
      if (_0x390ab7) {
        _0x94c73c(_0x13f518.prototype, _0x390ab7);
      }
      if (_0x823a5c) {
        _0x94c73c(_0x13f518, _0x823a5c);
      }
      return _0x13f518;
    }
    function _0x565b13(_0x19f739, _0x2e7147, _0x41babf) {
      if (_0x2e7147 in _0x19f739) {
        var _0xd3bad = {
          value: _0x41babf,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x19f739, _0x2e7147, _0xd3bad);
      } else {
        _0x19f739[_0x2e7147] = _0x41babf;
      }
      return _0x19f739;
    }
    function _0x4c2a0e(_0x2bdd81) {
      _0x4c2a0e = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x447a70(_0x1613ab) {
        return _0x1613ab.__proto__ || Object.getPrototypeOf(_0x1613ab);
      };
      return _0x4c2a0e(_0x2bdd81);
    }
    function _0x5f2458(_0x528d34, _0x2de67a) {
      if (typeof _0x2de67a !== "function" && _0x2de67a !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x528d34.prototype = Object.create(_0x2de67a && _0x2de67a.prototype, {
        constructor: {
          value: _0x528d34,
          writable: true,
          configurable: true
        }
      });
      if (_0x2de67a) {
        _0x299fba(_0x528d34, _0x2de67a);
      }
    }
    function _0x11886d(_0x1b0158, _0xb3bcd3) {
      if (_0xb3bcd3 && (_0x4a0c0a(_0xb3bcd3) === "object" || typeof _0xb3bcd3 === "function")) {
        return _0xb3bcd3;
      }
      return _0x555ce4(_0x1b0158);
    }
    function _0x299fba(_0x9796bf, _0x233c48) {
      _0x299fba = Object.setPrototypeOf || function _0x515a67(_0x1e4f49, _0x2b473f) {
        _0x1e4f49.__proto__ = _0x2b473f;
        return _0x1e4f49;
      };
      return _0x299fba(_0x9796bf, _0x233c48);
    }
    function _0x4a0c0a(_0x2c6f0c) {
      '@swc/helpers - typeof';

      if (_0x2c6f0c && typeof Symbol !== "undefined" && _0x2c6f0c.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x2c6f0c;
      }
    }
    function _0x254e98() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x41c1ad) {
        return false;
      }
    }
    function _0x406be5(_0x393e82) {
      var _0x4e6a1a = _0x254e98();
      return function _0x278666() {
        var _0x4068e7 = _0x4c2a0e(_0x393e82);
        var _0x39d8b2;
        if (_0x4e6a1a) {
          var _0x106b75 = _0x4c2a0e(this).constructor;
          _0x39d8b2 = Reflect.construct(_0x4068e7, arguments, _0x106b75);
        } else {
          _0x39d8b2 = _0x4068e7.apply(this, arguments);
        }
        return _0x11886d(this, _0x39d8b2);
      };
    }
    function _0x36d929(_0x5f39ce, _0x51a35e) {
      var _0x1e01e1;
      var _0x254c44;
      var _0x25978a;
      var _0x202de9;
      var _0x2aea1c = {
        label: 0,
        sent: function () {
          if (_0x25978a[0] & 1) {
            throw _0x25978a[1];
          }
          return _0x25978a[1];
        },
        trys: [],
        ops: []
      };
      _0x202de9 = {
        next: _0x51803c(0),
        throw: _0x51803c(1),
        return: _0x51803c(2)
      };
      if (typeof Symbol === "function") {
        _0x202de9[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x202de9;
      function _0x51803c(_0x990d12) {
        return function (_0x5033e4) {
          return _0x2d596b([_0x990d12, _0x5033e4]);
        };
      }
      function _0x2d596b(_0x50157a) {
        if (_0x1e01e1) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2aea1c) {
          try {
            _0x1e01e1 = 1;
            if (_0x254c44 && (_0x25978a = _0x50157a[0] & 2 ? _0x254c44.return : _0x50157a[0] ? _0x254c44.throw || ((_0x25978a = _0x254c44.return) && _0x25978a.call(_0x254c44), 0) : _0x254c44.next) && !(_0x25978a = _0x25978a.call(_0x254c44, _0x50157a[1])).done) {
              return _0x25978a;
            }
            _0x254c44 = 0;
            if (_0x25978a) {
              _0x50157a = [_0x50157a[0] & 2, _0x25978a.value];
            }
            switch (_0x50157a[0]) {
              case 0:
              case 1:
                _0x25978a = _0x50157a;
                break;
              case 4:
                _0x2aea1c.label++;
                var _0x2730de = {
                  value: _0x50157a[1],
                  done: false
                };
                return _0x2730de;
              case 5:
                _0x2aea1c.label++;
                _0x254c44 = _0x50157a[1];
                _0x50157a = [0];
                continue;
              case 7:
                _0x50157a = _0x2aea1c.ops.pop();
                _0x2aea1c.trys.pop();
                continue;
              default:
                if (!(_0x25978a = _0x2aea1c.trys, _0x25978a = _0x25978a.length > 0 && _0x25978a[_0x25978a.length - 1]) && (_0x50157a[0] === 6 || _0x50157a[0] === 2)) {
                  _0x2aea1c = 0;
                  continue;
                }
                if (_0x50157a[0] === 3 && (!_0x25978a || _0x50157a[1] > _0x25978a[0] && _0x50157a[1] < _0x25978a[3])) {
                  _0x2aea1c.label = _0x50157a[1];
                  break;
                }
                if (_0x50157a[0] === 6 && _0x2aea1c.label < _0x25978a[1]) {
                  _0x2aea1c.label = _0x25978a[1];
                  _0x25978a = _0x50157a;
                  break;
                }
                if (_0x25978a && _0x2aea1c.label < _0x25978a[2]) {
                  _0x2aea1c.label = _0x25978a[2];
                  _0x2aea1c.ops.push(_0x50157a);
                  break;
                }
                if (_0x25978a[2]) {
                  _0x2aea1c.ops.pop();
                }
                _0x2aea1c.trys.pop();
                continue;
            }
            _0x50157a = _0x51a35e.call(_0x5f39ce, _0x2aea1c);
          } catch (_0x2c2799) {
            _0x50157a = [6, _0x2c2799];
            _0x254c44 = 0;
          } finally {
            _0x1e01e1 = _0x25978a = 0;
          }
        }
        if (_0x50157a[0] & 5) {
          throw _0x50157a[1];
        }
        var _0xc490b0 = {
          value: _0x50157a[0] ? _0x50157a[1] : undefined,
          done: true
        };
        return _0xc490b0;
      }
    }
    var _0x157224 = function (_0xb1b092) {
      'use strict';

      _0x5f2458(_0x2cd56c, _0xb1b092);
      var _0x101607 = _0x406be5(_0x2cd56c);
      function _0x2cd56c(_0x52fa83, _0x1ff637) {
        _0x41d10b(this, _0x2cd56c);
        var _0x302c2d;
        _0x302c2d = _0x101607.call(this);
        _0x565b13(_0x555ce4(_0x302c2d), "type", undefined);
        _0x565b13(_0x555ce4(_0x302c2d), "key", undefined);
        _0x565b13(_0x555ce4(_0x302c2d), "tickId", undefined);
        _0x565b13(_0x555ce4(_0x302c2d), "active", undefined);
        _0x565b13(_0x555ce4(_0x302c2d), "data", undefined);
        _0x565b13(_0x555ce4(_0x302c2d), "vehicle", undefined);
        _0x565b13(_0x555ce4(_0x302c2d), "weapon", undefined);
        _0x302c2d.type = _0x52fa83.type;
        _0x302c2d.key = _0x52fa83.key;
        _0x302c2d.vehicle = _0x52fa83.vehicle;
        _0x302c2d.weapon = _0x52fa83.vehicle;
        _0x302c2d.data = _0x1ff637;
        return _0x302c2d;
      }
      _0x52dfe4(_0x2cd56c, [{
        key: "enable",
        value: function _0x43c4ca() {
          if (this.active) {
            return;
          }
          this.active = true;
          var _0x53101a = this;
          this.tickId = setTick(_0x1395a0(function () {
            return _0x36d929(this, function (_0x3456b) {
              switch (_0x3456b.label) {
                case 0:
                  if (_0x53101a.type !== "interact" || !IsDisabledControlJustReleased(0, _0x53101a.key)) {
                    return [3, 2];
                  }
                  _0x53101a.emit("trigger", _0x53101a.isValid());
                  return [4, _0x465fb3(500)];
                case 1:
                  _0x3456b.sent();
                  return [3, 6];
                case 2:
                  if (_0x53101a.type !== "area") {
                    return [3, 4];
                  }
                  _0x53101a.emit("trigger", _0x53101a.isValid());
                  return [4, _0x465fb3(500)];
                case 3:
                  _0x3456b.sent();
                  return [3, 6];
                case 4:
                  if (_0x53101a.type !== "vehicle") {
                    return [3, 6];
                  }
                  _0x53101a.emit("trigger", _0x53101a.isValid());
                  return [4, _0x465fb3(1000)];
                case 5:
                  _0x3456b.sent();
                  _0x3456b.label = 6;
                case 6:
                  return [2];
              }
            });
          }));
        }
      }, {
        key: "disable",
        value: function _0x4a94c8() {
          if (!this.active) {
            return;
          }
          this.active = false;
          clearTick(this.tickId);
        }
      }, {
        key: "isValid",
        value: function _0x11321a() {
          var _0x374200 = true;
          var _0x936cbb = PlayerPedId();
          if (this.weapon && this.weapon.enforce) {
            var _0x4efe20 = IsPedArmed(_0x936cbb, 7);
            if (_0x4efe20 && !this.weapon.wanted) {
              _0x374200 = false;
            } else if (!_0x4efe20 && this.weapon.wanted) {
              _0x374200 = false;
            }
          }
          if (this.vehicle && this.vehicle.enforce) {
            var _0x2fa562 = IsPedInAnyVehicle(_0x936cbb, false);
            if (_0x2fa562 && !this.vehicle.wanted) {
              _0x374200 = false;
            } else if (!_0x2fa562 && this.vehicle.wanted) {
              _0x374200 = false;
            } else if (_0x2fa562 && this.vehicle.reference) {
              var _0x2d8319 = GetVehiclePedIsIn(PlayerPedId(), false);
              var _0x1cfd16 = this.data.references.get(this.vehicle.reference);
              if (_0x1cfd16 && _0x1cfd16.data.handle) {
                _0x374200 = _0x1cfd16.handle === _0x2d8319;
              } else if (_0x1cfd16 && _0x1cfd16.netId) {
                _0x374200 = _0x1cfd16.data.netId === NetworkGetNetworkIdFromEntity(_0x2d8319);
              } else if (_0x1cfd16 && _0x1cfd16.settings.model) {
                _0x374200 = GetHashKey(_0x1cfd16.settings.model) === GetEntityModel(_0x2d8319);
              } else if (_0x1cfd16 && _0x1cfd16.settings.stolen) {
                _0x374200 = exports["np-flags"].HasVehicleFlag(_0x2d8319, "isStolenVehicle");
              }
            }
          }
          return _0x374200;
        }
      }]);
      return _0x2cd56c;
    }(_0x1ba36b.EventEmitter);
    ;
    function _0x18471e(_0x1b628d) {
      if (_0x1b628d === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x1b628d;
    }
    function _0x492aef(_0x48e9ed, _0x58d26a, _0x2af55c, _0x10b810, _0x276afb, _0x175cc6, _0x2692d0) {
      try {
        var _0x567b7c = _0x48e9ed[_0x175cc6](_0x2692d0);
        var _0x342d12 = _0x567b7c.value;
      } catch (_0x2521b9) {
        _0x2af55c(_0x2521b9);
        return;
      }
      if (_0x567b7c.done) {
        _0x58d26a(_0x342d12);
      } else {
        Promise.resolve(_0x342d12).then(_0x10b810, _0x276afb);
      }
    }
    function _0x14e590(_0x2a4f8a) {
      return function () {
        var _0x3a6e72 = this;
        var _0x1b9222 = arguments;
        return new Promise(function (_0x3d56a0, _0x31e652) {
          var _0x44998a = _0x2a4f8a.apply(_0x3a6e72, _0x1b9222);
          function _0x333a25(_0x4f3388) {
            _0x492aef(_0x44998a, _0x3d56a0, _0x31e652, _0x333a25, _0x30b7fa, "next", _0x4f3388);
          }
          function _0x30b7fa(_0x5c223e) {
            _0x492aef(_0x44998a, _0x3d56a0, _0x31e652, _0x333a25, _0x30b7fa, "throw", _0x5c223e);
          }
          _0x333a25(undefined);
        });
      };
    }
    function _0x276b38(_0x2dc704, _0x2aa264) {
      if (!(_0x2dc704 instanceof _0x2aa264)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x107a7b(_0x1d8206, _0x5c406f) {
      for (var _0x3dca09 = 0; _0x3dca09 < _0x5c406f.length; _0x3dca09++) {
        var _0xc375f7 = _0x5c406f[_0x3dca09];
        _0xc375f7.enumerable = _0xc375f7.enumerable || false;
        _0xc375f7.configurable = true;
        if ("value" in _0xc375f7) {
          _0xc375f7.writable = true;
        }
        Object.defineProperty(_0x1d8206, _0xc375f7.key, _0xc375f7);
      }
    }
    function _0xd38509(_0x340372, _0x171e16, _0x2b4deb) {
      if (_0x171e16) {
        _0x107a7b(_0x340372.prototype, _0x171e16);
      }
      if (_0x2b4deb) {
        _0x107a7b(_0x340372, _0x2b4deb);
      }
      return _0x340372;
    }
    function _0x393995(_0x343644, _0x2f2e57, _0x494907) {
      if (_0x2f2e57 in _0x343644) {
        var _0x43e760 = {
          value: _0x494907,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x343644, _0x2f2e57, _0x43e760);
      } else {
        _0x343644[_0x2f2e57] = _0x494907;
      }
      return _0x343644;
    }
    function _0xcce928(_0x54fda2) {
      _0xcce928 = Object.setPrototypeOf ? Object.getPrototypeOf : function _0xf2159b(_0x3e0926) {
        return _0x3e0926.__proto__ || Object.getPrototypeOf(_0x3e0926);
      };
      return _0xcce928(_0x54fda2);
    }
    function _0x15536f(_0xe4cd1, _0x1f2adf) {
      if (typeof _0x1f2adf !== "function" && _0x1f2adf !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0xe4cd1.prototype = Object.create(_0x1f2adf && _0x1f2adf.prototype, {
        constructor: {
          value: _0xe4cd1,
          writable: true,
          configurable: true
        }
      });
      if (_0x1f2adf) {
        _0x444fda(_0xe4cd1, _0x1f2adf);
      }
    }
    function _0x1cf933(_0x27610a, _0xe1823f) {
      if (_0xe1823f && (_0x14e34f(_0xe1823f) === "object" || typeof _0xe1823f === "function")) {
        return _0xe1823f;
      }
      return _0x18471e(_0x27610a);
    }
    function _0x444fda(_0x2ed913, _0xc2129d) {
      _0x444fda = Object.setPrototypeOf || function _0x15ae16(_0x2c53e5, _0x5cfec7) {
        _0x2c53e5.__proto__ = _0x5cfec7;
        return _0x2c53e5;
      };
      return _0x444fda(_0x2ed913, _0xc2129d);
    }
    function _0x14e34f(_0x2daeaf) {
      '@swc/helpers - typeof';

      if (_0x2daeaf && typeof Symbol !== "undefined" && _0x2daeaf.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x2daeaf;
      }
    }
    function _0x39add9() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x351dca) {
        return false;
      }
    }
    function _0x436678(_0x3e8834) {
      var _0x35f672 = _0x39add9();
      return function _0x31f1e3() {
        var _0x3ea2be = _0xcce928(_0x3e8834);
        var _0x16555b;
        if (_0x35f672) {
          var _0x41f924 = _0xcce928(this).constructor;
          _0x16555b = Reflect.construct(_0x3ea2be, arguments, _0x41f924);
        } else {
          _0x16555b = _0x3ea2be.apply(this, arguments);
        }
        return _0x1cf933(this, _0x16555b);
      };
    }
    function _0x221a65(_0x5fff37, _0x3590a3) {
      var _0x4ec058;
      var _0x454726;
      var _0x352294;
      var _0xfeff2a;
      var _0x4b7ac4 = {
        label: 0,
        sent: function () {
          if (_0x352294[0] & 1) {
            throw _0x352294[1];
          }
          return _0x352294[1];
        },
        trys: [],
        ops: []
      };
      _0xfeff2a = {
        next: _0x3bfd32(0),
        throw: _0x3bfd32(1),
        return: _0x3bfd32(2)
      };
      if (typeof Symbol === "function") {
        _0xfeff2a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0xfeff2a;
      function _0x3bfd32(_0x3e5a61) {
        return function (_0x2b80e7) {
          return _0x186aef([_0x3e5a61, _0x2b80e7]);
        };
      }
      function _0x186aef(_0x29c5af) {
        if (_0x4ec058) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4b7ac4) {
          try {
            _0x4ec058 = 1;
            if (_0x454726 && (_0x352294 = _0x29c5af[0] & 2 ? _0x454726.return : _0x29c5af[0] ? _0x454726.throw || ((_0x352294 = _0x454726.return) && _0x352294.call(_0x454726), 0) : _0x454726.next) && !(_0x352294 = _0x352294.call(_0x454726, _0x29c5af[1])).done) {
              return _0x352294;
            }
            _0x454726 = 0;
            if (_0x352294) {
              _0x29c5af = [_0x29c5af[0] & 2, _0x352294.value];
            }
            switch (_0x29c5af[0]) {
              case 0:
              case 1:
                _0x352294 = _0x29c5af;
                break;
              case 4:
                _0x4b7ac4.label++;
                var _0x47d9b4 = {
                  value: _0x29c5af[1],
                  done: false
                };
                return _0x47d9b4;
              case 5:
                _0x4b7ac4.label++;
                _0x454726 = _0x29c5af[1];
                _0x29c5af = [0];
                continue;
              case 7:
                _0x29c5af = _0x4b7ac4.ops.pop();
                _0x4b7ac4.trys.pop();
                continue;
              default:
                if (!(_0x352294 = _0x4b7ac4.trys, _0x352294 = _0x352294.length > 0 && _0x352294[_0x352294.length - 1]) && (_0x29c5af[0] === 6 || _0x29c5af[0] === 2)) {
                  _0x4b7ac4 = 0;
                  continue;
                }
                if (_0x29c5af[0] === 3 && (!_0x352294 || _0x29c5af[1] > _0x352294[0] && _0x29c5af[1] < _0x352294[3])) {
                  _0x4b7ac4.label = _0x29c5af[1];
                  break;
                }
                if (_0x29c5af[0] === 6 && _0x4b7ac4.label < _0x352294[1]) {
                  _0x4b7ac4.label = _0x352294[1];
                  _0x352294 = _0x29c5af;
                  break;
                }
                if (_0x352294 && _0x4b7ac4.label < _0x352294[2]) {
                  _0x4b7ac4.label = _0x352294[2];
                  _0x4b7ac4.ops.push(_0x29c5af);
                  break;
                }
                if (_0x352294[2]) {
                  _0x4b7ac4.ops.pop();
                }
                _0x4b7ac4.trys.pop();
                continue;
            }
            _0x29c5af = _0x3590a3.call(_0x5fff37, _0x4b7ac4);
          } catch (_0x4e3766) {
            _0x29c5af = [6, _0x4e3766];
            _0x454726 = 0;
          } finally {
            _0x4ec058 = _0x352294 = 0;
          }
        }
        if (_0x29c5af[0] & 5) {
          throw _0x29c5af[1];
        }
        var _0x3c899f = {
          value: _0x29c5af[0] ? _0x29c5af[1] : undefined,
          done: true
        };
        return _0x3c899f;
      }
    }
    var _0x5883a4 = function (_0x339531) {
      'use strict';

      _0x15536f(_0x13d31b, _0x339531);
      var _0x4d4d85 = _0x436678(_0x13d31b);
      function _0x13d31b(_0x2d6a35, _0x1034a6) {
        _0x276b38(this, _0x13d31b);
        var _0xbf3274;
        _0xbf3274 = _0x4d4d85.call(this);
        _0x393995(_0x18471e(_0xbf3274), "current", undefined);
        _0x393995(_0x18471e(_0xbf3274), "active", undefined);
        _0x393995(_0x18471e(_0xbf3274), "tickId", undefined);
        _0x393995(_0x18471e(_0xbf3274), "origin", undefined);
        _0x393995(_0x18471e(_0xbf3274), "target", undefined);
        _0x393995(_0x18471e(_0xbf3274), "checks", undefined);
        _0xbf3274.origin = _0x2d6a35;
        _0xbf3274.target = _0x1034a6;
        _0xbf3274.checks = new Map();
        return _0xbf3274;
      }
      _0xd38509(_0x13d31b, [{
        key: "addCheck",
        value: function _0x3b6883(_0xa0987e, _0x73ff93) {
          var _0x396900 = {
            wanted: _0x73ff93,
            notified: false
          };
          this.checks.set(_0xa0987e, _0x396900);
        }
      }, {
        key: "removeCheck",
        value: function _0x3df541(_0x43d4fe) {
          this.checks.delete(_0x43d4fe);
        }
      }, {
        key: "inDistance",
        value: function _0x502298(_0x4cd6e0) {
          var _0x1a3e72 = typeof _0x4cd6e0 == "string" ? this.checks.get(_0x4cd6e0) : _0x4cd6e0;
          if (_0x1a3e72) {
            return this.current <= _0x1a3e72.wanted;
          }
        }
      }, {
        key: "enable",
        value: function _0xf56325(_0x2b1fd4 = 0) {
          if (this.active) {
            return;
          }
          this.active = true;
          var _0x587b46 = this;
          this.tickId = setTick(_0x14e590(function () {
            return _0x221a65(this, function (_0x2802ec) {
              switch (_0x2802ec.label) {
                case 0:
                  _0x587b46.current = typeof _0x587b46.target == "string" ? GetNameOfZone(_0x587b46.origin.x, _0x587b46.origin.y, _0x587b46.origin.z) : _0x587b46.origin.getDistance(_0x587b46.target);
                  _0x587b46.checks.forEach(function (_0x274cc8, _0x230bc2) {
                    var _0x41a900 = typeof _0x274cc8.wanted == "number" ? _0x587b46.inDistance(_0x274cc8) : _0x587b46.current == _0x587b46.target;
                    if (_0x41a900 && !_0x274cc8.notified) {
                      _0x274cc8.notified = true;
                      _0x587b46.emit(_0x230bc2, true, _0x587b46.current);
                    } else if (!_0x41a900 && _0x274cc8.notified) {
                      _0x274cc8.notified = false;
                      _0x587b46.emit(_0x230bc2, false, _0x587b46.current);
                    }
                  });
                  return [4, Wait(_0x2b1fd4)];
                case 1:
                  _0x2802ec.sent();
                  return [2];
              }
            });
          }));
        }
      }, {
        key: "disable",
        value: function _0x43ba40() {
          if (!this.active) {
            return;
          }
          this.active = false;
          clearTick(this.tickId);
        }
      }]);
      return _0x13d31b;
    }(_0x1ba36b.EventEmitter);
    ;
    function _0x55b024(_0x50466f, _0x3a0e41) {
      if (!(_0x50466f instanceof _0x3a0e41)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x2add66(_0x263de2, _0x3be3e4) {
      for (var _0x1b45e9 = 0; _0x1b45e9 < _0x3be3e4.length; _0x1b45e9++) {
        var _0x1b266c = _0x3be3e4[_0x1b45e9];
        _0x1b266c.enumerable = _0x1b266c.enumerable || false;
        _0x1b266c.configurable = true;
        if ("value" in _0x1b266c) {
          _0x1b266c.writable = true;
        }
        Object.defineProperty(_0x263de2, _0x1b266c.key, _0x1b266c);
      }
    }
    function _0x1ff52c(_0x26d6ac, _0x134ca6, _0x538201) {
      if (_0x134ca6) {
        _0x2add66(_0x26d6ac.prototype, _0x134ca6);
      }
      if (_0x538201) {
        _0x2add66(_0x26d6ac, _0x538201);
      }
      return _0x26d6ac;
    }
    function _0x262f4d(_0x39db78, _0x317d01, _0x1f7b2a) {
      if (_0x317d01 in _0x39db78) {
        var _0x87d0ae = {
          value: _0x1f7b2a,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x39db78, _0x317d01, _0x87d0ae);
      } else {
        _0x39db78[_0x317d01] = _0x1f7b2a;
      }
      return _0x39db78;
    }
    var _0x20ea7c = function () {
      'use strict';

      function _0x192945(_0x52a767, _0x1c2f4f) {
        _0x55b024(this, _0x192945);
        _0x262f4d(this, "type", undefined);
        _0x262f4d(this, "mode", undefined);
        _0x262f4d(this, "text", undefined);
        _0x262f4d(this, "tickId", undefined);
        _0x262f4d(this, "active", undefined);
        _0x262f4d(this, "vectors", undefined);
        _0x262f4d(this, "offsets", undefined);
        this.type = _0x52a767.type;
        this.mode = _0x52a767.mode;
        this.text = _0x52a767.text;
        this.offsets = _0x52a767.offsets || {
          x: 0,
          y: 0,
          z: 0
        };
        this.vectors = _0x1c2f4f;
      }
      _0x1ff52c(_0x192945, [{
        key: "enable",
        value: function _0x21ed26() {
          var _0xe3f05b = this;
          if (this.active) {
            return;
          }
          this.active = true;
          if (this.type === "floating") {
            this.tickId = setTick(function () {
              _0x59e02a(_0xe3f05b.vectors, _0xe3f05b.text, _0xe3f05b.offsets);
            });
          } else {
            var _0x2cdd05 = {
              message: this.text,
              show: true,
              type: this.mode
            };
            var _0x3633c1 = {
              app: "interactions",
              data: _0x2cdd05,
              source: "np-nui"
            };
            _0x1a6d35(_0x3633c1);
          }
        }
      }, {
        key: "disable",
        value: function _0x55e455() {
          if (!this.active) {
            return;
          }
          this.active = false;
          if (this.type === "floating") {
            clearTick(this.tickId);
          } else {
            _0x1a6d35({
              app: "interactions",
              data: {
                show: false
              },
              source: "np-nui"
            });
          }
        }
      }]);
      return _0x192945;
    }();
    ;
    ;
    function _0x223b48(_0x439609, _0x49973d, _0x2143ab, _0x8fdca8, _0x163fc9, _0x1e2523, _0x1c9e7e) {
      try {
        var _0x88d534 = _0x439609[_0x1e2523](_0x1c9e7e);
        var _0x1ed940 = _0x88d534.value;
      } catch (_0x3b34cd) {
        _0x2143ab(_0x3b34cd);
        return;
      }
      if (_0x88d534.done) {
        _0x49973d(_0x1ed940);
      } else {
        Promise.resolve(_0x1ed940).then(_0x8fdca8, _0x163fc9);
      }
    }
    function _0x436941(_0x3075ae) {
      return function () {
        var _0x574c79 = this;
        var _0x302eeb = arguments;
        return new Promise(function (_0x38a35d, _0x2057c2) {
          var _0x689b86 = _0x3075ae.apply(_0x574c79, _0x302eeb);
          function _0xf1d5b9(_0x123c3d) {
            _0x223b48(_0x689b86, _0x38a35d, _0x2057c2, _0xf1d5b9, _0x4d9208, "next", _0x123c3d);
          }
          function _0x4d9208(_0x49f8da) {
            _0x223b48(_0x689b86, _0x38a35d, _0x2057c2, _0xf1d5b9, _0x4d9208, "throw", _0x49f8da);
          }
          _0xf1d5b9(undefined);
        });
      };
    }
    function _0x328ba8(_0x1c7dd3, _0xc98014) {
      var _0x142ce2;
      var _0x4f637b;
      var _0x1ca95d;
      var _0x3515ce;
      var _0x4bc244 = {
        label: 0,
        sent: function () {
          if (_0x1ca95d[0] & 1) {
            throw _0x1ca95d[1];
          }
          return _0x1ca95d[1];
        },
        trys: [],
        ops: []
      };
      _0x3515ce = {
        next: _0x2a78b4(0),
        throw: _0x2a78b4(1),
        return: _0x2a78b4(2)
      };
      if (typeof Symbol === "function") {
        _0x3515ce[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3515ce;
      function _0x2a78b4(_0x4a7da6) {
        return function (_0x11e65f) {
          return _0x5b80bb([_0x4a7da6, _0x11e65f]);
        };
      }
      function _0x5b80bb(_0x46da75) {
        if (_0x142ce2) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4bc244) {
          try {
            _0x142ce2 = 1;
            if (_0x4f637b && (_0x1ca95d = _0x46da75[0] & 2 ? _0x4f637b.return : _0x46da75[0] ? _0x4f637b.throw || ((_0x1ca95d = _0x4f637b.return) && _0x1ca95d.call(_0x4f637b), 0) : _0x4f637b.next) && !(_0x1ca95d = _0x1ca95d.call(_0x4f637b, _0x46da75[1])).done) {
              return _0x1ca95d;
            }
            _0x4f637b = 0;
            if (_0x1ca95d) {
              _0x46da75 = [_0x46da75[0] & 2, _0x1ca95d.value];
            }
            switch (_0x46da75[0]) {
              case 0:
              case 1:
                _0x1ca95d = _0x46da75;
                break;
              case 4:
                _0x4bc244.label++;
                var _0x12d5c3 = {
                  value: _0x46da75[1],
                  done: false
                };
                return _0x12d5c3;
              case 5:
                _0x4bc244.label++;
                _0x4f637b = _0x46da75[1];
                _0x46da75 = [0];
                continue;
              case 7:
                _0x46da75 = _0x4bc244.ops.pop();
                _0x4bc244.trys.pop();
                continue;
              default:
                if (!(_0x1ca95d = _0x4bc244.trys, _0x1ca95d = _0x1ca95d.length > 0 && _0x1ca95d[_0x1ca95d.length - 1]) && (_0x46da75[0] === 6 || _0x46da75[0] === 2)) {
                  _0x4bc244 = 0;
                  continue;
                }
                if (_0x46da75[0] === 3 && (!_0x1ca95d || _0x46da75[1] > _0x1ca95d[0] && _0x46da75[1] < _0x1ca95d[3])) {
                  _0x4bc244.label = _0x46da75[1];
                  break;
                }
                if (_0x46da75[0] === 6 && _0x4bc244.label < _0x1ca95d[1]) {
                  _0x4bc244.label = _0x1ca95d[1];
                  _0x1ca95d = _0x46da75;
                  break;
                }
                if (_0x1ca95d && _0x4bc244.label < _0x1ca95d[2]) {
                  _0x4bc244.label = _0x1ca95d[2];
                  _0x4bc244.ops.push(_0x46da75);
                  break;
                }
                if (_0x1ca95d[2]) {
                  _0x4bc244.ops.pop();
                }
                _0x4bc244.trys.pop();
                continue;
            }
            _0x46da75 = _0xc98014.call(_0x1c7dd3, _0x4bc244);
          } catch (_0x14610d) {
            _0x46da75 = [6, _0x14610d];
            _0x4f637b = 0;
          } finally {
            _0x142ce2 = _0x1ca95d = 0;
          }
        }
        if (_0x46da75[0] & 5) {
          throw _0x46da75[1];
        }
        var _0x5a03d0 = {
          value: _0x46da75[0] ? _0x46da75[1] : undefined,
          done: true
        };
        return _0x5a03d0;
      }
    }
    function _0x593931(_0x3ce0db, _0x8323de) {
      var _0x258d5a = new _0x2d7bf1();
      var _0x138279 = _0x158296.get(_0x3ce0db);
      var _0x414c9f = _0x8323de.settings;
      var _0x5e192a = _0x8323de.objectives;
      _0x258d5a.addThread(_0x436941(function () {
        var _0x4a0555;
        var _0x39bb3c;
        var _0x9aeba2;
        var _0x5dd466;
        var _0x4e40ca;
        var _0x51a56e;
        return _0x328ba8(this, function (_0x58474c) {
          switch (_0x58474c.label) {
            case 0:
              _0x4a0555 = true;
              _0x39bb3c = false;
              _0x9aeba2 = undefined;
              try {
                _0x5dd466 = function () {
                  var _0x1a146d = _0x51a56e.value;
                  if (_0x1a146d.status === "waiting" && _0x5e192a.some(function (_0x87e3dc) {
                    return _0x1a146d.id === _0x87e3dc;
                  })) {
                    var _0x2949f8 = _0x414c9f.attach.attachments.find(function (_0x127cfc) {
                      return _0x127cfc.id === _0x1a146d.id;
                    });
                    if (_0x2949f8) {
                      var _0x3d8b85 = _0x138279.references.get(_0x2949f8.reference);
                      var _0x7d9e26 = _0x138279.references.get(_0x2949f8.target);
                      if (_0x3d8b85 && _0x7d9e26) {
                        var _0x175e9a = GetEntityAttachedTo(_0x3d8b85.handle);
                        if (DoesEntityExist(_0x175e9a) && _0x175e9a === _0x7d9e26.handle) {
                          _0x258d5a.emit("taskEvent", "objectiveCompleted", _0x1a146d.id);
                          SetEntityAsMissionEntity(_0x175e9a, true, true);
                        }
                      }
                    }
                  }
                };
                for (_0x4e40ca = _0x138279.objectives.values()[Symbol.iterator](); !(_0x4a0555 = (_0x51a56e = _0x4e40ca.next()).done); _0x4a0555 = true) {
                  _0x5dd466();
                }
              } catch (_0x1d9e0a) {
                _0x39bb3c = true;
                _0x9aeba2 = _0x1d9e0a;
              } finally {
                try {
                  if (!_0x4a0555 && _0x4e40ca.return != null) {
                    _0x4e40ca.return();
                  }
                } finally {
                  if (_0x39bb3c) {
                    throw _0x9aeba2;
                  }
                }
              }
              return [4, _0x465fb3(1000)];
            case 1:
              _0x58474c.sent();
              return [2];
          }
        });
      }));
      return _0x258d5a;
    }
    function _0x1392aa(_0x50728f, _0x179b33) {
      var _0x14c445 = new _0x2d7bf1();
      var _0x42fb5a = _0x158296.get(_0x50728f);
      var _0x3703ef = _0x179b33.settings;
      var _0x251273 = _0x179b33.objectives;
      _0x14c445.addThread(_0x436941(function () {
        var _0x4c8a8d;
        var _0x168902;
        var _0xc88e5d;
        var _0x28671e;
        var _0x5532ac;
        var _0x1d9d3c;
        return _0x328ba8(this, function (_0x1913e3) {
          switch (_0x1913e3.label) {
            case 0:
              _0x4c8a8d = true;
              _0x168902 = false;
              _0xc88e5d = undefined;
              try {
                _0x28671e = function () {
                  var _0x4170e8 = _0x1d9d3c.value;
                  if (_0x4170e8.status === "waiting" && _0x251273.some(function (_0x56e75a) {
                    return _0x4170e8.id === _0x56e75a;
                  })) {
                    var _0xd9bf3b = _0x3703ef.attach.attachments.find(function (_0x3c962d) {
                      return _0x3c962d.id === _0x4170e8.id;
                    });
                    if (_0xd9bf3b) {
                      var _0x4f2476 = _0x42fb5a.references.get(_0xd9bf3b.reference);
                      var _0x20f976 = _0x42fb5a.references.get(_0xd9bf3b.target);
                      if (_0x4f2476 && _0x20f976) {
                        if (!IsEntityAttachedToEntity(_0x4f2476.handle, _0x20f976.handle)) {
                          _0x14c445.emit("taskEvent", "objectiveCompleted", _0x4170e8.id);
                        }
                      }
                    }
                  }
                };
                for (_0x5532ac = _0x42fb5a.objectives.values()[Symbol.iterator](); !(_0x4c8a8d = (_0x1d9d3c = _0x5532ac.next()).done); _0x4c8a8d = true) {
                  _0x28671e();
                }
              } catch (_0x3dfaf0) {
                _0x168902 = true;
                _0xc88e5d = _0x3dfaf0;
              } finally {
                try {
                  if (!_0x4c8a8d && _0x5532ac.return != null) {
                    _0x5532ac.return();
                  }
                } finally {
                  if (_0x168902) {
                    throw _0xc88e5d;
                  }
                }
              }
              return [4, _0x465fb3(1000)];
            case 1:
              _0x1913e3.sent();
              return [2];
          }
        });
      }));
      return _0x14c445;
    }
    ;
    var _0x472397 = new Map();
    var _0x4b40bf = new Map();
    on("np:infinity:player:coords:array", function (_0x57cf34) {
      _0x472397 = _0x13dfa4(_0x57cf34);
    });
    on("np:infinity:entity:coords:array", function (_0x592f77, _0x2fd85f) {
      if (_0x2fd85f) {
        _0x4b40bf.set(_0x592f77, _0x2fd85f);
      } else {
        _0x4b40bf.delete(_0x592f77);
      }
    });
    function _0x3963f0(_0x161a15, _0x1c552d) {
      var _0x104b3e;
      if (_0x161a15 === "player") {
        var _0x5aa4b4 = GetPlayerFromServerId(_0x1c552d);
        _0x104b3e = _0x5aa4b4 === -1 ? _0x472397.get(_0x1c552d) : GetEntityCoords(GetPlayerPed(_0x5aa4b4), false);
      } else {
        var _0x3f76fa = NetworkGetEntityFromNetworkId(_0x1c552d);
        if (DoesEntityExist(_0x3f76fa)) {
          _0x104b3e = GetEntityCoords(_0x3f76fa, false);
        } else {
          _0x104b3e = _0x4b40bf.has(_0x1c552d) ? _0x4b40bf.get(_0x1c552d) : exports["np-infinity"].FetchEntityCoords(_0x1c552d, true);
        }
      }
      return _0x104b3e;
    }
    function _0x2db064(_0x13300e) {
      return exports["np-infinity"].IsPlayerActive(_0x13300e);
    }
    ;
    function _0x504c7b(_0x362cba) {
      if (_0x362cba === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x362cba;
    }
    function _0x3835da(_0x2acee6, _0x3bafe2) {
      if (!(_0x2acee6 instanceof _0x3bafe2)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x429ccd(_0x3174fe, _0x3f41b7) {
      for (var _0x1c6be8 = 0; _0x1c6be8 < _0x3f41b7.length; _0x1c6be8++) {
        var _0x2cb8bb = _0x3f41b7[_0x1c6be8];
        _0x2cb8bb.enumerable = _0x2cb8bb.enumerable || false;
        _0x2cb8bb.configurable = true;
        if ("value" in _0x2cb8bb) {
          _0x2cb8bb.writable = true;
        }
        Object.defineProperty(_0x3174fe, _0x2cb8bb.key, _0x2cb8bb);
      }
    }
    function _0x22da70(_0xa9117b, _0x458a76, _0x52ed8b) {
      if (_0x458a76) {
        _0x429ccd(_0xa9117b.prototype, _0x458a76);
      }
      if (_0x52ed8b) {
        _0x429ccd(_0xa9117b, _0x52ed8b);
      }
      return _0xa9117b;
    }
    function _0x44efd4(_0x2ed920, _0x18159f, _0x1c7fff) {
      if (_0x18159f in _0x2ed920) {
        var _0x3fa66e = {
          value: _0x1c7fff,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x2ed920, _0x18159f, _0x3fa66e);
      } else {
        _0x2ed920[_0x18159f] = _0x1c7fff;
      }
      return _0x2ed920;
    }
    function _0xca7ede(_0x596666) {
      _0xca7ede = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x381312(_0x5308cb) {
        return _0x5308cb.__proto__ || Object.getPrototypeOf(_0x5308cb);
      };
      return _0xca7ede(_0x596666);
    }
    function _0x2328a9(_0x1f2e80, _0x1d42b8) {
      if (typeof _0x1d42b8 !== "function" && _0x1d42b8 !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x1f2e80.prototype = Object.create(_0x1d42b8 && _0x1d42b8.prototype, {
        constructor: {
          value: _0x1f2e80,
          writable: true,
          configurable: true
        }
      });
      if (_0x1d42b8) {
        _0x38e2c7(_0x1f2e80, _0x1d42b8);
      }
    }
    function _0x3c92af(_0x211606, _0x46af63) {
      if (_0x46af63 && (_0x6f5485(_0x46af63) === "object" || typeof _0x46af63 === "function")) {
        return _0x46af63;
      }
      return _0x504c7b(_0x211606);
    }
    function _0x38e2c7(_0x198a53, _0x2ec5e5) {
      _0x38e2c7 = Object.setPrototypeOf || function _0x2def97(_0x3e9c93, _0x4524ee) {
        _0x3e9c93.__proto__ = _0x4524ee;
        return _0x3e9c93;
      };
      return _0x38e2c7(_0x198a53, _0x2ec5e5);
    }
    function _0x6f5485(_0x250574) {
      '@swc/helpers - typeof';

      if (_0x250574 && typeof Symbol !== "undefined" && _0x250574.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x250574;
      }
    }
    function _0x48b36f() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x2a1685) {
        return false;
      }
    }
    function _0x1762c3(_0x6561d9) {
      var _0x19ee42 = _0x48b36f();
      return function _0x3e48a7() {
        var _0x40e584 = _0xca7ede(_0x6561d9);
        var _0x5e115c;
        if (_0x19ee42) {
          var _0x234bd3 = _0xca7ede(this).constructor;
          _0x5e115c = Reflect.construct(_0x40e584, arguments, _0x234bd3);
        } else {
          _0x5e115c = _0x40e584.apply(this, arguments);
        }
        return _0x3c92af(this, _0x5e115c);
      };
    }
    var _0x35f48f = function (_0x3b9c07) {
      'use strict';

      _0x2328a9(_0x29ae87, _0x3b9c07);
      var _0x22a953 = _0x1762c3(_0x29ae87);
      function _0x29ae87(_0xeab530) {
        _0x3835da(this, _0x29ae87);
        var _0x304f08;
        _0x304f08 = _0x22a953.call(this, _0xeab530.id, _0xeab530.type);
        _0x44efd4(_0x504c7b(_0x304f08), "data", undefined);
        _0x44efd4(_0x504c7b(_0x304f08), "settings", undefined);
        _0x304f08.data = _0xeab530.data;
        _0x304f08.settings = _0xeab530.settings;
        return _0x304f08;
      }
      _0x22da70(_0x29ae87, [{
        key: "vectors",
        get: function _0xeb5e02() {
          if (this.data.vectors) {
            return this.data.vectors;
          } else {
            return _0x1f4826.fromObject(this.settings.vectors);
          }
        }
      }, {
        key: "heading",
        get: function _0x1bf9c6() {
          return this.settings.heading;
        }
      }, {
        key: "x",
        get: function _0x1f5b13() {
          return this.vectors.x;
        }
      }, {
        key: "y",
        get: function _0x54e880() {
          return this.vectors.y;
        }
      }, {
        key: "z",
        get: function _0x30e37e() {
          return this.vectors.z;
        }
      }]);
      return _0x29ae87;
    }(_0x39fc66);
    ;
    function _0x3b10cb(_0xadee77, _0x408571, _0x1caf85, _0x15fb5d, _0x14c790, _0x55eb85, _0x37d039) {
      try {
        var _0x426b46 = _0xadee77[_0x55eb85](_0x37d039);
        var _0x19b2cf = _0x426b46.value;
      } catch (_0x482466) {
        _0x1caf85(_0x482466);
        return;
      }
      if (_0x426b46.done) {
        _0x408571(_0x19b2cf);
      } else {
        Promise.resolve(_0x19b2cf).then(_0x15fb5d, _0x14c790);
      }
    }
    function _0x529bcb(_0x501437) {
      return function () {
        var _0x16bc46 = this;
        var _0xdc7ad2 = arguments;
        return new Promise(function (_0x45ff4b, _0x40f7b0) {
          var _0x4d175c = _0x501437.apply(_0x16bc46, _0xdc7ad2);
          function _0x53a515(_0x9a2623) {
            _0x3b10cb(_0x4d175c, _0x45ff4b, _0x40f7b0, _0x53a515, _0x20246a, "next", _0x9a2623);
          }
          function _0x20246a(_0x519fd0) {
            _0x3b10cb(_0x4d175c, _0x45ff4b, _0x40f7b0, _0x53a515, _0x20246a, "throw", _0x519fd0);
          }
          _0x53a515(undefined);
        });
      };
    }
    function _0x4fb601(_0x20a04a, _0x19d767) {
      if (!(_0x20a04a instanceof _0x19d767)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x55ccff(_0x301c77, _0x1ed795) {
      for (var _0x38bc72 = 0; _0x38bc72 < _0x1ed795.length; _0x38bc72++) {
        var _0x4a197b = _0x1ed795[_0x38bc72];
        _0x4a197b.enumerable = _0x4a197b.enumerable || false;
        _0x4a197b.configurable = true;
        if ("value" in _0x4a197b) {
          _0x4a197b.writable = true;
        }
        Object.defineProperty(_0x301c77, _0x4a197b.key, _0x4a197b);
      }
    }
    function _0x244242(_0x443d7b, _0x2ea415, _0x40224e) {
      if (_0x2ea415) {
        _0x55ccff(_0x443d7b.prototype, _0x2ea415);
      }
      if (_0x40224e) {
        _0x55ccff(_0x443d7b, _0x40224e);
      }
      return _0x443d7b;
    }
    function _0x12d9c9(_0x29d319, _0x2fb273, _0x37909e) {
      if (_0x2fb273 in _0x29d319) {
        var _0x17684e = {
          value: _0x37909e,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x29d319, _0x2fb273, _0x17684e);
      } else {
        _0x29d319[_0x2fb273] = _0x37909e;
      }
      return _0x29d319;
    }
    function _0x141349(_0x4b571b, _0xbded67) {
      if (_0xbded67 != null && typeof Symbol !== "undefined" && _0xbded67[Symbol.hasInstance]) {
        return !!_0xbded67[Symbol.hasInstance](_0x4b571b);
      } else {
        return _0x4b571b instanceof _0xbded67;
      }
    }
    function _0x3836d1(_0x194d2a, _0x1df235) {
      var _0x3bed7f;
      var _0x53c0c3;
      var _0x19fd92;
      var _0x541c93;
      var _0x4343be = {
        label: 0,
        sent: function () {
          if (_0x19fd92[0] & 1) {
            throw _0x19fd92[1];
          }
          return _0x19fd92[1];
        },
        trys: [],
        ops: []
      };
      _0x541c93 = {
        next: _0xad0bf5(0),
        throw: _0xad0bf5(1),
        return: _0xad0bf5(2)
      };
      if (typeof Symbol === "function") {
        _0x541c93[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x541c93;
      function _0xad0bf5(_0x1f1b65) {
        return function (_0x6dd6e3) {
          return _0x47dffa([_0x1f1b65, _0x6dd6e3]);
        };
      }
      function _0x47dffa(_0x177495) {
        if (_0x3bed7f) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4343be) {
          try {
            _0x3bed7f = 1;
            if (_0x53c0c3 && (_0x19fd92 = _0x177495[0] & 2 ? _0x53c0c3.return : _0x177495[0] ? _0x53c0c3.throw || ((_0x19fd92 = _0x53c0c3.return) && _0x19fd92.call(_0x53c0c3), 0) : _0x53c0c3.next) && !(_0x19fd92 = _0x19fd92.call(_0x53c0c3, _0x177495[1])).done) {
              return _0x19fd92;
            }
            _0x53c0c3 = 0;
            if (_0x19fd92) {
              _0x177495 = [_0x177495[0] & 2, _0x19fd92.value];
            }
            switch (_0x177495[0]) {
              case 0:
              case 1:
                _0x19fd92 = _0x177495;
                break;
              case 4:
                _0x4343be.label++;
                var _0x136ed4 = {
                  value: _0x177495[1],
                  done: false
                };
                return _0x136ed4;
              case 5:
                _0x4343be.label++;
                _0x53c0c3 = _0x177495[1];
                _0x177495 = [0];
                continue;
              case 7:
                _0x177495 = _0x4343be.ops.pop();
                _0x4343be.trys.pop();
                continue;
              default:
                if (!(_0x19fd92 = _0x4343be.trys, _0x19fd92 = _0x19fd92.length > 0 && _0x19fd92[_0x19fd92.length - 1]) && (_0x177495[0] === 6 || _0x177495[0] === 2)) {
                  _0x4343be = 0;
                  continue;
                }
                if (_0x177495[0] === 3 && (!_0x19fd92 || _0x177495[1] > _0x19fd92[0] && _0x177495[1] < _0x19fd92[3])) {
                  _0x4343be.label = _0x177495[1];
                  break;
                }
                if (_0x177495[0] === 6 && _0x4343be.label < _0x19fd92[1]) {
                  _0x4343be.label = _0x19fd92[1];
                  _0x19fd92 = _0x177495;
                  break;
                }
                if (_0x19fd92 && _0x4343be.label < _0x19fd92[2]) {
                  _0x4343be.label = _0x19fd92[2];
                  _0x4343be.ops.push(_0x177495);
                  break;
                }
                if (_0x19fd92[2]) {
                  _0x4343be.ops.pop();
                }
                _0x4343be.trys.pop();
                continue;
            }
            _0x177495 = _0x1df235.call(_0x194d2a, _0x4343be);
          } catch (_0x562d9b) {
            _0x177495 = [6, _0x562d9b];
            _0x53c0c3 = 0;
          } finally {
            _0x3bed7f = _0x19fd92 = 0;
          }
        }
        if (_0x177495[0] & 5) {
          throw _0x177495[1];
        }
        var _0x4d7835 = {
          value: _0x177495[0] ? _0x177495[1] : undefined,
          done: true
        };
        return _0x4d7835;
      }
    }
    var _0x3cce3b = function () {
      'use strict';

      function _0x172217(_0x449b5, _0x567fb9) {
        _0x4fb601(this, _0x172217);
        _0x12d9c9(this, "mode", undefined);
        _0x12d9c9(this, "type", undefined);
        _0x12d9c9(this, "handle", undefined);
        _0x12d9c9(this, "reference", undefined);
        _0x12d9c9(this, "active", undefined);
        _0x12d9c9(this, "sprite", undefined);
        _0x12d9c9(this, "color", undefined);
        _0x12d9c9(this, "route", undefined);
        _0x12d9c9(this, "short", undefined);
        _0x12d9c9(this, "scale", undefined);
        _0x12d9c9(this, "text", undefined);
        _0x12d9c9(this, "tickId", undefined);
        _0x12d9c9(this, "entity", undefined);
        _0x12d9c9(this, "vectors", undefined);
        this.sprite = _0x449b5.sprite;
        this.color = _0x449b5.color;
        this.route = _0x449b5.route;
        this.short = _0x449b5.short;
        this.scale = _0x449b5.scale;
        this.text = _0x449b5.text;
        this.type = _0x449b5.type;
        if (this.type === "vectors" && _0x141349(_0x567fb9, _0x35f48f)) {
          this.vectors = _0x567fb9;
        } else if (this.type === "entity" && _0x141349(_0x567fb9, _0x2270e1)) {
          this.entity = _0x567fb9;
        }
      }
      _0x244242(_0x172217, [{
        key: "enable",
        value: function _0x583ad6() {
          if (this.active) {
            return;
          }
          this.active = true;
          if (this.type === "vectors") {
            this.handle = AddBlipForCoord(this.vectors.x, this.vectors.y, this.vectors.z);
          } else {
            this.tracking();
          }
          this.setSettings();
        }
      }, {
        key: "setSettings",
        value: function _0x1a7592() {
          if (this.sprite) {
            SetBlipSprite(this.handle, this.sprite);
          }
          if (this.color) {
            SetBlipColour(this.handle, this.color);
          }
          if (this.route) {
            SetBlipRoute(this.handle, true);
          }
          if (this.short) {
            SetBlipAsShortRange(this.handle, true);
          }
          if (this.scale) {
            SetBlipScale(this.handle, this.scale);
          }
          if (this.text) {
            BeginTextCommandSetBlipName("STRING");
            AddTextComponentString(this.text);
            EndTextCommandSetBlipName(this.handle);
          }
        }
      }, {
        key: "disable",
        value: function _0x4b2256() {
          if (!this.active) {
            return;
          }
          this.active = false;
          clearTick(this.tickId);
          RemoveBlip(this.handle);
        }
      }, {
        key: "tracking",
        value: function _0x1603f6() {
          if (this.tickId) {
            return;
          }
          var _0xee768f = this;
          this.tickId = setTick(_0x529bcb(function () {
            var _0x3db77b;
            var _0xa8d5bc;
            return _0x3836d1(this, function (_0x429a57) {
              switch (_0x429a57.label) {
                case 0:
                  _0x3db77b = 250;
                  if (!!_0xee768f.entity.exist) {
                    return [3, 2];
                  }
                  return [4, _0x3963f0(_0xee768f.entity.type, _0xee768f.entity.netId)];
                case 1:
                  _0xa8d5bc = _0x429a57.sent();
                  if (_0xee768f.mode === "coords") {
                    SetBlipCoords(_0xee768f.handle, _0xa8d5bc[0], _0xa8d5bc[1], _0xa8d5bc[2]);
                    _0x3db77b = 1500;
                  } else {
                    RemoveBlip(_0xee768f.handle);
                    _0xee768f.handle = AddBlipForCoord(_0xa8d5bc[0], _0xa8d5bc[1], _0xa8d5bc[2]);
                    _0xee768f.mode = "coords";
                    _0xee768f.setSettings();
                  }
                  return [3, 3];
                case 2:
                  if (_0xee768f.mode !== "entity") {
                    RemoveBlip(_0xee768f.handle);
                    _0xee768f.handle = AddBlipForEntity(_0xee768f.entity.handle);
                    _0xee768f.mode = "entity";
                    _0xee768f.setSettings();
                  }
                  _0x429a57.label = 3;
                case 3:
                  return [4, _0x465fb3(_0x3db77b)];
                case 4:
                  _0x429a57.sent();
                  return [2];
              }
            });
          }));
        }
      }]);
      return _0x172217;
    }();
    ;
    function _0x43c63f(_0xb58312, _0x5186f9, _0x3c2126, _0x2e9615, _0x207848, _0xe3bbbc, _0x3f7861) {
      try {
        var _0x1bdcc2 = _0xb58312[_0xe3bbbc](_0x3f7861);
        var _0x598775 = _0x1bdcc2.value;
      } catch (_0x4fb992) {
        _0x3c2126(_0x4fb992);
        return;
      }
      if (_0x1bdcc2.done) {
        _0x5186f9(_0x598775);
      } else {
        Promise.resolve(_0x598775).then(_0x2e9615, _0x207848);
      }
    }
    function _0x28dfe0(_0x103780) {
      return function () {
        var _0xd1cbf7 = this;
        var _0x220342 = arguments;
        return new Promise(function (_0x44059f, _0x4fcb9c) {
          var _0x461942 = _0x103780.apply(_0xd1cbf7, _0x220342);
          function _0x1d541c(_0x53cae5) {
            _0x43c63f(_0x461942, _0x44059f, _0x4fcb9c, _0x1d541c, _0x43b828, "next", _0x53cae5);
          }
          function _0x43b828(_0x3a3b3c) {
            _0x43c63f(_0x461942, _0x44059f, _0x4fcb9c, _0x1d541c, _0x43b828, "throw", _0x3a3b3c);
          }
          _0x1d541c(undefined);
        });
      };
    }
    function _0x1ae696(_0x4e69e1, _0x4ada2d) {
      if (_0x4ada2d != null && typeof Symbol !== "undefined" && _0x4ada2d[Symbol.hasInstance]) {
        return !!_0x4ada2d[Symbol.hasInstance](_0x4e69e1);
      } else {
        return _0x4e69e1 instanceof _0x4ada2d;
      }
    }
    function _0x2c58d1(_0x35357d, _0x5d5c41) {
      var _0x3ff679;
      var _0x103d89;
      var _0x61a498;
      var _0x2bffdb;
      var _0x472acf = {
        label: 0,
        sent: function () {
          if (_0x61a498[0] & 1) {
            throw _0x61a498[1];
          }
          return _0x61a498[1];
        },
        trys: [],
        ops: []
      };
      _0x2bffdb = {
        next: _0x3115cb(0),
        throw: _0x3115cb(1),
        return: _0x3115cb(2)
      };
      if (typeof Symbol === "function") {
        _0x2bffdb[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2bffdb;
      function _0x3115cb(_0x537abb) {
        return function (_0x1c3a32) {
          return _0xf3ca8d([_0x537abb, _0x1c3a32]);
        };
      }
      function _0xf3ca8d(_0x5488c1) {
        if (_0x3ff679) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x472acf) {
          try {
            _0x3ff679 = 1;
            if (_0x103d89 && (_0x61a498 = _0x5488c1[0] & 2 ? _0x103d89.return : _0x5488c1[0] ? _0x103d89.throw || ((_0x61a498 = _0x103d89.return) && _0x61a498.call(_0x103d89), 0) : _0x103d89.next) && !(_0x61a498 = _0x61a498.call(_0x103d89, _0x5488c1[1])).done) {
              return _0x61a498;
            }
            _0x103d89 = 0;
            if (_0x61a498) {
              _0x5488c1 = [_0x5488c1[0] & 2, _0x61a498.value];
            }
            switch (_0x5488c1[0]) {
              case 0:
              case 1:
                _0x61a498 = _0x5488c1;
                break;
              case 4:
                _0x472acf.label++;
                var _0x50ee27 = {
                  value: _0x5488c1[1],
                  done: false
                };
                return _0x50ee27;
              case 5:
                _0x472acf.label++;
                _0x103d89 = _0x5488c1[1];
                _0x5488c1 = [0];
                continue;
              case 7:
                _0x5488c1 = _0x472acf.ops.pop();
                _0x472acf.trys.pop();
                continue;
              default:
                if (!(_0x61a498 = _0x472acf.trys, _0x61a498 = _0x61a498.length > 0 && _0x61a498[_0x61a498.length - 1]) && (_0x5488c1[0] === 6 || _0x5488c1[0] === 2)) {
                  _0x472acf = 0;
                  continue;
                }
                if (_0x5488c1[0] === 3 && (!_0x61a498 || _0x5488c1[1] > _0x61a498[0] && _0x5488c1[1] < _0x61a498[3])) {
                  _0x472acf.label = _0x5488c1[1];
                  break;
                }
                if (_0x5488c1[0] === 6 && _0x472acf.label < _0x61a498[1]) {
                  _0x472acf.label = _0x61a498[1];
                  _0x61a498 = _0x5488c1;
                  break;
                }
                if (_0x61a498 && _0x472acf.label < _0x61a498[2]) {
                  _0x472acf.label = _0x61a498[2];
                  _0x472acf.ops.push(_0x5488c1);
                  break;
                }
                if (_0x61a498[2]) {
                  _0x472acf.ops.pop();
                }
                _0x472acf.trys.pop();
                continue;
            }
            _0x5488c1 = _0x5d5c41.call(_0x35357d, _0x472acf);
          } catch (_0x1a3dcf) {
            _0x5488c1 = [6, _0x1a3dcf];
            _0x103d89 = 0;
          } finally {
            _0x3ff679 = _0x61a498 = 0;
          }
        }
        if (_0x5488c1[0] & 5) {
          throw _0x5488c1[1];
        }
        var _0x1efbdc = {
          value: _0x5488c1[0] ? _0x5488c1[1] : undefined,
          done: true
        };
        return _0x1efbdc;
      }
    }
    function _0x2b087e(_0x4c8639, _0x34bcb3) {
      var _0x2a00f4 = new _0x2d7bf1();
      var _0x4e0cb5 = _0x158296.get(_0x4c8639);
      var _0x20f2e7 = _0x34bcb3.settings;
      var _0x238bd1 = _0x4e0cb5.references.get(_0x20f2e7.location.reference);
      var _0x508173 = true;
      var _0x986965 = PlayerPedId();
      var _0x29c2b3 = _0x1f4826.fromArray(GetEntityCoords(_0x986965, false));
      var _0x42144b = _0x238bd1.type == "zone" ? _0x238bd1.settings.id : _0x1ae696(_0x238bd1, _0x35f48f) ? _0x238bd1.vectors : new _0x1f4826();
      _0x2a00f4.addThread(_0x28dfe0(function () {
        var _0x55083d;
        return _0x2c58d1(this, function (_0x2543dd) {
          switch (_0x2543dd.label) {
            case 0:
              _0x29c2b3.setFromArray(GetEntityCoords(_0x986965, false));
              if (!_0x1ae696(_0x238bd1, _0x2270e1)) {
                return [3, 2];
              }
              _0x55083d = _0x42144b.setFromArray;
              return [4, _0x3963f0(_0x238bd1.type, _0x238bd1.netId)];
            case 1:
              _0x55083d.apply(_0x42144b, [_0x2543dd.sent()]);
              _0x2543dd.label = 2;
            case 2:
              if (!_0x508173) {
                return [3, 4];
              }
              return [4, _0x465fb3(250)];
            case 3:
              _0x2543dd.sent();
              _0x2543dd.label = 4;
            case 4:
              return [2];
          }
        });
      }));
      var _0x3a9342 = new _0x5883a4(_0x29c2b3, _0x42144b);
      _0x2a00f4.addHandler(_0x3a9342);
      if (_0x20f2e7.trigger) {
        var _0x4db082 = new _0x157224(_0x20f2e7.trigger, _0x4e0cb5);
        var _0x557666 = _0x238bd1.type == "zone" ? _0x42144b : _0x20f2e7.trigger.wanted;
        _0x3a9342.addCheck("triggerDistance", _0x557666);
        _0x3a9342.on("triggerDistance", function (_0x4c0caf) {
          if (_0x4c0caf) {
            _0x4db082.enable();
          } else {
            _0x4db082.disable();
          }
        });
        _0x4db082.on("trigger", function (_0x447917) {
          if (_0x447917) {
            var _0x5f0988 = _0xc7d432(_0x4e0cb5.objectives, _0x34bcb3.objectives);
            if (_0x5f0988) {
              _0x2a00f4.emit("taskEvent", "objectiveCompleted", _0x5f0988.id, _0x34bcb3.objectives);
            }
          }
        });
        _0x2a00f4.addHandler(_0x4db082);
      }
      if (_0x20f2e7.notification) {
        var _0x3dbfee = new _0x20ea7c(_0x20f2e7.notification, _0x42144b);
        _0x3a9342.addCheck("notificationDistance", _0x20f2e7.notification.distance);
        _0x3a9342.on("notificationDistance", function (_0x45a607) {
          if (_0x45a607) {
            _0x3dbfee.enable();
          } else {
            _0x3dbfee.disable();
          }
        });
        _0x2a00f4.addHandler(_0x3dbfee);
      }
      if (_0x20f2e7.marker) {
        var _0x307ced = new _0x338274(_0x20f2e7.marker, _0x42144b);
        _0x3a9342.addCheck("markerDistance", _0x20f2e7.marker.distance);
        _0x3a9342.on("markerDistance", function (_0x576b75) {
          if (_0x576b75) {
            _0x508173 = false;
            _0x307ced.enable();
          } else {
            _0x508173 = true;
            _0x307ced.disable();
          }
        });
        _0x2a00f4.addHandler(_0x307ced);
      }
      if (_0x20f2e7.location.blip) {
        var _0x4cc8d7 = _0x4e0cb5.references.get(_0x20f2e7.location.blip);
        var _0x55de11 = new _0x3cce3b(_0x4cc8d7.settings, _0x238bd1);
        _0x2a00f4.addHandler(_0x55de11);
        _0x55de11.enable();
      }
      _0x3a9342.enable();
      return _0x2a00f4;
    }
    ;
    function _0x16ebb0(_0xf7b3be, _0x5cfd2c) {
      var _0x391990 = new _0x2d7bf1();
      var _0x540dc1 = _0x158296.get(_0xf7b3be);
      var _0x1cf4bb = _0x5cfd2c.settings;
      if (_0x1cf4bb.trigger) {
        var _0x3e7c8b = new _0x157224(_0x1cf4bb.trigger, _0x540dc1);
        _0x3e7c8b.on("trigger", function (_0x1b75c5) {
          if (_0x1b75c5) {
            var _0x45667a = _0xc7d432(_0x540dc1.objectives, _0x5cfd2c.objectives);
            if (_0x45667a) {
              var _0x537755 = PlayerPedId();
              var _0x421a28 = GetVehiclePedIsIn(_0x537755, false);
              if (_0x421a28 !== 0) {
                var _0x51e5b2 = _0x540dc1.references.get(_0x45667a.reference);
                var _0x208f46 = GetPedInVehicleSeat(_0x421a28, -1);
                var _0x56cbc5 = NetworkGetNetworkIdFromEntity(_0x421a28);
                if (_0x208f46) {
                  if (!_0x51e5b2.netId) {
                    _0x391990.emit("taskEvent", "updateData", _0x51e5b2.id, "netId", _0x56cbc5);
                  }
                  _0x391990.emit("taskEvent", "objectiveCompleted", _0x45667a.id, _0x45667a.reference);
                }
              }
            }
          }
        });
        _0x391990.addHandler(_0x3e7c8b);
        _0x3e7c8b.enable();
      }
      return _0x391990;
    }
    ;
    function _0x21a0f3(_0x360638, _0x1f6c73, _0x3abcd8, _0x5176a6, _0x1345e0, _0x122f46, _0x29d80e) {
      try {
        var _0x31b6ad = _0x360638[_0x122f46](_0x29d80e);
        var _0x35b697 = _0x31b6ad.value;
      } catch (_0x5d7dcb) {
        _0x3abcd8(_0x5d7dcb);
        return;
      }
      if (_0x31b6ad.done) {
        _0x1f6c73(_0x35b697);
      } else {
        Promise.resolve(_0x35b697).then(_0x5176a6, _0x1345e0);
      }
    }
    function _0x54aa5f(_0x1cdafb) {
      return function () {
        var _0x3f0820 = this;
        var _0x28668e = arguments;
        return new Promise(function (_0x2fc608, _0x32ef0b) {
          var _0x37bf05 = _0x1cdafb.apply(_0x3f0820, _0x28668e);
          function _0x41ce12(_0x2f8ff) {
            _0x21a0f3(_0x37bf05, _0x2fc608, _0x32ef0b, _0x41ce12, _0x498b32, "next", _0x2f8ff);
          }
          function _0x498b32(_0x2c1a17) {
            _0x21a0f3(_0x37bf05, _0x2fc608, _0x32ef0b, _0x41ce12, _0x498b32, "throw", _0x2c1a17);
          }
          _0x41ce12(undefined);
        });
      };
    }
    function _0x5ce83c(_0x21678f, _0x39aaf0) {
      if (_0x39aaf0 != null && typeof Symbol !== "undefined" && _0x39aaf0[Symbol.hasInstance]) {
        return !!_0x39aaf0[Symbol.hasInstance](_0x21678f);
      } else {
        return _0x21678f instanceof _0x39aaf0;
      }
    }
    function _0x3fd78f(_0x37821b, _0x189c11) {
      var _0x46fcc5;
      var _0x279df8;
      var _0x504683;
      var _0x1138a4;
      var _0x13525f = {
        label: 0,
        sent: function () {
          if (_0x504683[0] & 1) {
            throw _0x504683[1];
          }
          return _0x504683[1];
        },
        trys: [],
        ops: []
      };
      _0x1138a4 = {
        next: _0x433919(0),
        throw: _0x433919(1),
        return: _0x433919(2)
      };
      if (typeof Symbol === "function") {
        _0x1138a4[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1138a4;
      function _0x433919(_0x43cdc8) {
        return function (_0x30fa13) {
          return _0x2b43e0([_0x43cdc8, _0x30fa13]);
        };
      }
      function _0x2b43e0(_0x5bc779) {
        if (_0x46fcc5) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x13525f) {
          try {
            _0x46fcc5 = 1;
            if (_0x279df8 && (_0x504683 = _0x5bc779[0] & 2 ? _0x279df8.return : _0x5bc779[0] ? _0x279df8.throw || ((_0x504683 = _0x279df8.return) && _0x504683.call(_0x279df8), 0) : _0x279df8.next) && !(_0x504683 = _0x504683.call(_0x279df8, _0x5bc779[1])).done) {
              return _0x504683;
            }
            _0x279df8 = 0;
            if (_0x504683) {
              _0x5bc779 = [_0x5bc779[0] & 2, _0x504683.value];
            }
            switch (_0x5bc779[0]) {
              case 0:
              case 1:
                _0x504683 = _0x5bc779;
                break;
              case 4:
                _0x13525f.label++;
                var _0x59f8e3 = {
                  value: _0x5bc779[1],
                  done: false
                };
                return _0x59f8e3;
              case 5:
                _0x13525f.label++;
                _0x279df8 = _0x5bc779[1];
                _0x5bc779 = [0];
                continue;
              case 7:
                _0x5bc779 = _0x13525f.ops.pop();
                _0x13525f.trys.pop();
                continue;
              default:
                if (!(_0x504683 = _0x13525f.trys, _0x504683 = _0x504683.length > 0 && _0x504683[_0x504683.length - 1]) && (_0x5bc779[0] === 6 || _0x5bc779[0] === 2)) {
                  _0x13525f = 0;
                  continue;
                }
                if (_0x5bc779[0] === 3 && (!_0x504683 || _0x5bc779[1] > _0x504683[0] && _0x5bc779[1] < _0x504683[3])) {
                  _0x13525f.label = _0x5bc779[1];
                  break;
                }
                if (_0x5bc779[0] === 6 && _0x13525f.label < _0x504683[1]) {
                  _0x13525f.label = _0x504683[1];
                  _0x504683 = _0x5bc779;
                  break;
                }
                if (_0x504683 && _0x13525f.label < _0x504683[2]) {
                  _0x13525f.label = _0x504683[2];
                  _0x13525f.ops.push(_0x5bc779);
                  break;
                }
                if (_0x504683[2]) {
                  _0x13525f.ops.pop();
                }
                _0x13525f.trys.pop();
                continue;
            }
            _0x5bc779 = _0x189c11.call(_0x37821b, _0x13525f);
          } catch (_0x2b2b78) {
            _0x5bc779 = [6, _0x2b2b78];
            _0x279df8 = 0;
          } finally {
            _0x46fcc5 = _0x504683 = 0;
          }
        }
        if (_0x5bc779[0] & 5) {
          throw _0x5bc779[1];
        }
        var _0x4eea02 = {
          value: _0x5bc779[0] ? _0x5bc779[1] : undefined,
          done: true
        };
        return _0x4eea02;
      }
    }
    function _0x135949(_0x545144, _0x44acec, _0xb46568, _0x472b6b, _0x273c40, _0x30f042, _0x178ea6) {
      return _0x518682.apply(this, arguments);
    }
    function _0x518682() {
      _0x518682 = _0x54aa5f(function (_0x1edb91, _0x975fe2, _0x53b884, _0x11ad5a, _0x4a7652, _0x556686, _0x484523) {
        var _0x2c06b0;
        var _0x44554b;
        var _0x45dd28;
        var _0x4c1a2f;
        return _0x3fd78f(this, function (_0x5e043a) {
          switch (_0x5e043a.label) {
            case 0:
              if (!_0x975fe2) {
                return [3, 3];
              }
              if (_0x1edb91 !== "vehicle") {
                return [3, 2];
              }
              _0x2c06b0 = GetClosestVehicle(_0x11ad5a.x, _0x11ad5a.y, _0x11ad5a.z, 5, 0, 70);
              if (_0x2c06b0 != 0) {
                exports["np-sync"].SyncedExecution("DeleteVehicle", _0x2c06b0);
              }
              return [4, RPC.execute("np:vehicles:basicSpawn", _0x975fe2, _0x11ad5a, _0x4a7652, "job", null, false, _0x484523)];
            case 1:
              _0x44554b = _0x5e043a.sent();
              if (_0x556686) {
                _0x45dd28 = NetworkGetEntityFromNetworkId(_0x44554b);
                for (_0x4c1a2f = 0; _0x4c1a2f < 15; _0x4c1a2f += 1) {
                  SetVehicleExtra(_0x45dd28, _0x4c1a2f, 1);
                }
                _0x556686.forEach(function (_0x52bbe5) {
                  SetVehicleExtra(_0x45dd28, _0x52bbe5, 0);
                });
              }
              return [2, _0x44554b];
            case 2:
              if (_0x1edb91 === "object") {
                return [2, CreateObject(_0x975fe2, _0x11ad5a.x, _0x11ad5a.y, _0x11ad5a.z, _0x53b884, false, true)];
              } else if (_0x1edb91 === "ped") {
                return [2, CreatePed(4, _0x975fe2, _0x11ad5a.x, _0x11ad5a.y, _0x11ad5a.z, _0x4a7652, _0x53b884, false)];
              }
              _0x5e043a.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return _0x518682.apply(this, arguments);
    }
    function _0x10d4f9(_0x389aba, _0x1a085a) {
      return _0x5e3695.apply(this, arguments);
    }
    function _0x5e3695() {
      _0x5e3695 = _0x54aa5f(function (_0x47093e, _0x53f643) {
        var _0x3cb46c;
        var _0x47fd54;
        var _0x1e6564;
        var _0x1cb3a7;
        var _0x4b8517;
        var _0x36de8f;
        var _0x3a90f5;
        var _0x2c0998;
        var _0x557ae9;
        return _0x3fd78f(this, function (_0x561457) {
          _0x3cb46c = new _0x2d7bf1();
          _0x47fd54 = _0x158296.get(_0x47093e);
          _0x1e6564 = _0x53f643.objectives.reduce(function (_0x3a6289, _0x1f96d4) {
            var _0x202c61 = _0x47fd54.objectives.get(_0x1f96d4);
            if (_0x202c61) {
              _0x3a6289.push(_0x202c61);
            }
            return _0x3a6289;
          }, []);
          _0x1cb3a7 = true;
          _0x4b8517 = false;
          _0x36de8f = undefined;
          try {
            _0x3a90f5 = function () {
              var _0x288647 = _0x557ae9.value;
              var _0x3bc880 = _0x47fd54.references.get(_0x288647.reference);
              var _0x15cd52 = _0x47fd54.references.get(_0x288647.location.reference);
              var _0x446cf2 = _0x1e6564.find(function (_0x115ef7) {
                return _0x115ef7.reference == _0x288647.reference;
              });
              if (_0x15cd52) {
                var _0x17edbe = typeof _0x3bc880.settings.model === "string" ? GetHashKey(_0x3bc880.settings.model) : _0x3bc880.settings.model;
                _0x1a3135(_0x17edbe).then(_0x54aa5f(function () {
                  var _0x14f32b;
                  var _0x39847f;
                  var _0x1143c8;
                  var _0x2511c6;
                  return _0x3fd78f(this, function (_0x2d091e) {
                    switch (_0x2d091e.label) {
                      case 0:
                        _0x14f32b = 0;
                        _0x39847f = {
                          vehicle: typeof _0x3bc880.settings.model === "number" ? GetEntityArchetypeName(_0x17edbe) : _0x3bc880.settings.model,
                          label: GetLabelText(GetDisplayNameFromVehicleModel(_0x17edbe))
                        };
                        if (!_0x5ce83c(_0x15cd52, _0x35f48f)) {
                          return [3, 5];
                        }
                        if (!_0x3bc880.settings.persistent) {
                          return [3, 2];
                        }
                        return [4, RPC.execute("np-jobs:spawnPersistentVehicle", _0x39847f, _0x3bc880.settings.persistent)];
                      case 1:
                        _0x14f32b = _0x2d091e.sent();
                        if (!_0x14f32b) {
                          return [2];
                        }
                        return [3, 4];
                      case 2:
                        return [4, _0x135949(_0x288647.type, _0x17edbe, _0x288647.networked, _0x15cd52.vectors, _0x15cd52.heading, _0x3bc880.settings.extras, _0x3bc880.settings.mods)];
                      case 3:
                        _0x14f32b = _0x2d091e.sent();
                        _0x2d091e.label = 4;
                      case 4:
                        return [3, 9];
                      case 5:
                        if (!_0x5ce83c(_0x15cd52, _0x2270e1)) {
                          return [3, 9];
                        }
                        _0x1143c8 = _0x3963f0(_0x15cd52.type, _0x15cd52.netId);
                        _0x2511c6 = _0x1f4826.fromArray(_0x1143c8);
                        if (!_0x3bc880.settings.persistent) {
                          return [3, 7];
                        }
                        return [4, RPC.execute("np-jobs:spawnPersistentVehicle", _0x39847f, _0x3bc880.settings.persistent)];
                      case 6:
                        _0x14f32b = _0x2d091e.sent();
                        if (!_0x14f32b) {
                          return [2];
                        }
                        return [3, 9];
                      case 7:
                        return [4, _0x135949(_0x3bc880.type, _0x3bc880.settings.model, _0x288647.networked, _0x2511c6)];
                      case 8:
                        _0x14f32b = _0x2d091e.sent();
                        _0x2d091e.label = 9;
                      case 9:
                        if (_0x14f32b) {
                          emitNet("np:jobs:updateData", _0x47093e, _0x3bc880.id, "netId", _0x14f32b);
                        }
                        _0x3bc880.data.netId = _0x14f32b;
                        _0x3cb46c.emit("taskEvent", "objectiveCompleted", _0x446cf2.id);
                        return [2];
                    }
                  });
                }));
              }
            };
            for (_0x2c0998 = _0x53f643.settings.spawn[Symbol.iterator](); !(_0x1cb3a7 = (_0x557ae9 = _0x2c0998.next()).done); _0x1cb3a7 = true) {
              _0x3a90f5();
            }
          } catch (_0x3382e1) {
            _0x4b8517 = true;
            _0x36de8f = _0x3382e1;
          } finally {
            try {
              if (!_0x1cb3a7 && _0x2c0998.return != null) {
                _0x2c0998.return();
              }
            } finally {
              if (_0x4b8517) {
                throw _0x36de8f;
              }
            }
          }
          return [2, _0x3cb46c];
        });
      });
      return _0x5e3695.apply(this, arguments);
    }
    ;
    var _0x3d5bee;
    (function (_0x18f29a) {
      _0x18f29a.assertEqual = _0x1edd8d => _0x1edd8d;
      function _0xf099cb(_0x231419) {}
      _0x18f29a.assertIs = _0xf099cb;
      function _0x2e4c8f(_0x411a36) {
        throw new Error();
      }
      _0x18f29a.assertNever = _0x2e4c8f;
      _0x18f29a.arrayToEnum = _0x4102b6 => {
        const _0x3946fb = {};
        for (const _0x24ec75 of _0x4102b6) {
          _0x3946fb[_0x24ec75] = _0x24ec75;
        }
        return _0x3946fb;
      };
      _0x18f29a.getValidEnumValues = _0x355c62 => {
        const _0x1013bf = _0x18f29a.objectKeys(_0x355c62).filter(_0xbb2d32 => typeof _0x355c62[_0x355c62[_0xbb2d32]] !== "number");
        const _0x44a7a0 = {};
        for (const _0x3b4b60 of _0x1013bf) {
          _0x44a7a0[_0x3b4b60] = _0x355c62[_0x3b4b60];
        }
        return _0x18f29a.objectValues(_0x44a7a0);
      };
      _0x18f29a.objectValues = _0x55b0b4 => {
        return _0x18f29a.objectKeys(_0x55b0b4).map(function (_0x243c0c) {
          return _0x55b0b4[_0x243c0c];
        });
      };
      _0x18f29a.objectKeys = typeof Object.keys === "function" ? _0x1e5108 => Object.keys(_0x1e5108) : _0x283b39 => {
        const _0x1c7624 = [];
        for (const _0x37e343 in _0x283b39) {
          if (Object.prototype.hasOwnProperty.call(_0x283b39, _0x37e343)) {
            _0x1c7624.push(_0x37e343);
          }
        }
        return _0x1c7624;
      };
      _0x18f29a.find = (_0x42751b, _0x142b6f) => {
        for (const _0x3aec06 of _0x42751b) {
          if (_0x142b6f(_0x3aec06)) {
            return _0x3aec06;
          }
        }
        return undefined;
      };
      _0x18f29a.isInteger = typeof Number.isInteger === "function" ? _0x1e0826 => Number.isInteger(_0x1e0826) : _0x5c7fd5 => typeof _0x5c7fd5 === "number" && isFinite(_0x5c7fd5) && Math.floor(_0x5c7fd5) === _0x5c7fd5;
      function _0x4abfa5(_0x3640fb, _0x55901e = " | ") {
        return _0x3640fb.map(_0x2d407a => typeof _0x2d407a === "string" ? "'" + _0x2d407a + "'" : _0x2d407a).join(_0x55901e);
      }
      _0x18f29a.joinValues = _0x4abfa5;
      _0x18f29a.jsonStringifyReplacer = (_0x364303, _0x5cc6ee) => {
        if (typeof _0x5cc6ee === "bigint") {
          return _0x5cc6ee.toString();
        }
        return _0x5cc6ee;
      };
    })(_0x3d5bee ||= {});
    var _0x3f26bd;
    (function (_0x394387) {
      _0x394387.mergeShapes = (_0x2673fd, _0x54a74c) => {
        var _0x14f546 = {
          ..._0x2673fd,
          ..._0x54a74c
        };
        return _0x14f546;
      };
    })(_0x3f26bd ||= {});
    const _0x44c2fd = _0x3d5bee.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"]);
    const _0xc9abf6 = _0x3d2cce => {
      const _0x107e7b = typeof _0x3d2cce;
      switch (_0x107e7b) {
        case "undefined":
          return _0x44c2fd.undefined;
        case "string":
          return _0x44c2fd.string;
        case "number":
          if (isNaN(_0x3d2cce)) {
            return _0x44c2fd.nan;
          } else {
            return _0x44c2fd.number;
          }
        case "boolean":
          return _0x44c2fd.boolean;
        case "function":
          return _0x44c2fd.function;
        case "bigint":
          return _0x44c2fd.bigint;
        case "symbol":
          return _0x44c2fd.symbol;
        case "object":
          if (Array.isArray(_0x3d2cce)) {
            return _0x44c2fd.array;
          }
          if (_0x3d2cce === null) {
            return _0x44c2fd.null;
          }
          if (_0x3d2cce.then && typeof _0x3d2cce.then === "function" && _0x3d2cce.catch && typeof _0x3d2cce.catch === "function") {
            return _0x44c2fd.promise;
          }
          if (typeof Map !== "undefined" && _0x3d2cce instanceof Map) {
            return _0x44c2fd.map;
          }
          if (typeof Set !== "undefined" && _0x3d2cce instanceof Set) {
            return _0x44c2fd.set;
          }
          if (typeof Date !== "undefined" && _0x3d2cce instanceof Date) {
            return _0x44c2fd.date;
          }
          return _0x44c2fd.object;
        default:
          return _0x44c2fd.unknown;
      }
    };
    const _0xda3f45 = _0x3d5bee.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of", "not_finite"]);
    const _0xcaf480 = _0x334b34 => {
      const _0x379951 = JSON.stringify(_0x334b34, null, 2);
      return _0x379951.replace(/"([^"]+)":/g, "$1:");
    };
    class _0x21ad60 extends Error {
      constructor(_0x51c569) {
        super();
        this.issues = [];
        this.addIssue = _0x2c6c4e => {
          this.issues = [...this.issues, _0x2c6c4e];
        };
        this.addIssues = (_0x516495 = []) => {
          this.issues = [...this.issues, ..._0x516495];
        };
        const _0x144c4b = new.target.prototype;
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(this, _0x144c4b);
        } else {
          this.__proto__ = _0x144c4b;
        }
        this.name = "ZodError";
        this.issues = _0x51c569;
      }
      get errors() {
        return this.issues;
      }
      format(_0x448329) {
        const _0x28412a = _0x448329 || function (_0x3f5977) {
          return _0x3f5977.message;
        };
        const _0x1cd0aa = {
          _errors: []
        };
        const _0x2af67e = _0x27eedc => {
          for (const _0x5f57c2 of _0x27eedc.issues) {
            if (_0x5f57c2.code === "invalid_union") {
              _0x5f57c2.unionErrors.map(_0x2af67e);
            } else if (_0x5f57c2.code === "invalid_return_type") {
              _0x2af67e(_0x5f57c2.returnTypeError);
            } else if (_0x5f57c2.code === "invalid_arguments") {
              _0x2af67e(_0x5f57c2.argumentsError);
            } else if (_0x5f57c2.path.length === 0) {
              _0x1cd0aa._errors.push(_0x28412a(_0x5f57c2));
            } else {
              let _0x2160d1 = _0x1cd0aa;
              let _0xcfc91a = 0;
              while (_0xcfc91a < _0x5f57c2.path.length) {
                const _0x5839e9 = _0x5f57c2.path[_0xcfc91a];
                const _0x5ef930 = _0xcfc91a === _0x5f57c2.path.length - 1;
                if (!_0x5ef930) {
                  _0x2160d1[_0x5839e9] = _0x2160d1[_0x5839e9] || {
                    _errors: []
                  };
                } else {
                  _0x2160d1[_0x5839e9] = _0x2160d1[_0x5839e9] || {
                    _errors: []
                  };
                  _0x2160d1[_0x5839e9]._errors.push(_0x28412a(_0x5f57c2));
                }
                _0x2160d1 = _0x2160d1[_0x5839e9];
                _0xcfc91a++;
              }
            }
          }
        };
        _0x2af67e(this);
        return _0x1cd0aa;
      }
      toString() {
        return this.message;
      }
      get message() {
        return JSON.stringify(this.issues, _0x3d5bee.jsonStringifyReplacer, 2);
      }
      get isEmpty() {
        return this.issues.length === 0;
      }
      flatten(_0x41b2da = _0x1d9fef => _0x1d9fef.message) {
        const _0x210d7e = {};
        const _0x18fc6b = [];
        for (const _0x48dc1d of this.issues) {
          if (_0x48dc1d.path.length > 0) {
            _0x210d7e[_0x48dc1d.path[0]] = _0x210d7e[_0x48dc1d.path[0]] || [];
            _0x210d7e[_0x48dc1d.path[0]].push(_0x41b2da(_0x48dc1d));
          } else {
            _0x18fc6b.push(_0x41b2da(_0x48dc1d));
          }
        }
        var _0x519fbc = {
          formErrors: _0x18fc6b,
          fieldErrors: _0x210d7e
        };
        return _0x519fbc;
      }
      get formErrors() {
        return this.flatten();
      }
    }
    _0x21ad60.create = _0x5ccaa6 => {
      const _0x477942 = new _0x21ad60(_0x5ccaa6);
      return _0x477942;
    };
    const _0x3aa914 = (_0x41c083, _0x4dcacc) => {
      let _0x1aed01;
      switch (_0x41c083.code) {
        case _0xda3f45.invalid_type:
          if (_0x41c083.received === _0x44c2fd.undefined) {
            _0x1aed01 = "Required";
          } else {
            _0x1aed01 = "Expected " + _0x41c083.expected + ", received " + _0x41c083.received;
          }
          break;
        case _0xda3f45.invalid_literal:
          _0x1aed01 = "Invalid literal value, expected " + JSON.stringify(_0x41c083.expected, _0x3d5bee.jsonStringifyReplacer);
          break;
        case _0xda3f45.unrecognized_keys:
          _0x1aed01 = "Unrecognized key(s) in object: " + _0x3d5bee.joinValues(_0x41c083.keys, ", ");
          break;
        case _0xda3f45.invalid_union:
          _0x1aed01 = "Invalid input";
          break;
        case _0xda3f45.invalid_union_discriminator:
          _0x1aed01 = "Invalid discriminator value. Expected " + _0x3d5bee.joinValues(_0x41c083.options);
          break;
        case _0xda3f45.invalid_enum_value:
          _0x1aed01 = "Invalid enum value. Expected " + _0x3d5bee.joinValues(_0x41c083.options) + ", received '" + _0x41c083.received + "'";
          break;
        case _0xda3f45.invalid_arguments:
          _0x1aed01 = "Invalid function arguments";
          break;
        case _0xda3f45.invalid_return_type:
          _0x1aed01 = "Invalid function return type";
          break;
        case _0xda3f45.invalid_date:
          _0x1aed01 = "Invalid date";
          break;
        case _0xda3f45.invalid_string:
          if (typeof _0x41c083.validation === "object") {
            if ("includes" in _0x41c083.validation) {
              _0x1aed01 = "Invalid input: must include \"" + _0x41c083.validation.includes + "\"";
              if (typeof _0x41c083.validation.position === "number") {
                _0x1aed01 = _0x1aed01 + " at one or more positions greater than or equal to " + _0x41c083.validation.position;
              }
            } else if ("startsWith" in _0x41c083.validation) {
              _0x1aed01 = "Invalid input: must start with \"" + _0x41c083.validation.startsWith + "\"";
            } else if ("endsWith" in _0x41c083.validation) {
              _0x1aed01 = "Invalid input: must end with \"" + _0x41c083.validation.endsWith + "\"";
            } else {
              _0x3d5bee.assertNever(_0x41c083.validation);
            }
          } else if (_0x41c083.validation !== "regex") {
            _0x1aed01 = "Invalid " + _0x41c083.validation;
          } else {
            _0x1aed01 = "Invalid";
          }
          break;
        case _0xda3f45.too_small:
          if (_0x41c083.type === "array") {
            _0x1aed01 = "Array must contain " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "at least" : "more than") + " " + _0x41c083.minimum + " element(s)";
          } else if (_0x41c083.type === "string") {
            _0x1aed01 = "String must contain " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "at least" : "over") + " " + _0x41c083.minimum + " character(s)";
          } else if (_0x41c083.type === "number") {
            _0x1aed01 = "Number must be " + (_0x41c083.exact ? "exactly equal to " : _0x41c083.inclusive ? "greater than or equal to " : "greater than ") + _0x41c083.minimum;
          } else if (_0x41c083.type === "date") {
            _0x1aed01 = "Date must be " + (_0x41c083.exact ? "exactly equal to " : _0x41c083.inclusive ? "greater than or equal to " : "greater than ") + new Date(Number(_0x41c083.minimum));
          } else {
            _0x1aed01 = "Invalid input";
          }
          break;
        case _0xda3f45.too_big:
          if (_0x41c083.type === "array") {
            _0x1aed01 = "Array must contain " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "at most" : "less than") + " " + _0x41c083.maximum + " element(s)";
          } else if (_0x41c083.type === "string") {
            _0x1aed01 = "String must contain " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "at most" : "under") + " " + _0x41c083.maximum + " character(s)";
          } else if (_0x41c083.type === "number") {
            _0x1aed01 = "Number must be " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "less than or equal to" : "less than") + " " + _0x41c083.maximum;
          } else if (_0x41c083.type === "bigint") {
            _0x1aed01 = "BigInt must be " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "less than or equal to" : "less than") + " " + _0x41c083.maximum;
          } else if (_0x41c083.type === "date") {
            _0x1aed01 = "Date must be " + (_0x41c083.exact ? "exactly" : _0x41c083.inclusive ? "smaller than or equal to" : "smaller than") + " " + new Date(Number(_0x41c083.maximum));
          } else {
            _0x1aed01 = "Invalid input";
          }
          break;
        case _0xda3f45.custom:
          _0x1aed01 = "Invalid input";
          break;
        case _0xda3f45.invalid_intersection_types:
          _0x1aed01 = "Intersection results could not be merged";
          break;
        case _0xda3f45.not_multiple_of:
          _0x1aed01 = "Number must be a multiple of " + _0x41c083.multipleOf;
          break;
        case _0xda3f45.not_finite:
          _0x1aed01 = "Number must be finite";
          break;
        default:
          _0x1aed01 = _0x4dcacc.defaultError;
          _0x3d5bee.assertNever(_0x41c083);
      }
      var _0x1918a4 = {
        message: _0x1aed01
      };
      return _0x1918a4;
    };
    let _0x1c3412 = _0x3aa914;
    function _0x42ea79(_0x4f16a9) {
      _0x1c3412 = _0x4f16a9;
    }
    function _0x24610a() {
      return _0x1c3412;
    }
    const _0x239796 = _0x45e892 => {
      const {
        data: _0x596c15,
        path: _0xda03f,
        errorMaps: _0x470736,
        issueData: _0x3af132
      } = _0x45e892;
      const _0x4103ac = [..._0xda03f, ...(_0x3af132.path || [])];
      var _0x2602a0 = {
        ..._0x3af132
      };
      _0x2602a0.path = _0x4103ac;
      const _0x3efd67 = _0x2602a0;
      let _0x2734af = "";
      const _0x453e6f = _0x470736.filter(_0x271905 => !!_0x271905).slice().reverse();
      for (const _0x4abe36 of _0x453e6f) {
        _0x2734af = _0x4abe36(_0x3efd67, {
          data: _0x596c15,
          defaultError: _0x2734af
        }).message;
      }
      var _0x32a007 = {
        ..._0x3af132
      };
      _0x32a007.path = _0x4103ac;
      _0x32a007.message = _0x3af132.message || _0x2734af;
      return _0x32a007;
    };
    const _0x18b559 = [];
    function _0x1e3fb0(_0x5f4dde, _0x15e9ca) {
      const _0x1260dd = _0x239796({
        issueData: _0x15e9ca,
        data: _0x5f4dde.data,
        path: _0x5f4dde.path,
        errorMaps: [_0x5f4dde.common.contextualErrorMap, _0x5f4dde.schemaErrorMap, _0x24610a(), _0x3aa914].filter(_0x1d1cd8 => !!_0x1d1cd8)
      });
      _0x5f4dde.common.issues.push(_0x1260dd);
    }
    class _0x524d93 {
      constructor() {
        this.value = "valid";
      }
      dirty() {
        if (this.value === "valid") {
          this.value = "dirty";
        }
      }
      abort() {
        if (this.value !== "aborted") {
          this.value = "aborted";
        }
      }
      static mergeArray(_0x1ccee7, _0x20742a) {
        const _0x585b19 = [];
        for (const _0x15673e of _0x20742a) {
          if (_0x15673e.status === "aborted") {
            return _0x4c2310;
          }
          if (_0x15673e.status === "dirty") {
            _0x1ccee7.dirty();
          }
          _0x585b19.push(_0x15673e.value);
        }
        var _0x5e022f = {
          status: _0x1ccee7.value,
          value: _0x585b19
        };
        return _0x5e022f;
      }
      static async mergeObjectAsync(_0x1d6f62, _0x419caa) {
        const _0x1eb512 = [];
        for (const _0x25e0f9 of _0x419caa) {
          var _0x5d70d8 = {
            key: await _0x25e0f9.key,
            value: await _0x25e0f9.value
          };
          _0x1eb512.push(_0x5d70d8);
        }
        return _0x524d93.mergeObjectSync(_0x1d6f62, _0x1eb512);
      }
      static mergeObjectSync(_0x14448b, _0x533fd6) {
        const _0x96434e = {};
        for (const _0x18e363 of _0x533fd6) {
          const {
            key: _0x49902b,
            value: _0x39f7b9
          } = _0x18e363;
          if (_0x49902b.status === "aborted") {
            return _0x4c2310;
          }
          if (_0x39f7b9.status === "aborted") {
            return _0x4c2310;
          }
          if (_0x49902b.status === "dirty") {
            _0x14448b.dirty();
          }
          if (_0x39f7b9.status === "dirty") {
            _0x14448b.dirty();
          }
          if (typeof _0x39f7b9.value !== "undefined" || _0x18e363.alwaysSet) {
            _0x96434e[_0x49902b.value] = _0x39f7b9.value;
          }
        }
        var _0x547183 = {
          status: _0x14448b.value,
          value: _0x96434e
        };
        return _0x547183;
      }
    }
    const _0x4c2310 = Object.freeze({
      status: "aborted"
    });
    const _0x1dbae6 = _0x25486c => ({
      status: "dirty",
      value: _0x25486c
    });
    const _0x2544e8 = _0x2e591f => ({
      status: "valid",
      value: _0x2e591f
    });
    const _0x4442da = _0x3c51b3 => _0x3c51b3.status === "aborted";
    const _0x27a58a = _0xf5a9ad => _0xf5a9ad.status === "dirty";
    const _0x4e8c19 = _0x119169 => _0x119169.status === "valid";
    const _0x4fe8fd = _0x17748e => typeof Promise !== "undefined" && _0x17748e instanceof Promise;
    var _0x362422;
    (function (_0x1076bf) {
      _0x1076bf.errToObj = _0x22b063 => typeof _0x22b063 === "string" ? {
        message: _0x22b063
      } : _0x22b063 || {};
      _0x1076bf.toString = _0x189604 => typeof _0x189604 === "string" ? _0x189604 : _0x189604?.message;
    })(_0x362422 ||= {});
    class _0x1d36e7 {
      constructor(_0x3887d2, _0x2f81be, _0xc6e154, _0x5333ec) {
        this._cachedPath = [];
        this.parent = _0x3887d2;
        this.data = _0x2f81be;
        this._path = _0xc6e154;
        this._key = _0x5333ec;
      }
      get path() {
        if (!this._cachedPath.length) {
          if (this._key instanceof Array) {
            this._cachedPath.push(...this._path, ...this._key);
          } else {
            this._cachedPath.push(...this._path, this._key);
          }
        }
        return this._cachedPath;
      }
    }
    const _0x2f4691 = (_0x2870d9, _0x18b546) => {
      if (_0x4e8c19(_0x18b546)) {
        var _0x373fb6 = {
          success: true,
          data: _0x18b546.value
        };
        return _0x373fb6;
      } else {
        if (!_0x2870d9.common.issues.length) {
          throw new Error("Validation failed but no issues detected.");
        }
        return {
          success: false,
          get error() {
            if (this._error) {
              return this._error;
            }
            const _0x24be21 = new _0x21ad60(_0x2870d9.common.issues);
            this._error = _0x24be21;
            return this._error;
          }
        };
      }
    };
    function _0x289168(_0x2812f6) {
      if (!_0x2812f6) {
        return {};
      }
      const {
        errorMap: _0x20ccc3,
        invalid_type_error: _0x1ce0bf,
        required_error: _0x577adf,
        description: _0x255c72
      } = _0x2812f6;
      if (_0x20ccc3 && (_0x1ce0bf || _0x577adf)) {
        throw new Error("Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.");
      }
      if (_0x20ccc3) {
        return {
          errorMap: _0x20ccc3,
          description: _0x255c72
        };
      }
      const _0x4fa82f = (_0x2c4367, _0x5e681b) => {
        var _0x2fd819 = {
          message: _0x5e681b.defaultError
        };
        if (_0x2c4367.code !== "invalid_type") {
          return _0x2fd819;
        }
        if (typeof _0x5e681b.data === "undefined") {
          var _0x245c6f = {
            message: _0x577adf ?? _0x5e681b.defaultError
          };
          return _0x245c6f;
        }
        var _0x544523 = {
          message: _0x1ce0bf ?? _0x5e681b.defaultError
        };
        return _0x544523;
      };
      var _0x5d6c42 = {
        errorMap: _0x4fa82f,
        description: _0x255c72
      };
      return _0x5d6c42;
    }
    class _0x3c9a2a {
      constructor(_0x23b5df) {
        this.spa = this.safeParseAsync;
        this._def = _0x23b5df;
        this.parse = this.parse.bind(this);
        this.safeParse = this.safeParse.bind(this);
        this.parseAsync = this.parseAsync.bind(this);
        this.safeParseAsync = this.safeParseAsync.bind(this);
        this.spa = this.spa.bind(this);
        this.refine = this.refine.bind(this);
        this.refinement = this.refinement.bind(this);
        this.superRefine = this.superRefine.bind(this);
        this.optional = this.optional.bind(this);
        this.nullable = this.nullable.bind(this);
        this.nullish = this.nullish.bind(this);
        this.array = this.array.bind(this);
        this.promise = this.promise.bind(this);
        this.or = this.or.bind(this);
        this.and = this.and.bind(this);
        this.transform = this.transform.bind(this);
        this.brand = this.brand.bind(this);
        this.default = this.default.bind(this);
        this.catch = this.catch.bind(this);
        this.describe = this.describe.bind(this);
        this.pipe = this.pipe.bind(this);
        this.isNullable = this.isNullable.bind(this);
        this.isOptional = this.isOptional.bind(this);
      }
      get description() {
        return this._def.description;
      }
      _getType(_0x36f7ea) {
        return _0xc9abf6(_0x36f7ea.data);
      }
      _getOrReturnCtx(_0x19fddf, _0x2c2f41) {
        return _0x2c2f41 || {
          common: _0x19fddf.parent.common,
          data: _0x19fddf.data,
          parsedType: _0xc9abf6(_0x19fddf.data),
          schemaErrorMap: this._def.errorMap,
          path: _0x19fddf.path,
          parent: _0x19fddf.parent
        };
      }
      _processInputParams(_0x7a9935) {
        return {
          status: new _0x524d93(),
          ctx: {
            common: _0x7a9935.parent.common,
            data: _0x7a9935.data,
            parsedType: _0xc9abf6(_0x7a9935.data),
            schemaErrorMap: this._def.errorMap,
            path: _0x7a9935.path,
            parent: _0x7a9935.parent
          }
        };
      }
      _parseSync(_0x3ed21e) {
        const _0x179af2 = this._parse(_0x3ed21e);
        if (_0x4fe8fd(_0x179af2)) {
          throw new Error("Synchronous parse encountered promise.");
        }
        return _0x179af2;
      }
      _parseAsync(_0x5bcc1d) {
        const _0x450367 = this._parse(_0x5bcc1d);
        return Promise.resolve(_0x450367);
      }
      parse(_0x365a07, _0x34ce36) {
        const _0x264239 = this.safeParse(_0x365a07, _0x34ce36);
        if (_0x264239.success) {
          return _0x264239.data;
        }
        throw _0x264239.error;
      }
      safeParse(_0x3d1454, _0x4ab1ef) {
        var _0x1948dd = {
          issues: [],
          async: _0x4ab1ef?.async ?? false,
          contextualErrorMap: _0x4ab1ef?.errorMap
        };
        const _0x2b244c = {
          common: _0x1948dd,
          path: _0x4ab1ef?.path || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _0x3d1454,
          parsedType: _0xc9abf6(_0x3d1454)
        };
        var _0x19297d = {
          data: _0x3d1454,
          path: _0x2b244c.path,
          parent: _0x2b244c
        };
        const _0x539167 = this._parseSync(_0x19297d);
        return _0x2f4691(_0x2b244c, _0x539167);
      }
      async parseAsync(_0x3ba506, _0x54054c) {
        const _0x2b71a5 = await this.safeParseAsync(_0x3ba506, _0x54054c);
        if (_0x2b71a5.success) {
          return _0x2b71a5.data;
        }
        throw _0x2b71a5.error;
      }
      async safeParseAsync(_0x7178c2, _0x42983b) {
        var _0x237dfd = {
          issues: [],
          contextualErrorMap: _0x42983b?.errorMap,
          async: true
        };
        const _0x155c3d = {
          common: _0x237dfd,
          path: _0x42983b?.path || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _0x7178c2,
          parsedType: _0xc9abf6(_0x7178c2)
        };
        var _0x3ec076 = {
          data: _0x7178c2,
          path: _0x155c3d.path,
          parent: _0x155c3d
        };
        const _0x542e85 = this._parse(_0x3ec076);
        const _0x2f2287 = await (_0x4fe8fd(_0x542e85) ? _0x542e85 : Promise.resolve(_0x542e85));
        return _0x2f4691(_0x155c3d, _0x2f2287);
      }
      refine(_0x2e1745, _0x4e86b0) {
        const _0x2a9270 = _0x161cf8 => {
          if (typeof _0x4e86b0 === "string" || typeof _0x4e86b0 === "undefined") {
            var _0x53288e = {
              message: _0x4e86b0
            };
            return _0x53288e;
          } else if (typeof _0x4e86b0 === "function") {
            return _0x4e86b0(_0x161cf8);
          } else {
            return _0x4e86b0;
          }
        };
        return this._refinement((_0x53d4de, _0x14e3aa) => {
          const _0x9754b = _0x2e1745(_0x53d4de);
          const _0x16bb91 = () => _0x14e3aa.addIssue({
            code: _0xda3f45.custom,
            ..._0x2a9270(_0x53d4de)
          });
          if (typeof Promise !== "undefined" && _0x9754b instanceof Promise) {
            return _0x9754b.then(_0x51770c => {
              if (!_0x51770c) {
                _0x16bb91();
                return false;
              } else {
                return true;
              }
            });
          }
          if (!_0x9754b) {
            _0x16bb91();
            return false;
          } else {
            return true;
          }
        });
      }
      refinement(_0x155967, _0x14cd85) {
        return this._refinement((_0x170a4e, _0x288272) => {
          if (!_0x155967(_0x170a4e)) {
            _0x288272.addIssue(typeof _0x14cd85 === "function" ? _0x14cd85(_0x170a4e, _0x288272) : _0x14cd85);
            return false;
          } else {
            return true;
          }
        });
      }
      _refinement(_0x806a8e) {
        var _0x9af50a = {
          type: "refinement",
          refinement: _0x806a8e
        };
        var _0x2534db = {
          schema: this,
          typeName: _0x116981.ZodEffects,
          effect: _0x9af50a
        };
        return new _0xd4b76e(_0x2534db);
      }
      superRefine(_0x15c021) {
        return this._refinement(_0x15c021);
      }
      optional() {
        return _0x13fe1a.create(this, this._def);
      }
      nullable() {
        return _0x85dc69.create(this, this._def);
      }
      nullish() {
        return this.nullable().optional();
      }
      array() {
        return _0x4c9a89.create(this, this._def);
      }
      promise() {
        return _0x17d8c3.create(this, this._def);
      }
      or(_0x1aef7c) {
        return _0x29a4ee.create([this, _0x1aef7c], this._def);
      }
      and(_0x27cf59) {
        return _0x4cc748.create(this, _0x27cf59, this._def);
      }
      transform(_0x525c79) {
        var _0x4083c2 = {
          type: "transform",
          transform: _0x525c79
        };
        return new _0xd4b76e({
          ..._0x289168(this._def),
          schema: this,
          typeName: _0x116981.ZodEffects,
          effect: _0x4083c2
        });
      }
      default(_0x3b0bab) {
        const _0x4c5bab = typeof _0x3b0bab === "function" ? _0x3b0bab : () => _0x3b0bab;
        return new _0x430181({
          ..._0x289168(this._def),
          innerType: this,
          defaultValue: _0x4c5bab,
          typeName: _0x116981.ZodDefault
        });
      }
      brand() {
        return new _0x42fbc9({
          typeName: _0x116981.ZodBranded,
          type: this,
          ..._0x289168(this._def)
        });
      }
      catch(_0x4d8929) {
        const _0x212acd = typeof _0x4d8929 === "function" ? _0x4d8929 : () => _0x4d8929;
        return new _0x480613({
          ..._0x289168(this._def),
          innerType: this,
          catchValue: _0x212acd,
          typeName: _0x116981.ZodCatch
        });
      }
      describe(_0x35c7ed) {
        const _0x2dd057 = this.constructor;
        var _0x48dbb3 = {
          ...this._def
        };
        _0x48dbb3.description = _0x35c7ed;
        return new _0x2dd057(_0x48dbb3);
      }
      pipe(_0xd9cc06) {
        return _0x3044d5.create(this, _0xd9cc06);
      }
      isOptional() {
        return this.safeParse(undefined).success;
      }
      isNullable() {
        return this.safeParse(null).success;
      }
    }
    const _0xabecf9 = /^c[^\s-]{8,}$/i;
    const _0x59db68 = /^[a-z][a-z0-9]*$/;
    const _0x259f72 = /[0-9A-HJKMNP-TV-Z]{26}/;
    const _0x5e9ca8 = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;
    const _0xa43542 = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/;
    const _0xd772c = /^(\p{Extended_Pictographic}|\p{Emoji_Component})+$/u;
    const _0x1d3fb4 = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;
    const _0x370c59 = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
    const _0x2ed39f = _0x5b10be => {
      if (_0x5b10be.precision) {
        if (_0x5b10be.offset) {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{" + _0x5b10be.precision + "}(([+-]\\d{2}(:?\\d{2})?)|Z)$");
        } else {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{" + _0x5b10be.precision + "}Z$");
        }
      } else if (_0x5b10be.precision === 0) {
        if (_0x5b10be.offset) {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$");
        } else {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$");
        }
      } else if (_0x5b10be.offset) {
        return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$");
      } else {
        return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");
      }
    };
    function _0x4016f1(_0xe37d1, _0xf10c9d) {
      if ((_0xf10c9d === "v4" || !_0xf10c9d) && _0x1d3fb4.test(_0xe37d1)) {
        return true;
      }
      if ((_0xf10c9d === "v6" || !_0xf10c9d) && _0x370c59.test(_0xe37d1)) {
        return true;
      }
      return false;
    }
    class _0x325378 extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this._regex = (_0x4b7d70, _0x4bb59c, _0x1fc276) => this.refinement(_0x5173c6 => _0x4b7d70.test(_0x5173c6), {
          validation: _0x4bb59c,
          code: _0xda3f45.invalid_string,
          ..._0x362422.errToObj(_0x1fc276)
        });
        this.nonempty = _0x57074c => this.min(1, _0x362422.errToObj(_0x57074c));
        this.trim = () => new _0x325378({
          ...this._def,
          checks: [...this._def.checks, {
            kind: "trim"
          }]
        });
        this.toLowerCase = () => new _0x325378({
          ...this._def,
          checks: [...this._def.checks, {
            kind: "toLowerCase"
          }]
        });
        this.toUpperCase = () => new _0x325378({
          ...this._def,
          checks: [...this._def.checks, {
            kind: "toUpperCase"
          }]
        });
      }
      _parse(_0xfee03b) {
        if (this._def.coerce) {
          _0xfee03b.data = String(_0xfee03b.data);
        }
        const _0x128515 = this._getType(_0xfee03b);
        if (_0x128515 !== _0x44c2fd.string) {
          const _0x992ff7 = this._getOrReturnCtx(_0xfee03b);
          _0x1e3fb0(_0x992ff7, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.string,
            received: _0x992ff7.parsedType
          });
          return _0x4c2310;
        }
        const _0x145938 = new _0x524d93();
        let _0x40891f = undefined;
        for (const _0x1d9067 of this._def.checks) {
          if (_0x1d9067.kind === "min") {
            if (_0xfee03b.data.length < _0x1d9067.value) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x4edcbb = {
                code: _0xda3f45.too_small,
                minimum: _0x1d9067.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x4edcbb);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "max") {
            if (_0xfee03b.data.length > _0x1d9067.value) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x22b974 = {
                code: _0xda3f45.too_big,
                maximum: _0x1d9067.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x22b974);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "length") {
            const _0xf2dd3d = _0xfee03b.data.length > _0x1d9067.value;
            const _0x14bfc1 = _0xfee03b.data.length < _0x1d9067.value;
            if (_0xf2dd3d || _0x14bfc1) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              if (_0xf2dd3d) {
                var _0x340210 = {
                  code: _0xda3f45.too_big,
                  maximum: _0x1d9067.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: _0x1d9067.message
                };
                _0x1e3fb0(_0x40891f, _0x340210);
              } else if (_0x14bfc1) {
                var _0x55dceb = {
                  code: _0xda3f45.too_small,
                  minimum: _0x1d9067.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: _0x1d9067.message
                };
                _0x1e3fb0(_0x40891f, _0x55dceb);
              }
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "email") {
            if (!_0xa43542.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x3591c3 = {
                validation: "email",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x3591c3);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "emoji") {
            if (!_0xd772c.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x95d91 = {
                validation: "emoji",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x95d91);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "uuid") {
            if (!_0x5e9ca8.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x171c91 = {
                validation: "uuid",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x171c91);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "cuid") {
            if (!_0xabecf9.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x2e5dce = {
                validation: "cuid",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x2e5dce);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "cuid2") {
            if (!_0x59db68.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x3686e0 = {
                validation: "cuid2",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x3686e0);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "ulid") {
            if (!_0x259f72.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x38020e = {
                validation: "ulid",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x38020e);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "url") {
            try {
              new URL(_0xfee03b.data);
            } catch (_0x775936) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x497ea2 = {
                validation: "url",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x497ea2);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "regex") {
            _0x1d9067.regex.lastIndex = 0;
            const _0x5d6929 = _0x1d9067.regex.test(_0xfee03b.data);
            if (!_0x5d6929) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x4a353b = {
                validation: "regex",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x4a353b);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "trim") {
            _0xfee03b.data = _0xfee03b.data.trim();
          } else if (_0x1d9067.kind === "includes") {
            if (!_0xfee03b.data.includes(_0x1d9067.value, _0x1d9067.position)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0xdefea2 = {
                includes: _0x1d9067.value,
                position: _0x1d9067.position
              };
              var _0x40cb9c = {
                code: _0xda3f45.invalid_string,
                validation: _0xdefea2,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x40cb9c);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "toLowerCase") {
            _0xfee03b.data = _0xfee03b.data.toLowerCase();
          } else if (_0x1d9067.kind === "toUpperCase") {
            _0xfee03b.data = _0xfee03b.data.toUpperCase();
          } else if (_0x1d9067.kind === "startsWith") {
            if (!_0xfee03b.data.startsWith(_0x1d9067.value)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x24b76e = {
                startsWith: _0x1d9067.value
              };
              var _0x5ce5e3 = {
                code: _0xda3f45.invalid_string,
                validation: _0x24b76e,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x5ce5e3);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "endsWith") {
            if (!_0xfee03b.data.endsWith(_0x1d9067.value)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x5430fa = {
                endsWith: _0x1d9067.value
              };
              var _0xb956b6 = {
                code: _0xda3f45.invalid_string,
                validation: _0x5430fa,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0xb956b6);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "datetime") {
            const _0x145963 = _0x2ed39f(_0x1d9067);
            if (!_0x145963.test(_0xfee03b.data)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x1a65e8 = {
                code: _0xda3f45.invalid_string,
                validation: "datetime",
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x1a65e8);
              _0x145938.dirty();
            }
          } else if (_0x1d9067.kind === "ip") {
            if (!_0x4016f1(_0xfee03b.data, _0x1d9067.version)) {
              _0x40891f = this._getOrReturnCtx(_0xfee03b, _0x40891f);
              var _0x3f4841 = {
                validation: "ip",
                code: _0xda3f45.invalid_string,
                message: _0x1d9067.message
              };
              _0x1e3fb0(_0x40891f, _0x3f4841);
              _0x145938.dirty();
            }
          } else {
            _0x3d5bee.assertNever(_0x1d9067);
          }
        }
        var _0x2bb9f1 = {
          status: _0x145938.value,
          value: _0xfee03b.data
        };
        return _0x2bb9f1;
      }
      _addCheck(_0x1a380e) {
        var _0x292917 = {
          ...this._def
        };
        _0x292917.checks = [...this._def.checks, _0x1a380e];
        return new _0x325378(_0x292917);
      }
      email(_0x3d78c1) {
        return this._addCheck({
          kind: "email",
          ..._0x362422.errToObj(_0x3d78c1)
        });
      }
      url(_0x32d2ac) {
        return this._addCheck({
          kind: "url",
          ..._0x362422.errToObj(_0x32d2ac)
        });
      }
      emoji(_0x2cb947) {
        return this._addCheck({
          kind: "emoji",
          ..._0x362422.errToObj(_0x2cb947)
        });
      }
      uuid(_0x21e5a8) {
        return this._addCheck({
          kind: "uuid",
          ..._0x362422.errToObj(_0x21e5a8)
        });
      }
      cuid(_0x9f39c6) {
        return this._addCheck({
          kind: "cuid",
          ..._0x362422.errToObj(_0x9f39c6)
        });
      }
      cuid2(_0x47ae3a) {
        return this._addCheck({
          kind: "cuid2",
          ..._0x362422.errToObj(_0x47ae3a)
        });
      }
      ulid(_0x37b057) {
        return this._addCheck({
          kind: "ulid",
          ..._0x362422.errToObj(_0x37b057)
        });
      }
      ip(_0x3f6a65) {
        return this._addCheck({
          kind: "ip",
          ..._0x362422.errToObj(_0x3f6a65)
        });
      }
      datetime(_0x28e70f) {
        if (typeof _0x28e70f === "string") {
          var _0x5b77dd = {
            kind: "datetime",
            precision: null,
            offset: false,
            message: _0x28e70f
          };
          return this._addCheck(_0x5b77dd);
        }
        return this._addCheck({
          kind: "datetime",
          precision: typeof _0x28e70f?.precision === "undefined" ? null : _0x28e70f?.precision,
          offset: _0x28e70f?.offset ?? false,
          ..._0x362422.errToObj(_0x28e70f?.message)
        });
      }
      regex(_0x2e8b1c, _0x5e7136) {
        return this._addCheck({
          kind: "regex",
          regex: _0x2e8b1c,
          ..._0x362422.errToObj(_0x5e7136)
        });
      }
      includes(_0x9d74b0, _0x48183d) {
        return this._addCheck({
          kind: "includes",
          value: _0x9d74b0,
          position: _0x48183d?.position,
          ..._0x362422.errToObj(_0x48183d?.message)
        });
      }
      startsWith(_0x14796a, _0x1d63c1) {
        return this._addCheck({
          kind: "startsWith",
          value: _0x14796a,
          ..._0x362422.errToObj(_0x1d63c1)
        });
      }
      endsWith(_0xa5e089, _0x4d3f56) {
        return this._addCheck({
          kind: "endsWith",
          value: _0xa5e089,
          ..._0x362422.errToObj(_0x4d3f56)
        });
      }
      min(_0x547986, _0xd9be5c) {
        return this._addCheck({
          kind: "min",
          value: _0x547986,
          ..._0x362422.errToObj(_0xd9be5c)
        });
      }
      max(_0x5c0778, _0x24a8cf) {
        return this._addCheck({
          kind: "max",
          value: _0x5c0778,
          ..._0x362422.errToObj(_0x24a8cf)
        });
      }
      length(_0x4f003c, _0x533155) {
        return this._addCheck({
          kind: "length",
          value: _0x4f003c,
          ..._0x362422.errToObj(_0x533155)
        });
      }
      get isDatetime() {
        return !!this._def.checks.find(_0x58867f => _0x58867f.kind === "datetime");
      }
      get isEmail() {
        return !!this._def.checks.find(_0xa9ba48 => _0xa9ba48.kind === "email");
      }
      get isURL() {
        return !!this._def.checks.find(_0x36c755 => _0x36c755.kind === "url");
      }
      get isEmoji() {
        return !!this._def.checks.find(_0x3fd9c4 => _0x3fd9c4.kind === "emoji");
      }
      get isUUID() {
        return !!this._def.checks.find(_0x11e810 => _0x11e810.kind === "uuid");
      }
      get isCUID() {
        return !!this._def.checks.find(_0x4e66c1 => _0x4e66c1.kind === "cuid");
      }
      get isCUID2() {
        return !!this._def.checks.find(_0x4da2f1 => _0x4da2f1.kind === "cuid2");
      }
      get isULID() {
        return !!this._def.checks.find(_0x41121e => _0x41121e.kind === "ulid");
      }
      get isIP() {
        return !!this._def.checks.find(_0x798128 => _0x798128.kind === "ip");
      }
      get minLength() {
        let _0x357461 = null;
        for (const _0x4dc515 of this._def.checks) {
          if (_0x4dc515.kind === "min") {
            if (_0x357461 === null || _0x4dc515.value > _0x357461) {
              _0x357461 = _0x4dc515.value;
            }
          }
        }
        return _0x357461;
      }
      get maxLength() {
        let _0x3749bb = null;
        for (const _0xaadde0 of this._def.checks) {
          if (_0xaadde0.kind === "max") {
            if (_0x3749bb === null || _0xaadde0.value < _0x3749bb) {
              _0x3749bb = _0xaadde0.value;
            }
          }
        }
        return _0x3749bb;
      }
    }
    _0x325378.create = _0x38ad7b => {
      return new _0x325378({
        checks: [],
        typeName: _0x116981.ZodString,
        coerce: _0x38ad7b?.coerce ?? false,
        ..._0x289168(_0x38ad7b)
      });
    };
    function _0x2b4463(_0x1a29ba, _0x491acb) {
      const _0x16cfab = (_0x1a29ba.toString().split(".")[1] || "").length;
      const _0x16e32e = (_0x491acb.toString().split(".")[1] || "").length;
      const _0x236b91 = _0x16cfab > _0x16e32e ? _0x16cfab : _0x16e32e;
      const _0x1cbced = parseInt(_0x1a29ba.toFixed(_0x236b91).replace(".", ""));
      const _0x2f823e = parseInt(_0x491acb.toFixed(_0x236b91).replace(".", ""));
      return _0x1cbced % _0x2f823e / Math.pow(10, _0x236b91);
    }
    class _0x409d6f extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
        this.step = this.multipleOf;
      }
      _parse(_0x307cbf) {
        if (this._def.coerce) {
          _0x307cbf.data = Number(_0x307cbf.data);
        }
        const _0x2fa889 = this._getType(_0x307cbf);
        if (_0x2fa889 !== _0x44c2fd.number) {
          const _0x3002f3 = this._getOrReturnCtx(_0x307cbf);
          _0x1e3fb0(_0x3002f3, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.number,
            received: _0x3002f3.parsedType
          });
          return _0x4c2310;
        }
        let _0x52da33 = undefined;
        const _0x2c7737 = new _0x524d93();
        for (const _0x285245 of this._def.checks) {
          if (_0x285245.kind === "int") {
            if (!_0x3d5bee.isInteger(_0x307cbf.data)) {
              _0x52da33 = this._getOrReturnCtx(_0x307cbf, _0x52da33);
              var _0x4209c7 = {
                code: _0xda3f45.invalid_type,
                expected: "integer",
                received: "float",
                message: _0x285245.message
              };
              _0x1e3fb0(_0x52da33, _0x4209c7);
              _0x2c7737.dirty();
            }
          } else if (_0x285245.kind === "min") {
            const _0x46c366 = _0x285245.inclusive ? _0x307cbf.data < _0x285245.value : _0x307cbf.data <= _0x285245.value;
            if (_0x46c366) {
              _0x52da33 = this._getOrReturnCtx(_0x307cbf, _0x52da33);
              var _0x3237b6 = {
                code: _0xda3f45.too_small,
                minimum: _0x285245.value,
                type: "number",
                inclusive: _0x285245.inclusive,
                exact: false,
                message: _0x285245.message
              };
              _0x1e3fb0(_0x52da33, _0x3237b6);
              _0x2c7737.dirty();
            }
          } else if (_0x285245.kind === "max") {
            const _0x3d9995 = _0x285245.inclusive ? _0x307cbf.data > _0x285245.value : _0x307cbf.data >= _0x285245.value;
            if (_0x3d9995) {
              _0x52da33 = this._getOrReturnCtx(_0x307cbf, _0x52da33);
              var _0x3a321f = {
                code: _0xda3f45.too_big,
                maximum: _0x285245.value,
                type: "number",
                inclusive: _0x285245.inclusive,
                exact: false,
                message: _0x285245.message
              };
              _0x1e3fb0(_0x52da33, _0x3a321f);
              _0x2c7737.dirty();
            }
          } else if (_0x285245.kind === "multipleOf") {
            if (_0x2b4463(_0x307cbf.data, _0x285245.value) !== 0) {
              _0x52da33 = this._getOrReturnCtx(_0x307cbf, _0x52da33);
              var _0x36e06c = {
                code: _0xda3f45.not_multiple_of,
                multipleOf: _0x285245.value,
                message: _0x285245.message
              };
              _0x1e3fb0(_0x52da33, _0x36e06c);
              _0x2c7737.dirty();
            }
          } else if (_0x285245.kind === "finite") {
            if (!Number.isFinite(_0x307cbf.data)) {
              _0x52da33 = this._getOrReturnCtx(_0x307cbf, _0x52da33);
              var _0x466453 = {
                code: _0xda3f45.not_finite,
                message: _0x285245.message
              };
              _0x1e3fb0(_0x52da33, _0x466453);
              _0x2c7737.dirty();
            }
          } else {
            _0x3d5bee.assertNever(_0x285245);
          }
        }
        var _0x368714 = {
          status: _0x2c7737.value,
          value: _0x307cbf.data
        };
        return _0x368714;
      }
      gte(_0x5c371b, _0x4463a9) {
        return this.setLimit("min", _0x5c371b, true, _0x362422.toString(_0x4463a9));
      }
      gt(_0x4cdd51, _0x31e213) {
        return this.setLimit("min", _0x4cdd51, false, _0x362422.toString(_0x31e213));
      }
      lte(_0x42ca37, _0x58c51a) {
        return this.setLimit("max", _0x42ca37, true, _0x362422.toString(_0x58c51a));
      }
      lt(_0x50e104, _0x18fe68) {
        return this.setLimit("max", _0x50e104, false, _0x362422.toString(_0x18fe68));
      }
      setLimit(_0x10a4af, _0x444def, _0x952955, _0x3a99d0) {
        return new _0x409d6f({
          ...this._def,
          checks: [...this._def.checks, {
            kind: _0x10a4af,
            value: _0x444def,
            inclusive: _0x952955,
            message: _0x362422.toString(_0x3a99d0)
          }]
        });
      }
      _addCheck(_0x4a2cd2) {
        var _0x8f56d1 = {
          ...this._def
        };
        _0x8f56d1.checks = [...this._def.checks, _0x4a2cd2];
        return new _0x409d6f(_0x8f56d1);
      }
      int(_0x32532c) {
        return this._addCheck({
          kind: "int",
          message: _0x362422.toString(_0x32532c)
        });
      }
      positive(_0x404c17) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: false,
          message: _0x362422.toString(_0x404c17)
        });
      }
      negative(_0x1ca83b) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: false,
          message: _0x362422.toString(_0x1ca83b)
        });
      }
      nonpositive(_0x29e24c) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: true,
          message: _0x362422.toString(_0x29e24c)
        });
      }
      nonnegative(_0x29bd5b) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: true,
          message: _0x362422.toString(_0x29bd5b)
        });
      }
      multipleOf(_0x160fb2, _0x290ed6) {
        return this._addCheck({
          kind: "multipleOf",
          value: _0x160fb2,
          message: _0x362422.toString(_0x290ed6)
        });
      }
      finite(_0x1352ab) {
        return this._addCheck({
          kind: "finite",
          message: _0x362422.toString(_0x1352ab)
        });
      }
      safe(_0x32d81d) {
        return this._addCheck({
          kind: "min",
          inclusive: true,
          value: Number.MIN_SAFE_INTEGER,
          message: _0x362422.toString(_0x32d81d)
        })._addCheck({
          kind: "max",
          inclusive: true,
          value: Number.MAX_SAFE_INTEGER,
          message: _0x362422.toString(_0x32d81d)
        });
      }
      get minValue() {
        let _0x46ed99 = null;
        for (const _0x54955d of this._def.checks) {
          if (_0x54955d.kind === "min") {
            if (_0x46ed99 === null || _0x54955d.value > _0x46ed99) {
              _0x46ed99 = _0x54955d.value;
            }
          }
        }
        return _0x46ed99;
      }
      get maxValue() {
        let _0x556da3 = null;
        for (const _0x473894 of this._def.checks) {
          if (_0x473894.kind === "max") {
            if (_0x556da3 === null || _0x473894.value < _0x556da3) {
              _0x556da3 = _0x473894.value;
            }
          }
        }
        return _0x556da3;
      }
      get isInt() {
        return !!this._def.checks.find(_0x107861 => _0x107861.kind === "int" || _0x107861.kind === "multipleOf" && _0x3d5bee.isInteger(_0x107861.value));
      }
      get isFinite() {
        let _0x1cdea4 = null;
        let _0x23dbdf = null;
        for (const _0x34387f of this._def.checks) {
          if (_0x34387f.kind === "finite" || _0x34387f.kind === "int" || _0x34387f.kind === "multipleOf") {
            return true;
          } else if (_0x34387f.kind === "min") {
            if (_0x23dbdf === null || _0x34387f.value > _0x23dbdf) {
              _0x23dbdf = _0x34387f.value;
            }
          } else if (_0x34387f.kind === "max") {
            if (_0x1cdea4 === null || _0x34387f.value < _0x1cdea4) {
              _0x1cdea4 = _0x34387f.value;
            }
          }
        }
        return Number.isFinite(_0x23dbdf) && Number.isFinite(_0x1cdea4);
      }
    }
    _0x409d6f.create = _0x21330c => {
      return new _0x409d6f({
        checks: [],
        typeName: _0x116981.ZodNumber,
        coerce: _0x21330c?.coerce || false,
        ..._0x289168(_0x21330c)
      });
    };
    class _0x3df5ea extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
      }
      _parse(_0x160690) {
        if (this._def.coerce) {
          _0x160690.data = BigInt(_0x160690.data);
        }
        const _0x5e28b7 = this._getType(_0x160690);
        if (_0x5e28b7 !== _0x44c2fd.bigint) {
          const _0x10e8ec = this._getOrReturnCtx(_0x160690);
          _0x1e3fb0(_0x10e8ec, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.bigint,
            received: _0x10e8ec.parsedType
          });
          return _0x4c2310;
        }
        let _0x1f5b70 = undefined;
        const _0xc84f63 = new _0x524d93();
        for (const _0x8b02f6 of this._def.checks) {
          if (_0x8b02f6.kind === "min") {
            const _0x201e24 = _0x8b02f6.inclusive ? _0x160690.data < _0x8b02f6.value : _0x160690.data <= _0x8b02f6.value;
            if (_0x201e24) {
              _0x1f5b70 = this._getOrReturnCtx(_0x160690, _0x1f5b70);
              var _0x120c56 = {
                code: _0xda3f45.too_small,
                type: "bigint",
                minimum: _0x8b02f6.value,
                inclusive: _0x8b02f6.inclusive,
                message: _0x8b02f6.message
              };
              _0x1e3fb0(_0x1f5b70, _0x120c56);
              _0xc84f63.dirty();
            }
          } else if (_0x8b02f6.kind === "max") {
            const _0x4bdd63 = _0x8b02f6.inclusive ? _0x160690.data > _0x8b02f6.value : _0x160690.data >= _0x8b02f6.value;
            if (_0x4bdd63) {
              _0x1f5b70 = this._getOrReturnCtx(_0x160690, _0x1f5b70);
              var _0x1183bf = {
                code: _0xda3f45.too_big,
                type: "bigint",
                maximum: _0x8b02f6.value,
                inclusive: _0x8b02f6.inclusive,
                message: _0x8b02f6.message
              };
              _0x1e3fb0(_0x1f5b70, _0x1183bf);
              _0xc84f63.dirty();
            }
          } else if (_0x8b02f6.kind === "multipleOf") {
            if (_0x160690.data % _0x8b02f6.value !== BigInt(0)) {
              _0x1f5b70 = this._getOrReturnCtx(_0x160690, _0x1f5b70);
              var _0x4da131 = {
                code: _0xda3f45.not_multiple_of,
                multipleOf: _0x8b02f6.value,
                message: _0x8b02f6.message
              };
              _0x1e3fb0(_0x1f5b70, _0x4da131);
              _0xc84f63.dirty();
            }
          } else {
            _0x3d5bee.assertNever(_0x8b02f6);
          }
        }
        var _0x3debf5 = {
          status: _0xc84f63.value,
          value: _0x160690.data
        };
        return _0x3debf5;
      }
      gte(_0x3a601d, _0x3b5313) {
        return this.setLimit("min", _0x3a601d, true, _0x362422.toString(_0x3b5313));
      }
      gt(_0x330db1, _0x37acd9) {
        return this.setLimit("min", _0x330db1, false, _0x362422.toString(_0x37acd9));
      }
      lte(_0x38fb7e, _0x5eaefc) {
        return this.setLimit("max", _0x38fb7e, true, _0x362422.toString(_0x5eaefc));
      }
      lt(_0x484cb9, _0x2e3b95) {
        return this.setLimit("max", _0x484cb9, false, _0x362422.toString(_0x2e3b95));
      }
      setLimit(_0x5f3dee, _0x4a420d, _0x363a56, _0x2b470b) {
        return new _0x3df5ea({
          ...this._def,
          checks: [...this._def.checks, {
            kind: _0x5f3dee,
            value: _0x4a420d,
            inclusive: _0x363a56,
            message: _0x362422.toString(_0x2b470b)
          }]
        });
      }
      _addCheck(_0x3be73d) {
        var _0x49cdf3 = {
          ...this._def
        };
        _0x49cdf3.checks = [...this._def.checks, _0x3be73d];
        return new _0x3df5ea(_0x49cdf3);
      }
      positive(_0x47e82b) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: false,
          message: _0x362422.toString(_0x47e82b)
        });
      }
      negative(_0x5f177b) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: false,
          message: _0x362422.toString(_0x5f177b)
        });
      }
      nonpositive(_0x11b92a) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: true,
          message: _0x362422.toString(_0x11b92a)
        });
      }
      nonnegative(_0x44b1f0) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: true,
          message: _0x362422.toString(_0x44b1f0)
        });
      }
      multipleOf(_0x142c81, _0x43254e) {
        return this._addCheck({
          kind: "multipleOf",
          value: _0x142c81,
          message: _0x362422.toString(_0x43254e)
        });
      }
      get minValue() {
        let _0x1bd1e9 = null;
        for (const _0x4059e3 of this._def.checks) {
          if (_0x4059e3.kind === "min") {
            if (_0x1bd1e9 === null || _0x4059e3.value > _0x1bd1e9) {
              _0x1bd1e9 = _0x4059e3.value;
            }
          }
        }
        return _0x1bd1e9;
      }
      get maxValue() {
        let _0x29b57a = null;
        for (const _0x4399f6 of this._def.checks) {
          if (_0x4399f6.kind === "max") {
            if (_0x29b57a === null || _0x4399f6.value < _0x29b57a) {
              _0x29b57a = _0x4399f6.value;
            }
          }
        }
        return _0x29b57a;
      }
    }
    _0x3df5ea.create = _0x1a348c => {
      return new _0x3df5ea({
        checks: [],
        typeName: _0x116981.ZodBigInt,
        coerce: _0x1a348c?.coerce ?? false,
        ..._0x289168(_0x1a348c)
      });
    };
    class _0x3af5b4 extends _0x3c9a2a {
      _parse(_0x13b454) {
        if (this._def.coerce) {
          _0x13b454.data = Boolean(_0x13b454.data);
        }
        const _0x105651 = this._getType(_0x13b454);
        if (_0x105651 !== _0x44c2fd.boolean) {
          const _0x287a6a = this._getOrReturnCtx(_0x13b454);
          _0x1e3fb0(_0x287a6a, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.boolean,
            received: _0x287a6a.parsedType
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x13b454.data);
      }
    }
    _0x3af5b4.create = _0x3fe52a => {
      return new _0x3af5b4({
        typeName: _0x116981.ZodBoolean,
        coerce: _0x3fe52a?.coerce || false,
        ..._0x289168(_0x3fe52a)
      });
    };
    class _0x2e2497 extends _0x3c9a2a {
      _parse(_0x4a36cc) {
        if (this._def.coerce) {
          _0x4a36cc.data = new Date(_0x4a36cc.data);
        }
        const _0x5a6d80 = this._getType(_0x4a36cc);
        if (_0x5a6d80 !== _0x44c2fd.date) {
          const _0x2395e6 = this._getOrReturnCtx(_0x4a36cc);
          _0x1e3fb0(_0x2395e6, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.date,
            received: _0x2395e6.parsedType
          });
          return _0x4c2310;
        }
        if (isNaN(_0x4a36cc.data.getTime())) {
          const _0xa8c2d9 = this._getOrReturnCtx(_0x4a36cc);
          var _0xfd79d2 = {
            code: _0xda3f45.invalid_date
          };
          _0x1e3fb0(_0xa8c2d9, _0xfd79d2);
          return _0x4c2310;
        }
        const _0x1c7de9 = new _0x524d93();
        let _0x5761cc = undefined;
        for (const _0x24b2e8 of this._def.checks) {
          if (_0x24b2e8.kind === "min") {
            if (_0x4a36cc.data.getTime() < _0x24b2e8.value) {
              _0x5761cc = this._getOrReturnCtx(_0x4a36cc, _0x5761cc);
              var _0x60b50f = {
                code: _0xda3f45.too_small,
                message: _0x24b2e8.message,
                inclusive: true,
                exact: false,
                minimum: _0x24b2e8.value,
                type: "date"
              };
              _0x1e3fb0(_0x5761cc, _0x60b50f);
              _0x1c7de9.dirty();
            }
          } else if (_0x24b2e8.kind === "max") {
            if (_0x4a36cc.data.getTime() > _0x24b2e8.value) {
              _0x5761cc = this._getOrReturnCtx(_0x4a36cc, _0x5761cc);
              var _0x1fdf05 = {
                code: _0xda3f45.too_big,
                message: _0x24b2e8.message,
                inclusive: true,
                exact: false,
                maximum: _0x24b2e8.value,
                type: "date"
              };
              _0x1e3fb0(_0x5761cc, _0x1fdf05);
              _0x1c7de9.dirty();
            }
          } else {
            _0x3d5bee.assertNever(_0x24b2e8);
          }
        }
        return {
          status: _0x1c7de9.value,
          value: new Date(_0x4a36cc.data.getTime())
        };
      }
      _addCheck(_0x4f21a1) {
        var _0x34d94a = {
          ...this._def
        };
        _0x34d94a.checks = [...this._def.checks, _0x4f21a1];
        return new _0x2e2497(_0x34d94a);
      }
      min(_0x10e3e0, _0x52c988) {
        return this._addCheck({
          kind: "min",
          value: _0x10e3e0.getTime(),
          message: _0x362422.toString(_0x52c988)
        });
      }
      max(_0x5e5c14, _0x2adfb3) {
        return this._addCheck({
          kind: "max",
          value: _0x5e5c14.getTime(),
          message: _0x362422.toString(_0x2adfb3)
        });
      }
      get minDate() {
        let _0x57d97b = null;
        for (const _0x3b1cd1 of this._def.checks) {
          if (_0x3b1cd1.kind === "min") {
            if (_0x57d97b === null || _0x3b1cd1.value > _0x57d97b) {
              _0x57d97b = _0x3b1cd1.value;
            }
          }
        }
        if (_0x57d97b != null) {
          return new Date(_0x57d97b);
        } else {
          return null;
        }
      }
      get maxDate() {
        let _0x155e5d = null;
        for (const _0x1763a0 of this._def.checks) {
          if (_0x1763a0.kind === "max") {
            if (_0x155e5d === null || _0x1763a0.value < _0x155e5d) {
              _0x155e5d = _0x1763a0.value;
            }
          }
        }
        if (_0x155e5d != null) {
          return new Date(_0x155e5d);
        } else {
          return null;
        }
      }
    }
    _0x2e2497.create = _0x2a8124 => {
      return new _0x2e2497({
        checks: [],
        coerce: _0x2a8124?.coerce || false,
        typeName: _0x116981.ZodDate,
        ..._0x289168(_0x2a8124)
      });
    };
    class _0x4f3f4c extends _0x3c9a2a {
      _parse(_0x4d351f) {
        const _0x431df7 = this._getType(_0x4d351f);
        if (_0x431df7 !== _0x44c2fd.symbol) {
          const _0x112c15 = this._getOrReturnCtx(_0x4d351f);
          _0x1e3fb0(_0x112c15, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.symbol,
            received: _0x112c15.parsedType
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x4d351f.data);
      }
    }
    _0x4f3f4c.create = _0x176b95 => {
      return new _0x4f3f4c({
        typeName: _0x116981.ZodSymbol,
        ..._0x289168(_0x176b95)
      });
    };
    class _0x5b103f extends _0x3c9a2a {
      _parse(_0x4d73ff) {
        const _0x35981d = this._getType(_0x4d73ff);
        if (_0x35981d !== _0x44c2fd.undefined) {
          const _0x35b76f = this._getOrReturnCtx(_0x4d73ff);
          _0x1e3fb0(_0x35b76f, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.undefined,
            received: _0x35b76f.parsedType
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x4d73ff.data);
      }
    }
    _0x5b103f.create = _0x4e25fc => {
      return new _0x5b103f({
        typeName: _0x116981.ZodUndefined,
        ..._0x289168(_0x4e25fc)
      });
    };
    class _0x11448 extends _0x3c9a2a {
      _parse(_0x5d1610) {
        const _0x5eccb1 = this._getType(_0x5d1610);
        if (_0x5eccb1 !== _0x44c2fd.null) {
          const _0x5b5f62 = this._getOrReturnCtx(_0x5d1610);
          _0x1e3fb0(_0x5b5f62, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.null,
            received: _0x5b5f62.parsedType
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x5d1610.data);
      }
    }
    _0x11448.create = _0x12444f => {
      return new _0x11448({
        typeName: _0x116981.ZodNull,
        ..._0x289168(_0x12444f)
      });
    };
    class _0x1739bf extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this._any = true;
      }
      _parse(_0x54be44) {
        return _0x2544e8(_0x54be44.data);
      }
    }
    _0x1739bf.create = _0x580b58 => {
      return new _0x1739bf({
        typeName: _0x116981.ZodAny,
        ..._0x289168(_0x580b58)
      });
    };
    class _0x3f61be extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this._unknown = true;
      }
      _parse(_0x52932b) {
        return _0x2544e8(_0x52932b.data);
      }
    }
    _0x3f61be.create = _0x3ba26 => {
      return new _0x3f61be({
        typeName: _0x116981.ZodUnknown,
        ..._0x289168(_0x3ba26)
      });
    };
    class _0x5b6aa0 extends _0x3c9a2a {
      _parse(_0x3e15fe) {
        const _0x537ebb = this._getOrReturnCtx(_0x3e15fe);
        _0x1e3fb0(_0x537ebb, {
          code: _0xda3f45.invalid_type,
          expected: _0x44c2fd.never,
          received: _0x537ebb.parsedType
        });
        return _0x4c2310;
      }
    }
    _0x5b6aa0.create = _0x17d478 => {
      return new _0x5b6aa0({
        typeName: _0x116981.ZodNever,
        ..._0x289168(_0x17d478)
      });
    };
    class _0x29ecee extends _0x3c9a2a {
      _parse(_0x35a7f7) {
        const _0x1f4902 = this._getType(_0x35a7f7);
        if (_0x1f4902 !== _0x44c2fd.undefined) {
          const _0x580b08 = this._getOrReturnCtx(_0x35a7f7);
          _0x1e3fb0(_0x580b08, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.void,
            received: _0x580b08.parsedType
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x35a7f7.data);
      }
    }
    _0x29ecee.create = _0x3d5084 => {
      return new _0x29ecee({
        typeName: _0x116981.ZodVoid,
        ..._0x289168(_0x3d5084)
      });
    };
    class _0x4c9a89 extends _0x3c9a2a {
      _parse(_0x1b75c0) {
        const {
          ctx: _0x53b097,
          status: _0x237b6d
        } = this._processInputParams(_0x1b75c0);
        const _0x3d4650 = this._def;
        if (_0x53b097.parsedType !== _0x44c2fd.array) {
          _0x1e3fb0(_0x53b097, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.array,
            received: _0x53b097.parsedType
          });
          return _0x4c2310;
        }
        if (_0x3d4650.exactLength !== null) {
          const _0x2c8a32 = _0x53b097.data.length > _0x3d4650.exactLength.value;
          const _0x3e5acf = _0x53b097.data.length < _0x3d4650.exactLength.value;
          if (_0x2c8a32 || _0x3e5acf) {
            var _0x55cdab = {
              code: _0x2c8a32 ? _0xda3f45.too_big : _0xda3f45.too_small,
              minimum: _0x3e5acf ? _0x3d4650.exactLength.value : undefined,
              maximum: _0x2c8a32 ? _0x3d4650.exactLength.value : undefined,
              type: "array",
              inclusive: true,
              exact: true,
              message: _0x3d4650.exactLength.message
            };
            _0x1e3fb0(_0x53b097, _0x55cdab);
            _0x237b6d.dirty();
          }
        }
        if (_0x3d4650.minLength !== null) {
          if (_0x53b097.data.length < _0x3d4650.minLength.value) {
            var _0x12c8f2 = {
              code: _0xda3f45.too_small,
              minimum: _0x3d4650.minLength.value,
              type: "array",
              inclusive: true,
              exact: false,
              message: _0x3d4650.minLength.message
            };
            _0x1e3fb0(_0x53b097, _0x12c8f2);
            _0x237b6d.dirty();
          }
        }
        if (_0x3d4650.maxLength !== null) {
          if (_0x53b097.data.length > _0x3d4650.maxLength.value) {
            var _0x31df3c = {
              code: _0xda3f45.too_big,
              maximum: _0x3d4650.maxLength.value,
              type: "array",
              inclusive: true,
              exact: false,
              message: _0x3d4650.maxLength.message
            };
            _0x1e3fb0(_0x53b097, _0x31df3c);
            _0x237b6d.dirty();
          }
        }
        if (_0x53b097.common.async) {
          return Promise.all([..._0x53b097.data].map((_0x2ef3f1, _0x7f3ef7) => {
            return _0x3d4650.type._parseAsync(new _0x1d36e7(_0x53b097, _0x2ef3f1, _0x53b097.path, _0x7f3ef7));
          })).then(_0x3e8175 => {
            return _0x524d93.mergeArray(_0x237b6d, _0x3e8175);
          });
        }
        const _0x298ada = [..._0x53b097.data].map((_0x73ab60, _0x9d738) => {
          return _0x3d4650.type._parseSync(new _0x1d36e7(_0x53b097, _0x73ab60, _0x53b097.path, _0x9d738));
        });
        return _0x524d93.mergeArray(_0x237b6d, _0x298ada);
      }
      get element() {
        return this._def.type;
      }
      min(_0x3876e4, _0x16f36a) {
        return new _0x4c9a89({
          ...this._def,
          minLength: {
            value: _0x3876e4,
            message: _0x362422.toString(_0x16f36a)
          }
        });
      }
      max(_0x15c4b7, _0x1b0cf8) {
        return new _0x4c9a89({
          ...this._def,
          maxLength: {
            value: _0x15c4b7,
            message: _0x362422.toString(_0x1b0cf8)
          }
        });
      }
      length(_0x2796cf, _0x10c421) {
        return new _0x4c9a89({
          ...this._def,
          exactLength: {
            value: _0x2796cf,
            message: _0x362422.toString(_0x10c421)
          }
        });
      }
      nonempty(_0x20945b) {
        return this.min(1, _0x20945b);
      }
    }
    _0x4c9a89.create = (_0x4bc720, _0xd640bb) => {
      return new _0x4c9a89({
        type: _0x4bc720,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: _0x116981.ZodArray,
        ..._0x289168(_0xd640bb)
      });
    };
    function _0x2003d5(_0x448b25) {
      if (_0x448b25 instanceof _0x5753a7) {
        const _0xa8311b = {};
        for (const _0x92289 in _0x448b25.shape) {
          const _0x28152c = _0x448b25.shape[_0x92289];
          _0xa8311b[_0x92289] = _0x13fe1a.create(_0x2003d5(_0x28152c));
        }
        var _0x41c119 = {
          ..._0x448b25._def
        };
        _0x41c119.shape = () => _0xa8311b;
        return new _0x5753a7(_0x41c119);
      } else if (_0x448b25 instanceof _0x4c9a89) {
        return new _0x4c9a89({
          ..._0x448b25._def,
          type: _0x2003d5(_0x448b25.element)
        });
      } else if (_0x448b25 instanceof _0x13fe1a) {
        return _0x13fe1a.create(_0x2003d5(_0x448b25.unwrap()));
      } else if (_0x448b25 instanceof _0x85dc69) {
        return _0x85dc69.create(_0x2003d5(_0x448b25.unwrap()));
      } else if (_0x448b25 instanceof _0xf02b98) {
        return _0xf02b98.create(_0x448b25.items.map(_0xc7155d => _0x2003d5(_0xc7155d)));
      } else {
        return _0x448b25;
      }
    }
    class _0x5753a7 extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this._cached = null;
        this.nonstrict = this.passthrough;
        this.augment = this.extend;
      }
      _getCached() {
        if (this._cached !== null) {
          return this._cached;
        }
        const _0xfd1ad0 = this._def.shape();
        const _0x326a12 = _0x3d5bee.objectKeys(_0xfd1ad0);
        var _0x966ebd = {
          shape: _0xfd1ad0,
          keys: _0x326a12
        };
        return this._cached = _0x966ebd;
      }
      _parse(_0x3da5f2) {
        const _0x1aa7e4 = this._getType(_0x3da5f2);
        if (_0x1aa7e4 !== _0x44c2fd.object) {
          const _0x53c28c = this._getOrReturnCtx(_0x3da5f2);
          _0x1e3fb0(_0x53c28c, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.object,
            received: _0x53c28c.parsedType
          });
          return _0x4c2310;
        }
        const {
          status: _0x102932,
          ctx: _0x236179
        } = this._processInputParams(_0x3da5f2);
        const {
          shape: _0xa1bb35,
          keys: _0x4ca222
        } = this._getCached();
        const _0x4a4bbe = [];
        if (!(this._def.catchall instanceof _0x5b6aa0) || this._def.unknownKeys !== "strip") {
          for (const _0x2c6412 in _0x236179.data) {
            if (!_0x4ca222.includes(_0x2c6412)) {
              _0x4a4bbe.push(_0x2c6412);
            }
          }
        }
        const _0x10fa91 = [];
        for (const _0x5af450 of _0x4ca222) {
          const _0x49e2bf = _0xa1bb35[_0x5af450];
          const _0xd9c0c6 = _0x236179.data[_0x5af450];
          var _0x3c8bec = {
            status: "valid",
            value: _0x5af450
          };
          _0x10fa91.push({
            key: _0x3c8bec,
            value: _0x49e2bf._parse(new _0x1d36e7(_0x236179, _0xd9c0c6, _0x236179.path, _0x5af450)),
            alwaysSet: _0x5af450 in _0x236179.data
          });
        }
        if (this._def.catchall instanceof _0x5b6aa0) {
          const _0x28fe97 = this._def.unknownKeys;
          if (_0x28fe97 === "passthrough") {
            for (const _0x1c0f1e of _0x4a4bbe) {
              var _0x2287ce = {
                status: "valid",
                value: _0x1c0f1e
              };
              var _0x5d60f9 = {
                status: "valid",
                value: _0x236179.data[_0x1c0f1e]
              };
              var _0x5e12a2 = {
                key: _0x2287ce,
                value: _0x5d60f9
              };
              _0x10fa91.push(_0x5e12a2);
            }
          } else if (_0x28fe97 === "strict") {
            if (_0x4a4bbe.length > 0) {
              var _0x18158f = {
                code: _0xda3f45.unrecognized_keys,
                keys: _0x4a4bbe
              };
              _0x1e3fb0(_0x236179, _0x18158f);
              _0x102932.dirty();
            }
          } else if (_0x28fe97 === "strip") ;else {
            throw new Error("Internal ZodObject error: invalid unknownKeys value.");
          }
        } else {
          const _0x78a0a5 = this._def.catchall;
          for (const _0x347721 of _0x4a4bbe) {
            const _0x14c7e8 = _0x236179.data[_0x347721];
            var _0x13749f = {
              status: "valid",
              value: _0x347721
            };
            _0x10fa91.push({
              key: _0x13749f,
              value: _0x78a0a5._parse(new _0x1d36e7(_0x236179, _0x14c7e8, _0x236179.path, _0x347721)),
              alwaysSet: _0x347721 in _0x236179.data
            });
          }
        }
        if (_0x236179.common.async) {
          return Promise.resolve().then(async () => {
            const _0x2db93b = [];
            for (const _0x1f6641 of _0x10fa91) {
              const _0x1ea1d5 = await _0x1f6641.key;
              var _0x318810 = {
                key: _0x1ea1d5,
                value: await _0x1f6641.value,
                alwaysSet: _0x1f6641.alwaysSet
              };
              _0x2db93b.push(_0x318810);
            }
            return _0x2db93b;
          }).then(_0x3a19d9 => {
            return _0x524d93.mergeObjectSync(_0x102932, _0x3a19d9);
          });
        } else {
          return _0x524d93.mergeObjectSync(_0x102932, _0x10fa91);
        }
      }
      get shape() {
        return this._def.shape();
      }
      strict(_0x540703) {
        _0x362422.errToObj;
        return new _0x5753a7({
          ...this._def,
          unknownKeys: "strict",
          ...(_0x540703 !== undefined ? {
            errorMap: (_0x48ec5d, _0xa14482) => {
              var _0x574389;
              var _0x5bfdfc;
              const _0x57be32 = ((_0x5bfdfc = (_0x574389 = this._def).errorMap) === null || _0x5bfdfc === undefined ? undefined : _0x5bfdfc.call(_0x574389, _0x48ec5d, _0xa14482).message) ?? _0xa14482.defaultError;
              if (_0x48ec5d.code === "unrecognized_keys") {
                return {
                  message: _0x362422.errToObj(_0x540703).message ?? _0x57be32
                };
              }
              var _0x5bad8c = {
                message: _0x57be32
              };
              return _0x5bad8c;
            }
          } : {})
        });
      }
      strip() {
        var _0x966831 = {
          ...this._def
        };
        _0x966831.unknownKeys = "strip";
        return new _0x5753a7(_0x966831);
      }
      passthrough() {
        var _0x1682e8 = {
          ...this._def
        };
        _0x1682e8.unknownKeys = "passthrough";
        return new _0x5753a7(_0x1682e8);
      }
      extend(_0x305d4c) {
        return new _0x5753a7({
          ...this._def,
          shape: () => ({
            ...this._def.shape(),
            ..._0x305d4c
          })
        });
      }
      merge(_0x5ad0) {
        const _0x5c6d62 = new _0x5753a7({
          unknownKeys: _0x5ad0._def.unknownKeys,
          catchall: _0x5ad0._def.catchall,
          shape: () => ({
            ...this._def.shape(),
            ..._0x5ad0._def.shape()
          }),
          typeName: _0x116981.ZodObject
        });
        return _0x5c6d62;
      }
      setKey(_0xbbb757, _0x2448ce) {
        var _0x17ec9e = {
          [_0xbbb757]: _0x2448ce
        };
        return this.augment(_0x17ec9e);
      }
      catchall(_0x4fff22) {
        var _0xb3bb96 = {
          ...this._def
        };
        _0xb3bb96.catchall = _0x4fff22;
        return new _0x5753a7(_0xb3bb96);
      }
      pick(_0x3c62f8) {
        const _0xd825bd = {};
        _0x3d5bee.objectKeys(_0x3c62f8).forEach(_0x13f477 => {
          if (_0x3c62f8[_0x13f477] && this.shape[_0x13f477]) {
            _0xd825bd[_0x13f477] = this.shape[_0x13f477];
          }
        });
        var _0x4ece14 = {
          ...this._def
        };
        _0x4ece14.shape = () => _0xd825bd;
        return new _0x5753a7(_0x4ece14);
      }
      omit(_0x4d0055) {
        const _0x599056 = {};
        _0x3d5bee.objectKeys(this.shape).forEach(_0x3ff6e6 => {
          if (!_0x4d0055[_0x3ff6e6]) {
            _0x599056[_0x3ff6e6] = this.shape[_0x3ff6e6];
          }
        });
        var _0x20803e = {
          ...this._def
        };
        _0x20803e.shape = () => _0x599056;
        return new _0x5753a7(_0x20803e);
      }
      deepPartial() {
        return _0x2003d5(this);
      }
      partial(_0x43dd8c) {
        const _0x592fb8 = {};
        _0x3d5bee.objectKeys(this.shape).forEach(_0x5d7596 => {
          const _0x8208ce = this.shape[_0x5d7596];
          if (_0x43dd8c && !_0x43dd8c[_0x5d7596]) {
            _0x592fb8[_0x5d7596] = _0x8208ce;
          } else {
            _0x592fb8[_0x5d7596] = _0x8208ce.optional();
          }
        });
        var _0x186f1f = {
          ...this._def
        };
        _0x186f1f.shape = () => _0x592fb8;
        return new _0x5753a7(_0x186f1f);
      }
      required(_0x706e71) {
        const _0x28a043 = {};
        _0x3d5bee.objectKeys(this.shape).forEach(_0xfd669 => {
          if (_0x706e71 && !_0x706e71[_0xfd669]) {
            _0x28a043[_0xfd669] = this.shape[_0xfd669];
          } else {
            const _0x4388b5 = this.shape[_0xfd669];
            let _0xebb950 = _0x4388b5;
            while (_0xebb950 instanceof _0x13fe1a) {
              _0xebb950 = _0xebb950._def.innerType;
            }
            _0x28a043[_0xfd669] = _0xebb950;
          }
        });
        var _0x3dce02 = {
          ...this._def
        };
        _0x3dce02.shape = () => _0x28a043;
        return new _0x5753a7(_0x3dce02);
      }
      keyof() {
        return _0x4ed24f(_0x3d5bee.objectKeys(this.shape));
      }
    }
    _0x5753a7.create = (_0x4766e9, _0x2362b5) => {
      return new _0x5753a7({
        shape: () => _0x4766e9,
        unknownKeys: "strip",
        catchall: _0x5b6aa0.create(),
        typeName: _0x116981.ZodObject,
        ..._0x289168(_0x2362b5)
      });
    };
    _0x5753a7.strictCreate = (_0x5858d4, _0x3a0860) => {
      return new _0x5753a7({
        shape: () => _0x5858d4,
        unknownKeys: "strict",
        catchall: _0x5b6aa0.create(),
        typeName: _0x116981.ZodObject,
        ..._0x289168(_0x3a0860)
      });
    };
    _0x5753a7.lazycreate = (_0x2bdc95, _0x46fcef) => {
      return new _0x5753a7({
        shape: _0x2bdc95,
        unknownKeys: "strip",
        catchall: _0x5b6aa0.create(),
        typeName: _0x116981.ZodObject,
        ..._0x289168(_0x46fcef)
      });
    };
    class _0x29a4ee extends _0x3c9a2a {
      _parse(_0x1ca167) {
        const {
          ctx: _0x36eb3e
        } = this._processInputParams(_0x1ca167);
        const _0x3726cc = this._def.options;
        function _0x3a7d6a(_0x5418e6) {
          for (const _0x5ea91b of _0x5418e6) {
            if (_0x5ea91b.result.status === "valid") {
              return _0x5ea91b.result;
            }
          }
          for (const _0x3a8029 of _0x5418e6) {
            if (_0x3a8029.result.status === "dirty") {
              _0x36eb3e.common.issues.push(..._0x3a8029.ctx.common.issues);
              return _0x3a8029.result;
            }
          }
          const _0x358dd8 = _0x5418e6.map(_0x2ce2ee => new _0x21ad60(_0x2ce2ee.ctx.common.issues));
          var _0x338229 = {
            code: _0xda3f45.invalid_union,
            unionErrors: _0x358dd8
          };
          _0x1e3fb0(_0x36eb3e, _0x338229);
          return _0x4c2310;
        }
        if (_0x36eb3e.common.async) {
          return Promise.all(_0x3726cc.map(async _0x436467 => {
            var _0xb15345 = {
              ..._0x36eb3e
            };
            _0xb15345.common = {
              ..._0x36eb3e.common
            };
            _0xb15345.parent = null;
            _0xb15345.common.issues = [];
            const _0x4e0b2e = _0xb15345;
            var _0xf41a24 = {
              data: _0x36eb3e.data,
              path: _0x36eb3e.path,
              parent: _0x4e0b2e
            };
            return {
              result: await _0x436467._parseAsync(_0xf41a24),
              ctx: _0x4e0b2e
            };
          })).then(_0x3a7d6a);
        } else {
          let _0x4db071 = undefined;
          const _0x564b54 = [];
          for (const _0xf78858 of _0x3726cc) {
            var _0xa941d = {
              ..._0x36eb3e
            };
            _0xa941d.common = {
              ..._0x36eb3e.common
            };
            _0xa941d.parent = null;
            _0xa941d.common.issues = [];
            const _0x426a3a = _0xa941d;
            var _0x46f232 = {
              data: _0x36eb3e.data,
              path: _0x36eb3e.path,
              parent: _0x426a3a
            };
            const _0x879476 = _0xf78858._parseSync(_0x46f232);
            if (_0x879476.status === "valid") {
              return _0x879476;
            } else if (_0x879476.status === "dirty" && !_0x4db071) {
              var _0x406abf = {
                result: _0x879476,
                ctx: _0x426a3a
              };
              _0x4db071 = _0x406abf;
            }
            if (_0x426a3a.common.issues.length) {
              _0x564b54.push(_0x426a3a.common.issues);
            }
          }
          if (_0x4db071) {
            _0x36eb3e.common.issues.push(..._0x4db071.ctx.common.issues);
            return _0x4db071.result;
          }
          const _0x3b8a61 = _0x564b54.map(_0x1fce86 => new _0x21ad60(_0x1fce86));
          var _0x5624e5 = {
            code: _0xda3f45.invalid_union,
            unionErrors: _0x3b8a61
          };
          _0x1e3fb0(_0x36eb3e, _0x5624e5);
          return _0x4c2310;
        }
      }
      get options() {
        return this._def.options;
      }
    }
    _0x29a4ee.create = (_0x32ba09, _0x53fa29) => {
      return new _0x29a4ee({
        options: _0x32ba09,
        typeName: _0x116981.ZodUnion,
        ..._0x289168(_0x53fa29)
      });
    };
    const _0x4441a1 = _0x18a8ae => {
      if (_0x18a8ae instanceof _0x146255) {
        return _0x4441a1(_0x18a8ae.schema);
      } else if (_0x18a8ae instanceof _0xd4b76e) {
        return _0x4441a1(_0x18a8ae.innerType());
      } else if (_0x18a8ae instanceof _0x358885) {
        return [_0x18a8ae.value];
      } else if (_0x18a8ae instanceof _0x467059) {
        return _0x18a8ae.options;
      } else if (_0x18a8ae instanceof _0x1441e4) {
        return Object.keys(_0x18a8ae.enum);
      } else if (_0x18a8ae instanceof _0x430181) {
        return _0x4441a1(_0x18a8ae._def.innerType);
      } else if (_0x18a8ae instanceof _0x5b103f) {
        return [undefined];
      } else if (_0x18a8ae instanceof _0x11448) {
        return [null];
      } else {
        return null;
      }
    };
    class _0x480234 extends _0x3c9a2a {
      _parse(_0x6e9fad) {
        const {
          ctx: _0x393a16
        } = this._processInputParams(_0x6e9fad);
        if (_0x393a16.parsedType !== _0x44c2fd.object) {
          _0x1e3fb0(_0x393a16, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.object,
            received: _0x393a16.parsedType
          });
          return _0x4c2310;
        }
        const _0x460f43 = this.discriminator;
        const _0x9ac79a = _0x393a16.data[_0x460f43];
        const _0xca95db = this.optionsMap.get(_0x9ac79a);
        if (!_0xca95db) {
          _0x1e3fb0(_0x393a16, {
            code: _0xda3f45.invalid_union_discriminator,
            options: Array.from(this.optionsMap.keys()),
            path: [_0x460f43]
          });
          return _0x4c2310;
        }
        if (_0x393a16.common.async) {
          var _0x4aa4b6 = {
            data: _0x393a16.data,
            path: _0x393a16.path,
            parent: _0x393a16
          };
          return _0xca95db._parseAsync(_0x4aa4b6);
        } else {
          var _0x24bc8f = {
            data: _0x393a16.data,
            path: _0x393a16.path,
            parent: _0x393a16
          };
          return _0xca95db._parseSync(_0x24bc8f);
        }
      }
      get discriminator() {
        return this._def.discriminator;
      }
      get options() {
        return this._def.options;
      }
      get optionsMap() {
        return this._def.optionsMap;
      }
      static create(_0x567f72, _0x3822d8, _0x3b2131) {
        const _0x4af00f = new Map();
        for (const _0x2a2b27 of _0x3822d8) {
          const _0x4a13a1 = _0x4441a1(_0x2a2b27.shape[_0x567f72]);
          if (!_0x4a13a1) {
            throw new Error("A discriminator value for key `" + _0x567f72 + "` could not be extracted from all schema options");
          }
          for (const _0x40020a of _0x4a13a1) {
            if (_0x4af00f.has(_0x40020a)) {
              throw new Error("Discriminator property " + String(_0x567f72) + " has duplicate value " + String(_0x40020a));
            }
            _0x4af00f.set(_0x40020a, _0x2a2b27);
          }
        }
        return new _0x480234({
          typeName: _0x116981.ZodDiscriminatedUnion,
          discriminator: _0x567f72,
          options: _0x3822d8,
          optionsMap: _0x4af00f,
          ..._0x289168(_0x3b2131)
        });
      }
    }
    function _0x543d0d(_0x580ade, _0x2212c3) {
      const _0x1e1314 = _0xc9abf6(_0x580ade);
      const _0x8e0f28 = _0xc9abf6(_0x2212c3);
      if (_0x580ade === _0x2212c3) {
        var _0x4a2da9 = {
          valid: true,
          data: _0x580ade
        };
        return _0x4a2da9;
      } else if (_0x1e1314 === _0x44c2fd.object && _0x8e0f28 === _0x44c2fd.object) {
        const _0x56c025 = _0x3d5bee.objectKeys(_0x2212c3);
        const _0x151e85 = _0x3d5bee.objectKeys(_0x580ade).filter(_0x1d229a => _0x56c025.indexOf(_0x1d229a) !== -1);
        var _0x5b8cc0 = {
          ..._0x580ade,
          ..._0x2212c3
        };
        const _0x4b0c7b = _0x5b8cc0;
        for (const _0x3b5076 of _0x151e85) {
          const _0xff9772 = _0x543d0d(_0x580ade[_0x3b5076], _0x2212c3[_0x3b5076]);
          if (!_0xff9772.valid) {
            return {
              valid: false
            };
          }
          _0x4b0c7b[_0x3b5076] = _0xff9772.data;
        }
        var _0x25eb7b = {
          valid: true,
          data: _0x4b0c7b
        };
        return _0x25eb7b;
      } else if (_0x1e1314 === _0x44c2fd.array && _0x8e0f28 === _0x44c2fd.array) {
        if (_0x580ade.length !== _0x2212c3.length) {
          return {
            valid: false
          };
        }
        const _0x1e236a = [];
        for (let _0x39ab6b = 0; _0x39ab6b < _0x580ade.length; _0x39ab6b++) {
          const _0x19bb14 = _0x580ade[_0x39ab6b];
          const _0x1d3319 = _0x2212c3[_0x39ab6b];
          const _0x409647 = _0x543d0d(_0x19bb14, _0x1d3319);
          if (!_0x409647.valid) {
            return {
              valid: false
            };
          }
          _0x1e236a.push(_0x409647.data);
        }
        var _0x25ac9c = {
          valid: true,
          data: _0x1e236a
        };
        return _0x25ac9c;
      } else if (_0x1e1314 === _0x44c2fd.date && _0x8e0f28 === _0x44c2fd.date && +_0x580ade === +_0x2212c3) {
        var _0x1e2326 = {
          valid: true,
          data: _0x580ade
        };
        return _0x1e2326;
      } else {
        return {
          valid: false
        };
      }
    }
    class _0x4cc748 extends _0x3c9a2a {
      _parse(_0x2fef7a) {
        const {
          status: _0x32f7e5,
          ctx: _0x1abc1d
        } = this._processInputParams(_0x2fef7a);
        const _0x31c57a = (_0x1b5eee, _0x36b0ab) => {
          if (_0x4442da(_0x1b5eee) || _0x4442da(_0x36b0ab)) {
            return _0x4c2310;
          }
          const _0x87e3e = _0x543d0d(_0x1b5eee.value, _0x36b0ab.value);
          if (!_0x87e3e.valid) {
            var _0xe937e7 = {
              code: _0xda3f45.invalid_intersection_types
            };
            _0x1e3fb0(_0x1abc1d, _0xe937e7);
            return _0x4c2310;
          }
          if (_0x27a58a(_0x1b5eee) || _0x27a58a(_0x36b0ab)) {
            _0x32f7e5.dirty();
          }
          var _0x3b75b6 = {
            status: _0x32f7e5.value,
            value: _0x87e3e.data
          };
          return _0x3b75b6;
        };
        if (_0x1abc1d.common.async) {
          var _0xc1d084 = {
            data: _0x1abc1d.data,
            path: _0x1abc1d.path,
            parent: _0x1abc1d
          };
          var _0x4d5776 = {
            data: _0x1abc1d.data,
            path: _0x1abc1d.path,
            parent: _0x1abc1d
          };
          return Promise.all([this._def.left._parseAsync(_0xc1d084), this._def.right._parseAsync(_0x4d5776)]).then(([_0x2e2610, _0x215400]) => _0x31c57a(_0x2e2610, _0x215400));
        } else {
          var _0x52fad6 = {
            data: _0x1abc1d.data,
            path: _0x1abc1d.path,
            parent: _0x1abc1d
          };
          var _0x104b89 = {
            data: _0x1abc1d.data,
            path: _0x1abc1d.path,
            parent: _0x1abc1d
          };
          return _0x31c57a(this._def.left._parseSync(_0x52fad6), this._def.right._parseSync(_0x104b89));
        }
      }
    }
    _0x4cc748.create = (_0x3595b6, _0x349f78, _0x3eb1ef) => {
      return new _0x4cc748({
        left: _0x3595b6,
        right: _0x349f78,
        typeName: _0x116981.ZodIntersection,
        ..._0x289168(_0x3eb1ef)
      });
    };
    class _0xf02b98 extends _0x3c9a2a {
      _parse(_0x51526a) {
        const {
          status: _0x501992,
          ctx: _0x5ba064
        } = this._processInputParams(_0x51526a);
        if (_0x5ba064.parsedType !== _0x44c2fd.array) {
          _0x1e3fb0(_0x5ba064, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.array,
            received: _0x5ba064.parsedType
          });
          return _0x4c2310;
        }
        if (_0x5ba064.data.length < this._def.items.length) {
          var _0x55c795 = {
            code: _0xda3f45.too_small,
            minimum: this._def.items.length,
            inclusive: true,
            exact: false,
            type: "array"
          };
          _0x1e3fb0(_0x5ba064, _0x55c795);
          return _0x4c2310;
        }
        const _0x449430 = this._def.rest;
        if (!_0x449430 && _0x5ba064.data.length > this._def.items.length) {
          var _0x158166 = {
            code: _0xda3f45.too_big,
            maximum: this._def.items.length,
            inclusive: true,
            exact: false,
            type: "array"
          };
          _0x1e3fb0(_0x5ba064, _0x158166);
          _0x501992.dirty();
        }
        const _0x6ca31b = [..._0x5ba064.data].map((_0x26134a, _0x5046d7) => {
          const _0x58c179 = this._def.items[_0x5046d7] || this._def.rest;
          if (!_0x58c179) {
            return null;
          }
          return _0x58c179._parse(new _0x1d36e7(_0x5ba064, _0x26134a, _0x5ba064.path, _0x5046d7));
        }).filter(_0x2a52dc => !!_0x2a52dc);
        if (_0x5ba064.common.async) {
          return Promise.all(_0x6ca31b).then(_0x149d90 => {
            return _0x524d93.mergeArray(_0x501992, _0x149d90);
          });
        } else {
          return _0x524d93.mergeArray(_0x501992, _0x6ca31b);
        }
      }
      get items() {
        return this._def.items;
      }
      rest(_0x52564) {
        var _0x29e909 = {
          ...this._def
        };
        _0x29e909.rest = _0x52564;
        return new _0xf02b98(_0x29e909);
      }
    }
    _0xf02b98.create = (_0x6aac3, _0x474b49) => {
      if (!Array.isArray(_0x6aac3)) {
        throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
      }
      return new _0xf02b98({
        items: _0x6aac3,
        typeName: _0x116981.ZodTuple,
        rest: null,
        ..._0x289168(_0x474b49)
      });
    };
    class _0x511337 extends _0x3c9a2a {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(_0x366fd9) {
        const {
          status: _0x23f8db,
          ctx: _0x3c33c3
        } = this._processInputParams(_0x366fd9);
        if (_0x3c33c3.parsedType !== _0x44c2fd.object) {
          _0x1e3fb0(_0x3c33c3, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.object,
            received: _0x3c33c3.parsedType
          });
          return _0x4c2310;
        }
        const _0x79a7c0 = [];
        const _0xc68879 = this._def.keyType;
        const _0x1c77cd = this._def.valueType;
        for (const _0x263dd2 in _0x3c33c3.data) {
          _0x79a7c0.push({
            key: _0xc68879._parse(new _0x1d36e7(_0x3c33c3, _0x263dd2, _0x3c33c3.path, _0x263dd2)),
            value: _0x1c77cd._parse(new _0x1d36e7(_0x3c33c3, _0x3c33c3.data[_0x263dd2], _0x3c33c3.path, _0x263dd2))
          });
        }
        if (_0x3c33c3.common.async) {
          return _0x524d93.mergeObjectAsync(_0x23f8db, _0x79a7c0);
        } else {
          return _0x524d93.mergeObjectSync(_0x23f8db, _0x79a7c0);
        }
      }
      get element() {
        return this._def.valueType;
      }
      static create(_0x3209e0, _0x485626, _0x1581e6) {
        if (_0x485626 instanceof _0x3c9a2a) {
          return new _0x511337({
            keyType: _0x3209e0,
            valueType: _0x485626,
            typeName: _0x116981.ZodRecord,
            ..._0x289168(_0x1581e6)
          });
        }
        return new _0x511337({
          keyType: _0x325378.create(),
          valueType: _0x3209e0,
          typeName: _0x116981.ZodRecord,
          ..._0x289168(_0x485626)
        });
      }
    }
    class _0x1c5684 extends _0x3c9a2a {
      _parse(_0x2d4633) {
        const {
          status: _0x2253b6,
          ctx: _0x1e0b13
        } = this._processInputParams(_0x2d4633);
        if (_0x1e0b13.parsedType !== _0x44c2fd.map) {
          _0x1e3fb0(_0x1e0b13, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.map,
            received: _0x1e0b13.parsedType
          });
          return _0x4c2310;
        }
        const _0xe58d39 = this._def.keyType;
        const _0x3714ee = this._def.valueType;
        const _0x4ee316 = [..._0x1e0b13.data.entries()].map(([_0x53d67a, _0x5d1f30], _0x2648a8) => {
          return {
            key: _0xe58d39._parse(new _0x1d36e7(_0x1e0b13, _0x53d67a, _0x1e0b13.path, [_0x2648a8, "key"])),
            value: _0x3714ee._parse(new _0x1d36e7(_0x1e0b13, _0x5d1f30, _0x1e0b13.path, [_0x2648a8, "value"]))
          };
        });
        if (_0x1e0b13.common.async) {
          const _0x51da58 = new Map();
          return Promise.resolve().then(async () => {
            for (const _0x3d7fbc of _0x4ee316) {
              const _0xf4f246 = await _0x3d7fbc.key;
              const _0x273531 = await _0x3d7fbc.value;
              if (_0xf4f246.status === "aborted" || _0x273531.status === "aborted") {
                return _0x4c2310;
              }
              if (_0xf4f246.status === "dirty" || _0x273531.status === "dirty") {
                _0x2253b6.dirty();
              }
              _0x51da58.set(_0xf4f246.value, _0x273531.value);
            }
            var _0x46a995 = {
              status: _0x2253b6.value,
              value: _0x51da58
            };
            return _0x46a995;
          });
        } else {
          const _0x58fb45 = new Map();
          for (const _0x428b40 of _0x4ee316) {
            const _0x2d43f7 = _0x428b40.key;
            const _0x520cc0 = _0x428b40.value;
            if (_0x2d43f7.status === "aborted" || _0x520cc0.status === "aborted") {
              return _0x4c2310;
            }
            if (_0x2d43f7.status === "dirty" || _0x520cc0.status === "dirty") {
              _0x2253b6.dirty();
            }
            _0x58fb45.set(_0x2d43f7.value, _0x520cc0.value);
          }
          var _0x24dd2d = {
            status: _0x2253b6.value,
            value: _0x58fb45
          };
          return _0x24dd2d;
        }
      }
    }
    _0x1c5684.create = (_0x58e49e, _0x23e028, _0x3afeb7) => {
      return new _0x1c5684({
        valueType: _0x23e028,
        keyType: _0x58e49e,
        typeName: _0x116981.ZodMap,
        ..._0x289168(_0x3afeb7)
      });
    };
    class _0x44fc4d extends _0x3c9a2a {
      _parse(_0x5ee500) {
        const {
          status: _0x473599,
          ctx: _0x1b9788
        } = this._processInputParams(_0x5ee500);
        if (_0x1b9788.parsedType !== _0x44c2fd.set) {
          _0x1e3fb0(_0x1b9788, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.set,
            received: _0x1b9788.parsedType
          });
          return _0x4c2310;
        }
        const _0x2478cd = this._def;
        if (_0x2478cd.minSize !== null) {
          if (_0x1b9788.data.size < _0x2478cd.minSize.value) {
            var _0x5596d7 = {
              code: _0xda3f45.too_small,
              minimum: _0x2478cd.minSize.value,
              type: "set",
              inclusive: true,
              exact: false,
              message: _0x2478cd.minSize.message
            };
            _0x1e3fb0(_0x1b9788, _0x5596d7);
            _0x473599.dirty();
          }
        }
        if (_0x2478cd.maxSize !== null) {
          if (_0x1b9788.data.size > _0x2478cd.maxSize.value) {
            var _0x4ce863 = {
              code: _0xda3f45.too_big,
              maximum: _0x2478cd.maxSize.value,
              type: "set",
              inclusive: true,
              exact: false,
              message: _0x2478cd.maxSize.message
            };
            _0x1e3fb0(_0x1b9788, _0x4ce863);
            _0x473599.dirty();
          }
        }
        const _0x2809ee = this._def.valueType;
        function _0x11a404(_0x3d1553) {
          const _0x162cbe = new Set();
          for (const _0x495083 of _0x3d1553) {
            if (_0x495083.status === "aborted") {
              return _0x4c2310;
            }
            if (_0x495083.status === "dirty") {
              _0x473599.dirty();
            }
            _0x162cbe.add(_0x495083.value);
          }
          var _0x49f8e1 = {
            status: _0x473599.value,
            value: _0x162cbe
          };
          return _0x49f8e1;
        }
        const _0x213b67 = [..._0x1b9788.data.values()].map((_0x42d600, _0x2d2982) => _0x2809ee._parse(new _0x1d36e7(_0x1b9788, _0x42d600, _0x1b9788.path, _0x2d2982)));
        if (_0x1b9788.common.async) {
          return Promise.all(_0x213b67).then(_0x434175 => _0x11a404(_0x434175));
        } else {
          return _0x11a404(_0x213b67);
        }
      }
      min(_0x4df499, _0x300608) {
        return new _0x44fc4d({
          ...this._def,
          minSize: {
            value: _0x4df499,
            message: _0x362422.toString(_0x300608)
          }
        });
      }
      max(_0x1bfa33, _0x1843fc) {
        return new _0x44fc4d({
          ...this._def,
          maxSize: {
            value: _0x1bfa33,
            message: _0x362422.toString(_0x1843fc)
          }
        });
      }
      size(_0x28911b, _0x30cee5) {
        return this.min(_0x28911b, _0x30cee5).max(_0x28911b, _0x30cee5);
      }
      nonempty(_0x42a7f9) {
        return this.min(1, _0x42a7f9);
      }
    }
    _0x44fc4d.create = (_0x2f1845, _0x3a2b54) => {
      return new _0x44fc4d({
        valueType: _0x2f1845,
        minSize: null,
        maxSize: null,
        typeName: _0x116981.ZodSet,
        ..._0x289168(_0x3a2b54)
      });
    };
    class _0x3aa12f extends _0x3c9a2a {
      constructor() {
        super(...arguments);
        this.validate = this.implement;
      }
      _parse(_0x47e01b) {
        const {
          ctx: _0x2a30b7
        } = this._processInputParams(_0x47e01b);
        if (_0x2a30b7.parsedType !== _0x44c2fd.function) {
          _0x1e3fb0(_0x2a30b7, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.function,
            received: _0x2a30b7.parsedType
          });
          return _0x4c2310;
        }
        function _0x37d06d(_0x23144a, _0x552099) {
          var _0x36d620 = {
            code: _0xda3f45.invalid_arguments,
            argumentsError: _0x552099
          };
          return _0x239796({
            data: _0x23144a,
            path: _0x2a30b7.path,
            errorMaps: [_0x2a30b7.common.contextualErrorMap, _0x2a30b7.schemaErrorMap, _0x24610a(), _0x3aa914].filter(_0x170429 => !!_0x170429),
            issueData: _0x36d620
          });
        }
        function _0x417d62(_0xcbed35, _0x3fa26c) {
          var _0x3692ee = {
            code: _0xda3f45.invalid_return_type,
            returnTypeError: _0x3fa26c
          };
          return _0x239796({
            data: _0xcbed35,
            path: _0x2a30b7.path,
            errorMaps: [_0x2a30b7.common.contextualErrorMap, _0x2a30b7.schemaErrorMap, _0x24610a(), _0x3aa914].filter(_0x1fb28b => !!_0x1fb28b),
            issueData: _0x3692ee
          });
        }
        var _0x5d3ae9 = {
          errorMap: _0x2a30b7.common.contextualErrorMap
        };
        const _0x71f6aa = _0x5d3ae9;
        const _0x1b40d4 = _0x2a30b7.data;
        if (this._def.returns instanceof _0x17d8c3) {
          return _0x2544e8(async (..._0x5ef203) => {
            const _0x1d8bc3 = new _0x21ad60([]);
            const _0x7496df = await this._def.args.parseAsync(_0x5ef203, _0x71f6aa).catch(_0x46c257 => {
              _0x1d8bc3.addIssue(_0x37d06d(_0x5ef203, _0x46c257));
              throw _0x1d8bc3;
            });
            const _0x30ba90 = await _0x1b40d4(..._0x7496df);
            const _0x5c3d0d = await this._def.returns._def.type.parseAsync(_0x30ba90, _0x71f6aa).catch(_0x1b7e57 => {
              _0x1d8bc3.addIssue(_0x417d62(_0x30ba90, _0x1b7e57));
              throw _0x1d8bc3;
            });
            return _0x5c3d0d;
          });
        } else {
          return _0x2544e8((..._0x1a6e21) => {
            const _0x894d4 = this._def.args.safeParse(_0x1a6e21, _0x71f6aa);
            if (!_0x894d4.success) {
              throw new _0x21ad60([_0x37d06d(_0x1a6e21, _0x894d4.error)]);
            }
            const _0x11d5bb = _0x1b40d4(..._0x894d4.data);
            const _0x2035cd = this._def.returns.safeParse(_0x11d5bb, _0x71f6aa);
            if (!_0x2035cd.success) {
              throw new _0x21ad60([_0x417d62(_0x11d5bb, _0x2035cd.error)]);
            }
            return _0x2035cd.data;
          });
        }
      }
      parameters() {
        return this._def.args;
      }
      returnType() {
        return this._def.returns;
      }
      args(..._0x6d089f) {
        return new _0x3aa12f({
          ...this._def,
          args: _0xf02b98.create(_0x6d089f).rest(_0x3f61be.create())
        });
      }
      returns(_0x4be8a9) {
        var _0x227a18 = {
          ...this._def
        };
        _0x227a18.returns = _0x4be8a9;
        return new _0x3aa12f(_0x227a18);
      }
      implement(_0x103ff6) {
        const _0x4fc558 = this.parse(_0x103ff6);
        return _0x4fc558;
      }
      strictImplement(_0x2bdd67) {
        const _0x2b0f5a = this.parse(_0x2bdd67);
        return _0x2b0f5a;
      }
      static create(_0x2a1a97, _0x390c7b, _0x1d389c) {
        return new _0x3aa12f({
          args: _0x2a1a97 ? _0x2a1a97 : _0xf02b98.create([]).rest(_0x3f61be.create()),
          returns: _0x390c7b || _0x3f61be.create(),
          typeName: _0x116981.ZodFunction,
          ..._0x289168(_0x1d389c)
        });
      }
    }
    class _0x146255 extends _0x3c9a2a {
      get schema() {
        return this._def.getter();
      }
      _parse(_0x38ea4a) {
        const {
          ctx: _0x4c626b
        } = this._processInputParams(_0x38ea4a);
        const _0x2159b2 = this._def.getter();
        var _0x13c884 = {
          data: _0x4c626b.data,
          path: _0x4c626b.path,
          parent: _0x4c626b
        };
        return _0x2159b2._parse(_0x13c884);
      }
    }
    _0x146255.create = (_0x14e9ad, _0x19c5da) => {
      return new _0x146255({
        getter: _0x14e9ad,
        typeName: _0x116981.ZodLazy,
        ..._0x289168(_0x19c5da)
      });
    };
    class _0x358885 extends _0x3c9a2a {
      _parse(_0x1d10b5) {
        if (_0x1d10b5.data !== this._def.value) {
          const _0x31dd8f = this._getOrReturnCtx(_0x1d10b5);
          _0x1e3fb0(_0x31dd8f, {
            received: _0x31dd8f.data,
            code: _0xda3f45.invalid_literal,
            expected: this._def.value
          });
          return _0x4c2310;
        }
        var _0x338e61 = {
          status: "valid",
          value: _0x1d10b5.data
        };
        return _0x338e61;
      }
      get value() {
        return this._def.value;
      }
    }
    _0x358885.create = (_0x1e41e0, _0x11c26c) => {
      return new _0x358885({
        value: _0x1e41e0,
        typeName: _0x116981.ZodLiteral,
        ..._0x289168(_0x11c26c)
      });
    };
    function _0x4ed24f(_0x5ea79b, _0x2fcef2) {
      return new _0x467059({
        values: _0x5ea79b,
        typeName: _0x116981.ZodEnum,
        ..._0x289168(_0x2fcef2)
      });
    }
    class _0x467059 extends _0x3c9a2a {
      _parse(_0x6e9641) {
        if (typeof _0x6e9641.data !== "string") {
          const _0x11c9e4 = this._getOrReturnCtx(_0x6e9641);
          const _0x412797 = this._def.values;
          _0x1e3fb0(_0x11c9e4, {
            expected: _0x3d5bee.joinValues(_0x412797),
            received: _0x11c9e4.parsedType,
            code: _0xda3f45.invalid_type
          });
          return _0x4c2310;
        }
        if (this._def.values.indexOf(_0x6e9641.data) === -1) {
          const _0x55df95 = this._getOrReturnCtx(_0x6e9641);
          const _0xef4de7 = this._def.values;
          _0x1e3fb0(_0x55df95, {
            received: _0x55df95.data,
            code: _0xda3f45.invalid_enum_value,
            options: _0xef4de7
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x6e9641.data);
      }
      get options() {
        return this._def.values;
      }
      get enum() {
        const _0x360dc7 = {};
        for (const _0xc5b61a of this._def.values) {
          _0x360dc7[_0xc5b61a] = _0xc5b61a;
        }
        return _0x360dc7;
      }
      get Values() {
        const _0x530afe = {};
        for (const _0x4c371b of this._def.values) {
          _0x530afe[_0x4c371b] = _0x4c371b;
        }
        return _0x530afe;
      }
      get Enum() {
        const _0x17837b = {};
        for (const _0x4dd0f7 of this._def.values) {
          _0x17837b[_0x4dd0f7] = _0x4dd0f7;
        }
        return _0x17837b;
      }
      extract(_0x1bc256) {
        return _0x467059.create(_0x1bc256);
      }
      exclude(_0xdc7c97) {
        return _0x467059.create(this.options.filter(_0xeb67b7 => !_0xdc7c97.includes(_0xeb67b7)));
      }
    }
    _0x467059.create = _0x4ed24f;
    class _0x1441e4 extends _0x3c9a2a {
      _parse(_0x595499) {
        const _0x3f1b6e = _0x3d5bee.getValidEnumValues(this._def.values);
        const _0x21cf10 = this._getOrReturnCtx(_0x595499);
        if (_0x21cf10.parsedType !== _0x44c2fd.string && _0x21cf10.parsedType !== _0x44c2fd.number) {
          const _0x171a63 = _0x3d5bee.objectValues(_0x3f1b6e);
          _0x1e3fb0(_0x21cf10, {
            expected: _0x3d5bee.joinValues(_0x171a63),
            received: _0x21cf10.parsedType,
            code: _0xda3f45.invalid_type
          });
          return _0x4c2310;
        }
        if (_0x3f1b6e.indexOf(_0x595499.data) === -1) {
          const _0x5a6621 = _0x3d5bee.objectValues(_0x3f1b6e);
          _0x1e3fb0(_0x21cf10, {
            received: _0x21cf10.data,
            code: _0xda3f45.invalid_enum_value,
            options: _0x5a6621
          });
          return _0x4c2310;
        }
        return _0x2544e8(_0x595499.data);
      }
      get enum() {
        return this._def.values;
      }
    }
    _0x1441e4.create = (_0xd524ed, _0xbbd3ce) => {
      return new _0x1441e4({
        values: _0xd524ed,
        typeName: _0x116981.ZodNativeEnum,
        ..._0x289168(_0xbbd3ce)
      });
    };
    class _0x17d8c3 extends _0x3c9a2a {
      unwrap() {
        return this._def.type;
      }
      _parse(_0x595493) {
        const {
          ctx: _0x3937ce
        } = this._processInputParams(_0x595493);
        if (_0x3937ce.parsedType !== _0x44c2fd.promise && _0x3937ce.common.async === false) {
          _0x1e3fb0(_0x3937ce, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.promise,
            received: _0x3937ce.parsedType
          });
          return _0x4c2310;
        }
        const _0x529fbe = _0x3937ce.parsedType === _0x44c2fd.promise ? _0x3937ce.data : Promise.resolve(_0x3937ce.data);
        return _0x2544e8(_0x529fbe.then(_0x29b58b => {
          var _0x466716 = {
            path: _0x3937ce.path,
            errorMap: _0x3937ce.common.contextualErrorMap
          };
          return this._def.type.parseAsync(_0x29b58b, _0x466716);
        }));
      }
    }
    _0x17d8c3.create = (_0x358297, _0x566f08) => {
      return new _0x17d8c3({
        type: _0x358297,
        typeName: _0x116981.ZodPromise,
        ..._0x289168(_0x566f08)
      });
    };
    class _0xd4b76e extends _0x3c9a2a {
      innerType() {
        return this._def.schema;
      }
      sourceType() {
        if (this._def.schema._def.typeName === _0x116981.ZodEffects) {
          return this._def.schema.sourceType();
        } else {
          return this._def.schema;
        }
      }
      _parse(_0x5aa65b) {
        const {
          status: _0x9fc363,
          ctx: _0x678ccf
        } = this._processInputParams(_0x5aa65b);
        const _0x3c3bb1 = this._def.effect || null;
        if (_0x3c3bb1.type === "preprocess") {
          const _0x4f8783 = _0x3c3bb1.transform(_0x678ccf.data);
          if (_0x678ccf.common.async) {
            return Promise.resolve(_0x4f8783).then(_0x2e9933 => {
              var _0x4b34a1 = {
                data: _0x2e9933,
                path: _0x678ccf.path,
                parent: _0x678ccf
              };
              return this._def.schema._parseAsync(_0x4b34a1);
            });
          } else {
            var _0x3321e7 = {
              data: _0x4f8783,
              path: _0x678ccf.path,
              parent: _0x678ccf
            };
            return this._def.schema._parseSync(_0x3321e7);
          }
        }
        const _0x5992fb = {
          addIssue: _0x556fc4 => {
            _0x1e3fb0(_0x678ccf, _0x556fc4);
            if (_0x556fc4.fatal) {
              _0x9fc363.abort();
            } else {
              _0x9fc363.dirty();
            }
          },
          get path() {
            return _0x678ccf.path;
          }
        };
        _0x5992fb.addIssue = _0x5992fb.addIssue.bind(_0x5992fb);
        if (_0x3c3bb1.type === "refinement") {
          const _0x4bb562 = _0x4a1703 => {
            const _0x5e7118 = _0x3c3bb1.refinement(_0x4a1703, _0x5992fb);
            if (_0x678ccf.common.async) {
              return Promise.resolve(_0x5e7118);
            }
            if (_0x5e7118 instanceof Promise) {
              throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
            }
            return _0x4a1703;
          };
          if (_0x678ccf.common.async === false) {
            var _0x5ac3e4 = {
              data: _0x678ccf.data,
              path: _0x678ccf.path,
              parent: _0x678ccf
            };
            const _0x46c4f9 = this._def.schema._parseSync(_0x5ac3e4);
            if (_0x46c4f9.status === "aborted") {
              return _0x4c2310;
            }
            if (_0x46c4f9.status === "dirty") {
              _0x9fc363.dirty();
            }
            _0x4bb562(_0x46c4f9.value);
            var _0x3ba236 = {
              status: _0x9fc363.value,
              value: _0x46c4f9.value
            };
            return _0x3ba236;
          } else {
            var _0x4127c6 = {
              data: _0x678ccf.data,
              path: _0x678ccf.path,
              parent: _0x678ccf
            };
            return this._def.schema._parseAsync(_0x4127c6).then(_0x5a27bd => {
              if (_0x5a27bd.status === "aborted") {
                return _0x4c2310;
              }
              if (_0x5a27bd.status === "dirty") {
                _0x9fc363.dirty();
              }
              return _0x4bb562(_0x5a27bd.value).then(() => {
                var _0x20500d = {
                  status: _0x9fc363.value,
                  value: _0x5a27bd.value
                };
                return _0x20500d;
              });
            });
          }
        }
        if (_0x3c3bb1.type === "transform") {
          if (_0x678ccf.common.async === false) {
            var _0x2904f9 = {
              data: _0x678ccf.data,
              path: _0x678ccf.path,
              parent: _0x678ccf
            };
            const _0x58d20f = this._def.schema._parseSync(_0x2904f9);
            if (!_0x4e8c19(_0x58d20f)) {
              return _0x58d20f;
            }
            const _0x38f056 = _0x3c3bb1.transform(_0x58d20f.value, _0x5992fb);
            if (_0x38f056 instanceof Promise) {
              throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
            }
            var _0x5a4900 = {
              status: _0x9fc363.value,
              value: _0x38f056
            };
            return _0x5a4900;
          } else {
            var _0x8b77a4 = {
              data: _0x678ccf.data,
              path: _0x678ccf.path,
              parent: _0x678ccf
            };
            return this._def.schema._parseAsync(_0x8b77a4).then(_0x2aba1b => {
              if (!_0x4e8c19(_0x2aba1b)) {
                return _0x2aba1b;
              }
              return Promise.resolve(_0x3c3bb1.transform(_0x2aba1b.value, _0x5992fb)).then(_0x462aef => ({
                status: _0x9fc363.value,
                value: _0x462aef
              }));
            });
          }
        }
        _0x3d5bee.assertNever(_0x3c3bb1);
      }
    }
    _0xd4b76e.create = (_0x3b19df, _0xcbd4d5, _0x239373) => {
      return new _0xd4b76e({
        schema: _0x3b19df,
        typeName: _0x116981.ZodEffects,
        effect: _0xcbd4d5,
        ..._0x289168(_0x239373)
      });
    };
    _0xd4b76e.createWithPreprocess = (_0xd6f601, _0x1d6a29, _0x2e57e0) => {
      var _0x219338 = {
        type: "preprocess",
        transform: _0xd6f601
      };
      return new _0xd4b76e({
        schema: _0x1d6a29,
        effect: _0x219338,
        typeName: _0x116981.ZodEffects,
        ..._0x289168(_0x2e57e0)
      });
    };
    class _0x13fe1a extends _0x3c9a2a {
      _parse(_0x505dff) {
        const _0x7ecc4e = this._getType(_0x505dff);
        if (_0x7ecc4e === _0x44c2fd.undefined) {
          return _0x2544e8(undefined);
        }
        return this._def.innerType._parse(_0x505dff);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    _0x13fe1a.create = (_0xfcdced, _0x5c7ce9) => {
      return new _0x13fe1a({
        innerType: _0xfcdced,
        typeName: _0x116981.ZodOptional,
        ..._0x289168(_0x5c7ce9)
      });
    };
    class _0x85dc69 extends _0x3c9a2a {
      _parse(_0x3bbcdc) {
        const _0x103779 = this._getType(_0x3bbcdc);
        if (_0x103779 === _0x44c2fd.null) {
          return _0x2544e8(null);
        }
        return this._def.innerType._parse(_0x3bbcdc);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    _0x85dc69.create = (_0x3ba771, _0x2697ce) => {
      return new _0x85dc69({
        innerType: _0x3ba771,
        typeName: _0x116981.ZodNullable,
        ..._0x289168(_0x2697ce)
      });
    };
    class _0x430181 extends _0x3c9a2a {
      _parse(_0x5f2f86) {
        const {
          ctx: _0x4f4246
        } = this._processInputParams(_0x5f2f86);
        let _0x13430f = _0x4f4246.data;
        if (_0x4f4246.parsedType === _0x44c2fd.undefined) {
          _0x13430f = this._def.defaultValue();
        }
        var _0x339466 = {
          data: _0x13430f,
          path: _0x4f4246.path,
          parent: _0x4f4246
        };
        return this._def.innerType._parse(_0x339466);
      }
      removeDefault() {
        return this._def.innerType;
      }
    }
    _0x430181.create = (_0x379c35, _0x53a896) => {
      return new _0x430181({
        innerType: _0x379c35,
        typeName: _0x116981.ZodDefault,
        defaultValue: typeof _0x53a896.default === "function" ? _0x53a896.default : () => _0x53a896.default,
        ..._0x289168(_0x53a896)
      });
    };
    class _0x480613 extends _0x3c9a2a {
      _parse(_0x6d3f7f) {
        const {
          ctx: _0x595dec
        } = this._processInputParams(_0x6d3f7f);
        var _0x489245 = {
          ..._0x595dec
        };
        _0x489245.common = {
          ..._0x595dec.common
        };
        _0x489245.common.issues = [];
        const _0x4dd8c1 = _0x489245;
        var _0x115f81 = {
          data: _0x4dd8c1.data,
          path: _0x4dd8c1.path,
          parent: {
            ..._0x4dd8c1
          }
        };
        const _0x2910ab = this._def.innerType._parse(_0x115f81);
        if (_0x4fe8fd(_0x2910ab)) {
          return _0x2910ab.then(_0x5de1df => {
            return {
              status: "valid",
              value: _0x5de1df.status === "valid" ? _0x5de1df.value : this._def.catchValue({
                get error() {
                  return new _0x21ad60(_0x4dd8c1.common.issues);
                },
                input: _0x4dd8c1.data
              })
            };
          });
        } else {
          return {
            status: "valid",
            value: _0x2910ab.status === "valid" ? _0x2910ab.value : this._def.catchValue({
              get error() {
                return new _0x21ad60(_0x4dd8c1.common.issues);
              },
              input: _0x4dd8c1.data
            })
          };
        }
      }
      removeCatch() {
        return this._def.innerType;
      }
    }
    _0x480613.create = (_0x591594, _0x1368ab) => {
      return new _0x480613({
        innerType: _0x591594,
        typeName: _0x116981.ZodCatch,
        catchValue: typeof _0x1368ab.catch === "function" ? _0x1368ab.catch : () => _0x1368ab.catch,
        ..._0x289168(_0x1368ab)
      });
    };
    class _0x3eee89 extends _0x3c9a2a {
      _parse(_0x106aab) {
        const _0x44e2e0 = this._getType(_0x106aab);
        if (_0x44e2e0 !== _0x44c2fd.nan) {
          const _0x1e0525 = this._getOrReturnCtx(_0x106aab);
          _0x1e3fb0(_0x1e0525, {
            code: _0xda3f45.invalid_type,
            expected: _0x44c2fd.nan,
            received: _0x1e0525.parsedType
          });
          return _0x4c2310;
        }
        var _0x1bfe02 = {
          status: "valid",
          value: _0x106aab.data
        };
        return _0x1bfe02;
      }
    }
    _0x3eee89.create = _0x4f4430 => {
      return new _0x3eee89({
        typeName: _0x116981.ZodNaN,
        ..._0x289168(_0x4f4430)
      });
    };
    const _0x3c1095 = Symbol("zod_brand");
    class _0x42fbc9 extends _0x3c9a2a {
      _parse(_0x678d32) {
        const {
          ctx: _0x2417b1
        } = this._processInputParams(_0x678d32);
        const _0x42a6e2 = _0x2417b1.data;
        var _0x3508d7 = {
          data: _0x42a6e2,
          path: _0x2417b1.path,
          parent: _0x2417b1
        };
        return this._def.type._parse(_0x3508d7);
      }
      unwrap() {
        return this._def.type;
      }
    }
    class _0x3044d5 extends _0x3c9a2a {
      _parse(_0x215e4e) {
        const {
          status: _0xfea802,
          ctx: _0x3e3aa6
        } = this._processInputParams(_0x215e4e);
        if (_0x3e3aa6.common.async) {
          const _0x2b120b = async () => {
            var _0x1ce3c7 = {
              data: _0x3e3aa6.data,
              path: _0x3e3aa6.path,
              parent: _0x3e3aa6
            };
            const _0x32a2b5 = await this._def.in._parseAsync(_0x1ce3c7);
            if (_0x32a2b5.status === "aborted") {
              return _0x4c2310;
            }
            if (_0x32a2b5.status === "dirty") {
              _0xfea802.dirty();
              return _0x1dbae6(_0x32a2b5.value);
            } else {
              var _0x5412b9 = {
                data: _0x32a2b5.value,
                path: _0x3e3aa6.path,
                parent: _0x3e3aa6
              };
              return this._def.out._parseAsync(_0x5412b9);
            }
          };
          return _0x2b120b();
        } else {
          var _0x7f2c7d = {
            data: _0x3e3aa6.data,
            path: _0x3e3aa6.path,
            parent: _0x3e3aa6
          };
          const _0x122d8d = this._def.in._parseSync(_0x7f2c7d);
          if (_0x122d8d.status === "aborted") {
            return _0x4c2310;
          }
          if (_0x122d8d.status === "dirty") {
            _0xfea802.dirty();
            var _0x51f4d0 = {
              status: "dirty",
              value: _0x122d8d.value
            };
            return _0x51f4d0;
          } else {
            var _0x42975f = {
              data: _0x122d8d.value,
              path: _0x3e3aa6.path,
              parent: _0x3e3aa6
            };
            return this._def.out._parseSync(_0x42975f);
          }
        }
      }
      static create(_0x381a37, _0x1afea6) {
        var _0x30579e = {
          in: _0x381a37,
          out: _0x1afea6,
          typeName: _0x116981.ZodPipeline
        };
        return new _0x3044d5(_0x30579e);
      }
    }
    const _0x4dbbb3 = (_0x288ef2, _0x54781b = {}, _0x2f7bca) => {
      if (_0x288ef2) {
        return _0x1739bf.create().superRefine((_0x1fc246, _0x457901) => {
          if (!_0x288ef2(_0x1fc246)) {
            const _0x15ef74 = typeof _0x54781b === "function" ? _0x54781b(_0x1fc246) : typeof _0x54781b === "string" ? {
              message: _0x54781b
            } : _0x54781b;
            const _0x15a685 = _0x15ef74.fatal ?? _0x2f7bca ?? true;
            const _0x553a7c = typeof _0x15ef74 === "string" ? {
              message: _0x15ef74
            } : _0x15ef74;
            var _0x4a806d = {
              code: "custom",
              ..._0x553a7c
            };
            _0x4a806d.fatal = _0x15a685;
            _0x457901.addIssue(_0x4a806d);
          }
        });
      }
      return _0x1739bf.create();
    };
    var _0x134a6e = {
      object: _0x5753a7.lazycreate
    };
    const _0x362ac3 = _0x134a6e;
    var _0x116981;
    (function (_0x57656a) {
      _0x57656a.ZodString = "ZodString";
      _0x57656a.ZodNumber = "ZodNumber";
      _0x57656a.ZodNaN = "ZodNaN";
      _0x57656a.ZodBigInt = "ZodBigInt";
      _0x57656a.ZodBoolean = "ZodBoolean";
      _0x57656a.ZodDate = "ZodDate";
      _0x57656a.ZodSymbol = "ZodSymbol";
      _0x57656a.ZodUndefined = "ZodUndefined";
      _0x57656a.ZodNull = "ZodNull";
      _0x57656a.ZodAny = "ZodAny";
      _0x57656a.ZodUnknown = "ZodUnknown";
      _0x57656a.ZodNever = "ZodNever";
      _0x57656a.ZodVoid = "ZodVoid";
      _0x57656a.ZodArray = "ZodArray";
      _0x57656a.ZodObject = "ZodObject";
      _0x57656a.ZodUnion = "ZodUnion";
      _0x57656a.ZodDiscriminatedUnion = "ZodDiscriminatedUnion";
      _0x57656a.ZodIntersection = "ZodIntersection";
      _0x57656a.ZodTuple = "ZodTuple";
      _0x57656a.ZodRecord = "ZodRecord";
      _0x57656a.ZodMap = "ZodMap";
      _0x57656a.ZodSet = "ZodSet";
      _0x57656a.ZodFunction = "ZodFunction";
      _0x57656a.ZodLazy = "ZodLazy";
      _0x57656a.ZodLiteral = "ZodLiteral";
      _0x57656a.ZodEnum = "ZodEnum";
      _0x57656a.ZodEffects = "ZodEffects";
      _0x57656a.ZodNativeEnum = "ZodNativeEnum";
      _0x57656a.ZodOptional = "ZodOptional";
      _0x57656a.ZodNullable = "ZodNullable";
      _0x57656a.ZodDefault = "ZodDefault";
      _0x57656a.ZodCatch = "ZodCatch";
      _0x57656a.ZodPromise = "ZodPromise";
      _0x57656a.ZodBranded = "ZodBranded";
      _0x57656a.ZodPipeline = "ZodPipeline";
    })(_0x116981 ||= {});
    const _0x26b94d = (_0x490e6f, _0x4d3397 = {
      message: "Input not instance of " + _0x490e6f.name
    }) => _0x4dbbb3(_0x1e6e33 => _0x1e6e33 instanceof _0x490e6f, _0x4d3397);
    const _0xf4a7bc = _0x325378.create;
    const _0x488ec4 = _0x409d6f.create;
    const _0x39d533 = _0x3eee89.create;
    const _0x5ddad2 = _0x3df5ea.create;
    const _0x4f9153 = _0x3af5b4.create;
    const _0x518d18 = _0x2e2497.create;
    const _0x479067 = _0x4f3f4c.create;
    const _0x540cff = _0x5b103f.create;
    const _0x183885 = _0x11448.create;
    const _0x13e5b8 = _0x1739bf.create;
    const _0x49fcee = _0x3f61be.create;
    const _0x492206 = _0x5b6aa0.create;
    const _0x54d448 = _0x29ecee.create;
    const _0xe0b638 = _0x4c9a89.create;
    const _0x45a114 = _0x5753a7.create;
    const _0x26ec30 = _0x5753a7.strictCreate;
    const _0x43374e = _0x29a4ee.create;
    const _0x4bd4f9 = _0x480234.create;
    const _0x30fcab = _0x4cc748.create;
    const _0x2f294 = _0xf02b98.create;
    const _0x5752bd = _0x511337.create;
    const _0x49873b = _0x1c5684.create;
    const _0x131e6b = _0x44fc4d.create;
    const _0x4b25ae = _0x3aa12f.create;
    const _0x41866e = _0x146255.create;
    const _0x1c68b7 = _0x358885.create;
    const _0x532dd3 = _0x467059.create;
    const _0x47b64c = _0x1441e4.create;
    const _0x4ea2d1 = _0x17d8c3.create;
    const _0x4c6df0 = _0xd4b76e.create;
    const _0x3ec0a2 = _0x13fe1a.create;
    const _0x5aa7ec = _0x85dc69.create;
    const _0x1af081 = _0xd4b76e.createWithPreprocess;
    const _0x2a4ca5 = _0x3044d5.create;
    const _0x225ce4 = () => _0xf4a7bc().optional();
    const _0x2edcbb = () => _0x488ec4().optional();
    const _0x42094b = () => _0x4f9153().optional();
    const _0x5d6a83 = {
      string: _0x557b31 => _0x325378.create({
        ..._0x557b31,
        coerce: true
      }),
      number: _0x32fa48 => _0x409d6f.create({
        ..._0x32fa48,
        coerce: true
      }),
      boolean: _0x373d7a => _0x3af5b4.create({
        ..._0x373d7a,
        coerce: true
      }),
      bigint: _0x380d9c => _0x3df5ea.create({
        ..._0x380d9c,
        coerce: true
      }),
      date: _0x59d6e3 => _0x2e2497.create({
        ..._0x59d6e3,
        coerce: true
      })
    };
    const _0x350dcd = _0x4c2310;
    var _0x3de5a9 = Object.freeze({
      "__proto__": null,
      defaultErrorMap: _0x3aa914,
      setErrorMap: _0x42ea79,
      getErrorMap: _0x24610a,
      makeIssue: _0x239796,
      EMPTY_PATH: _0x18b559,
      addIssueToContext: _0x1e3fb0,
      ParseStatus: _0x524d93,
      INVALID: _0x4c2310,
      DIRTY: _0x1dbae6,
      OK: _0x2544e8,
      isAborted: _0x4442da,
      isDirty: _0x27a58a,
      isValid: _0x4e8c19,
      isAsync: _0x4fe8fd,
      get util() {
        return _0x3d5bee;
      },
      get objectUtil() {
        return _0x3f26bd;
      },
      ZodParsedType: _0x44c2fd,
      getParsedType: _0xc9abf6,
      ZodType: _0x3c9a2a,
      ZodString: _0x325378,
      ZodNumber: _0x409d6f,
      ZodBigInt: _0x3df5ea,
      ZodBoolean: _0x3af5b4,
      ZodDate: _0x2e2497,
      ZodSymbol: _0x4f3f4c,
      ZodUndefined: _0x5b103f,
      ZodNull: _0x11448,
      ZodAny: _0x1739bf,
      ZodUnknown: _0x3f61be,
      ZodNever: _0x5b6aa0,
      ZodVoid: _0x29ecee,
      ZodArray: _0x4c9a89,
      ZodObject: _0x5753a7,
      ZodUnion: _0x29a4ee,
      ZodDiscriminatedUnion: _0x480234,
      ZodIntersection: _0x4cc748,
      ZodTuple: _0xf02b98,
      ZodRecord: _0x511337,
      ZodMap: _0x1c5684,
      ZodSet: _0x44fc4d,
      ZodFunction: _0x3aa12f,
      ZodLazy: _0x146255,
      ZodLiteral: _0x358885,
      ZodEnum: _0x467059,
      ZodNativeEnum: _0x1441e4,
      ZodPromise: _0x17d8c3,
      ZodEffects: _0xd4b76e,
      ZodTransformer: _0xd4b76e,
      ZodOptional: _0x13fe1a,
      ZodNullable: _0x85dc69,
      ZodDefault: _0x430181,
      ZodCatch: _0x480613,
      ZodNaN: _0x3eee89,
      BRAND: _0x3c1095,
      ZodBranded: _0x42fbc9,
      ZodPipeline: _0x3044d5,
      custom: _0x4dbbb3,
      Schema: _0x3c9a2a,
      ZodSchema: _0x3c9a2a,
      late: _0x362ac3,
      get ZodFirstPartyTypeKind() {
        return _0x116981;
      },
      coerce: _0x5d6a83,
      any: _0x13e5b8,
      array: _0xe0b638,
      bigint: _0x5ddad2,
      boolean: _0x4f9153,
      date: _0x518d18,
      discriminatedUnion: _0x4bd4f9,
      effect: _0x4c6df0,
      enum: _0x532dd3,
      function: _0x4b25ae,
      instanceof: _0x26b94d,
      intersection: _0x30fcab,
      lazy: _0x41866e,
      literal: _0x1c68b7,
      map: _0x49873b,
      nan: _0x39d533,
      nativeEnum: _0x47b64c,
      never: _0x492206,
      null: _0x183885,
      nullable: _0x5aa7ec,
      number: _0x488ec4,
      object: _0x45a114,
      oboolean: _0x42094b,
      onumber: _0x2edcbb,
      optional: _0x3ec0a2,
      ostring: _0x225ce4,
      pipeline: _0x2a4ca5,
      preprocess: _0x1af081,
      promise: _0x4ea2d1,
      record: _0x5752bd,
      set: _0x131e6b,
      strictObject: _0x26ec30,
      string: _0xf4a7bc,
      symbol: _0x479067,
      transformer: _0x4c6df0,
      tuple: _0x2f294,
      undefined: _0x540cff,
      union: _0x43374e,
      unknown: _0x49fcee,
      void: _0x54d448,
      NEVER: _0x350dcd,
      ZodIssueCode: _0xda3f45,
      quotelessJson: _0xcaf480,
      ZodError: _0x21ad60
    });
    ;
    var _0x16fc4b = /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;
    var _0x2f3a0c = _0x3de5a9.object({
      codename: _0x3de5a9.string(),
      version: _0x3de5a9.string().regex(_0x16fc4b),
      permissions: _0x3de5a9.string().array()
    });
    var _0x7c0384 = _0x2f3a0c.omit({
      permissions: true
    });
    var _0x34ec74 = _0x3de5a9.object({
      API_URL: _0x3de5a9.string().url(),
      API_KEY: _0x3de5a9.string(),
      KEYS: _0x3de5a9.string().array()
    });
    var _0x1def48 = _0x3de5a9.object({
      id: _0x3de5a9.number(),
      origin: _0x3de5a9.string()
    });
    var _0x5342fe = _0x3de5a9.tuple([_0x3de5a9.boolean(), _0x3de5a9.any()]);
    var _0xd4a109 = _0x3de5a9.object({
      resolve: _0x3de5a9.function().args(_0x3de5a9.any()).returns(_0x3de5a9.void()),
      reject: _0x3de5a9.function().args(_0x3de5a9.any()).returns(_0x3de5a9.void()),
      timeout: _0x3de5a9.number()
    });
    var _0x615ed8 = _0x3de5a9.object({
      id: _0x3de5a9.number(),
      resource: _0x3de5a9.string()
    });
    var _0x38c0e2 = _0x3de5a9.tuple([_0x3de5a9.boolean(), _0x3de5a9.any()]);
    var _0xdd84a4 = _0x3de5a9.object({
      resolve: _0x3de5a9.function().args(_0x3de5a9.any()).returns(_0x3de5a9.void()),
      reject: _0x3de5a9.function().args(_0x3de5a9.any()).returns(_0x3de5a9.void()),
      timeout: _0x3de5a9.number()
    });
    ;
    var _0x464abb = Object.create;
    var _0x430860 = Object.defineProperty;
    var _0x57c230 = Object.getOwnPropertyDescriptor;
    var _0x5046f8 = Object.getOwnPropertyNames;
    var _0xf0f6e6 = Object.getPrototypeOf;
    var _0x27c700 = Object.prototype.hasOwnProperty;
    var _0x45a45b = (_0x36f242, _0x2ae498) => function _0x22bbf1() {
      if (!_0x2ae498) {
        (0, _0x36f242[_0x5046f8(_0x36f242)[0]])((_0x2ae498 = {
          exports: {}
        }).exports, _0x2ae498);
      }
      return _0x2ae498.exports;
    };
    var _0x530d70 = (_0x566746, _0x486ebb) => {
      for (var _0x2916aa in _0x486ebb) {
        _0x430860(_0x566746, _0x2916aa, {
          get: _0x486ebb[_0x2916aa],
          enumerable: true
        });
      }
    };
    var _0x221cdf = (_0x2e2470, _0x2bb010, _0x1d98ed, _0x5b6326) => {
      if (_0x2bb010 && typeof _0x2bb010 === "object" || typeof _0x2bb010 === "function") {
        for (let _0x1f29a9 of _0x5046f8(_0x2bb010)) {
          if (!_0x27c700.call(_0x2e2470, _0x1f29a9) && _0x1f29a9 !== _0x1d98ed) {
            _0x430860(_0x2e2470, _0x1f29a9, {
              get: () => _0x2bb010[_0x1f29a9],
              enumerable: !(_0x5b6326 = _0x57c230(_0x2bb010, _0x1f29a9)) || _0x5b6326.enumerable
            });
          }
        }
      }
      return _0x2e2470;
    };
    var _0x22d19b = (_0xdbe8f, _0x3372ab, _0x5abd74) => {
      _0x5abd74 = _0xdbe8f != null ? _0x464abb(_0xf0f6e6(_0xdbe8f)) : {};
      return _0x221cdf(_0x3372ab || !_0xdbe8f || !_0xdbe8f.__esModule ? _0x430860(_0x5abd74, "default", {
        value: _0xdbe8f,
        enumerable: true
      }) : _0x5abd74, _0xdbe8f);
    };
    var _0x3d2ad4 = (_0x4e94c0, _0x29c1c9, _0x2ac03a) => {
      if (!_0x29c1c9.has(_0x4e94c0)) {
        throw TypeError("Cannot " + _0x2ac03a);
      }
    };
    var _0x162672 = (_0x5a805c, _0x5eeb33, _0x144027) => {
      _0x3d2ad4(_0x5a805c, _0x5eeb33, "read from private field");
      if (_0x144027) {
        return _0x144027.call(_0x5a805c);
      } else {
        return _0x5eeb33.get(_0x5a805c);
      }
    };
    var _0xc69af7 = (_0x3ddb65, _0x42b647, _0x4a911d) => {
      if (_0x42b647.has(_0x3ddb65)) {
        throw TypeError("Cannot add the same private member more than once");
      }
      if (_0x42b647 instanceof WeakSet) {
        _0x42b647.add(_0x3ddb65);
      } else {
        _0x42b647.set(_0x3ddb65, _0x4a911d);
      }
    };
    var _0xf0f05d = (_0x400554, _0x474798, _0x3aebf3, _0x286ed6) => {
      _0x3d2ad4(_0x400554, _0x474798, "write to private field");
      if (_0x286ed6) {
        _0x286ed6.call(_0x400554, _0x3aebf3);
      } else {
        _0x474798.set(_0x400554, _0x3aebf3);
      }
      return _0x3aebf3;
    };
    var _0x382da9 = (_0x216924, _0x1bdb63, _0x348d61, _0x3869cd) => ({
      set _(_0x56ba04) {
        _0xf0f05d(_0x216924, _0x1bdb63, _0x56ba04, _0x348d61);
      },
      get _() {
        return _0x162672(_0x216924, _0x1bdb63, _0x3869cd);
      }
    });
    var _0x3199c1 = (_0x5ce790, _0x268afb, _0x2b0b11) => {
      _0x3d2ad4(_0x5ce790, _0x268afb, "access private method");
      return _0x2b0b11;
    };
    var _0x2354f1 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/core.js"(_0x1408f3, _0x2fd4e9) {
        'use strict';

        (function (_0x2aafbf, _0x252cad) {
          if (typeof _0x1408f3 === "object") {
            _0x2fd4e9.exports = _0x1408f3 = _0x252cad();
          } else if (typeof define === "function" && define.amd) {
            define([], _0x252cad);
          } else {
            _0x2aafbf.CryptoJS = _0x252cad();
          }
        })(_0x1408f3, function () {
          var _0x15c670 = _0x15c670 || function (_0x332fc3, _0xf64973) {
            var _0x1d8377 = Object.create || function () {
              function _0x49ecb2() {}
              ;
              return function (_0xac60e3) {
                var _0x272593;
                _0x49ecb2.prototype = _0xac60e3;
                _0x272593 = new _0x49ecb2();
                _0x49ecb2.prototype = null;
                return _0x272593;
              };
            }();
            var _0x372a96 = {};
            var _0x330451 = _0x372a96.lib = {};
            var _0x18b051 = _0x330451.Base = function () {
              return {
                extend: function (_0x265162) {
                  var _0x3dd8e3 = _0x1d8377(this);
                  if (_0x265162) {
                    _0x3dd8e3.mixIn(_0x265162);
                  }
                  if (!_0x3dd8e3.hasOwnProperty("init") || this.init === _0x3dd8e3.init) {
                    _0x3dd8e3.init = function () {
                      _0x3dd8e3.$super.init.apply(this, arguments);
                    };
                  }
                  _0x3dd8e3.init.prototype = _0x3dd8e3;
                  _0x3dd8e3.$super = this;
                  return _0x3dd8e3;
                },
                create: function () {
                  var _0x4faf40 = this.extend();
                  _0x4faf40.init.apply(_0x4faf40, arguments);
                  return _0x4faf40;
                },
                init: function () {},
                mixIn: function (_0x512a4f) {
                  for (var _0x12ff1c in _0x512a4f) {
                    if (_0x512a4f.hasOwnProperty(_0x12ff1c)) {
                      this[_0x12ff1c] = _0x512a4f[_0x12ff1c];
                    }
                  }
                  if (_0x512a4f.hasOwnProperty("toString")) {
                    this.toString = _0x512a4f.toString;
                  }
                },
                clone: function () {
                  return this.init.prototype.extend(this);
                }
              };
            }();
            var _0x532ede = _0x330451.WordArray = _0x18b051.extend({
              init: function (_0xe75b82, _0x434b13) {
                _0xe75b82 = this.words = _0xe75b82 || [];
                if (_0x434b13 != _0xf64973) {
                  this.sigBytes = _0x434b13;
                } else {
                  this.sigBytes = _0xe75b82.length * 4;
                }
              },
              toString: function (_0xfd19a3) {
                return (_0xfd19a3 || _0x15a616).stringify(this);
              },
              concat: function (_0x140430) {
                var _0x3d65ae = this.words;
                var _0x377af6 = _0x140430.words;
                var _0x127b18 = this.sigBytes;
                var _0x1a9116 = _0x140430.sigBytes;
                this.clamp();
                if (_0x127b18 % 4) {
                  for (var _0x36a697 = 0; _0x36a697 < _0x1a9116; _0x36a697++) {
                    var _0x1d3043 = _0x377af6[_0x36a697 >>> 2] >>> 24 - _0x36a697 % 4 * 8 & 255;
                    _0x3d65ae[_0x127b18 + _0x36a697 >>> 2] |= _0x1d3043 << 24 - (_0x127b18 + _0x36a697) % 4 * 8;
                  }
                } else {
                  for (var _0x36a697 = 0; _0x36a697 < _0x1a9116; _0x36a697 += 4) {
                    _0x3d65ae[_0x127b18 + _0x36a697 >>> 2] = _0x377af6[_0x36a697 >>> 2];
                  }
                }
                this.sigBytes += _0x1a9116;
                return this;
              },
              clamp: function () {
                var _0x4f60cb = this.words;
                var _0x514280 = this.sigBytes;
                _0x4f60cb[_0x514280 >>> 2] &= 4294967295 << 32 - _0x514280 % 4 * 8;
                _0x4f60cb.length = _0x332fc3.ceil(_0x514280 / 4);
              },
              clone: function () {
                var _0x4d4418 = _0x18b051.clone.call(this);
                _0x4d4418.words = this.words.slice(0);
                return _0x4d4418;
              },
              random: function (_0x48f88a) {
                var _0x19640a = [];
                function _0x2734cf(_0x34ee65) {
                  var _0x34ee65 = _0x34ee65;
                  var _0xd3bbe0 = 987654321;
                  var _0x210659 = 4294967295;
                  return function () {
                    _0xd3bbe0 = (_0xd3bbe0 & 65535) * 36969 + (_0xd3bbe0 >> 16) & _0x210659;
                    _0x34ee65 = (_0x34ee65 & 65535) * 18000 + (_0x34ee65 >> 16) & _0x210659;
                    var _0xcfcf0a = (_0xd3bbe0 << 16) + _0x34ee65 & _0x210659;
                    _0xcfcf0a /= 4294967296;
                    _0xcfcf0a += 0.5;
                    return _0xcfcf0a * (_0x332fc3.random() > 0.5 ? 1 : -1);
                  };
                }
                for (var _0x30713a = 0, _0x16f398; _0x30713a < _0x48f88a; _0x30713a += 4) {
                  var _0x303987 = _0x2734cf((_0x16f398 || _0x332fc3.random()) * 4294967296);
                  _0x16f398 = _0x303987() * 987654071;
                  _0x19640a.push(_0x303987() * 4294967296 | 0);
                }
                return new _0x532ede.init(_0x19640a, _0x48f88a);
              }
            });
            var _0xc8607e = _0x372a96.enc = {};
            var _0x15a616 = _0xc8607e.Hex = {
              stringify: function (_0xe16bf1) {
                var _0x3df2ef = _0xe16bf1.words;
                var _0x2fd22c = _0xe16bf1.sigBytes;
                var _0x411501 = [];
                for (var _0x61e8d8 = 0; _0x61e8d8 < _0x2fd22c; _0x61e8d8++) {
                  var _0x20c3f6 = _0x3df2ef[_0x61e8d8 >>> 2] >>> 24 - _0x61e8d8 % 4 * 8 & 255;
                  _0x411501.push((_0x20c3f6 >>> 4).toString(16));
                  _0x411501.push((_0x20c3f6 & 15).toString(16));
                }
                return _0x411501.join("");
              },
              parse: function (_0x512f38) {
                var _0x57335e = _0x512f38.length;
                var _0x1ef12d = [];
                for (var _0x14f246 = 0; _0x14f246 < _0x57335e; _0x14f246 += 2) {
                  _0x1ef12d[_0x14f246 >>> 3] |= parseInt(_0x512f38.substr(_0x14f246, 2), 16) << 24 - _0x14f246 % 8 * 4;
                }
                return new _0x532ede.init(_0x1ef12d, _0x57335e / 2);
              }
            };
            var _0x12a0ac = _0xc8607e.Latin1 = {
              stringify: function (_0xece986) {
                var _0x513b77 = _0xece986.words;
                var _0x5dc0d8 = _0xece986.sigBytes;
                var _0x582362 = [];
                for (var _0x5c4931 = 0; _0x5c4931 < _0x5dc0d8; _0x5c4931++) {
                  var _0x36db12 = _0x513b77[_0x5c4931 >>> 2] >>> 24 - _0x5c4931 % 4 * 8 & 255;
                  _0x582362.push(String.fromCharCode(_0x36db12));
                }
                return _0x582362.join("");
              },
              parse: function (_0x1693f4) {
                var _0x142c6b = _0x1693f4.length;
                var _0xc88d77 = [];
                for (var _0x5d1f01 = 0; _0x5d1f01 < _0x142c6b; _0x5d1f01++) {
                  _0xc88d77[_0x5d1f01 >>> 2] |= (_0x1693f4.charCodeAt(_0x5d1f01) & 255) << 24 - _0x5d1f01 % 4 * 8;
                }
                return new _0x532ede.init(_0xc88d77, _0x142c6b);
              }
            };
            var _0xbdbb3 = _0xc8607e.Utf8 = {
              stringify: function (_0x615afd) {
                try {
                  return decodeURIComponent(escape(_0x12a0ac.stringify(_0x615afd)));
                } catch (_0x28c4c2) {
                  throw new Error("Malformed UTF-8 data");
                }
              },
              parse: function (_0x91191b) {
                return _0x12a0ac.parse(unescape(encodeURIComponent(_0x91191b)));
              }
            };
            var _0x15d43f = _0x330451.BufferedBlockAlgorithm = _0x18b051.extend({
              reset: function () {
                this._data = new _0x532ede.init();
                this._nDataBytes = 0;
              },
              _append: function (_0x4af233) {
                if (typeof _0x4af233 == "string") {
                  _0x4af233 = _0xbdbb3.parse(_0x4af233);
                }
                this._data.concat(_0x4af233);
                this._nDataBytes += _0x4af233.sigBytes;
              },
              _process: function (_0x3665ff) {
                var _0x470314 = this._data;
                var _0xeed883 = _0x470314.words;
                var _0x26e970 = _0x470314.sigBytes;
                var _0x15e8e4 = this.blockSize;
                var _0x9d30ee = _0x15e8e4 * 4;
                var _0x378b47 = _0x26e970 / _0x9d30ee;
                if (_0x3665ff) {
                  _0x378b47 = _0x332fc3.ceil(_0x378b47);
                } else {
                  _0x378b47 = _0x332fc3.max((_0x378b47 | 0) - this._minBufferSize, 0);
                }
                var _0x9b19bd = _0x378b47 * _0x15e8e4;
                var _0x982ace = _0x332fc3.min(_0x9b19bd * 4, _0x26e970);
                if (_0x9b19bd) {
                  for (var _0x58eb5b = 0; _0x58eb5b < _0x9b19bd; _0x58eb5b += _0x15e8e4) {
                    this._doProcessBlock(_0xeed883, _0x58eb5b);
                  }
                  var _0x45d891 = _0xeed883.splice(0, _0x9b19bd);
                  _0x470314.sigBytes -= _0x982ace;
                }
                return new _0x532ede.init(_0x45d891, _0x982ace);
              },
              clone: function () {
                var _0x28caa6 = _0x18b051.clone.call(this);
                _0x28caa6._data = this._data.clone();
                return _0x28caa6;
              },
              _minBufferSize: 0
            });
            var _0x42670e = _0x330451.Hasher = _0x15d43f.extend({
              cfg: _0x18b051.extend(),
              init: function (_0x5ab859) {
                this.cfg = this.cfg.extend(_0x5ab859);
                this.reset();
              },
              reset: function () {
                _0x15d43f.reset.call(this);
                this._doReset();
              },
              update: function (_0x48710b) {
                this._append(_0x48710b);
                this._process();
                return this;
              },
              finalize: function (_0x3ee943) {
                if (_0x3ee943) {
                  this._append(_0x3ee943);
                }
                var _0x547cba = this._doFinalize();
                return _0x547cba;
              },
              blockSize: 16,
              _createHelper: function (_0x2a8346) {
                return function (_0x1d27aa, _0x41649c) {
                  return new _0x2a8346.init(_0x41649c).finalize(_0x1d27aa);
                };
              },
              _createHmacHelper: function (_0x36afe6) {
                return function (_0x1bcda4, _0x4aef56) {
                  return new _0x6e0c5f.HMAC.init(_0x36afe6, _0x4aef56).finalize(_0x1bcda4);
                };
              }
            });
            var _0x6e0c5f = _0x372a96.algo = {};
            return _0x372a96;
          }(Math);
          return _0x15c670;
        });
      }
    });
    var _0xf0aea5 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/x64-core.js"(_0x31ae17, _0x2838b0) {
        'use strict';

        (function (_0x2303ad, _0x584ad6) {
          if (typeof _0x31ae17 === "object") {
            _0x2838b0.exports = _0x31ae17 = _0x584ad6(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x584ad6);
          } else {
            _0x584ad6(_0x2303ad.CryptoJS);
          }
        })(_0x31ae17, function (_0x292c81) {
          (function (_0x3c7e1c) {
            var _0x1e55bf = _0x292c81;
            var _0x5417fa = _0x1e55bf.lib;
            var _0x5eee1a = _0x5417fa.Base;
            var _0x3a2d28 = _0x5417fa.WordArray;
            var _0x5b20a4 = _0x1e55bf.x64 = {};
            var _0x20c3b9 = {
              init: function (_0x51df61, _0x2c5994) {
                this.high = _0x51df61;
                this.low = _0x2c5994;
              }
            };
            var _0x44c21b = _0x5b20a4.Word = _0x5eee1a.extend(_0x20c3b9);
            var _0x2a2138 = _0x5b20a4.WordArray = _0x5eee1a.extend({
              init: function (_0x1ddc6b, _0x1fe7b9) {
                _0x1ddc6b = this.words = _0x1ddc6b || [];
                if (_0x1fe7b9 != _0x3c7e1c) {
                  this.sigBytes = _0x1fe7b9;
                } else {
                  this.sigBytes = _0x1ddc6b.length * 8;
                }
              },
              toX32: function () {
                var _0x4060d2 = this.words;
                var _0x2f01fc = _0x4060d2.length;
                var _0x10265c = [];
                for (var _0x2598fb = 0; _0x2598fb < _0x2f01fc; _0x2598fb++) {
                  var _0x35deec = _0x4060d2[_0x2598fb];
                  _0x10265c.push(_0x35deec.high);
                  _0x10265c.push(_0x35deec.low);
                }
                return _0x3a2d28.create(_0x10265c, this.sigBytes);
              },
              clone: function () {
                var _0xa4b0bd = _0x5eee1a.clone.call(this);
                var _0x423b58 = _0xa4b0bd.words = this.words.slice(0);
                var _0x5462ae = _0x423b58.length;
                for (var _0x57dce6 = 0; _0x57dce6 < _0x5462ae; _0x57dce6++) {
                  _0x423b58[_0x57dce6] = _0x423b58[_0x57dce6].clone();
                }
                return _0xa4b0bd;
              }
            });
          })();
          return _0x292c81;
        });
      }
    });
    var _0x2e79ec = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/lib-typedarrays.js"(_0x1333e4, _0x49df44) {
        'use strict';

        (function (_0x42a0b1, _0x2df6c9) {
          if (typeof _0x1333e4 === "object") {
            _0x49df44.exports = _0x1333e4 = _0x2df6c9(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x2df6c9);
          } else {
            _0x2df6c9(_0x42a0b1.CryptoJS);
          }
        })(_0x1333e4, function (_0x3fb3c8) {
          (function () {
            if (typeof ArrayBuffer != "function") {
              return;
            }
            var _0x499d91 = _0x3fb3c8;
            var _0x4c03b7 = _0x499d91.lib;
            var _0x239d84 = _0x4c03b7.WordArray;
            var _0x44d4a0 = _0x239d84.init;
            var _0x1fa410 = _0x239d84.init = function (_0x3fb52e) {
              if (_0x3fb52e instanceof ArrayBuffer) {
                _0x3fb52e = new Uint8Array(_0x3fb52e);
              }
              if (_0x3fb52e instanceof Int8Array || typeof Uint8ClampedArray !== "undefined" && _0x3fb52e instanceof Uint8ClampedArray || _0x3fb52e instanceof Int16Array || _0x3fb52e instanceof Uint16Array || _0x3fb52e instanceof Int32Array || _0x3fb52e instanceof Uint32Array || _0x3fb52e instanceof Float32Array || _0x3fb52e instanceof Float64Array) {
                _0x3fb52e = new Uint8Array(_0x3fb52e.buffer, _0x3fb52e.byteOffset, _0x3fb52e.byteLength);
              }
              if (_0x3fb52e instanceof Uint8Array) {
                var _0x2c9e25 = _0x3fb52e.byteLength;
                var _0x2a3a0e = [];
                for (var _0x25a6b4 = 0; _0x25a6b4 < _0x2c9e25; _0x25a6b4++) {
                  _0x2a3a0e[_0x25a6b4 >>> 2] |= _0x3fb52e[_0x25a6b4] << 24 - _0x25a6b4 % 4 * 8;
                }
                _0x44d4a0.call(this, _0x2a3a0e, _0x2c9e25);
              } else {
                _0x44d4a0.apply(this, arguments);
              }
            };
            _0x1fa410.prototype = _0x239d84;
          })();
          return _0x3fb3c8.lib.WordArray;
        });
      }
    });
    var _0x3c327f = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/enc-utf16.js"(_0x590fe6, _0x29883e) {
        'use strict';

        (function (_0x2a2c4b, _0x12b622) {
          if (typeof _0x590fe6 === "object") {
            _0x29883e.exports = _0x590fe6 = _0x12b622(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x12b622);
          } else {
            _0x12b622(_0x2a2c4b.CryptoJS);
          }
        })(_0x590fe6, function (_0x4af75e) {
          (function () {
            var _0x3725d3 = _0x4af75e;
            var _0x23b2e4 = _0x3725d3.lib;
            var _0x111a3d = _0x23b2e4.WordArray;
            var _0xfd06f = _0x3725d3.enc;
            var _0xecc7de = _0xfd06f.Utf16 = _0xfd06f.Utf16BE = {
              stringify: function (_0x112305) {
                var _0x42734d = _0x112305.words;
                var _0x269ee8 = _0x112305.sigBytes;
                var _0x1a2144 = [];
                for (var _0x520c83 = 0; _0x520c83 < _0x269ee8; _0x520c83 += 2) {
                  var _0x1a737e = _0x42734d[_0x520c83 >>> 2] >>> 16 - _0x520c83 % 4 * 8 & 65535;
                  _0x1a2144.push(String.fromCharCode(_0x1a737e));
                }
                return _0x1a2144.join("");
              },
              parse: function (_0x25a290) {
                var _0x3c589b = _0x25a290.length;
                var _0x5bdc51 = [];
                for (var _0x478ddb = 0; _0x478ddb < _0x3c589b; _0x478ddb++) {
                  _0x5bdc51[_0x478ddb >>> 1] |= _0x25a290.charCodeAt(_0x478ddb) << 16 - _0x478ddb % 2 * 16;
                }
                return _0x111a3d.create(_0x5bdc51, _0x3c589b * 2);
              }
            };
            _0xfd06f.Utf16LE = {
              stringify: function (_0x1ebd3a) {
                var _0x38eff0 = _0x1ebd3a.words;
                var _0x15f4dc = _0x1ebd3a.sigBytes;
                var _0x54da75 = [];
                for (var _0x39459c = 0; _0x39459c < _0x15f4dc; _0x39459c += 2) {
                  var _0x2d3048 = _0x31461f(_0x38eff0[_0x39459c >>> 2] >>> 16 - _0x39459c % 4 * 8 & 65535);
                  _0x54da75.push(String.fromCharCode(_0x2d3048));
                }
                return _0x54da75.join("");
              },
              parse: function (_0x12415d) {
                var _0x359b0a = _0x12415d.length;
                var _0x4e6954 = [];
                for (var _0x1e1fb4 = 0; _0x1e1fb4 < _0x359b0a; _0x1e1fb4++) {
                  _0x4e6954[_0x1e1fb4 >>> 1] |= _0x31461f(_0x12415d.charCodeAt(_0x1e1fb4) << 16 - _0x1e1fb4 % 2 * 16);
                }
                return _0x111a3d.create(_0x4e6954, _0x359b0a * 2);
              }
            };
            function _0x31461f(_0x35d8a5) {
              return _0x35d8a5 << 8 & 4278255360 | _0x35d8a5 >>> 8 & 16711935;
            }
          })();
          return _0x4af75e.enc.Utf16;
        });
      }
    });
    var _0x3102d9 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/enc-base64.js"(_0x36e744, _0x4c584f) {
        'use strict';

        (function (_0x390915, _0x337ee2) {
          if (typeof _0x36e744 === "object") {
            _0x4c584f.exports = _0x36e744 = _0x337ee2(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x337ee2);
          } else {
            _0x337ee2(_0x390915.CryptoJS);
          }
        })(_0x36e744, function (_0x20897a) {
          (function () {
            var _0xcceb12 = _0x20897a;
            var _0x24c816 = _0xcceb12.lib;
            var _0x4eb30b = _0x24c816.WordArray;
            var _0x54631a = _0xcceb12.enc;
            var _0x84e4e3 = _0x54631a.Base64 = {
              stringify: function (_0x2f269a) {
                var _0x4f117f = _0x2f269a.words;
                var _0x19f3f8 = _0x2f269a.sigBytes;
                var _0x5442c7 = this._map;
                _0x2f269a.clamp();
                var _0x8942bf = [];
                for (var _0x31f042 = 0; _0x31f042 < _0x19f3f8; _0x31f042 += 3) {
                  var _0x1f5e1e = _0x4f117f[_0x31f042 >>> 2] >>> 24 - _0x31f042 % 4 * 8 & 255;
                  var _0x2e7c50 = _0x4f117f[_0x31f042 + 1 >>> 2] >>> 24 - (_0x31f042 + 1) % 4 * 8 & 255;
                  var _0x29c514 = _0x4f117f[_0x31f042 + 2 >>> 2] >>> 24 - (_0x31f042 + 2) % 4 * 8 & 255;
                  var _0x465761 = _0x1f5e1e << 16 | _0x2e7c50 << 8 | _0x29c514;
                  for (var _0xf3319e = 0; _0xf3319e < 4 && _0x31f042 + _0xf3319e * 0.75 < _0x19f3f8; _0xf3319e++) {
                    _0x8942bf.push(_0x5442c7.charAt(_0x465761 >>> (3 - _0xf3319e) * 6 & 63));
                  }
                }
                var _0x1445af = _0x5442c7.charAt(64);
                if (_0x1445af) {
                  while (_0x8942bf.length % 4) {
                    _0x8942bf.push(_0x1445af);
                  }
                }
                return _0x8942bf.join("");
              },
              parse: function (_0x16f44f) {
                var _0x3bb93a = _0x16f44f.length;
                var _0x1d9a53 = this._map;
                var _0x51f900 = this._reverseMap;
                if (!_0x51f900) {
                  _0x51f900 = this._reverseMap = [];
                  for (var _0x15321d = 0; _0x15321d < _0x1d9a53.length; _0x15321d++) {
                    _0x51f900[_0x1d9a53.charCodeAt(_0x15321d)] = _0x15321d;
                  }
                }
                var _0x529aa1 = _0x1d9a53.charAt(64);
                if (_0x529aa1) {
                  var _0x1a7f92 = _0x16f44f.indexOf(_0x529aa1);
                  if (_0x1a7f92 !== -1) {
                    _0x3bb93a = _0x1a7f92;
                  }
                }
                return _0x4c8227(_0x16f44f, _0x3bb93a, _0x51f900);
              },
              _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
            };
            function _0x4c8227(_0x32f61e, _0x58b7db, _0x329c56) {
              var _0x2239ec = [];
              var _0x25a204 = 0;
              for (var _0x312416 = 0; _0x312416 < _0x58b7db; _0x312416++) {
                if (_0x312416 % 4) {
                  var _0x47b17e = _0x329c56[_0x32f61e.charCodeAt(_0x312416 - 1)] << _0x312416 % 4 * 2;
                  var _0x47da8c = _0x329c56[_0x32f61e.charCodeAt(_0x312416)] >>> 6 - _0x312416 % 4 * 2;
                  _0x2239ec[_0x25a204 >>> 2] |= (_0x47b17e | _0x47da8c) << 24 - _0x25a204 % 4 * 8;
                  _0x25a204++;
                }
              }
              return _0x4eb30b.create(_0x2239ec, _0x25a204);
            }
          })();
          return _0x20897a.enc.Base64;
        });
      }
    });
    var _0x48305a = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/md5.js"(_0x432427, _0x21020d) {
        'use strict';

        (function (_0x24b706, _0x5727c7) {
          if (typeof _0x432427 === "object") {
            _0x21020d.exports = _0x432427 = _0x5727c7(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x5727c7);
          } else {
            _0x5727c7(_0x24b706.CryptoJS);
          }
        })(_0x432427, function (_0x2ea531) {
          (function (_0xcccd76) {
            var _0x566b33 = _0x2ea531;
            var _0x408930 = _0x566b33.lib;
            var _0x4342a5 = _0x408930.WordArray;
            var _0x3d97e2 = _0x408930.Hasher;
            var _0x7fb2d3 = _0x566b33.algo;
            var _0x1ff3d6 = [];
            (function () {
              for (var _0x1139d4 = 0; _0x1139d4 < 64; _0x1139d4++) {
                _0x1ff3d6[_0x1139d4] = _0xcccd76.abs(_0xcccd76.sin(_0x1139d4 + 1)) * 4294967296 | 0;
              }
            })();
            var _0x30082d = _0x7fb2d3.MD5 = _0x3d97e2.extend({
              _doReset: function () {
                this._hash = new _0x4342a5.init([1732584193, 4023233417, 2562383102, 271733878]);
              },
              _doProcessBlock: function (_0x21f831, _0x3c753c) {
                for (var _0x4771c9 = 0; _0x4771c9 < 16; _0x4771c9++) {
                  var _0x3eb3d4 = _0x3c753c + _0x4771c9;
                  var _0x153244 = _0x21f831[_0x3eb3d4];
                  _0x21f831[_0x3eb3d4] = (_0x153244 << 8 | _0x153244 >>> 24) & 16711935 | (_0x153244 << 24 | _0x153244 >>> 8) & 4278255360;
                }
                var _0x1fb15b = this._hash.words;
                var _0x5af7ac = _0x21f831[_0x3c753c + 0];
                var _0x4c5d85 = _0x21f831[_0x3c753c + 1];
                var _0x9c48af = _0x21f831[_0x3c753c + 2];
                var _0x46b51d = _0x21f831[_0x3c753c + 3];
                var _0x3a0430 = _0x21f831[_0x3c753c + 4];
                var _0x41038b = _0x21f831[_0x3c753c + 5];
                var _0x854e76 = _0x21f831[_0x3c753c + 6];
                var _0x4bf3fc = _0x21f831[_0x3c753c + 7];
                var _0x27fd5a = _0x21f831[_0x3c753c + 8];
                var _0x1f37d6 = _0x21f831[_0x3c753c + 9];
                var _0x280e61 = _0x21f831[_0x3c753c + 10];
                var _0x4edfd4 = _0x21f831[_0x3c753c + 11];
                var _0x23237c = _0x21f831[_0x3c753c + 12];
                var _0xc3a9da = _0x21f831[_0x3c753c + 13];
                var _0x283676 = _0x21f831[_0x3c753c + 14];
                var _0x3fbd95 = _0x21f831[_0x3c753c + 15];
                var _0x3822df = _0x1fb15b[0];
                var _0x168e11 = _0x1fb15b[1];
                var _0x41baff = _0x1fb15b[2];
                var _0x1733f1 = _0x1fb15b[3];
                _0x3822df = _0x23c835(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x5af7ac, 7, _0x1ff3d6[0]);
                _0x1733f1 = _0x23c835(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x4c5d85, 12, _0x1ff3d6[1]);
                _0x41baff = _0x23c835(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x9c48af, 17, _0x1ff3d6[2]);
                _0x168e11 = _0x23c835(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x46b51d, 22, _0x1ff3d6[3]);
                _0x3822df = _0x23c835(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x3a0430, 7, _0x1ff3d6[4]);
                _0x1733f1 = _0x23c835(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x41038b, 12, _0x1ff3d6[5]);
                _0x41baff = _0x23c835(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x854e76, 17, _0x1ff3d6[6]);
                _0x168e11 = _0x23c835(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x4bf3fc, 22, _0x1ff3d6[7]);
                _0x3822df = _0x23c835(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x27fd5a, 7, _0x1ff3d6[8]);
                _0x1733f1 = _0x23c835(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x1f37d6, 12, _0x1ff3d6[9]);
                _0x41baff = _0x23c835(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x280e61, 17, _0x1ff3d6[10]);
                _0x168e11 = _0x23c835(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x4edfd4, 22, _0x1ff3d6[11]);
                _0x3822df = _0x23c835(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x23237c, 7, _0x1ff3d6[12]);
                _0x1733f1 = _0x23c835(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0xc3a9da, 12, _0x1ff3d6[13]);
                _0x41baff = _0x23c835(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x283676, 17, _0x1ff3d6[14]);
                _0x168e11 = _0x23c835(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x3fbd95, 22, _0x1ff3d6[15]);
                _0x3822df = _0x17b1a1(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x4c5d85, 5, _0x1ff3d6[16]);
                _0x1733f1 = _0x17b1a1(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x854e76, 9, _0x1ff3d6[17]);
                _0x41baff = _0x17b1a1(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x4edfd4, 14, _0x1ff3d6[18]);
                _0x168e11 = _0x17b1a1(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x5af7ac, 20, _0x1ff3d6[19]);
                _0x3822df = _0x17b1a1(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x41038b, 5, _0x1ff3d6[20]);
                _0x1733f1 = _0x17b1a1(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x280e61, 9, _0x1ff3d6[21]);
                _0x41baff = _0x17b1a1(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x3fbd95, 14, _0x1ff3d6[22]);
                _0x168e11 = _0x17b1a1(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x3a0430, 20, _0x1ff3d6[23]);
                _0x3822df = _0x17b1a1(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x1f37d6, 5, _0x1ff3d6[24]);
                _0x1733f1 = _0x17b1a1(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x283676, 9, _0x1ff3d6[25]);
                _0x41baff = _0x17b1a1(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x46b51d, 14, _0x1ff3d6[26]);
                _0x168e11 = _0x17b1a1(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x27fd5a, 20, _0x1ff3d6[27]);
                _0x3822df = _0x17b1a1(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0xc3a9da, 5, _0x1ff3d6[28]);
                _0x1733f1 = _0x17b1a1(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x9c48af, 9, _0x1ff3d6[29]);
                _0x41baff = _0x17b1a1(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x4bf3fc, 14, _0x1ff3d6[30]);
                _0x168e11 = _0x17b1a1(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x23237c, 20, _0x1ff3d6[31]);
                _0x3822df = _0x577209(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x41038b, 4, _0x1ff3d6[32]);
                _0x1733f1 = _0x577209(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x27fd5a, 11, _0x1ff3d6[33]);
                _0x41baff = _0x577209(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x4edfd4, 16, _0x1ff3d6[34]);
                _0x168e11 = _0x577209(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x283676, 23, _0x1ff3d6[35]);
                _0x3822df = _0x577209(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x4c5d85, 4, _0x1ff3d6[36]);
                _0x1733f1 = _0x577209(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x3a0430, 11, _0x1ff3d6[37]);
                _0x41baff = _0x577209(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x4bf3fc, 16, _0x1ff3d6[38]);
                _0x168e11 = _0x577209(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x280e61, 23, _0x1ff3d6[39]);
                _0x3822df = _0x577209(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0xc3a9da, 4, _0x1ff3d6[40]);
                _0x1733f1 = _0x577209(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x5af7ac, 11, _0x1ff3d6[41]);
                _0x41baff = _0x577209(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x46b51d, 16, _0x1ff3d6[42]);
                _0x168e11 = _0x577209(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x854e76, 23, _0x1ff3d6[43]);
                _0x3822df = _0x577209(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x1f37d6, 4, _0x1ff3d6[44]);
                _0x1733f1 = _0x577209(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x23237c, 11, _0x1ff3d6[45]);
                _0x41baff = _0x577209(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x3fbd95, 16, _0x1ff3d6[46]);
                _0x168e11 = _0x577209(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x9c48af, 23, _0x1ff3d6[47]);
                _0x3822df = _0x80d857(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x5af7ac, 6, _0x1ff3d6[48]);
                _0x1733f1 = _0x80d857(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x4bf3fc, 10, _0x1ff3d6[49]);
                _0x41baff = _0x80d857(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x283676, 15, _0x1ff3d6[50]);
                _0x168e11 = _0x80d857(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x41038b, 21, _0x1ff3d6[51]);
                _0x3822df = _0x80d857(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x23237c, 6, _0x1ff3d6[52]);
                _0x1733f1 = _0x80d857(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x46b51d, 10, _0x1ff3d6[53]);
                _0x41baff = _0x80d857(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x280e61, 15, _0x1ff3d6[54]);
                _0x168e11 = _0x80d857(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x4c5d85, 21, _0x1ff3d6[55]);
                _0x3822df = _0x80d857(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x27fd5a, 6, _0x1ff3d6[56]);
                _0x1733f1 = _0x80d857(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x3fbd95, 10, _0x1ff3d6[57]);
                _0x41baff = _0x80d857(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x854e76, 15, _0x1ff3d6[58]);
                _0x168e11 = _0x80d857(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0xc3a9da, 21, _0x1ff3d6[59]);
                _0x3822df = _0x80d857(_0x3822df, _0x168e11, _0x41baff, _0x1733f1, _0x3a0430, 6, _0x1ff3d6[60]);
                _0x1733f1 = _0x80d857(_0x1733f1, _0x3822df, _0x168e11, _0x41baff, _0x4edfd4, 10, _0x1ff3d6[61]);
                _0x41baff = _0x80d857(_0x41baff, _0x1733f1, _0x3822df, _0x168e11, _0x9c48af, 15, _0x1ff3d6[62]);
                _0x168e11 = _0x80d857(_0x168e11, _0x41baff, _0x1733f1, _0x3822df, _0x1f37d6, 21, _0x1ff3d6[63]);
                _0x1fb15b[0] = _0x1fb15b[0] + _0x3822df | 0;
                _0x1fb15b[1] = _0x1fb15b[1] + _0x168e11 | 0;
                _0x1fb15b[2] = _0x1fb15b[2] + _0x41baff | 0;
                _0x1fb15b[3] = _0x1fb15b[3] + _0x1733f1 | 0;
              },
              _doFinalize: function () {
                var _0x5341f6 = this._data;
                var _0x2d0306 = _0x5341f6.words;
                var _0x15a15f = this._nDataBytes * 8;
                var _0x31a680 = _0x5341f6.sigBytes * 8;
                _0x2d0306[_0x31a680 >>> 5] |= 128 << 24 - _0x31a680 % 32;
                var _0x104492 = _0xcccd76.floor(_0x15a15f / 4294967296);
                var _0xaa2fbe = _0x15a15f;
                _0x2d0306[(_0x31a680 + 64 >>> 9 << 4) + 15] = (_0x104492 << 8 | _0x104492 >>> 24) & 16711935 | (_0x104492 << 24 | _0x104492 >>> 8) & 4278255360;
                _0x2d0306[(_0x31a680 + 64 >>> 9 << 4) + 14] = (_0xaa2fbe << 8 | _0xaa2fbe >>> 24) & 16711935 | (_0xaa2fbe << 24 | _0xaa2fbe >>> 8) & 4278255360;
                _0x5341f6.sigBytes = (_0x2d0306.length + 1) * 4;
                this._process();
                var _0x3a1a74 = this._hash;
                var _0x45e7de = _0x3a1a74.words;
                for (var _0x5a1a7e = 0; _0x5a1a7e < 4; _0x5a1a7e++) {
                  var _0x26b90e = _0x45e7de[_0x5a1a7e];
                  _0x45e7de[_0x5a1a7e] = (_0x26b90e << 8 | _0x26b90e >>> 24) & 16711935 | (_0x26b90e << 24 | _0x26b90e >>> 8) & 4278255360;
                }
                return _0x3a1a74;
              },
              clone: function () {
                var _0x92c360 = _0x3d97e2.clone.call(this);
                _0x92c360._hash = this._hash.clone();
                return _0x92c360;
              }
            });
            function _0x23c835(_0x29dc28, _0x163b88, _0x38039c, _0x4fc5d5, _0x489225, _0x405846, _0x399dd7) {
              var _0x5e79cf = _0x29dc28 + (_0x163b88 & _0x38039c | ~_0x163b88 & _0x4fc5d5) + _0x489225 + _0x399dd7;
              return (_0x5e79cf << _0x405846 | _0x5e79cf >>> 32 - _0x405846) + _0x163b88;
            }
            function _0x17b1a1(_0x2cf2b6, _0x671a3b, _0x1e0055, _0x2759ff, _0x13371a, _0x1bb607, _0x408877) {
              var _0x1e66d0 = _0x2cf2b6 + (_0x671a3b & _0x2759ff | _0x1e0055 & ~_0x2759ff) + _0x13371a + _0x408877;
              return (_0x1e66d0 << _0x1bb607 | _0x1e66d0 >>> 32 - _0x1bb607) + _0x671a3b;
            }
            function _0x577209(_0x50a2d1, _0x8aa4bb, _0x16244c, _0x29756c, _0x4e7b3e, _0x36b2a4, _0x43eb6b) {
              var _0x2b44e1 = _0x50a2d1 + (_0x8aa4bb ^ _0x16244c ^ _0x29756c) + _0x4e7b3e + _0x43eb6b;
              return (_0x2b44e1 << _0x36b2a4 | _0x2b44e1 >>> 32 - _0x36b2a4) + _0x8aa4bb;
            }
            function _0x80d857(_0x3e0491, _0x396fa5, _0x3b49d3, _0x666b99, _0x4b20ca, _0x2d1605, _0x442c81) {
              var _0x324314 = _0x3e0491 + (_0x3b49d3 ^ (_0x396fa5 | ~_0x666b99)) + _0x4b20ca + _0x442c81;
              return (_0x324314 << _0x2d1605 | _0x324314 >>> 32 - _0x2d1605) + _0x396fa5;
            }
            _0x566b33.MD5 = _0x3d97e2._createHelper(_0x30082d);
            _0x566b33.HmacMD5 = _0x3d97e2._createHmacHelper(_0x30082d);
          })(Math);
          return _0x2ea531.MD5;
        });
      }
    });
    var _0x1ccb83 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha1.js"(_0x3a094f, _0x55e149) {
        'use strict';

        (function (_0x3cc3ea, _0xaeb0d2) {
          if (typeof _0x3a094f === "object") {
            _0x55e149.exports = _0x3a094f = _0xaeb0d2(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0xaeb0d2);
          } else {
            _0xaeb0d2(_0x3cc3ea.CryptoJS);
          }
        })(_0x3a094f, function (_0x3ad7b9) {
          (function () {
            var _0x57c8f0 = _0x3ad7b9;
            var _0x5dc2ff = _0x57c8f0.lib;
            var _0x190665 = _0x5dc2ff.WordArray;
            var _0x588bb0 = _0x5dc2ff.Hasher;
            var _0x4d6863 = _0x57c8f0.algo;
            var _0x509da4 = [];
            var _0x290f79 = _0x4d6863.SHA1 = _0x588bb0.extend({
              _doReset: function () {
                this._hash = new _0x190665.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
              },
              _doProcessBlock: function (_0x2d66e0, _0x212e4a) {
                var _0x119417 = this._hash.words;
                var _0x1d0235 = _0x119417[0];
                var _0x2ef8fd = _0x119417[1];
                var _0x5c5b68 = _0x119417[2];
                var _0x1cd6b0 = _0x119417[3];
                var _0x1e8a2d = _0x119417[4];
                for (var _0x435d3a = 0; _0x435d3a < 80; _0x435d3a++) {
                  if (_0x435d3a < 16) {
                    _0x509da4[_0x435d3a] = _0x2d66e0[_0x212e4a + _0x435d3a] | 0;
                  } else {
                    var _0x5df6a5 = _0x509da4[_0x435d3a - 3] ^ _0x509da4[_0x435d3a - 8] ^ _0x509da4[_0x435d3a - 14] ^ _0x509da4[_0x435d3a - 16];
                    _0x509da4[_0x435d3a] = _0x5df6a5 << 1 | _0x5df6a5 >>> 31;
                  }
                  var _0x423243 = (_0x1d0235 << 5 | _0x1d0235 >>> 27) + _0x1e8a2d + _0x509da4[_0x435d3a];
                  if (_0x435d3a < 20) {
                    _0x423243 += (_0x2ef8fd & _0x5c5b68 | ~_0x2ef8fd & _0x1cd6b0) + 1518500249;
                  } else if (_0x435d3a < 40) {
                    _0x423243 += (_0x2ef8fd ^ _0x5c5b68 ^ _0x1cd6b0) + 1859775393;
                  } else if (_0x435d3a < 60) {
                    _0x423243 += (_0x2ef8fd & _0x5c5b68 | _0x2ef8fd & _0x1cd6b0 | _0x5c5b68 & _0x1cd6b0) - 1894007588;
                  } else {
                    _0x423243 += (_0x2ef8fd ^ _0x5c5b68 ^ _0x1cd6b0) - 899497514;
                  }
                  _0x1e8a2d = _0x1cd6b0;
                  _0x1cd6b0 = _0x5c5b68;
                  _0x5c5b68 = _0x2ef8fd << 30 | _0x2ef8fd >>> 2;
                  _0x2ef8fd = _0x1d0235;
                  _0x1d0235 = _0x423243;
                }
                _0x119417[0] = _0x119417[0] + _0x1d0235 | 0;
                _0x119417[1] = _0x119417[1] + _0x2ef8fd | 0;
                _0x119417[2] = _0x119417[2] + _0x5c5b68 | 0;
                _0x119417[3] = _0x119417[3] + _0x1cd6b0 | 0;
                _0x119417[4] = _0x119417[4] + _0x1e8a2d | 0;
              },
              _doFinalize: function () {
                var _0x4dc8a6 = this._data;
                var _0x387d04 = _0x4dc8a6.words;
                var _0x4c5dd7 = this._nDataBytes * 8;
                var _0x47cc9d = _0x4dc8a6.sigBytes * 8;
                _0x387d04[_0x47cc9d >>> 5] |= 128 << 24 - _0x47cc9d % 32;
                _0x387d04[(_0x47cc9d + 64 >>> 9 << 4) + 14] = Math.floor(_0x4c5dd7 / 4294967296);
                _0x387d04[(_0x47cc9d + 64 >>> 9 << 4) + 15] = _0x4c5dd7;
                _0x4dc8a6.sigBytes = _0x387d04.length * 4;
                this._process();
                return this._hash;
              },
              clone: function () {
                var _0x160a95 = _0x588bb0.clone.call(this);
                _0x160a95._hash = this._hash.clone();
                return _0x160a95;
              }
            });
            _0x57c8f0.SHA1 = _0x588bb0._createHelper(_0x290f79);
            _0x57c8f0.HmacSHA1 = _0x588bb0._createHmacHelper(_0x290f79);
          })();
          return _0x3ad7b9.SHA1;
        });
      }
    });
    var _0x5fc38d = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha256.js"(_0x35e39d, _0x3a118a) {
        'use strict';

        (function (_0x1c0fa3, _0x1c59be) {
          if (typeof _0x35e39d === "object") {
            _0x3a118a.exports = _0x35e39d = _0x1c59be(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x1c59be);
          } else {
            _0x1c59be(_0x1c0fa3.CryptoJS);
          }
        })(_0x35e39d, function (_0x3ca896) {
          (function (_0x5a02f6) {
            var _0x180802 = _0x3ca896;
            var _0x5b84a7 = _0x180802.lib;
            var _0x2bcf67 = _0x5b84a7.WordArray;
            var _0x28712e = _0x5b84a7.Hasher;
            var _0x3e79cd = _0x180802.algo;
            var _0x35046d = [];
            var _0x2f46db = [];
            (function () {
              function _0x568b81(_0xc5733a) {
                var _0x204a01 = _0x5a02f6.sqrt(_0xc5733a);
                for (var _0x31101b = 2; _0x31101b <= _0x204a01; _0x31101b++) {
                  if (!(_0xc5733a % _0x31101b)) {
                    return false;
                  }
                }
                return true;
              }
              function _0x522905(_0x5747a8) {
                return (_0x5747a8 - (_0x5747a8 | 0)) * 4294967296 | 0;
              }
              var _0xb88170 = 2;
              var _0x46886e = 0;
              while (_0x46886e < 64) {
                if (_0x568b81(_0xb88170)) {
                  if (_0x46886e < 8) {
                    _0x35046d[_0x46886e] = _0x522905(_0x5a02f6.pow(_0xb88170, 1 / 2));
                  }
                  _0x2f46db[_0x46886e] = _0x522905(_0x5a02f6.pow(_0xb88170, 1 / 3));
                  _0x46886e++;
                }
                _0xb88170++;
              }
            })();
            var _0x334a22 = [];
            var _0x7ee4d7 = _0x3e79cd.SHA256 = _0x28712e.extend({
              _doReset: function () {
                this._hash = new _0x2bcf67.init(_0x35046d.slice(0));
              },
              _doProcessBlock: function (_0x592bc8, _0x3000dd) {
                var _0x1e734c = this._hash.words;
                var _0xb4b1f6 = _0x1e734c[0];
                var _0xc9ef9b = _0x1e734c[1];
                var _0x5aa034 = _0x1e734c[2];
                var _0x1e365b = _0x1e734c[3];
                var _0x32cde2 = _0x1e734c[4];
                var _0x185c12 = _0x1e734c[5];
                var _0x4c1c81 = _0x1e734c[6];
                var _0x5c807f = _0x1e734c[7];
                for (var _0x4bc825 = 0; _0x4bc825 < 64; _0x4bc825++) {
                  if (_0x4bc825 < 16) {
                    _0x334a22[_0x4bc825] = _0x592bc8[_0x3000dd + _0x4bc825] | 0;
                  } else {
                    var _0x16f051 = _0x334a22[_0x4bc825 - 15];
                    var _0x2736e6 = (_0x16f051 << 25 | _0x16f051 >>> 7) ^ (_0x16f051 << 14 | _0x16f051 >>> 18) ^ _0x16f051 >>> 3;
                    var _0x39afa9 = _0x334a22[_0x4bc825 - 2];
                    var _0x158f58 = (_0x39afa9 << 15 | _0x39afa9 >>> 17) ^ (_0x39afa9 << 13 | _0x39afa9 >>> 19) ^ _0x39afa9 >>> 10;
                    _0x334a22[_0x4bc825] = _0x2736e6 + _0x334a22[_0x4bc825 - 7] + _0x158f58 + _0x334a22[_0x4bc825 - 16];
                  }
                  var _0x3e609b = _0x32cde2 & _0x185c12 ^ ~_0x32cde2 & _0x4c1c81;
                  var _0x18a75e = _0xb4b1f6 & _0xc9ef9b ^ _0xb4b1f6 & _0x5aa034 ^ _0xc9ef9b & _0x5aa034;
                  var _0x1604b1 = (_0xb4b1f6 << 30 | _0xb4b1f6 >>> 2) ^ (_0xb4b1f6 << 19 | _0xb4b1f6 >>> 13) ^ (_0xb4b1f6 << 10 | _0xb4b1f6 >>> 22);
                  var _0x1f09d8 = (_0x32cde2 << 26 | _0x32cde2 >>> 6) ^ (_0x32cde2 << 21 | _0x32cde2 >>> 11) ^ (_0x32cde2 << 7 | _0x32cde2 >>> 25);
                  var _0x1ce76a = _0x5c807f + _0x1f09d8 + _0x3e609b + _0x2f46db[_0x4bc825] + _0x334a22[_0x4bc825];
                  var _0x1fb726 = _0x1604b1 + _0x18a75e;
                  _0x5c807f = _0x4c1c81;
                  _0x4c1c81 = _0x185c12;
                  _0x185c12 = _0x32cde2;
                  _0x32cde2 = _0x1e365b + _0x1ce76a | 0;
                  _0x1e365b = _0x5aa034;
                  _0x5aa034 = _0xc9ef9b;
                  _0xc9ef9b = _0xb4b1f6;
                  _0xb4b1f6 = _0x1ce76a + _0x1fb726 | 0;
                }
                _0x1e734c[0] = _0x1e734c[0] + _0xb4b1f6 | 0;
                _0x1e734c[1] = _0x1e734c[1] + _0xc9ef9b | 0;
                _0x1e734c[2] = _0x1e734c[2] + _0x5aa034 | 0;
                _0x1e734c[3] = _0x1e734c[3] + _0x1e365b | 0;
                _0x1e734c[4] = _0x1e734c[4] + _0x32cde2 | 0;
                _0x1e734c[5] = _0x1e734c[5] + _0x185c12 | 0;
                _0x1e734c[6] = _0x1e734c[6] + _0x4c1c81 | 0;
                _0x1e734c[7] = _0x1e734c[7] + _0x5c807f | 0;
              },
              _doFinalize: function () {
                var _0xa39adc = this._data;
                var _0x5050fa = _0xa39adc.words;
                var _0x1f6aad = this._nDataBytes * 8;
                var _0x4d1652 = _0xa39adc.sigBytes * 8;
                _0x5050fa[_0x4d1652 >>> 5] |= 128 << 24 - _0x4d1652 % 32;
                _0x5050fa[(_0x4d1652 + 64 >>> 9 << 4) + 14] = _0x5a02f6.floor(_0x1f6aad / 4294967296);
                _0x5050fa[(_0x4d1652 + 64 >>> 9 << 4) + 15] = _0x1f6aad;
                _0xa39adc.sigBytes = _0x5050fa.length * 4;
                this._process();
                return this._hash;
              },
              clone: function () {
                var _0x49efb6 = _0x28712e.clone.call(this);
                _0x49efb6._hash = this._hash.clone();
                return _0x49efb6;
              }
            });
            _0x180802.SHA256 = _0x28712e._createHelper(_0x7ee4d7);
            _0x180802.HmacSHA256 = _0x28712e._createHmacHelper(_0x7ee4d7);
          })(Math);
          return _0x3ca896.SHA256;
        });
      }
    });
    var _0x703d0c = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha224.js"(_0x30f3b7, _0x536cbb) {
        'use strict';

        (function (_0x5e5f49, _0x2a763c, _0x4fe01d) {
          if (typeof _0x30f3b7 === "object") {
            _0x536cbb.exports = _0x30f3b7 = _0x2a763c(_0x2354f1(), _0x5fc38d());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./sha256"], _0x2a763c);
          } else {
            _0x2a763c(_0x5e5f49.CryptoJS);
          }
        })(_0x30f3b7, function (_0xe5c3d) {
          (function () {
            var _0x5a18b5 = _0xe5c3d;
            var _0x4967c5 = _0x5a18b5.lib;
            var _0xb745a = _0x4967c5.WordArray;
            var _0x97f775 = _0x5a18b5.algo;
            var _0x3bd562 = _0x97f775.SHA256;
            var _0x288263 = _0x97f775.SHA224 = _0x3bd562.extend({
              _doReset: function () {
                this._hash = new _0xb745a.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
              },
              _doFinalize: function () {
                var _0x3f2719 = _0x3bd562._doFinalize.call(this);
                _0x3f2719.sigBytes -= 4;
                return _0x3f2719;
              }
            });
            _0x5a18b5.SHA224 = _0x3bd562._createHelper(_0x288263);
            _0x5a18b5.HmacSHA224 = _0x3bd562._createHmacHelper(_0x288263);
          })();
          return _0xe5c3d.SHA224;
        });
      }
    });
    var _0x4f23e1 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha512.js"(_0x2ce0a9, _0x4597bc) {
        'use strict';

        (function (_0x591897, _0x562da9, _0x109652) {
          if (typeof _0x2ce0a9 === "object") {
            _0x4597bc.exports = _0x2ce0a9 = _0x562da9(_0x2354f1(), _0xf0aea5());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core"], _0x562da9);
          } else {
            _0x562da9(_0x591897.CryptoJS);
          }
        })(_0x2ce0a9, function (_0x448b47) {
          (function () {
            var _0x3593c5 = _0x448b47;
            var _0x2b40f6 = _0x3593c5.lib;
            var _0x355e4d = _0x2b40f6.Hasher;
            var _0x4b6169 = _0x3593c5.x64;
            var _0xd356a1 = _0x4b6169.Word;
            var _0xd3bb55 = _0x4b6169.WordArray;
            var _0x547f5d = _0x3593c5.algo;
            function _0x3394b4() {
              return _0xd356a1.create.apply(_0xd356a1, arguments);
            }
            var _0x1f4ce9 = [_0x3394b4(1116352408, 3609767458), _0x3394b4(1899447441, 602891725), _0x3394b4(3049323471, 3964484399), _0x3394b4(3921009573, 2173295548), _0x3394b4(961987163, 4081628472), _0x3394b4(1508970993, 3053834265), _0x3394b4(2453635748, 2937671579), _0x3394b4(2870763221, 3664609560), _0x3394b4(3624381080, 2734883394), _0x3394b4(310598401, 1164996542), _0x3394b4(607225278, 1323610764), _0x3394b4(1426881987, 3590304994), _0x3394b4(1925078388, 4068182383), _0x3394b4(2162078206, 991336113), _0x3394b4(2614888103, 633803317), _0x3394b4(3248222580, 3479774868), _0x3394b4(3835390401, 2666613458), _0x3394b4(4022224774, 944711139), _0x3394b4(264347078, 2341262773), _0x3394b4(604807628, 2007800933), _0x3394b4(770255983, 1495990901), _0x3394b4(1249150122, 1856431235), _0x3394b4(1555081692, 3175218132), _0x3394b4(1996064986, 2198950837), _0x3394b4(2554220882, 3999719339), _0x3394b4(2821834349, 766784016), _0x3394b4(2952996808, 2566594879), _0x3394b4(3210313671, 3203337956), _0x3394b4(3336571891, 1034457026), _0x3394b4(3584528711, 2466948901), _0x3394b4(113926993, 3758326383), _0x3394b4(338241895, 168717936), _0x3394b4(666307205, 1188179964), _0x3394b4(773529912, 1546045734), _0x3394b4(1294757372, 1522805485), _0x3394b4(1396182291, 2643833823), _0x3394b4(1695183700, 2343527390), _0x3394b4(1986661051, 1014477480), _0x3394b4(2177026350, 1206759142), _0x3394b4(2456956037, 344077627), _0x3394b4(2730485921, 1290863460), _0x3394b4(2820302411, 3158454273), _0x3394b4(3259730800, 3505952657), _0x3394b4(3345764771, 106217008), _0x3394b4(3516065817, 3606008344), _0x3394b4(3600352804, 1432725776), _0x3394b4(4094571909, 1467031594), _0x3394b4(275423344, 851169720), _0x3394b4(430227734, 3100823752), _0x3394b4(506948616, 1363258195), _0x3394b4(659060556, 3750685593), _0x3394b4(883997877, 3785050280), _0x3394b4(958139571, 3318307427), _0x3394b4(1322822218, 3812723403), _0x3394b4(1537002063, 2003034995), _0x3394b4(1747873779, 3602036899), _0x3394b4(1955562222, 1575990012), _0x3394b4(2024104815, 1125592928), _0x3394b4(2227730452, 2716904306), _0x3394b4(2361852424, 442776044), _0x3394b4(2428436474, 593698344), _0x3394b4(2756734187, 3733110249), _0x3394b4(3204031479, 2999351573), _0x3394b4(3329325298, 3815920427), _0x3394b4(3391569614, 3928383900), _0x3394b4(3515267271, 566280711), _0x3394b4(3940187606, 3454069534), _0x3394b4(4118630271, 4000239992), _0x3394b4(116418474, 1914138554), _0x3394b4(174292421, 2731055270), _0x3394b4(289380356, 3203993006), _0x3394b4(460393269, 320620315), _0x3394b4(685471733, 587496836), _0x3394b4(852142971, 1086792851), _0x3394b4(1017036298, 365543100), _0x3394b4(1126000580, 2618297676), _0x3394b4(1288033470, 3409855158), _0x3394b4(1501505948, 4234509866), _0x3394b4(1607167915, 987167468), _0x3394b4(1816402316, 1246189591)];
            var _0x514ed9 = [];
            (function () {
              for (var _0xd834b7 = 0; _0xd834b7 < 80; _0xd834b7++) {
                _0x514ed9[_0xd834b7] = _0x3394b4();
              }
            })();
            var _0xbbb2d1 = _0x547f5d.SHA512 = _0x355e4d.extend({
              _doReset: function () {
                this._hash = new _0xd3bb55.init([new _0xd356a1.init(1779033703, 4089235720), new _0xd356a1.init(3144134277, 2227873595), new _0xd356a1.init(1013904242, 4271175723), new _0xd356a1.init(2773480762, 1595750129), new _0xd356a1.init(1359893119, 2917565137), new _0xd356a1.init(2600822924, 725511199), new _0xd356a1.init(528734635, 4215389547), new _0xd356a1.init(1541459225, 327033209)]);
              },
              _doProcessBlock: function (_0x1cede7, _0x55d452) {
                var _0x415c01 = this._hash.words;
                var _0x3b00ce = _0x415c01[0];
                var _0x252a76 = _0x415c01[1];
                var _0x247ec2 = _0x415c01[2];
                var _0x348723 = _0x415c01[3];
                var _0x4e2475 = _0x415c01[4];
                var _0x17f936 = _0x415c01[5];
                var _0xd9d0a6 = _0x415c01[6];
                var _0x49809f = _0x415c01[7];
                var _0x563a97 = _0x3b00ce.high;
                var _0x386957 = _0x3b00ce.low;
                var _0x373258 = _0x252a76.high;
                var _0xab3c30 = _0x252a76.low;
                var _0x35978b = _0x247ec2.high;
                var _0x2eeee5 = _0x247ec2.low;
                var _0x2540dc = _0x348723.high;
                var _0x173439 = _0x348723.low;
                var _0x45f2fc = _0x4e2475.high;
                var _0x15d315 = _0x4e2475.low;
                var _0x5b0a7e = _0x17f936.high;
                var _0x1310e4 = _0x17f936.low;
                var _0x2e0ab4 = _0xd9d0a6.high;
                var _0x14204a = _0xd9d0a6.low;
                var _0x16ea02 = _0x49809f.high;
                var _0x4b161e = _0x49809f.low;
                var _0x513c3d = _0x563a97;
                var _0x392b24 = _0x386957;
                var _0x4953fd = _0x373258;
                var _0x4cac5c = _0xab3c30;
                var _0x18d479 = _0x35978b;
                var _0xbf965b = _0x2eeee5;
                var _0x1b5c3e = _0x2540dc;
                var _0x5c807c = _0x173439;
                var _0x2e56e3 = _0x45f2fc;
                var _0x545a9e = _0x15d315;
                var _0x439292 = _0x5b0a7e;
                var _0x57f015 = _0x1310e4;
                var _0x37b008 = _0x2e0ab4;
                var _0x473ec1 = _0x14204a;
                var _0x3acd9e = _0x16ea02;
                var _0x238362 = _0x4b161e;
                for (var _0x20bf9c = 0; _0x20bf9c < 80; _0x20bf9c++) {
                  var _0x1b6e05 = _0x514ed9[_0x20bf9c];
                  if (_0x20bf9c < 16) {
                    var _0x2bf1c8 = _0x1b6e05.high = _0x1cede7[_0x55d452 + _0x20bf9c * 2] | 0;
                    var _0x3463b7 = _0x1b6e05.low = _0x1cede7[_0x55d452 + _0x20bf9c * 2 + 1] | 0;
                  } else {
                    var _0x352ece = _0x514ed9[_0x20bf9c - 15];
                    var _0x26c8c4 = _0x352ece.high;
                    var _0x5cb48b = _0x352ece.low;
                    var _0x107340 = (_0x26c8c4 >>> 1 | _0x5cb48b << 31) ^ (_0x26c8c4 >>> 8 | _0x5cb48b << 24) ^ _0x26c8c4 >>> 7;
                    var _0x595b19 = (_0x5cb48b >>> 1 | _0x26c8c4 << 31) ^ (_0x5cb48b >>> 8 | _0x26c8c4 << 24) ^ (_0x5cb48b >>> 7 | _0x26c8c4 << 25);
                    var _0x155cc4 = _0x514ed9[_0x20bf9c - 2];
                    var _0x422fa2 = _0x155cc4.high;
                    var _0x5854e1 = _0x155cc4.low;
                    var _0x43b605 = (_0x422fa2 >>> 19 | _0x5854e1 << 13) ^ (_0x422fa2 << 3 | _0x5854e1 >>> 29) ^ _0x422fa2 >>> 6;
                    var _0x10a2a5 = (_0x5854e1 >>> 19 | _0x422fa2 << 13) ^ (_0x5854e1 << 3 | _0x422fa2 >>> 29) ^ (_0x5854e1 >>> 6 | _0x422fa2 << 26);
                    var _0x41e0fd = _0x514ed9[_0x20bf9c - 7];
                    var _0x175f6e = _0x41e0fd.high;
                    var _0x2ab8bb = _0x41e0fd.low;
                    var _0x3f0a4e = _0x514ed9[_0x20bf9c - 16];
                    var _0x34e75b = _0x3f0a4e.high;
                    var _0x4f221e = _0x3f0a4e.low;
                    var _0x3463b7 = _0x595b19 + _0x2ab8bb;
                    var _0x2bf1c8 = _0x107340 + _0x175f6e + (_0x3463b7 >>> 0 < _0x595b19 >>> 0 ? 1 : 0);
                    var _0x3463b7 = _0x3463b7 + _0x10a2a5;
                    var _0x2bf1c8 = _0x2bf1c8 + _0x43b605 + (_0x3463b7 >>> 0 < _0x10a2a5 >>> 0 ? 1 : 0);
                    var _0x3463b7 = _0x3463b7 + _0x4f221e;
                    var _0x2bf1c8 = _0x2bf1c8 + _0x34e75b + (_0x3463b7 >>> 0 < _0x4f221e >>> 0 ? 1 : 0);
                    _0x1b6e05.high = _0x2bf1c8;
                    _0x1b6e05.low = _0x3463b7;
                  }
                  var _0x35ad86 = _0x2e56e3 & _0x439292 ^ ~_0x2e56e3 & _0x37b008;
                  var _0x275e63 = _0x545a9e & _0x57f015 ^ ~_0x545a9e & _0x473ec1;
                  var _0xc15488 = _0x513c3d & _0x4953fd ^ _0x513c3d & _0x18d479 ^ _0x4953fd & _0x18d479;
                  var _0x1e03e1 = _0x392b24 & _0x4cac5c ^ _0x392b24 & _0xbf965b ^ _0x4cac5c & _0xbf965b;
                  var _0x488e99 = (_0x513c3d >>> 28 | _0x392b24 << 4) ^ (_0x513c3d << 30 | _0x392b24 >>> 2) ^ (_0x513c3d << 25 | _0x392b24 >>> 7);
                  var _0x498f28 = (_0x392b24 >>> 28 | _0x513c3d << 4) ^ (_0x392b24 << 30 | _0x513c3d >>> 2) ^ (_0x392b24 << 25 | _0x513c3d >>> 7);
                  var _0x1b289f = (_0x2e56e3 >>> 14 | _0x545a9e << 18) ^ (_0x2e56e3 >>> 18 | _0x545a9e << 14) ^ (_0x2e56e3 << 23 | _0x545a9e >>> 9);
                  var _0x1bc9f2 = (_0x545a9e >>> 14 | _0x2e56e3 << 18) ^ (_0x545a9e >>> 18 | _0x2e56e3 << 14) ^ (_0x545a9e << 23 | _0x2e56e3 >>> 9);
                  var _0x10c541 = _0x1f4ce9[_0x20bf9c];
                  var _0x3643af = _0x10c541.high;
                  var _0x3a469a = _0x10c541.low;
                  var _0x346dc3 = _0x238362 + _0x1bc9f2;
                  var _0x120c28 = _0x3acd9e + _0x1b289f + (_0x346dc3 >>> 0 < _0x238362 >>> 0 ? 1 : 0);
                  var _0x346dc3 = _0x346dc3 + _0x275e63;
                  var _0x120c28 = _0x120c28 + _0x35ad86 + (_0x346dc3 >>> 0 < _0x275e63 >>> 0 ? 1 : 0);
                  var _0x346dc3 = _0x346dc3 + _0x3a469a;
                  var _0x120c28 = _0x120c28 + _0x3643af + (_0x346dc3 >>> 0 < _0x3a469a >>> 0 ? 1 : 0);
                  var _0x346dc3 = _0x346dc3 + _0x3463b7;
                  var _0x120c28 = _0x120c28 + _0x2bf1c8 + (_0x346dc3 >>> 0 < _0x3463b7 >>> 0 ? 1 : 0);
                  var _0x3a5130 = _0x498f28 + _0x1e03e1;
                  var _0xbd34b9 = _0x488e99 + _0xc15488 + (_0x3a5130 >>> 0 < _0x498f28 >>> 0 ? 1 : 0);
                  _0x3acd9e = _0x37b008;
                  _0x238362 = _0x473ec1;
                  _0x37b008 = _0x439292;
                  _0x473ec1 = _0x57f015;
                  _0x439292 = _0x2e56e3;
                  _0x57f015 = _0x545a9e;
                  _0x545a9e = _0x5c807c + _0x346dc3 | 0;
                  _0x2e56e3 = _0x1b5c3e + _0x120c28 + (_0x545a9e >>> 0 < _0x5c807c >>> 0 ? 1 : 0) | 0;
                  _0x1b5c3e = _0x18d479;
                  _0x5c807c = _0xbf965b;
                  _0x18d479 = _0x4953fd;
                  _0xbf965b = _0x4cac5c;
                  _0x4953fd = _0x513c3d;
                  _0x4cac5c = _0x392b24;
                  _0x392b24 = _0x346dc3 + _0x3a5130 | 0;
                  _0x513c3d = _0x120c28 + _0xbd34b9 + (_0x392b24 >>> 0 < _0x346dc3 >>> 0 ? 1 : 0) | 0;
                }
                _0x386957 = _0x3b00ce.low = _0x386957 + _0x392b24;
                _0x3b00ce.high = _0x563a97 + _0x513c3d + (_0x386957 >>> 0 < _0x392b24 >>> 0 ? 1 : 0);
                _0xab3c30 = _0x252a76.low = _0xab3c30 + _0x4cac5c;
                _0x252a76.high = _0x373258 + _0x4953fd + (_0xab3c30 >>> 0 < _0x4cac5c >>> 0 ? 1 : 0);
                _0x2eeee5 = _0x247ec2.low = _0x2eeee5 + _0xbf965b;
                _0x247ec2.high = _0x35978b + _0x18d479 + (_0x2eeee5 >>> 0 < _0xbf965b >>> 0 ? 1 : 0);
                _0x173439 = _0x348723.low = _0x173439 + _0x5c807c;
                _0x348723.high = _0x2540dc + _0x1b5c3e + (_0x173439 >>> 0 < _0x5c807c >>> 0 ? 1 : 0);
                _0x15d315 = _0x4e2475.low = _0x15d315 + _0x545a9e;
                _0x4e2475.high = _0x45f2fc + _0x2e56e3 + (_0x15d315 >>> 0 < _0x545a9e >>> 0 ? 1 : 0);
                _0x1310e4 = _0x17f936.low = _0x1310e4 + _0x57f015;
                _0x17f936.high = _0x5b0a7e + _0x439292 + (_0x1310e4 >>> 0 < _0x57f015 >>> 0 ? 1 : 0);
                _0x14204a = _0xd9d0a6.low = _0x14204a + _0x473ec1;
                _0xd9d0a6.high = _0x2e0ab4 + _0x37b008 + (_0x14204a >>> 0 < _0x473ec1 >>> 0 ? 1 : 0);
                _0x4b161e = _0x49809f.low = _0x4b161e + _0x238362;
                _0x49809f.high = _0x16ea02 + _0x3acd9e + (_0x4b161e >>> 0 < _0x238362 >>> 0 ? 1 : 0);
              },
              _doFinalize: function () {
                var _0x39aaf4 = this._data;
                var _0x1a84e5 = _0x39aaf4.words;
                var _0x2b3a53 = this._nDataBytes * 8;
                var _0x37f42f = _0x39aaf4.sigBytes * 8;
                _0x1a84e5[_0x37f42f >>> 5] |= 128 << 24 - _0x37f42f % 32;
                _0x1a84e5[(_0x37f42f + 128 >>> 10 << 5) + 30] = Math.floor(_0x2b3a53 / 4294967296);
                _0x1a84e5[(_0x37f42f + 128 >>> 10 << 5) + 31] = _0x2b3a53;
                _0x39aaf4.sigBytes = _0x1a84e5.length * 4;
                this._process();
                var _0x276892 = this._hash.toX32();
                return _0x276892;
              },
              clone: function () {
                var _0x1d8195 = _0x355e4d.clone.call(this);
                _0x1d8195._hash = this._hash.clone();
                return _0x1d8195;
              },
              blockSize: 32
            });
            _0x3593c5.SHA512 = _0x355e4d._createHelper(_0xbbb2d1);
            _0x3593c5.HmacSHA512 = _0x355e4d._createHmacHelper(_0xbbb2d1);
          })();
          return _0x448b47.SHA512;
        });
      }
    });
    var _0xdf9168 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha384.js"(_0x23f3e6, _0xe008db) {
        'use strict';

        (function (_0x424420, _0x3c3b80, _0x5c00f0) {
          if (typeof _0x23f3e6 === "object") {
            _0xe008db.exports = _0x23f3e6 = _0x3c3b80(_0x2354f1(), _0xf0aea5(), _0x4f23e1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core", "./sha512"], _0x3c3b80);
          } else {
            _0x3c3b80(_0x424420.CryptoJS);
          }
        })(_0x23f3e6, function (_0x3da9ef) {
          (function () {
            var _0x26176e = _0x3da9ef;
            var _0x12b5e1 = _0x26176e.x64;
            var _0x17b18a = _0x12b5e1.Word;
            var _0x5e92f4 = _0x12b5e1.WordArray;
            var _0x58fee1 = _0x26176e.algo;
            var _0x5bf258 = _0x58fee1.SHA512;
            var _0x593663 = _0x58fee1.SHA384 = _0x5bf258.extend({
              _doReset: function () {
                this._hash = new _0x5e92f4.init([new _0x17b18a.init(3418070365, 3238371032), new _0x17b18a.init(1654270250, 914150663), new _0x17b18a.init(2438529370, 812702999), new _0x17b18a.init(355462360, 4144912697), new _0x17b18a.init(1731405415, 4290775857), new _0x17b18a.init(2394180231, 1750603025), new _0x17b18a.init(3675008525, 1694076839), new _0x17b18a.init(1203062813, 3204075428)]);
              },
              _doFinalize: function () {
                var _0x25f2d3 = _0x5bf258._doFinalize.call(this);
                _0x25f2d3.sigBytes -= 16;
                return _0x25f2d3;
              }
            });
            _0x26176e.SHA384 = _0x5bf258._createHelper(_0x593663);
            _0x26176e.HmacSHA384 = _0x5bf258._createHmacHelper(_0x593663);
          })();
          return _0x3da9ef.SHA384;
        });
      }
    });
    var _0x7e1b25 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha3.js"(_0x3eafde, _0x48cf21) {
        'use strict';

        (function (_0x1814d8, _0x188312, _0x1ba9c0) {
          if (typeof _0x3eafde === "object") {
            _0x48cf21.exports = _0x3eafde = _0x188312(_0x2354f1(), _0xf0aea5());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core"], _0x188312);
          } else {
            _0x188312(_0x1814d8.CryptoJS);
          }
        })(_0x3eafde, function (_0x3ccd20) {
          (function (_0xfe5b78) {
            var _0x3b25f2 = _0x3ccd20;
            var _0x4721c1 = _0x3b25f2.lib;
            var _0x16b1fa = _0x4721c1.WordArray;
            var _0x3eaa6f = _0x4721c1.Hasher;
            var _0x2683f1 = _0x3b25f2.x64;
            var _0xaa50a6 = _0x2683f1.Word;
            var _0x38510b = _0x3b25f2.algo;
            var _0x423763 = [];
            var _0x5300eb = [];
            var _0x5b4058 = [];
            (function () {
              var _0x43681c = 1;
              var _0x3d24b4 = 0;
              for (var _0xec7746 = 0; _0xec7746 < 24; _0xec7746++) {
                _0x423763[_0x43681c + _0x3d24b4 * 5] = (_0xec7746 + 1) * (_0xec7746 + 2) / 2 % 64;
                var _0x54b192 = _0x3d24b4 % 5;
                var _0x5a4a31 = (_0x43681c * 2 + _0x3d24b4 * 3) % 5;
                _0x43681c = _0x54b192;
                _0x3d24b4 = _0x5a4a31;
              }
              for (var _0x43681c = 0; _0x43681c < 5; _0x43681c++) {
                for (var _0x3d24b4 = 0; _0x3d24b4 < 5; _0x3d24b4++) {
                  _0x5300eb[_0x43681c + _0x3d24b4 * 5] = _0x3d24b4 + (_0x43681c * 2 + _0x3d24b4 * 3) % 5 * 5;
                }
              }
              var _0x504c13 = 1;
              for (var _0x4e709c = 0; _0x4e709c < 24; _0x4e709c++) {
                var _0x55fa78 = 0;
                var _0x3652df = 0;
                for (var _0x432c56 = 0; _0x432c56 < 7; _0x432c56++) {
                  if (_0x504c13 & 1) {
                    var _0x5ae9f0 = (1 << _0x432c56) - 1;
                    if (_0x5ae9f0 < 32) {
                      _0x3652df ^= 1 << _0x5ae9f0;
                    } else {
                      _0x55fa78 ^= 1 << _0x5ae9f0 - 32;
                    }
                  }
                  if (_0x504c13 & 128) {
                    _0x504c13 = _0x504c13 << 1 ^ 113;
                  } else {
                    _0x504c13 <<= 1;
                  }
                }
                _0x5b4058[_0x4e709c] = _0xaa50a6.create(_0x55fa78, _0x3652df);
              }
            })();
            var _0x3c8cb3 = [];
            (function () {
              for (var _0x114ae8 = 0; _0x114ae8 < 25; _0x114ae8++) {
                _0x3c8cb3[_0x114ae8] = _0xaa50a6.create();
              }
            })();
            var _0xd6e331 = _0x38510b.SHA3 = _0x3eaa6f.extend({
              cfg: _0x3eaa6f.cfg.extend({
                outputLength: 512
              }),
              _doReset: function () {
                var _0x4c5a27 = this._state = [];
                for (var _0x573d8c = 0; _0x573d8c < 25; _0x573d8c++) {
                  _0x4c5a27[_0x573d8c] = new _0xaa50a6.init();
                }
                this.blockSize = (1600 - this.cfg.outputLength * 2) / 32;
              },
              _doProcessBlock: function (_0x428afa, _0xf17cc9) {
                var _0x20673e = this._state;
                var _0x266342 = this.blockSize / 2;
                for (var _0x4a45a2 = 0; _0x4a45a2 < _0x266342; _0x4a45a2++) {
                  var _0x221149 = _0x428afa[_0xf17cc9 + _0x4a45a2 * 2];
                  var _0x32fc88 = _0x428afa[_0xf17cc9 + _0x4a45a2 * 2 + 1];
                  _0x221149 = (_0x221149 << 8 | _0x221149 >>> 24) & 16711935 | (_0x221149 << 24 | _0x221149 >>> 8) & 4278255360;
                  _0x32fc88 = (_0x32fc88 << 8 | _0x32fc88 >>> 24) & 16711935 | (_0x32fc88 << 24 | _0x32fc88 >>> 8) & 4278255360;
                  var _0x530e20 = _0x20673e[_0x4a45a2];
                  _0x530e20.high ^= _0x32fc88;
                  _0x530e20.low ^= _0x221149;
                }
                for (var _0x4f5f38 = 0; _0x4f5f38 < 24; _0x4f5f38++) {
                  for (var _0x238cd7 = 0; _0x238cd7 < 5; _0x238cd7++) {
                    var _0x199687 = 0;
                    var _0x260662 = 0;
                    for (var _0x58249e = 0; _0x58249e < 5; _0x58249e++) {
                      var _0x530e20 = _0x20673e[_0x238cd7 + _0x58249e * 5];
                      _0x199687 ^= _0x530e20.high;
                      _0x260662 ^= _0x530e20.low;
                    }
                    var _0x30a009 = _0x3c8cb3[_0x238cd7];
                    _0x30a009.high = _0x199687;
                    _0x30a009.low = _0x260662;
                  }
                  for (var _0x238cd7 = 0; _0x238cd7 < 5; _0x238cd7++) {
                    var _0x235a4f = _0x3c8cb3[(_0x238cd7 + 4) % 5];
                    var _0x1056cc = _0x3c8cb3[(_0x238cd7 + 1) % 5];
                    var _0x1d9845 = _0x1056cc.high;
                    var _0x3342d0 = _0x1056cc.low;
                    var _0x199687 = _0x235a4f.high ^ (_0x1d9845 << 1 | _0x3342d0 >>> 31);
                    var _0x260662 = _0x235a4f.low ^ (_0x3342d0 << 1 | _0x1d9845 >>> 31);
                    for (var _0x58249e = 0; _0x58249e < 5; _0x58249e++) {
                      var _0x530e20 = _0x20673e[_0x238cd7 + _0x58249e * 5];
                      _0x530e20.high ^= _0x199687;
                      _0x530e20.low ^= _0x260662;
                    }
                  }
                  for (var _0x171e84 = 1; _0x171e84 < 25; _0x171e84++) {
                    var _0x530e20 = _0x20673e[_0x171e84];
                    var _0x3d191d = _0x530e20.high;
                    var _0x5be073 = _0x530e20.low;
                    var _0x6d6d3d = _0x423763[_0x171e84];
                    if (_0x6d6d3d < 32) {
                      var _0x199687 = _0x3d191d << _0x6d6d3d | _0x5be073 >>> 32 - _0x6d6d3d;
                      var _0x260662 = _0x5be073 << _0x6d6d3d | _0x3d191d >>> 32 - _0x6d6d3d;
                    } else {
                      var _0x199687 = _0x5be073 << _0x6d6d3d - 32 | _0x3d191d >>> 64 - _0x6d6d3d;
                      var _0x260662 = _0x3d191d << _0x6d6d3d - 32 | _0x5be073 >>> 64 - _0x6d6d3d;
                    }
                    var _0x40784f = _0x3c8cb3[_0x5300eb[_0x171e84]];
                    _0x40784f.high = _0x199687;
                    _0x40784f.low = _0x260662;
                  }
                  var _0x3f1fd6 = _0x3c8cb3[0];
                  var _0x5202b8 = _0x20673e[0];
                  _0x3f1fd6.high = _0x5202b8.high;
                  _0x3f1fd6.low = _0x5202b8.low;
                  for (var _0x238cd7 = 0; _0x238cd7 < 5; _0x238cd7++) {
                    for (var _0x58249e = 0; _0x58249e < 5; _0x58249e++) {
                      var _0x171e84 = _0x238cd7 + _0x58249e * 5;
                      var _0x530e20 = _0x20673e[_0x171e84];
                      var _0x14574e = _0x3c8cb3[_0x171e84];
                      var _0x4227df = _0x3c8cb3[(_0x238cd7 + 1) % 5 + _0x58249e * 5];
                      var _0x45eae7 = _0x3c8cb3[(_0x238cd7 + 2) % 5 + _0x58249e * 5];
                      _0x530e20.high = _0x14574e.high ^ ~_0x4227df.high & _0x45eae7.high;
                      _0x530e20.low = _0x14574e.low ^ ~_0x4227df.low & _0x45eae7.low;
                    }
                  }
                  var _0x530e20 = _0x20673e[0];
                  var _0x13cbe4 = _0x5b4058[_0x4f5f38];
                  _0x530e20.high ^= _0x13cbe4.high;
                  _0x530e20.low ^= _0x13cbe4.low;
                  ;
                }
              },
              _doFinalize: function () {
                var _0x2cf41d = this._data;
                var _0x262018 = _0x2cf41d.words;
                var _0x4b16fe = this._nDataBytes * 8;
                var _0x382bc0 = _0x2cf41d.sigBytes * 8;
                var _0x388ae5 = this.blockSize * 32;
                _0x262018[_0x382bc0 >>> 5] |= 1 << 24 - _0x382bc0 % 32;
                _0x262018[(_0xfe5b78.ceil((_0x382bc0 + 1) / _0x388ae5) * _0x388ae5 >>> 5) - 1] |= 128;
                _0x2cf41d.sigBytes = _0x262018.length * 4;
                this._process();
                var _0x205ed5 = this._state;
                var _0x46a3cf = this.cfg.outputLength / 8;
                var _0x341d92 = _0x46a3cf / 8;
                var _0x557388 = [];
                for (var _0x77275a = 0; _0x77275a < _0x341d92; _0x77275a++) {
                  var _0x368f9e = _0x205ed5[_0x77275a];
                  var _0x426e64 = _0x368f9e.high;
                  var _0x5b9498 = _0x368f9e.low;
                  _0x426e64 = (_0x426e64 << 8 | _0x426e64 >>> 24) & 16711935 | (_0x426e64 << 24 | _0x426e64 >>> 8) & 4278255360;
                  _0x5b9498 = (_0x5b9498 << 8 | _0x5b9498 >>> 24) & 16711935 | (_0x5b9498 << 24 | _0x5b9498 >>> 8) & 4278255360;
                  _0x557388.push(_0x5b9498);
                  _0x557388.push(_0x426e64);
                }
                return new _0x16b1fa.init(_0x557388, _0x46a3cf);
              },
              clone: function () {
                var _0xa0816e = _0x3eaa6f.clone.call(this);
                var _0x346b1e = _0xa0816e._state = this._state.slice(0);
                for (var _0x203fef = 0; _0x203fef < 25; _0x203fef++) {
                  _0x346b1e[_0x203fef] = _0x346b1e[_0x203fef].clone();
                }
                return _0xa0816e;
              }
            });
            _0x3b25f2.SHA3 = _0x3eaa6f._createHelper(_0xd6e331);
            _0x3b25f2.HmacSHA3 = _0x3eaa6f._createHmacHelper(_0xd6e331);
          })(Math);
          return _0x3ccd20.SHA3;
        });
      }
    });
    var _0x44c5ec = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/ripemd160.js"(_0x826b91, _0x3f56c9) {
        'use strict';

        (function (_0x47ebca, _0x2b7be5) {
          if (typeof _0x826b91 === "object") {
            _0x3f56c9.exports = _0x826b91 = _0x2b7be5(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x2b7be5);
          } else {
            _0x2b7be5(_0x47ebca.CryptoJS);
          }
        })(_0x826b91, function (_0x2e96f9) {
          (function (_0xe43a87) {
            var _0xf36119 = _0x2e96f9;
            var _0x392173 = _0xf36119.lib;
            var _0x1f9a39 = _0x392173.WordArray;
            var _0x2bcb51 = _0x392173.Hasher;
            var _0x44a799 = _0xf36119.algo;
            var _0x2a319e = _0x1f9a39.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
            var _0x4e5766 = _0x1f9a39.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
            var _0xa8cbfc = _0x1f9a39.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
            var _0x1dcc55 = _0x1f9a39.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);
            var _0x336a5e = _0x1f9a39.create([0, 1518500249, 1859775393, 2400959708, 2840853838]);
            var _0x3ac142 = _0x1f9a39.create([1352829926, 1548603684, 1836072691, 2053994217, 0]);
            var _0x4d4478 = _0x44a799.RIPEMD160 = _0x2bcb51.extend({
              _doReset: function () {
                this._hash = _0x1f9a39.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
              },
              _doProcessBlock: function (_0x2943fc, _0x676faa) {
                for (var _0x42d3ca = 0; _0x42d3ca < 16; _0x42d3ca++) {
                  var _0x18fa7a = _0x676faa + _0x42d3ca;
                  var _0x10b701 = _0x2943fc[_0x18fa7a];
                  _0x2943fc[_0x18fa7a] = (_0x10b701 << 8 | _0x10b701 >>> 24) & 16711935 | (_0x10b701 << 24 | _0x10b701 >>> 8) & 4278255360;
                }
                var _0x338cb3 = this._hash.words;
                var _0x404782 = _0x336a5e.words;
                var _0x1b392c = _0x3ac142.words;
                var _0x12bf8d = _0x2a319e.words;
                var _0x161521 = _0x4e5766.words;
                var _0x1c9c34 = _0xa8cbfc.words;
                var _0x3cac56 = _0x1dcc55.words;
                var _0x4d2ae8;
                var _0x1e4392;
                var _0x25134f;
                var _0x56e4b0;
                var _0x2b4488;
                var _0x3cd0bf;
                var _0x42ddac;
                var _0x42fa31;
                var _0x19dadd;
                var _0x547da2;
                _0x3cd0bf = _0x4d2ae8 = _0x338cb3[0];
                _0x42ddac = _0x1e4392 = _0x338cb3[1];
                _0x42fa31 = _0x25134f = _0x338cb3[2];
                _0x19dadd = _0x56e4b0 = _0x338cb3[3];
                _0x547da2 = _0x2b4488 = _0x338cb3[4];
                var _0x185199;
                for (var _0x42d3ca = 0; _0x42d3ca < 80; _0x42d3ca += 1) {
                  _0x185199 = _0x4d2ae8 + _0x2943fc[_0x676faa + _0x12bf8d[_0x42d3ca]] | 0;
                  if (_0x42d3ca < 16) {
                    _0x185199 += _0x2a07ce(_0x1e4392, _0x25134f, _0x56e4b0) + _0x404782[0];
                  } else if (_0x42d3ca < 32) {
                    _0x185199 += _0x5080b4(_0x1e4392, _0x25134f, _0x56e4b0) + _0x404782[1];
                  } else if (_0x42d3ca < 48) {
                    _0x185199 += _0x383057(_0x1e4392, _0x25134f, _0x56e4b0) + _0x404782[2];
                  } else if (_0x42d3ca < 64) {
                    _0x185199 += _0x1d1e8e(_0x1e4392, _0x25134f, _0x56e4b0) + _0x404782[3];
                  } else {
                    _0x185199 += _0x24493e(_0x1e4392, _0x25134f, _0x56e4b0) + _0x404782[4];
                  }
                  _0x185199 = _0x185199 | 0;
                  _0x185199 = _0x372758(_0x185199, _0x1c9c34[_0x42d3ca]);
                  _0x185199 = _0x185199 + _0x2b4488 | 0;
                  _0x4d2ae8 = _0x2b4488;
                  _0x2b4488 = _0x56e4b0;
                  _0x56e4b0 = _0x372758(_0x25134f, 10);
                  _0x25134f = _0x1e4392;
                  _0x1e4392 = _0x185199;
                  _0x185199 = _0x3cd0bf + _0x2943fc[_0x676faa + _0x161521[_0x42d3ca]] | 0;
                  if (_0x42d3ca < 16) {
                    _0x185199 += _0x24493e(_0x42ddac, _0x42fa31, _0x19dadd) + _0x1b392c[0];
                  } else if (_0x42d3ca < 32) {
                    _0x185199 += _0x1d1e8e(_0x42ddac, _0x42fa31, _0x19dadd) + _0x1b392c[1];
                  } else if (_0x42d3ca < 48) {
                    _0x185199 += _0x383057(_0x42ddac, _0x42fa31, _0x19dadd) + _0x1b392c[2];
                  } else if (_0x42d3ca < 64) {
                    _0x185199 += _0x5080b4(_0x42ddac, _0x42fa31, _0x19dadd) + _0x1b392c[3];
                  } else {
                    _0x185199 += _0x2a07ce(_0x42ddac, _0x42fa31, _0x19dadd) + _0x1b392c[4];
                  }
                  _0x185199 = _0x185199 | 0;
                  _0x185199 = _0x372758(_0x185199, _0x3cac56[_0x42d3ca]);
                  _0x185199 = _0x185199 + _0x547da2 | 0;
                  _0x3cd0bf = _0x547da2;
                  _0x547da2 = _0x19dadd;
                  _0x19dadd = _0x372758(_0x42fa31, 10);
                  _0x42fa31 = _0x42ddac;
                  _0x42ddac = _0x185199;
                }
                _0x185199 = _0x338cb3[1] + _0x25134f + _0x19dadd | 0;
                _0x338cb3[1] = _0x338cb3[2] + _0x56e4b0 + _0x547da2 | 0;
                _0x338cb3[2] = _0x338cb3[3] + _0x2b4488 + _0x3cd0bf | 0;
                _0x338cb3[3] = _0x338cb3[4] + _0x4d2ae8 + _0x42ddac | 0;
                _0x338cb3[4] = _0x338cb3[0] + _0x1e4392 + _0x42fa31 | 0;
                _0x338cb3[0] = _0x185199;
              },
              _doFinalize: function () {
                var _0x3f2cc4 = this._data;
                var _0x14102f = _0x3f2cc4.words;
                var _0x10f50f = this._nDataBytes * 8;
                var _0x442b2d = _0x3f2cc4.sigBytes * 8;
                _0x14102f[_0x442b2d >>> 5] |= 128 << 24 - _0x442b2d % 32;
                _0x14102f[(_0x442b2d + 64 >>> 9 << 4) + 14] = (_0x10f50f << 8 | _0x10f50f >>> 24) & 16711935 | (_0x10f50f << 24 | _0x10f50f >>> 8) & 4278255360;
                _0x3f2cc4.sigBytes = (_0x14102f.length + 1) * 4;
                this._process();
                var _0x2502b9 = this._hash;
                var _0x76060 = _0x2502b9.words;
                for (var _0x694f8 = 0; _0x694f8 < 5; _0x694f8++) {
                  var _0x567fd0 = _0x76060[_0x694f8];
                  _0x76060[_0x694f8] = (_0x567fd0 << 8 | _0x567fd0 >>> 24) & 16711935 | (_0x567fd0 << 24 | _0x567fd0 >>> 8) & 4278255360;
                }
                return _0x2502b9;
              },
              clone: function () {
                var _0x6a6946 = _0x2bcb51.clone.call(this);
                _0x6a6946._hash = this._hash.clone();
                return _0x6a6946;
              }
            });
            function _0x2a07ce(_0x40c60b, _0x2137dd, _0x24d86f) {
              return _0x40c60b ^ _0x2137dd ^ _0x24d86f;
            }
            function _0x5080b4(_0x3c9b87, _0x527a0d, _0x538a58) {
              return _0x3c9b87 & _0x527a0d | ~_0x3c9b87 & _0x538a58;
            }
            function _0x383057(_0x4be37e, _0x456c8b, _0x377d4e) {
              return (_0x4be37e | ~_0x456c8b) ^ _0x377d4e;
            }
            function _0x1d1e8e(_0x427e4b, _0x5f0958, _0x3fcc06) {
              return _0x427e4b & _0x3fcc06 | _0x5f0958 & ~_0x3fcc06;
            }
            function _0x24493e(_0x2beab5, _0x2f1cfa, _0x5e176d) {
              return _0x2beab5 ^ (_0x2f1cfa | ~_0x5e176d);
            }
            function _0x372758(_0x562322, _0x33da1f) {
              return _0x562322 << _0x33da1f | _0x562322 >>> 32 - _0x33da1f;
            }
            _0xf36119.RIPEMD160 = _0x2bcb51._createHelper(_0x4d4478);
            _0xf36119.HmacRIPEMD160 = _0x2bcb51._createHmacHelper(_0x4d4478);
          })(Math);
          return _0x2e96f9.RIPEMD160;
        });
      }
    });
    var _0x289fab = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/hmac.js"(_0x4b20de, _0x598c95) {
        'use strict';

        (function (_0x5a5dee, _0x47a49f) {
          if (typeof _0x4b20de === "object") {
            _0x598c95.exports = _0x4b20de = _0x47a49f(_0x2354f1());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x47a49f);
          } else {
            _0x47a49f(_0x5a5dee.CryptoJS);
          }
        })(_0x4b20de, function (_0x4462b5) {
          (function () {
            var _0x5badb2 = _0x4462b5;
            var _0x4a76fa = _0x5badb2.lib;
            var _0x112bf0 = _0x4a76fa.Base;
            var _0x227441 = _0x5badb2.enc;
            var _0x587285 = _0x227441.Utf8;
            var _0x5708c5 = _0x5badb2.algo;
            var _0x47c882 = _0x5708c5.HMAC = _0x112bf0.extend({
              init: function (_0x55eb92, _0x1fe0b8) {
                _0x55eb92 = this._hasher = new _0x55eb92.init();
                if (typeof _0x1fe0b8 == "string") {
                  _0x1fe0b8 = _0x587285.parse(_0x1fe0b8);
                }
                var _0x3baa04 = _0x55eb92.blockSize;
                var _0x287b15 = _0x3baa04 * 4;
                if (_0x1fe0b8.sigBytes > _0x287b15) {
                  _0x1fe0b8 = _0x55eb92.finalize(_0x1fe0b8);
                }
                _0x1fe0b8.clamp();
                var _0x224fd5 = this._oKey = _0x1fe0b8.clone();
                var _0x2deabc = this._iKey = _0x1fe0b8.clone();
                var _0x167e7d = _0x224fd5.words;
                var _0x383864 = _0x2deabc.words;
                for (var _0x221ee0 = 0; _0x221ee0 < _0x3baa04; _0x221ee0++) {
                  _0x167e7d[_0x221ee0] ^= 1549556828;
                  _0x383864[_0x221ee0] ^= 909522486;
                }
                _0x224fd5.sigBytes = _0x2deabc.sigBytes = _0x287b15;
                this.reset();
              },
              reset: function () {
                var _0x3e3859 = this._hasher;
                _0x3e3859.reset();
                _0x3e3859.update(this._iKey);
              },
              update: function (_0xbbbaeb) {
                this._hasher.update(_0xbbbaeb);
                return this;
              },
              finalize: function (_0x5d2d88) {
                var _0x58ae88 = this._hasher;
                var _0x10eabe = _0x58ae88.finalize(_0x5d2d88);
                _0x58ae88.reset();
                var _0x1b37b8 = _0x58ae88.finalize(this._oKey.clone().concat(_0x10eabe));
                return _0x1b37b8;
              }
            });
          })();
        });
      }
    });
    var _0x1d97b0 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pbkdf2.js"(_0x4c8298, _0x4c0722) {
        'use strict';

        (function (_0x2b25b7, _0x488914, _0x10ada5) {
          if (typeof _0x4c8298 === "object") {
            _0x4c0722.exports = _0x4c8298 = _0x488914(_0x2354f1(), _0x1ccb83(), _0x289fab());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./sha1", "./hmac"], _0x488914);
          } else {
            _0x488914(_0x2b25b7.CryptoJS);
          }
        })(_0x4c8298, function (_0x42ab0f) {
          (function () {
            var _0x40da38 = _0x42ab0f;
            var _0x5aa119 = _0x40da38.lib;
            var _0x315c27 = _0x5aa119.Base;
            var _0x2e7e0d = _0x5aa119.WordArray;
            var _0x72b683 = _0x40da38.algo;
            var _0x3cf591 = _0x72b683.SHA1;
            var _0x54d038 = _0x72b683.HMAC;
            var _0x207fd0 = {
              keySize: 4,
              hasher: _0x3cf591,
              iterations: 1
            };
            var _0xb9bd9a = _0x72b683.PBKDF2 = _0x315c27.extend({
              cfg: _0x315c27.extend(_0x207fd0),
              init: function (_0x52ea88) {
                this.cfg = this.cfg.extend(_0x52ea88);
              },
              compute: function (_0x133a24, _0x21bf0f) {
                var _0x4c3312 = this.cfg;
                var _0x336b9a = _0x54d038.create(_0x4c3312.hasher, _0x133a24);
                var _0x440a4 = _0x2e7e0d.create();
                var _0x59178e = _0x2e7e0d.create([1]);
                var _0x4ff051 = _0x440a4.words;
                var _0x23bf5f = _0x59178e.words;
                var _0x24889c = _0x4c3312.keySize;
                var _0x506701 = _0x4c3312.iterations;
                while (_0x4ff051.length < _0x24889c) {
                  var _0x583b05 = _0x336b9a.update(_0x21bf0f).finalize(_0x59178e);
                  _0x336b9a.reset();
                  var _0x371fa3 = _0x583b05.words;
                  var _0x3cc872 = _0x371fa3.length;
                  var _0x4dab40 = _0x583b05;
                  for (var _0x2a31d9 = 1; _0x2a31d9 < _0x506701; _0x2a31d9++) {
                    _0x4dab40 = _0x336b9a.finalize(_0x4dab40);
                    _0x336b9a.reset();
                    var _0x37d8ce = _0x4dab40.words;
                    for (var _0x41f431 = 0; _0x41f431 < _0x3cc872; _0x41f431++) {
                      _0x371fa3[_0x41f431] ^= _0x37d8ce[_0x41f431];
                    }
                  }
                  _0x440a4.concat(_0x583b05);
                  _0x23bf5f[0]++;
                }
                _0x440a4.sigBytes = _0x24889c * 4;
                return _0x440a4;
              }
            });
            _0x40da38.PBKDF2 = function (_0x6332e2, _0x271c69, _0x5d4fd2) {
              return _0xb9bd9a.create(_0x5d4fd2).compute(_0x6332e2, _0x271c69);
            };
          })();
          return _0x42ab0f.PBKDF2;
        });
      }
    });
    var _0x53b70f = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/evpkdf.js"(_0x4d68f9, _0xb354bf) {
        'use strict';

        (function (_0x230221, _0x2abf9a, _0x42ca48) {
          if (typeof _0x4d68f9 === "object") {
            _0xb354bf.exports = _0x4d68f9 = _0x2abf9a(_0x2354f1(), _0x1ccb83(), _0x289fab());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./sha1", "./hmac"], _0x2abf9a);
          } else {
            _0x2abf9a(_0x230221.CryptoJS);
          }
        })(_0x4d68f9, function (_0x8290d1) {
          (function () {
            var _0x164480 = _0x8290d1;
            var _0xc53e9f = _0x164480.lib;
            var _0x4564e3 = _0xc53e9f.Base;
            var _0x3d0ed5 = _0xc53e9f.WordArray;
            var _0x3839e9 = _0x164480.algo;
            var _0x79e020 = _0x3839e9.MD5;
            var _0xd13db2 = {
              keySize: 4,
              hasher: _0x79e020,
              iterations: 1
            };
            var _0x7854c1 = _0x3839e9.EvpKDF = _0x4564e3.extend({
              cfg: _0x4564e3.extend(_0xd13db2),
              init: function (_0x2a4434) {
                this.cfg = this.cfg.extend(_0x2a4434);
              },
              compute: function (_0x292524, _0x5caa07) {
                var _0x5b5ae0 = this.cfg;
                var _0x4cc9f9 = _0x5b5ae0.hasher.create();
                var _0x2edd2b = _0x3d0ed5.create();
                var _0x2d9988 = _0x2edd2b.words;
                var _0x37ab95 = _0x5b5ae0.keySize;
                var _0x50863a = _0x5b5ae0.iterations;
                while (_0x2d9988.length < _0x37ab95) {
                  if (_0x56a7d5) {
                    _0x4cc9f9.update(_0x56a7d5);
                  }
                  var _0x56a7d5 = _0x4cc9f9.update(_0x292524).finalize(_0x5caa07);
                  _0x4cc9f9.reset();
                  for (var _0x120444 = 1; _0x120444 < _0x50863a; _0x120444++) {
                    _0x56a7d5 = _0x4cc9f9.finalize(_0x56a7d5);
                    _0x4cc9f9.reset();
                  }
                  _0x2edd2b.concat(_0x56a7d5);
                }
                _0x2edd2b.sigBytes = _0x37ab95 * 4;
                return _0x2edd2b;
              }
            });
            _0x164480.EvpKDF = function (_0x31fbb4, _0xa12e97, _0x5c48c6) {
              return _0x7854c1.create(_0x5c48c6).compute(_0x31fbb4, _0xa12e97);
            };
          })();
          return _0x8290d1.EvpKDF;
        });
      }
    });
    var _0xa51537 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/cipher-core.js"(_0x21e10a, _0x1fc753) {
        'use strict';

        (function (_0x20cc53, _0x5ac7ca, _0x23504a) {
          if (typeof _0x21e10a === "object") {
            _0x1fc753.exports = _0x21e10a = _0x5ac7ca(_0x2354f1(), _0x53b70f());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./evpkdf"], _0x5ac7ca);
          } else {
            _0x5ac7ca(_0x20cc53.CryptoJS);
          }
        })(_0x21e10a, function (_0x438f77) {
          if (!_0x438f77.lib.Cipher) {
            (function (_0x1570cb) {
              var _0x35b51c = _0x438f77;
              var _0x9319f8 = _0x35b51c.lib;
              var _0x357957 = _0x9319f8.Base;
              var _0x34c9d2 = _0x9319f8.WordArray;
              var _0x1fc890 = _0x9319f8.BufferedBlockAlgorithm;
              var _0x3e0aa4 = _0x35b51c.enc;
              var _0x501bd2 = _0x3e0aa4.Utf8;
              var _0x827159 = _0x3e0aa4.Base64;
              var _0x1bfa69 = _0x35b51c.algo;
              var _0x5a914f = _0x1bfa69.EvpKDF;
              var _0x32c1eb = _0x9319f8.Cipher = _0x1fc890.extend({
                cfg: _0x357957.extend(),
                createEncryptor: function (_0x2087a2, _0xacfc1b) {
                  return this.create(this._ENC_XFORM_MODE, _0x2087a2, _0xacfc1b);
                },
                createDecryptor: function (_0x54ab8c, _0x2075f5) {
                  return this.create(this._DEC_XFORM_MODE, _0x54ab8c, _0x2075f5);
                },
                init: function (_0x332afa, _0x430fe1, _0x4e30a8) {
                  this.cfg = this.cfg.extend(_0x4e30a8);
                  this._xformMode = _0x332afa;
                  this._key = _0x430fe1;
                  this.reset();
                },
                reset: function () {
                  _0x1fc890.reset.call(this);
                  this._doReset();
                },
                process: function (_0x75d328) {
                  this._append(_0x75d328);
                  return this._process();
                },
                finalize: function (_0x1907da) {
                  if (_0x1907da) {
                    this._append(_0x1907da);
                  }
                  var _0x1c43d5 = this._doFinalize();
                  return _0x1c43d5;
                },
                keySize: 4,
                ivSize: 4,
                _ENC_XFORM_MODE: 1,
                _DEC_XFORM_MODE: 2,
                _createHelper: function () {
                  function _0x3086e6(_0x171271) {
                    if (typeof _0x171271 == "string") {
                      return _0x47e160;
                    } else {
                      return _0x35001d;
                    }
                  }
                  return function (_0x41cd3b) {
                    return {
                      encrypt: function (_0x40e143, _0x4890e4, _0x329087) {
                        return _0x3086e6(_0x4890e4).encrypt(_0x41cd3b, _0x40e143, _0x4890e4, _0x329087);
                      },
                      decrypt: function (_0x53e5e8, _0x2d8c6e, _0x6fcfd2) {
                        return _0x3086e6(_0x2d8c6e).decrypt(_0x41cd3b, _0x53e5e8, _0x2d8c6e, _0x6fcfd2);
                      }
                    };
                  };
                }()
              });
              var _0x466f8c = _0x9319f8.StreamCipher = _0x32c1eb.extend({
                _doFinalize: function () {
                  var _0x4a8c1b = this._process(true);
                  return _0x4a8c1b;
                },
                blockSize: 1
              });
              var _0x2f0326 = _0x35b51c.mode = {};
              var _0x49a8aa = _0x9319f8.BlockCipherMode = _0x357957.extend({
                createEncryptor: function (_0x404bf5, _0x3db9b) {
                  return this.Encryptor.create(_0x404bf5, _0x3db9b);
                },
                createDecryptor: function (_0x11e263, _0x248908) {
                  return this.Decryptor.create(_0x11e263, _0x248908);
                },
                init: function (_0x1b4eb9, _0x282faf) {
                  this._cipher = _0x1b4eb9;
                  this._iv = _0x282faf;
                }
              });
              var _0x1a05d1 = _0x2f0326.CBC = function () {
                var _0x320a9f = _0x49a8aa.extend();
                _0x320a9f.Encryptor = _0x320a9f.extend({
                  processBlock: function (_0x2ab0c9, _0x7d7017) {
                    var _0x17bc17 = this._cipher;
                    var _0x288f38 = _0x17bc17.blockSize;
                    _0x53c602.call(this, _0x2ab0c9, _0x7d7017, _0x288f38);
                    _0x17bc17.encryptBlock(_0x2ab0c9, _0x7d7017);
                    this._prevBlock = _0x2ab0c9.slice(_0x7d7017, _0x7d7017 + _0x288f38);
                  }
                });
                _0x320a9f.Decryptor = _0x320a9f.extend({
                  processBlock: function (_0x1e4f9c, _0x5857b1) {
                    var _0x1b15d1 = this._cipher;
                    var _0x3cf7e2 = _0x1b15d1.blockSize;
                    var _0x1ca798 = _0x1e4f9c.slice(_0x5857b1, _0x5857b1 + _0x3cf7e2);
                    _0x1b15d1.decryptBlock(_0x1e4f9c, _0x5857b1);
                    _0x53c602.call(this, _0x1e4f9c, _0x5857b1, _0x3cf7e2);
                    this._prevBlock = _0x1ca798;
                  }
                });
                function _0x53c602(_0x2cef8d, _0x3a13ab, _0x6e4b6b) {
                  var _0x28fe6b = this._iv;
                  if (_0x28fe6b) {
                    var _0xc0957a = _0x28fe6b;
                    this._iv = _0x1570cb;
                  } else {
                    var _0xc0957a = this._prevBlock;
                  }
                  for (var _0x2f22a1 = 0; _0x2f22a1 < _0x6e4b6b; _0x2f22a1++) {
                    _0x2cef8d[_0x3a13ab + _0x2f22a1] ^= _0xc0957a[_0x2f22a1];
                  }
                }
                return _0x320a9f;
              }();
              var _0xae5a09 = _0x35b51c.pad = {};
              var _0xe50466 = _0xae5a09.Pkcs7 = {
                pad: function (_0x4b8fc7, _0x166881) {
                  var _0x56ebad = _0x166881 * 4;
                  var _0x12c16a = _0x56ebad - _0x4b8fc7.sigBytes % _0x56ebad;
                  var _0x3ad3b1 = _0x12c16a << 24 | _0x12c16a << 16 | _0x12c16a << 8 | _0x12c16a;
                  var _0x2fbde5 = [];
                  for (var _0x5ef3ff = 0; _0x5ef3ff < _0x12c16a; _0x5ef3ff += 4) {
                    _0x2fbde5.push(_0x3ad3b1);
                  }
                  var _0x455040 = _0x34c9d2.create(_0x2fbde5, _0x12c16a);
                  _0x4b8fc7.concat(_0x455040);
                },
                unpad: function (_0x25e158) {
                  var _0x320bce = _0x25e158.words[_0x25e158.sigBytes - 1 >>> 2] & 255;
                  _0x25e158.sigBytes -= _0x320bce;
                }
              };
              var _0x2f7482 = {
                mode: _0x1a05d1,
                padding: _0xe50466
              };
              var _0x3dd79b = _0x9319f8.BlockCipher = _0x32c1eb.extend({
                cfg: _0x32c1eb.cfg.extend(_0x2f7482),
                reset: function () {
                  _0x32c1eb.reset.call(this);
                  var _0x47f74f = this.cfg;
                  var _0x27ceb7 = _0x47f74f.iv;
                  var _0x536e5 = _0x47f74f.mode;
                  if (this._xformMode == this._ENC_XFORM_MODE) {
                    var _0x7d544a = _0x536e5.createEncryptor;
                  } else {
                    var _0x7d544a = _0x536e5.createDecryptor;
                    this._minBufferSize = 1;
                  }
                  if (this._mode && this._mode.__creator == _0x7d544a) {
                    this._mode.init(this, _0x27ceb7 && _0x27ceb7.words);
                  } else {
                    this._mode = _0x7d544a.call(_0x536e5, this, _0x27ceb7 && _0x27ceb7.words);
                    this._mode.__creator = _0x7d544a;
                  }
                },
                _doProcessBlock: function (_0x5b5baf, _0x2a07b6) {
                  this._mode.processBlock(_0x5b5baf, _0x2a07b6);
                },
                _doFinalize: function () {
                  var _0x4b9592 = this.cfg.padding;
                  if (this._xformMode == this._ENC_XFORM_MODE) {
                    _0x4b9592.pad(this._data, this.blockSize);
                    var _0x4ae621 = this._process(true);
                  } else {
                    var _0x4ae621 = this._process(true);
                    _0x4b9592.unpad(_0x4ae621);
                  }
                  return _0x4ae621;
                },
                blockSize: 4
              });
              var _0x28f3e8 = _0x9319f8.CipherParams = _0x357957.extend({
                init: function (_0x462b43) {
                  this.mixIn(_0x462b43);
                },
                toString: function (_0xed372f) {
                  return (_0xed372f || this.formatter).stringify(this);
                }
              });
              var _0x4f847e = _0x35b51c.format = {};
              var _0x3e6333 = _0x4f847e.OpenSSL = {
                stringify: function (_0x178964) {
                  var _0x4c24a7 = _0x178964.ciphertext;
                  var _0x20fd8e = _0x178964.salt;
                  if (_0x20fd8e) {
                    var _0x43aaa3 = _0x34c9d2.create([1398893684, 1701076831]).concat(_0x20fd8e).concat(_0x4c24a7);
                  } else {
                    var _0x43aaa3 = _0x4c24a7;
                  }
                  return _0x43aaa3.toString(_0x827159);
                },
                parse: function (_0x3af4b0) {
                  var _0x31e258 = _0x827159.parse(_0x3af4b0);
                  var _0x32704f = _0x31e258.words;
                  if (_0x32704f[0] == 1398893684 && _0x32704f[1] == 1701076831) {
                    var _0x1b9d5e = _0x34c9d2.create(_0x32704f.slice(2, 4));
                    _0x32704f.splice(0, 4);
                    _0x31e258.sigBytes -= 16;
                  }
                  var _0x14ec03 = {
                    ciphertext: _0x31e258,
                    salt: _0x1b9d5e
                  };
                  return _0x28f3e8.create(_0x14ec03);
                }
              };
              var _0x5cced7 = {
                format: _0x3e6333
              };
              var _0x35001d = _0x9319f8.SerializableCipher = _0x357957.extend({
                cfg: _0x357957.extend(_0x5cced7),
                encrypt: function (_0x2e6bee, _0x7ec4f9, _0x3a8e6d, _0x14df07) {
                  _0x14df07 = this.cfg.extend(_0x14df07);
                  var _0x5e14fc = _0x2e6bee.createEncryptor(_0x3a8e6d, _0x14df07);
                  var _0x347090 = _0x5e14fc.finalize(_0x7ec4f9);
                  var _0x349f36 = _0x5e14fc.cfg;
                  var _0x35a807 = {
                    ciphertext: _0x347090,
                    key: _0x3a8e6d,
                    iv: _0x349f36.iv,
                    algorithm: _0x2e6bee,
                    mode: _0x349f36.mode,
                    padding: _0x349f36.padding,
                    blockSize: _0x2e6bee.blockSize,
                    formatter: _0x14df07.format
                  };
                  return _0x28f3e8.create(_0x35a807);
                },
                decrypt: function (_0x40d155, _0x257ed8, _0x5494cb, _0x4a1985) {
                  _0x4a1985 = this.cfg.extend(_0x4a1985);
                  _0x257ed8 = this._parse(_0x257ed8, _0x4a1985.format);
                  var _0x347f0f = _0x40d155.createDecryptor(_0x5494cb, _0x4a1985).finalize(_0x257ed8.ciphertext);
                  return _0x347f0f;
                },
                _parse: function (_0x3084de, _0x4a8ce0) {
                  if (typeof _0x3084de == "string") {
                    return _0x4a8ce0.parse(_0x3084de, this);
                  } else {
                    return _0x3084de;
                  }
                }
              });
              var _0x73298d = _0x35b51c.kdf = {};
              var _0x199586 = _0x73298d.OpenSSL = {
                execute: function (_0x34dc87, _0x16ce77, _0x44059d, _0x1835bc) {
                  if (!_0x1835bc) {
                    _0x1835bc = _0x34c9d2.random(8);
                  }
                  var _0x108d1b = {
                    keySize: _0x16ce77 + _0x44059d
                  };
                  var _0xa00ad8 = _0x5a914f.create(_0x108d1b).compute(_0x34dc87, _0x1835bc);
                  var _0x41b939 = _0x34c9d2.create(_0xa00ad8.words.slice(_0x16ce77), _0x44059d * 4);
                  _0xa00ad8.sigBytes = _0x16ce77 * 4;
                  var _0x1c3e13 = {
                    key: _0xa00ad8,
                    iv: _0x41b939,
                    salt: _0x1835bc
                  };
                  return _0x28f3e8.create(_0x1c3e13);
                }
              };
              var _0xeab361 = {
                kdf: _0x199586
              };
              var _0x47e160 = _0x9319f8.PasswordBasedCipher = _0x35001d.extend({
                cfg: _0x35001d.cfg.extend(_0xeab361),
                encrypt: function (_0x16d921, _0x26d8e9, _0xcb31a7, _0x4364ef) {
                  _0x4364ef = this.cfg.extend(_0x4364ef);
                  var _0x45a86a = _0x4364ef.kdf.execute(_0xcb31a7, _0x16d921.keySize, _0x16d921.ivSize);
                  _0x4364ef.iv = _0x45a86a.iv;
                  var _0x5112da = _0x35001d.encrypt.call(this, _0x16d921, _0x26d8e9, _0x45a86a.key, _0x4364ef);
                  _0x5112da.mixIn(_0x45a86a);
                  return _0x5112da;
                },
                decrypt: function (_0xabbff9, _0x315af1, _0x35756c, _0x35c2e4) {
                  _0x35c2e4 = this.cfg.extend(_0x35c2e4);
                  _0x315af1 = this._parse(_0x315af1, _0x35c2e4.format);
                  var _0xd52977 = _0x35c2e4.kdf.execute(_0x35756c, _0xabbff9.keySize, _0xabbff9.ivSize, _0x315af1.salt);
                  _0x35c2e4.iv = _0xd52977.iv;
                  var _0x540218 = _0x35001d.decrypt.call(this, _0xabbff9, _0x315af1, _0xd52977.key, _0x35c2e4);
                  return _0x540218;
                }
              });
            })();
          }
        });
      }
    });
    var _0x4b4a74 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-cfb.js"(_0x4db772, _0x5437f2) {
        'use strict';

        (function (_0x56d7f2, _0x45c981, _0xe46a6a) {
          if (typeof _0x4db772 === "object") {
            _0x5437f2.exports = _0x4db772 = _0x45c981(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x45c981);
          } else {
            _0x45c981(_0x56d7f2.CryptoJS);
          }
        })(_0x4db772, function (_0xea443e) {
          _0xea443e.mode.CFB = function () {
            var _0x248825 = _0xea443e.lib.BlockCipherMode.extend();
            _0x248825.Encryptor = _0x248825.extend({
              processBlock: function (_0x5d820b, _0x12e49a) {
                var _0x1a3dd3 = this._cipher;
                var _0x12f830 = _0x1a3dd3.blockSize;
                _0x1a8438.call(this, _0x5d820b, _0x12e49a, _0x12f830, _0x1a3dd3);
                this._prevBlock = _0x5d820b.slice(_0x12e49a, _0x12e49a + _0x12f830);
              }
            });
            _0x248825.Decryptor = _0x248825.extend({
              processBlock: function (_0x4a518e, _0x57dd5f) {
                var _0x37e9d8 = this._cipher;
                var _0x19f862 = _0x37e9d8.blockSize;
                var _0x1d2e48 = _0x4a518e.slice(_0x57dd5f, _0x57dd5f + _0x19f862);
                _0x1a8438.call(this, _0x4a518e, _0x57dd5f, _0x19f862, _0x37e9d8);
                this._prevBlock = _0x1d2e48;
              }
            });
            function _0x1a8438(_0x55deb3, _0x5c0eef, _0x4e8adf, _0x53971b) {
              var _0x417be8 = this._iv;
              if (_0x417be8) {
                var _0xd5d5a6 = _0x417be8.slice(0);
                this._iv = undefined;
              } else {
                var _0xd5d5a6 = this._prevBlock;
              }
              _0x53971b.encryptBlock(_0xd5d5a6, 0);
              for (var _0x590542 = 0; _0x590542 < _0x4e8adf; _0x590542++) {
                _0x55deb3[_0x5c0eef + _0x590542] ^= _0xd5d5a6[_0x590542];
              }
            }
            return _0x248825;
          }();
          return _0xea443e.mode.CFB;
        });
      }
    });
    var _0x4c65d2 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ctr.js"(_0x30e9f2, _0x5a4e29) {
        'use strict';

        (function (_0x4c8131, _0x4bdd81, _0x70bb33) {
          if (typeof _0x30e9f2 === "object") {
            _0x5a4e29.exports = _0x30e9f2 = _0x4bdd81(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x4bdd81);
          } else {
            _0x4bdd81(_0x4c8131.CryptoJS);
          }
        })(_0x30e9f2, function (_0x17ad31) {
          _0x17ad31.mode.CTR = function () {
            var _0x2a7ab0 = _0x17ad31.lib.BlockCipherMode.extend();
            var _0x1d6065 = _0x2a7ab0.Encryptor = _0x2a7ab0.extend({
              processBlock: function (_0x5e3862, _0x3e5e56) {
                var _0x2d73a4 = this._cipher;
                var _0x17c94f = _0x2d73a4.blockSize;
                var _0x43ea98 = this._iv;
                var _0x28d662 = this._counter;
                if (_0x43ea98) {
                  _0x28d662 = this._counter = _0x43ea98.slice(0);
                  this._iv = undefined;
                }
                var _0x22b7b9 = _0x28d662.slice(0);
                _0x2d73a4.encryptBlock(_0x22b7b9, 0);
                _0x28d662[_0x17c94f - 1] = _0x28d662[_0x17c94f - 1] + 1 | 0;
                for (var _0x269339 = 0; _0x269339 < _0x17c94f; _0x269339++) {
                  _0x5e3862[_0x3e5e56 + _0x269339] ^= _0x22b7b9[_0x269339];
                }
              }
            });
            _0x2a7ab0.Decryptor = _0x1d6065;
            return _0x2a7ab0;
          }();
          return _0x17ad31.mode.CTR;
        });
      }
    });
    var _0x1ee0ad = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ctr-gladman.js"(_0x3f7ff5, _0x26808e) {
        'use strict';

        (function (_0x470018, _0x281491, _0x239de0) {
          if (typeof _0x3f7ff5 === "object") {
            _0x26808e.exports = _0x3f7ff5 = _0x281491(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x281491);
          } else {
            _0x281491(_0x470018.CryptoJS);
          }
        })(_0x3f7ff5, function (_0x562323) {
          _0x562323.mode.CTRGladman = function () {
            var _0xe7472e = _0x562323.lib.BlockCipherMode.extend();
            function _0x323618(_0x4b34f3) {
              if ((_0x4b34f3 >> 24 & 255) === 255) {
                var _0x29ec77 = _0x4b34f3 >> 16 & 255;
                var _0x166a58 = _0x4b34f3 >> 8 & 255;
                var _0x23d709 = _0x4b34f3 & 255;
                if (_0x29ec77 === 255) {
                  _0x29ec77 = 0;
                  if (_0x166a58 === 255) {
                    _0x166a58 = 0;
                    if (_0x23d709 === 255) {
                      _0x23d709 = 0;
                    } else {
                      ++_0x23d709;
                    }
                  } else {
                    ++_0x166a58;
                  }
                } else {
                  ++_0x29ec77;
                }
                _0x4b34f3 = 0;
                _0x4b34f3 += _0x29ec77 << 16;
                _0x4b34f3 += _0x166a58 << 8;
                _0x4b34f3 += _0x23d709;
              } else {
                _0x4b34f3 += 1 << 24;
              }
              return _0x4b34f3;
            }
            function _0x4f679b(_0x1f839a) {
              if ((_0x1f839a[0] = _0x323618(_0x1f839a[0])) === 0) {
                _0x1f839a[1] = _0x323618(_0x1f839a[1]);
              }
              return _0x1f839a;
            }
            var _0x41028d = _0xe7472e.Encryptor = _0xe7472e.extend({
              processBlock: function (_0x21d23a, _0x425e0f) {
                var _0x54075f = this._cipher;
                var _0x30d448 = _0x54075f.blockSize;
                var _0x488754 = this._iv;
                var _0x1412a0 = this._counter;
                if (_0x488754) {
                  _0x1412a0 = this._counter = _0x488754.slice(0);
                  this._iv = undefined;
                }
                _0x4f679b(_0x1412a0);
                var _0x2f89bf = _0x1412a0.slice(0);
                _0x54075f.encryptBlock(_0x2f89bf, 0);
                for (var _0x465cca = 0; _0x465cca < _0x30d448; _0x465cca++) {
                  _0x21d23a[_0x425e0f + _0x465cca] ^= _0x2f89bf[_0x465cca];
                }
              }
            });
            _0xe7472e.Decryptor = _0x41028d;
            return _0xe7472e;
          }();
          return _0x562323.mode.CTRGladman;
        });
      }
    });
    var _0x1b6c4e = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ofb.js"(_0x16dddc, _0x2bb0b0) {
        'use strict';

        (function (_0x5c12dc, _0x19597d, _0xac6f3d) {
          if (typeof _0x16dddc === "object") {
            _0x2bb0b0.exports = _0x16dddc = _0x19597d(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x19597d);
          } else {
            _0x19597d(_0x5c12dc.CryptoJS);
          }
        })(_0x16dddc, function (_0xe6b96d) {
          _0xe6b96d.mode.OFB = function () {
            var _0x400937 = _0xe6b96d.lib.BlockCipherMode.extend();
            var _0x5bb077 = _0x400937.Encryptor = _0x400937.extend({
              processBlock: function (_0x50e23b, _0x35effa) {
                var _0x2995ce = this._cipher;
                var _0x2c02c2 = _0x2995ce.blockSize;
                var _0x43ec15 = this._iv;
                var _0x266b3c = this._keystream;
                if (_0x43ec15) {
                  _0x266b3c = this._keystream = _0x43ec15.slice(0);
                  this._iv = undefined;
                }
                _0x2995ce.encryptBlock(_0x266b3c, 0);
                for (var _0x2929de = 0; _0x2929de < _0x2c02c2; _0x2929de++) {
                  _0x50e23b[_0x35effa + _0x2929de] ^= _0x266b3c[_0x2929de];
                }
              }
            });
            _0x400937.Decryptor = _0x5bb077;
            return _0x400937;
          }();
          return _0xe6b96d.mode.OFB;
        });
      }
    });
    var _0x9b847f = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ecb.js"(_0x352057, _0x2cd72c) {
        'use strict';

        (function (_0x564113, _0x2e5ef9, _0x5ce0be) {
          if (typeof _0x352057 === "object") {
            _0x2cd72c.exports = _0x352057 = _0x2e5ef9(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x2e5ef9);
          } else {
            _0x2e5ef9(_0x564113.CryptoJS);
          }
        })(_0x352057, function (_0xdf78f2) {
          _0xdf78f2.mode.ECB = function () {
            var _0xedd19a = _0xdf78f2.lib.BlockCipherMode.extend();
            _0xedd19a.Encryptor = _0xedd19a.extend({
              processBlock: function (_0x27f9dc, _0x4e4d23) {
                this._cipher.encryptBlock(_0x27f9dc, _0x4e4d23);
              }
            });
            _0xedd19a.Decryptor = _0xedd19a.extend({
              processBlock: function (_0x143e6f, _0x5720cc) {
                this._cipher.decryptBlock(_0x143e6f, _0x5720cc);
              }
            });
            return _0xedd19a;
          }();
          return _0xdf78f2.mode.ECB;
        });
      }
    });
    var _0x4711e5 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-ansix923.js"(_0x3fffd9, _0x239baa) {
        'use strict';

        (function (_0x47cd25, _0x3b8cc4, _0x3fb372) {
          if (typeof _0x3fffd9 === "object") {
            _0x239baa.exports = _0x3fffd9 = _0x3b8cc4(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x3b8cc4);
          } else {
            _0x3b8cc4(_0x47cd25.CryptoJS);
          }
        })(_0x3fffd9, function (_0x591217) {
          _0x591217.pad.AnsiX923 = {
            pad: function (_0xd6a435, _0x3082df) {
              var _0x3e538e = _0xd6a435.sigBytes;
              var _0x1e1628 = _0x3082df * 4;
              var _0xa8b7ea = _0x1e1628 - _0x3e538e % _0x1e1628;
              var _0x2c2b7e = _0x3e538e + _0xa8b7ea - 1;
              _0xd6a435.clamp();
              _0xd6a435.words[_0x2c2b7e >>> 2] |= _0xa8b7ea << 24 - _0x2c2b7e % 4 * 8;
              _0xd6a435.sigBytes += _0xa8b7ea;
            },
            unpad: function (_0x3e551e) {
              var _0x45114d = _0x3e551e.words[_0x3e551e.sigBytes - 1 >>> 2] & 255;
              _0x3e551e.sigBytes -= _0x45114d;
            }
          };
          return _0x591217.pad.Ansix923;
        });
      }
    });
    var _0x56e38e = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-iso10126.js"(_0x3cbc0d, _0x368ef5) {
        'use strict';

        (function (_0x219eec, _0x26c340, _0x203632) {
          if (typeof _0x3cbc0d === "object") {
            _0x368ef5.exports = _0x3cbc0d = _0x26c340(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x26c340);
          } else {
            _0x26c340(_0x219eec.CryptoJS);
          }
        })(_0x3cbc0d, function (_0x310f3d) {
          _0x310f3d.pad.Iso10126 = {
            pad: function (_0x19d487, _0x4e16ab) {
              var _0x503771 = _0x4e16ab * 4;
              var _0x4be240 = _0x503771 - _0x19d487.sigBytes % _0x503771;
              _0x19d487.concat(_0x310f3d.lib.WordArray.random(_0x4be240 - 1)).concat(_0x310f3d.lib.WordArray.create([_0x4be240 << 24], 1));
            },
            unpad: function (_0x36fe37) {
              var _0x4e7381 = _0x36fe37.words[_0x36fe37.sigBytes - 1 >>> 2] & 255;
              _0x36fe37.sigBytes -= _0x4e7381;
            }
          };
          return _0x310f3d.pad.Iso10126;
        });
      }
    });
    var _0xb2ad2c = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-iso97971.js"(_0x45be44, _0x5ebfe2) {
        'use strict';

        (function (_0x4ef678, _0x12e2f9, _0x5771a3) {
          if (typeof _0x45be44 === "object") {
            _0x5ebfe2.exports = _0x45be44 = _0x12e2f9(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x12e2f9);
          } else {
            _0x12e2f9(_0x4ef678.CryptoJS);
          }
        })(_0x45be44, function (_0x42c69d) {
          _0x42c69d.pad.Iso97971 = {
            pad: function (_0x6a85fa, _0x1bef41) {
              _0x6a85fa.concat(_0x42c69d.lib.WordArray.create([2147483648], 1));
              _0x42c69d.pad.ZeroPadding.pad(_0x6a85fa, _0x1bef41);
            },
            unpad: function (_0x17c324) {
              _0x42c69d.pad.ZeroPadding.unpad(_0x17c324);
              _0x17c324.sigBytes--;
            }
          };
          return _0x42c69d.pad.Iso97971;
        });
      }
    });
    var _0x430bcf = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-zeropadding.js"(_0x22f5b1, _0x5608c1) {
        'use strict';

        (function (_0x572f85, _0x4d7c6f, _0xed959c) {
          if (typeof _0x22f5b1 === "object") {
            _0x5608c1.exports = _0x22f5b1 = _0x4d7c6f(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x4d7c6f);
          } else {
            _0x4d7c6f(_0x572f85.CryptoJS);
          }
        })(_0x22f5b1, function (_0x1b273b) {
          _0x1b273b.pad.ZeroPadding = {
            pad: function (_0x2abaaf, _0x30d4b2) {
              var _0x49365f = _0x30d4b2 * 4;
              _0x2abaaf.clamp();
              _0x2abaaf.sigBytes += _0x49365f - (_0x2abaaf.sigBytes % _0x49365f || _0x49365f);
            },
            unpad: function (_0xe7bbb4) {
              var _0x2aafba = _0xe7bbb4.words;
              var _0x224d12 = _0xe7bbb4.sigBytes - 1;
              while (!(_0x2aafba[_0x224d12 >>> 2] >>> 24 - _0x224d12 % 4 * 8 & 255)) {
                _0x224d12--;
              }
              _0xe7bbb4.sigBytes = _0x224d12 + 1;
            }
          };
          return _0x1b273b.pad.ZeroPadding;
        });
      }
    });
    var _0x540fda = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-nopadding.js"(_0x18576b, _0xbfdb86) {
        'use strict';

        (function (_0x155f41, _0x39c6e6, _0x1da8c4) {
          if (typeof _0x18576b === "object") {
            _0xbfdb86.exports = _0x18576b = _0x39c6e6(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x39c6e6);
          } else {
            _0x39c6e6(_0x155f41.CryptoJS);
          }
        })(_0x18576b, function (_0x11a9a9) {
          var _0x27bd12 = {
            pad: function () {},
            unpad: function () {}
          };
          _0x11a9a9.pad.NoPadding = _0x27bd12;
          return _0x11a9a9.pad.NoPadding;
        });
      }
    });
    var _0x308b13 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/format-hex.js"(_0x3de8cb, _0x116789) {
        'use strict';

        (function (_0x1a9381, _0x3781ef, _0x556e52) {
          if (typeof _0x3de8cb === "object") {
            _0x116789.exports = _0x3de8cb = _0x3781ef(_0x2354f1(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x3781ef);
          } else {
            _0x3781ef(_0x1a9381.CryptoJS);
          }
        })(_0x3de8cb, function (_0x5cb35e) {
          (function (_0x2f9106) {
            var _0x785158 = _0x5cb35e;
            var _0xc8387e = _0x785158.lib;
            var _0x5b8f0a = _0xc8387e.CipherParams;
            var _0x11c5d4 = _0x785158.enc;
            var _0xc6b3ce = _0x11c5d4.Hex;
            var _0x612f0b = _0x785158.format;
            var _0x44b870 = _0x612f0b.Hex = {
              stringify: function (_0x1baf0d) {
                return _0x1baf0d.ciphertext.toString(_0xc6b3ce);
              },
              parse: function (_0xaaa29) {
                var _0x47d6a2 = _0xc6b3ce.parse(_0xaaa29);
                var _0x6e606 = {
                  ciphertext: _0x47d6a2
                };
                return _0x5b8f0a.create(_0x6e606);
              }
            };
          })();
          return _0x5cb35e.format.Hex;
        });
      }
    });
    var _0xeefcd8 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/aes.js"(_0x3ce242, _0x24a58d) {
        'use strict';

        (function (_0x3368b7, _0x1ccfd3, _0xe886b1) {
          if (typeof _0x3ce242 === "object") {
            _0x24a58d.exports = _0x3ce242 = _0x1ccfd3(_0x2354f1(), _0x3102d9(), _0x48305a(), _0x53b70f(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x1ccfd3);
          } else {
            _0x1ccfd3(_0x3368b7.CryptoJS);
          }
        })(_0x3ce242, function (_0x492fa0) {
          (function () {
            var _0x57f9d2 = _0x492fa0;
            var _0x4fe372 = _0x57f9d2.lib;
            var _0x24eaa3 = _0x4fe372.BlockCipher;
            var _0x239333 = _0x57f9d2.algo;
            var _0x30f847 = [];
            var _0x520bce = [];
            var _0x343077 = [];
            var _0x1ee1c6 = [];
            var _0x55e98c = [];
            var _0x324786 = [];
            var _0x1d2a5d = [];
            var _0x5dae35 = [];
            var _0xa80283 = [];
            var _0x5709d0 = [];
            (function () {
              var _0x2308c2 = [];
              for (var _0xb0281e = 0; _0xb0281e < 256; _0xb0281e++) {
                if (_0xb0281e < 128) {
                  _0x2308c2[_0xb0281e] = _0xb0281e << 1;
                } else {
                  _0x2308c2[_0xb0281e] = _0xb0281e << 1 ^ 283;
                }
              }
              var _0x2cf3bd = 0;
              var _0x2e973d = 0;
              for (var _0xb0281e = 0; _0xb0281e < 256; _0xb0281e++) {
                var _0x52ad7a = _0x2e973d ^ _0x2e973d << 1 ^ _0x2e973d << 2 ^ _0x2e973d << 3 ^ _0x2e973d << 4;
                _0x52ad7a = _0x52ad7a >>> 8 ^ _0x52ad7a & 255 ^ 99;
                _0x30f847[_0x2cf3bd] = _0x52ad7a;
                _0x520bce[_0x52ad7a] = _0x2cf3bd;
                var _0x3da773 = _0x2308c2[_0x2cf3bd];
                var _0x3b2976 = _0x2308c2[_0x3da773];
                var _0x1886df = _0x2308c2[_0x3b2976];
                var _0x5d2a22 = _0x2308c2[_0x52ad7a] * 257 ^ _0x52ad7a * 16843008;
                _0x343077[_0x2cf3bd] = _0x5d2a22 << 24 | _0x5d2a22 >>> 8;
                _0x1ee1c6[_0x2cf3bd] = _0x5d2a22 << 16 | _0x5d2a22 >>> 16;
                _0x55e98c[_0x2cf3bd] = _0x5d2a22 << 8 | _0x5d2a22 >>> 24;
                _0x324786[_0x2cf3bd] = _0x5d2a22;
                var _0x5d2a22 = _0x1886df * 16843009 ^ _0x3b2976 * 65537 ^ _0x3da773 * 257 ^ _0x2cf3bd * 16843008;
                _0x1d2a5d[_0x52ad7a] = _0x5d2a22 << 24 | _0x5d2a22 >>> 8;
                _0x5dae35[_0x52ad7a] = _0x5d2a22 << 16 | _0x5d2a22 >>> 16;
                _0xa80283[_0x52ad7a] = _0x5d2a22 << 8 | _0x5d2a22 >>> 24;
                _0x5709d0[_0x52ad7a] = _0x5d2a22;
                if (!_0x2cf3bd) {
                  _0x2cf3bd = _0x2e973d = 1;
                } else {
                  _0x2cf3bd = _0x3da773 ^ _0x2308c2[_0x2308c2[_0x2308c2[_0x1886df ^ _0x3da773]]];
                  _0x2e973d ^= _0x2308c2[_0x2308c2[_0x2e973d]];
                }
              }
            })();
            var _0x27b185 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
            var _0x410b31 = _0x239333.AES = _0x24eaa3.extend({
              _doReset: function () {
                if (this._nRounds && this._keyPriorReset === this._key) {
                  return;
                }
                var _0x5b5417 = this._keyPriorReset = this._key;
                var _0x270e00 = _0x5b5417.words;
                var _0x2d8a36 = _0x5b5417.sigBytes / 4;
                var _0x59f1e5 = this._nRounds = _0x2d8a36 + 6;
                var _0x52077b = (_0x59f1e5 + 1) * 4;
                var _0x56912a = this._keySchedule = [];
                for (var _0x3bae64 = 0; _0x3bae64 < _0x52077b; _0x3bae64++) {
                  if (_0x3bae64 < _0x2d8a36) {
                    _0x56912a[_0x3bae64] = _0x270e00[_0x3bae64];
                  } else {
                    var _0x392070 = _0x56912a[_0x3bae64 - 1];
                    if (!(_0x3bae64 % _0x2d8a36)) {
                      _0x392070 = _0x392070 << 8 | _0x392070 >>> 24;
                      _0x392070 = _0x30f847[_0x392070 >>> 24] << 24 | _0x30f847[_0x392070 >>> 16 & 255] << 16 | _0x30f847[_0x392070 >>> 8 & 255] << 8 | _0x30f847[_0x392070 & 255];
                      _0x392070 ^= _0x27b185[_0x3bae64 / _0x2d8a36 | 0] << 24;
                    } else if (_0x2d8a36 > 6 && _0x3bae64 % _0x2d8a36 == 4) {
                      _0x392070 = _0x30f847[_0x392070 >>> 24] << 24 | _0x30f847[_0x392070 >>> 16 & 255] << 16 | _0x30f847[_0x392070 >>> 8 & 255] << 8 | _0x30f847[_0x392070 & 255];
                    }
                    _0x56912a[_0x3bae64] = _0x56912a[_0x3bae64 - _0x2d8a36] ^ _0x392070;
                  }
                }
                var _0x1b3492 = this._invKeySchedule = [];
                for (var _0x4d8321 = 0; _0x4d8321 < _0x52077b; _0x4d8321++) {
                  var _0x3bae64 = _0x52077b - _0x4d8321;
                  if (_0x4d8321 % 4) {
                    var _0x392070 = _0x56912a[_0x3bae64];
                  } else {
                    var _0x392070 = _0x56912a[_0x3bae64 - 4];
                  }
                  if (_0x4d8321 < 4 || _0x3bae64 <= 4) {
                    _0x1b3492[_0x4d8321] = _0x392070;
                  } else {
                    _0x1b3492[_0x4d8321] = _0x1d2a5d[_0x30f847[_0x392070 >>> 24]] ^ _0x5dae35[_0x30f847[_0x392070 >>> 16 & 255]] ^ _0xa80283[_0x30f847[_0x392070 >>> 8 & 255]] ^ _0x5709d0[_0x30f847[_0x392070 & 255]];
                  }
                }
              },
              encryptBlock: function (_0x2ce07a, _0x228f2c) {
                this._doCryptBlock(_0x2ce07a, _0x228f2c, this._keySchedule, _0x343077, _0x1ee1c6, _0x55e98c, _0x324786, _0x30f847);
              },
              decryptBlock: function (_0xee3109, _0x2812a9) {
                var _0xf803c2 = _0xee3109[_0x2812a9 + 1];
                _0xee3109[_0x2812a9 + 1] = _0xee3109[_0x2812a9 + 3];
                _0xee3109[_0x2812a9 + 3] = _0xf803c2;
                this._doCryptBlock(_0xee3109, _0x2812a9, this._invKeySchedule, _0x1d2a5d, _0x5dae35, _0xa80283, _0x5709d0, _0x520bce);
                var _0xf803c2 = _0xee3109[_0x2812a9 + 1];
                _0xee3109[_0x2812a9 + 1] = _0xee3109[_0x2812a9 + 3];
                _0xee3109[_0x2812a9 + 3] = _0xf803c2;
              },
              _doCryptBlock: function (_0x108cda, _0xe9c978, _0x610633, _0x339eaa, _0x37ea87, _0x267b41, _0x3f6535, _0x41da3e) {
                var _0x21c401 = this._nRounds;
                var _0x51262b = _0x108cda[_0xe9c978] ^ _0x610633[0];
                var _0x2b65a9 = _0x108cda[_0xe9c978 + 1] ^ _0x610633[1];
                var _0x5a109b = _0x108cda[_0xe9c978 + 2] ^ _0x610633[2];
                var _0x4535dd = _0x108cda[_0xe9c978 + 3] ^ _0x610633[3];
                var _0x460479 = 4;
                for (var _0x1f86f0 = 1; _0x1f86f0 < _0x21c401; _0x1f86f0++) {
                  var _0x456b04 = _0x339eaa[_0x51262b >>> 24] ^ _0x37ea87[_0x2b65a9 >>> 16 & 255] ^ _0x267b41[_0x5a109b >>> 8 & 255] ^ _0x3f6535[_0x4535dd & 255] ^ _0x610633[_0x460479++];
                  var _0x29f054 = _0x339eaa[_0x2b65a9 >>> 24] ^ _0x37ea87[_0x5a109b >>> 16 & 255] ^ _0x267b41[_0x4535dd >>> 8 & 255] ^ _0x3f6535[_0x51262b & 255] ^ _0x610633[_0x460479++];
                  var _0x1b164a = _0x339eaa[_0x5a109b >>> 24] ^ _0x37ea87[_0x4535dd >>> 16 & 255] ^ _0x267b41[_0x51262b >>> 8 & 255] ^ _0x3f6535[_0x2b65a9 & 255] ^ _0x610633[_0x460479++];
                  var _0xca5d07 = _0x339eaa[_0x4535dd >>> 24] ^ _0x37ea87[_0x51262b >>> 16 & 255] ^ _0x267b41[_0x2b65a9 >>> 8 & 255] ^ _0x3f6535[_0x5a109b & 255] ^ _0x610633[_0x460479++];
                  _0x51262b = _0x456b04;
                  _0x2b65a9 = _0x29f054;
                  _0x5a109b = _0x1b164a;
                  _0x4535dd = _0xca5d07;
                }
                var _0x456b04 = (_0x41da3e[_0x51262b >>> 24] << 24 | _0x41da3e[_0x2b65a9 >>> 16 & 255] << 16 | _0x41da3e[_0x5a109b >>> 8 & 255] << 8 | _0x41da3e[_0x4535dd & 255]) ^ _0x610633[_0x460479++];
                var _0x29f054 = (_0x41da3e[_0x2b65a9 >>> 24] << 24 | _0x41da3e[_0x5a109b >>> 16 & 255] << 16 | _0x41da3e[_0x4535dd >>> 8 & 255] << 8 | _0x41da3e[_0x51262b & 255]) ^ _0x610633[_0x460479++];
                var _0x1b164a = (_0x41da3e[_0x5a109b >>> 24] << 24 | _0x41da3e[_0x4535dd >>> 16 & 255] << 16 | _0x41da3e[_0x51262b >>> 8 & 255] << 8 | _0x41da3e[_0x2b65a9 & 255]) ^ _0x610633[_0x460479++];
                var _0xca5d07 = (_0x41da3e[_0x4535dd >>> 24] << 24 | _0x41da3e[_0x51262b >>> 16 & 255] << 16 | _0x41da3e[_0x2b65a9 >>> 8 & 255] << 8 | _0x41da3e[_0x5a109b & 255]) ^ _0x610633[_0x460479++];
                _0x108cda[_0xe9c978] = _0x456b04;
                _0x108cda[_0xe9c978 + 1] = _0x29f054;
                _0x108cda[_0xe9c978 + 2] = _0x1b164a;
                _0x108cda[_0xe9c978 + 3] = _0xca5d07;
              },
              keySize: 8
            });
            _0x57f9d2.AES = _0x24eaa3._createHelper(_0x410b31);
          })();
          return _0x492fa0.AES;
        });
      }
    });
    var _0x17fbcf = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/tripledes.js"(_0x12db02, _0x387937) {
        'use strict';

        (function (_0x34184e, _0x271de3, _0x58a7d0) {
          if (typeof _0x12db02 === "object") {
            _0x387937.exports = _0x12db02 = _0x271de3(_0x2354f1(), _0x3102d9(), _0x48305a(), _0x53b70f(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x271de3);
          } else {
            _0x271de3(_0x34184e.CryptoJS);
          }
        })(_0x12db02, function (_0x34bff0) {
          (function () {
            var _0x5d1243 = _0x34bff0;
            var _0x32d56a = _0x5d1243.lib;
            var _0x3e9f99 = _0x32d56a.WordArray;
            var _0xe0e96c = _0x32d56a.BlockCipher;
            var _0x575c53 = _0x5d1243.algo;
            var _0x327b41 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];
            var _0xb699dd = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];
            var _0x314243 = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];
            var _0x1f2176 = [{
              "0": 8421888,
              "268435456": 32768,
              "536870912": 8421378,
              "805306368": 2,
              "1073741824": 512,
              "1342177280": 8421890,
              "1610612736": 8389122,
              "1879048192": 8388608,
              "2147483648": 514,
              "2415919104": 8389120,
              "2684354560": 33280,
              "2952790016": 8421376,
              "3221225472": 32770,
              "3489660928": 8388610,
              "3758096384": 0,
              "4026531840": 33282,
              "134217728": 0,
              "402653184": 8421890,
              "671088640": 33282,
              "939524096": 32768,
              "1207959552": 8421888,
              "1476395008": 512,
              "1744830464": 8421378,
              "2013265920": 2,
              "2281701376": 8389120,
              "2550136832": 33280,
              "2818572288": 8421376,
              "3087007744": 8389122,
              "3355443200": 8388610,
              "3623878656": 32770,
              "3892314112": 514,
              "4160749568": 8388608,
              "1": 32768,
              "268435457": 2,
              "536870913": 8421888,
              "805306369": 8388608,
              "1073741825": 8421378,
              "1342177281": 33280,
              "1610612737": 512,
              "1879048193": 8389122,
              "2147483649": 8421890,
              "2415919105": 8421376,
              "2684354561": 8388610,
              "2952790017": 33282,
              "3221225473": 514,
              "3489660929": 8389120,
              "3758096385": 32770,
              "4026531841": 0,
              "134217729": 8421890,
              "402653185": 8421376,
              "671088641": 8388608,
              "939524097": 512,
              "1207959553": 32768,
              "1476395009": 8388610,
              "1744830465": 2,
              "2013265921": 33282,
              "2281701377": 32770,
              "2550136833": 8389122,
              "2818572289": 514,
              "3087007745": 8421888,
              "3355443201": 8389120,
              "3623878657": 0,
              "3892314113": 33280,
              "4160749569": 8421378
            }, {
              "0": 1074282512,
              "16777216": 16384,
              "33554432": 524288,
              "50331648": 1074266128,
              "67108864": 1073741840,
              "83886080": 1074282496,
              "100663296": 1073758208,
              "117440512": 16,
              "134217728": 540672,
              "150994944": 1073758224,
              "167772160": 1073741824,
              "184549376": 540688,
              "201326592": 524304,
              "218103808": 0,
              "234881024": 16400,
              "251658240": 1074266112,
              "8388608": 1073758208,
              "25165824": 540688,
              "41943040": 16,
              "58720256": 1073758224,
              "75497472": 1074282512,
              "92274688": 1073741824,
              "109051904": 524288,
              "125829120": 1074266128,
              "142606336": 524304,
              "159383552": 0,
              "176160768": 16384,
              "192937984": 1074266112,
              "209715200": 1073741840,
              "226492416": 540672,
              "243269632": 1074282496,
              "260046848": 16400,
              "268435456": 0,
              "285212672": 1074266128,
              "301989888": 1073758224,
              "318767104": 1074282496,
              "335544320": 1074266112,
              "352321536": 16,
              "369098752": 540688,
              "385875968": 16384,
              "402653184": 16400,
              "419430400": 524288,
              "436207616": 524304,
              "452984832": 1073741840,
              "469762048": 540672,
              "486539264": 1073758208,
              "503316480": 1073741824,
              "520093696": 1074282512,
              "276824064": 540688,
              "293601280": 524288,
              "310378496": 1074266112,
              "327155712": 16384,
              "343932928": 1073758208,
              "360710144": 1074282512,
              "377487360": 16,
              "394264576": 1073741824,
              "411041792": 1074282496,
              "427819008": 1073741840,
              "444596224": 1073758224,
              "461373440": 524304,
              "478150656": 0,
              "494927872": 16400,
              "511705088": 1074266128,
              "528482304": 540672
            }, {
              "0": 260,
              "1048576": 0,
              "2097152": 67109120,
              "3145728": 65796,
              "4194304": 65540,
              "5242880": 67108868,
              "6291456": 67174660,
              "7340032": 67174400,
              "8388608": 67108864,
              "9437184": 67174656,
              "10485760": 65792,
              "11534336": 67174404,
              "12582912": 67109124,
              "13631488": 65536,
              "14680064": 4,
              "15728640": 256,
              "524288": 67174656,
              "1572864": 67174404,
              "2621440": 0,
              "3670016": 67109120,
              "4718592": 67108868,
              "5767168": 65536,
              "6815744": 65540,
              "7864320": 260,
              "8912896": 4,
              "9961472": 256,
              "11010048": 67174400,
              "12058624": 65796,
              "13107200": 65792,
              "14155776": 67109124,
              "15204352": 67174660,
              "16252928": 67108864,
              "16777216": 67174656,
              "17825792": 65540,
              "18874368": 65536,
              "19922944": 67109120,
              "20971520": 256,
              "22020096": 67174660,
              "23068672": 67108868,
              "24117248": 0,
              "25165824": 67109124,
              "26214400": 67108864,
              "27262976": 4,
              "28311552": 65792,
              "29360128": 67174400,
              "30408704": 260,
              "31457280": 65796,
              "32505856": 67174404,
              "17301504": 67108864,
              "18350080": 260,
              "19398656": 67174656,
              "20447232": 0,
              "21495808": 65540,
              "22544384": 67109120,
              "23592960": 256,
              "24641536": 67174404,
              "25690112": 65536,
              "26738688": 67174660,
              "27787264": 65796,
              "28835840": 67108868,
              "29884416": 67109124,
              "30932992": 67174400,
              "31981568": 4,
              "33030144": 65792
            }, {
              "0": 2151682048,
              "65536": 2147487808,
              "131072": 4198464,
              "196608": 2151677952,
              "262144": 0,
              "327680": 4198400,
              "393216": 2147483712,
              "458752": 4194368,
              "524288": 2147483648,
              "589824": 4194304,
              "655360": 64,
              "720896": 2147487744,
              "786432": 2151678016,
              "851968": 4160,
              "917504": 4096,
              "983040": 2151682112,
              "32768": 2147487808,
              "98304": 64,
              "163840": 2151678016,
              "229376": 2147487744,
              "294912": 4198400,
              "360448": 2151682112,
              "425984": 0,
              "491520": 2151677952,
              "557056": 4096,
              "622592": 2151682048,
              "688128": 4194304,
              "753664": 4160,
              "819200": 2147483648,
              "884736": 4194368,
              "950272": 4198464,
              "1015808": 2147483712,
              "1048576": 4194368,
              "1114112": 4198400,
              "1179648": 2147483712,
              "1245184": 0,
              "1310720": 4160,
              "1376256": 2151678016,
              "1441792": 2151682048,
              "1507328": 2147487808,
              "1572864": 2151682112,
              "1638400": 2147483648,
              "1703936": 2151677952,
              "1769472": 4198464,
              "1835008": 2147487744,
              "1900544": 4194304,
              "1966080": 64,
              "2031616": 4096,
              "1081344": 2151677952,
              "1146880": 2151682112,
              "1212416": 0,
              "1277952": 4198400,
              "1343488": 4194368,
              "1409024": 2147483648,
              "1474560": 2147487808,
              "1540096": 64,
              "1605632": 2147483712,
              "1671168": 4096,
              "1736704": 2147487744,
              "1802240": 2151678016,
              "1867776": 4160,
              "1933312": 2151682048,
              "1998848": 4194304,
              "2064384": 4198464
            }, {
              "0": 128,
              "4096": 17039360,
              "8192": 262144,
              "12288": 536870912,
              "16384": 537133184,
              "20480": 16777344,
              "24576": 553648256,
              "28672": 262272,
              "32768": 16777216,
              "36864": 537133056,
              "40960": 536871040,
              "45056": 553910400,
              "49152": 553910272,
              "53248": 0,
              "57344": 17039488,
              "61440": 553648128,
              "2048": 17039488,
              "6144": 553648256,
              "10240": 128,
              "14336": 17039360,
              "18432": 262144,
              "22528": 537133184,
              "26624": 553910272,
              "30720": 536870912,
              "34816": 537133056,
              "38912": 0,
              "43008": 553910400,
              "47104": 16777344,
              "51200": 536871040,
              "55296": 553648128,
              "59392": 16777216,
              "63488": 262272,
              "65536": 262144,
              "69632": 128,
              "73728": 536870912,
              "77824": 553648256,
              "81920": 16777344,
              "86016": 553910272,
              "90112": 537133184,
              "94208": 16777216,
              "98304": 553910400,
              "102400": 553648128,
              "106496": 17039360,
              "110592": 537133056,
              "114688": 262272,
              "118784": 536871040,
              "122880": 0,
              "126976": 17039488,
              "67584": 553648256,
              "71680": 16777216,
              "75776": 17039360,
              "79872": 537133184,
              "83968": 536870912,
              "88064": 17039488,
              "92160": 128,
              "96256": 553910272,
              "100352": 262272,
              "104448": 553910400,
              "108544": 0,
              "112640": 553648128,
              "116736": 16777344,
              "120832": 262144,
              "124928": 537133056,
              "129024": 536871040
            }, {
              "0": 268435464,
              "256": 8192,
              "512": 270532608,
              "768": 270540808,
              "1024": 268443648,
              "1280": 2097152,
              "1536": 2097160,
              "1792": 268435456,
              "2048": 0,
              "2304": 268443656,
              "2560": 2105344,
              "2816": 8,
              "3072": 270532616,
              "3328": 2105352,
              "3584": 8200,
              "3840": 270540800,
              "128": 270532608,
              "384": 270540808,
              "640": 8,
              "896": 2097152,
              "1152": 2105352,
              "1408": 268435464,
              "1664": 268443648,
              "1920": 8200,
              "2176": 2097160,
              "2432": 8192,
              "2688": 268443656,
              "2944": 270532616,
              "3200": 0,
              "3456": 270540800,
              "3712": 2105344,
              "3968": 268435456,
              "4096": 268443648,
              "4352": 270532616,
              "4608": 270540808,
              "4864": 8200,
              "5120": 2097152,
              "5376": 268435456,
              "5632": 268435464,
              "5888": 2105344,
              "6144": 2105352,
              "6400": 0,
              "6656": 8,
              "6912": 270532608,
              "7168": 8192,
              "7424": 268443656,
              "7680": 270540800,
              "7936": 2097160,
              "4224": 8,
              "4480": 2105344,
              "4736": 2097152,
              "4992": 268435464,
              "5248": 268443648,
              "5504": 8200,
              "5760": 270540808,
              "6016": 270532608,
              "6272": 270540800,
              "6528": 270532616,
              "6784": 8192,
              "7040": 2105352,
              "7296": 2097160,
              "7552": 0,
              "7808": 268435456,
              "8064": 268443656
            }, {
              "0": 1048576,
              "16": 33555457,
              "32": 1024,
              "48": 1049601,
              "64": 34604033,
              "80": 0,
              "96": 1,
              "112": 34603009,
              "128": 33555456,
              "144": 1048577,
              "160": 33554433,
              "176": 34604032,
              "192": 34603008,
              "208": 1025,
              "224": 1049600,
              "240": 33554432,
              "8": 34603009,
              "24": 0,
              "40": 33555457,
              "56": 34604032,
              "72": 1048576,
              "88": 33554433,
              "104": 33554432,
              "120": 1025,
              "136": 1049601,
              "152": 33555456,
              "168": 34603008,
              "184": 1048577,
              "200": 1024,
              "216": 34604033,
              "232": 1,
              "248": 1049600,
              "256": 33554432,
              "272": 1048576,
              "288": 33555457,
              "304": 34603009,
              "320": 1048577,
              "336": 33555456,
              "352": 34604032,
              "368": 1049601,
              "384": 1025,
              "400": 34604033,
              "416": 1049600,
              "432": 1,
              "448": 0,
              "464": 34603008,
              "480": 33554433,
              "496": 1024,
              "264": 1049600,
              "280": 33555457,
              "296": 34603009,
              "312": 1,
              "328": 33554432,
              "344": 1048576,
              "360": 1025,
              "376": 34604032,
              "392": 33554433,
              "408": 34603008,
              "424": 0,
              "440": 34604033,
              "456": 1049601,
              "472": 1024,
              "488": 33555456,
              "504": 1048577
            }, {
              "0": 134219808,
              "1": 131072,
              "2": 134217728,
              "3": 32,
              "4": 131104,
              "5": 134350880,
              "6": 134350848,
              "7": 2048,
              "8": 134348800,
              "9": 134219776,
              "10": 133120,
              "11": 134348832,
              "12": 2080,
              "13": 0,
              "14": 134217760,
              "15": 133152,
              "2147483648": 2048,
              "2147483649": 134350880,
              "2147483650": 134219808,
              "2147483651": 134217728,
              "2147483652": 134348800,
              "2147483653": 133120,
              "2147483654": 133152,
              "2147483655": 32,
              "2147483656": 134217760,
              "2147483657": 2080,
              "2147483658": 131104,
              "2147483659": 134350848,
              "2147483660": 0,
              "2147483661": 134348832,
              "2147483662": 134219776,
              "2147483663": 131072,
              "16": 133152,
              "17": 134350848,
              "18": 32,
              "19": 2048,
              "20": 134219776,
              "21": 134217760,
              "22": 134348832,
              "23": 131072,
              "24": 0,
              "25": 131104,
              "26": 134348800,
              "27": 134219808,
              "28": 134350880,
              "29": 133120,
              "30": 2080,
              "31": 134217728,
              "2147483664": 131072,
              "2147483665": 2048,
              "2147483666": 134348832,
              "2147483667": 133152,
              "2147483668": 32,
              "2147483669": 134348800,
              "2147483670": 134217728,
              "2147483671": 134219808,
              "2147483672": 134350880,
              "2147483673": 134217760,
              "2147483674": 134219776,
              "2147483675": 0,
              "2147483676": 133120,
              "2147483677": 2080,
              "2147483678": 131104,
              "2147483679": 134350848
            }];
            var _0x1a35d8 = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679];
            var _0x283431 = _0x575c53.DES = _0xe0e96c.extend({
              _doReset: function () {
                var _0xed50a9 = this._key;
                var _0x229032 = _0xed50a9.words;
                var _0x292fa4 = [];
                for (var _0x3f91c5 = 0; _0x3f91c5 < 56; _0x3f91c5++) {
                  var _0x1d750a = _0x327b41[_0x3f91c5] - 1;
                  _0x292fa4[_0x3f91c5] = _0x229032[_0x1d750a >>> 5] >>> 31 - _0x1d750a % 32 & 1;
                }
                var _0x12ed13 = this._subKeys = [];
                for (var _0x2f499c = 0; _0x2f499c < 16; _0x2f499c++) {
                  var _0x14b43 = _0x12ed13[_0x2f499c] = [];
                  var _0x518458 = _0x314243[_0x2f499c];
                  for (var _0x3f91c5 = 0; _0x3f91c5 < 24; _0x3f91c5++) {
                    _0x14b43[_0x3f91c5 / 6 | 0] |= _0x292fa4[(_0xb699dd[_0x3f91c5] - 1 + _0x518458) % 28] << 31 - _0x3f91c5 % 6;
                    _0x14b43[4 + (_0x3f91c5 / 6 | 0)] |= _0x292fa4[28 + (_0xb699dd[_0x3f91c5 + 24] - 1 + _0x518458) % 28] << 31 - _0x3f91c5 % 6;
                  }
                  _0x14b43[0] = _0x14b43[0] << 1 | _0x14b43[0] >>> 31;
                  for (var _0x3f91c5 = 1; _0x3f91c5 < 7; _0x3f91c5++) {
                    _0x14b43[_0x3f91c5] = _0x14b43[_0x3f91c5] >>> (_0x3f91c5 - 1) * 4 + 3;
                  }
                  _0x14b43[7] = _0x14b43[7] << 5 | _0x14b43[7] >>> 27;
                }
                var _0x43dbbe = this._invSubKeys = [];
                for (var _0x3f91c5 = 0; _0x3f91c5 < 16; _0x3f91c5++) {
                  _0x43dbbe[_0x3f91c5] = _0x12ed13[15 - _0x3f91c5];
                }
              },
              encryptBlock: function (_0x180e42, _0x21dc47) {
                this._doCryptBlock(_0x180e42, _0x21dc47, this._subKeys);
              },
              decryptBlock: function (_0x441822, _0x5a158f) {
                this._doCryptBlock(_0x441822, _0x5a158f, this._invSubKeys);
              },
              _doCryptBlock: function (_0x49add3, _0x4a877f, _0x231e9d) {
                this._lBlock = _0x49add3[_0x4a877f];
                this._rBlock = _0x49add3[_0x4a877f + 1];
                _0x13ff16.call(this, 4, 252645135);
                _0x13ff16.call(this, 16, 65535);
                _0x4bf42e.call(this, 2, 858993459);
                _0x4bf42e.call(this, 8, 16711935);
                _0x13ff16.call(this, 1, 1431655765);
                for (var _0x485751 = 0; _0x485751 < 16; _0x485751++) {
                  var _0x1df99f = _0x231e9d[_0x485751];
                  var _0x98be59 = this._lBlock;
                  var _0x4bf30a = this._rBlock;
                  var _0x778efd = 0;
                  for (var _0x36dfde = 0; _0x36dfde < 8; _0x36dfde++) {
                    _0x778efd |= _0x1f2176[_0x36dfde][((_0x4bf30a ^ _0x1df99f[_0x36dfde]) & _0x1a35d8[_0x36dfde]) >>> 0];
                  }
                  this._lBlock = _0x4bf30a;
                  this._rBlock = _0x98be59 ^ _0x778efd;
                }
                var _0x20395b = this._lBlock;
                this._lBlock = this._rBlock;
                this._rBlock = _0x20395b;
                _0x13ff16.call(this, 1, 1431655765);
                _0x4bf42e.call(this, 8, 16711935);
                _0x4bf42e.call(this, 2, 858993459);
                _0x13ff16.call(this, 16, 65535);
                _0x13ff16.call(this, 4, 252645135);
                _0x49add3[_0x4a877f] = this._lBlock;
                _0x49add3[_0x4a877f + 1] = this._rBlock;
              },
              keySize: 2,
              ivSize: 2,
              blockSize: 2
            });
            function _0x13ff16(_0x391400, _0x2b0208) {
              var _0x2128d1 = (this._lBlock >>> _0x391400 ^ this._rBlock) & _0x2b0208;
              this._rBlock ^= _0x2128d1;
              this._lBlock ^= _0x2128d1 << _0x391400;
            }
            function _0x4bf42e(_0x2d29c5, _0x3170d0) {
              var _0x503c2a = (this._rBlock >>> _0x2d29c5 ^ this._lBlock) & _0x3170d0;
              this._lBlock ^= _0x503c2a;
              this._rBlock ^= _0x503c2a << _0x2d29c5;
            }
            _0x5d1243.DES = _0xe0e96c._createHelper(_0x283431);
            var _0x5760d0 = _0x575c53.TripleDES = _0xe0e96c.extend({
              _doReset: function () {
                var _0x3bad2d = this._key;
                var _0x5a357c = _0x3bad2d.words;
                this._des1 = _0x283431.createEncryptor(_0x3e9f99.create(_0x5a357c.slice(0, 2)));
                this._des2 = _0x283431.createEncryptor(_0x3e9f99.create(_0x5a357c.slice(2, 4)));
                this._des3 = _0x283431.createEncryptor(_0x3e9f99.create(_0x5a357c.slice(4, 6)));
              },
              encryptBlock: function (_0x12beef, _0xd9d276) {
                this._des1.encryptBlock(_0x12beef, _0xd9d276);
                this._des2.decryptBlock(_0x12beef, _0xd9d276);
                this._des3.encryptBlock(_0x12beef, _0xd9d276);
              },
              decryptBlock: function (_0x452b37, _0xdce5e1) {
                this._des3.decryptBlock(_0x452b37, _0xdce5e1);
                this._des2.encryptBlock(_0x452b37, _0xdce5e1);
                this._des1.decryptBlock(_0x452b37, _0xdce5e1);
              },
              keySize: 6,
              ivSize: 2,
              blockSize: 2
            });
            _0x5d1243.TripleDES = _0xe0e96c._createHelper(_0x5760d0);
          })();
          return _0x34bff0.TripleDES;
        });
      }
    });
    var _0x47e3a6 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/rc4.js"(_0x919642, _0x5f3a9a) {
        'use strict';

        (function (_0x56d685, _0x234880, _0x16a38d) {
          if (typeof _0x919642 === "object") {
            _0x5f3a9a.exports = _0x919642 = _0x234880(_0x2354f1(), _0x3102d9(), _0x48305a(), _0x53b70f(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x234880);
          } else {
            _0x234880(_0x56d685.CryptoJS);
          }
        })(_0x919642, function (_0x2c64c7) {
          (function () {
            var _0x1c37a2 = _0x2c64c7;
            var _0x198444 = _0x1c37a2.lib;
            var _0x22bc12 = _0x198444.StreamCipher;
            var _0x4eac24 = _0x1c37a2.algo;
            var _0x9f6a2b = _0x4eac24.RC4 = _0x22bc12.extend({
              _doReset: function () {
                var _0x34bd69 = this._key;
                var _0x50a3c4 = _0x34bd69.words;
                var _0x244fb5 = _0x34bd69.sigBytes;
                var _0x3b78d6 = this._S = [];
                for (var _0x1564ed = 0; _0x1564ed < 256; _0x1564ed++) {
                  _0x3b78d6[_0x1564ed] = _0x1564ed;
                }
                for (var _0x1564ed = 0, _0x475d09 = 0; _0x1564ed < 256; _0x1564ed++) {
                  var _0x16e389 = _0x1564ed % _0x244fb5;
                  var _0x258c5f = _0x50a3c4[_0x16e389 >>> 2] >>> 24 - _0x16e389 % 4 * 8 & 255;
                  _0x475d09 = (_0x475d09 + _0x3b78d6[_0x1564ed] + _0x258c5f) % 256;
                  var _0xee99b1 = _0x3b78d6[_0x1564ed];
                  _0x3b78d6[_0x1564ed] = _0x3b78d6[_0x475d09];
                  _0x3b78d6[_0x475d09] = _0xee99b1;
                }
                this._i = this._j = 0;
              },
              _doProcessBlock: function (_0x98e27a, _0x1eb350) {
                _0x98e27a[_0x1eb350] ^= _0x26bb41.call(this);
              },
              keySize: 8,
              ivSize: 0
            });
            function _0x26bb41() {
              var _0x28c3af = this._S;
              var _0x4ed812 = this._i;
              var _0x59a3bc = this._j;
              var _0x314e78 = 0;
              for (var _0x39c1dc = 0; _0x39c1dc < 4; _0x39c1dc++) {
                _0x4ed812 = (_0x4ed812 + 1) % 256;
                _0x59a3bc = (_0x59a3bc + _0x28c3af[_0x4ed812]) % 256;
                var _0x5589b8 = _0x28c3af[_0x4ed812];
                _0x28c3af[_0x4ed812] = _0x28c3af[_0x59a3bc];
                _0x28c3af[_0x59a3bc] = _0x5589b8;
                _0x314e78 |= _0x28c3af[(_0x28c3af[_0x4ed812] + _0x28c3af[_0x59a3bc]) % 256] << 24 - _0x39c1dc * 8;
              }
              this._i = _0x4ed812;
              this._j = _0x59a3bc;
              return _0x314e78;
            }
            _0x1c37a2.RC4 = _0x22bc12._createHelper(_0x9f6a2b);
            var _0x2bfeb1 = _0x4eac24.RC4Drop = _0x9f6a2b.extend({
              cfg: _0x9f6a2b.cfg.extend({
                drop: 192
              }),
              _doReset: function () {
                _0x9f6a2b._doReset.call(this);
                for (var _0x162586 = this.cfg.drop; _0x162586 > 0; _0x162586--) {
                  _0x26bb41.call(this);
                }
              }
            });
            _0x1c37a2.RC4Drop = _0x22bc12._createHelper(_0x2bfeb1);
          })();
          return _0x2c64c7.RC4;
        });
      }
    });
    var _0x55a68a = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/rabbit.js"(_0x54095c, _0xdeeb8c) {
        'use strict';

        (function (_0x4961bf, _0x413554, _0x5b0503) {
          if (typeof _0x54095c === "object") {
            _0xdeeb8c.exports = _0x54095c = _0x413554(_0x2354f1(), _0x3102d9(), _0x48305a(), _0x53b70f(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x413554);
          } else {
            _0x413554(_0x4961bf.CryptoJS);
          }
        })(_0x54095c, function (_0x36d8c3) {
          (function () {
            var _0x404044 = _0x36d8c3;
            var _0x4b64cb = _0x404044.lib;
            var _0xed4851 = _0x4b64cb.StreamCipher;
            var _0x2d370b = _0x404044.algo;
            var _0x3b0c64 = [];
            var _0x5e0094 = [];
            var _0x289046 = [];
            var _0x2ab06f = _0x2d370b.Rabbit = _0xed4851.extend({
              _doReset: function () {
                var _0x3883f0 = this._key.words;
                var _0x3312f5 = this.cfg.iv;
                for (var _0x2b0270 = 0; _0x2b0270 < 4; _0x2b0270++) {
                  _0x3883f0[_0x2b0270] = (_0x3883f0[_0x2b0270] << 8 | _0x3883f0[_0x2b0270] >>> 24) & 16711935 | (_0x3883f0[_0x2b0270] << 24 | _0x3883f0[_0x2b0270] >>> 8) & 4278255360;
                }
                var _0x49910f = this._X = [_0x3883f0[0], _0x3883f0[3] << 16 | _0x3883f0[2] >>> 16, _0x3883f0[1], _0x3883f0[0] << 16 | _0x3883f0[3] >>> 16, _0x3883f0[2], _0x3883f0[1] << 16 | _0x3883f0[0] >>> 16, _0x3883f0[3], _0x3883f0[2] << 16 | _0x3883f0[1] >>> 16];
                var _0x8e3f77 = this._C = [_0x3883f0[2] << 16 | _0x3883f0[2] >>> 16, _0x3883f0[0] & 4294901760 | _0x3883f0[1] & 65535, _0x3883f0[3] << 16 | _0x3883f0[3] >>> 16, _0x3883f0[1] & 4294901760 | _0x3883f0[2] & 65535, _0x3883f0[0] << 16 | _0x3883f0[0] >>> 16, _0x3883f0[2] & 4294901760 | _0x3883f0[3] & 65535, _0x3883f0[1] << 16 | _0x3883f0[1] >>> 16, _0x3883f0[3] & 4294901760 | _0x3883f0[0] & 65535];
                this._b = 0;
                for (var _0x2b0270 = 0; _0x2b0270 < 4; _0x2b0270++) {
                  _0x71f46f.call(this);
                }
                for (var _0x2b0270 = 0; _0x2b0270 < 8; _0x2b0270++) {
                  _0x8e3f77[_0x2b0270] ^= _0x49910f[_0x2b0270 + 4 & 7];
                }
                if (_0x3312f5) {
                  var _0x49b2f3 = _0x3312f5.words;
                  var _0x4d64ac = _0x49b2f3[0];
                  var _0x3d7a2b = _0x49b2f3[1];
                  var _0x50c51a = (_0x4d64ac << 8 | _0x4d64ac >>> 24) & 16711935 | (_0x4d64ac << 24 | _0x4d64ac >>> 8) & 4278255360;
                  var _0x5e3287 = (_0x3d7a2b << 8 | _0x3d7a2b >>> 24) & 16711935 | (_0x3d7a2b << 24 | _0x3d7a2b >>> 8) & 4278255360;
                  var _0x55cc8c = _0x50c51a >>> 16 | _0x5e3287 & 4294901760;
                  var _0x4b16d8 = _0x5e3287 << 16 | _0x50c51a & 65535;
                  _0x8e3f77[0] ^= _0x50c51a;
                  _0x8e3f77[1] ^= _0x55cc8c;
                  _0x8e3f77[2] ^= _0x5e3287;
                  _0x8e3f77[3] ^= _0x4b16d8;
                  _0x8e3f77[4] ^= _0x50c51a;
                  _0x8e3f77[5] ^= _0x55cc8c;
                  _0x8e3f77[6] ^= _0x5e3287;
                  _0x8e3f77[7] ^= _0x4b16d8;
                  for (var _0x2b0270 = 0; _0x2b0270 < 4; _0x2b0270++) {
                    _0x71f46f.call(this);
                  }
                }
              },
              _doProcessBlock: function (_0x105317, _0x18e1b6) {
                var _0x493027 = this._X;
                _0x71f46f.call(this);
                _0x3b0c64[0] = _0x493027[0] ^ _0x493027[5] >>> 16 ^ _0x493027[3] << 16;
                _0x3b0c64[1] = _0x493027[2] ^ _0x493027[7] >>> 16 ^ _0x493027[5] << 16;
                _0x3b0c64[2] = _0x493027[4] ^ _0x493027[1] >>> 16 ^ _0x493027[7] << 16;
                _0x3b0c64[3] = _0x493027[6] ^ _0x493027[3] >>> 16 ^ _0x493027[1] << 16;
                for (var _0x3e5cec = 0; _0x3e5cec < 4; _0x3e5cec++) {
                  _0x3b0c64[_0x3e5cec] = (_0x3b0c64[_0x3e5cec] << 8 | _0x3b0c64[_0x3e5cec] >>> 24) & 16711935 | (_0x3b0c64[_0x3e5cec] << 24 | _0x3b0c64[_0x3e5cec] >>> 8) & 4278255360;
                  _0x105317[_0x18e1b6 + _0x3e5cec] ^= _0x3b0c64[_0x3e5cec];
                }
              },
              blockSize: 4,
              ivSize: 2
            });
            function _0x71f46f() {
              var _0x402169 = this._X;
              var _0x33d97c = this._C;
              for (var _0x23759a = 0; _0x23759a < 8; _0x23759a++) {
                _0x5e0094[_0x23759a] = _0x33d97c[_0x23759a];
              }
              _0x33d97c[0] = _0x33d97c[0] + 1295307597 + this._b | 0;
              _0x33d97c[1] = _0x33d97c[1] + 3545052371 + (_0x33d97c[0] >>> 0 < _0x5e0094[0] >>> 0 ? 1 : 0) | 0;
              _0x33d97c[2] = _0x33d97c[2] + 886263092 + (_0x33d97c[1] >>> 0 < _0x5e0094[1] >>> 0 ? 1 : 0) | 0;
              _0x33d97c[3] = _0x33d97c[3] + 1295307597 + (_0x33d97c[2] >>> 0 < _0x5e0094[2] >>> 0 ? 1 : 0) | 0;
              _0x33d97c[4] = _0x33d97c[4] + 3545052371 + (_0x33d97c[3] >>> 0 < _0x5e0094[3] >>> 0 ? 1 : 0) | 0;
              _0x33d97c[5] = _0x33d97c[5] + 886263092 + (_0x33d97c[4] >>> 0 < _0x5e0094[4] >>> 0 ? 1 : 0) | 0;
              _0x33d97c[6] = _0x33d97c[6] + 1295307597 + (_0x33d97c[5] >>> 0 < _0x5e0094[5] >>> 0 ? 1 : 0) | 0;
              _0x33d97c[7] = _0x33d97c[7] + 3545052371 + (_0x33d97c[6] >>> 0 < _0x5e0094[6] >>> 0 ? 1 : 0) | 0;
              this._b = _0x33d97c[7] >>> 0 < _0x5e0094[7] >>> 0 ? 1 : 0;
              for (var _0x23759a = 0; _0x23759a < 8; _0x23759a++) {
                var _0x5c97d7 = _0x402169[_0x23759a] + _0x33d97c[_0x23759a];
                var _0x17ae2b = _0x5c97d7 & 65535;
                var _0x429b17 = _0x5c97d7 >>> 16;
                var _0x51bb90 = ((_0x17ae2b * _0x17ae2b >>> 17) + _0x17ae2b * _0x429b17 >>> 15) + _0x429b17 * _0x429b17;
                var _0x46b5a8 = ((_0x5c97d7 & 4294901760) * _0x5c97d7 | 0) + ((_0x5c97d7 & 65535) * _0x5c97d7 | 0);
                _0x289046[_0x23759a] = _0x51bb90 ^ _0x46b5a8;
              }
              _0x402169[0] = _0x289046[0] + (_0x289046[7] << 16 | _0x289046[7] >>> 16) + (_0x289046[6] << 16 | _0x289046[6] >>> 16) | 0;
              _0x402169[1] = _0x289046[1] + (_0x289046[0] << 8 | _0x289046[0] >>> 24) + _0x289046[7] | 0;
              _0x402169[2] = _0x289046[2] + (_0x289046[1] << 16 | _0x289046[1] >>> 16) + (_0x289046[0] << 16 | _0x289046[0] >>> 16) | 0;
              _0x402169[3] = _0x289046[3] + (_0x289046[2] << 8 | _0x289046[2] >>> 24) + _0x289046[1] | 0;
              _0x402169[4] = _0x289046[4] + (_0x289046[3] << 16 | _0x289046[3] >>> 16) + (_0x289046[2] << 16 | _0x289046[2] >>> 16) | 0;
              _0x402169[5] = _0x289046[5] + (_0x289046[4] << 8 | _0x289046[4] >>> 24) + _0x289046[3] | 0;
              _0x402169[6] = _0x289046[6] + (_0x289046[5] << 16 | _0x289046[5] >>> 16) + (_0x289046[4] << 16 | _0x289046[4] >>> 16) | 0;
              _0x402169[7] = _0x289046[7] + (_0x289046[6] << 8 | _0x289046[6] >>> 24) + _0x289046[5] | 0;
            }
            _0x404044.Rabbit = _0xed4851._createHelper(_0x2ab06f);
          })();
          return _0x36d8c3.Rabbit;
        });
      }
    });
    var _0x5e3d98 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/rabbit-legacy.js"(_0x493910, _0x40afbc) {
        'use strict';

        (function (_0x4e8c69, _0x5d6f7a, _0x41bef7) {
          if (typeof _0x493910 === "object") {
            _0x40afbc.exports = _0x493910 = _0x5d6f7a(_0x2354f1(), _0x3102d9(), _0x48305a(), _0x53b70f(), _0xa51537());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x5d6f7a);
          } else {
            _0x5d6f7a(_0x4e8c69.CryptoJS);
          }
        })(_0x493910, function (_0x1ead82) {
          (function () {
            var _0x256cc5 = _0x1ead82;
            var _0x28775b = _0x256cc5.lib;
            var _0x580610 = _0x28775b.StreamCipher;
            var _0x12c06c = _0x256cc5.algo;
            var _0x5e95e8 = [];
            var _0x37f6f9 = [];
            var _0x3a3c41 = [];
            var _0x56abbd = _0x12c06c.RabbitLegacy = _0x580610.extend({
              _doReset: function () {
                var _0x2409be = this._key.words;
                var _0x50fa97 = this.cfg.iv;
                var _0xae3076 = this._X = [_0x2409be[0], _0x2409be[3] << 16 | _0x2409be[2] >>> 16, _0x2409be[1], _0x2409be[0] << 16 | _0x2409be[3] >>> 16, _0x2409be[2], _0x2409be[1] << 16 | _0x2409be[0] >>> 16, _0x2409be[3], _0x2409be[2] << 16 | _0x2409be[1] >>> 16];
                var _0x528492 = this._C = [_0x2409be[2] << 16 | _0x2409be[2] >>> 16, _0x2409be[0] & 4294901760 | _0x2409be[1] & 65535, _0x2409be[3] << 16 | _0x2409be[3] >>> 16, _0x2409be[1] & 4294901760 | _0x2409be[2] & 65535, _0x2409be[0] << 16 | _0x2409be[0] >>> 16, _0x2409be[2] & 4294901760 | _0x2409be[3] & 65535, _0x2409be[1] << 16 | _0x2409be[1] >>> 16, _0x2409be[3] & 4294901760 | _0x2409be[0] & 65535];
                this._b = 0;
                for (var _0x55c71b = 0; _0x55c71b < 4; _0x55c71b++) {
                  _0x5cddc0.call(this);
                }
                for (var _0x55c71b = 0; _0x55c71b < 8; _0x55c71b++) {
                  _0x528492[_0x55c71b] ^= _0xae3076[_0x55c71b + 4 & 7];
                }
                if (_0x50fa97) {
                  var _0x323b7a = _0x50fa97.words;
                  var _0x1214ec = _0x323b7a[0];
                  var _0x58f4d3 = _0x323b7a[1];
                  var _0x1420f8 = (_0x1214ec << 8 | _0x1214ec >>> 24) & 16711935 | (_0x1214ec << 24 | _0x1214ec >>> 8) & 4278255360;
                  var _0x3fa9c0 = (_0x58f4d3 << 8 | _0x58f4d3 >>> 24) & 16711935 | (_0x58f4d3 << 24 | _0x58f4d3 >>> 8) & 4278255360;
                  var _0x3790de = _0x1420f8 >>> 16 | _0x3fa9c0 & 4294901760;
                  var _0x45a44d = _0x3fa9c0 << 16 | _0x1420f8 & 65535;
                  _0x528492[0] ^= _0x1420f8;
                  _0x528492[1] ^= _0x3790de;
                  _0x528492[2] ^= _0x3fa9c0;
                  _0x528492[3] ^= _0x45a44d;
                  _0x528492[4] ^= _0x1420f8;
                  _0x528492[5] ^= _0x3790de;
                  _0x528492[6] ^= _0x3fa9c0;
                  _0x528492[7] ^= _0x45a44d;
                  for (var _0x55c71b = 0; _0x55c71b < 4; _0x55c71b++) {
                    _0x5cddc0.call(this);
                  }
                }
              },
              _doProcessBlock: function (_0x5b77bc, _0x1df128) {
                var _0x11e479 = this._X;
                _0x5cddc0.call(this);
                _0x5e95e8[0] = _0x11e479[0] ^ _0x11e479[5] >>> 16 ^ _0x11e479[3] << 16;
                _0x5e95e8[1] = _0x11e479[2] ^ _0x11e479[7] >>> 16 ^ _0x11e479[5] << 16;
                _0x5e95e8[2] = _0x11e479[4] ^ _0x11e479[1] >>> 16 ^ _0x11e479[7] << 16;
                _0x5e95e8[3] = _0x11e479[6] ^ _0x11e479[3] >>> 16 ^ _0x11e479[1] << 16;
                for (var _0x44d5c0 = 0; _0x44d5c0 < 4; _0x44d5c0++) {
                  _0x5e95e8[_0x44d5c0] = (_0x5e95e8[_0x44d5c0] << 8 | _0x5e95e8[_0x44d5c0] >>> 24) & 16711935 | (_0x5e95e8[_0x44d5c0] << 24 | _0x5e95e8[_0x44d5c0] >>> 8) & 4278255360;
                  _0x5b77bc[_0x1df128 + _0x44d5c0] ^= _0x5e95e8[_0x44d5c0];
                }
              },
              blockSize: 4,
              ivSize: 2
            });
            function _0x5cddc0() {
              var _0x1ad3b6 = this._X;
              var _0xd41709 = this._C;
              for (var _0x42d714 = 0; _0x42d714 < 8; _0x42d714++) {
                _0x37f6f9[_0x42d714] = _0xd41709[_0x42d714];
              }
              _0xd41709[0] = _0xd41709[0] + 1295307597 + this._b | 0;
              _0xd41709[1] = _0xd41709[1] + 3545052371 + (_0xd41709[0] >>> 0 < _0x37f6f9[0] >>> 0 ? 1 : 0) | 0;
              _0xd41709[2] = _0xd41709[2] + 886263092 + (_0xd41709[1] >>> 0 < _0x37f6f9[1] >>> 0 ? 1 : 0) | 0;
              _0xd41709[3] = _0xd41709[3] + 1295307597 + (_0xd41709[2] >>> 0 < _0x37f6f9[2] >>> 0 ? 1 : 0) | 0;
              _0xd41709[4] = _0xd41709[4] + 3545052371 + (_0xd41709[3] >>> 0 < _0x37f6f9[3] >>> 0 ? 1 : 0) | 0;
              _0xd41709[5] = _0xd41709[5] + 886263092 + (_0xd41709[4] >>> 0 < _0x37f6f9[4] >>> 0 ? 1 : 0) | 0;
              _0xd41709[6] = _0xd41709[6] + 1295307597 + (_0xd41709[5] >>> 0 < _0x37f6f9[5] >>> 0 ? 1 : 0) | 0;
              _0xd41709[7] = _0xd41709[7] + 3545052371 + (_0xd41709[6] >>> 0 < _0x37f6f9[6] >>> 0 ? 1 : 0) | 0;
              this._b = _0xd41709[7] >>> 0 < _0x37f6f9[7] >>> 0 ? 1 : 0;
              for (var _0x42d714 = 0; _0x42d714 < 8; _0x42d714++) {
                var _0x394d84 = _0x1ad3b6[_0x42d714] + _0xd41709[_0x42d714];
                var _0x20dd0e = _0x394d84 & 65535;
                var _0xfa491b = _0x394d84 >>> 16;
                var _0x5c6af8 = ((_0x20dd0e * _0x20dd0e >>> 17) + _0x20dd0e * _0xfa491b >>> 15) + _0xfa491b * _0xfa491b;
                var _0x48a782 = ((_0x394d84 & 4294901760) * _0x394d84 | 0) + ((_0x394d84 & 65535) * _0x394d84 | 0);
                _0x3a3c41[_0x42d714] = _0x5c6af8 ^ _0x48a782;
              }
              _0x1ad3b6[0] = _0x3a3c41[0] + (_0x3a3c41[7] << 16 | _0x3a3c41[7] >>> 16) + (_0x3a3c41[6] << 16 | _0x3a3c41[6] >>> 16) | 0;
              _0x1ad3b6[1] = _0x3a3c41[1] + (_0x3a3c41[0] << 8 | _0x3a3c41[0] >>> 24) + _0x3a3c41[7] | 0;
              _0x1ad3b6[2] = _0x3a3c41[2] + (_0x3a3c41[1] << 16 | _0x3a3c41[1] >>> 16) + (_0x3a3c41[0] << 16 | _0x3a3c41[0] >>> 16) | 0;
              _0x1ad3b6[3] = _0x3a3c41[3] + (_0x3a3c41[2] << 8 | _0x3a3c41[2] >>> 24) + _0x3a3c41[1] | 0;
              _0x1ad3b6[4] = _0x3a3c41[4] + (_0x3a3c41[3] << 16 | _0x3a3c41[3] >>> 16) + (_0x3a3c41[2] << 16 | _0x3a3c41[2] >>> 16) | 0;
              _0x1ad3b6[5] = _0x3a3c41[5] + (_0x3a3c41[4] << 8 | _0x3a3c41[4] >>> 24) + _0x3a3c41[3] | 0;
              _0x1ad3b6[6] = _0x3a3c41[6] + (_0x3a3c41[5] << 16 | _0x3a3c41[5] >>> 16) + (_0x3a3c41[4] << 16 | _0x3a3c41[4] >>> 16) | 0;
              _0x1ad3b6[7] = _0x3a3c41[7] + (_0x3a3c41[6] << 8 | _0x3a3c41[6] >>> 24) + _0x3a3c41[5] | 0;
            }
            _0x256cc5.RabbitLegacy = _0x580610._createHelper(_0x56abbd);
          })();
          return _0x1ead82.RabbitLegacy;
        });
      }
    });
    var _0x45bc90 = _0x45a45b({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/index.js"(_0x50627e, _0x5945d3) {
        'use strict';

        (function (_0x2cd49e, _0x2312ec, _0x3f79e5) {
          if (typeof _0x50627e === "object") {
            _0x5945d3.exports = _0x50627e = _0x2312ec(_0x2354f1(), _0xf0aea5(), _0x2e79ec(), _0x3c327f(), _0x3102d9(), _0x48305a(), _0x1ccb83(), _0x5fc38d(), _0x703d0c(), _0x4f23e1(), _0xdf9168(), _0x7e1b25(), _0x44c5ec(), _0x289fab(), _0x1d97b0(), _0x53b70f(), _0xa51537(), _0x4b4a74(), _0x4c65d2(), _0x1ee0ad(), _0x1b6c4e(), _0x9b847f(), _0x4711e5(), _0x56e38e(), _0xb2ad2c(), _0x430bcf(), _0x540fda(), _0x308b13(), _0xeefcd8(), _0x17fbcf(), _0x47e3a6(), _0x55a68a(), _0x5e3d98());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropadding", "./pad-nopadding", "./format-hex", "./aes", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy"], _0x2312ec);
          } else {
            _0x2cd49e.CryptoJS = _0x2312ec(_0x2cd49e.CryptoJS);
          }
        })(_0x50627e, function (_0x529d77) {
          return _0x529d77;
        });
      }
    });
    var _0x1f76dd = {
      ESC: 322,
      F1: 288,
      F2: 289,
      F3: 170,
      F5: 166,
      F6: 167,
      F7: 168,
      F8: 169,
      F9: 56,
      F10: 57,
      "~": 243,
      "#1": 157,
      "#2": 158,
      "#3": 160,
      "#4": 164,
      "#5": 165,
      "#6": 159,
      "#7": 161,
      "#8": 162,
      "#9": 163,
      "-": 84,
      "=": 83,
      BACKSPACE: 177,
      TAB: 37,
      Q: 44,
      W: 32,
      E: 38,
      R: 45,
      T: 245,
      Y: 246,
      U: 303,
      P: 199,
      ENTER: 18,
      CAPS: 137,
      A: 34,
      S: 8,
      D: 9,
      F: 23,
      G: 47,
      H: 74,
      K: 311,
      L: 182,
      LEFTSHIFT: 21,
      Z: 20,
      X: 73,
      C: 26,
      V: 0,
      B: 29,
      N: 249,
      M: 244,
      ",": 82,
      ".": 81,
      LEFTCTRL: 36,
      LEFTALT: 19,
      SPACE: 22,
      RIGHTCTRL: 70,
      HOME: 213,
      PAGEUP: 10,
      PAGEDOWN: 11,
      DELETE: 178,
      LEFT: 174,
      RIGHT: 175,
      TOP: 27,
      DOWN: 173,
      NENTER: 201,
      N4: 108,
      N5: 60,
      N6: 107,
      "N+": 96,
      "N-": 97,
      N7: 117,
      N8: 61,
      N9: 118
    };
    var _0x2db072 = {};
    var _0x306746 = {
      MathUtils: () => _0x4e99a9
    };
    _0x530d70(_0x2db072, _0x306746);
    var _0x357515;
    var _0x3dbb9b;
    var _0x54d0a0 = class _0x58dc38 {
      constructor(_0xe9e427, _0x244031, _0x4279ec) {
        _0xc69af7(this, _0x357515);
        const _0x41ac69 = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0xe9e427, _0x244031, _0x4279ec);
        this.x = _0x41ac69.x;
        this.y = _0x41ac69.y;
        this.z = _0x41ac69.z;
      }
      equals(_0x43fdad, _0x1cfdd8, _0x5d736d) {
        const _0x11c2be = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0x43fdad, _0x1cfdd8, _0x5d736d);
        return this.x === _0x11c2be.x && this.y === _0x11c2be.y && this.z === _0x11c2be.z;
      }
      add(_0x4205a0, _0x21deef, _0x93635e, _0x5ca0f1) {
        let _0x148d59 = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0x4205a0, _0x21deef, _0x93635e);
        this.x += _0x5ca0f1 ? _0x148d59.x * _0x5ca0f1 : _0x148d59.x;
        this.y += _0x5ca0f1 ? _0x148d59.y * _0x5ca0f1 : _0x148d59.y;
        this.z += _0x5ca0f1 ? _0x148d59.z * _0x5ca0f1 : _0x148d59.z;
        return this;
      }
      addScalar(_0x4095e4) {
        if (typeof _0x4095e4 !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x += _0x4095e4;
        this.y += _0x4095e4;
        this.z += _0x4095e4;
        return this;
      }
      sub(_0x372486, _0x4144db, _0x2d9f04, _0x3c6a42) {
        const _0x332c6b = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0x372486, _0x4144db, _0x2d9f04);
        this.x -= _0x3c6a42 ? _0x332c6b.x * _0x3c6a42 : _0x332c6b.x;
        this.y -= _0x3c6a42 ? _0x332c6b.y * _0x3c6a42 : _0x332c6b.y;
        this.z -= _0x3c6a42 ? _0x332c6b.z * _0x3c6a42 : _0x332c6b.z;
        return this;
      }
      subScalar(_0x258c5b) {
        if (typeof _0x258c5b !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x -= _0x258c5b;
        this.y -= _0x258c5b;
        this.z -= _0x258c5b;
        return this;
      }
      multiply(_0x15274a, _0x1d0adb, _0x256ee9) {
        const _0x4e4184 = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0x15274a, _0x1d0adb, _0x256ee9);
        this.x *= _0x4e4184.x;
        this.y *= _0x4e4184.y;
        this.z *= _0x4e4184.z;
        return this;
      }
      multiplyScalar(_0x11ace1) {
        if (typeof _0x11ace1 !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x *= _0x11ace1;
        this.y *= _0x11ace1;
        this.z *= _0x11ace1;
        return this;
      }
      divide(_0x46aafc, _0x326acd, _0x5bce3c) {
        const _0x428ba8 = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0x46aafc, _0x326acd, _0x5bce3c);
        this.x /= _0x428ba8.x;
        this.y /= _0x428ba8.y;
        this.z /= _0x428ba8.z;
        return this;
      }
      divideScalar(_0x1a4176) {
        if (typeof _0x1a4176 !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x /= _0x1a4176;
        this.y /= _0x1a4176;
        this.z /= _0x1a4176;
        return this;
      }
      round() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
      }
      floor() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
      }
      ceil() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
      }
      getCenter(_0x4bb119, _0xed56c9, _0x545bd6) {
        const _0x38a2e8 = _0x3199c1(this, _0x357515, _0x3dbb9b).call(this, _0x4bb119, _0xed56c9, _0x545bd6);
        return new _0x58dc38((this.x + _0x38a2e8.x) / 2, (this.y + _0x38a2e8.y) / 2, (this.z + _0x38a2e8.z) / 2);
      }
      getDistance(_0x417e3d, _0x44967c, _0x4193b7) {
        const [_0x465ab3, _0x23e346, _0x1a4424] = _0x417e3d instanceof Array ? _0x417e3d : typeof _0x417e3d === "object" ? [_0x417e3d.x, _0x417e3d.y, _0x417e3d.z] : [_0x417e3d, _0x44967c, _0x4193b7];
        if (typeof _0x465ab3 !== "number" || typeof _0x23e346 !== "number" || typeof _0x1a4424 !== "number") {
          throw new Error("Invalid vector coordinates");
        }
        const [_0x3c6252, _0x4ba7d6, _0x3aad08] = [this.x - _0x465ab3, this.y - _0x23e346, this.z - _0x1a4424];
        return Math.sqrt(_0x3c6252 * _0x3c6252 + _0x4ba7d6 * _0x4ba7d6 + _0x3aad08 * _0x3aad08);
      }
      toArray(_0x3b9038) {
        if (typeof _0x3b9038 === "number") {
          return [parseFloat(this.x.toFixed(_0x3b9038)), parseFloat(this.y.toFixed(_0x3b9038)), parseFloat(this.z.toFixed(_0x3b9038))];
        }
        return [this.x, this.y, this.z];
      }
      toJSON(_0x4bf00c) {
        if (typeof _0x4bf00c === "number") {
          return {
            x: parseFloat(this.x.toFixed(_0x4bf00c)),
            y: parseFloat(this.y.toFixed(_0x4bf00c)),
            z: parseFloat(this.z.toFixed(_0x4bf00c))
          };
        }
        var _0x574894 = {
          x: this.x,
          y: this.y,
          z: this.z
        };
        return _0x574894;
      }
      toString(_0x34acd7) {
        return JSON.stringify(this.toJSON(_0x34acd7));
      }
    };
    _0x357515 = new WeakSet();
    _0x3dbb9b = function (_0x437e22, _0x244833, _0x17ff69) {
      let _0xc65af4 = {
        x: 0,
        y: 0,
        z: 0
      };
      if (_0x437e22 instanceof _0x54d0a0) {
        _0xc65af4 = _0x437e22;
      } else if (_0x437e22 instanceof Array) {
        var _0x15e1b6 = {
          x: _0x437e22[0],
          y: _0x437e22[1],
          z: _0x437e22[2]
        };
        _0xc65af4 = _0x15e1b6;
      } else if (typeof _0x437e22 === "object") {
        _0xc65af4 = _0x437e22;
      } else {
        var _0xf7f7bb = {
          x: _0x437e22,
          y: _0x244833,
          z: _0x17ff69
        };
        _0xc65af4 = _0xf7f7bb;
      }
      if (typeof _0xc65af4.x !== "number" || typeof _0xc65af4.y !== "number" || typeof _0xc65af4.z !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return _0xc65af4;
    };
    var _0x26b14d = _0x54d0a0;
    var _0x10ad3e;
    var _0x20bfef;
    var _0x544fa5 = class {
      constructor(_0x4871da) {
        _0xc69af7(this, _0x10ad3e, undefined);
        _0xc69af7(this, _0x20bfef, undefined);
        _0xf0f05d(this, _0x20bfef, _0x4871da ?? 5);
        _0xf0f05d(this, _0x10ad3e, new Map());
      }
      setTTL(_0x4b0ac8) {
        _0xf0f05d(this, _0x20bfef, _0x4b0ac8);
      }
      set(_0x1b582f, _0x1c0dee, _0x36c9c9) {
        _0x162672(this, _0x10ad3e).set(_0x1b582f, {
          value: _0x1c0dee,
          expiration: Date.now() + (_0x36c9c9 ?? _0x162672(this, _0x20bfef)) * 1000
        });
        return this;
      }
      get(_0x5a5760, _0x5b10e2 = false) {
        const _0x373319 = _0x162672(this, _0x10ad3e).get(_0x5a5760);
        const _0x4f254f = _0x373319 ? _0x5b10e2 ? true : _0x373319.expiration > Date.now() : false;
        if (!_0x373319 || !_0x4f254f) {
          if (_0x373319) {
            _0x162672(this, _0x10ad3e).delete(_0x5a5760);
          }
          return;
        }
        return _0x373319.value;
      }
      has(_0x503de7, _0x510568 = false) {
        const _0x3123d3 = _0x162672(this, _0x10ad3e).get(_0x503de7);
        const _0x560932 = _0x3123d3 ? _0x510568 ? true : _0x3123d3.expiration > Date.now() : false;
        if (_0x3123d3 && !_0x560932) {
          _0x162672(this, _0x10ad3e).delete(_0x503de7);
        }
        return _0x560932;
      }
      delete(_0x3546ac) {
        return _0x162672(this, _0x10ad3e).delete(_0x3546ac);
      }
      clear() {
        _0x162672(this, _0x10ad3e).clear();
      }
      values(_0x15113d = false) {
        const _0x883208 = [];
        const _0x5a3b28 = Date.now();
        for (const _0x3a1b1c of _0x162672(this, _0x10ad3e).values()) {
          if (_0x15113d || _0x3a1b1c.expiration > _0x5a3b28) {
            _0x883208.push(_0x3a1b1c.value);
          }
        }
        return _0x883208;
      }
      keys(_0x2d7651 = false) {
        const _0x9b1a92 = [];
        const _0x1a842a = Date.now();
        for (const [_0x4eceb5, _0x3d1f24] of _0x162672(this, _0x10ad3e).entries()) {
          if (_0x2d7651 || _0x3d1f24.expiration > _0x1a842a) {
            _0x9b1a92.push(_0x4eceb5);
          }
        }
        return _0x9b1a92;
      }
      entries(_0x547df5 = false) {
        const _0xbdd40b = [];
        const _0x20e0c0 = Date.now();
        for (const [_0x85c1a3, _0x3f1560] of _0x162672(this, _0x10ad3e).entries()) {
          if (_0x547df5 || _0x3f1560.expiration > _0x20e0c0) {
            _0xbdd40b.push([_0x85c1a3, _0x3f1560.value]);
          }
        }
        return _0xbdd40b;
      }
    };
    _0x10ad3e = new WeakMap();
    _0x20bfef = new WeakMap();
    var _0x2a232a;
    var _0x439ded;
    var _0x464ed3;
    var _0x583549;
    var _0xcdbf18;
    var _0x5aec94;
    var _0x44f2ce;
    var _0x4083fd;
    var _0x155792;
    var _0x1927a6;
    var _0x521ccf;
    var _0xa4c329;
    var _0x4e517b;
    var _0xe5776c;
    var _0x2dc7a2;
    var _0x19be9a;
    var _0x41a478;
    var _0x531f07;
    var _0x2c25e7;
    var _0x577901;
    var _0x14897d;
    var _0x272245;
    var _0xde4c5b = class {
      constructor(_0x452cad, _0x53f96a, _0x3663bb, _0x9a9ff1, _0x388cb9, _0x52a4a2 = 30, _0x435278 = false) {
        _0xc69af7(this, _0x4e517b);
        _0xc69af7(this, _0x2dc7a2);
        _0xc69af7(this, _0x41a478);
        _0xc69af7(this, _0x2c25e7);
        _0xc69af7(this, _0x14897d);
        _0xc69af7(this, _0x2a232a, undefined);
        _0xc69af7(this, _0x439ded, undefined);
        _0xc69af7(this, _0x464ed3, undefined);
        _0xc69af7(this, _0x583549, undefined);
        _0xc69af7(this, _0xcdbf18, undefined);
        _0xc69af7(this, _0x5aec94, undefined);
        _0xc69af7(this, _0x44f2ce, undefined);
        _0xc69af7(this, _0x4083fd, undefined);
        _0xc69af7(this, _0x155792, undefined);
        _0xc69af7(this, _0x1927a6, undefined);
        _0xc69af7(this, _0x521ccf, undefined);
        _0xc69af7(this, _0xa4c329, undefined);
        _0xf0f05d(this, _0x2a232a, _0x452cad);
        _0xf0f05d(this, _0x439ded, _0x9a9ff1);
        _0xf0f05d(this, _0x464ed3, _0x388cb9);
        _0xf0f05d(this, _0x583549, _0x53f96a);
        _0xf0f05d(this, _0xcdbf18, _0x3663bb);
        _0xf0f05d(this, _0x5aec94, _0x435278);
        _0xf0f05d(this, _0x44f2ce, _0x52a4a2);
        _0xf0f05d(this, _0x155792, _0x162672(this, _0x439ded).x / _0x52a4a2);
        _0xf0f05d(this, _0x1927a6, _0x162672(this, _0x439ded).y / _0x52a4a2);
        _0xf0f05d(this, _0x4083fd, _0x162672(this, _0x155792) * _0x162672(this, _0x1927a6));
        _0xf0f05d(this, _0x521ccf, _0x3199c1(this, _0x4e517b, _0xe5776c).call(this, _0x162672(this, _0x2a232a), _0x162672(this, _0x44f2ce), _0x162672(this, _0x155792), _0x162672(this, _0x1927a6), _0x162672(this, _0x5aec94)));
        _0xf0f05d(this, _0xa4c329, _0x3199c1(this, _0x2dc7a2, _0x19be9a).call(this, _0x162672(this, _0x521ccf), _0x162672(this, _0x4083fd)));
      }
      get cells() {
        return _0x162672(this, _0x521ccf);
      }
      get cellSize() {
        return _0x162672(this, _0x44f2ce);
      }
      get cellWidth() {
        return _0x162672(this, _0x155792);
      }
      get cellHeight() {
        return _0x162672(this, _0x1927a6);
      }
      get gridArea() {
        return _0x162672(this, _0xa4c329);
      }
      get gridCoverage() {
        return _0x162672(this, _0xa4c329) / _0x162672(this, _0x464ed3) * 100;
      }
      isPointInsideGrid(_0x482a38) {
        var _0x1578ca;
        const _0x2ef6f9 = _0x482a38.x - _0x162672(this, _0x583549).x;
        const _0x42b8b3 = _0x482a38.y - _0x162672(this, _0x583549).y;
        const _0x3b34a8 = Math.floor(_0x2ef6f9 * _0x162672(this, _0x44f2ce) / _0x162672(this, _0x439ded).x);
        const _0x2ddcc0 = Math.floor(_0x42b8b3 * _0x162672(this, _0x44f2ce) / _0x162672(this, _0x439ded).y);
        let _0x4c1147 = (_0x1578ca = _0x162672(this, _0x521ccf)[_0x3b34a8]) == null ? undefined : _0x1578ca[_0x2ddcc0];
        if (!_0x4c1147 && _0x162672(this, _0x5aec94)) {
          _0x4c1147 = _0x3199c1(this, _0x2c25e7, _0x577901).call(this, _0x3b34a8, _0x2ddcc0, _0x162672(this, _0x155792), _0x162672(this, _0x1927a6), _0x162672(this, _0x2a232a));
          _0x162672(this, _0x521ccf)[_0x3b34a8][_0x2ddcc0] = _0x4c1147;
          if (!_0x4c1147) {
            return false;
          }
          _0xf0f05d(this, _0xa4c329, _0x162672(this, _0xa4c329) + _0x162672(this, _0x4083fd));
        }
        return _0x4c1147 ?? false;
      }
    };
    _0x2a232a = new WeakMap();
    _0x439ded = new WeakMap();
    _0x464ed3 = new WeakMap();
    _0x583549 = new WeakMap();
    _0xcdbf18 = new WeakMap();
    _0x5aec94 = new WeakMap();
    _0x44f2ce = new WeakMap();
    _0x4083fd = new WeakMap();
    _0x155792 = new WeakMap();
    _0x1927a6 = new WeakMap();
    _0x521ccf = new WeakMap();
    _0xa4c329 = new WeakMap();
    _0x4e517b = new WeakSet();
    _0xe5776c = function (_0x38d2ae, _0x1e857e, _0x4896f8, _0x2bec23, _0x2d8cfe) {
      const _0x20f2f4 = {};
      for (let _0x403e39 = 0; _0x403e39 < _0x1e857e; _0x403e39++) {
        _0x20f2f4[_0x403e39] = {};
        if (_0x2d8cfe) {
          continue;
        }
        for (let _0x9689cc = 0; _0x9689cc < _0x1e857e; _0x9689cc++) {
          const _0x4f1217 = _0x3199c1(this, _0x2c25e7, _0x577901).call(this, _0x403e39, _0x9689cc, _0x4896f8, _0x2bec23, _0x38d2ae);
          if (!_0x4f1217) {
            continue;
          }
          _0x20f2f4[_0x403e39][_0x9689cc] = true;
        }
      }
      return _0x20f2f4;
    };
    _0x2dc7a2 = new WeakSet();
    _0x19be9a = function (_0x168f6e, _0x4399ba) {
      let _0x36746e = 0;
      for (const _0x295bb4 in _0x168f6e) {
        for (const _0x3d3c43 in _0x168f6e[_0x295bb4]) {
          _0x36746e += _0x4399ba;
        }
      }
      return _0x36746e;
    };
    _0x41a478 = new WeakSet();
    _0x531f07 = function (_0x155e44, _0x4b3221, _0xaa4076, _0x29931d) {
      const _0x2d37f7 = [];
      const _0x4a5dae = _0x155e44 * _0xaa4076 + _0x162672(this, _0x583549).x;
      const _0x257b02 = _0x4b3221 * _0x29931d + _0x162672(this, _0x583549).y;
      _0x2d37f7.push(new _0x2a6fa8(_0x4a5dae, _0x257b02));
      _0x2d37f7.push(new _0x2a6fa8(_0x4a5dae + _0xaa4076, _0x257b02));
      _0x2d37f7.push(new _0x2a6fa8(_0x4a5dae + _0xaa4076, _0x257b02 + _0x29931d));
      _0x2d37f7.push(new _0x2a6fa8(_0x4a5dae, _0x257b02 + _0x29931d));
      return _0x2d37f7;
    };
    _0x2c25e7 = new WeakSet();
    _0x577901 = function (_0x50deef, _0x32259d, _0x6afaac, _0x364225, _0x292307) {
      const _0x328e2e = _0x3199c1(this, _0x41a478, _0x531f07).call(this, _0x50deef, _0x32259d, _0x6afaac, _0x364225);
      let _0x5258c4 = false;
      for (const _0x5be2df of _0x328e2e) {
        const _0x4ca8c4 = _0x5d5475.MathUtils.windingNumber(_0x5be2df, _0x292307);
        if (_0x4ca8c4 !== 0) {
          _0x5258c4 = true;
          break;
        }
      }
      if (!_0x5258c4) {
        return false;
      }
      for (let _0x48921a = 0; _0x48921a < _0x328e2e.length; _0x48921a++) {
        const _0x4bd0a8 = _0x328e2e[_0x48921a];
        const _0x5876c0 = _0x328e2e[(_0x48921a + 1) % _0x328e2e.length];
        for (let _0x30d2b9 = 0; _0x30d2b9 < _0x292307.length; _0x30d2b9++) {
          const _0x344d4b = _0x292307[_0x30d2b9];
          const _0xd80420 = _0x292307[(_0x30d2b9 + 1) % _0x292307.length];
          if (_0x3199c1(this, _0x14897d, _0x272245).call(this, _0x4bd0a8, _0x5876c0, _0x344d4b, _0xd80420)) {
            return false;
          }
        }
      }
      return true;
    };
    _0x14897d = new WeakSet();
    _0x272245 = function (_0x564387, _0x527c35, _0x1bce1c, _0x1407f0) {
      const _0xf3fb59 = (_0x527c35.x - _0x564387.x) * (_0x1407f0.y - _0x1bce1c.y) - (_0x527c35.y - _0x564387.y) * (_0x1407f0.x - _0x1bce1c.x);
      const _0x549bcc = (_0x564387.y - _0x1bce1c.y) * (_0x1407f0.x - _0x1bce1c.x) - (_0x564387.x - _0x1bce1c.x) * (_0x1407f0.y - _0x1bce1c.y);
      const _0x1c103f = (_0x564387.y - _0x1bce1c.y) * (_0x527c35.x - _0x564387.x) - (_0x564387.x - _0x1bce1c.x) * (_0x527c35.y - _0x564387.y);
      if (_0xf3fb59 === 0) {
        return _0x549bcc === 0 && _0x1c103f === 0;
      }
      const _0x490ce1 = _0x549bcc / _0xf3fb59;
      const _0x1217a6 = _0x1c103f / _0xf3fb59;
      return _0x490ce1 >= 0 && _0x490ce1 <= 1 && _0x1217a6 >= 0 && _0x1217a6 <= 1;
    };
    var _0x254163;
    var _0x38b3ee;
    var _0x2bfa77;
    var _0x340656;
    var _0x5a87a8;
    var _0x4a7ba2;
    var _0x1e4348;
    var _0x470669;
    var _0x339630;
    var _0x28d8fa;
    var _0x46ed5a;
    var _0x379a2a;
    var _0x2eb3fe;
    var _0x442513;
    var _0x4652a5;
    var _0x3962ba;
    var _0xa51233;
    var _0x1397c7;
    var _0x1275ac = class {
      constructor(_0x1de43e, _0x47bbd4 = {}, _0x337967 = {}) {
        _0xc69af7(this, _0x339630);
        _0xc69af7(this, _0x46ed5a);
        _0xc69af7(this, _0x2eb3fe);
        _0xc69af7(this, _0x4652a5);
        _0xc69af7(this, _0xa51233);
        _0xc69af7(this, _0x254163, undefined);
        _0xc69af7(this, _0x38b3ee, undefined);
        _0xc69af7(this, _0x2bfa77, undefined);
        _0xc69af7(this, _0x340656, undefined);
        _0xc69af7(this, _0x5a87a8, undefined);
        _0xc69af7(this, _0x4a7ba2, undefined);
        _0xc69af7(this, _0x1e4348, undefined);
        _0xc69af7(this, _0x470669, undefined);
        _0xf0f05d(this, _0x254163, _0x5d5475.getUUID());
        _0xf0f05d(this, _0x38b3ee, _0x1de43e);
        _0xf0f05d(this, _0x2bfa77, _0x3199c1(this, _0x339630, _0x28d8fa).call(this, _0x1de43e));
        _0xf0f05d(this, _0x340656, _0x3199c1(this, _0x46ed5a, _0x379a2a).call(this, _0x1de43e));
        _0xf0f05d(this, _0x5a87a8, _0x3199c1(this, _0xa51233, _0x1397c7).call(this, _0x1de43e));
        _0xf0f05d(this, _0x4a7ba2, _0x3199c1(this, _0x4652a5, _0x3962ba).call(this, _0x162672(this, _0x2bfa77), _0x162672(this, _0x340656)));
        _0xf0f05d(this, _0x1e4348, _0x3199c1(this, _0x2eb3fe, _0x442513).call(this, _0x162672(this, _0x2bfa77), _0x162672(this, _0x340656)));
        this.options = _0x47bbd4;
        this.data = _0x337967;
        if (!this.options.useGrid && !this.options.useLazyGrid) {
          return;
        }
        _0xf0f05d(this, _0x470669, new _0xde4c5b(_0x162672(this, _0x38b3ee), _0x162672(this, _0x2bfa77), _0x162672(this, _0x340656), _0x162672(this, _0x4a7ba2), _0x162672(this, _0x5a87a8), _0x47bbd4.gridCellSize, _0x47bbd4.useLazyGrid));
      }
      get id() {
        return _0x162672(this, _0x254163);
      }
      get center() {
        return _0x162672(this, _0x1e4348);
      }
      get min() {
        return _0x162672(this, _0x2bfa77);
      }
      get max() {
        return _0x162672(this, _0x340656);
      }
      get points() {
        return [..._0x162672(this, _0x38b3ee)];
      }
      isPointInside(_0x203f3a) {
        if (_0x203f3a.x < _0x162672(this, _0x2bfa77).x || _0x203f3a.x > _0x162672(this, _0x340656).x) {
          return false;
        } else if (_0x203f3a.y < _0x162672(this, _0x2bfa77).y || _0x203f3a.y > _0x162672(this, _0x340656).y) {
          return false;
        }
        if ((this.options.minZ || this.options.maxZ) && _0x203f3a instanceof _0x26b14d) {
          const _0x5c7550 = this.options.minZ ?? -Infinity;
          const _0x1f5ce7 = this.options.maxZ ?? Infinity;
          if (_0x203f3a.z < _0x5c7550 || _0x203f3a.z > _0x1f5ce7) {
            return false;
          }
        }
        if ((this.options.useGrid || this.options.useLazyGrid) && _0x162672(this, _0x470669)) {
          return _0x162672(this, _0x470669).isPointInsideGrid(_0x203f3a);
        }
        const _0x5e6251 = _0x5d5475.MathUtils.windingNumber(_0x203f3a, _0x162672(this, _0x38b3ee));
        return _0x5e6251 !== 0;
      }
      addPoint(_0x152ef5) {
        _0x162672(this, _0x38b3ee).push(_0x152ef5);
      }
      removePoint(_0x179756) {
        const _0x3bf0d3 = _0x162672(this, _0x38b3ee).findIndex(_0x4b899c => _0x4b899c.x === _0x179756.x && _0x4b899c.y === _0x179756.y);
        if (_0x3bf0d3 === -1) {
          return;
        }
        _0x162672(this, _0x38b3ee).splice(_0x3bf0d3, 1);
      }
      removeLastPoint() {
        _0x162672(this, _0x38b3ee).pop();
      }
      recalculate() {
        _0xf0f05d(this, _0x2bfa77, _0x3199c1(this, _0x339630, _0x28d8fa).call(this, _0x162672(this, _0x38b3ee)));
        _0xf0f05d(this, _0x340656, _0x3199c1(this, _0x46ed5a, _0x379a2a).call(this, _0x162672(this, _0x38b3ee)));
        _0xf0f05d(this, _0x5a87a8, _0x3199c1(this, _0xa51233, _0x1397c7).call(this, _0x162672(this, _0x38b3ee)));
        _0xf0f05d(this, _0x4a7ba2, _0x3199c1(this, _0x4652a5, _0x3962ba).call(this, _0x162672(this, _0x2bfa77), _0x162672(this, _0x340656)));
        _0xf0f05d(this, _0x1e4348, _0x3199c1(this, _0x2eb3fe, _0x442513).call(this, _0x162672(this, _0x2bfa77), _0x162672(this, _0x340656)));
        if (!this.options.useGrid) {
          return;
        }
        _0xf0f05d(this, _0x470669, new _0xde4c5b(_0x162672(this, _0x38b3ee), _0x162672(this, _0x2bfa77), _0x162672(this, _0x340656), _0x162672(this, _0x4a7ba2), _0x162672(this, _0x5a87a8), this.options.gridCellSize, this.options.useLazyGrid));
      }
    };
    _0x254163 = new WeakMap();
    _0x38b3ee = new WeakMap();
    _0x2bfa77 = new WeakMap();
    _0x340656 = new WeakMap();
    _0x5a87a8 = new WeakMap();
    _0x4a7ba2 = new WeakMap();
    _0x1e4348 = new WeakMap();
    _0x470669 = new WeakMap();
    _0x339630 = new WeakSet();
    _0x28d8fa = function (_0x4eb62c) {
      let _0xefc3b = Number.MAX_SAFE_INTEGER;
      let _0x472d8e = Number.MAX_SAFE_INTEGER;
      for (const _0x590219 of _0x4eb62c) {
        _0xefc3b = Math.min(_0xefc3b, _0x590219.x);
        _0x472d8e = Math.min(_0x472d8e, _0x590219.y);
      }
      return new _0x2a6fa8(_0xefc3b, _0x472d8e);
    };
    _0x46ed5a = new WeakSet();
    _0x379a2a = function (_0x8c9b96) {
      let _0x532292 = Number.MIN_SAFE_INTEGER;
      let _0x34040 = Number.MIN_SAFE_INTEGER;
      for (const _0x43a7f5 of _0x8c9b96) {
        _0x532292 = Math.max(_0x532292, _0x43a7f5.x);
        _0x34040 = Math.max(_0x34040, _0x43a7f5.y);
      }
      return new _0x2a6fa8(_0x532292, _0x34040);
    };
    _0x2eb3fe = new WeakSet();
    _0x442513 = function (_0x39a4c7, _0x35a7f0) {
      const _0x36d759 = _0x35a7f0.add(_0x39a4c7);
      return _0x36d759.divideScalar(2);
    };
    _0x4652a5 = new WeakSet();
    _0x3962ba = function (_0x164c7b, _0x2251d7) {
      return _0x2251d7.sub(_0x164c7b);
    };
    _0xa51233 = new WeakSet();
    _0x1397c7 = function (_0x5e90b3) {
      let _0x8d0804 = 0;
      for (let _0x241203 = 0, _0x2d8707 = _0x5e90b3.length - 1; _0x241203 < _0x5e90b3.length; _0x2d8707 = _0x241203++) {
        const _0x1aebb8 = _0x5e90b3[_0x241203];
        const _0x39cfea = _0x5e90b3[_0x2d8707];
        _0x8d0804 += _0x1aebb8.x * _0x39cfea.y;
        _0x8d0804 -= _0x1aebb8.y * _0x39cfea.x;
      }
      return Math.abs(_0x8d0804 / 2);
    };
    var _0xe7f3a;
    var _0x3212e7;
    var _0x573f9b = class _0x1579f5 {
      constructor(_0x30e573, _0x4ea056) {
        _0xc69af7(this, _0xe7f3a);
        const _0x27e029 = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x30e573, _0x4ea056);
        this.x = _0x27e029.x;
        this.y = _0x27e029.y;
      }
      equals(_0x554f87, _0x1640a9) {
        const _0x44776a = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x554f87, _0x1640a9);
        return this.x === _0x44776a.x && this.y === _0x44776a.y;
      }
      add(_0x2bfed9, _0x270618, _0x40a713) {
        const _0xdfc21 = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x2bfed9, _0x270618);
        const _0x27c714 = this.x + (_0x40a713 ? _0xdfc21.x * _0x40a713 : _0xdfc21.x);
        const _0x35809b = this.y + (_0x40a713 ? _0xdfc21.y * _0x40a713 : _0xdfc21.y);
        return new _0x1579f5(_0x27c714, _0x35809b);
      }
      addScalar(_0x79e345) {
        if (typeof _0x79e345 !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x5b0ab3 = this.x + _0x79e345;
        const _0x395ce4 = this.y + _0x79e345;
        return new _0x1579f5(_0x5b0ab3, _0x395ce4);
      }
      sub(_0x4c106b, _0x2415c1, _0x2b35c6) {
        const _0x1b52c0 = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x4c106b, _0x2415c1);
        const _0x2aa4e2 = this.x - (_0x2b35c6 ? _0x1b52c0.x * _0x2b35c6 : _0x1b52c0.x);
        const _0xc61fa8 = this.y - (_0x2b35c6 ? _0x1b52c0.y * _0x2b35c6 : _0x1b52c0.y);
        return new _0x1579f5(_0x2aa4e2, _0xc61fa8);
      }
      subScalar(_0x3fbbb3) {
        if (typeof _0x3fbbb3 !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x5324da = this.x - _0x3fbbb3;
        const _0x2a1423 = this.y - _0x3fbbb3;
        return new _0x1579f5(_0x5324da, _0x2a1423);
      }
      multiply(_0x2ab193, _0x13520b) {
        const _0x361ce4 = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x2ab193, _0x13520b);
        const _0x2079f6 = this.x * _0x361ce4.x;
        const _0x4c26ea = this.y * _0x361ce4.y;
        return new _0x1579f5(_0x2079f6, _0x4c26ea);
      }
      multiplyScalar(_0x316bda) {
        if (typeof _0x316bda !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x24303d = this.x * _0x316bda;
        const _0x149fe8 = this.y * _0x316bda;
        return new _0x1579f5(_0x24303d, _0x149fe8);
      }
      divide(_0x280425, _0x616dfb) {
        const _0x55db80 = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x280425, _0x616dfb);
        const _0x3b3e4e = this.x / _0x55db80.x;
        const _0x48df5e = this.y / _0x55db80.y;
        return new _0x1579f5(_0x3b3e4e, _0x48df5e);
      }
      divideScalar(_0x3f2e17) {
        if (typeof _0x3f2e17 !== "number") {
          throw new Error("Invalid scalar");
        }
        const _0x34e021 = this.x / _0x3f2e17;
        const _0x3447b2 = this.y / _0x3f2e17;
        return new _0x1579f5(_0x34e021, _0x3447b2);
      }
      round() {
        const _0x315fb5 = Math.round(this.x);
        const _0x28a9cd = Math.round(this.y);
        return new _0x1579f5(_0x315fb5, _0x28a9cd);
      }
      floor() {
        const _0x51164f = Math.floor(this.x);
        const _0x2de42c = Math.floor(this.y);
        return new _0x1579f5(_0x51164f, _0x2de42c);
      }
      ceil() {
        const _0x21e323 = Math.ceil(this.x);
        const _0x40f3b0 = Math.ceil(this.y);
        return new _0x1579f5(_0x21e323, _0x40f3b0);
      }
      getCenter(_0x199e80, _0x16e50e) {
        const _0xeb992e = _0x3199c1(this, _0xe7f3a, _0x3212e7).call(this, _0x199e80, _0x16e50e);
        return new _0x1579f5((this.x + _0xeb992e.x) / 2, (this.y + _0xeb992e.y) / 2);
      }
      getDistance(_0x3b3bb6, _0x4b93fe) {
        const [_0x161f5a, _0x42706a] = _0x3b3bb6 instanceof Array ? _0x3b3bb6 : typeof _0x3b3bb6 === "object" ? [_0x3b3bb6.x, _0x3b3bb6.y] : [_0x3b3bb6, _0x4b93fe];
        if (typeof _0x161f5a !== "number" || typeof _0x42706a !== "number") {
          throw new Error("Invalid vector coordinates");
        }
        const [_0x3acf49, _0x4d7433] = [this.x - _0x161f5a, this.y - _0x42706a];
        return Math.sqrt(_0x3acf49 * _0x3acf49 + _0x4d7433 * _0x4d7433);
      }
      toArray(_0x5a19a6) {
        if (typeof _0x5a19a6 === "number") {
          return [parseFloat(this.x.toFixed(_0x5a19a6)), parseFloat(this.y.toFixed(_0x5a19a6))];
        }
        return [this.x, this.y];
      }
      toJSON(_0x8993f4) {
        if (typeof _0x8993f4 === "number") {
          return {
            x: parseFloat(this.x.toFixed(_0x8993f4)),
            y: parseFloat(this.y.toFixed(_0x8993f4))
          };
        }
        var _0x919963 = {
          x: this.x,
          y: this.y
        };
        return _0x919963;
      }
      toString(_0x19a5f9) {
        return JSON.stringify(this.toJSON(_0x19a5f9));
      }
    };
    _0xe7f3a = new WeakSet();
    _0x3212e7 = function (_0x3b72aa, _0x114ea0) {
      let _0x2767b2 = {
        x: 0,
        y: 0
      };
      if (_0x3b72aa instanceof _0x573f9b || _0x3b72aa instanceof _0x26b14d) {
        _0x2767b2 = _0x3b72aa;
      } else if (_0x3b72aa instanceof Array) {
        var _0x2c5dd3 = {
          x: _0x3b72aa[0],
          y: _0x3b72aa[1]
        };
        _0x2767b2 = _0x2c5dd3;
      } else if (typeof _0x3b72aa === "object") {
        _0x2767b2 = _0x3b72aa;
      } else {
        var _0xa16d48 = {
          x: _0x3b72aa,
          y: _0x114ea0
        };
        _0x2767b2 = _0xa16d48;
      }
      if (typeof _0x2767b2.x !== "number" || typeof _0x2767b2.y !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return _0x2767b2;
    };
    var _0x2a6fa8 = _0x573f9b;
    var _0x2eaacb = (_0x3f8f15, _0x599e9a, _0x119230) => {
      return Math.min(Math.max(_0x3f8f15, _0x599e9a), _0x119230);
    };
    var _0x36252d = (_0xded662, _0x582c0a, _0x51fc2b) => {
      return _0x582c0a[0] + (_0x51fc2b - _0xded662[0]) * (_0x582c0a[1] - _0x582c0a[0]) / (_0xded662[1] - _0xded662[0]);
    };
    var _0x23cb3f = ([_0x472bd6, _0x5d111f, _0x108863], [_0xb903f7, _0x1cbec1, _0x355f19]) => {
      const [_0x52360a, _0x2aa4ae, _0x37b0e1] = [_0x472bd6 - _0xb903f7, _0x5d111f - _0x1cbec1, _0x108863 - _0x355f19];
      return Math.sqrt(_0x52360a * _0x52360a + _0x2aa4ae * _0x2aa4ae + _0x37b0e1 * _0x37b0e1);
    };
    var _0x3f0458 = (_0x45f685, _0x4a2c12) => {
      if (_0x4a2c12) {
        return Math.floor(Math.random() * (_0x4a2c12 - _0x45f685 + 1) + _0x45f685);
      } else {
        return Math.floor(Math.random() * _0x45f685);
      }
    };
    var _0x128a97 = (_0x55a437, _0x2365f1) => {
      if (_0x55a437 instanceof _0x2a6fa8) {
        return _0x55a437;
      } else if (_0x55a437 instanceof _0x26b14d) {
        return new _0x2a6fa8(_0x55a437);
      } else if (_0x55a437 instanceof Array) {
        return new _0x2a6fa8(_0x55a437);
      } else if (typeof _0x55a437 === "object") {
        return new _0x2a6fa8(_0x55a437);
      }
      if (typeof _0x55a437 !== "number" || typeof _0x2365f1 !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return new _0x2a6fa8(_0x55a437, _0x2365f1);
    };
    var _0x1fdb82 = (_0x407952, _0x517d4e, _0x3e6629) => {
      if (_0x407952 instanceof _0x26b14d) {
        return _0x407952;
      } else if (_0x407952 instanceof Array) {
        return new _0x26b14d(_0x407952);
      } else if (typeof _0x407952 === "object") {
        return new _0x26b14d(_0x407952);
      }
      if (typeof _0x407952 !== "number" || typeof _0x517d4e !== "number" || typeof _0x3e6629 !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return new _0x26b14d(_0x407952, _0x517d4e, _0x3e6629);
    };
    var _0x4e7b35 = (_0x17d61f, _0x1d927e) => {
      let _0x5e6230 = 0;
      const _0x21f2ee = (_0x16e3ba, _0x430d90, _0x15ca9c) => {
        return (_0x430d90.x - _0x16e3ba.x) * (_0x15ca9c.y - _0x16e3ba.y) - (_0x15ca9c.x - _0x16e3ba.x) * (_0x430d90.y - _0x16e3ba.y);
      };
      for (let _0x52221e = 0; _0x52221e < _0x1d927e.length; _0x52221e++) {
        const _0x306dee = _0x1d927e[_0x52221e];
        const _0x3343c3 = _0x1d927e[(_0x52221e + 1) % _0x1d927e.length];
        if (_0x306dee.y <= _0x17d61f.y) {
          if (_0x3343c3.y > _0x17d61f.y && _0x21f2ee(_0x306dee, _0x3343c3, _0x17d61f) > 0) {
            _0x5e6230++;
          }
        } else if (_0x3343c3.y <= _0x17d61f.y && _0x21f2ee(_0x306dee, _0x3343c3, _0x17d61f) < 0) {
          _0x5e6230--;
        }
      }
      return _0x5e6230;
    };
    var _0x11550d = {
      clamp: _0x2eaacb,
      getMapRange: _0x36252d,
      getDistance: _0x23cb3f,
      getRandomNumber: _0x3f0458,
      parseVector2: _0x128a97,
      parseVector3: _0x1fdb82,
      windingNumber: _0x4e7b35
    };
    var _0x4e99a9 = _0x11550d;
    function _0x4bab57(_0xf3b1ea, _0x3ff928) {
      const _0x5002cd = "_";
      const _0x25b17c = _0x55da55((_0x45ca57, _0x4df8cd, ..._0x197a7d) => {
        return _0xf3b1ea(_0x45ca57, ..._0x197a7d);
      }, _0x3ff928);
      return {
        get: function (..._0x3a7338) {
          return _0x25b17c.get(_0x5002cd, ..._0x3a7338);
        },
        reset: function () {
          _0x25b17c.reset(_0x5002cd);
        }
      };
    }
    function _0x55da55(_0x12eea4, _0x49bb98) {
      const _0x42f6af = _0x49bb98.timeToLive || 60000;
      const _0x115f60 = {};
      async function _0x54ea9a(_0x3eb928, ..._0x34b4bf) {
        let _0x39ff77 = _0x115f60[_0x3eb928];
        if (!_0x39ff77) {
          _0x39ff77 = {
            value: null,
            lastUpdated: 0
          };
          _0x115f60[_0x3eb928] = _0x39ff77;
        }
        const _0x4a4ea9 = Date.now();
        if (_0x39ff77.lastUpdated === 0 || _0x4a4ea9 - _0x39ff77.lastUpdated > _0x42f6af) {
          const [_0x12fdcd, _0x3b7c28] = await _0x12eea4(_0x39ff77, _0x3eb928, ..._0x34b4bf);
          if (_0x12fdcd) {
            _0x39ff77.lastUpdated = _0x4a4ea9;
            _0x39ff77.value = _0x3b7c28;
          }
          return _0x3b7c28;
        }
        return await new Promise(_0x2b3af3 => setTimeout(() => _0x2b3af3(_0x39ff77.value), 0));
      }
      return {
        get: async function (_0x200b76, ..._0x43fd50) {
          return await _0x54ea9a(_0x200b76, ..._0x43fd50);
        },
        reset: function (_0x3fb8a0) {
          const _0x45b9f1 = _0x115f60[_0x3fb8a0];
          if (_0x45b9f1) {
            _0x45b9f1.lastUpdated = 0;
          }
        }
      };
    }
    function _0x5b580c() {
      if (globalThis && typeof globalThis.crypto === "object") {
        return _0x53bb93();
      } else {
        return new _0xb1a23d(4).toString();
      }
    }
    function _0x44f3f5(_0x9fb27f) {
      return _0x516194(_0x9fb27f, _0x516194.URL);
    }
    function _0x4e444d(_0x3d8c3, _0x294321) {
      return new Promise((_0x3cfa5c, _0x2e2082) => {
        const _0x157a3a = Date.now();
        const _0x2d85c1 = setInterval(() => {
          const _0x1cfcce = Date.now() - _0x157a3a > _0x294321;
          if (_0x3d8c3() || _0x1cfcce) {
            clearInterval(_0x2d85c1);
            return _0x3cfa5c(_0x1cfcce);
          }
        }, 1);
      });
    }
    function _0x27ae33(_0x34fe11) {
      return new Promise(_0x41af9e => setTimeout(() => _0x41af9e(), _0x34fe11));
    }
    function _0x118667() {
      return _0x27ae33(0);
    }
    var _0x284a02 = {
      cache: _0x4bab57,
      cacheableMap: _0x55da55,
      waitForCondition: _0x4e444d,
      getUUID: _0x5b580c,
      getStringHash: _0x44f3f5,
      wait: _0x27ae33,
      waitForNextFrame: _0x118667,
      deflate: _0x162728,
      inflate: _0x83249,
      ..._0x2db072
    };
    var _0x5d5475 = _0x284a02;
    var _0x532f68 = (_0x29c9a5 => {
      _0x29c9a5[_0x29c9a5.hat = 0] = "hat";
      _0x29c9a5[_0x29c9a5.mask = 1] = "mask";
      _0x29c9a5[_0x29c9a5.glasses = 2] = "glasses";
      _0x29c9a5[_0x29c9a5.armor = 3] = "armor";
      _0x29c9a5[_0x29c9a5.shoes = 4] = "shoes";
      _0x29c9a5[_0x29c9a5.idcard = 5] = "idcard";
      _0x29c9a5[_0x29c9a5.mobilephone = 6] = "mobilephone";
      _0x29c9a5[_0x29c9a5.keyring = 7] = "keyring";
      _0x29c9a5[_0x29c9a5.bankcard = 8] = "bankcard";
      _0x29c9a5[_0x29c9a5.backpack = 9] = "backpack";
      return _0x29c9a5;
    })(_0x532f68 || {});
    var _0x19e71a = {};
    var _0x49cdb5 = (_0x38e8b4, _0xe1f4cc) => "__cfx_export_" + _0x38e8b4 + "_" + _0xe1f4cc;
    var _0x33dac3 = new Proxy((_0x1744ca, _0x61d51b) => {
      const _0x5773e6 = (_0xd9fbe0, ..._0x26dfe8) => {
        const _0x3e942e = _0x61d51b(..._0x26dfe8);
        if (_0x3e942e instanceof Promise) {
          _0x3e942e.then(_0x2c4bfe => _0xd9fbe0(_0x2c4bfe));
        } else {
          _0xd9fbe0(_0x3e942e);
        }
      };
      const _0x266c36 = GetCurrentResourceName();
      if (_0x266c36 == undefined) {
        throw new Error("Failed to get resource name, are you sure you are using this in a fivem resource?");
      }
      on(_0x49cdb5(_0x266c36, _0x1744ca), _0x551ca4 => {
        _0x551ca4(_0x5773e6);
      });
    }, {
      apply: (_0x39657, _0x2f7dea, _0x57fc53) => {
        _0x39657(..._0x57fc53);
      },
      get: (_0x321566, _0x1c2d89) => {
        if (_0x19e71a[_0x1c2d89] == undefined) {
          _0x19e71a[_0x1c2d89] = {};
        }
        return new Proxy({}, {
          get: (_0x2fd596, _0x217852) => {
            const _0x187501 = _0x217852 + "_async";
            return (..._0x12f336) => {
              return new Promise(async (_0x232f3e, _0x4c2556) => {
                const _0x3ba191 = await _0x5d5475.waitForCondition(() => GetResourceState(_0x1c2d89) === "started", 60000);
                if (_0x3ba191) {
                  return _0x4c2556("Resource " + _0x1c2d89 + " is not running");
                }
                if (_0x19e71a[_0x1c2d89][_0x187501] === undefined) {
                  emit(_0x49cdb5(_0x1c2d89, _0x217852), _0x2a7f20 => {
                    _0x19e71a[_0x1c2d89][_0x187501] = _0x2a7f20;
                  });
                  const _0x1891f7 = await _0x5d5475.waitForCondition(() => _0x19e71a[_0x1c2d89][_0x187501] !== undefined, 1000);
                  if (_0x1891f7) {
                    return _0x4c2556("Failed to get export " + _0x217852 + " from resource " + _0x1c2d89);
                  }
                }
                try {
                  _0x19e71a[_0x1c2d89][_0x187501](_0x232f3e, ..._0x12f336);
                } catch (_0x1a5e92) {
                  _0x4c2556(_0x1a5e92);
                }
              });
            };
          }
        });
      }
    });
    var _0x354011 = new Proxy((_0xd70f29, _0x46d6f0) => {
      const _0x495160 = GetCurrentResourceName();
      if (_0x495160 == undefined) {
        throw new Error("Failed to get resource name, are you sure you are using this in a fivem resource?");
      } else if (typeof _0x46d6f0 !== "function") {
        throw new Error("Callback is not a function");
      } else if (typeof _0xd70f29 !== "string") {
        throw new Error("Export name must be a string");
      }
      on(_0x49cdb5(_0x495160, _0xd70f29), _0x33a67a => {
        _0x33a67a(_0x46d6f0);
      });
    }, {
      apply: (_0x47569c, _0x26f7f6, _0x11b39d) => {
        _0x47569c(..._0x11b39d);
      },
      get: (_0x2a09a1, _0xde1ff4) => {
        if (_0x19e71a[_0xde1ff4] == undefined) {
          _0x19e71a[_0xde1ff4] = {};
        }
        return new Proxy({}, {
          get: (_0x4d558d, _0x3f0a28) => {
            const _0x24df5d = _0x3f0a28 + "_sync";
            if (_0x19e71a[_0xde1ff4][_0x24df5d] === undefined) {
              emit(_0x49cdb5(_0xde1ff4, _0x3f0a28), _0x2d36eb => {
                _0x19e71a[_0xde1ff4][_0x24df5d] = _0x2d36eb;
              });
              if (_0x19e71a[_0xde1ff4][_0x24df5d] === undefined) {
                if (GetResourceState(_0xde1ff4) !== "started") {
                  throw new Error("Resource " + _0xde1ff4 + " is not running");
                } else {
                  throw new Error("No such export " + _0x3f0a28 + " in resource " + _0xde1ff4);
                }
              }
            }
            return (..._0x2c03e2) => {
              try {
                return _0x19e71a[_0xde1ff4][_0x24df5d](..._0x2c03e2);
              } catch (_0x298fb7) {
                throw new Error("An error occurred while calling export " + _0x3f0a28 + " of resource " + _0xde1ff4 + " - see above for details");
              }
            };
          }
        });
      }
    });
    on("onResourceStop", _0x474381 => _0x19e71a[_0x474381] = undefined);
    var _0x5c6892 = {
      Async: _0x33dac3,
      Sync: _0x354011
    };
    var _0x297216 = _0x5c6892;
    var _0x528754 = _0x22d19b(_0x45bc90());
    var _0xeb406b;
    var _0x50e9e1;
    var _0x2995c6;
    var _0x39b8ba;
    var _0x1d4002;
    var _0x25b1a0;
    var _0x4daad8;
    var _0x32e43b;
    var _0x293483;
    var _0x436ff4;
    var _0x5d2c11;
    var _0x4d08d1;
    var _0x3673a0;
    var _0x1efc3c;
    var _0x54de00;
    var _0x3db80d;
    var _0x2c7237;
    var _0x332a30;
    var _0x724ed7;
    var _0x243176;
    var _0x475590 = class {
      constructor(_0x12d72e, _0x42120c) {
        _0xc69af7(this, _0x1d4002);
        _0xc69af7(this, _0x4daad8);
        _0xc69af7(this, _0x293483);
        _0xc69af7(this, _0x5d2c11);
        _0xc69af7(this, _0x3673a0);
        _0xc69af7(this, _0x54de00);
        _0xc69af7(this, _0x2c7237);
        _0xc69af7(this, _0x724ed7);
        _0xc69af7(this, _0xeb406b, undefined);
        _0xc69af7(this, _0x50e9e1, undefined);
        _0xc69af7(this, _0x2995c6, undefined);
        _0xc69af7(this, _0x39b8ba, {});
        const _0x55468b = _0x3199c1(this, _0x3673a0, _0x1efc3c).call(this, _0x12d72e);
        const _0x536e38 = _0x3199c1(this, _0x2c7237, _0x332a30).call(this, _0x55468b, _0x42120c);
        const [_0x279534, _0x3c9e18, _0x1af6e2] = _0x536e38.split(":").map(_0x49fd59 => _0x49fd59.length > 0 ? _0x49fd59 : undefined);
        _0xf0f05d(this, _0xeb406b, _0x279534);
        _0xf0f05d(this, _0x50e9e1, _0x3c9e18);
        _0xf0f05d(this, _0x2995c6, _0x1af6e2);
      }
      hashString(_0x51f8aa) {
        var _0x3d4c5f;
        const _0x5d608a = _0x162672(this, _0x1d4002, _0x25b1a0);
        const _0x1800a0 = (_0x3d4c5f = _0x162672(this, _0x39b8ba)[_0x5d608a]) == null ? undefined : _0x3d4c5f[_0x51f8aa];
        if (_0x1800a0) {
          return _0x1800a0;
        }
        if (!_0x162672(this, _0x39b8ba)[_0x5d608a]) {
          _0x162672(this, _0x39b8ba)[_0x5d608a] = {};
        }
        const _0x542571 = _0x3199c1(this, _0x5d2c11, _0x4d08d1).call(this, (0, _0x528754.HmacMD5)(_0x51f8aa, _0x5d608a).toString());
        _0x162672(this, _0x39b8ba)[_0x5d608a][_0x51f8aa] = _0x542571;
        if (IsDuplicityVersion()) {
          console.log("[SDK] Hash Debug | Event: " + _0x51f8aa + " | Hash: " + _0x542571);
        }
        return _0x542571;
      }
      encode(_0x45d419) {
        let _0x52d786;
        const _0x3f340a = _0x162672(this, _0x293483, _0x436ff4);
        try {
          _0x52d786 = _0x3199c1(this, _0x54de00, _0x3db80d).call(this, JSON.stringify(_0x45d419), _0x3f340a);
        } catch (_0xa998ba) {
          console.error("Failed to encode payload");
        }
        return _0x52d786;
      }
      decode(_0x543e4a) {
        let _0x2b06fe;
        const _0x4e0a20 = _0x162672(this, _0x4daad8, _0x32e43b);
        try {
          _0x2b06fe = JSON.parse(_0x3199c1(this, _0x2c7237, _0x332a30).call(this, _0x543e4a, _0x4e0a20));
        } catch (_0x3bac89) {
          console.error("Failed to decode payload");
        }
        return _0x2b06fe;
      }
    };
    _0xeb406b = new WeakMap();
    _0x50e9e1 = new WeakMap();
    _0x2995c6 = new WeakMap();
    _0x39b8ba = new WeakMap();
    _0x1d4002 = new WeakSet();
    _0x25b1a0 = function () {
      return _0x162672(this, _0xeb406b) ?? _0x3199c1(this, _0x724ed7, _0x243176).call(this);
    };
    _0x4daad8 = new WeakSet();
    _0x32e43b = function () {
      return _0x162672(this, _0x50e9e1) ?? _0x3199c1(this, _0x724ed7, _0x243176).call(this);
    };
    _0x293483 = new WeakSet();
    _0x436ff4 = function () {
      return _0x162672(this, _0x2995c6) ?? _0x3199c1(this, _0x724ed7, _0x243176).call(this);
    };
    _0x5d2c11 = new WeakSet();
    _0x4d08d1 = function (_0x4b5bd6) {
      if (typeof _0x4b5bd6 !== "string") {
        return "";
      }
      return _0x528754.enc.Base64.stringify(_0x528754.enc.Utf8.parse(_0x4b5bd6));
    };
    _0x3673a0 = new WeakSet();
    _0x1efc3c = function (_0x521730) {
      if (typeof _0x521730 !== "string") {
        return "";
      }
      return _0x528754.enc.Utf8.stringify(_0x528754.enc.Base64.parse(_0x521730));
    };
    _0x54de00 = new WeakSet();
    _0x3db80d = function (_0x24de1e, _0x4e9d06) {
      if (typeof _0x24de1e !== "string" || typeof _0x4e9d06 !== "string") {
        return "";
      }
      return _0x528754.AES.encrypt(_0x24de1e, _0x4e9d06).toString();
    };
    _0x2c7237 = new WeakSet();
    _0x332a30 = function (_0x4057c3, _0x40a916) {
      if (typeof _0x4057c3 !== "string" || typeof _0x40a916 !== "string") {
        return "";
      }
      return _0x528754.AES.decrypt(_0x4057c3, _0x40a916).toString(_0x528754.enc.Utf8);
    };
    _0x724ed7 = new WeakSet();
    _0x243176 = function (_0xdbe652 = 128) {
      return _0x528754.lib.WordArray.random(_0xdbe652 / 8).toString();
    };
    var _0x531904;
    var _0x5b57a3 = class {
      constructor() {
        _0xc69af7(this, _0x531904, undefined);
        const _0x1c6157 = GetCurrentResourceName();
        const _0x4b2071 = _0x5d5475.getStringHash("__npx_sdk:" + _0x1c6157 + ":token");
        const _0x15beee = GetConvar(_0x4b2071, "");
        _0xf0f05d(this, _0x531904, new _0x475590(_0x15beee, "0x4008BB60"));
      }
      on(_0x452b87, _0x47c2fa) {
        const _0x1cabd9 = _0x162672(this, _0x531904).hashString(_0x452b87);
        return on(_0x1cabd9, _0x47c2fa);
      }
      onNet(_0x4f3e32, _0x27ed63) {
        const _0x4aad3c = _0x162672(this, _0x531904).hashString(_0x4f3e32);
        onNet(_0x4aad3c, _0x27ed63);
        const _0x231123 = _0x162672(this, _0x531904).hashString(_0x4f3e32 + "-c");
        onNet(_0x231123, _0x1ff969 => {
          const _0x28d7f4 = _0x5d5475.inflate(_0x1ff969);
          const _0x4ae831 = msgpack_unpack(_0x28d7f4);
          return _0x27ed63(..._0x4ae831);
        });
      }
      emit(_0x24d4ec, ..._0x37b0af) {
        const _0x974132 = _0x162672(this, _0x531904).hashString(_0x24d4ec);
        return emit(_0x974132, ..._0x37b0af);
      }
      emitNet(_0x1d52d8, ..._0x538a8a) {
        let _0x1412f6 = msgpack_pack(_0x538a8a);
        let _0x45de88 = _0x1412f6.length;
        const _0x384b73 = _0x162672(this, _0x531904).hashString(_0x1d52d8);
        if (_0x45de88 < 16000) {
          TriggerServerEventInternal(_0x384b73, _0x1412f6, _0x1412f6.length);
        } else {
          TriggerLatentServerEventInternal(_0x384b73, _0x1412f6, _0x1412f6.length, 128000);
        }
      }
    };
    _0x531904 = new WeakMap();
    var _0x10598b = new _0x5b57a3();
    var _0x7e6b01 = {
      warning: 1,
      log: 2,
      error: 3,
      debug: 4
    };
    var _0x44ca04 = GetConvar(GetCurrentResourceName() + "_logLevel", "");
    var _0x55a63e = GetConvar("sv_loglevel", "warning");
    (() => {
      _0x55a63e = (_0x44ca04 == null ? undefined : _0x44ca04.length) > 0 ? _0x44ca04 : _0x55a63e;
      if (!_0x7e6b01[_0x55a63e]) {
        throw new Error("Invalid log level: " + _0x55a63e);
      }
    })();
    var _0x2620fc = () => _0x7e6b01[_0x55a63e] >= _0x7e6b01.warning;
    var _0x35b643 = () => _0x7e6b01[_0x55a63e] >= _0x7e6b01.log;
    var _0x50b959 = () => _0x7e6b01[_0x55a63e] >= _0x7e6b01.error;
    var _0x1eb868 = () => _0x55a63e === "debug";
    var _0x5d4b7a = {
      warning: (_0x30ac17, ..._0x47e1fe) => {
        if (!_0x2620fc()) {
          return;
        }
        console.log("^3[WARNING] ^7" + _0x30ac17, ..._0x47e1fe, "^0");
      },
      log: (_0x58cc8e, ..._0x302553) => {
        if (!_0x35b643()) {
          return;
        }
        console.log("^5[nopixel] ^7" + _0x58cc8e, ..._0x302553, "^0");
      },
      debug: (_0xc63e3a, ..._0x26edcd) => {
        if (!_0x1eb868()) {
          return;
        }
        console.log("^2[D] " + _0xc63e3a, ..._0x26edcd, "^0");
      },
      error: (_0x34576e, ..._0x16f1b1) => {
        if (!_0x50b959()) {
          return;
        }
        console.log("^1[ERROR] " + _0x34576e, ..._0x16f1b1, "^0");
      }
    };
    var _0x57732a;
    var _0x5a3e44;
    var _0x348334;
    var _0x5e75f0;
    var _0x459a8b;
    var _0x108420;
    var _0x34b785;
    var _0x2f62c6;
    var _0x20af09;
    var _0x5ffd9f;
    var _0x461e29;
    var _0x4931f8 = class {
      constructor() {
        _0xc69af7(this, _0x108420);
        _0xc69af7(this, _0x2f62c6);
        _0xc69af7(this, _0x5ffd9f);
        _0xc69af7(this, _0x57732a, undefined);
        _0xc69af7(this, _0x5a3e44, undefined);
        _0xc69af7(this, _0x348334, undefined);
        _0xc69af7(this, _0x5e75f0, undefined);
        _0xc69af7(this, _0x459a8b, undefined);
        _0xf0f05d(this, _0x57732a, false);
        _0xf0f05d(this, _0x5a3e44, new Map());
        _0xf0f05d(this, _0x348334, GetGameTimer());
        _0xf0f05d(this, _0x5e75f0, GetCurrentResourceName());
        const _0x273f4c = _0x5d5475.getStringHash("__npx_sdk:" + _0x162672(this, _0x5e75f0) + ":token");
        const _0x22f6e5 = GetConvar(_0x273f4c, "");
        _0xf0f05d(this, _0x459a8b, new _0x475590(_0x22f6e5, "0x4008BB60"));
        _0x3199c1(this, _0x5ffd9f, _0x461e29).call(this);
      }
      register(_0x1737c6, _0xfaf941) {
        _0x3199c1(this, _0x108420, _0x34b785).call(this, "__rpc_req:" + _0x1737c6, async (_0x391cfa, _0x259825) => {
          let _0x48f87f;
          let _0x2bc288;
          const _0x1da02f = GetInvokingResource();
          if (_0x1da02f) {
            return;
          }
          const _0x590e29 = _0x162672(this, _0x459a8b).decode(_0x391cfa);
          if (!(_0x590e29 == null ? undefined : _0x590e29.id) || !(_0x590e29 == null ? undefined : _0x590e29.origin)) {
            return _0x5d4b7a.error("[RPC] " + _0x1737c6 + " - Invalid metadata received");
          }
          try {
            _0x48f87f = await _0xfaf941(..._0x259825);
            _0x2bc288 = true;
          } catch (_0x3e6f17) {
            _0x48f87f = _0x3e6f17.message;
            _0x2bc288 = false;
          }
          _0x3199c1(this, _0x2f62c6, _0x20af09).call(this, "__rpc_res:" + _0x590e29.origin, _0x590e29.id, [_0x2bc288, _0x48f87f]);
        });
      }
      execute(_0x1884c6, ..._0x56309a) {
        const _0x4e6bf7 = {
          id: ++_0x382da9(this, _0x348334)._,
          origin: _0x162672(this, _0x5e75f0)
        };
        const _0x35d6d0 = new Promise((_0x46226d, _0x44802a) => {
          let _0x69fb43 = setTimeout(() => _0x44802a(new Error("RPC timed out | " + _0x1884c6)), 60000);
          var _0x5d4014 = {
            resolve: _0x46226d,
            reject: _0x44802a,
            timeout: _0x69fb43
          };
          _0x162672(this, _0x5a3e44).set(_0x4e6bf7.id, _0x5d4014);
        });
        _0x35d6d0.finally(() => _0x162672(this, _0x5a3e44).delete(_0x4e6bf7.id));
        _0x3199c1(this, _0x2f62c6, _0x20af09).call(this, "__rpc_req:" + _0x1884c6, _0x162672(this, _0x459a8b).encode(_0x4e6bf7), _0x56309a);
        return _0x35d6d0;
      }
      executeCustom(_0x34a339, _0xec2329, ..._0x5c40fb) {
        const _0xeefa97 = {
          id: ++_0x382da9(this, _0x348334)._,
          origin: _0x162672(this, _0x5e75f0)
        };
        const _0x11fe2d = new Promise((_0xd0d41f, _0x21d18d) => {
          let _0x13d3d8 = setTimeout(() => _0x21d18d(new Error("RPC timed out | " + _0x34a339)), _0xec2329.timeout ?? 60000);
          var _0x5c40dc = {
            resolve: _0xd0d41f,
            reject: _0x21d18d,
            timeout: _0x13d3d8
          };
          _0x162672(this, _0x5a3e44).set(_0xeefa97.id, _0x5c40dc);
        });
        _0x11fe2d.finally(() => _0x162672(this, _0x5a3e44).delete(_0xeefa97.id));
        _0x3199c1(this, _0x2f62c6, _0x20af09).call(this, "__rpc_req:" + _0x34a339, _0x162672(this, _0x459a8b).encode(_0xeefa97), _0x5c40fb);
        return _0x11fe2d;
      }
    };
    _0x57732a = new WeakMap();
    _0x5a3e44 = new WeakMap();
    _0x348334 = new WeakMap();
    _0x5e75f0 = new WeakMap();
    _0x459a8b = new WeakMap();
    _0x108420 = new WeakSet();
    _0x34b785 = function (_0x332c58, _0x592d54) {
      const _0x2e9fe1 = _0x162672(this, _0x459a8b).hashString(_0x332c58);
      onNet(_0x2e9fe1, _0x592d54);
      const _0x447edc = _0x162672(this, _0x459a8b).hashString(_0x332c58 + "-c");
      onNet(_0x447edc, _0x151b4c => {
        const _0x37a811 = _0x5d5475.inflate(_0x151b4c);
        const _0x3f8b06 = msgpack_unpack(_0x37a811);
        return _0x592d54(..._0x3f8b06);
      });
    };
    _0x2f62c6 = new WeakSet();
    _0x20af09 = function (_0x4315c8, ..._0x9cc026) {
      let _0x1c2a48 = msgpack_pack(_0x9cc026);
      let _0x45533f = _0x1c2a48.length;
      const _0x1b1efe = _0x162672(this, _0x459a8b).hashString(_0x4315c8);
      if (_0x45533f < 16000) {
        TriggerServerEventInternal(_0x1b1efe, _0x1c2a48, _0x1c2a48.length);
      } else {
        TriggerLatentServerEventInternal(_0x1b1efe, _0x1c2a48, _0x1c2a48.length, 128000);
      }
    };
    _0x5ffd9f = new WeakSet();
    _0x461e29 = function () {
      if (_0x162672(this, _0x57732a)) {
        return _0x5d4b7a.error("SDK RPC handlers already initialized");
      }
      _0x3199c1(this, _0x108420, _0x34b785).call(this, "__rpc_res:" + _0x162672(this, _0x5e75f0), (_0x39f624, [_0x297576, _0x108658]) => {
        const _0x78f38f = _0x162672(this, _0x5a3e44).get(_0x39f624);
        if (!_0x78f38f) {
          return;
        }
        clearTimeout(_0x78f38f.timeout);
        if (_0x297576) {
          _0x78f38f.resolve(_0x108658);
        } else {
          _0x78f38f.reject(new Error(_0x108658));
        }
      });
      _0xf0f05d(this, _0x57732a, true);
      _0x5d4b7a.debug("SDK RPC handlers initialized");
    };
    var _0x11a862 = new _0x4931f8();
    var _0x22e6b0 = _0x22d19b(_0x45bc90());
    var _0x17be18 = (_0x44812b = 128) => {
      return _0x22e6b0.lib.WordArray.random(_0x44812b / 8).toString();
    };
    var _0xbbc2fa = (_0x124aff, _0x27af2b) => {
      if (typeof _0x124aff !== "string" || typeof _0x27af2b !== "string") {
        return "";
      }
      return _0x22e6b0.AES.encrypt(_0x124aff, _0x27af2b).toString();
    };
    var _0xf6079b = (_0x500e7b, _0x570821) => {
      if (typeof _0x500e7b !== "string" || typeof _0x570821 !== "string") {
        return "";
      }
      return _0x22e6b0.AES.decrypt(_0x500e7b, _0x570821).toString(_0x22e6b0.enc.Utf8);
    };
    var _0x32bc71 = _0x322cd3 => {
      if (typeof _0x322cd3 !== "string") {
        return "";
      }
      return _0x22e6b0.enc.Base64.stringify(_0x22e6b0.enc.Utf8.parse(_0x322cd3));
    };
    var _0x663ecf = (_0x18b62c, _0x2166ad) => {
      return _0x32bc71((0, _0x22e6b0.HmacMD5)(_0x18b62c, _0x2166ad).toString());
    };
    var _0x1f278a = {};
    var _0x3ec48f = (_0x1d7fe0, _0x4ccb8f = _0x17be18()) => {
      if (_0x1f278a[_0x1d7fe0] === undefined) {
        _0x1f278a[_0x1d7fe0] = _0x663ecf(_0x1d7fe0, _0x4ccb8f);
      }
      return _0x1f278a[_0x1d7fe0];
    };
    var _0x4fe1a8 = (_0x2a9a49, _0x370f62 = _0x17be18()) => {
      try {
        return _0xbbc2fa(JSON.stringify(_0x2a9a49), _0x370f62);
      } catch (_0x2ecc96) {
        console.error("Failed to encode payload");
      }
    };
    var _0x3a527d = (_0x3db1d0, _0x51fefb = _0x17be18()) => {
      try {
        return JSON.parse(_0xf6079b(_0x3db1d0, _0x51fefb));
      } catch (_0x15666e) {
        console.error("Failed to decode payload");
      }
    };
    var _0x704d4e;
    var _0x94f78b;
    var _0x395d3b;
    var _0x51cc95;
    var _0x164684;
    var _0x53c9ce;
    var _0x18582f;
    var _0x11d6f9;
    var _0x5330ce;
    var _0x5673c7;
    var _0x3a06e0;
    var _0x5e6240;
    var _0x1c8021;
    var _0x5965e8;
    var _0x534e03;
    var _0x2836dd;
    var _0xc9134c;
    var _0x5d43fa;
    var _0x1cf2eb = class {
      constructor() {
        _0xc69af7(this, _0x5330ce);
        _0xc69af7(this, _0x3a06e0);
        _0xc69af7(this, _0x1c8021);
        _0xc69af7(this, _0x534e03);
        _0xc69af7(this, _0xc9134c);
        _0xc69af7(this, _0x704d4e, undefined);
        _0xc69af7(this, _0x94f78b, undefined);
        _0xc69af7(this, _0x395d3b, undefined);
        _0xc69af7(this, _0x51cc95, undefined);
        _0xc69af7(this, _0x164684, undefined);
        _0xc69af7(this, _0x53c9ce, undefined);
        _0xc69af7(this, _0x18582f, undefined);
        _0xc69af7(this, _0x11d6f9, undefined);
        _0xf0f05d(this, _0x704d4e, GetCurrentResourceName());
        _0xf0f05d(this, _0x94f78b, _0x17be18(64));
        _0xf0f05d(this, _0x395d3b, _0x17be18(64));
        _0xf0f05d(this, _0x51cc95, _0x17be18(64));
        _0xf0f05d(this, _0x164684, false);
        _0xf0f05d(this, _0x53c9ce, 0);
        _0xf0f05d(this, _0x18582f, []);
        _0xf0f05d(this, _0x11d6f9, new Map());
        _0x3199c1(this, _0x5330ce, _0x5673c7).call(this, "__npx_sdk:init", _0x3199c1(this, _0xc9134c, _0x5d43fa).bind(this));
      }
      async register(_0xf8e983, _0x551a91) {
        _0x3199c1(this, _0x3a06e0, _0x5e6240).call(this, "__nui_req:" + _0xf8e983, async (_0x5d2ba6, _0x601136) => {
          let _0x4c50ec;
          let _0x5c2cbb;
          const _0x381a98 = _0x3a527d(_0x5d2ba6, _0x162672(this, _0x395d3b));
          if (!(_0x381a98 == null ? undefined : _0x381a98.id) || !(_0x381a98 == null ? undefined : _0x381a98.resource)) {
            return _0x5d4b7a.error("[NUI] " + _0xf8e983 + " - Invalid metadata received");
          }
          try {
            _0x4c50ec = await _0x551a91(..._0x601136);
            _0x5c2cbb = true;
          } catch (_0x2434b4) {
            _0x4c50ec = _0x2434b4.message;
            _0x5c2cbb = false;
          }
          _0x3199c1(this, _0x534e03, _0x2836dd).call(this, "__nui_res:" + _0x381a98.resource, _0x381a98.id, [_0x5c2cbb, _0x4c50ec]);
        });
      }
      remove(_0x488893) {
        const _0x568637 = _0x3ec48f("__nui_req:" + _0x488893, _0x162672(this, _0x94f78b));
        UnregisterRawNuiCallback(_0x568637);
      }
      async execute(_0x1ae6bf, ..._0x5109b4) {
        const _0x31a66b = {
          id: ++_0x382da9(this, _0x53c9ce)._,
          resource: _0x162672(this, _0x704d4e)
        };
        const _0x2c9861 = new Promise((_0x1db25a, _0x232f9f) => {
          let _0x674536;
          if (_0x162672(this, _0x164684)) {
            _0x674536 = setTimeout(() => _0x232f9f(new Error("RPC timed out | " + _0x1ae6bf)), 60000);
          } else {
            _0x674536 = 0;
          }
          var _0xb00820 = {
            resolve: _0x1db25a,
            reject: _0x232f9f,
            timeout: _0x674536
          };
          _0x162672(this, _0x11d6f9).set(_0x31a66b.id, _0xb00820);
        });
        _0x2c9861.finally(() => _0x162672(this, _0x11d6f9).delete(_0x31a66b.id));
        if (!_0x162672(this, _0x164684)) {
          var _0x156240 = {
            type: "execute",
            event: "__nui_req:" + _0x1ae6bf,
            metadata: _0x31a66b,
            args: _0x5109b4
          };
          _0x162672(this, _0x18582f).push(_0x156240);
        } else {
          _0x3199c1(this, _0x534e03, _0x2836dd).call(this, "__nui_req:" + _0x1ae6bf, _0x4fe1a8(_0x31a66b, _0x162672(this, _0x51cc95)), _0x5109b4);
        }
        return _0x2c9861;
      }
    };
    _0x704d4e = new WeakMap();
    _0x94f78b = new WeakMap();
    _0x395d3b = new WeakMap();
    _0x51cc95 = new WeakMap();
    _0x164684 = new WeakMap();
    _0x53c9ce = new WeakMap();
    _0x18582f = new WeakMap();
    _0x11d6f9 = new WeakMap();
    _0x5330ce = new WeakSet();
    _0x5673c7 = function (_0x293b77, _0x5c9d84) {
      RegisterNuiCallback(_0x293b77, ({
        args: _0x5e5d9c
      }, _0x4e5532) => {
        _0x4e5532(true);
        return _0x5c9d84(..._0x5e5d9c);
      });
    };
    _0x3a06e0 = new WeakSet();
    _0x5e6240 = function (_0x8e60fa, _0x3701b5) {
      if (_0x162672(this, _0x164684)) {
        const _0x45691f = _0x3ec48f(_0x8e60fa, _0x162672(this, _0x94f78b));
        return _0x3199c1(this, _0x5330ce, _0x5673c7).call(this, _0x45691f, _0x3701b5);
      }
      var _0xf0956 = {
        type: "on",
        event: _0x8e60fa,
        callback: _0x3701b5
      };
      _0x162672(this, _0x18582f).push(_0xf0956);
    };
    _0x1c8021 = new WeakSet();
    _0x5965e8 = function (_0x58edbd, ..._0x2a8bcb) {
      var _0x3f48d3 = {
        event: _0x58edbd,
        args: _0x2a8bcb
      };
      SendNuiMessage(JSON.stringify(_0x3f48d3, null));
    };
    _0x534e03 = new WeakSet();
    _0x2836dd = function (_0x29acb6, ..._0xd6d7ea) {
      if (_0x162672(this, _0x164684)) {
        const _0x4e1484 = _0x3ec48f(_0x29acb6, _0x162672(this, _0x94f78b));
        return _0x3199c1(this, _0x1c8021, _0x5965e8).call(this, _0x4e1484, ..._0xd6d7ea);
      }
      var _0x14d091 = {
        type: "emit",
        event: _0x29acb6,
        args: _0xd6d7ea
      };
      _0x162672(this, _0x18582f).push(_0x14d091);
    };
    _0xc9134c = new WeakSet();
    _0x5d43fa = async function () {
      if (_0x162672(this, _0x164684)) {
        return _0x5d4b7a.error("[NUI] SDK already initialized");
      }
      _0xf0f05d(this, _0x164684, true);
      _0x3199c1(this, _0x3a06e0, _0x5e6240).call(this, "__nui_res:" + _0x162672(this, _0x704d4e), (_0x147a64, [_0x51fce0, _0x5102ab]) => {
        const _0x231208 = _0x162672(this, _0x11d6f9).get(_0x147a64);
        if (!_0x231208) {
          return _0x5d4b7a.error("[NUI] Invalid response received");
        }
        clearTimeout(_0x231208.timeout);
        if (_0x51fce0) {
          _0x231208.resolve(_0x5102ab);
        } else {
          _0x231208.reject(_0x5102ab);
        }
      });
      _0x3199c1(this, _0x1c8021, _0x5965e8).call(this, "__npx_sdk:ready", _0x32bc71(_0x162672(this, _0x94f78b) + ":" + _0x162672(this, _0x395d3b) + ":" + _0x162672(this, _0x51cc95)));
      _0x5d4b7a.debug("[NUI] SDK initialized");
      for (const _0xfe1a2b of _0x162672(this, _0x18582f)) {
        if (_0xfe1a2b.type === "on") {
          _0x3199c1(this, _0x3a06e0, _0x5e6240).call(this, _0xfe1a2b.event, _0xfe1a2b.callback);
        } else if (_0xfe1a2b.type === "emit") {
          setTimeout(() => _0x3199c1(this, _0x534e03, _0x2836dd).call(this, _0xfe1a2b.event, ..._0xfe1a2b.args), 1000);
        } else if (_0xfe1a2b.type === "execute") {
          const _0xa56f16 = _0x162672(this, _0x11d6f9).get(_0xfe1a2b.metadata.id);
          if (!_0xa56f16) {
            _0x5d4b7a.error("[RPC] " + _0xfe1a2b.event + " - Failed to execute queued RPC call");
            continue;
          }
          _0xa56f16.timeout = setTimeout(() => _0xa56f16.reject(new Error("RPC timed out | " + _0xfe1a2b.event)), 60000);
          setTimeout(() => _0x3199c1(this, _0x534e03, _0x2836dd).call(this, _0xfe1a2b.event, _0x4fe1a8(_0xfe1a2b.metadata, _0x162672(this, _0x51cc95)), _0xfe1a2b.args), 1000);
        }
      }
    };
    var _0x9cf832;
    var _0x1caa3b;
    var _0x1a1c83;
    var _0x2e95d7 = class {
      constructor(_0x4f5791) {
        _0xc69af7(this, _0x9cf832, undefined);
        _0xc69af7(this, _0x1caa3b, undefined);
        _0xc69af7(this, _0x1a1c83, new Map());
        _0xf0f05d(this, _0x9cf832, _0x4f5791);
        _0xf0f05d(this, _0x1caa3b, false);
        const _0x586901 = GetCurrentResourceName();
        on("onResourceStop", _0x4c1f57 => {
          if (_0x4c1f57 === _0x586901) {
            for (const [_0x45d105, _0x3d5fc1] of _0x162672(this, _0x1a1c83).entries()) {
              _0x297216.Sync[_0x162672(this, _0x9cf832)].removeNuiEvent(_0x45d105);
            }
          }
        });
        on("onResourceStart", async _0x3295a1 => {
          if (_0x3295a1 === _0x162672(this, _0x9cf832)) {
            await _0x5d5475.waitForCondition(() => GetResourceState(_0x162672(this, _0x9cf832)) === "started", 10000);
            if (_0x162672(this, _0x1caa3b)) {
              for (const [_0x36f158, _0xbb35ca] of _0x162672(this, _0x1a1c83).entries()) {
                _0x297216.Sync[_0x162672(this, _0x9cf832)].removeNuiEvent(_0x36f158);
                this.register(_0x36f158, _0xbb35ca);
              }
            }
            _0xf0f05d(this, _0x1caa3b, true);
          }
          if (_0x3295a1 === _0x586901) {
            await _0x5d5475.waitForCondition(() => GetResourceState(_0x162672(this, _0x9cf832)) === "started", 10000);
            _0xf0f05d(this, _0x1caa3b, true);
          }
        });
      }
      async execute(_0x40c364, ..._0x3338d5) {
        return await _0x297216.Async[_0x162672(this, _0x9cf832)].sendNuiEvent(_0x40c364, _0x3338d5);
      }
      async register(_0x52e2a6, _0x11b3c9) {
        await _0x5d5475.waitForCondition(() => _0x162672(this, _0x1caa3b), 10000);
        const _0x451c18 = _0x297216.Sync[_0x162672(this, _0x9cf832)].registerNuiEvent(_0x52e2a6, _0x11b3c9);
        if (_0x451c18) {
          _0x162672(this, _0x1a1c83).set(_0x52e2a6, _0x11b3c9);
        }
      }
    };
    _0x9cf832 = new WeakMap();
    _0x1caa3b = new WeakMap();
    _0x1a1c83 = new WeakMap();
    var _0x182750 = class {
      constructor() {
        const _0x232c5f = async (_0x44621d, _0x4b47f4) => {
          return await _0x30390f.execute(_0x44621d, ..._0x4b47f4);
        };
        _0x297216.Async("sendNuiEvent", _0x232c5f);
        const _0x52fdc5 = (_0x5d2ce4, _0x47c67f) => {
          _0x30390f.register(_0x5d2ce4, _0x47c67f);
          return true;
        };
        _0x297216.Sync("registerNuiEvent", _0x52fdc5);
        const _0x5f49f1 = _0x3b9395 => {
          _0x30390f.remove(_0x3b9395);
        };
        _0x297216.Sync("removeNuiEvent", _0x5f49f1);
      }
    };
    var _0x2c419b = null && _0x2e95d7;
    var _0x5a7cc7 = null && _0x182750;
    var _0x30390f = new _0x1cf2eb();
    var _0x1e517e;
    var _0x2e92bd;
    var _0x448990;
    var _0x414cb1 = class {
      constructor() {
        _0xc69af7(this, _0x1e517e, undefined);
        _0xc69af7(this, _0x2e92bd, undefined);
        _0xc69af7(this, _0x448990, undefined);
        _0xf0f05d(this, _0x448990, false);
        _0x30390f.register("__npx_sdk:sockets:init", async () => {
          _0x5d4b7a.debug("Sockets", "Initializing sockets...");
          if (_0x162672(this, _0x448990)) {
            return {
              url: _0x162672(this, _0x1e517e),
              API_KEY: _0x162672(this, _0x2e92bd)
            };
          }
          const _0x22ae04 = await new Promise(_0xbf3104 => {
            emit("__npx_core:sockets:init", _0xbf3104);
          });
          if (!(_0x22ae04 == null ? undefined : _0x22ae04.API_URL) || !(_0x22ae04 == null ? undefined : _0x22ae04.API_KEY)) {
            return;
          }
          _0xf0f05d(this, _0x1e517e, _0x22ae04.API_URL);
          _0xf0f05d(this, _0x2e92bd, _0x22ae04.API_KEY);
          _0xf0f05d(this, _0x448990, true);
          _0x5d4b7a.debug("Sockets", "Sockets initialized.");
          return _0x22ae04;
        });
      }
      register(_0x4bb6f4, _0x2c53cf) {
        _0x30390f.execute("__npx_sdk:sockets:register", _0x4bb6f4);
        _0x30390f.register("__npx_sdk:sockets:pipe:" + _0x4bb6f4, async _0x13ec79 => {
          return _0x2c53cf(_0x13ec79);
        });
      }
      async execute(_0x509f6c, _0x222d8d) {
        return _0x30390f.execute("__npx_sdk:sockets:execute", _0x509f6c, _0x222d8d);
      }
    };
    _0x1e517e = new WeakMap();
    _0x2e92bd = new WeakMap();
    _0x448990 = new WeakMap();
    var _0x46d819 = new _0x414cb1();
    var _0x2663ad = {
      HasItem: async (_0x2e03fc, _0x3b5d6d) => {
        return await globalThis.exports.inventory.HasItem(_0x2e03fc, _0x3b5d6d);
      },
      GetItemStacks: async (_0x2522c4, _0x49d3c1) => {
        return await globalThis.exports.inventory.GetItemStacks(_0x2522c4, _0x49d3c1);
      },
      GetAllItemStacks: async _0x567ee5 => {
        return await globalThis.exports.inventory.GetAllItemStacks(_0x567ee5);
      },
      GetItemList: async () => {
        return await globalThis.exports.inventory.GetItemList();
      },
      GetPlayerInventories: async () => {
        return await globalThis.exports.inventory.GetPlayerInventories();
      },
      GetWeaponsList: () => {
        return globalThis.exports.inventory.GetWeaponsList();
      },
      GetWeapon: _0x2eddf3 => {
        return globalThis.exports.inventory.GetWeapon(_0x2eddf3);
      },
      OpenInventory: (_0x4accbf, _0x5c36e8) => {
        globalThis.exports.inventory.OpenInventory(_0x4accbf, _0x5c36e8);
      },
      UseBodySlot: _0x2b845b => {
        return _0x297216.Async.inventory.UseBodySlot(_0x2b845b);
      },
      SetBodySlotDisabled: (_0x13e217, _0x547db1, _0x2d606a) => {
        _0x297216.Sync.inventory.SetBodySlotDisabled(_0x13e217, _0x547db1, _0x2d606a);
      },
      IsBodySlotDisabled: (_0x891d14, _0x275495) => {
        return _0x297216.Sync.inventory.IsBodySlotDisabled(_0x891d14, _0x275495);
      }
    };
    var _0x536d04 = {};
    var _0x59f48e = {
      Cache: () => _0x544fa5,
      PolyZone: () => _0x1275ac,
      Thread: () => _0x5854c9,
      Vector2: () => _0x2a6fa8,
      Vector3: () => _0x26b14d
    };
    _0x530d70(_0x536d04, _0x59f48e);
    var _0x5854c9 = class {
      constructor(_0xa62aa6, _0x43ad46, _0x445187 = "interval") {
        this.callback = _0xa62aa6;
        this.delay = _0x43ad46;
        this.mode = _0x445187;
        this.scheduled = {};
        this.tick = 0;
        this.data = {};
        this.active = false;
        this.aborted = false;
        this.hooks = new Map([["active", []], ["preStop", []], ["preStart", []], ["afterStop", []], ["afterStart", []], ["stopAborted", []], ["startAborted", []]]);
      }
      get isActive() {
        return this.active;
      }
      async start() {
        if (this.active) {
          return;
        }
        this.aborted = false;
        this.scheduled = {};
        const _0x328f7f = this.hooks.get("preStart") ?? [];
        try {
          for (const _0x1990e8 of _0x328f7f) {
            if (!this.aborted) {
              await _0x1990e8.call(this);
            }
          }
        } catch (_0x27ec8f) {
          this.aborted = true;
          console.log("Error while calling pre-start hook", _0x27ec8f.message);
        }
        if (this.aborted) {
          try {
            const _0x2f0e6a = this.hooks.get("startAborted") ?? [];
            for (const _0x195b0b of _0x2f0e6a) {
              await _0x195b0b.call(this);
            }
          } catch (_0x350568) {
            console.log("Error while calling start-aborted hook", _0x350568.message);
          }
          return;
        }
        this.active = true;
        const _0xda981 = this.hooks.get("active") ?? [];
        switch (this.mode) {
          case "tick":
            {
              this.threadId = setTick(async () => {
                this.tick += 1;
                try {
                  await this.callback.call(this);
                  for (const _0x268b51 of _0xda981) {
                    await _0x268b51.call(this);
                  }
                } catch (_0x28b264) {
                  console.log("Error while calling active hook", _0x28b264.message);
                }
                if (this.delay > 0) {
                  await new Promise(_0x542d71 => setTimeout(_0x542d71, this.delay));
                }
              });
              break;
            }
          case "interval":
            {
              this.threadId = setInterval(async () => {
                this.tick += 1;
                try {
                  await this.callback.call(this);
                  for (const _0x4860eb of _0xda981) {
                    await _0x4860eb.call(this);
                  }
                } catch (_0x38c717) {
                  console.log("Error while calling active hook", _0x38c717.message);
                }
              }, this.delay);
              break;
            }
          case "timeout":
            {
              const _0x471a4d = () => {
                if (this.active) {
                  this.threadId = setTimeout(async () => {
                    this.tick += 1;
                    try {
                      await this.callback.call(this);
                      for (const _0x46d44e of _0xda981) {
                        await _0x46d44e.call(this);
                      }
                    } catch (_0x27af0a) {
                      console.log("Error while calling active hook", _0x27af0a.message);
                    }
                    return _0x471a4d();
                  }, this.delay);
                }
              };
              _0x471a4d();
              break;
            }
        }
        const _0x4e8a1d = this.hooks.get("afterStart") ?? [];
        try {
          for (const _0x1fa769 of _0x4e8a1d) {
            await _0x1fa769.call(this);
          }
        } catch (_0x54cea1) {
          console.log("Error while calling after-start hook", _0x54cea1.message);
        }
      }
      async stop() {
        if (!this.active) {
          return;
        }
        const _0x219640 = this.hooks.get("preStop") ?? [];
        try {
          for (const _0x34ab92 of _0x219640) {
            if (!this.aborted) {
              await _0x34ab92.call(this);
            }
          }
        } catch (_0x3b21d2) {
          this.aborted = true;
          console.log("Error while calling pre-stop hook", _0x3b21d2.message);
        }
        this.active = false;
        switch (this.mode) {
          case "tick":
            {
              clearTick(this.threadId);
              break;
            }
          case "interval":
            {
              clearInterval(this.threadId);
              break;
            }
          case "timeout":
            {
              clearTimeout(this.threadId);
              break;
            }
        }
        if (this.aborted) {
          try {
            const _0x3c2eba = this.hooks.get("stopAborted") ?? [];
            for (const _0x39f987 of _0x3c2eba) {
              await _0x39f987.call(this);
            }
          } catch (_0x260b5b) {
            console.log("Error while calling stop-aborted hook", _0x260b5b.message);
          }
          return;
        }
        const _0x304543 = this.hooks.get("afterStop") ?? [];
        try {
          for (const _0x18d577 of _0x304543) {
            await _0x18d577.call(this);
          }
        } catch (_0x950c6d) {
          console.log("Error while calling after-stop hook", _0x950c6d.message);
        }
      }
      abort() {
        this.aborted = true;
      }
      addHook(_0x52ef9b, _0x5a39a3) {
        var _0x5d50fb;
        if ((_0x5d50fb = this.hooks.get(_0x52ef9b)) == null) {
          undefined;
        } else {
          _0x5d50fb.push(_0x5a39a3);
        }
      }
      setNextTick(_0x3ebae4, _0x31d879) {
        this.scheduled[_0x3ebae4] = this.tick + _0x31d879;
      }
      canTick(_0xed491d) {
        return this.scheduled[_0xed491d] === undefined || this.tick >= this.scheduled[_0xed491d];
      }
    };
    var _0x213dc5 = {};
    var _0x2b2463 = {
      GetEntityStateValue: () => _0x54b35d,
      GetPlayerStateValue: () => _0x1bfb8f,
      RegisterStatebagChangeHandler: () => _0x11baec,
      SetEntityStateValue: () => _0x402d44,
      SetPlayerStateValue: () => _0x413932
    };
    _0x530d70(_0x213dc5, _0x2b2463);
    var _0x383f36 = new _0x544fa5(5000);
    function _0x347ac0(_0x4cc1d4) {
      let _0x2193bf = _0x383f36.get("ent-" + _0x4cc1d4 + "}");
      if (_0x2193bf) {
        return _0x2193bf;
      }
      _0x2193bf = Entity(_0x4cc1d4);
      _0x383f36.set("ent-" + _0x4cc1d4 + "}", _0x2193bf);
      return _0x2193bf;
    }
    function _0x54b35d(_0x1405ba, _0x2617a1) {
      const _0x295c7d = _0x347ac0(_0x1405ba);
      return _0x295c7d.state[_0x2617a1];
    }
    function _0x402d44(_0x54b792, _0x3bfd87, _0x36db40, _0x35dad7 = false) {
      const _0x3a75b7 = _0x347ac0(_0x54b792);
      _0x3a75b7.state.set(_0x3bfd87, _0x36db40, _0x35dad7);
    }
    function _0x5c79ca(_0x1224d6) {
      let _0x33efc7 = _0x383f36.get("ply-" + _0x1224d6 + "}");
      if (_0x33efc7) {
        return _0x33efc7;
      }
      _0x33efc7 = Player(_0x1224d6);
      _0x383f36.set("ply-" + _0x1224d6 + "}", _0x33efc7);
      return _0x33efc7;
    }
    function _0x1bfb8f(_0x2f5672, _0x43efe1) {
      const _0xd5e88b = _0x5c79ca(_0x2f5672);
      return _0xd5e88b.state[_0x43efe1];
    }
    function _0x413932(_0x47c438, _0x563c66, _0x1ae8bf, _0x386efc = false) {
      const _0x542fa = _0x5c79ca(_0x47c438);
      _0x542fa.state.set(_0x563c66, _0x1ae8bf, _0x386efc);
    }
    function _0x11baec(_0x5e880f, _0x13b08d, _0x22a00c, _0x10bd74) {
      return AddStateBagChangeHandler(_0x5e880f, null, async function (_0xde0407, _0x3f2ce0, _0x1bef11, _0x205873, _0x48a037) {
        if (_0x22a00c && !_0x48a037) {
          return;
        }
        const _0x40c41c = _0xde0407.startsWith("player");
        const _0x47bf59 = parseInt(_0xde0407.substring(7));
        const _0x16b7d3 = _0x40c41c ? GetPlayerFromStateBagName(_0xde0407) : GetEntityFromStateBagName(_0xde0407);
        if (!_0x16b7d3) {
          return;
        }
        const _0x2820d4 = _0x40c41c ? NetworkGetPlayerIndexFromPed(_0x16b7d3) === PlayerId() : NetworkGetEntityOwner(_0x16b7d3) === PlayerId();
        if (_0x13b08d && !_0x2820d4) {
          return;
        }
        _0x10bd74(_0x47bf59, _0x16b7d3, _0x1bef11);
      });
    }
    var _0x1ea2c6 = {};
    var _0x419fa3 = {
      GetFuelLevel: () => _0xbda2d6,
      GetIdentifier: () => _0x49fe5b,
      GetMetadata: () => _0x216582,
      HasKey: () => _0x3c53ef,
      IsVinScratched: () => _0x508712,
      SwapSeat: () => _0x5f185a,
      TurnOffEngine: () => _0x84f10a,
      TurnOnEngine: () => _0x31a4cc
    };
    _0x530d70(_0x1ea2c6, _0x419fa3);
    function _0x31a4cc(_0x3146a4) {
      _0x297216.Sync["np-vehicles"].TurnOnEngine(_0x3146a4);
    }
    function _0x84f10a(_0x4c94ab) {
      _0x297216.Sync["np-vehicles"].TurnOffEngine(_0x4c94ab);
    }
    function _0x3c53ef(_0x4bf16c) {
      return _0x297216.Sync["np-vehicles"].HasVehicleKey(_0x4bf16c);
    }
    function _0x216582(_0x4e7933, _0x39329f) {
      const _0x4cc0b6 = _0x54b35d(_0x4e7933, "data");
      if (_0x39329f) {
        if (_0x4cc0b6 == null) {
          return undefined;
        } else {
          return _0x4cc0b6[_0x39329f];
        }
      } else {
        return _0x4cc0b6;
      }
    }
    function _0x49fe5b(_0x1726ed) {
      return _0x54b35d(_0x1726ed, "vin");
    }
    function _0x508712(_0x29eee1) {
      return _0x54b35d(_0x29eee1, "vinScratched");
    }
    function _0x5f185a(_0x305eb1, _0x3bb625) {
      _0x297216.Sync["np-vehicles"].SwapVehicleSeat(_0x305eb1, _0x3bb625);
    }
    function _0xbda2d6(_0x89b632) {
      return _0x216582(_0x89b632, "fuel") ?? 0;
    }
    var _0x1aafdc = async _0x15e4f8 => {
      const _0x42ad29 = typeof _0x15e4f8 === "number" ? _0x15e4f8 : GetHashKey(_0x15e4f8);
      if (HasModelLoaded(_0x42ad29)) {
        return true;
      }
      RequestModel(_0x42ad29);
      const _0x101ac2 = await _0x5d5475.waitForCondition(() => HasModelLoaded(_0x42ad29), 3000);
      return !_0x101ac2;
    };
    var _0x126107 = async _0x325c12 => {
      if (HasAnimDictLoaded(_0x325c12)) {
        return true;
      }
      RequestAnimDict(_0x325c12);
      const _0x2caab2 = await _0x5d5475.waitForCondition(() => HasAnimDictLoaded(_0x325c12), 3000);
      return !_0x2caab2;
    };
    var _0x560552 = async _0x7c8b70 => {
      if (HasClipSetLoaded(_0x7c8b70)) {
        return true;
      }
      RequestClipSet(_0x7c8b70);
      const _0x5b0736 = await _0x5d5475.waitForCondition(() => HasClipSetLoaded(_0x7c8b70), 3000);
      return !_0x5b0736;
    };
    var _0x57dd21 = async _0xcb445e => {
      if (HasStreamedTextureDictLoaded(_0xcb445e)) {
        return true;
      }
      RequestStreamedTextureDict(_0xcb445e, true);
      const _0x9876ba = await _0x5d5475.waitForCondition(() => HasStreamedTextureDictLoaded(_0xcb445e), 3000);
      return !_0x9876ba;
    };
    var _0x4a4821 = async (_0x32f4fc, _0x15a844, _0x21f450) => {
      const _0x15e696 = typeof _0x32f4fc === "number" ? _0x32f4fc : GetHashKey(_0x32f4fc);
      if (HasWeaponAssetLoaded(_0x15e696)) {
        return true;
      }
      RequestWeaponAsset(_0x15e696, _0x15a844, _0x21f450);
      const _0x286367 = await _0x5d5475.waitForCondition(() => HasWeaponAssetLoaded(_0x15e696), 3000);
      return !_0x286367;
    };
    var _0x204832 = async _0x1e31a1 => {
      if (HasNamedPtfxAssetLoaded(_0x1e31a1)) {
        return true;
      }
      RequestNamedPtfxAsset(_0x1e31a1);
      const _0xd06754 = await _0x5d5475.waitForCondition(() => HasNamedPtfxAssetLoaded(_0x1e31a1), 3000);
      return !_0xd06754;
    };
    var _0x5661c2 = {
      loadModel: _0x1aafdc,
      loadTexture: _0x57dd21,
      loadAnim: _0x126107,
      loadClipSet: _0x560552,
      loadWeaponAsset: _0x4a4821,
      loadNamedPtfxAsset: _0x204832
    };
    var _0x5cb85b = _0x5661c2;
    var _0xa29295 = (_0x43ec1b, ..._0x2b7aa0) => {
      switch (_0x43ec1b) {
        case "coord":
          {
            const [_0x1b1971, _0x3c0d55, _0x14cb7a] = _0x2b7aa0;
            return AddBlipForCoord(_0x1b1971, _0x3c0d55, _0x14cb7a);
          }
        case "area":
          {
            const [_0x5354d2, _0xe3e537, _0x20d9c2, _0x2ef184, _0x1ed742] = _0x2b7aa0;
            return AddBlipForArea(_0x5354d2, _0xe3e537, _0x20d9c2, _0x2ef184, _0x1ed742);
          }
        case "radius":
          {
            const [_0x4f39f4, _0x20d305, _0x13f73f, _0xc4d1a7] = _0x2b7aa0;
            return AddBlipForRadius(_0x4f39f4, _0x20d305, _0x13f73f, _0xc4d1a7);
          }
        case "pickup":
          {
            const [_0x4e0d77] = _0x2b7aa0;
            return AddBlipForPickup(_0x4e0d77);
          }
        case "entity":
          {
            const [_0x1c0162] = _0x2b7aa0;
            return AddBlipForEntity(_0x1c0162);
          }
        default:
          {
            console.error(new Error("Invalid Blip Type"));
            return 0;
          }
      }
    };
    var _0x218586 = (_0x3086a4, _0x160694, _0x375b0b, _0x27c144, _0x1849a0, _0x21b7a6, _0x55c573, _0x38ffab) => {
      if (typeof _0x375b0b === "number") {
        SetBlipSprite(_0x3086a4, _0x375b0b);
      }
      if (typeof _0x27c144 === "number") {
        SetBlipColour(_0x3086a4, _0x27c144);
      }
      if (typeof _0x1849a0 === "number") {
        SetBlipAlpha(_0x3086a4, _0x1849a0);
      }
      if (typeof _0x21b7a6 === "number") {
        SetBlipScale(_0x3086a4, _0x21b7a6);
      }
      if (typeof _0x55c573 === "boolean") {
        SetBlipRoute(_0x3086a4, _0x55c573);
      }
      if (typeof _0x38ffab === "boolean") {
        SetBlipAsShortRange(_0x3086a4, _0x38ffab);
      }
      if (typeof _0x160694 === "string") {
        BeginTextCommandSetBlipName("STRING");
        AddTextComponentString(_0x160694);
        EndTextCommandSetBlipName(_0x3086a4);
      }
    };
    var _0x58a9c1 = {
      createBlip: _0xa29295,
      applyBlipSettings: _0x218586
    };
    var _0x4be8d9 = _0x58a9c1;
    var _0xac383c = new Set();
    var _0x532b00 = new Map();
    var _0x1e2443 = new Set();
    on("np-polyzone:enter", (_0xb9bf9d, _0x5ce42d) => {
      _0xac383c.add(_0xb9bf9d);
      if (_0x5ce42d == null ? undefined : _0x5ce42d.id) {
        _0xac383c.add(_0xb9bf9d + "-" + _0x5ce42d.id);
      }
      if (_0x1e2443.has(_0xb9bf9d)) {
        _0x10598b.emitNet("__sdk:zones:" + _0xb9bf9d + ":enter", _0x5ce42d);
      }
      const _0x737265 = _0x532b00.get(_0xb9bf9d + "-enter");
      if (_0x737265 === undefined) {
        return;
      }
      for (const _0x33523f of _0x737265) {
        try {
          _0x33523f(_0x5ce42d);
        } catch (_0xb0072) {
          console.log(_0xb0072);
        }
      }
    });
    on("np-polyzone:exit", (_0x64abe9, _0x214558) => {
      _0xac383c.delete(_0x64abe9);
      if (_0x214558 == null ? undefined : _0x214558.id) {
        _0xac383c.delete(_0x64abe9 + "-" + _0x214558.id);
      }
      if (_0x1e2443.has(_0x64abe9)) {
        _0x10598b.emitNet("__sdk:zones:" + _0x64abe9 + ":exit", _0x214558);
      }
      const _0x6b1071 = _0x532b00.get(_0x64abe9 + "-exit");
      if (_0x6b1071 === undefined) {
        return;
      }
      for (const _0x3c3560 of _0x6b1071) {
        try {
          _0x3c3560(_0x214558);
        } catch (_0x585a14) {
          console.log(_0x585a14);
        }
      }
    });
    var _0x4bcb47 = (_0x4f6426, _0x43d244) => {
      return _0xac383c.has(_0x43d244 ? _0x4f6426 + "-" + _0x43d244 : _0x4f6426);
    };
    var _0x2324b8 = (_0x689059, _0x210415) => {
      const _0x545295 = _0x689059 + "-enter";
      const _0x544e9c = _0x532b00.get(_0x545295) ?? [];
      if (!_0x532b00.has(_0x545295)) {
        _0x532b00.set(_0x545295, _0x544e9c);
      }
      _0x544e9c.push(_0x210415);
    };
    var _0x4643bc = (_0x281ed7, _0x3976a3) => {
      const _0x51d2f4 = _0x281ed7 + "-exit";
      const _0x4a8ed4 = _0x532b00.get(_0x51d2f4) ?? [];
      if (!_0x532b00.has(_0x51d2f4)) {
        _0x532b00.set(_0x51d2f4, _0x4a8ed4);
      }
      _0x4a8ed4.push(_0x3976a3);
    };
    var _0x51d697 = (_0x37cbb, _0x3ef032, _0x3182fa, _0x2f4366, _0x2123db = {}) => {
      var _0x268dd2 = {
        ..._0x2f4366
      };
      _0x268dd2.data = _0x2123db;
      _0x268dd2.id = _0x37cbb;
      const _0x2e55cf = _0x268dd2;
      _0x2e55cf.data.id = _0x37cbb;
      exports["np-polyzone"].AddPolyZone(_0x3ef032, _0x3182fa, _0x2e55cf);
    };
    var _0x99c028 = (_0x52f067, _0x5b5e2f, _0x6ee23a, _0x10cf86, _0x2e7e08, _0x30f1ff, _0x1c56c6 = {}) => {
      var _0xdee3ba = {
        ..._0x30f1ff
      };
      _0xdee3ba.data = _0x1c56c6;
      _0xdee3ba.id = _0x52f067;
      const _0xbe5115 = _0xdee3ba;
      _0xbe5115.data.id = _0x52f067;
      exports["np-polyzone"].AddBoxZone(_0x5b5e2f, _0x6ee23a, _0x10cf86, _0x2e7e08, _0xbe5115);
    };
    var _0x4b5947 = (_0x29d4a4, _0x2a62a8, _0x488d4e, _0x5558ca, _0x58fe5c, _0x6439ab, _0x21e5db = {}) => {
      var _0x31becb = {
        ..._0x6439ab
      };
      _0x31becb.data = _0x21e5db;
      _0x31becb.id = _0x29d4a4;
      const _0x25f590 = _0x31becb;
      _0x25f590.data.id = _0x29d4a4;
      exports["np-polytarget"].AddBoxZone(_0x2a62a8, _0x488d4e, _0x5558ca, _0x58fe5c, _0x25f590);
    };
    var _0xd54f77 = (_0x452be5, _0x20a375, _0x1f52dc, _0x353789, _0x2a8d21, _0x3ab28c = {}) => {
      var _0x3e25c6 = {
        ..._0x2a8d21
      };
      _0x3e25c6.data = _0x3ab28c;
      _0x3e25c6.id = _0x452be5;
      const _0x2e63ff = _0x3e25c6;
      _0x2e63ff.data.id = _0x452be5;
      exports["np-polyzone"].AddCircleZone(_0x20a375, _0x1f52dc, _0x353789, _0x2e63ff);
    };
    var _0x1f0efb = (_0x47a51b, _0xfd8b43, _0x4c436d, _0x23e31e, _0x22aedd, _0x1d7cc7 = {}) => {
      var _0xdbc582 = {
        ..._0x22aedd
      };
      _0xdbc582.data = _0x1d7cc7;
      _0xdbc582.id = _0x47a51b;
      const _0x5ef02b = _0xdbc582;
      _0x5ef02b.data.id = _0x47a51b;
      exports["np-polytarget"].AddCircleZone(_0xfd8b43, _0x4c436d, _0x23e31e, _0x5ef02b);
    };
    var _0x441596 = (_0x2dc893, _0x407bca, _0x5ae18c, _0x5aef6d, _0x423ac8 = {}) => {
      var _0x19f911 = {
        ..._0x5aef6d
      };
      _0x19f911.data = _0x423ac8;
      const _0x1bdb04 = _0x19f911;
      _0x1bdb04.data.id = _0x2dc893;
      exports["np-polyzone"].AddEntityZone(_0x407bca, _0x5ae18c, _0x1bdb04);
    };
    var _0x375412 = (_0x5e53c9, _0x548ab9) => {
      exports["np-polyzone"].RemoveZone(_0x5e53c9, _0x548ab9);
      _0xac383c.delete(_0x5e53c9 + "-" + _0x548ab9);
      _0x1e2443.delete(_0x5e53c9);
    };
    var _0x548134 = _0x329a8 => {
      _0x1e2443.add(_0x329a8);
    };
    var _0x57c215 = {
      isActive: _0x4bcb47,
      onEnter: _0x2324b8,
      onExit: _0x4643bc,
      addPolyZone: _0x51d697,
      addBoxZone: _0x99c028,
      addBoxTarget: _0x4b5947,
      addCircleZone: _0xd54f77,
      addCircleTarget: _0x1f0efb,
      addEntityZone: _0x441596,
      removeZone: _0x375412,
      setAsNetworked: _0x548134
    };
    var _0x2b402b = _0x57c215;
    var _0x2a4476 = (_0x130c49, _0xea295d, _0x30e46e) => {
      globalThis.exports["np-interact"].AddPeekEntryByModel(_0x130c49, _0xea295d, _0x30e46e);
    };
    var _0x298041 = (_0x2637d6, _0x1e951a, _0x5f8107) => {
      globalThis.exports["np-interact"].AddPeekEntryByPolyTarget(_0x2637d6, _0x1e951a, _0x5f8107);
    };
    var _0x4c4eb1 = (_0x8d3933, _0x215986, _0x472ea6) => {
      globalThis.exports["np-interact"].AddPeekEntryByFlag(_0x8d3933, _0x215986, _0x472ea6);
    };
    var _0x4a2806 = (_0x1554d2, _0x4795af, _0x157462) => {
      globalThis.exports["np-interact"].AddPeekEntryByEntityType(_0x1554d2, _0x4795af, _0x157462);
    };
    var _0x53c88d = (_0x240447, _0x5a211d, _0x1d16a5, _0x2076ec) => {
      var _0x387914 = {
        id: _0x240447,
        coords: [_0x5a211d.x, _0x5a211d.y, _0x5a211d.z],
        options: _0x1d16a5,
        context: _0x2076ec
      };
      const _0x5890e4 = _0x387914;
      globalThis.exports.interactions.AddInteraction(_0x5890e4);
    };
    var _0x3480b0 = (_0x32ea12, _0x30b5b0, _0x4b7736, _0x332c83) => {
      var _0x3a5b37 = {
        id: _0x32ea12,
        options: _0x4b7736,
        context: _0x332c83
      };
      const _0x20fbb7 = _0x3a5b37;
      globalThis.exports.interactions.AddInteractionByModel(_0x30b5b0, _0x20fbb7);
    };
    var _0x27ab49 = (_0xf8c351, _0x896845, _0x2a86de) => {
      var _0x54862f = {
        id: _0xf8c351,
        options: _0x896845,
        context: _0x2a86de
      };
      const _0x496726 = _0x54862f;
      _0x496726.context.isPlayer = true;
      globalThis.exports.interactions.AddPedInteraction(_0x496726);
    };
    var _0x43a8a9 = (_0x388fb8, _0x48ea6a, _0x245afd) => {
      var _0x443c3c = {
        id: _0x388fb8,
        options: _0x48ea6a,
        context: _0x245afd
      };
      const _0x4e1232 = _0x443c3c;
      globalThis.exports.interactions.AddPedInteraction(_0x4e1232);
    };
    var _0x293c87 = (_0x2cf31a, _0x10b96b, _0x67df99) => {
      var _0x7489a6 = {
        id: _0x2cf31a,
        options: _0x10b96b,
        context: _0x67df99
      };
      const _0x3bd044 = _0x7489a6;
      globalThis.exports.interactions.AddVehicleInteraction(_0x3bd044);
    };
    var _0x39ad88 = _0x329123 => {
      globalThis.exports.interactions.RemoveInteraction(_0x329123);
    };
    var _0x42cf27 = _0x1fd40c => {
      globalThis.exports.interactions.RemoveVehicleInteraction(_0x1fd40c);
    };
    var _0x4e0e30 = _0x478526 => {
      globalThis.exports.interactions.RemovePedInteraction(_0x478526);
    };
    var _0x12867c = (_0x3c0a8d, _0x22c4cb, _0x2c9375 = false, _0x58a83b = null, _0x20b390 = true, _0x52c236 = null) => {
      return new Promise(_0x27be10 => {
        globalThis.exports["np-taskbar"].taskBar(_0x3c0a8d, _0x22c4cb, _0x2c9375, _0x20b390, _0x52c236, false, _0x27be10, _0x58a83b == null ? undefined : _0x58a83b.distance, _0x58a83b == null ? undefined : _0x58a83b.entity);
      });
    };
    var _0x1141c6 = (_0x4715d4, _0x4c86f5, _0x20cee3, _0x1d4e41) => {
      return new Promise(_0xede466 => {
        globalThis.exports["np-phone"].DoPhoneConfirmation(_0x4715d4, _0x4c86f5, _0x20cee3, _0xede466, _0x1d4e41);
      });
    };
    var _0x634f17 = (_0x47e528, _0x30a39f, _0x4c4b2e = true, _0x11d7da = "home-screen") => {
      var _0x3f2534 = {
        action: "notification",
        target_app: _0x11d7da,
        title: _0x47e528,
        body: _0x30a39f,
        show_even_if_app_active: _0x4c4b2e
      };
      var _0x557bd5 = {
        source: "np-nui",
        app: "phone",
        data: _0x3f2534
      };
      globalThis.exports["np-ui"].SendUIMessage(_0x557bd5);
    };
    var _0x3e0eca = (_0x343362, _0x7517a3, _0x523816, _0xf57e69, _0x27c7fd, _0x8548f7, _0x39f86e = 0, _0x5a1e3a = true) => {
      SetTextColour(_0xf57e69[0], _0xf57e69[1], _0xf57e69[2], _0xf57e69[3]);
      if (_0x5a1e3a) {
        SetTextOutline();
      }
      SetTextScale(0, _0x27c7fd);
      SetTextFont(_0x8548f7 ?? 0);
      SetTextJustification(_0x39f86e);
      if (_0x39f86e === 2) {
        SetTextWrap(0, 0.575);
      }
      SetTextEntry("STRING");
      AddTextComponentString(_0x523816 ?? "Dummy text");
      EndTextCommandDisplayText(_0x343362, _0x7517a3);
    };
    var _0x2dec7e = (_0xcd1d42, _0x5130c7, _0x4d66e1, _0x41ebf8, _0x386b21 = 4, _0x2f21f2 = true, _0x5f1dc7) => {
      SetDrawOrigin(_0xcd1d42.x, _0xcd1d42.y, _0xcd1d42.z, 0);
      const _0x9a0c5a = Math.max(_0x4e99a9.getMapRange([0, 10], [0.4, 0.25], _0x5130c7), 0.1);
      _0x3e0eca(0, 0, _0x4d66e1, _0x41ebf8, _0x9a0c5a, _0x386b21, 0, _0x2f21f2);
      if (_0x5f1dc7) {
        DrawRect(0.002, _0x5f1dc7.height / 2, _0x5f1dc7.width, _0x5f1dc7.height, _0x5f1dc7.color[0], _0x5f1dc7.color[1], _0x5f1dc7.color[2], _0x5f1dc7.color[3]);
      }
      ClearDrawOrigin();
    };
    var _0x5d83cd = (_0xad1fb4, _0x1865cd, _0x49a23d, _0x2de46d) => {
      globalThis.exports.contacts.open(_0xad1fb4, _0x1865cd, _0x49a23d, _0x2de46d, true);
    };
    var _0x32e947 = {
      addPeekEntryByModel: _0x2a4476,
      addPeekEntryByTarget: _0x298041,
      addPeekEntryByFlag: _0x4c4eb1,
      addPeekEntryByType: _0x4a2806,
      addInteraction: _0x53c88d,
      addInteractionByModel: _0x3480b0,
      addPlayerInteraction: _0x27ab49,
      addPedInteraction: _0x43a8a9,
      addVehicleInteraction: _0x293c87,
      removeInteraction: _0x39ad88,
      removePlayerInteraction: _0x4e0e30,
      removePedInteraction: _0x4e0e30,
      removeVehicleInteraction: _0x42cf27,
      taskBar: _0x12867c,
      phoneConfirmation: _0x1141c6,
      phoneNotification: _0x634f17,
      drawText: _0x3e0eca,
      drawText3D: _0x2dec7e,
      customContact: _0x5d83cd
    };
    var _0x121f17 = _0x32e947;
    var _0x4e6809 = async _0x2599f3 => {
      return globalThis.exports["np-heists"].BankMinigame(_0x2599f3);
    };
    var _0x14ee47 = async _0x3eaff0 => {
      return globalThis.exports["np-heists"].DDRMinigame(_0x3eaff0);
    };
    var _0x2be71e = async _0x465ca2 => {
      return globalThis.exports.skillchecks.DirectionMinigame(_0x465ca2);
    };
    var _0x302c94 = async () => {
      return globalThis.exports.skillchecks.DrillingMinigame();
    };
    var _0x1e94b0 = async _0x586ecf => {
      return globalThis.exports.skillchecks.FlipMinigame(_0x586ecf);
    };
    var _0x361b13 = async _0x89f305 => {
      return globalThis.exports.skillchecks.FloodMinigame(_0x89f305);
    };
    var _0x291225 = async _0x13d4bc => {
      return globalThis.exports.skillchecks.TaskBarMinigame(_0x13d4bc.difficulty, _0x13d4bc.gap, _0x13d4bc.iterations, _0x13d4bc.useReverse);
    };
    var _0xf1a88e = async _0x3dfd75 => {
      return globalThis.exports["np-heists"].MazeMinigame(_0x3dfd75);
    };
    var _0x53f0f1 = async _0x29dde1 => {
      return globalThis.exports.skillchecks.CrackSafe(_0x29dde1.locks);
    };
    var _0x1cff83 = async _0x113191 => {
      return globalThis.exports.skillchecks.SameMinigame(_0x113191);
    };
    var _0x55d2a3 = async _0x1f3f5d => {
      return globalThis.exports["np-heists"].ThermiteMinigame(_0x1f3f5d);
    };
    var _0x424f83 = async _0x5de5b7 => {
      return globalThis.exports.skillchecks.UntangleMinigame(_0x5de5b7);
    };
    var _0x182836 = async _0x806b9f => {
      return globalThis.exports["np-heists"].VarMinigame(_0x806b9f);
    };
    var _0x18b82f = async _0x20cf52 => {
      return globalThis.exports.skillchecks.WordsMinigame(_0x20cf52);
    };
    var _0x137f69 = async _0x4e69d6 => {
      return globalThis.exports.skillchecks.AlphabetMinigame(_0x4e69d6);
    };
    var _0x312eac = async _0x8f6bd8 => {
      return globalThis.exports.skillchecks.LockpickMinigame(_0x8f6bd8);
    };
    var _0x5c1825 = {
      BankMinigame: _0x4e6809,
      DDRMinigame: _0x14ee47,
      DirectionMinigame: _0x2be71e,
      DrillingMinigame: _0x302c94,
      FlipMinigame: _0x1e94b0,
      FloodMinigame: _0x361b13,
      TaskBarMinigame: _0x291225,
      MazeMinigame: _0xf1a88e,
      CrackSafe: _0x53f0f1,
      SameMinigame: _0x1cff83,
      ThermiteMinigame: _0x55d2a3,
      UntangleMinigame: _0x424f83,
      VarMinigame: _0x182836,
      WordsMinigame: _0x18b82f,
      AlphabetMinigame: _0x137f69,
      LockpickMinigame: _0x312eac
    };
    var _0xcbbf41 = _0x5c1825;
    var _0x467723 = {
      async hasPermission(_0xf06af7, _0x103a9a = {}) {
        return await exports.permissions.hasPermission(_0xf06af7, _0x103a9a);
      },
      async getUserPermissions() {
        return await exports.permissions.getUserPermissions();
      },
      async getCharPermissions(_0x5d7e6c) {
        return await exports.permissions.getCharPermissions();
      },
      async getTotalPermissions() {
        return await exports.permissions.getTotalPermissions();
      }
    };
    var _0x2e9f04 = {
      RegisterAction: (_0x36dd77, _0x3160ee, _0xbb3a62) => {
        return _0x297216.Sync.contacts.RegisterAction(_0x36dd77, _0x3160ee, _0xbb3a62);
      }
    };
    var _0x544ada = {
      RegisterEditorHandlerClient: async _0x121d53 => {
        return await globalThis.exports.editor.RegisterEditorHandlerClient(_0x121d53);
      }
    };
    var _0x124c71;
    var _0x6dd070;
    var _0x1956a3;
    var _0x138d74;
    var _0x204eb1;
    var _0x318dab;
    var _0x4a6e97;
    var _0x3658e5;
    var _0x4f6308;
    var _0x453dca;
    var _0x4e93aa = class {
      constructor(_0x1f24b5) {
        _0xc69af7(this, _0x4f6308);
        _0xc69af7(this, _0x124c71, undefined);
        _0xc69af7(this, _0x6dd070, undefined);
        _0xc69af7(this, _0x1956a3, undefined);
        _0xc69af7(this, _0x138d74, undefined);
        _0xc69af7(this, _0x204eb1, undefined);
        _0xc69af7(this, _0x318dab, undefined);
        _0xc69af7(this, _0x4a6e97, false);
        _0xc69af7(this, _0x3658e5, []);
        const _0x461193 = ResourceInfoSchema.parse(_0x1f24b5);
        _0xf0f05d(this, _0x124c71, _0x461193.codename);
        _0xf0f05d(this, _0x6dd070, _0x461193.version);
        _0xf0f05d(this, _0x1956a3, GetCurrentResourceName());
        _0xf0f05d(this, _0x138d74, "np-jobs");
        emit("__npx_core:handshake", _0x461193, _0x3199c1(this, _0x4f6308, _0x453dca).bind(this));
        _0x30390f.register("__npx_core:handshake", async _0x37d068 => {
          if (_0x37d068.codename !== _0x162672(this, _0x124c71)) {
            return;
          }
          const _0x5438f4 = await _0x5d5475.waitForCondition(() => _0x162672(this, _0x4a6e97), 10000);
          if (_0x5438f4) {
            return;
          }
          return {
            API_URL: _0x162672(this, _0x204eb1),
            API_KEY: _0x162672(this, _0x318dab)
          };
        });
      }
      get codename() {
        return _0x162672(this, _0x124c71);
      }
      get version() {
        return _0x162672(this, _0x6dd070);
      }
      get isReady() {
        return _0x162672(this, _0x4a6e97);
      }
      onReady(_0x160342) {
        if (_0x162672(this, _0x4a6e97)) {
          _0x160342();
        } else {
          _0x162672(this, _0x3658e5).push(_0x160342);
        }
      }
    };
    _0x124c71 = new WeakMap();
    _0x6dd070 = new WeakMap();
    _0x1956a3 = new WeakMap();
    _0x138d74 = new WeakMap();
    _0x204eb1 = new WeakMap();
    _0x318dab = new WeakMap();
    _0x4a6e97 = new WeakMap();
    _0x3658e5 = new WeakMap();
    _0x4f6308 = new WeakSet();
    _0x453dca = async function (_0x274f53) {
      _0xf0f05d(this, _0x204eb1, _0x274f53.API_URL);
      _0xf0f05d(this, _0x318dab, _0x274f53.API_KEY);
      _0xf0f05d(this, _0x4a6e97, true);
      for (const _0x45da1 of _0x162672(this, _0x3658e5)) {
        _0x45da1();
      }
    };
    /*! Bundled license information:
    crypto-js/ripemd160.js:
    (** @preserve
    (c) 2012 by Cédric Mesnil. All rights reserved.
    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    *)
    crypto-js/mode-ctr-gladman.js:
    (** @preserve
    * Counter block mode compatible with  Dr Brian Gladman fileenc.c
    * derived from CryptoJS.mode.CTR
    * Jan Hruby jhruby.web@gmail.com
    *)
    */
    ;
    function _0x3b5bad(_0x9ded33, _0x2d45af, _0x3b78b7, _0x5806a6, _0x151a7a, _0x17bf78, _0x13855c) {
      try {
        var _0x3cac60 = _0x9ded33[_0x17bf78](_0x13855c);
        var _0x32a32c = _0x3cac60.value;
      } catch (_0x1ee32b) {
        _0x3b78b7(_0x1ee32b);
        return;
      }
      if (_0x3cac60.done) {
        _0x2d45af(_0x32a32c);
      } else {
        Promise.resolve(_0x32a32c).then(_0x5806a6, _0x151a7a);
      }
    }
    function _0x3e9f6e(_0x14c06c) {
      return function () {
        var _0x57bd85 = this;
        var _0x5d34aa = arguments;
        return new Promise(function (_0x4b770c, _0x17cbc1) {
          var _0x3740c5 = _0x14c06c.apply(_0x57bd85, _0x5d34aa);
          function _0x4c52a6(_0xc1edd3) {
            _0x3b5bad(_0x3740c5, _0x4b770c, _0x17cbc1, _0x4c52a6, _0x1c0893, "next", _0xc1edd3);
          }
          function _0x1c0893(_0x3e00a9) {
            _0x3b5bad(_0x3740c5, _0x4b770c, _0x17cbc1, _0x4c52a6, _0x1c0893, "throw", _0x3e00a9);
          }
          _0x4c52a6(undefined);
        });
      };
    }
    function _0x146637(_0x3d72e4, _0x12b5ac) {
      var _0x1bb472;
      var _0xb14837;
      var _0x22c318;
      var _0x1cf792;
      var _0x15f85d = {
        label: 0,
        sent: function () {
          if (_0x22c318[0] & 1) {
            throw _0x22c318[1];
          }
          return _0x22c318[1];
        },
        trys: [],
        ops: []
      };
      _0x1cf792 = {
        next: _0x6d4d08(0),
        throw: _0x6d4d08(1),
        return: _0x6d4d08(2)
      };
      if (typeof Symbol === "function") {
        _0x1cf792[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1cf792;
      function _0x6d4d08(_0x3a1379) {
        return function (_0x86c926) {
          return _0x4c23ba([_0x3a1379, _0x86c926]);
        };
      }
      function _0x4c23ba(_0x3a43c3) {
        if (_0x1bb472) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x15f85d) {
          try {
            _0x1bb472 = 1;
            if (_0xb14837 && (_0x22c318 = _0x3a43c3[0] & 2 ? _0xb14837.return : _0x3a43c3[0] ? _0xb14837.throw || ((_0x22c318 = _0xb14837.return) && _0x22c318.call(_0xb14837), 0) : _0xb14837.next) && !(_0x22c318 = _0x22c318.call(_0xb14837, _0x3a43c3[1])).done) {
              return _0x22c318;
            }
            _0xb14837 = 0;
            if (_0x22c318) {
              _0x3a43c3 = [_0x3a43c3[0] & 2, _0x22c318.value];
            }
            switch (_0x3a43c3[0]) {
              case 0:
              case 1:
                _0x22c318 = _0x3a43c3;
                break;
              case 4:
                _0x15f85d.label++;
                var _0x2b7573 = {
                  value: _0x3a43c3[1],
                  done: false
                };
                return _0x2b7573;
              case 5:
                _0x15f85d.label++;
                _0xb14837 = _0x3a43c3[1];
                _0x3a43c3 = [0];
                continue;
              case 7:
                _0x3a43c3 = _0x15f85d.ops.pop();
                _0x15f85d.trys.pop();
                continue;
              default:
                if (!(_0x22c318 = _0x15f85d.trys, _0x22c318 = _0x22c318.length > 0 && _0x22c318[_0x22c318.length - 1]) && (_0x3a43c3[0] === 6 || _0x3a43c3[0] === 2)) {
                  _0x15f85d = 0;
                  continue;
                }
                if (_0x3a43c3[0] === 3 && (!_0x22c318 || _0x3a43c3[1] > _0x22c318[0] && _0x3a43c3[1] < _0x22c318[3])) {
                  _0x15f85d.label = _0x3a43c3[1];
                  break;
                }
                if (_0x3a43c3[0] === 6 && _0x15f85d.label < _0x22c318[1]) {
                  _0x15f85d.label = _0x22c318[1];
                  _0x22c318 = _0x3a43c3;
                  break;
                }
                if (_0x22c318 && _0x15f85d.label < _0x22c318[2]) {
                  _0x15f85d.label = _0x22c318[2];
                  _0x15f85d.ops.push(_0x3a43c3);
                  break;
                }
                if (_0x22c318[2]) {
                  _0x15f85d.ops.pop();
                }
                _0x15f85d.trys.pop();
                continue;
            }
            _0x3a43c3 = _0x12b5ac.call(_0x3d72e4, _0x15f85d);
          } catch (_0x35ca83) {
            _0x3a43c3 = [6, _0x35ca83];
            _0xb14837 = 0;
          } finally {
            _0x1bb472 = _0x22c318 = 0;
          }
        }
        if (_0x3a43c3[0] & 5) {
          throw _0x3a43c3[1];
        }
        var _0x13810b = {
          value: _0x3a43c3[0] ? _0x3a43c3[1] : undefined,
          done: true
        };
        return _0x13810b;
      }
    }
    function _0x3a8810(_0x5c2ce9, _0x5ce10a) {
      var _0x262612 = new _0x2d7bf1();
      var _0x3e5c52 = _0x158296.get(_0x5c2ce9);
      var _0x372b4d = _0x5ce10a.objectives.reduce(function (_0x326cd0, _0x5d9bb1) {
        var _0x33e098 = _0x3e5c52.objectives.get(_0x5d9bb1);
        if (_0x33e098) {
          _0x326cd0.push(_0x33e098);
        }
        return _0x326cd0;
      }, []);
      _0x262612.addThread(_0x3e9f6e(function () {
        var _0x512250;
        var _0x16baf;
        var _0x388e9b;
        var _0x292584;
        var _0x172d29;
        var _0xb71665;
        return _0x146637(this, function (_0x4786a6) {
          switch (_0x4786a6.label) {
            case 0:
              _0x512250 = true;
              _0x16baf = false;
              _0x388e9b = undefined;
              try {
                _0x292584 = function () {
                  var _0x3f941f = _0xb71665.value;
                  var _0x470562 = _0x3e5c52.references.get(_0x3f941f.reference);
                  var _0x292b31 = _0x470562.data.netId;
                  var _0x42f663 = NetworkGetEntityFromNetworkId(_0x292b31);
                  var _0x4c6f1d = _0x372b4d.find(function (_0x369d1e) {
                    return _0x369d1e.reference == _0x3f941f.reference;
                  });
                  if (_0x4c6f1d.status === "waiting" && _0x292b31 && IsEntityAVehicle(_0x42f663) && GetVehicleNumberOfPassengers(_0x42f663) == 0 && IsVehicleSeatFree(_0x42f663, -1)) {
                    SetEntityAsMissionEntity(_0x42f663, true, true);
                    if (_0x470562.settings.persistent) {
                      _0x10598b.emitNet("np-jobs:storePersistentVehicle", _0x292b31, _0x470562.settings.persistent);
                      _0x262612.emit("taskEvent", "objectiveCompleted", _0x4c6f1d.id);
                    } else {
                      exports["np-sync"].SyncedExecution("DeleteVehicle", _0x42f663);
                      if (!DoesEntityExist(_0x42f663)) {
                        _0x262612.emit("taskEvent", "objectiveCompleted", _0x4c6f1d.id);
                      }
                    }
                  }
                };
                for (_0x172d29 = _0x5ce10a.settings.spawn[Symbol.iterator](); !(_0x512250 = (_0xb71665 = _0x172d29.next()).done); _0x512250 = true) {
                  _0x292584();
                }
              } catch (_0x491e11) {
                _0x16baf = true;
                _0x388e9b = _0x491e11;
              } finally {
                try {
                  if (!_0x512250 && _0x172d29.return != null) {
                    _0x172d29.return();
                  }
                } finally {
                  if (_0x16baf) {
                    throw _0x388e9b;
                  }
                }
              }
              return [4, _0x465fb3(5000)];
            case 1:
              _0x4786a6.sent();
              return [2];
          }
        });
      }));
      return _0x262612;
    }
    ;
    function _0x3b1374(_0x105446, _0x513200) {
      if (_0x513200 == null || _0x513200 > _0x105446.length) {
        _0x513200 = _0x105446.length;
      }
      for (var _0x5d5871 = 0, _0x33513f = new Array(_0x513200); _0x5d5871 < _0x513200; _0x5d5871++) {
        _0x33513f[_0x5d5871] = _0x105446[_0x5d5871];
      }
      return _0x33513f;
    }
    function _0x25fea7(_0x43a61d) {
      if (Array.isArray(_0x43a61d)) {
        return _0x43a61d;
      }
    }
    function _0x22fb14(_0x49816a, _0x240480) {
      var _0x5626cd = _0x49816a == null ? null : typeof Symbol !== "undefined" && _0x49816a[Symbol.iterator] || _0x49816a["@@iterator"];
      if (_0x5626cd == null) {
        return;
      }
      var _0x5f2ba7 = [];
      var _0x1a2aaa = true;
      var _0x5a63a6 = false;
      var _0x191613;
      var _0x2d16a0;
      try {
        for (_0x5626cd = _0x5626cd.call(_0x49816a); !(_0x1a2aaa = (_0x191613 = _0x5626cd.next()).done); _0x1a2aaa = true) {
          _0x5f2ba7.push(_0x191613.value);
          if (_0x240480 && _0x5f2ba7.length === _0x240480) {
            break;
          }
        }
      } catch (_0x383d76) {
        _0x5a63a6 = true;
        _0x2d16a0 = _0x383d76;
      } finally {
        try {
          if (!_0x1a2aaa && _0x5626cd.return != null) {
            _0x5626cd.return();
          }
        } finally {
          if (_0x5a63a6) {
            throw _0x2d16a0;
          }
        }
      }
      return _0x5f2ba7;
    }
    function _0x46a7fc() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x3307c3(_0x4e3231, _0x2c5f06) {
      return _0x25fea7(_0x4e3231) || _0x22fb14(_0x4e3231, _0x2c5f06) || _0x248db6(_0x4e3231, _0x2c5f06) || _0x46a7fc();
    }
    function _0x248db6(_0xc33249, _0x138ae4) {
      if (!_0xc33249) {
        return;
      }
      if (typeof _0xc33249 === "string") {
        return _0x3b1374(_0xc33249, _0x138ae4);
      }
      var _0x508795 = Object.prototype.toString.call(_0xc33249).slice(8, -1);
      if (_0x508795 === "Object" && _0xc33249.constructor) {
        _0x508795 = _0xc33249.constructor.name;
      }
      if (_0x508795 === "Map" || _0x508795 === "Set") {
        return Array.from(_0x508795);
      }
      if (_0x508795 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x508795)) {
        return _0x3b1374(_0xc33249, _0x138ae4);
      }
    }
    function _0x593cb7(_0x4e35ae) {
      var _0x5cb4bc = new Map();
      _0x4e35ae.settings.cargo.forEach(function (_0x2027af) {
        if (!_0x5cb4bc.has(_0x2027af.origin.id)) {
          var _0xb757 = {
            type: "destination",
            name: _0x4e35ae.name,
            description: _0x4e35ae.description,
            objectives: [_0x2027af.id],
            settings: {}
          };
          _0xb757.settings.location = {};
          _0xb757.settings.trigger = _0x4e35ae.settings.trigger;
          _0xb757.settings.marker = _0x4e35ae.settings.marker;
          _0xb757.settings.notification = _0x4e35ae.settings.notification;
          _0xb757.settings.location.type = _0x2027af.origin.type;
          _0xb757.settings.location.reference = _0x2027af.origin.id;
          var _0x51a8f6 = _0xb757;
          _0x5cb4bc.set(_0x2027af.origin.id, _0x51a8f6);
        } else {
          var _0x26c3b4 = _0x5cb4bc.get(_0x2027af.origin.id);
          if (_0x26c3b4 && !_0x26c3b4.objectives.some(function (_0x3ec457) {
            return _0x3ec457 === _0x2027af.id;
          })) {
            _0x26c3b4.objectives.push(_0x2027af.id);
          }
        }
      });
      return _0x5cb4bc;
    }
    function _0x4c986c() {}
    function _0x1a9f2f(_0x24c362, _0x5bf846) {
      var _0x502d2a = new _0x2d7bf1();
      var _0x2c9379 = _0x158296.get(_0x24c362);
      var _0x39c612 = _0x593cb7(_0x5bf846);
      _0x39c612.forEach(function (_0xc32489) {
        var _0x75915d = _0x2b087e(_0x24c362, _0xc32489);
        _0x75915d.on("taskEvent", function (_0x45e1a4) {
          for (var _0x829acc = arguments.length, _0x1d3575 = new Array(_0x829acc > 1 ? _0x829acc - 1 : 0), _0x1171bb = 1; _0x1171bb < _0x829acc; _0x1171bb++) {
            _0x1d3575[_0x1171bb - 1] = arguments[_0x1171bb];
          }
          if (_0x45e1a4 === "objectiveCompleted") {
            var _0x27fafe = _0x3307c3(_0x1d3575, 2);
            var _0x353e67 = _0x27fafe[0];
            var _0x708c24 = _0x27fafe[1];
            if (_0x708c24) {
              _0x502d2a.emit("taskEvent", "requestObjective", "waiting", null, _0x708c24);
            }
          }
        });
      });
      return _0x502d2a;
    }
    ;
    function _0xcc1fcb(_0x4bc3cc, _0x16a9fa) {
      if (_0x16a9fa == null || _0x16a9fa > _0x4bc3cc.length) {
        _0x16a9fa = _0x4bc3cc.length;
      }
      for (var _0x127f18 = 0, _0x325fd4 = new Array(_0x16a9fa); _0x127f18 < _0x16a9fa; _0x127f18++) {
        _0x325fd4[_0x127f18] = _0x4bc3cc[_0x127f18];
      }
      return _0x325fd4;
    }
    function _0x1dac71(_0xe92024) {
      if (Array.isArray(_0xe92024)) {
        return _0xe92024;
      }
    }
    function _0x3e0be2(_0x2297e6) {
      if (Array.isArray(_0x2297e6)) {
        return _0xcc1fcb(_0x2297e6);
      }
    }
    function _0x469501(_0x3fb4e6) {
      if (typeof Symbol !== "undefined" && _0x3fb4e6[Symbol.iterator] != null || _0x3fb4e6["@@iterator"] != null) {
        return Array.from(_0x3fb4e6);
      }
    }
    function _0x104be2(_0x10876e, _0x2a346b) {
      var _0x1a55f9 = _0x10876e == null ? null : typeof Symbol !== "undefined" && _0x10876e[Symbol.iterator] || _0x10876e["@@iterator"];
      if (_0x1a55f9 == null) {
        return;
      }
      var _0x310ef4 = [];
      var _0x3ea9f5 = true;
      var _0x4a60ad = false;
      var _0x50121a;
      var _0x274afd;
      try {
        for (_0x1a55f9 = _0x1a55f9.call(_0x10876e); !(_0x3ea9f5 = (_0x50121a = _0x1a55f9.next()).done); _0x3ea9f5 = true) {
          _0x310ef4.push(_0x50121a.value);
          if (_0x2a346b && _0x310ef4.length === _0x2a346b) {
            break;
          }
        }
      } catch (_0x1c0c5f) {
        _0x4a60ad = true;
        _0x274afd = _0x1c0c5f;
      } finally {
        try {
          if (!_0x3ea9f5 && _0x1a55f9.return != null) {
            _0x1a55f9.return();
          }
        } finally {
          if (_0x4a60ad) {
            throw _0x274afd;
          }
        }
      }
      return _0x310ef4;
    }
    function _0x4fb463() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x5e5f15() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x50e6d7(_0x1dc34b, _0x52d1cd) {
      return _0x1dac71(_0x1dc34b) || _0x104be2(_0x1dc34b, _0x52d1cd) || _0x126fe5(_0x1dc34b, _0x52d1cd) || _0x4fb463();
    }
    function _0xb56200(_0x440a50) {
      return _0x3e0be2(_0x440a50) || _0x469501(_0x440a50) || _0x126fe5(_0x440a50) || _0x5e5f15();
    }
    function _0x126fe5(_0x1c1873, _0x1a6023) {
      if (!_0x1c1873) {
        return;
      }
      if (typeof _0x1c1873 === "string") {
        return _0xcc1fcb(_0x1c1873, _0x1a6023);
      }
      var _0x4a5025 = Object.prototype.toString.call(_0x1c1873).slice(8, -1);
      if (_0x4a5025 === "Object" && _0x1c1873.constructor) {
        _0x4a5025 = _0x1c1873.constructor.name;
      }
      if (_0x4a5025 === "Map" || _0x4a5025 === "Set") {
        return Array.from(_0x4a5025);
      }
      if (_0x4a5025 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x4a5025)) {
        return _0xcc1fcb(_0x1c1873, _0x1a6023);
      }
    }
    function _0x16c1eb(_0x2a8de3, _0x166bb7) {
      var _0x182958 = new _0x2d7bf1();
      var _0x2b6830 = _0x158296.get(_0x2a8de3);
      var _0x4e62e7 = _0x166bb7.settings;
      var _0x1bd8dc = [];
      var _0x54a1de = [];
      if (_0x166bb7.objectives) {
        _0x166bb7.objectives.forEach(function (_0x54125c) {
          _0x1bd8dc.push(_0x2b6830.objectives.get(_0x54125c));
        });
      }
      if (_0x4e62e7.event.params) {
        _0x4e62e7.event.params.forEach(function (_0x109b62) {
          _0x54a1de.push(_0x2b6830.references.get(_0x109b62));
        });
      }
      _0x182958.on("taskCompleted", function () {
        emit(`${_0x166bb7.settings.event.name}:completed`);
      });
      emit(_0x166bb7.settings.event.name, _0x2a8de3, _0x166bb7.name, _0x54a1de, _0x1bd8dc, function (_0x402994) {
        for (var _0x23f3ba = arguments.length, _0x2d668e = new Array(_0x23f3ba > 1 ? _0x23f3ba - 1 : 0), _0x5ab37b = 1; _0x5ab37b < _0x23f3ba; _0x5ab37b++) {
          _0x2d668e[_0x5ab37b - 1] = arguments[_0x5ab37b];
        }
        switch (_0x402994) {
          case "getObjectiveData":
            var _0xc99544 = _0x50e6d7(_0x2d668e, 1);
            var _0x18ec29 = _0xc99544[0];
            return _0x2b6830.objectives.get(_0x18ec29);
          case "getReferenceData":
            var _0xf116c9 = _0x50e6d7(_0x2d668e, 1);
            var _0x9ad95b = _0xf116c9[0];
            return _0x2b6830.references.get(_0x9ad95b);
          default:
            var _0x9d6ba3;
            (_0x9d6ba3 = _0x182958).emit.apply(_0x9d6ba3, ["taskEvent", _0x402994].concat(_0xb56200(_0x2d668e)));
        }
      });
      return _0x182958;
    }
    ;
    function _0x425277(_0x341cfd, _0x239897, _0x17b998, _0x3fd31e, _0x1a52e7, _0x5b5fac, _0x283e42) {
      try {
        var _0x489019 = _0x341cfd[_0x5b5fac](_0x283e42);
        var _0x57bbca = _0x489019.value;
      } catch (_0x43f6d6) {
        _0x17b998(_0x43f6d6);
        return;
      }
      if (_0x489019.done) {
        _0x239897(_0x57bbca);
      } else {
        Promise.resolve(_0x57bbca).then(_0x3fd31e, _0x1a52e7);
      }
    }
    function _0x5887d8(_0x25fcbb) {
      return function () {
        var _0x20e177 = this;
        var _0x15683e = arguments;
        return new Promise(function (_0x9ef5c9, _0x354a26) {
          var _0x3ca8de = _0x25fcbb.apply(_0x20e177, _0x15683e);
          function _0x415f01(_0x105d88) {
            _0x425277(_0x3ca8de, _0x9ef5c9, _0x354a26, _0x415f01, _0x573676, "next", _0x105d88);
          }
          function _0x573676(_0x5c21c2) {
            _0x425277(_0x3ca8de, _0x9ef5c9, _0x354a26, _0x415f01, _0x573676, "throw", _0x5c21c2);
          }
          _0x415f01(undefined);
        });
      };
    }
    function _0x27a5bf(_0x12c86b, _0x4cf677) {
      var _0x7f988c;
      var _0x3b22e1;
      var _0x41a9d8;
      var _0x1e93b0;
      var _0x56f48c = {
        label: 0,
        sent: function () {
          if (_0x41a9d8[0] & 1) {
            throw _0x41a9d8[1];
          }
          return _0x41a9d8[1];
        },
        trys: [],
        ops: []
      };
      _0x1e93b0 = {
        next: _0x1cf743(0),
        throw: _0x1cf743(1),
        return: _0x1cf743(2)
      };
      if (typeof Symbol === "function") {
        _0x1e93b0[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1e93b0;
      function _0x1cf743(_0x1d017d) {
        return function (_0x2780cf) {
          return _0xe033ed([_0x1d017d, _0x2780cf]);
        };
      }
      function _0xe033ed(_0x85c4d9) {
        if (_0x7f988c) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x56f48c) {
          try {
            _0x7f988c = 1;
            if (_0x3b22e1 && (_0x41a9d8 = _0x85c4d9[0] & 2 ? _0x3b22e1.return : _0x85c4d9[0] ? _0x3b22e1.throw || ((_0x41a9d8 = _0x3b22e1.return) && _0x41a9d8.call(_0x3b22e1), 0) : _0x3b22e1.next) && !(_0x41a9d8 = _0x41a9d8.call(_0x3b22e1, _0x85c4d9[1])).done) {
              return _0x41a9d8;
            }
            _0x3b22e1 = 0;
            if (_0x41a9d8) {
              _0x85c4d9 = [_0x85c4d9[0] & 2, _0x41a9d8.value];
            }
            switch (_0x85c4d9[0]) {
              case 0:
              case 1:
                _0x41a9d8 = _0x85c4d9;
                break;
              case 4:
                _0x56f48c.label++;
                var _0x22b8d7 = {
                  value: _0x85c4d9[1],
                  done: false
                };
                return _0x22b8d7;
              case 5:
                _0x56f48c.label++;
                _0x3b22e1 = _0x85c4d9[1];
                _0x85c4d9 = [0];
                continue;
              case 7:
                _0x85c4d9 = _0x56f48c.ops.pop();
                _0x56f48c.trys.pop();
                continue;
              default:
                if (!(_0x41a9d8 = _0x56f48c.trys, _0x41a9d8 = _0x41a9d8.length > 0 && _0x41a9d8[_0x41a9d8.length - 1]) && (_0x85c4d9[0] === 6 || _0x85c4d9[0] === 2)) {
                  _0x56f48c = 0;
                  continue;
                }
                if (_0x85c4d9[0] === 3 && (!_0x41a9d8 || _0x85c4d9[1] > _0x41a9d8[0] && _0x85c4d9[1] < _0x41a9d8[3])) {
                  _0x56f48c.label = _0x85c4d9[1];
                  break;
                }
                if (_0x85c4d9[0] === 6 && _0x56f48c.label < _0x41a9d8[1]) {
                  _0x56f48c.label = _0x41a9d8[1];
                  _0x41a9d8 = _0x85c4d9;
                  break;
                }
                if (_0x41a9d8 && _0x56f48c.label < _0x41a9d8[2]) {
                  _0x56f48c.label = _0x41a9d8[2];
                  _0x56f48c.ops.push(_0x85c4d9);
                  break;
                }
                if (_0x41a9d8[2]) {
                  _0x56f48c.ops.pop();
                }
                _0x56f48c.trys.pop();
                continue;
            }
            _0x85c4d9 = _0x4cf677.call(_0x12c86b, _0x56f48c);
          } catch (_0x98a0ad) {
            _0x85c4d9 = [6, _0x98a0ad];
            _0x3b22e1 = 0;
          } finally {
            _0x7f988c = _0x41a9d8 = 0;
          }
        }
        if (_0x85c4d9[0] & 5) {
          throw _0x85c4d9[1];
        }
        var _0x5a67d1 = {
          value: _0x85c4d9[0] ? _0x85c4d9[1] : undefined,
          done: true
        };
        return _0x5a67d1;
      }
    }
    function _0x20ea59(_0x4c2543, _0x18d6c1) {
      var _0x12a3c6 = new _0x2d7bf1();
      var _0x39e7ce = _0x158296.get(_0x4c2543);
      var _0x552be6 = _0x18d6c1.settings;
      var _0x5a8e14 = _0x18d6c1.objectives;
      var _0x466303 = _0x39e7ce.objectives.get(_0x5a8e14.pop());
      var _0x511ccf = _0x39e7ce.references.get(_0x552be6.destroy.target);
      _0x12a3c6.addThread(_0x5887d8(function () {
        var _0x1ac5a1;
        return _0x27a5bf(this, function (_0x588d37) {
          switch (_0x588d37.label) {
            case 0:
              _0x1ac5a1 = IsVehicleDriveable(_0x511ccf.handle, false);
              if (!_0x1ac5a1) {
                _0x12a3c6.emit("taskEvent", "objectiveCompleted", _0x466303.id);
              }
              return [4, _0x465fb3(1000)];
            case 1:
              _0x588d37.sent();
              return [2];
          }
        });
      }));
      return _0x12a3c6;
    }
    ;
    function _0x2f7efc(_0x2681c0, _0x47e7b1) {
      if (_0x47e7b1 == null || _0x47e7b1 > _0x2681c0.length) {
        _0x47e7b1 = _0x2681c0.length;
      }
      for (var _0x44966e = 0, _0x37ace5 = new Array(_0x47e7b1); _0x44966e < _0x47e7b1; _0x44966e++) {
        _0x37ace5[_0x44966e] = _0x2681c0[_0x44966e];
      }
      return _0x37ace5;
    }
    function _0x43fa2a(_0x369fcd) {
      if (Array.isArray(_0x369fcd)) {
        return _0x369fcd;
      }
    }
    function _0x2f0469(_0x330216, _0xbf37bc, _0x24a823, _0x5bdd58, _0x4b9d5b, _0x31b3eb, _0x39a239) {
      try {
        var _0x51aa2 = _0x330216[_0x31b3eb](_0x39a239);
        var _0x28ae77 = _0x51aa2.value;
      } catch (_0x212d47) {
        _0x24a823(_0x212d47);
        return;
      }
      if (_0x51aa2.done) {
        _0xbf37bc(_0x28ae77);
      } else {
        Promise.resolve(_0x28ae77).then(_0x5bdd58, _0x4b9d5b);
      }
    }
    function _0x711aff(_0x2c1dd5) {
      return function () {
        var _0x89a11b = this;
        var _0x413d81 = arguments;
        return new Promise(function (_0x2c7b75, _0x10c38d) {
          var _0x2eb28d = _0x2c1dd5.apply(_0x89a11b, _0x413d81);
          function _0x15a09d(_0x4d96d2) {
            _0x2f0469(_0x2eb28d, _0x2c7b75, _0x10c38d, _0x15a09d, _0x3dc138, "next", _0x4d96d2);
          }
          function _0x3dc138(_0x33287d) {
            _0x2f0469(_0x2eb28d, _0x2c7b75, _0x10c38d, _0x15a09d, _0x3dc138, "throw", _0x33287d);
          }
          _0x15a09d(undefined);
        });
      };
    }
    function _0x431d66(_0x4b8282, _0x899c9c) {
      if (_0x899c9c != null && typeof Symbol !== "undefined" && _0x899c9c[Symbol.hasInstance]) {
        return !!_0x899c9c[Symbol.hasInstance](_0x4b8282);
      } else {
        return _0x4b8282 instanceof _0x899c9c;
      }
    }
    function _0x57f941(_0x1e2afe, _0x2e8efa) {
      var _0x39841a = _0x1e2afe == null ? null : typeof Symbol !== "undefined" && _0x1e2afe[Symbol.iterator] || _0x1e2afe["@@iterator"];
      if (_0x39841a == null) {
        return;
      }
      var _0x1b1e2e = [];
      var _0x415b88 = true;
      var _0x157913 = false;
      var _0x48068d;
      var _0x3b5ab3;
      try {
        for (_0x39841a = _0x39841a.call(_0x1e2afe); !(_0x415b88 = (_0x48068d = _0x39841a.next()).done); _0x415b88 = true) {
          _0x1b1e2e.push(_0x48068d.value);
          if (_0x2e8efa && _0x1b1e2e.length === _0x2e8efa) {
            break;
          }
        }
      } catch (_0x4de2bd) {
        _0x157913 = true;
        _0x3b5ab3 = _0x4de2bd;
      } finally {
        try {
          if (!_0x415b88 && _0x39841a.return != null) {
            _0x39841a.return();
          }
        } finally {
          if (_0x157913) {
            throw _0x3b5ab3;
          }
        }
      }
      return _0x1b1e2e;
    }
    function _0x96be49() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x372e52(_0x1a0d9f, _0x2639cd) {
      return _0x43fa2a(_0x1a0d9f) || _0x57f941(_0x1a0d9f, _0x2639cd) || _0x15875b(_0x1a0d9f, _0x2639cd) || _0x96be49();
    }
    function _0x174c94(_0x58d363) {
      '@swc/helpers - typeof';

      if (_0x58d363 && typeof Symbol !== "undefined" && _0x58d363.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x58d363;
      }
    }
    function _0x15875b(_0x28d90a, _0x13ea36) {
      if (!_0x28d90a) {
        return;
      }
      if (typeof _0x28d90a === "string") {
        return _0x2f7efc(_0x28d90a, _0x13ea36);
      }
      var _0x5a7f39 = Object.prototype.toString.call(_0x28d90a).slice(8, -1);
      if (_0x5a7f39 === "Object" && _0x28d90a.constructor) {
        _0x5a7f39 = _0x28d90a.constructor.name;
      }
      if (_0x5a7f39 === "Map" || _0x5a7f39 === "Set") {
        return Array.from(_0x5a7f39);
      }
      if (_0x5a7f39 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5a7f39)) {
        return _0x2f7efc(_0x28d90a, _0x13ea36);
      }
    }
    function _0x16fea9(_0x1a9f33, _0x117339) {
      var _0x6b8a25;
      var _0x101301;
      var _0x46a2f2;
      var _0x58ead2;
      var _0x1c1c6c = {
        label: 0,
        sent: function () {
          if (_0x46a2f2[0] & 1) {
            throw _0x46a2f2[1];
          }
          return _0x46a2f2[1];
        },
        trys: [],
        ops: []
      };
      _0x58ead2 = {
        next: _0x44464b(0),
        throw: _0x44464b(1),
        return: _0x44464b(2)
      };
      if (typeof Symbol === "function") {
        _0x58ead2[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x58ead2;
      function _0x44464b(_0x50a3d5) {
        return function (_0x7e767f) {
          return _0x4b50a3([_0x50a3d5, _0x7e767f]);
        };
      }
      function _0x4b50a3(_0x305cba) {
        if (_0x6b8a25) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1c1c6c) {
          try {
            _0x6b8a25 = 1;
            if (_0x101301 && (_0x46a2f2 = _0x305cba[0] & 2 ? _0x101301.return : _0x305cba[0] ? _0x101301.throw || ((_0x46a2f2 = _0x101301.return) && _0x46a2f2.call(_0x101301), 0) : _0x101301.next) && !(_0x46a2f2 = _0x46a2f2.call(_0x101301, _0x305cba[1])).done) {
              return _0x46a2f2;
            }
            _0x101301 = 0;
            if (_0x46a2f2) {
              _0x305cba = [_0x305cba[0] & 2, _0x46a2f2.value];
            }
            switch (_0x305cba[0]) {
              case 0:
              case 1:
                _0x46a2f2 = _0x305cba;
                break;
              case 4:
                _0x1c1c6c.label++;
                var _0x9ff476 = {
                  value: _0x305cba[1],
                  done: false
                };
                return _0x9ff476;
              case 5:
                _0x1c1c6c.label++;
                _0x101301 = _0x305cba[1];
                _0x305cba = [0];
                continue;
              case 7:
                _0x305cba = _0x1c1c6c.ops.pop();
                _0x1c1c6c.trys.pop();
                continue;
              default:
                if (!(_0x46a2f2 = _0x1c1c6c.trys, _0x46a2f2 = _0x46a2f2.length > 0 && _0x46a2f2[_0x46a2f2.length - 1]) && (_0x305cba[0] === 6 || _0x305cba[0] === 2)) {
                  _0x1c1c6c = 0;
                  continue;
                }
                if (_0x305cba[0] === 3 && (!_0x46a2f2 || _0x305cba[1] > _0x46a2f2[0] && _0x305cba[1] < _0x46a2f2[3])) {
                  _0x1c1c6c.label = _0x305cba[1];
                  break;
                }
                if (_0x305cba[0] === 6 && _0x1c1c6c.label < _0x46a2f2[1]) {
                  _0x1c1c6c.label = _0x46a2f2[1];
                  _0x46a2f2 = _0x305cba;
                  break;
                }
                if (_0x46a2f2 && _0x1c1c6c.label < _0x46a2f2[2]) {
                  _0x1c1c6c.label = _0x46a2f2[2];
                  _0x1c1c6c.ops.push(_0x305cba);
                  break;
                }
                if (_0x46a2f2[2]) {
                  _0x1c1c6c.ops.pop();
                }
                _0x1c1c6c.trys.pop();
                continue;
            }
            _0x305cba = _0x117339.call(_0x1a9f33, _0x1c1c6c);
          } catch (_0x277ee6) {
            _0x305cba = [6, _0x277ee6];
            _0x101301 = 0;
          } finally {
            _0x6b8a25 = _0x46a2f2 = 0;
          }
        }
        if (_0x305cba[0] & 5) {
          throw _0x305cba[1];
        }
        var _0x2201cc = {
          value: _0x305cba[0] ? _0x305cba[1] : undefined,
          done: true
        };
        return _0x2201cc;
      }
    }
    var _0x158296 = new Map();
    var _0x374664 = new Map();
    function _0x5421d7() {}
    function _0x57d082(_0x41b977, _0x9b6209) {
      return _0x382f4e.apply(this, arguments);
    }
    function _0x382f4e() {
      _0x382f4e = _0x711aff(function (_0xa452a8, _0x241143) {
        var _0xbef7e0;
        var _0xfe3e0d;
        return _0x16fea9(this, function (_0x491a8a) {
          switch (_0x491a8a.label) {
            case 0:
              _0xfe3e0d = _0x241143.type;
              switch (_0xfe3e0d) {
                case "customEvent":
                  return [3, 1];
                case "getVehicle":
                  return [3, 2];
                case "destination":
                  return [3, 3];
                case "checkAttach":
                  return [3, 4];
                case "checkDetach":
                  return [3, 5];
                case "loadCargo":
                  return [3, 6];
                case "spawnEntity":
                  return [3, 7];
                case "despawnEntity":
                  return [3, 9];
                case "destroyEntity":
                  return [3, 10];
              }
              return [3, 11];
            case 1:
              _0xbef7e0 = _0x16c1eb(_0xa452a8, _0x241143);
              return [3, 11];
            case 2:
              _0xbef7e0 = _0x16ebb0(_0xa452a8, _0x241143);
              return [3, 11];
            case 3:
              _0xbef7e0 = _0x2b087e(_0xa452a8, _0x241143);
              return [3, 11];
            case 4:
              _0xbef7e0 = _0x593931(_0xa452a8, _0x241143);
              return [3, 11];
            case 5:
              _0xbef7e0 = _0x1392aa(_0xa452a8, _0x241143);
              return [3, 11];
            case 6:
              _0xbef7e0 = _0x1a9f2f(_0xa452a8, _0x241143);
              return [3, 11];
            case 7:
              return [4, _0x10d4f9(_0xa452a8, _0x241143)];
            case 8:
              _0xbef7e0 = _0x491a8a.sent();
              return [3, 11];
            case 9:
              _0xbef7e0 = _0x3a8810(_0xa452a8, _0x241143);
              return [3, 11];
            case 10:
              _0xbef7e0 = _0x20ea59(_0xa452a8, _0x241143);
              return [3, 11];
            case 11:
              return [2, _0xbef7e0];
          }
        });
      });
      return _0x382f4e.apply(this, arguments);
    }
    onNet("np:jobs:setActivityData", function (_0x4f3c17, _0x4d28b2) {
      var _0x2528c1 = new Map();
      var _0x85288b = new Map();
      _0x4d28b2.references.forEach(function (_0x1d4a95) {
        var _0x3f9d4d;
        switch (_0x1d4a95.value.type) {
          case "entity":
            _0x3f9d4d = new _0x2270e1(_0x1d4a95.value);
            break;
          case "vectors":
            _0x3f9d4d = new _0x35f48f(_0x1d4a95.value);
            break;
          default:
            _0x3f9d4d = _0x1d4a95.value;
        }
        _0x2528c1.set(_0x1d4a95.key, _0x3f9d4d);
      });
      _0x4d28b2.objectives.forEach(function (_0x2f22f2) {
        _0x85288b.set(_0x2f22f2.key, new _0x3793c5(_0x2f22f2.value));
      });
      var _0x27d03f = {
        references: _0x2528c1,
        objectives: _0x85288b
      };
      _0x158296.set(_0x4f3c17, _0x27d03f);
    });
    onNet("np:jobs:updateData", function (_0x17ff79, _0x1d8299, _0x24065e, _0x299140) {
      var _0xd19fcf = _0x158296.get(_0x17ff79);
      if (_0xd19fcf) {
        var _0x393a33 = _0xd19fcf.references.get(_0x1d8299);
        if (_0x393a33 === undefined) {
          return;
        }
        if (_0x431d66(_0x393a33, _0x39fc66)) {
          _0x393a33.updateData(_0x24065e, _0x299140);
        } else {
          var _0x27fbea = _0x393a33;
          _0x27fbea.data[_0x24065e] = _0x299140;
        }
      }
    });
    onNet("np:jobs:updateObjectiveData", function (_0x46b78d, _0x38599b, _0x4c69fe, _0x4c2b4f) {
      var _0x40ae5 = _0x158296.get(_0x46b78d);
      if (_0x40ae5) {
        var _0x28170c = _0x40ae5.objectives.get(_0x38599b);
        if (_0x28170c === undefined) {
          return;
        }
        if (_0x431d66(_0x28170c, _0x39fc66)) {
          _0x28170c.updateData(_0x4c69fe, _0x4c2b4f);
        } else {
          var _0x38facc = _0x28170c;
          _0x38facc.data[_0x4c69fe] = _0x4c2b4f;
        }
      }
    });
    onNet("np:jobs:updateObjectiveSettings", function (_0x2c0236, _0xcf1355, _0x387069, _0x2f2941) {
      var _0x422174 = _0x158296.get(_0x2c0236);
      if (_0x422174) {
        var _0x2df2e1 = _0x422174.objectives.get(_0xcf1355);
        if (_0x2df2e1 === undefined) {
          return;
        }
        if (_0x431d66(_0x2df2e1, _0x39fc66)) {
          _0x2df2e1.updateSettings(_0x387069, _0x2f2941);
        } else {
          var _0x2f68f9 = _0x2df2e1;
          _0x2f68f9.settings[_0x387069] = _0x2f2941;
        }
      }
    });
    onNet("np:jobs:updateSettings", function (_0x541303, _0x1c9849, _0x4a7bd8, _0x492444) {
      var _0x352e40 = _0x158296.get(_0x541303);
      if (_0x352e40 && _0x352e40) {
        var _0x4f1c6a = _0x352e40.references.get(_0x1c9849);
        if (_0x4f1c6a === undefined) {
          return;
        }
        if (_0x431d66(_0x4f1c6a, _0x39fc66)) {
          _0x4f1c6a.updateSettings(_0x4a7bd8, _0x492444);
        } else {
          var _0x3ec7f5 = _0x4f1c6a;
          _0x3ec7f5.settings[_0x4a7bd8] = _0x492444;
        }
      }
    });
    onNet("np:jobs:startTask", function () {
      var _0x359eab = _0x711aff(function (_0x4486b6, _0x37dec8, _0x8ef014) {
        var _0x279aa0;
        var _0x2f16db;
        return _0x16fea9(this, function (_0x5ac4a5) {
          switch (_0x5ac4a5.label) {
            case 0:
              _0x279aa0 = _0x158296.get(_0x4486b6);
              if (!_0x279aa0) {
                return [3, 2];
              }
              return [4, _0x57d082(_0x4486b6, _0x8ef014)];
            case 1:
              _0x2f16db = _0x5ac4a5.sent();
              _0x374664.set(_0x37dec8, _0x2f16db);
              _0x2f16db.on("taskEvent", function () {
                var _0x1541a2 = _0x711aff(function (_0x4cbb14) {
                  var _0x22ead1;
                  var _0x3118b8;
                  var _0x40721f;
                  var _0x3deee6;
                  var _0x3c9e1d;
                  var _0x259216;
                  var _0x4dc665;
                  var _0x12f477;
                  var _0x3201c4;
                  var _0x4cd39f;
                  var _0x4f417f;
                  var _0x5b5c1f;
                  var _0x50dfc5;
                  var _0x414775;
                  var _0x107f7a;
                  var _0xe4daef;
                  var _0x63cef6;
                  var _0xc2334a;
                  var _0x2d0235 = arguments;
                  return _0x16fea9(this, function (_0x459e0) {
                    switch (_0x459e0.label) {
                      case 0:
                        _0x22ead1 = _0x2d0235.length;
                        _0x3118b8 = new Array(_0x22ead1 > 1 ? _0x22ead1 - 1 : 0);
                        _0x40721f = 1;
                        for (; _0x40721f < _0x22ead1; _0x40721f++) {
                          _0x3118b8[_0x40721f - 1] = _0x2d0235[_0x40721f];
                        }
                        switch (_0x4cbb14) {
                          case "objectiveCompleted":
                            return [3, 1];
                          case "updateObjectiveData":
                            return [3, 2];
                          case "requestObjective":
                            return [3, 3];
                          case "updateData":
                            return [3, 5];
                        }
                        return [3, 6];
                      case 1:
                        {
                          _0x3deee6 = _0x372e52(_0x3118b8, 1);
                          _0x3c9e1d = _0x3deee6[0];
                          emitNet("np:jobs:objectiveCompleted", _0x4486b6, _0x37dec8, _0x3c9e1d);
                          return [3, 6];
                        }
                        _0x459e0.label = 2;
                      case 2:
                        {
                          _0x259216 = _0x372e52(_0x3118b8, 3);
                          _0x4dc665 = _0x259216[0];
                          _0x12f477 = _0x259216[1];
                          _0x3201c4 = _0x259216[2];
                          emitNet("np:jobs:updateObjectiveData", _0x4486b6, _0x37dec8, _0x4dc665, _0x12f477, _0x3201c4);
                          return [3, 6];
                        }
                        _0x459e0.label = 3;
                      case 3:
                        _0x4cd39f = _0x372e52(_0x3118b8, 3);
                        _0x4f417f = _0x4cd39f[0];
                        _0x5b5c1f = _0x4cd39f[1];
                        _0x50dfc5 = _0x4cd39f[2];
                        return [4, RPC.execute("np:jobs:getObjective", _0x37dec8, _0x4f417f, _0x5b5c1f, _0x50dfc5)];
                      case 4:
                        _0x414775 = _0x459e0.sent();
                        _0x2f16db.emit("selectedObjective", _0x414775);
                        return [3, 6];
                      case 5:
                        {
                          _0x107f7a = _0x372e52(_0x3118b8, 3);
                          _0xe4daef = _0x107f7a[0];
                          _0x63cef6 = _0x107f7a[1];
                          _0xc2334a = _0x107f7a[2];
                          emitNet("np:jobs:updateData", _0x4486b6, _0xe4daef, _0x63cef6, _0xc2334a);
                          return [3, 6];
                        }
                        _0x459e0.label = 6;
                      case 6:
                        return [2];
                    }
                  });
                });
                return function (_0x1c3f8c) {
                  return _0x1541a2.apply(this, arguments);
                };
              }());
              _0x5ac4a5.label = 2;
            case 2:
              return [2];
          }
        });
      });
      return function (_0x457276, _0x2c8986, _0x51c8e4) {
        return _0x359eab.apply(this, arguments);
      };
    }());
    onNet("np:jobs:updateTask", function (_0x3f8d9a, _0x5395fa) {
      for (var _0x46c878 = arguments.length, _0x2c50f5 = new Array(_0x46c878 > 2 ? _0x46c878 - 2 : 0), _0x21d96d = 2; _0x21d96d < _0x46c878; _0x21d96d++) {
        _0x2c50f5[_0x21d96d - 2] = arguments[_0x21d96d];
      }
      var _0x174fdc = _0x374664.get(_0x5395fa);
      if (_0x174fdc) {
        switch (_0x3f8d9a) {
          case "taskCompleted":
            {
              _0x174fdc.emit("taskCompleted");
              _0x174fdc.stopTask();
              _0x374664.delete(_0x5395fa);
              break;
            }
        }
      }
    });
    function _0xc7d432(_0xb0a407, _0xa8499a) {
      var _0x383772 = true;
      var _0x16ddc3 = false;
      var _0x5612a9 = undefined;
      try {
        function _0xf1d331() {
          var _0x30295f = _0x35bd25.value;
          if (_0x30295f.status === "waiting" && _0xa8499a.some(function (_0x5d6352) {
            return _0x30295f.id === _0x5d6352;
          })) {
            var _0x361bc6 = {
              v: _0x30295f
            };
            return _0x361bc6;
          }
        }
        for (var _0x162c64 = _0xb0a407.values()[Symbol.iterator](), _0x35bd25; !(_0x383772 = (_0x35bd25 = _0x162c64.next()).done); _0x383772 = true) {
          var _0x2ac940 = _0xf1d331();
          if (_0x174c94(_0x2ac940) === "object") {
            return _0x2ac940.v;
          }
        }
      } catch (_0x3d035e) {
        _0x16ddc3 = true;
        _0x5612a9 = _0x3d035e;
      } finally {
        try {
          if (!_0x383772 && _0x162c64.return != null) {
            _0x162c64.return();
          }
        } finally {
          if (_0x16ddc3) {
            throw _0x5612a9;
          }
        }
      }
    }
    ;
    function _0x225eea(_0x50adaa, _0x3f2451, _0x3ea5ca, _0x3816bf, _0x393b71, _0x282545, _0x592eb5) {
      try {
        var _0x4385cd = _0x50adaa[_0x282545](_0x592eb5);
        var _0x24d2eb = _0x4385cd.value;
      } catch (_0x200ef6) {
        _0x3ea5ca(_0x200ef6);
        return;
      }
      if (_0x4385cd.done) {
        _0x3f2451(_0x24d2eb);
      } else {
        Promise.resolve(_0x24d2eb).then(_0x3816bf, _0x393b71);
      }
    }
    function _0x141643(_0x4752d8) {
      return function () {
        var _0x3b0c5e = this;
        var _0x2a2601 = arguments;
        return new Promise(function (_0x113a19, _0x28e9c8) {
          var _0x2035b3 = _0x4752d8.apply(_0x3b0c5e, _0x2a2601);
          function _0x409c51(_0x19bf08) {
            _0x225eea(_0x2035b3, _0x113a19, _0x28e9c8, _0x409c51, _0x5703e7, "next", _0x19bf08);
          }
          function _0x5703e7(_0x96cced) {
            _0x225eea(_0x2035b3, _0x113a19, _0x28e9c8, _0x409c51, _0x5703e7, "throw", _0x96cced);
          }
          _0x409c51(undefined);
        });
      };
    }
    function _0x312f83(_0x286470, _0xb89302) {
      var _0x2e3dff;
      var _0x5a9e24;
      var _0x96ddff;
      var _0x1d3e1a;
      var _0xc7aace = {
        label: 0,
        sent: function () {
          if (_0x96ddff[0] & 1) {
            throw _0x96ddff[1];
          }
          return _0x96ddff[1];
        },
        trys: [],
        ops: []
      };
      _0x1d3e1a = {
        next: _0x326b27(0),
        throw: _0x326b27(1),
        return: _0x326b27(2)
      };
      if (typeof Symbol === "function") {
        _0x1d3e1a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1d3e1a;
      function _0x326b27(_0x2ba729) {
        return function (_0x581db9) {
          return _0x318dd6([_0x2ba729, _0x581db9]);
        };
      }
      function _0x318dd6(_0x22fef7) {
        if (_0x2e3dff) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xc7aace) {
          try {
            _0x2e3dff = 1;
            if (_0x5a9e24 && (_0x96ddff = _0x22fef7[0] & 2 ? _0x5a9e24.return : _0x22fef7[0] ? _0x5a9e24.throw || ((_0x96ddff = _0x5a9e24.return) && _0x96ddff.call(_0x5a9e24), 0) : _0x5a9e24.next) && !(_0x96ddff = _0x96ddff.call(_0x5a9e24, _0x22fef7[1])).done) {
              return _0x96ddff;
            }
            _0x5a9e24 = 0;
            if (_0x96ddff) {
              _0x22fef7 = [_0x22fef7[0] & 2, _0x96ddff.value];
            }
            switch (_0x22fef7[0]) {
              case 0:
              case 1:
                _0x96ddff = _0x22fef7;
                break;
              case 4:
                _0xc7aace.label++;
                var _0x41103f = {
                  value: _0x22fef7[1],
                  done: false
                };
                return _0x41103f;
              case 5:
                _0xc7aace.label++;
                _0x5a9e24 = _0x22fef7[1];
                _0x22fef7 = [0];
                continue;
              case 7:
                _0x22fef7 = _0xc7aace.ops.pop();
                _0xc7aace.trys.pop();
                continue;
              default:
                if (!(_0x96ddff = _0xc7aace.trys, _0x96ddff = _0x96ddff.length > 0 && _0x96ddff[_0x96ddff.length - 1]) && (_0x22fef7[0] === 6 || _0x22fef7[0] === 2)) {
                  _0xc7aace = 0;
                  continue;
                }
                if (_0x22fef7[0] === 3 && (!_0x96ddff || _0x22fef7[1] > _0x96ddff[0] && _0x22fef7[1] < _0x96ddff[3])) {
                  _0xc7aace.label = _0x22fef7[1];
                  break;
                }
                if (_0x22fef7[0] === 6 && _0xc7aace.label < _0x96ddff[1]) {
                  _0xc7aace.label = _0x96ddff[1];
                  _0x96ddff = _0x22fef7;
                  break;
                }
                if (_0x96ddff && _0xc7aace.label < _0x96ddff[2]) {
                  _0xc7aace.label = _0x96ddff[2];
                  _0xc7aace.ops.push(_0x22fef7);
                  break;
                }
                if (_0x96ddff[2]) {
                  _0xc7aace.ops.pop();
                }
                _0xc7aace.trys.pop();
                continue;
            }
            _0x22fef7 = _0xb89302.call(_0x286470, _0xc7aace);
          } catch (_0x306611) {
            _0x22fef7 = [6, _0x306611];
            _0x5a9e24 = 0;
          } finally {
            _0x2e3dff = _0x96ddff = 0;
          }
        }
        if (_0x22fef7[0] & 5) {
          throw _0x22fef7[1];
        }
        var _0x515ef6 = {
          value: _0x22fef7[0] ? _0x22fef7[1] : undefined,
          done: true
        };
        return _0x515ef6;
      }
    }
    var _0xf49882;
    var _0x15ea72 = true;
    var _0x5c2a51 = false;
    var _0x5332a9 = false;
    var _0x41b3d1 = false;
    var _0x21d635 = false;
    var _0x4e168f = false;
    function _0x183475() {
      return _0x25150a.apply(this, arguments);
    }
    function _0x25150a() {
      _0x25150a = _0x141643(function () {
        return _0x312f83(this, function (_0x1e4b12) {
          return [2];
        });
      });
      return _0x25150a.apply(this, arguments);
    }
    onNet("jobmanager:playerBecameJob", function (_0x3fcefa, _0x5e3a16) {
      if (_0x15ea72 && _0x3fcefa !== "ems") {
        _0x15ea72 = false;
      } else if (_0x5c2a51 && _0x3fcefa !== "police") {
        _0x5c2a51 = false;
      } else if (_0x5332a9 && _0x3fcefa !== "doc") {
        _0x5332a9 = false;
      } else if (_0x41b3d1 && _0x3fcefa !== "doctor") {
        _0x41b3d1 = false;
      } else if (_0x21d635 && _0x3fcefa !== "news") {
        _0x21d635 = false;
      }
      if (_0x3fcefa === "police") {
        _0x5c2a51 = true;
      } else if (_0x3fcefa === "ems") {
        _0x15ea72 = true;
      } else if (_0x3fcefa === "news") {
        _0x21d635 = true;
      } else if (_0x3fcefa === "doctor") {
        _0x41b3d1 = true;
      } else if (_0x3fcefa === "doc") {
        _0x5332a9 = true;
      }
      _0xf49882 = _0x3fcefa;
    });
    onNet("isJudge", function () {
      _0x4e168f = true;
    });
    onNet("isJudgeOff", function () {
      _0x4e168f = false;
    });
    function _0x49097a() {
      return _0x5c2a51 || _0x41b3d1;
    }
    function _0xd3bcff() {
      return _0x41b3d1 || _0x15ea72;
    }
    ;
    function _0x3f56a2(_0x2ebe2f, _0x1ca230, _0x299757, _0x86fd75, _0x5b3c3f, _0x4fb637, _0x3013ba) {
      try {
        var _0x57e999 = _0x2ebe2f[_0x4fb637](_0x3013ba);
        var _0x24a800 = _0x57e999.value;
      } catch (_0xe7dd99) {
        _0x299757(_0xe7dd99);
        return;
      }
      if (_0x57e999.done) {
        _0x1ca230(_0x24a800);
      } else {
        Promise.resolve(_0x24a800).then(_0x86fd75, _0x5b3c3f);
      }
    }
    function _0x293f6d(_0xd4954) {
      return function () {
        var _0x5df14e = this;
        var _0x58a94a = arguments;
        return new Promise(function (_0x2e7fb7, _0x47e390) {
          var _0x2abb63 = _0xd4954.apply(_0x5df14e, _0x58a94a);
          function _0x53b8f4(_0x48a7b7) {
            _0x3f56a2(_0x2abb63, _0x2e7fb7, _0x47e390, _0x53b8f4, _0x1f6971, "next", _0x48a7b7);
          }
          function _0x1f6971(_0x1fefa0) {
            _0x3f56a2(_0x2abb63, _0x2e7fb7, _0x47e390, _0x53b8f4, _0x1f6971, "throw", _0x1fefa0);
          }
          _0x53b8f4(undefined);
        });
      };
    }
    function _0x4a25f8(_0x3e6bf5, _0x3e71f3) {
      if (!(_0x3e6bf5 instanceof _0x3e71f3)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x1e1081(_0x38e7d6, _0x1b2400) {
      for (var _0x203221 = 0; _0x203221 < _0x1b2400.length; _0x203221++) {
        var _0x2924a6 = _0x1b2400[_0x203221];
        _0x2924a6.enumerable = _0x2924a6.enumerable || false;
        _0x2924a6.configurable = true;
        if ("value" in _0x2924a6) {
          _0x2924a6.writable = true;
        }
        Object.defineProperty(_0x38e7d6, _0x2924a6.key, _0x2924a6);
      }
    }
    function _0x3e732f(_0x1d78b1, _0x2e5b14, _0x2f1d09) {
      if (_0x2e5b14) {
        _0x1e1081(_0x1d78b1.prototype, _0x2e5b14);
      }
      if (_0x2f1d09) {
        _0x1e1081(_0x1d78b1, _0x2f1d09);
      }
      return _0x1d78b1;
    }
    function _0x4a2155(_0x5ab07f, _0x3985c6, _0x67bb09) {
      if (_0x3985c6 in _0x5ab07f) {
        var _0x390e99 = {
          value: _0x67bb09,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x5ab07f, _0x3985c6, _0x390e99);
      } else {
        _0x5ab07f[_0x3985c6] = _0x67bb09;
      }
      return _0x5ab07f;
    }
    function _0x15d02d(_0x370c68, _0x1265b5) {
      if (_0x1265b5 != null && typeof Symbol !== "undefined" && _0x1265b5[Symbol.hasInstance]) {
        return !!_0x1265b5[Symbol.hasInstance](_0x370c68);
      } else {
        return _0x370c68 instanceof _0x1265b5;
      }
    }
    function _0x4d13da(_0x5f3044, _0x4fe169) {
      var _0x54b2d8;
      var _0x3ed016;
      var _0x41c361;
      var _0x4e6254;
      var _0x164923 = {
        label: 0,
        sent: function () {
          if (_0x41c361[0] & 1) {
            throw _0x41c361[1];
          }
          return _0x41c361[1];
        },
        trys: [],
        ops: []
      };
      _0x4e6254 = {
        next: _0x7f6283(0),
        throw: _0x7f6283(1),
        return: _0x7f6283(2)
      };
      if (typeof Symbol === "function") {
        _0x4e6254[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4e6254;
      function _0x7f6283(_0x6f34bc) {
        return function (_0xe4374a) {
          return _0x2c8a65([_0x6f34bc, _0xe4374a]);
        };
      }
      function _0x2c8a65(_0x4ae96f) {
        if (_0x54b2d8) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x164923) {
          try {
            _0x54b2d8 = 1;
            if (_0x3ed016 && (_0x41c361 = _0x4ae96f[0] & 2 ? _0x3ed016.return : _0x4ae96f[0] ? _0x3ed016.throw || ((_0x41c361 = _0x3ed016.return) && _0x41c361.call(_0x3ed016), 0) : _0x3ed016.next) && !(_0x41c361 = _0x41c361.call(_0x3ed016, _0x4ae96f[1])).done) {
              return _0x41c361;
            }
            _0x3ed016 = 0;
            if (_0x41c361) {
              _0x4ae96f = [_0x4ae96f[0] & 2, _0x41c361.value];
            }
            switch (_0x4ae96f[0]) {
              case 0:
              case 1:
                _0x41c361 = _0x4ae96f;
                break;
              case 4:
                _0x164923.label++;
                var _0xcef100 = {
                  value: _0x4ae96f[1],
                  done: false
                };
                return _0xcef100;
              case 5:
                _0x164923.label++;
                _0x3ed016 = _0x4ae96f[1];
                _0x4ae96f = [0];
                continue;
              case 7:
                _0x4ae96f = _0x164923.ops.pop();
                _0x164923.trys.pop();
                continue;
              default:
                if (!(_0x41c361 = _0x164923.trys, _0x41c361 = _0x41c361.length > 0 && _0x41c361[_0x41c361.length - 1]) && (_0x4ae96f[0] === 6 || _0x4ae96f[0] === 2)) {
                  _0x164923 = 0;
                  continue;
                }
                if (_0x4ae96f[0] === 3 && (!_0x41c361 || _0x4ae96f[1] > _0x41c361[0] && _0x4ae96f[1] < _0x41c361[3])) {
                  _0x164923.label = _0x4ae96f[1];
                  break;
                }
                if (_0x4ae96f[0] === 6 && _0x164923.label < _0x41c361[1]) {
                  _0x164923.label = _0x41c361[1];
                  _0x41c361 = _0x4ae96f;
                  break;
                }
                if (_0x41c361 && _0x164923.label < _0x41c361[2]) {
                  _0x164923.label = _0x41c361[2];
                  _0x164923.ops.push(_0x4ae96f);
                  break;
                }
                if (_0x41c361[2]) {
                  _0x164923.ops.pop();
                }
                _0x164923.trys.pop();
                continue;
            }
            _0x4ae96f = _0x4fe169.call(_0x5f3044, _0x164923);
          } catch (_0x370eff) {
            _0x4ae96f = [6, _0x370eff];
            _0x3ed016 = 0;
          } finally {
            _0x54b2d8 = _0x41c361 = 0;
          }
        }
        if (_0x4ae96f[0] & 5) {
          throw _0x4ae96f[1];
        }
        var _0x4fc2ed = {
          value: _0x4ae96f[0] ? _0x4ae96f[1] : undefined,
          done: true
        };
        return _0x4fc2ed;
      }
    }
    var _0x9693c = null && function () {
      'use strict';

      function _0x58b70b(_0x4f20c9, _0x5da675, _0x1f413c, _0x2c4579, _0x98bdde, _0x188543, _0x24da21 = 1) {
        _0x4a25f8(this, _0x58b70b);
        _0x4a2155(this, "ped", undefined);
        _0x4a2155(this, "type", undefined);
        _0x4a2155(this, "text", undefined);
        _0x4a2155(this, "flag", undefined);
        _0x4a2155(this, "duration", undefined);
        _0x4a2155(this, "animation", undefined);
        _0x4a2155(this, "dictionary", undefined);
        _0x4a2155(this, "task", undefined);
        _0x4a2155(this, "active", undefined);
        _0x4a2155(this, "tickId", undefined);
        this.ped = _0x4f20c9;
        this.type = _0x5da675;
        this.flag = _0x24da21;
        this.text = _0x1f413c;
        this.active = false;
        this.duration = _0x2c4579;
        this.dictionary = _0x98bdde;
        this.animation = _0x188543;
      }
      _0x3e732f(_0x58b70b, [{
        key: "start",
        value: function _0x47b23c(_0x10fcd2) {
          var _0x216560 = this;
          if (this.active) {
            return;
          }
          this.active = true;
          if (_0x10fcd2) {
            _0x10fcd2(this);
          }
          var _0x24e463 = this;
          this.tickId = setTick(_0x293f6d(function () {
            return _0x4d13da(this, function (_0xb3839e) {
              switch (_0xb3839e.label) {
                case 0:
                  if (!_0x24e463.animation || !!IsEntityPlayingAnim(_0x24e463.ped, _0x24e463.dictionary, _0x24e463.animation, 3)) {
                    return [3, 2];
                  }
                  return [4, LoadAnimationModel(_0x24e463.dictionary)];
                case 1:
                  _0xb3839e.sent();
                  TaskPlayAnim(_0x24e463.ped, _0x24e463.dictionary, _0x24e463.animation, -8, -8, -1, _0x24e463.flag, 0, false, false, false);
                  return [3, 3];
                case 2:
                  if (!_0x24e463.animation && !IsPedUsingScenario(_0x24e463.ped, _0x24e463.dictionary)) {
                    TaskStartScenarioInPlace(_0x24e463.ped, _0x24e463.dictionary, 0, true);
                  }
                  _0xb3839e.label = 3;
                case 3:
                  return [4, Wait(100)];
                case 4:
                  _0xb3839e.sent();
                  return [2];
              }
            });
          }));
          var _0x2ff3e6;
          if (this.type === "skill" && _0x15d02d(this.duration, Array)) {
            var _0x5d90d1 = this;
            _0x2ff3e6 = new Promise(function () {
              var _0x2fc883 = _0x293f6d(function (_0x4b7c50) {
                var _0x4fd849;
                var _0x5bc137;
                var _0x45dc1a;
                var _0x5d6500;
                var _0x3796f8;
                var _0x317f79;
                var _0x236f63;
                var _0x72e939;
                var _0xfb0ef5;
                return _0x4d13da(this, function (_0x3dfc7b) {
                  switch (_0x3dfc7b.label) {
                    case 0:
                      _0x4fd849 = _0x5d90d1.duration;
                      _0x5bc137 = true;
                      _0x45dc1a = false;
                      _0x5d6500 = undefined;
                      _0x3dfc7b.label = 1;
                    case 1:
                      _0x3dfc7b.trys.push([1, 6, 7, 8]);
                      _0x3796f8 = _0x4fd849[Symbol.iterator]();
                      _0x3dfc7b.label = 2;
                    case 2:
                      if (!!(_0x5bc137 = (_0x317f79 = _0x3796f8.next()).done)) {
                        return [3, 5];
                      }
                      _0x236f63 = _0x317f79.value;
                      return [4, TaskbarMiniGame(_0x236f63.difficulty, _0x236f63.gap)];
                    case 3:
                      _0x72e939 = _0x3dfc7b.sent();
                      if (_0x72e939 !== 100) {
                        return [2, _0x4b7c50(0)];
                      }
                      _0x3dfc7b.label = 4;
                    case 4:
                      _0x5bc137 = true;
                      return [3, 2];
                    case 5:
                      return [3, 8];
                    case 6:
                      _0xfb0ef5 = _0x3dfc7b.sent();
                      _0x45dc1a = true;
                      _0x5d6500 = _0xfb0ef5;
                      return [3, 8];
                    case 7:
                      try {
                        if (!_0x5bc137 && _0x3796f8.return != null) {
                          _0x3796f8.return();
                        }
                      } finally {
                        if (_0x45dc1a) {
                          throw _0x5d6500;
                        }
                      }
                      return [7];
                    case 8:
                      _0x4b7c50(100);
                      return [2];
                  }
                });
              });
              return function (_0x761d4c) {
                return _0x2fc883.apply(this, arguments);
              };
            }());
          } else if (this.type === "normal" && typeof this.duration === "number") {
            _0x2ff3e6 = Taskbar(this.duration, this.text);
          }
          _0x2ff3e6.then(function () {
            _0x216560.stop();
          });
          return _0x2ff3e6;
        }
      }, {
        key: "stop",
        value: function _0x216431() {
          if (!this.active) {
            return;
          }
          this.active = false;
          clearTick(this.tickId);
          if (this.animation) {
            StopAnimTask(this.ped, this.dictionary, this.animation, 3);
          } else {
            ClearPedTasks(this.ped);
          }
        }
      }, {
        key: "abort",
        value: function _0x59805a() {
          if (this.active) {
            exports["np-taskbar"].taskCancel();
            this.stop();
          }
        }
      }]);
      return _0x58b70b;
    }();
    ;
    function _0x3df912(_0x2cd2b0, _0x437488, _0x121ac4, _0xad0212, _0x502e60, _0x3ddb23, _0x2b77f1) {
      try {
        var _0x43cc03 = _0x2cd2b0[_0x3ddb23](_0x2b77f1);
        var _0x37861a = _0x43cc03.value;
      } catch (_0x1085af) {
        _0x121ac4(_0x1085af);
        return;
      }
      if (_0x43cc03.done) {
        _0x437488(_0x37861a);
      } else {
        Promise.resolve(_0x37861a).then(_0xad0212, _0x502e60);
      }
    }
    function _0x4bcd14(_0x5c97f4) {
      return function () {
        var _0x4669b7 = this;
        var _0x3cd24a = arguments;
        return new Promise(function (_0x33cb40, _0x4857ea) {
          var _0x352594 = _0x5c97f4.apply(_0x4669b7, _0x3cd24a);
          function _0x2742c1(_0x394aeb) {
            _0x3df912(_0x352594, _0x33cb40, _0x4857ea, _0x2742c1, _0x3d8271, "next", _0x394aeb);
          }
          function _0x3d8271(_0x9adbbb) {
            _0x3df912(_0x352594, _0x33cb40, _0x4857ea, _0x2742c1, _0x3d8271, "throw", _0x9adbbb);
          }
          _0x2742c1(undefined);
        });
      };
    }
    function _0x1196d6(_0x1b2234, _0x2f0d41) {
      var _0x4eac86;
      var _0x45053c;
      var _0x2fb4d2;
      var _0x567521;
      var _0x2fe01c = {
        label: 0,
        sent: function () {
          if (_0x2fb4d2[0] & 1) {
            throw _0x2fb4d2[1];
          }
          return _0x2fb4d2[1];
        },
        trys: [],
        ops: []
      };
      _0x567521 = {
        next: _0x463cce(0),
        throw: _0x463cce(1),
        return: _0x463cce(2)
      };
      if (typeof Symbol === "function") {
        _0x567521[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x567521;
      function _0x463cce(_0x37d852) {
        return function (_0x384b3e) {
          return _0x30c2e5([_0x37d852, _0x384b3e]);
        };
      }
      function _0x30c2e5(_0x5816b9) {
        if (_0x4eac86) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2fe01c) {
          try {
            _0x4eac86 = 1;
            if (_0x45053c && (_0x2fb4d2 = _0x5816b9[0] & 2 ? _0x45053c.return : _0x5816b9[0] ? _0x45053c.throw || ((_0x2fb4d2 = _0x45053c.return) && _0x2fb4d2.call(_0x45053c), 0) : _0x45053c.next) && !(_0x2fb4d2 = _0x2fb4d2.call(_0x45053c, _0x5816b9[1])).done) {
              return _0x2fb4d2;
            }
            _0x45053c = 0;
            if (_0x2fb4d2) {
              _0x5816b9 = [_0x5816b9[0] & 2, _0x2fb4d2.value];
            }
            switch (_0x5816b9[0]) {
              case 0:
              case 1:
                _0x2fb4d2 = _0x5816b9;
                break;
              case 4:
                _0x2fe01c.label++;
                var _0x33f9f7 = {
                  value: _0x5816b9[1],
                  done: false
                };
                return _0x33f9f7;
              case 5:
                _0x2fe01c.label++;
                _0x45053c = _0x5816b9[1];
                _0x5816b9 = [0];
                continue;
              case 7:
                _0x5816b9 = _0x2fe01c.ops.pop();
                _0x2fe01c.trys.pop();
                continue;
              default:
                if (!(_0x2fb4d2 = _0x2fe01c.trys, _0x2fb4d2 = _0x2fb4d2.length > 0 && _0x2fb4d2[_0x2fb4d2.length - 1]) && (_0x5816b9[0] === 6 || _0x5816b9[0] === 2)) {
                  _0x2fe01c = 0;
                  continue;
                }
                if (_0x5816b9[0] === 3 && (!_0x2fb4d2 || _0x5816b9[1] > _0x2fb4d2[0] && _0x5816b9[1] < _0x2fb4d2[3])) {
                  _0x2fe01c.label = _0x5816b9[1];
                  break;
                }
                if (_0x5816b9[0] === 6 && _0x2fe01c.label < _0x2fb4d2[1]) {
                  _0x2fe01c.label = _0x2fb4d2[1];
                  _0x2fb4d2 = _0x5816b9;
                  break;
                }
                if (_0x2fb4d2 && _0x2fe01c.label < _0x2fb4d2[2]) {
                  _0x2fe01c.label = _0x2fb4d2[2];
                  _0x2fe01c.ops.push(_0x5816b9);
                  break;
                }
                if (_0x2fb4d2[2]) {
                  _0x2fe01c.ops.pop();
                }
                _0x2fe01c.trys.pop();
                continue;
            }
            _0x5816b9 = _0x2f0d41.call(_0x1b2234, _0x2fe01c);
          } catch (_0x38a7a0) {
            _0x5816b9 = [6, _0x38a7a0];
            _0x45053c = 0;
          } finally {
            _0x4eac86 = _0x2fb4d2 = 0;
          }
        }
        if (_0x5816b9[0] & 5) {
          throw _0x5816b9[1];
        }
        var _0x510fcf = {
          value: _0x5816b9[0] ? _0x5816b9[1] : undefined,
          done: true
        };
        return _0x510fcf;
      }
    }
    var _0x53ed9c = new Map();
    function _0x1818a5(_0x1d47af) {
      return _0x53ed9c.get(_0x1d47af);
    }
    function _0x1456fd(_0x2d8365, _0xdead28) {
      _0x53ed9c.set(_0x2d8365, _0xdead28);
    }
    function _0xcc6230(_0x223f05) {
      return _0x53ed9c.has(_0x223f05);
    }
    function _0x13ef15(_0xb1ff7a, _0x16ba21, _0xd6a588, _0x4c9ecc) {
      var _0x327de4 = [];
      for (var _0x4789fd = 0; _0x4789fd < _0xb1ff7a; _0x4789fd += 1) {
        var _0x2bcd81 = typeof _0x16ba21 === "number" ? _0x16ba21 / _0xb1ff7a : _0x16ba21[_0x4789fd];
        _0x327de4.push({
          difficulty: _0x2bcd81,
          get gap() {
            return GetRandom(_0xd6a588, _0x4c9ecc);
          }
        });
      }
      return _0x327de4;
    }
    function _0x17266f(_0x56c761, _0x565f9b, _0x42e2da) {
      return _0x22dd5f.apply(this, arguments);
    }
    function _0x22dd5f() {
      _0x22dd5f = _0x4bcd14(function (_0x2026f7, _0xdcc4c5, _0x10e2fa) {
        var _0x33baa6;
        var _0x15fae7;
        var _0x5e887d;
        var _0x2046be;
        return _0x1196d6(this, function (_0x192edb) {
          switch (_0x192edb.label) {
            case 0:
              _0x33baa6 = typeof _0x10e2fa === "string" ? _0x1818a5(_0x10e2fa) : _0x10e2fa;
              if (!_0x33baa6) {
                return [2];
              }
              _0x15fae7 = new AnimationTask(PlayerPedId(), _0x33baa6.type, _0x33baa6.text, _0x33baa6.duration, _0x33baa6.dictionary, _0x33baa6.animation, _0x33baa6.flag);
              _0x5e887d = _0x33baa6.callback;
              if (!_0x5e887d && _0x33baa6.data) {
                _0x2046be = _0x33baa6.data;
                _0x5e887d = function (_0x3afc6e, _0x1101b6) {
                  var _0x57f849;
                  if (_0x2046be.bones) {
                    var _0x1c5c96 = GetClosestBone(_0x1101b6, _0x2046be.bones);
                    _0x57f849 = _0x1c5c96[2];
                  } else {
                    _0x57f849 = GetDistance(GetEntityCoords(PlayerPedId(), false), GetEntityCoords(_0x1101b6, false));
                  }
                  if (_0x57f849 && _0x57f849 > _0x2046be.distance) {
                    _0x3afc6e.abort();
                  }
                };
              }
              return [4, _0x15fae7.start(function (_0x158a8c) {
                if (!_0x5e887d) {
                  return;
                }
                var _0x19808c = setInterval(function () {
                  if (!_0x158a8c.active) {
                    clearInterval(_0x19808c);
                    _0x158a8c.abort();
                  }
                  _0x5e887d(_0x158a8c, _0xdcc4c5);
                }, 1000);
              })];
            case 1:
              return [2, _0x192edb.sent()];
          }
        });
      });
      return _0x22dd5f.apply(this, arguments);
    }
    ;
    function _0x1e8ed9(_0x99ff3f, _0x309cee, _0x2ebf76, _0x56767b, _0x6f1d1f, _0x34dbd8, _0x325d94) {
      try {
        var _0xa0ca8e = _0x99ff3f[_0x34dbd8](_0x325d94);
        var _0x4773f9 = _0xa0ca8e.value;
      } catch (_0x47930c) {
        _0x2ebf76(_0x47930c);
        return;
      }
      if (_0xa0ca8e.done) {
        _0x309cee(_0x4773f9);
      } else {
        Promise.resolve(_0x4773f9).then(_0x56767b, _0x6f1d1f);
      }
    }
    function _0xec4fe4(_0x392fbd) {
      return function () {
        var _0x84f113 = this;
        var _0x34ff10 = arguments;
        return new Promise(function (_0x27f565, _0x3a7e0c) {
          var _0x4b16c9 = _0x392fbd.apply(_0x84f113, _0x34ff10);
          function _0x4ba0e2(_0x4f4875) {
            _0x1e8ed9(_0x4b16c9, _0x27f565, _0x3a7e0c, _0x4ba0e2, _0x81242d, "next", _0x4f4875);
          }
          function _0x81242d(_0x19facd) {
            _0x1e8ed9(_0x4b16c9, _0x27f565, _0x3a7e0c, _0x4ba0e2, _0x81242d, "throw", _0x19facd);
          }
          _0x4ba0e2(undefined);
        });
      };
    }
    function _0x59195e(_0x3543d5, _0x2bd66d) {
      var _0x2e0710;
      var _0x2e2735;
      var _0x3a2597;
      var _0x4d8c3a;
      var _0x1bee38 = {
        label: 0,
        sent: function () {
          if (_0x3a2597[0] & 1) {
            throw _0x3a2597[1];
          }
          return _0x3a2597[1];
        },
        trys: [],
        ops: []
      };
      _0x4d8c3a = {
        next: _0x385862(0),
        throw: _0x385862(1),
        return: _0x385862(2)
      };
      if (typeof Symbol === "function") {
        _0x4d8c3a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4d8c3a;
      function _0x385862(_0x562620) {
        return function (_0xeaea63) {
          return _0x49ba71([_0x562620, _0xeaea63]);
        };
      }
      function _0x49ba71(_0x2bfbe1) {
        if (_0x2e0710) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1bee38) {
          try {
            _0x2e0710 = 1;
            if (_0x2e2735 && (_0x3a2597 = _0x2bfbe1[0] & 2 ? _0x2e2735.return : _0x2bfbe1[0] ? _0x2e2735.throw || ((_0x3a2597 = _0x2e2735.return) && _0x3a2597.call(_0x2e2735), 0) : _0x2e2735.next) && !(_0x3a2597 = _0x3a2597.call(_0x2e2735, _0x2bfbe1[1])).done) {
              return _0x3a2597;
            }
            _0x2e2735 = 0;
            if (_0x3a2597) {
              _0x2bfbe1 = [_0x2bfbe1[0] & 2, _0x3a2597.value];
            }
            switch (_0x2bfbe1[0]) {
              case 0:
              case 1:
                _0x3a2597 = _0x2bfbe1;
                break;
              case 4:
                _0x1bee38.label++;
                var _0x116250 = {
                  value: _0x2bfbe1[1],
                  done: false
                };
                return _0x116250;
              case 5:
                _0x1bee38.label++;
                _0x2e2735 = _0x2bfbe1[1];
                _0x2bfbe1 = [0];
                continue;
              case 7:
                _0x2bfbe1 = _0x1bee38.ops.pop();
                _0x1bee38.trys.pop();
                continue;
              default:
                if (!(_0x3a2597 = _0x1bee38.trys, _0x3a2597 = _0x3a2597.length > 0 && _0x3a2597[_0x3a2597.length - 1]) && (_0x2bfbe1[0] === 6 || _0x2bfbe1[0] === 2)) {
                  _0x1bee38 = 0;
                  continue;
                }
                if (_0x2bfbe1[0] === 3 && (!_0x3a2597 || _0x2bfbe1[1] > _0x3a2597[0] && _0x2bfbe1[1] < _0x3a2597[3])) {
                  _0x1bee38.label = _0x2bfbe1[1];
                  break;
                }
                if (_0x2bfbe1[0] === 6 && _0x1bee38.label < _0x3a2597[1]) {
                  _0x1bee38.label = _0x3a2597[1];
                  _0x3a2597 = _0x2bfbe1;
                  break;
                }
                if (_0x3a2597 && _0x1bee38.label < _0x3a2597[2]) {
                  _0x1bee38.label = _0x3a2597[2];
                  _0x1bee38.ops.push(_0x2bfbe1);
                  break;
                }
                if (_0x3a2597[2]) {
                  _0x1bee38.ops.pop();
                }
                _0x1bee38.trys.pop();
                continue;
            }
            _0x2bfbe1 = _0x2bd66d.call(_0x3543d5, _0x1bee38);
          } catch (_0x5b3d2a) {
            _0x2bfbe1 = [6, _0x5b3d2a];
            _0x2e2735 = 0;
          } finally {
            _0x2e0710 = _0x3a2597 = 0;
          }
        }
        if (_0x2bfbe1[0] & 5) {
          throw _0x2bfbe1[1];
        }
        var _0x47369c = {
          value: _0x2bfbe1[0] ? _0x2bfbe1[1] : undefined,
          done: true
        };
        return _0x47369c;
      }
    }
    function _0x4bfe2d() {
      return _0x2d924e.apply(this, arguments);
    }
    function _0x2d924e() {
      _0x2d924e = _0xec4fe4(function () {
        return _0x59195e(this, function (_0x15fa2d) {
          _0x34b6cb.forEach(function (_0x3bb93c) {
            _0x1456fd(_0x3bb93c.name, _0x3bb93c.animation);
          });
          return [2];
        });
      });
      return _0x2d924e.apply(this, arguments);
    }
    var _0x34b6cb = [{
      name: "vehicle:cosmetic",
      animation: {
        type: "normal",
        text: "Installing part to Vehicle...",
        duration: 42000,
        dictionary: "WORLD_HUMAN_WELDING",
        animation: "",
        data: {
          distance: 3.5
        }
      }
    }, {
      name: "vehicle:performance",
      animation: {
        type: "normal",
        text: "Installing part to Vehicle...",
        duration: 42000,
        dictionary: "mini@repair",
        animation: "fixing_a_player",
        data: {
          distance: 3.5
        }
      }
    }, {
      name: "vehicle:respray",
      animation: {
        type: "normal",
        text: "Spraying Vehicle...",
        duration: 42000,
        dictionary: "anim@amb@business@weed@weed_inspecting_lo_med_hi@",
        animation: "weed_spraybottle_crouch_spraying_01_inspector",
        flag: 49,
        data: {
          distance: 3.5
        }
      }
    }];
    ;
    function _0xb6a303(_0x2eaf34, _0x5929d2, _0xd400c6, _0x113a40, _0x586c9a, _0x3b1be4, _0x10c6f9) {
      try {
        var _0x3bdc98 = _0x2eaf34[_0x3b1be4](_0x10c6f9);
        var _0x91fcb4 = _0x3bdc98.value;
      } catch (_0x655891) {
        _0xd400c6(_0x655891);
        return;
      }
      if (_0x3bdc98.done) {
        _0x5929d2(_0x91fcb4);
      } else {
        Promise.resolve(_0x91fcb4).then(_0x113a40, _0x586c9a);
      }
    }
    function _0x41cddf(_0x24d10c) {
      return function () {
        var _0x3cc95a = this;
        var _0x848080 = arguments;
        return new Promise(function (_0x13d397, _0xd63251) {
          var _0x3a2d59 = _0x24d10c.apply(_0x3cc95a, _0x848080);
          function _0xca0ba0(_0x59481a) {
            _0xb6a303(_0x3a2d59, _0x13d397, _0xd63251, _0xca0ba0, _0x365270, "next", _0x59481a);
          }
          function _0x365270(_0xd14231) {
            _0xb6a303(_0x3a2d59, _0x13d397, _0xd63251, _0xca0ba0, _0x365270, "throw", _0xd14231);
          }
          _0xca0ba0(undefined);
        });
      };
    }
    function _0xab4b1c(_0x44abba, _0x455b65) {
      var _0x225a89;
      var _0x406852;
      var _0x69540e;
      var _0x249daa;
      var _0x50617c = {
        label: 0,
        sent: function () {
          if (_0x69540e[0] & 1) {
            throw _0x69540e[1];
          }
          return _0x69540e[1];
        },
        trys: [],
        ops: []
      };
      _0x249daa = {
        next: _0x44f4c0(0),
        throw: _0x44f4c0(1),
        return: _0x44f4c0(2)
      };
      if (typeof Symbol === "function") {
        _0x249daa[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x249daa;
      function _0x44f4c0(_0xbfbc22) {
        return function (_0x2f11c1) {
          return _0x152910([_0xbfbc22, _0x2f11c1]);
        };
      }
      function _0x152910(_0x5cf4fa) {
        if (_0x225a89) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x50617c) {
          try {
            _0x225a89 = 1;
            if (_0x406852 && (_0x69540e = _0x5cf4fa[0] & 2 ? _0x406852.return : _0x5cf4fa[0] ? _0x406852.throw || ((_0x69540e = _0x406852.return) && _0x69540e.call(_0x406852), 0) : _0x406852.next) && !(_0x69540e = _0x69540e.call(_0x406852, _0x5cf4fa[1])).done) {
              return _0x69540e;
            }
            _0x406852 = 0;
            if (_0x69540e) {
              _0x5cf4fa = [_0x5cf4fa[0] & 2, _0x69540e.value];
            }
            switch (_0x5cf4fa[0]) {
              case 0:
              case 1:
                _0x69540e = _0x5cf4fa;
                break;
              case 4:
                _0x50617c.label++;
                var _0xf64648 = {
                  value: _0x5cf4fa[1],
                  done: false
                };
                return _0xf64648;
              case 5:
                _0x50617c.label++;
                _0x406852 = _0x5cf4fa[1];
                _0x5cf4fa = [0];
                continue;
              case 7:
                _0x5cf4fa = _0x50617c.ops.pop();
                _0x50617c.trys.pop();
                continue;
              default:
                if (!(_0x69540e = _0x50617c.trys, _0x69540e = _0x69540e.length > 0 && _0x69540e[_0x69540e.length - 1]) && (_0x5cf4fa[0] === 6 || _0x5cf4fa[0] === 2)) {
                  _0x50617c = 0;
                  continue;
                }
                if (_0x5cf4fa[0] === 3 && (!_0x69540e || _0x5cf4fa[1] > _0x69540e[0] && _0x5cf4fa[1] < _0x69540e[3])) {
                  _0x50617c.label = _0x5cf4fa[1];
                  break;
                }
                if (_0x5cf4fa[0] === 6 && _0x50617c.label < _0x69540e[1]) {
                  _0x50617c.label = _0x69540e[1];
                  _0x69540e = _0x5cf4fa;
                  break;
                }
                if (_0x69540e && _0x50617c.label < _0x69540e[2]) {
                  _0x50617c.label = _0x69540e[2];
                  _0x50617c.ops.push(_0x5cf4fa);
                  break;
                }
                if (_0x69540e[2]) {
                  _0x50617c.ops.pop();
                }
                _0x50617c.trys.pop();
                continue;
            }
            _0x5cf4fa = _0x455b65.call(_0x44abba, _0x50617c);
          } catch (_0x5dad89) {
            _0x5cf4fa = [6, _0x5dad89];
            _0x406852 = 0;
          } finally {
            _0x225a89 = _0x69540e = 0;
          }
        }
        if (_0x5cf4fa[0] & 5) {
          throw _0x5cf4fa[1];
        }
        var _0x276741 = {
          value: _0x5cf4fa[0] ? _0x5cf4fa[1] : undefined,
          done: true
        };
        return _0x276741;
      }
    }
    function _0x16a5b8() {
      return _0x3c1d86.apply(this, arguments);
    }
    function _0x3c1d86() {
      _0x3c1d86 = _0x41cddf(function () {
        return _0xab4b1c(this, function (_0x7ff9a9) {
          switch (_0x7ff9a9.label) {
            case 0:
              return [4, _0x4bfe2d()];
            case 1:
              _0x7ff9a9.sent();
              return [2];
          }
        });
      });
      return _0x3c1d86.apply(this, arguments);
    }
    ;
    function _0x543c6f(_0x174a3d, _0x7f3fb6, _0x235eb3, _0x3cd3df, _0x4827da, _0x3a2cbb, _0x1d74b7) {
      try {
        var _0xae96e8 = _0x174a3d[_0x3a2cbb](_0x1d74b7);
        var _0x17afa8 = _0xae96e8.value;
      } catch (_0x111ee7) {
        _0x235eb3(_0x111ee7);
        return;
      }
      if (_0xae96e8.done) {
        _0x7f3fb6(_0x17afa8);
      } else {
        Promise.resolve(_0x17afa8).then(_0x3cd3df, _0x4827da);
      }
    }
    function _0x31a3bc(_0x28b187) {
      return function () {
        var _0x19bc7f = this;
        var _0x2c41dc = arguments;
        return new Promise(function (_0x300dbd, _0x30ac84) {
          var _0xdc757d = _0x28b187.apply(_0x19bc7f, _0x2c41dc);
          function _0x2d5f03(_0x310274) {
            _0x543c6f(_0xdc757d, _0x300dbd, _0x30ac84, _0x2d5f03, _0x8a0072, "next", _0x310274);
          }
          function _0x8a0072(_0x8d955e) {
            _0x543c6f(_0xdc757d, _0x300dbd, _0x30ac84, _0x2d5f03, _0x8a0072, "throw", _0x8d955e);
          }
          _0x2d5f03(undefined);
        });
      };
    }
    function _0x217a3c(_0x3a1085, _0x17b629) {
      var _0x180135;
      var _0x35bb98;
      var _0x4c1b23;
      var _0x4dce8e;
      var _0x5c4f7d = {
        label: 0,
        sent: function () {
          if (_0x4c1b23[0] & 1) {
            throw _0x4c1b23[1];
          }
          return _0x4c1b23[1];
        },
        trys: [],
        ops: []
      };
      _0x4dce8e = {
        next: _0x361bc1(0),
        throw: _0x361bc1(1),
        return: _0x361bc1(2)
      };
      if (typeof Symbol === "function") {
        _0x4dce8e[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4dce8e;
      function _0x361bc1(_0x3c2379) {
        return function (_0x2e4af7) {
          return _0x4618d2([_0x3c2379, _0x2e4af7]);
        };
      }
      function _0x4618d2(_0x435204) {
        if (_0x180135) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5c4f7d) {
          try {
            _0x180135 = 1;
            if (_0x35bb98 && (_0x4c1b23 = _0x435204[0] & 2 ? _0x35bb98.return : _0x435204[0] ? _0x35bb98.throw || ((_0x4c1b23 = _0x35bb98.return) && _0x4c1b23.call(_0x35bb98), 0) : _0x35bb98.next) && !(_0x4c1b23 = _0x4c1b23.call(_0x35bb98, _0x435204[1])).done) {
              return _0x4c1b23;
            }
            _0x35bb98 = 0;
            if (_0x4c1b23) {
              _0x435204 = [_0x435204[0] & 2, _0x4c1b23.value];
            }
            switch (_0x435204[0]) {
              case 0:
              case 1:
                _0x4c1b23 = _0x435204;
                break;
              case 4:
                _0x5c4f7d.label++;
                var _0x2fb9c3 = {
                  value: _0x435204[1],
                  done: false
                };
                return _0x2fb9c3;
              case 5:
                _0x5c4f7d.label++;
                _0x35bb98 = _0x435204[1];
                _0x435204 = [0];
                continue;
              case 7:
                _0x435204 = _0x5c4f7d.ops.pop();
                _0x5c4f7d.trys.pop();
                continue;
              default:
                if (!(_0x4c1b23 = _0x5c4f7d.trys, _0x4c1b23 = _0x4c1b23.length > 0 && _0x4c1b23[_0x4c1b23.length - 1]) && (_0x435204[0] === 6 || _0x435204[0] === 2)) {
                  _0x5c4f7d = 0;
                  continue;
                }
                if (_0x435204[0] === 3 && (!_0x4c1b23 || _0x435204[1] > _0x4c1b23[0] && _0x435204[1] < _0x4c1b23[3])) {
                  _0x5c4f7d.label = _0x435204[1];
                  break;
                }
                if (_0x435204[0] === 6 && _0x5c4f7d.label < _0x4c1b23[1]) {
                  _0x5c4f7d.label = _0x4c1b23[1];
                  _0x4c1b23 = _0x435204;
                  break;
                }
                if (_0x4c1b23 && _0x5c4f7d.label < _0x4c1b23[2]) {
                  _0x5c4f7d.label = _0x4c1b23[2];
                  _0x5c4f7d.ops.push(_0x435204);
                  break;
                }
                if (_0x4c1b23[2]) {
                  _0x5c4f7d.ops.pop();
                }
                _0x5c4f7d.trys.pop();
                continue;
            }
            _0x435204 = _0x17b629.call(_0x3a1085, _0x5c4f7d);
          } catch (_0x2a389b) {
            _0x435204 = [6, _0x2a389b];
            _0x35bb98 = 0;
          } finally {
            _0x180135 = _0x4c1b23 = 0;
          }
        }
        if (_0x435204[0] & 5) {
          throw _0x435204[1];
        }
        var _0x2e1619 = {
          value: _0x435204[0] ? _0x435204[1] : undefined,
          done: true
        };
        return _0x2e1619;
      }
    }
    var _0x449aef;
    function _0x54e34e() {
      return _0x4a6ff8.apply(this, arguments);
    }
    function _0x4a6ff8() {
      _0x4a6ff8 = _0x31a3bc(function () {
        return _0x217a3c(this, function (_0x4e2c18) {
          return [2];
        });
      });
      return _0x4a6ff8.apply(this, arguments);
    }
    on("np-polyzone:enter", function (_0x2650e9, _0x3807d6) {
      if (_0x2650e9 !== "job_geofence") {
        return;
      }
      var _0x420274 = _0x56b6ba();
      if (_0x3807d6.job !== _0x420274) {
        return;
      }
      clearTimeout(_0x449aef);
      _0x449aef = undefined;
    });
    on("np-polyzone:exit", function (_0x2d042a, _0x5f1133) {
      if (_0x2d042a !== "job_geofence") {
        return;
      }
      var _0x568a7d = _0x56b6ba();
      if (_0x5f1133.job !== _0x568a7d) {
        return;
      }
      clearTimeout(_0x449aef);
      _0x449aef = setTimeout(function () {
        return _0x7cfbee();
      }, 10000);
      emit("DoLongHudText", "You're leaving the work area", 2);
    });
    ;
    function _0x5f2445(_0x4ef7ac, _0x3c6d01, _0x50df18, _0x5338e3, _0x459cc2, _0x1fdfd8, _0x184663) {
      try {
        var _0x1916c9 = _0x4ef7ac[_0x1fdfd8](_0x184663);
        var _0x2175fa = _0x1916c9.value;
      } catch (_0x41eb9e) {
        _0x50df18(_0x41eb9e);
        return;
      }
      if (_0x1916c9.done) {
        _0x3c6d01(_0x2175fa);
      } else {
        Promise.resolve(_0x2175fa).then(_0x5338e3, _0x459cc2);
      }
    }
    function _0x113d62(_0x3996d2) {
      return function () {
        var _0x3332ab = this;
        var _0x3c04a7 = arguments;
        return new Promise(function (_0x10812f, _0x3ae80a) {
          var _0xb0d59c = _0x3996d2.apply(_0x3332ab, _0x3c04a7);
          function _0x250250(_0x86717) {
            _0x5f2445(_0xb0d59c, _0x10812f, _0x3ae80a, _0x250250, _0x5dfcbd, "next", _0x86717);
          }
          function _0x5dfcbd(_0x265bbb) {
            _0x5f2445(_0xb0d59c, _0x10812f, _0x3ae80a, _0x250250, _0x5dfcbd, "throw", _0x265bbb);
          }
          _0x250250(undefined);
        });
      };
    }
    function _0x494461(_0x552aad, _0x535896) {
      var _0x1e530a;
      var _0x322b97;
      var _0x1432b6;
      var _0x5ec5bc;
      var _0x529159 = {
        label: 0,
        sent: function () {
          if (_0x1432b6[0] & 1) {
            throw _0x1432b6[1];
          }
          return _0x1432b6[1];
        },
        trys: [],
        ops: []
      };
      _0x5ec5bc = {
        next: _0x292486(0),
        throw: _0x292486(1),
        return: _0x292486(2)
      };
      if (typeof Symbol === "function") {
        _0x5ec5bc[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5ec5bc;
      function _0x292486(_0x37e849) {
        return function (_0x1251ed) {
          return _0x19fd7e([_0x37e849, _0x1251ed]);
        };
      }
      function _0x19fd7e(_0x12b45c) {
        if (_0x1e530a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x529159) {
          try {
            _0x1e530a = 1;
            if (_0x322b97 && (_0x1432b6 = _0x12b45c[0] & 2 ? _0x322b97.return : _0x12b45c[0] ? _0x322b97.throw || ((_0x1432b6 = _0x322b97.return) && _0x1432b6.call(_0x322b97), 0) : _0x322b97.next) && !(_0x1432b6 = _0x1432b6.call(_0x322b97, _0x12b45c[1])).done) {
              return _0x1432b6;
            }
            _0x322b97 = 0;
            if (_0x1432b6) {
              _0x12b45c = [_0x12b45c[0] & 2, _0x1432b6.value];
            }
            switch (_0x12b45c[0]) {
              case 0:
              case 1:
                _0x1432b6 = _0x12b45c;
                break;
              case 4:
                _0x529159.label++;
                var _0x3dedf5 = {
                  value: _0x12b45c[1],
                  done: false
                };
                return _0x3dedf5;
              case 5:
                _0x529159.label++;
                _0x322b97 = _0x12b45c[1];
                _0x12b45c = [0];
                continue;
              case 7:
                _0x12b45c = _0x529159.ops.pop();
                _0x529159.trys.pop();
                continue;
              default:
                if (!(_0x1432b6 = _0x529159.trys, _0x1432b6 = _0x1432b6.length > 0 && _0x1432b6[_0x1432b6.length - 1]) && (_0x12b45c[0] === 6 || _0x12b45c[0] === 2)) {
                  _0x529159 = 0;
                  continue;
                }
                if (_0x12b45c[0] === 3 && (!_0x1432b6 || _0x12b45c[1] > _0x1432b6[0] && _0x12b45c[1] < _0x1432b6[3])) {
                  _0x529159.label = _0x12b45c[1];
                  break;
                }
                if (_0x12b45c[0] === 6 && _0x529159.label < _0x1432b6[1]) {
                  _0x529159.label = _0x1432b6[1];
                  _0x1432b6 = _0x12b45c;
                  break;
                }
                if (_0x1432b6 && _0x529159.label < _0x1432b6[2]) {
                  _0x529159.label = _0x1432b6[2];
                  _0x529159.ops.push(_0x12b45c);
                  break;
                }
                if (_0x1432b6[2]) {
                  _0x529159.ops.pop();
                }
                _0x529159.trys.pop();
                continue;
            }
            _0x12b45c = _0x535896.call(_0x552aad, _0x529159);
          } catch (_0xf4ca63) {
            _0x12b45c = [6, _0xf4ca63];
            _0x322b97 = 0;
          } finally {
            _0x1e530a = _0x1432b6 = 0;
          }
        }
        if (_0x12b45c[0] & 5) {
          throw _0x12b45c[1];
        }
        var _0x4ac586 = {
          value: _0x12b45c[0] ? _0x12b45c[1] : undefined,
          done: true
        };
        return _0x4ac586;
      }
    }
    function _0x13f43e() {
      return _0x29d97f.apply(this, arguments);
    }
    function _0x29d97f() {
      _0x29d97f = _0x113d62(function () {
        return _0x494461(this, function (_0x17842b) {
          switch (_0x17842b.label) {
            case 0:
              return [4, _0x5405ae()];
            case 1:
              _0x17842b.sent();
              return [4, _0x3b14df()];
            case 2:
              _0x17842b.sent();
              return [4, _0x16a5b8()];
            case 3:
              _0x17842b.sent();
              return [4, _0x49f07c()];
            case 4:
              _0x17842b.sent();
              return [4, _0x249f2b()];
            case 5:
              _0x17842b.sent();
              return [4, _0x5421d7()];
            case 6:
              _0x17842b.sent();
              return [4, _0x183475()];
            case 7:
              _0x17842b.sent();
              return [4, _0x54e34e()];
            case 8:
              _0x17842b.sent();
              return [2];
          }
        });
      });
      return _0x29d97f.apply(this, arguments);
    }
    ;
    function _0xba8323(_0x4b96b4, _0x4561d0) {
      if (_0x4561d0 == null || _0x4561d0 > _0x4b96b4.length) {
        _0x4561d0 = _0x4b96b4.length;
      }
      for (var _0x8c6ef5 = 0, _0x477f81 = new Array(_0x4561d0); _0x8c6ef5 < _0x4561d0; _0x8c6ef5++) {
        _0x477f81[_0x8c6ef5] = _0x4b96b4[_0x8c6ef5];
      }
      return _0x477f81;
    }
    function _0x38a828(_0x165403) {
      if (Array.isArray(_0x165403)) {
        return _0xba8323(_0x165403);
      }
    }
    function _0x377900(_0x4ae809, _0x1a2fa1, _0x2d2de0, _0x5d7a2e, _0x2ec970, _0x301093, _0x33df5e) {
      try {
        var _0x100a20 = _0x4ae809[_0x301093](_0x33df5e);
        var _0x4e1328 = _0x100a20.value;
      } catch (_0x56d890) {
        _0x2d2de0(_0x56d890);
        return;
      }
      if (_0x100a20.done) {
        _0x1a2fa1(_0x4e1328);
      } else {
        Promise.resolve(_0x4e1328).then(_0x5d7a2e, _0x2ec970);
      }
    }
    function _0x381566(_0x5c0b82) {
      return function () {
        var _0x576e0b = this;
        var _0x3d86e3 = arguments;
        return new Promise(function (_0x4c3f67, _0x555a78) {
          var _0xe55658 = _0x5c0b82.apply(_0x576e0b, _0x3d86e3);
          function _0x2b6f39(_0x491260) {
            _0x377900(_0xe55658, _0x4c3f67, _0x555a78, _0x2b6f39, _0x4ea69a, "next", _0x491260);
          }
          function _0x4ea69a(_0x45dc24) {
            _0x377900(_0xe55658, _0x4c3f67, _0x555a78, _0x2b6f39, _0x4ea69a, "throw", _0x45dc24);
          }
          _0x2b6f39(undefined);
        });
      };
    }
    function _0x11db97(_0x4d691a) {
      if (typeof Symbol !== "undefined" && _0x4d691a[Symbol.iterator] != null || _0x4d691a["@@iterator"] != null) {
        return Array.from(_0x4d691a);
      }
    }
    function _0x5413bb() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0xa249e0(_0x3f2172) {
      return _0x38a828(_0x3f2172) || _0x11db97(_0x3f2172) || _0xe36e0a(_0x3f2172) || _0x5413bb();
    }
    function _0xe36e0a(_0x414673, _0x512ac6) {
      if (!_0x414673) {
        return;
      }
      if (typeof _0x414673 === "string") {
        return _0xba8323(_0x414673, _0x512ac6);
      }
      var _0x16d035 = Object.prototype.toString.call(_0x414673).slice(8, -1);
      if (_0x16d035 === "Object" && _0x414673.constructor) {
        _0x16d035 = _0x414673.constructor.name;
      }
      if (_0x16d035 === "Map" || _0x16d035 === "Set") {
        return Array.from(_0x16d035);
      }
      if (_0x16d035 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x16d035)) {
        return _0xba8323(_0x414673, _0x512ac6);
      }
    }
    function _0x398feb(_0xcdde6, _0xc82298) {
      var _0x5cb56d;
      var _0x25d5a7;
      var _0x293dfc;
      var _0x5bca76;
      var _0x46423a = {
        label: 0,
        sent: function () {
          if (_0x293dfc[0] & 1) {
            throw _0x293dfc[1];
          }
          return _0x293dfc[1];
        },
        trys: [],
        ops: []
      };
      _0x5bca76 = {
        next: _0x58afa8(0),
        throw: _0x58afa8(1),
        return: _0x58afa8(2)
      };
      if (typeof Symbol === "function") {
        _0x5bca76[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5bca76;
      function _0x58afa8(_0x4a47df) {
        return function (_0x56c82f) {
          return _0x14dc48([_0x4a47df, _0x56c82f]);
        };
      }
      function _0x14dc48(_0x47d289) {
        if (_0x5cb56d) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x46423a) {
          try {
            _0x5cb56d = 1;
            if (_0x25d5a7 && (_0x293dfc = _0x47d289[0] & 2 ? _0x25d5a7.return : _0x47d289[0] ? _0x25d5a7.throw || ((_0x293dfc = _0x25d5a7.return) && _0x293dfc.call(_0x25d5a7), 0) : _0x25d5a7.next) && !(_0x293dfc = _0x293dfc.call(_0x25d5a7, _0x47d289[1])).done) {
              return _0x293dfc;
            }
            _0x25d5a7 = 0;
            if (_0x293dfc) {
              _0x47d289 = [_0x47d289[0] & 2, _0x293dfc.value];
            }
            switch (_0x47d289[0]) {
              case 0:
              case 1:
                _0x293dfc = _0x47d289;
                break;
              case 4:
                _0x46423a.label++;
                var _0x454c29 = {
                  value: _0x47d289[1],
                  done: false
                };
                return _0x454c29;
              case 5:
                _0x46423a.label++;
                _0x25d5a7 = _0x47d289[1];
                _0x47d289 = [0];
                continue;
              case 7:
                _0x47d289 = _0x46423a.ops.pop();
                _0x46423a.trys.pop();
                continue;
              default:
                if (!(_0x293dfc = _0x46423a.trys, _0x293dfc = _0x293dfc.length > 0 && _0x293dfc[_0x293dfc.length - 1]) && (_0x47d289[0] === 6 || _0x47d289[0] === 2)) {
                  _0x46423a = 0;
                  continue;
                }
                if (_0x47d289[0] === 3 && (!_0x293dfc || _0x47d289[1] > _0x293dfc[0] && _0x47d289[1] < _0x293dfc[3])) {
                  _0x46423a.label = _0x47d289[1];
                  break;
                }
                if (_0x47d289[0] === 6 && _0x46423a.label < _0x293dfc[1]) {
                  _0x46423a.label = _0x293dfc[1];
                  _0x293dfc = _0x47d289;
                  break;
                }
                if (_0x293dfc && _0x46423a.label < _0x293dfc[2]) {
                  _0x46423a.label = _0x293dfc[2];
                  _0x46423a.ops.push(_0x47d289);
                  break;
                }
                if (_0x293dfc[2]) {
                  _0x46423a.ops.pop();
                }
                _0x46423a.trys.pop();
                continue;
            }
            _0x47d289 = _0xc82298.call(_0xcdde6, _0x46423a);
          } catch (_0x5f0afc) {
            _0x47d289 = [6, _0x5f0afc];
            _0x25d5a7 = 0;
          } finally {
            _0x5cb56d = _0x293dfc = 0;
          }
        }
        if (_0x47d289[0] & 5) {
          throw _0x47d289[1];
        }
        var _0x25f49c = {
          value: _0x47d289[0] ? _0x47d289[1] : undefined,
          done: true
        };
        return _0x25f49c;
      }
    }
    var _0x553efd = new Map();
    function _0x610b8b() {
      return _0x46d01b.apply(this, arguments);
    }
    function _0x46d01b() {
      _0x46d01b = _0x381566(function () {
        var _0x1ca0ae;
        var _0x23a63a;
        var _0x4a4551;
        var _0x496a1f = arguments;
        return _0x398feb(this, function (_0x5c7e4a) {
          switch (_0x5c7e4a.label) {
            case 0:
              _0x1ca0ae = _0x496a1f.length > 0 && _0x496a1f[0] !== undefined ? _0x496a1f[0] : 0;
              return [4, RPC.execute("np-jobs:impound:fetchReasons")];
            case 1:
              _0x4a4551 = _0x5c7e4a.sent();
              if ((!_0x4a4551 || _0x4a4551.length === 0) && _0x1ca0ae < 5) {
                return [2, setTimeout(function () {
                  return _0x610b8b(++_0x1ca0ae);
                }, 5000)];
              }
              if ((_0x23a63a = _0x4a4551) === null || _0x23a63a === undefined) {
                undefined;
              } else {
                _0x23a63a.forEach(function (_0x4079a4) {
                  return _0x553efd.set(_0x4079a4.code, _0x4079a4);
                });
              }
              return [2];
          }
        });
      });
      return _0x46d01b.apply(this, arguments);
    }
    function _0x2e433e() {
      return _0xa249e0(_0x553efd.values());
    }
    function _0x2130bb(_0x2fe8fc) {
      return _0x553efd.get(_0x2fe8fc);
    }
    function _0x408c94(_0x48192d) {
      return _0x553efd.get(_0x48192d)?.name;
    }
    function _0x2d5b73(_0x452a46) {
      return _0x553efd.get(_0x452a46)?.fee;
    }
    ;
    var _0x507d3e = GetCurrentResourceName();
    var _0x51dbb6 = new Map();
    var _0xef795c = 0;
    RegisterUICallback("np-ui:menu:confirmation", function (_0x40c7c3, _0x2a6a0b) {
      var _0x594328 = _0x40c7c3.key;
      var _0x3f755e = `${_0x507d3e}:${_0x594328?.id}`;
      if (!_0x51dbb6.has(_0x3f755e)) {
        return;
      }
      _0x51dbb6.get(_0x3f755e)(_0x594328.accept);
      _0x51dbb6.delete(_0x3f755e);
      _0x2a6a0b({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
    });
    function _0x3b6730(_0x3ab945, _0x52a789) {
      var _0x54d92b = ++_0xef795c;
      var _0x463e20 = {
        title: _0x3ab945,
        description: _0x52a789
      };
      var _0x274f33 = {
        id: _0x54d92b,
        accept: true
      };
      var _0x45151d = {
        title: "Accept",
        action: "np-ui:menu:confirmation",
        key: _0x274f33
      };
      var _0xcdcc35 = {
        id: _0x54d92b,
        accept: false
      };
      var _0x1265cb = {
        title: "Decline",
        action: "np-ui:menu:confirmation",
        key: _0xcdcc35
      };
      var _0x227e72 = [_0x463e20, _0x45151d, _0x1265cb];
      var _0x955630 = new Promise(function (_0x35f108) {
        _0x51dbb6.set(`${_0x507d3e}:${_0x54d92b}`, _0x35f108);
        setTimeout(function () {
          return _0x35f108(false);
        }, 30000);
      });
      exports["np-ui"].showContextMenu(_0x227e72);
      return _0x955630;
    }
    var _0x5b1833 = 0;
    var _0x47149b = new Map();
    RegisterUICallback("np-ui:applicationClosed", function (_0x18225c, _0x5a7ade) {
      if (_0x18225c.name !== "textbox" || _0x18225c?.callbackUrl !== "np-ui:menu:input") {
        return;
      }
      var _0x128345 = _0x47149b.get(_0x18225c.key);
      if (!_0x128345) {
        return;
      }
      _0x128345.resolve(null);
      _0x47149b.delete(_0x18225c.key);
    });
    RegisterUICallback("np-ui:menu:input", function (_0x113d40, _0x2dfbf5) {
      _0x2dfbf5({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
      var _0x5d90a7 = _0x47149b.get(_0x113d40.key);
      if (!_0x5d90a7) {
        return;
      }
      var _0x2aaadd = _0x5d90a7.validation ? _0x5d90a7.validation(_0x113d40?.values) : true;
      if (!_0x2aaadd) {
        return;
      }
      _0x5d90a7.resolve(_0x113d40?.values);
      _0x47149b.delete(_0x113d40.key);
      exports["np-ui"].closeApplication("textbox");
    });
    function _0x14ba7b(_0x137737, _0x299d3) {
      var _0x157f41 = ++_0x5b1833;
      var _0x51be05 = new Promise(function (_0x47754d) {
        var _0x11531a = {
          resolve: _0x47754d,
          validation: _0x299d3
        };
        _0x47149b.set(_0x157f41, _0x11531a);
      });
      var _0x3d30a7 = {
        callbackUrl: "np-ui:menu:input",
        key: _0x157f41,
        items: _0x137737,
        show: true
      };
      exports["np-ui"].openApplication("textbox", _0x3d30a7);
      return _0x51be05;
    }
    ;
    function _0x566984(_0x4d69fd, _0x353a0f) {
      if (_0x353a0f == null || _0x353a0f > _0x4d69fd.length) {
        _0x353a0f = _0x4d69fd.length;
      }
      for (var _0x45c20c = 0, _0x1411d0 = new Array(_0x353a0f); _0x45c20c < _0x353a0f; _0x45c20c++) {
        _0x1411d0[_0x45c20c] = _0x4d69fd[_0x45c20c];
      }
      return _0x1411d0;
    }
    function _0x972f49(_0xf8c94e) {
      if (Array.isArray(_0xf8c94e)) {
        return _0xf8c94e;
      }
    }
    function _0x138342(_0x55f313, _0x21ccbd) {
      var _0x59ff0e = _0x55f313 == null ? null : typeof Symbol !== "undefined" && _0x55f313[Symbol.iterator] || _0x55f313["@@iterator"];
      if (_0x59ff0e == null) {
        return;
      }
      var _0x8fb573 = [];
      var _0x974397 = true;
      var _0x483086 = false;
      var _0x1b872e;
      var _0x2ed4c7;
      try {
        for (_0x59ff0e = _0x59ff0e.call(_0x55f313); !(_0x974397 = (_0x1b872e = _0x59ff0e.next()).done); _0x974397 = true) {
          _0x8fb573.push(_0x1b872e.value);
          if (_0x21ccbd && _0x8fb573.length === _0x21ccbd) {
            break;
          }
        }
      } catch (_0x356c5a) {
        _0x483086 = true;
        _0x2ed4c7 = _0x356c5a;
      } finally {
        try {
          if (!_0x974397 && _0x59ff0e.return != null) {
            _0x59ff0e.return();
          }
        } finally {
          if (_0x483086) {
            throw _0x2ed4c7;
          }
        }
      }
      return _0x8fb573;
    }
    function _0x1debe7() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x3c62be(_0x7ff771, _0xdbc602) {
      return _0x972f49(_0x7ff771) || _0x138342(_0x7ff771, _0xdbc602) || _0x289aad(_0x7ff771, _0xdbc602) || _0x1debe7();
    }
    function _0x289aad(_0x23ad9f, _0xef4072) {
      if (!_0x23ad9f) {
        return;
      }
      if (typeof _0x23ad9f === "string") {
        return _0x566984(_0x23ad9f, _0xef4072);
      }
      var _0x52097b = Object.prototype.toString.call(_0x23ad9f).slice(8, -1);
      if (_0x52097b === "Object" && _0x23ad9f.constructor) {
        _0x52097b = _0x23ad9f.constructor.name;
      }
      if (_0x52097b === "Map" || _0x52097b === "Set") {
        return Array.from(_0x52097b);
      }
      if (_0x52097b === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x52097b)) {
        return _0x566984(_0x23ad9f, _0xef4072);
      }
    }
    var _0x322f6f = new Map([["Amateur", 0], ["Apprentice", 500], ["Recognized", 1000], ["Respected", 1500], ["Distinguished", 3000], ["Prominent", 6000], ["Legendary", 9000]]);
    var _0x5a25e2 = new Map([["Amateur", 1], ["Apprentice", 1], ["Recognized", 1.25], ["Respected", 1.5], ["Distinguished", 2], ["Prominent", 2.5], ["Legendary", 3]]);
    function _0x2a27c7(_0x553c07) {
      return _0x6a8de4("towing") >= _0x322f6f.get(_0x553c07);
    }
    function _0x2b47ce(_0x24e2d6) {
      return _0x5a25e2.get(_0x24e2d6);
    }
    function _0x30dce0() {
      var _0x487400;
      var _0x75f54e;
      var _0x2e7dd4 = _0x6a8de4("towing");
      var _0x27b1f1 = true;
      var _0x1cbfee = false;
      var _0x306d02 = undefined;
      try {
        for (var _0x5b9cd2 = _0x322f6f[Symbol.iterator](), _0x4b3647; !(_0x27b1f1 = (_0x4b3647 = _0x5b9cd2.next()).done); _0x27b1f1 = true) {
          var _0x50f251 = _0x3c62be(_0x4b3647.value, 2);
          var _0x335b68 = _0x50f251[0];
          var _0x143043 = _0x50f251[1];
          if (!_0x487400 || _0x2e7dd4 > _0x143043 && _0x143043 > _0x75f54e) {
            _0x487400 = _0x335b68;
            _0x75f54e = _0x143043;
          }
        }
      } catch (_0x3fda45) {
        _0x1cbfee = true;
        _0x306d02 = _0x3fda45;
      } finally {
        try {
          if (!_0x27b1f1 && _0x5b9cd2.return != null) {
            _0x5b9cd2.return();
          }
        } finally {
          if (_0x1cbfee) {
            throw _0x306d02;
          }
        }
      }
      return _0x487400;
    }
    function _0x58e141() {
      if (!_0x322f6f) {
        return {
          current: "Unknown",
          next: "Stranger",
          amount: 0
        };
      }
      var _0x4465ed = Array.from(_0x322f6f, function (_0x431be4) {
        var _0x425c17 = _0x3c62be(_0x431be4, 2);
        var _0x4d255e = _0x425c17[0];
        var _0x5e44ff = _0x425c17[1];
        var _0x394db8 = {
          name: _0x4d255e,
          value: _0x5e44ff
        };
        return _0x394db8;
      });
      var _0x4f3018 = _0x6a8de4("towing") ?? 0;
      var _0x11ad11 = _0x4465ed[0].name;
      var _0x334850 = 0;
      _0x4465ed.forEach(function (_0x176def) {
        var _0x271302 = Number(_0x176def.value);
        if (_0x271302 <= _0x4f3018 && _0x334850 < _0x271302) {
          _0x334850 = _0x271302;
          _0x11ad11 = _0x176def.name;
        }
      });
      var _0x4c1c43 = _0x4465ed[_0x4465ed.findIndex(function (_0x4b7d43) {
        return _0x4b7d43.value === _0x334850;
      }) + 1];
      var _0x14e9fa = _0x4c1c43?.name ?? _0x11ad11;
      var _0x5f5e07 = _0x4c1c43?.value ?? _0x334850;
      var _0x112e55 = (_0x4f3018 - _0x334850) / (Number(_0x5f5e07) - _0x334850) * 100;
      var _0x5d59cc = {
        current: _0x11ad11,
        next: _0x14e9fa,
        amount: _0x112e55 !== Infinity ? _0x112e55 : 100
      };
      return _0x5d59cc;
    }
    ;
    function _0x751b42(_0x11fd83, _0xcad431, _0x5525c2, _0x29d82a, _0x318a99, _0x42092e, _0x3efabb) {
      try {
        var _0x1a98fa = _0x11fd83[_0x42092e](_0x3efabb);
        var _0x1b4f71 = _0x1a98fa.value;
      } catch (_0x41d259) {
        _0x5525c2(_0x41d259);
        return;
      }
      if (_0x1a98fa.done) {
        _0xcad431(_0x1b4f71);
      } else {
        Promise.resolve(_0x1b4f71).then(_0x29d82a, _0x318a99);
      }
    }
    function _0x3edc71(_0x2681c3) {
      return function () {
        var _0xcfb25 = this;
        var _0x2473a3 = arguments;
        return new Promise(function (_0x4c3a9f, _0x1116ff) {
          var _0x25f7fc = _0x2681c3.apply(_0xcfb25, _0x2473a3);
          function _0x183d1d(_0xc4d4d7) {
            _0x751b42(_0x25f7fc, _0x4c3a9f, _0x1116ff, _0x183d1d, _0x461ba9, "next", _0xc4d4d7);
          }
          function _0x461ba9(_0x573861) {
            _0x751b42(_0x25f7fc, _0x4c3a9f, _0x1116ff, _0x183d1d, _0x461ba9, "throw", _0x573861);
          }
          _0x183d1d(undefined);
        });
      };
    }
    function _0x3a43ad(_0x18cc64, _0xfe26d5) {
      var _0x513178;
      var _0x5f33ed;
      var _0x5a9b15;
      var _0x525437;
      var _0x3615ba = {
        label: 0,
        sent: function () {
          if (_0x5a9b15[0] & 1) {
            throw _0x5a9b15[1];
          }
          return _0x5a9b15[1];
        },
        trys: [],
        ops: []
      };
      _0x525437 = {
        next: _0x1d8fc8(0),
        throw: _0x1d8fc8(1),
        return: _0x1d8fc8(2)
      };
      if (typeof Symbol === "function") {
        _0x525437[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x525437;
      function _0x1d8fc8(_0x49da6e) {
        return function (_0xe82f42) {
          return _0x4883df([_0x49da6e, _0xe82f42]);
        };
      }
      function _0x4883df(_0xbe9bf5) {
        if (_0x513178) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3615ba) {
          try {
            _0x513178 = 1;
            if (_0x5f33ed && (_0x5a9b15 = _0xbe9bf5[0] & 2 ? _0x5f33ed.return : _0xbe9bf5[0] ? _0x5f33ed.throw || ((_0x5a9b15 = _0x5f33ed.return) && _0x5a9b15.call(_0x5f33ed), 0) : _0x5f33ed.next) && !(_0x5a9b15 = _0x5a9b15.call(_0x5f33ed, _0xbe9bf5[1])).done) {
              return _0x5a9b15;
            }
            _0x5f33ed = 0;
            if (_0x5a9b15) {
              _0xbe9bf5 = [_0xbe9bf5[0] & 2, _0x5a9b15.value];
            }
            switch (_0xbe9bf5[0]) {
              case 0:
              case 1:
                _0x5a9b15 = _0xbe9bf5;
                break;
              case 4:
                _0x3615ba.label++;
                var _0x159453 = {
                  value: _0xbe9bf5[1],
                  done: false
                };
                return _0x159453;
              case 5:
                _0x3615ba.label++;
                _0x5f33ed = _0xbe9bf5[1];
                _0xbe9bf5 = [0];
                continue;
              case 7:
                _0xbe9bf5 = _0x3615ba.ops.pop();
                _0x3615ba.trys.pop();
                continue;
              default:
                if (!(_0x5a9b15 = _0x3615ba.trys, _0x5a9b15 = _0x5a9b15.length > 0 && _0x5a9b15[_0x5a9b15.length - 1]) && (_0xbe9bf5[0] === 6 || _0xbe9bf5[0] === 2)) {
                  _0x3615ba = 0;
                  continue;
                }
                if (_0xbe9bf5[0] === 3 && (!_0x5a9b15 || _0xbe9bf5[1] > _0x5a9b15[0] && _0xbe9bf5[1] < _0x5a9b15[3])) {
                  _0x3615ba.label = _0xbe9bf5[1];
                  break;
                }
                if (_0xbe9bf5[0] === 6 && _0x3615ba.label < _0x5a9b15[1]) {
                  _0x3615ba.label = _0x5a9b15[1];
                  _0x5a9b15 = _0xbe9bf5;
                  break;
                }
                if (_0x5a9b15 && _0x3615ba.label < _0x5a9b15[2]) {
                  _0x3615ba.label = _0x5a9b15[2];
                  _0x3615ba.ops.push(_0xbe9bf5);
                  break;
                }
                if (_0x5a9b15[2]) {
                  _0x3615ba.ops.pop();
                }
                _0x3615ba.trys.pop();
                continue;
            }
            _0xbe9bf5 = _0xfe26d5.call(_0x18cc64, _0x3615ba);
          } catch (_0x1aa088) {
            _0xbe9bf5 = [6, _0x1aa088];
            _0x5f33ed = 0;
          } finally {
            _0x513178 = _0x5a9b15 = 0;
          }
        }
        if (_0xbe9bf5[0] & 5) {
          throw _0xbe9bf5[1];
        }
        var _0x14126a = {
          value: _0xbe9bf5[0] ? _0xbe9bf5[1] : undefined,
          done: true
        };
        return _0x14126a;
      }
    }
    function _0x4ea4ee() {
      return _0x3abc51.apply(this, arguments);
    }
    function _0x3abc51() {
      _0x3abc51 = _0x3edc71(function () {
        return _0x3a43ad(this, function (_0x2ad714) {
          return [2];
        });
      });
      return _0x3abc51.apply(this, arguments);
    }
    on("np-jobs:openImpoundRecords", function () {
      return _0xe1ce35();
    });
    function _0xe1ce35() {
      var _0x16e145 = _0x3fbba9("np-jobs:impound", "policeManaged");
      var _0xfe9d77 = _0x56b6ba() === "towing" || _0x56b6ba() === "pd_impound" || _0x16e145 && _0x5c2a51;
      var _0x4dbea8 = [{
        key: "recent",
        i18nTitle: true,
        i18nDescription: true,
        title: "Recently Impounded",
        description: "List with the last 10 impounded vehicles.",
        action: "np-jobs:menu:impound:lookup"
      }, {
        key: "personal",
        i18nTitle: true,
        i18nDescription: true,
        title: "Personal Vehicles",
        description: "List of owned vehicles currently impounded..",
        action: "np-jobs:menu:impound:lookup"
      }, {
        key: "plate",
        title: "Browse by Plate",
        i18nTitle: true,
        i18nDescription: true,
        description: "Look up for vehicles by the license plate.",
        action: "np-jobs:menu:impound:lookup"
      }, {
        key: "owner",
        title: "Browse by Owner",
        i18nTitle: true,
        i18nDescription: true,
        description: "Look up for vehicles by the owner's State ID.",
        action: "np-jobs:menu:impound:lookup"
      }, {
        key: "help",
        title: "Request Help",
        i18nTitle: true,
        description: "",
        action: "np-jobs:menu:impound:requestHelp"
      }];
      if (_0xfe9d77) {
        _0x4dbea8.pop();
      }
      exports["np-ui"].showContextMenu(_0x4dbea8);
    }
    function _0x274c3c(_0x2c1c94, _0xaf2bde, _0x1fea04) {
      return _0x295a79.apply(this, arguments);
    }
    function _0x295a79() {
      _0x295a79 = _0x3edc71(function (_0x2a09e0, _0x594b87, _0x708e65) {
        var _0x39ef9f;
        var _0x91f197;
        var _0xf66070;
        var _0x10c444;
        return _0x3a43ad(this, function (_0x32fd24) {
          switch (_0x32fd24.label) {
            case 0:
              return [4, RPC.execute("np-jobs:impound:lookup", _0x2a09e0, _0x594b87, _0x708e65)];
            case 1:
              _0x39ef9f = _0x32fd24.sent();
              _0x91f197 = _0x3fbba9("np-jobs:impound", "policeManaged");
              _0xf66070 = _0x56b6ba() === "towing" || _0x56b6ba() === "pd_impound" || _0x91f197 && _0x5c2a51;
              _0x10c444 = _0x39ef9f.map(function (_0x1636be) {
                var _0x188bb0 = {
                  title: `${_0x1636be.name} | ${_0x1636be.plate}`,
                  description: `Impounded: ${new Date(_0x1636be.record.impoundDate).toLocaleString("en-US")}`,
                  children: [{
                    title: "Vehicle Information",
                    i18nTitle: true,
                    i18nDescription: ["Plate", "VIN"],
                    description: `Plate: ${_0x1636be.plate} | VIN: ${_0x1636be.vin}`
                  }, {
                    title: "Impound Information",
                    i18nTitle: true,
                    description: `Reason: ${_0x1636be.reason.name} | Issuer ID: ${_0x1636be.issuer} |  Worker ID: ${_0x1636be.worker}  `,
                    i18nDescription: ["Reason", "Issuer ID", "Worker ID"]
                  }, {
                    title: "Retention Information",
                    i18nTitle: true,
                    description: `Strikes: ${_0x1636be.strikes} | Retained Until: ${new Date(_0x1636be.record.lockedUntil).toLocaleString("en-US")}`,
                    i18nDescription: ["Strikes", "Retained Until"]
                  }, {
                    title: "Release Fee",
                    i18nTitle: true,
                    description: `Total Cost: ${_0x5920e8(_0x1636be.fee)} | Tax: ${_0x1636be.tax}% | Paid: ${Boolean(_0x1636be.record.paid)} | Released: ${Boolean(_0x1636be.record.released)}`,
                    i18nDescription: ["Total Cost", "Tax", "Paid", "Released"]
                  }]
                };
                if (_0xf66070) {
                  var _0x5dc889 = false;
                  var _0x1e5df0 = new Date();
                  var _0x299ca2 = new Date(_0x1636be.record.lockedUntil);
                  var _0xd92435 = true;
                  if (_0x1636be.state === "seized") {
                    _0xd92435 = _0x299ca2.getTime() - _0x1e5df0.getTime() <= 0;
                  } else {
                    _0xd92435 = _0x299ca2.getTime() - _0x1e5df0.getTime() <= 0 || _0x1636be.reason.strikes > 0;
                  }
                  var _0x4eed98 = !_0x518037("towing") || _0x2a27c7("Apprentice");
                  if (_0x91f197) {
                    _0x4eed98 = _0x5c2a51;
                  }
                  if (!_0x1636be.record.paid) {
                    var _0x5f4c86 = {
                      vin: _0x1636be.vin,
                      recordId: _0x1636be.record.id,
                      fee: _0x1636be.fee
                    };
                    var _0x5c1041 = {
                      title: "Send Release Bill",
                      i18nTitle: true,
                      action: "np-jobs:menu:impound:sendBill",
                      key: _0x5f4c86,
                      disabled: !_0x4eed98 || !_0xd92435
                    };
                    _0x188bb0.children.push(_0x5c1041);
                  } else if (_0x1636be.record.paid && !_0x1636be.record.released && !_0x5dc889) {
                    var _0x4a72f4 = {
                      vin: _0x1636be.vin,
                      recordId: _0x1636be.record.id
                    };
                    var _0x553e6b = {
                      title: "Approve Vehicle Release",
                      i18nTitle: true,
                      action: "np-jobs:menu:impound:releaseVehicle",
                      key: _0x4a72f4,
                      disabled: !_0x4eed98 || !_0xd92435
                    };
                    _0x188bb0.children.push(_0x553e6b);
                  } else if (_0x1636be.record.paid && _0x1636be.record.released && !_0x5dc889) {
                    var _0x1eb017 = {
                      vin: _0x1636be.vin,
                      recordId: _0x1636be.record.id
                    };
                    var _0x1b74ab = {
                      title: "Deliver from Storage",
                      i18nTitle: true,
                      action: "np-jobs:menu:impound:deliverFromStorage",
                      key: _0x1eb017,
                      disabled: !_0x4eed98
                    };
                    _0x188bb0.children.push(_0x1b74ab);
                  }
                }
                var _0xa3c20f = new Date(GetCloudTimeAsInt() * 1000);
                var _0x5457bd = new Date(_0x1636be.record.lockedUntil);
                var _0x212232 = true;
                if (_0x1636be.state === "seized") {
                  _0x212232 = _0x5457bd.getTime() - _0xa3c20f.getTime() <= 0;
                } else {
                  _0x212232 = _0x5457bd.getTime() - _0xa3c20f.getTime() <= 0 || _0x1636be.reason.strikes > 0;
                }
                if (_0x1636be.state === "seized" && !_0x212232) {
                  _0x188bb0.children.push({
                    title: "Vehicle is seized",
                    i18nTitle: true,
                    description: "Your vehicle has been temporarily seized by hitting the strikes limit."
                  });
                }
                var _0x5e33f0 = _0x3fbba9("np-jobs:impound", "selfcheckout");
                if (!_0x5e33f0) {
                  return _0x188bb0;
                }
                _0x188bb0.children.push({
                  title: "Retrieve Impounded Vehicle",
                  i18nTitle: true,
                  description: `By self-retrieving the fee will be doubled to \$${_0x1636be.fee * 2}`,
                  i18nDescription: ["By self-retrieving the fee will be doubled to"],
                  action: _0x212232 ? "np-jobs:menu:impound:selfCheckOut" : undefined,
                  disabled: !_0x212232,
                  key: {
                    vin: _0x1636be.vin,
                    recordId: _0x1636be.record.id,
                    paid: _0x1636be.record.paid,
                    fee: _0x1636be.fee * 2
                  }
                });
                return _0x188bb0;
              });
              _0x10c444.unshift({
                title: "Look Up Results",
                i18nTitle: true,
                description: `Found ${_0x10c444.length} results.`,
                i18nDescription: ["Found", "results"],
                children: []
              });
              _0x10c444.unshift({
                i18nTitle: ["Go Back"],
                title: "← Go Back",
                description: "",
                action: "np-jobs:menu:impound:lookupBook",
                children: []
              });
              exports["np-ui"].showContextMenu(_0x10c444);
              return [2];
          }
        });
      });
      return _0x295a79.apply(this, arguments);
    }
    function _0x598843(_0x1d025f, _0x296e67) {
      return _0x20c057.apply(this, arguments);
    }
    function _0x20c057() {
      _0x20c057 = _0x3edc71(function (_0x2404da, _0x13161c) {
        var _0x54fdcb;
        var _0x36e4e3;
        var _0x5e94c5;
        var _0x3002c7;
        var _0x5d1e7c;
        return _0x3a43ad(this, function (_0x137c88) {
          _0x36e4e3 = NetworkGetNetworkIdFromEntity(_0x2404da);
          _0x5e94c5 = !_0x13161c ? _0x2e433e() : (_0x54fdcb = _0x2e433e()) === null || _0x54fdcb === undefined ? undefined : _0x54fdcb.filter(function (_0x1fb78f) {
            return _0x13161c.some(function (_0x345b23) {
              return _0x1fb78f.code === _0x345b23;
            });
          });
          if (!_0x5e94c5) {
            return [2];
          }
          _0x3002c7 = [];
          _0x5d1e7c = exports["np-flags"].HasVehicleFlag(_0x2404da, "isStolenVehicle");
          _0x5e94c5.forEach(function (_0x2f6ae5) {
            var _0x108507 = {
              netId: _0x36e4e3,
              reason: _0x2f6ae5.code,
              type: "normal",
              retention: false
            };
            var _0x15b5f0 = {
              key: _0x108507,
              i18nTitle: true,
              i18nDescription: true,
              title: _0x2f6ae5.name,
              description: _0x2f6ae5.description,
              action: _0x2f6ae5.felony || _0x2f6ae5.strikes > 0 ? undefined : "np-jobs:menu:impound:markForImpound",
              children: []
            };
            var _0x1d2fe1 = _0x15b5f0;
            if (_0x2f6ae5.strikes > 0 || _0x2f6ae5.felony) {
              var _0x4df49f = {
                title: _0x5d1e7c ? "Vehicle has signs of forced break in" : "Vehicle does not have signs of forced break in",
                description: _0x5d1e7c ? "It looks like the vehicle was unlocked forcibly" : "The vehicle looks like it was entered normally",
                disabled: true,
                i18nTitle: true,
                i18nDescription: true
              };
              _0x1d2fe1.children.push(_0x4df49f);
            }
            if (_0x2f6ae5.strikes > 0 && _0x2f6ae5.code !== "assetfees") {
              var _0x127370 = {
                netId: _0x36e4e3,
                reason: _0x2f6ae5.code,
                type: "present",
                retention: true,
                strikes: _0x2f6ae5.strikes
              };
              var _0x1f2c0d = {
                i18nTitle: true,
                i18nDescription: true,
                title: "Owner was present/aware of the crime",
                description: "",
                action: "np-jobs:menu:impound:markForStrike",
                key: _0x127370
              };
              _0x1d2fe1.children.push(_0x1f2c0d);
              var _0xd9de50 = {
                netId: _0x36e4e3,
                reason: _0x2f6ae5.code,
                type: "not_present",
                retention: true,
                strikes: 1
              };
              var _0x48bb77 = {
                i18nTitle: true,
                i18nDescription: true,
                title: "Vehicle was tampered with, Owner not present",
                description: "Only 1 strike point can be issued",
                action: "np-jobs:menu:impound:markForStrike",
                key: _0xd9de50
              };
              _0x1d2fe1.children.push(_0x48bb77);
              var _0x4f0e98 = {
                netId: _0x36e4e3,
                reason: _0x2f6ae5.code,
                type: "not_present",
                retention: true,
                strikes: _0x2f6ae5.strikes
              };
              var _0x487324 = {
                i18nTitle: true,
                i18nDescription: true,
                title: "Vehicle was not tampered with, Owner not present",
                description: "",
                action: "np-jobs:menu:impound:markForStrike",
                key: _0x4f0e98
              };
              _0x1d2fe1.children.push(_0x487324);
            } else if (_0x2f6ae5.felony) {
              var _0x1ae074 = {
                netId: _0x36e4e3,
                reason: _0x2f6ae5.code,
                type: "normal",
                retention: false,
                strikes: _0x2f6ae5.strikes
              };
              var _0x4b907a = {
                i18nTitle: true,
                i18nDescription: true,
                title: "Normal Impound",
                description: "",
                action: "np-jobs:menu:impound:markForImpound",
                key: _0x1ae074
              };
              _0x1d2fe1.children.push(_0x4b907a);
            }
            _0x3002c7.push(_0x1d2fe1);
          });
          exports["np-ui"].showContextMenu(_0x3002c7);
          return [2];
        });
      });
      return _0x20c057.apply(this, arguments);
    }
    function _0x29609b(_0x328628) {
      return _0x441b16.apply(this, arguments);
    }
    function _0x441b16() {
      _0x441b16 = _0x3edc71(function (_0x8b222d) {
        var _0x43ade4;
        var _0x7c8ded;
        var _0x411c8c;
        var _0x3dc598;
        var _0x43b36c;
        var _0x5b9d54;
        var _0x17fcea;
        var _0x57ed85;
        var _0x47d465;
        return _0x3a43ad(this, function (_0x1b1110) {
          switch (_0x1b1110.label) {
            case 0:
              _0x43ade4 = NetworkGetNetworkIdFromEntity(_0x8b222d);
              return [4, RPC.execute("np-jobs:impound:fetchRequestInfo", _0x43ade4)];
            case 1:
              _0x7c8ded = _0x1b1110.sent();
              if (!_0x7c8ded) {
                return [2];
              }
              _0x411c8c = _0x2130bb(_0x7c8ded.reason);
              console.log(_0x411c8c, _0x7c8ded.reason, _0x7c8ded);
              if (!_0x411c8c) {
                emit("DoLongHudText", "There is no impound request for this vehicle", 2);
                return [2];
              }
              _0x3dc598 = new Date();
              _0x3dc598.setHours(_0x3dc598.getHours() + _0x7c8ded.retention);
              _0x43b36c = _0x3dc598.toLocaleString("en-US");
              return [4, _0x3b6730(`${_0x411c8c.name}`, `Retained Until: ${_0x43b36c}`)];
            case 2:
              _0x5b9d54 = _0x1b1110.sent();
              if (!_0x5b9d54) {
                return [2];
              }
              _0x17fcea = _0x30dce0();
              _0x57ed85 = _0x2b47ce(_0x17fcea);
              return [4, RPC.execute("np-jobs:impound:completeImpound", _0x43ade4, _0x57ed85)];
            case 3:
              _0x47d465 = _0x1b1110.sent();
              emit("DoLongHudText", _0x47d465 ? "Vehicle was impounded." : "Unable to impound vehicle.", _0x47d465 ? 1 : 2);
              return [2];
          }
        });
      });
      return _0x441b16.apply(this, arguments);
    }
    ;
    function _0x3babf6(_0x427cc4, _0x27606f, _0x181e50, _0x2c6013, _0x2dfaad, _0xa6d144, _0x51a054) {
      try {
        var _0x5bb4b5 = _0x427cc4[_0xa6d144](_0x51a054);
        var _0x3b4183 = _0x5bb4b5.value;
      } catch (_0x3c3a80) {
        _0x181e50(_0x3c3a80);
        return;
      }
      if (_0x5bb4b5.done) {
        _0x27606f(_0x3b4183);
      } else {
        Promise.resolve(_0x3b4183).then(_0x2c6013, _0x2dfaad);
      }
    }
    function _0xa970b5(_0x438463) {
      return function () {
        var _0x26b950 = this;
        var _0x174119 = arguments;
        return new Promise(function (_0x39814e, _0xa0ffe6) {
          var _0x551687 = _0x438463.apply(_0x26b950, _0x174119);
          function _0x2255ec(_0x27b762) {
            _0x3babf6(_0x551687, _0x39814e, _0xa0ffe6, _0x2255ec, _0x14c84c, "next", _0x27b762);
          }
          function _0x14c84c(_0x53363f) {
            _0x3babf6(_0x551687, _0x39814e, _0xa0ffe6, _0x2255ec, _0x14c84c, "throw", _0x53363f);
          }
          _0x2255ec(undefined);
        });
      };
    }
    function _0x40fda6(_0x59b9d3, _0x5a1916) {
      var _0x1b11d4;
      var _0x187ca7;
      var _0x5366da;
      var _0x33bfd4;
      var _0xfce082 = {
        label: 0,
        sent: function () {
          if (_0x5366da[0] & 1) {
            throw _0x5366da[1];
          }
          return _0x5366da[1];
        },
        trys: [],
        ops: []
      };
      _0x33bfd4 = {
        next: _0x30705b(0),
        throw: _0x30705b(1),
        return: _0x30705b(2)
      };
      if (typeof Symbol === "function") {
        _0x33bfd4[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x33bfd4;
      function _0x30705b(_0xf56d32) {
        return function (_0x4c2d1b) {
          return _0x41419d([_0xf56d32, _0x4c2d1b]);
        };
      }
      function _0x41419d(_0x3d32b5) {
        if (_0x1b11d4) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xfce082) {
          try {
            _0x1b11d4 = 1;
            if (_0x187ca7 && (_0x5366da = _0x3d32b5[0] & 2 ? _0x187ca7.return : _0x3d32b5[0] ? _0x187ca7.throw || ((_0x5366da = _0x187ca7.return) && _0x5366da.call(_0x187ca7), 0) : _0x187ca7.next) && !(_0x5366da = _0x5366da.call(_0x187ca7, _0x3d32b5[1])).done) {
              return _0x5366da;
            }
            _0x187ca7 = 0;
            if (_0x5366da) {
              _0x3d32b5 = [_0x3d32b5[0] & 2, _0x5366da.value];
            }
            switch (_0x3d32b5[0]) {
              case 0:
              case 1:
                _0x5366da = _0x3d32b5;
                break;
              case 4:
                _0xfce082.label++;
                var _0x30a877 = {
                  value: _0x3d32b5[1],
                  done: false
                };
                return _0x30a877;
              case 5:
                _0xfce082.label++;
                _0x187ca7 = _0x3d32b5[1];
                _0x3d32b5 = [0];
                continue;
              case 7:
                _0x3d32b5 = _0xfce082.ops.pop();
                _0xfce082.trys.pop();
                continue;
              default:
                if (!(_0x5366da = _0xfce082.trys, _0x5366da = _0x5366da.length > 0 && _0x5366da[_0x5366da.length - 1]) && (_0x3d32b5[0] === 6 || _0x3d32b5[0] === 2)) {
                  _0xfce082 = 0;
                  continue;
                }
                if (_0x3d32b5[0] === 3 && (!_0x5366da || _0x3d32b5[1] > _0x5366da[0] && _0x3d32b5[1] < _0x5366da[3])) {
                  _0xfce082.label = _0x3d32b5[1];
                  break;
                }
                if (_0x3d32b5[0] === 6 && _0xfce082.label < _0x5366da[1]) {
                  _0xfce082.label = _0x5366da[1];
                  _0x5366da = _0x3d32b5;
                  break;
                }
                if (_0x5366da && _0xfce082.label < _0x5366da[2]) {
                  _0xfce082.label = _0x5366da[2];
                  _0xfce082.ops.push(_0x3d32b5);
                  break;
                }
                if (_0x5366da[2]) {
                  _0xfce082.ops.pop();
                }
                _0xfce082.trys.pop();
                continue;
            }
            _0x3d32b5 = _0x5a1916.call(_0x59b9d3, _0xfce082);
          } catch (_0x3f5d87) {
            _0x3d32b5 = [6, _0x3f5d87];
            _0x187ca7 = 0;
          } finally {
            _0x1b11d4 = _0x5366da = 0;
          }
        }
        if (_0x3d32b5[0] & 5) {
          throw _0x3d32b5[1];
        }
        var _0x4406eb = {
          value: _0x3d32b5[0] ? _0x3d32b5[1] : undefined,
          done: true
        };
        return _0x4406eb;
      }
    }
    function _0x29a679() {
      return _0x593086.apply(this, arguments);
    }
    function _0x593086() {
      _0x593086 = _0xa970b5(function () {
        return _0x40fda6(this, function (_0x753650) {
          return [2];
        });
      });
      return _0x593086.apply(this, arguments);
    }
    var _0x3ec9d2 = false;
    _0x1b3521("np-jobs:menu:impound:requestHelp", function () {
      var _0x2a4ad7 = _0xa970b5(function (_0x35a610, _0x2c57c0) {
        var _0x123e5d;
        return _0x40fda6(this, function (_0x171926) {
          _0x123e5d = _0x35a610.key;
          _0x2c57c0({
            data: {},
            meta: {
              ok: true,
              message: ""
            }
          });
          if (_0x3ec9d2) {
            return [2];
          }
          _0x3ec9d2 = true;
          RPC.execute("np-jobs:impound:requestHelp");
          setTimeout(function () {
            return _0x3ec9d2 = false;
          }, 120000);
          return [2];
        });
      });
      return function (_0x4338f5, _0x1426ff) {
        return _0x2a4ad7.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:lookupBook", function (_0x17e9d8, _0x507200) {
      _0x507200({
        data: {},
        meta: {
          ok: true,
          message: ""
        }
      });
      setTimeout(function () {
        return _0xe1ce35();
      }, 250);
    });
    _0x1b3521("np-jobs:menu:impound:lookup", function () {
      var _0x53188f = _0xa970b5(function (_0x4c8ecd, _0x18f833) {
        var _0x1f92ca;
        var _0x2e0e0f;
        var _0x5e0dc8;
        var _0x268be8;
        var _0x35cfcd;
        var _0x1a4e8f;
        return _0x40fda6(this, function (_0x56073f) {
          switch (_0x56073f.label) {
            case 0:
              _0x1f92ca = _0x4c8ecd.key;
              _0x18f833({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              return [4, _0x465fb3(100)];
            case 1:
              _0x56073f.sent();
              switch (_0x1f92ca) {
                case "personal":
                  return [3, 2];
                case "owner":
                  return [3, 3];
                case "plate":
                  return [3, 5];
              }
              return [3, 7];
            case 2:
              {
                _0x268be8 = exports.isPed.isPed("cid");
                return [3, 7];
              }
              _0x56073f.label = 3;
            case 3:
              return [4, _0x14ba7b([{
                name: "stateId",
                label: "State ID",
                icon: "address-card"
              }], function (_0x777abe) {
                _0x777abe.stateId = Number(_0x777abe?.stateId);
                return !isNaN(_0x777abe?.stateId);
              })];
            case 4:
              _0x35cfcd = _0x56073f.sent();
              _0x268be8 = _0x35cfcd.stateId;
              return [3, 7];
            case 5:
              return [4, _0x14ba7b([{
                name: "plate",
                label: "Vehicle Plate",
                icon: "car-alt"
              }], function (_0x294e02) {
                return _0x294e02.plate && _0x294e02.plate.length <= 8 && _0x294e02.plate.length > 0;
              })];
            case 6:
              _0x1a4e8f = _0x56073f.sent();
              _0x5e0dc8 = _0x1a4e8f.plate;
              return [3, 7];
            case 7:
              return [4, _0x274c3c(_0x1f92ca, (_0x2e0e0f = _0x5e0dc8) === null || _0x2e0e0f === undefined ? undefined : _0x2e0e0f.toUpperCase(), _0x268be8)];
            case 8:
              _0x56073f.sent();
              return [2];
          }
        });
      });
      return function (_0x34e6e1, _0x128afc) {
        return _0x53188f.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:sendBill", function () {
      var _0x55e853 = _0xa970b5(function (_0x1baa25, _0x46f06d) {
        var _0xff7b1d;
        var _0x1d1317;
        var _0x23eaa0;
        var _0x5efc3c;
        return _0x40fda6(this, function (_0x47ea39) {
          switch (_0x47ea39.label) {
            case 0:
              _0xff7b1d = _0x1baa25.key;
              _0x46f06d({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              return [4, _0x465fb3(100)];
            case 1:
              _0x47ea39.sent();
              return [4, _0x14ba7b([{
                name: "stateId",
                label: "State ID",
                icon: "address-card"
              }], function (_0x16f87e) {
                if (!_0x16f87e.stateId || _0x16f87e.stateId.length > 9 || _0x16f87e.stateId.length === 0) {
                  return false;
                }
                _0x16f87e.stateId = Number(_0x16f87e?.stateId);
                return !isNaN(_0x16f87e?.stateId);
              })];
            case 2:
              _0x1d1317 = _0x47ea39.sent();
              _0x23eaa0 = _0x1d1317.stateId;
              if (!_0x23eaa0 || !Number(_0x23eaa0)) {
                return [2, emit("DoLongHudText", "Invalid State ID.", 2)];
              }
              return [4, RPC.execute("np-jobs:impound:sendBill", _0x23eaa0, _0xff7b1d.fee, _0xff7b1d.vin, _0xff7b1d.recordId)];
            case 3:
              _0x5efc3c = _0x47ea39.sent();
              if (!_0x5efc3c) {
                emit("DoLongHudText", "Unable to Charge release fee.", 2);
              }
              return [2];
          }
        });
      });
      return function (_0x17c1c7, _0x2a5b51) {
        return _0x55e853.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:releaseVehicle", function () {
      var _0x43f495 = _0xa970b5(function (_0xcb8897, _0x4c2c41) {
        var _0x45bde9;
        var _0x12b174;
        return _0x40fda6(this, function (_0x13af24) {
          switch (_0x13af24.label) {
            case 0:
              _0x45bde9 = _0xcb8897.key;
              _0x4c2c41({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              return [4, RPC.execute("np-jobs:impound:releaseVehicle", _0x45bde9.vin, _0x45bde9.recordId)];
            case 1:
              _0x12b174 = _0x13af24.sent();
              emit("DoLongHudText", _0x12b174 ? "Approved Vehicle Release." : "Unable to Approve Release", _0x12b174 ? 1 : 2);
              return [2];
          }
        });
      });
      return function (_0x1437af, _0x6e222c) {
        return _0x43f495.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:deliverFromStorage", function () {
      var _0xbd4a4a = _0xa970b5(function (_0x41af43, _0x2f94bd) {
        var _0x5460d4;
        var _0x2a4c14;
        return _0x40fda6(this, function (_0x432089) {
          switch (_0x432089.label) {
            case 0:
              _0x5460d4 = _0x41af43.key;
              _0x2f94bd({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              return [4, RPC.execute("np-jobs:impound:deliverFromStorage", _0x5460d4.vin, _0x5460d4.recordId)];
            case 1:
              _0x2a4c14 = _0x432089.sent();
              emit("DoLongHudText", _0x2a4c14 ? "Vehicle Delivered." : "Unable to Deliver Vehicle", _0x2a4c14 ? 1 : 2);
              return [2];
          }
        });
      });
      return function (_0x35ed03, _0x39707d) {
        return _0xbd4a4a.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:markForImpound", function () {
      var _0x3c11d1 = _0xa970b5(function (_0x590d58, _0x12252d) {
        var _0x49497f;
        var _0x423f51;
        var _0x294392;
        var _0x528d9a;
        var _0x2c0171;
        return _0x40fda6(this, function (_0x28a77f) {
          switch (_0x28a77f.label) {
            case 0:
              _0x49497f = _0x590d58.key;
              _0x12252d({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              _0x423f51 = _0x49497f.reason === "scuff" ? 10000 : 5000;
              return [4, _0x668078(_0x423f51, "Requesting Impound...")];
            case 1:
              _0x294392 = _0x28a77f.sent();
              if (_0x294392 !== 100) {
                return [2];
              }
              _0x528d9a = NetworkGetEntityFromNetworkId(_0x49497f.netId);
              return [4, RPC.execute("np-jobs:impound:requestImpound", _0x49497f.netId, _0x49497f.reason, _0x49497f.type, 0, true, _0x49497f.strikes ?? 0, 0, _0x48a3d4(_0x528d9a))];
            case 2:
              _0x2c0171 = _0x28a77f.sent();
              if (_0x2c0171) {
                SetEntityAsMissionEntity(_0x528d9a, true, true);
                exports["np-sync"].SyncedExecution("SetVehicleDoorsLocked", _0x528d9a, 3);
                emit("DoLongHudText", _0x2c0171 ? "Impound Request Accepted." : "Impound Request Failed.", _0x2c0171 ? 1 : 2);
              }
              return [2];
          }
        });
      });
      return function (_0x44450d, _0x775ac6) {
        return _0x3c11d1.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:markForStrike", function () {
      var _0x41ac79 = _0xa970b5(function (_0x1c3971, _0x5e6e56) {
        var _0x4c9824;
        var _0x4bd6a6;
        var _0x14fb5d;
        var _0x58ca00;
        var _0x50fbe5;
        var _0x218277;
        var _0x536bd3;
        return _0x40fda6(this, function (_0x586315) {
          switch (_0x586315.label) {
            case 0:
              _0x4c9824 = _0x1c3971.key;
              _0x5e6e56({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              return [4, _0x465fb3(100)];
            case 1:
              _0x586315.sent();
              return [4, _0x14ba7b([{
                name: "reportId",
                label: "Report ID",
                icon: "address-card"
              }], function (_0x2c2273) {
                if (!_0x2c2273.reportId || _0x2c2273.reportId.length === 0) {
                  return false;
                }
                _0x2c2273.reportId = Number(_0x2c2273?.reportId);
                return !isNaN(_0x2c2273?.reportId);
              })];
            case 2:
              _0x4bd6a6 = _0x586315.sent();
              _0x14fb5d = _0x4bd6a6.reportId;
              return [4, _0x668078(10000, "Requesting Impound...")];
            case 3:
              _0x58ca00 = _0x586315.sent();
              if (_0x58ca00 !== 100) {
                return [2];
              }
              _0x50fbe5 = NetworkGetEntityFromNetworkId(_0x4c9824.netId);
              return [4, RPC.execute("np-jobs:impound:requestImpound", _0x4c9824.netId, _0x4c9824.reason, _0x4c9824.type, 0, _0x4c9824.strikes, _0x14fb5d, _0x48a3d4(_0x50fbe5))];
            case 4:
              _0x218277 = _0x586315.sent();
              if (_0x218277) {
                _0x536bd3 = NetworkGetEntityFromNetworkId(_0x4c9824.netId);
                SetEntityAsMissionEntity(_0x536bd3, true, true);
                exports["np-sync"].SyncedExecution("SetVehicleDoorsLocked", _0x536bd3, 3);
                emit("DoLongHudText", _0x218277 ? "Impound Request Accepted." : "Impound Request Failed.", _0x218277 ? 1 : 2);
              }
              return [2];
          }
        });
      });
      return function (_0xac39be, _0x5b28b2) {
        return _0x41ac79.apply(this, arguments);
      };
    }());
    _0x1b3521("np-jobs:menu:impound:selfCheckOut", function () {
      var _0x110cf6 = _0xa970b5(function (_0x16f171, _0x2529e4) {
        var _0x1b4f2c;
        var _0xa4aaab;
        var _0x5b72b0;
        var _0x268404;
        return _0x40fda6(this, function (_0x5806a0) {
          switch (_0x5806a0.label) {
            case 0:
              _0x1b4f2c = _0x16f171.key;
              _0x2529e4({
                data: {},
                meta: {
                  ok: true,
                  message: ""
                }
              });
              return [4, _0x465fb3(250)];
            case 1:
              _0x5806a0.sent();
              if (!!_0x1b4f2c.paid) {
                return [3, 4];
              }
              return [4, _0x54cb5f("Impound Release Fee", `${_0x5920e8(_0x1b4f2c.fee)} incl. tax`, "file-invoice-dollar")];
            case 2:
              _0xa4aaab = _0x5806a0.sent();
              if (!_0xa4aaab) {
                return [2];
              }
              return [4, RPC.execute("np-jobs:impound:completeReleaseBill", _0x1b4f2c.vin, _0x1b4f2c.recordId, true)];
            case 3:
              _0x5b72b0 = _0x5806a0.sent();
              if (!_0x5b72b0) {
                return [2, emit("DoLongHudText", "Unable to Pay Release Fee.", 2)];
              }
              _0x5806a0.label = 4;
            case 4:
              return [4, RPC.execute("np-jobs:impound:selfCheckOut", _0x1b4f2c.vin, _0x1b4f2c.recordId)];
            case 5:
              _0x268404 = _0x5806a0.sent();
              emit("DoLongHudText", _0x268404 ? "Vehicle Delivered." : "Unable to Deliver Vehicle", _0x268404 ? 1 : 2);
              return [2];
          }
        });
      });
      return function (_0x48e91a, _0x10cfa8) {
        return _0x110cf6.apply(this, arguments);
      };
    }());
    function _0x48a3d4(_0x34055a) {
      return {
        wasInWater: IsEntityInWater(PlayerPedId()) ? true : false
      };
    }
    ;
    function _0x597642(_0x5641ad, _0x5e8d04, _0x1afcc0, _0x545fde, _0x2f7821, _0x16e382, _0x21d378) {
      try {
        var _0xa8020 = _0x5641ad[_0x16e382](_0x21d378);
        var _0x2cd3a9 = _0xa8020.value;
      } catch (_0x2d8827) {
        _0x1afcc0(_0x2d8827);
        return;
      }
      if (_0xa8020.done) {
        _0x5e8d04(_0x2cd3a9);
      } else {
        Promise.resolve(_0x2cd3a9).then(_0x545fde, _0x2f7821);
      }
    }
    function _0x55816c(_0x24b907) {
      return function () {
        var _0x30ac24 = this;
        var _0x4819bc = arguments;
        return new Promise(function (_0x35caac, _0x2d28da) {
          var _0x1cbf5b = _0x24b907.apply(_0x30ac24, _0x4819bc);
          function _0x11d802(_0x36c482) {
            _0x597642(_0x1cbf5b, _0x35caac, _0x2d28da, _0x11d802, _0x8b81de, "next", _0x36c482);
          }
          function _0x8b81de(_0x30f26c) {
            _0x597642(_0x1cbf5b, _0x35caac, _0x2d28da, _0x11d802, _0x8b81de, "throw", _0x30f26c);
          }
          _0x11d802(undefined);
        });
      };
    }
    function _0x1f4649(_0x134c10, _0x37a12a) {
      var _0x3b15a0;
      var _0x4077c8;
      var _0x248f30;
      var _0x28a25e;
      var _0xd18900 = {
        label: 0,
        sent: function () {
          if (_0x248f30[0] & 1) {
            throw _0x248f30[1];
          }
          return _0x248f30[1];
        },
        trys: [],
        ops: []
      };
      _0x28a25e = {
        next: _0x34fd28(0),
        throw: _0x34fd28(1),
        return: _0x34fd28(2)
      };
      if (typeof Symbol === "function") {
        _0x28a25e[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x28a25e;
      function _0x34fd28(_0x499f30) {
        return function (_0x307761) {
          return _0x40bc1e([_0x499f30, _0x307761]);
        };
      }
      function _0x40bc1e(_0x3133e4) {
        if (_0x3b15a0) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xd18900) {
          try {
            _0x3b15a0 = 1;
            if (_0x4077c8 && (_0x248f30 = _0x3133e4[0] & 2 ? _0x4077c8.return : _0x3133e4[0] ? _0x4077c8.throw || ((_0x248f30 = _0x4077c8.return) && _0x248f30.call(_0x4077c8), 0) : _0x4077c8.next) && !(_0x248f30 = _0x248f30.call(_0x4077c8, _0x3133e4[1])).done) {
              return _0x248f30;
            }
            _0x4077c8 = 0;
            if (_0x248f30) {
              _0x3133e4 = [_0x3133e4[0] & 2, _0x248f30.value];
            }
            switch (_0x3133e4[0]) {
              case 0:
              case 1:
                _0x248f30 = _0x3133e4;
                break;
              case 4:
                _0xd18900.label++;
                var _0x299f24 = {
                  value: _0x3133e4[1],
                  done: false
                };
                return _0x299f24;
              case 5:
                _0xd18900.label++;
                _0x4077c8 = _0x3133e4[1];
                _0x3133e4 = [0];
                continue;
              case 7:
                _0x3133e4 = _0xd18900.ops.pop();
                _0xd18900.trys.pop();
                continue;
              default:
                if (!(_0x248f30 = _0xd18900.trys, _0x248f30 = _0x248f30.length > 0 && _0x248f30[_0x248f30.length - 1]) && (_0x3133e4[0] === 6 || _0x3133e4[0] === 2)) {
                  _0xd18900 = 0;
                  continue;
                }
                if (_0x3133e4[0] === 3 && (!_0x248f30 || _0x3133e4[1] > _0x248f30[0] && _0x3133e4[1] < _0x248f30[3])) {
                  _0xd18900.label = _0x3133e4[1];
                  break;
                }
                if (_0x3133e4[0] === 6 && _0xd18900.label < _0x248f30[1]) {
                  _0xd18900.label = _0x248f30[1];
                  _0x248f30 = _0x3133e4;
                  break;
                }
                if (_0x248f30 && _0xd18900.label < _0x248f30[2]) {
                  _0xd18900.label = _0x248f30[2];
                  _0xd18900.ops.push(_0x3133e4);
                  break;
                }
                if (_0x248f30[2]) {
                  _0xd18900.ops.pop();
                }
                _0xd18900.trys.pop();
                continue;
            }
            _0x3133e4 = _0x37a12a.call(_0x134c10, _0xd18900);
          } catch (_0x4ae4c3) {
            _0x3133e4 = [6, _0x4ae4c3];
            _0x4077c8 = 0;
          } finally {
            _0x3b15a0 = _0x248f30 = 0;
          }
        }
        if (_0x3133e4[0] & 5) {
          throw _0x3133e4[1];
        }
        var _0x5810d5 = {
          value: _0x3133e4[0] ? _0x3133e4[1] : undefined,
          done: true
        };
        return _0x5810d5;
      }
    }
    var _0x9a2709 = null;
    function _0x4062e2() {
      return _0x2ddc21.apply(this, arguments);
    }
    function _0x2ddc21() {
      _0x2ddc21 = _0x55816c(function () {
        return _0x1f4649(this, function (_0x124f95) {
          return [2];
        });
      });
      return _0x2ddc21.apply(this, arguments);
    }
    function _0x2a694a() {
      return _0x9a2709;
    }
    var _0x252143 = ["police", "doc", "judge"];
    on("np-jobs:impound:openImpoundRequestMenu", function (_0x3f806b, _0xe083d8, _0x53fa6f) {
      var _0x1c89a9;
      if (!_0x252143.includes(_0x53fa6f.stateJob)) {
        _0x1c89a9 = ["scuff", "parking"];
      }
      _0x598843(_0xe083d8, _0x1c89a9);
    });
    on("np-jobs:impound:openImpoundMenu", function (_0x9135f3) {
      var _0xfaa423 = _0x56b6ba();
      if (_0xfaa423 !== "towing" && _0xfaa423 !== "pd_impound") {
        return;
      }
      _0x29609b(_0x9135f3);
    });
    onNet("np-jobs:impound:openBillConfirmation", function () {
      var _0xd267a2 = _0x55816c(function (_0x1d2cc4, _0x5800a6, _0x360b10) {
        var _0x899468;
        var _0x4e225f;
        return _0x1f4649(this, function (_0x32969c) {
          switch (_0x32969c.label) {
            case 0:
              return [4, _0x54cb5f("Impound Release Fee", `${_0x5920e8(_0x1d2cc4)} incl. tax`, "file-invoice-dollar")];
            case 1:
              _0x899468 = _0x32969c.sent();
              if (!_0x899468) {
                return [2];
              }
              return [4, RPC.execute("np-jobs:impound:completeReleaseBill", _0x5800a6, _0x360b10)];
            case 2:
              _0x4e225f = _0x32969c.sent();
              emit("DoLongHudText", _0x4e225f ? "Release Fee Paid." : "Unable to Pay Release Fee.", _0x4e225f ? 1 : 2);
              return [2];
          }
        });
      });
      return function (_0x5aa3ea, _0xadb926, _0x242262) {
        return _0xd267a2.apply(this, arguments);
      };
    }());
    on("np-jobs:pdimpound:paycheck", function () {
      var _0xedc86 = _0x56b6ba();
      if (_0xedc86 !== "pd_impound") {
        return;
      }
      _0x3cbfd9.g.exports["np-jobs"].GetPayCheck("pd_impound");
    });
    on("np-jobs:pdimpound:spawnTruck", _0x55816c(function () {
      var _0x3df911;
      var _0x376808;
      var _0x1179d9;
      var _0x3cf1a6;
      var _0x11ba3e;
      return _0x1f4649(this, function (_0x32d03c) {
        switch (_0x32d03c.label) {
          case 0:
            _0x3df911 = _0x56b6ba();
            if (_0x3df911 !== "pd_impound") {
              return [2];
            }
            var _0x5a5b03 = {
              x: 425.45,
              y: -1029.22,
              z: 29.04,
              h: 95.1
            };
            _0x376808 = _0x5a5b03;
            _0x1179d9 = GetClosestVehicle(_0x376808.x, _0x376808.y, _0x376808.z, 3, 0, 70);
            if (DoesEntityExist(_0x1179d9)) {
              return [2, TriggerEvent("DoLongHudText", "The area is crowded", 2)];
            }
            return [4, _0x135949("vehicle", GetHashKey("flatbed"), true, new _0x1f4826(425.45, -1029.22, 29.04), 95.1, [])];
          case 1:
            _0x3cf1a6 = _0x32d03c.sent();
            _0x11ba3e = NetworkGetEntityFromNetworkId(_0x3cf1a6);
            if (!DoesEntityExist(_0x11ba3e)) {
              return [2];
            }
            SetPedIntoVehicle(PlayerPedId(), _0x11ba3e, -1);
            _0x9a2709 = _0x3cf1a6;
            return [2];
        }
      });
    }));
    on("np-jobs:pdimpound:returnTruck", function () {
      var _0x4c85b0 = _0x56b6ba();
      if (_0x4c85b0 !== "pd_impound") {
        return;
      }
      if (_0x9a2709) {
        var _0x7da129 = NetworkGetEntityFromNetworkId(_0x9a2709);
        if (_0x7da129 && DoesEntityExist(_0x7da129)) {
          exports["np-sync"].SyncedExecution("DeleteVehicle", _0x7da129);
        }
        _0x9a2709 = null;
        return;
      }
    });
    RegisterUICallback("np-jobs:towing:getProgression", function (_0xbd82f9, _0x44af90) {
      var _0x3a629c = _0x58e141();
      var _0x120e3b = {
        data: _0x3a629c,
        meta: {
          ok: true,
          message: "done"
        }
      };
      return _0x44af90(_0x120e3b);
    });
    ;
    function _0x5582a4(_0x5c8fca, _0x574d0a, _0x329161, _0x1088dc, _0xf7a68c, _0x2feecb, _0x3fe6aa) {
      try {
        var _0x47024a = _0x5c8fca[_0x2feecb](_0x3fe6aa);
        var _0x278485 = _0x47024a.value;
      } catch (_0xb5daf2) {
        _0x329161(_0xb5daf2);
        return;
      }
      if (_0x47024a.done) {
        _0x574d0a(_0x278485);
      } else {
        Promise.resolve(_0x278485).then(_0x1088dc, _0xf7a68c);
      }
    }
    function _0x198aa9(_0x1a5a9e) {
      return function () {
        var _0x35db11 = this;
        var _0x17a13f = arguments;
        return new Promise(function (_0x5a3330, _0x4544a8) {
          var _0x3f6ac7 = _0x1a5a9e.apply(_0x35db11, _0x17a13f);
          function _0x594b0d(_0x3bb583) {
            _0x5582a4(_0x3f6ac7, _0x5a3330, _0x4544a8, _0x594b0d, _0x5c7cf0, "next", _0x3bb583);
          }
          function _0x5c7cf0(_0x1f0622) {
            _0x5582a4(_0x3f6ac7, _0x5a3330, _0x4544a8, _0x594b0d, _0x5c7cf0, "throw", _0x1f0622);
          }
          _0x594b0d(undefined);
        });
      };
    }
    function _0x5c7a46(_0x184f4b, _0x358a20) {
      var _0x845662;
      var _0x511bd7;
      var _0x13382c;
      var _0x4767b0;
      var _0x1bb179 = {
        label: 0,
        sent: function () {
          if (_0x13382c[0] & 1) {
            throw _0x13382c[1];
          }
          return _0x13382c[1];
        },
        trys: [],
        ops: []
      };
      _0x4767b0 = {
        next: _0x4bbbc3(0),
        throw: _0x4bbbc3(1),
        return: _0x4bbbc3(2)
      };
      if (typeof Symbol === "function") {
        _0x4767b0[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4767b0;
      function _0x4bbbc3(_0x134932) {
        return function (_0x40951a) {
          return _0x2947b3([_0x134932, _0x40951a]);
        };
      }
      function _0x2947b3(_0x1df669) {
        if (_0x845662) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1bb179) {
          try {
            _0x845662 = 1;
            if (_0x511bd7 && (_0x13382c = _0x1df669[0] & 2 ? _0x511bd7.return : _0x1df669[0] ? _0x511bd7.throw || ((_0x13382c = _0x511bd7.return) && _0x13382c.call(_0x511bd7), 0) : _0x511bd7.next) && !(_0x13382c = _0x13382c.call(_0x511bd7, _0x1df669[1])).done) {
              return _0x13382c;
            }
            _0x511bd7 = 0;
            if (_0x13382c) {
              _0x1df669 = [_0x1df669[0] & 2, _0x13382c.value];
            }
            switch (_0x1df669[0]) {
              case 0:
              case 1:
                _0x13382c = _0x1df669;
                break;
              case 4:
                _0x1bb179.label++;
                var _0x4457c9 = {
                  value: _0x1df669[1],
                  done: false
                };
                return _0x4457c9;
              case 5:
                _0x1bb179.label++;
                _0x511bd7 = _0x1df669[1];
                _0x1df669 = [0];
                continue;
              case 7:
                _0x1df669 = _0x1bb179.ops.pop();
                _0x1bb179.trys.pop();
                continue;
              default:
                if (!(_0x13382c = _0x1bb179.trys, _0x13382c = _0x13382c.length > 0 && _0x13382c[_0x13382c.length - 1]) && (_0x1df669[0] === 6 || _0x1df669[0] === 2)) {
                  _0x1bb179 = 0;
                  continue;
                }
                if (_0x1df669[0] === 3 && (!_0x13382c || _0x1df669[1] > _0x13382c[0] && _0x1df669[1] < _0x13382c[3])) {
                  _0x1bb179.label = _0x1df669[1];
                  break;
                }
                if (_0x1df669[0] === 6 && _0x1bb179.label < _0x13382c[1]) {
                  _0x1bb179.label = _0x13382c[1];
                  _0x13382c = _0x1df669;
                  break;
                }
                if (_0x13382c && _0x1bb179.label < _0x13382c[2]) {
                  _0x1bb179.label = _0x13382c[2];
                  _0x1bb179.ops.push(_0x1df669);
                  break;
                }
                if (_0x13382c[2]) {
                  _0x1bb179.ops.pop();
                }
                _0x1bb179.trys.pop();
                continue;
            }
            _0x1df669 = _0x358a20.call(_0x184f4b, _0x1bb179);
          } catch (_0x4fde00) {
            _0x1df669 = [6, _0x4fde00];
            _0x511bd7 = 0;
          } finally {
            _0x845662 = _0x13382c = 0;
          }
        }
        if (_0x1df669[0] & 5) {
          throw _0x1df669[1];
        }
        var _0x523a10 = {
          value: _0x1df669[0] ? _0x1df669[1] : undefined,
          done: true
        };
        return _0x523a10;
      }
    }
    function _0x2f8c79() {
      return _0x1f36d5.apply(this, arguments);
    }
    function _0x1f36d5() {
      _0x1f36d5 = _0x198aa9(function () {
        return _0x5c7a46(this, function (_0xbd52d7) {
          switch (_0xbd52d7.label) {
            case 0:
              return [4, _0x4ea4ee()];
            case 1:
              _0xbd52d7.sent();
              return [4, _0x4062e2()];
            case 2:
              _0xbd52d7.sent();
              return [4, _0x610b8b()];
            case 3:
              _0xbd52d7.sent();
              return [4, _0x29a679()];
            case 4:
              _0xbd52d7.sent();
              return [2];
          }
        });
      });
      return _0x1f36d5.apply(this, arguments);
    }
    ;
    function _0x143f53(_0x1062d9, _0x1ff887) {
      if (_0x1ff887 == null || _0x1ff887 > _0x1062d9.length) {
        _0x1ff887 = _0x1062d9.length;
      }
      for (var _0x13f234 = 0, _0x3cf25e = new Array(_0x1ff887); _0x13f234 < _0x1ff887; _0x13f234++) {
        _0x3cf25e[_0x13f234] = _0x1062d9[_0x13f234];
      }
      return _0x3cf25e;
    }
    function _0x2d95ea(_0x4267a1) {
      if (Array.isArray(_0x4267a1)) {
        return _0x4267a1;
      }
    }
    function _0x5cd0e4(_0x179f4b, _0x576875) {
      if (_0x576875.has(_0x179f4b)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
      }
    }
    function _0x13c3de(_0x748930, _0x42b106) {
      if (_0x42b106.get) {
        return _0x42b106.get.call(_0x748930);
      }
      return _0x42b106.value;
    }
    function _0x1fe251(_0x34265a, _0x36866e, _0x204927) {
      if (_0x36866e.set) {
        _0x36866e.set.call(_0x34265a, _0x204927);
      } else {
        if (!_0x36866e.writable) {
          throw new TypeError("attempted to set read only private field");
        }
        _0x36866e.value = _0x204927;
      }
    }
    function _0x610da5(_0x15867d, _0x194a87) {
      if (!(_0x15867d instanceof _0x194a87)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0xa77b49(_0x4bf0d5, _0x4eaf89, _0xa827cf) {
      if (!_0x4eaf89.has(_0x4bf0d5)) {
        throw new TypeError("attempted to " + _0xa827cf + " private field on non-instance");
      }
      return _0x4eaf89.get(_0x4bf0d5);
    }
    function _0x484470(_0x5b4a28, _0xb8e4d3) {
      var _0x5310ea = _0xa77b49(_0x5b4a28, _0xb8e4d3, "get");
      return _0x13c3de(_0x5b4a28, _0x5310ea);
    }
    function _0x1d5779(_0xbca9f6, _0x58d2f8, _0x5d3b24) {
      _0x5cd0e4(_0xbca9f6, _0x58d2f8);
      _0x58d2f8.set(_0xbca9f6, _0x5d3b24);
    }
    function _0x235c68(_0x29b99a, _0x84d4a2, _0x57ac08) {
      var _0x560d5e = _0xa77b49(_0x29b99a, _0x84d4a2, "set");
      _0x1fe251(_0x29b99a, _0x560d5e, _0x57ac08);
      return _0x57ac08;
    }
    function _0x254cb5(_0x2b2930, _0x4ce41c, _0x134343) {
      if (!_0x4ce41c.has(_0x2b2930)) {
        throw new TypeError("attempted to get private field on non-instance");
      }
      return _0x134343;
    }
    function _0x5e4b0b(_0x4e80dd, _0x462659) {
      _0x5cd0e4(_0x4e80dd, _0x462659);
      _0x462659.add(_0x4e80dd);
    }
    function _0x51b756(_0x47312f, _0x2e5e7f) {
      for (var _0x24026d = 0; _0x24026d < _0x2e5e7f.length; _0x24026d++) {
        var _0x5557d8 = _0x2e5e7f[_0x24026d];
        _0x5557d8.enumerable = _0x5557d8.enumerable || false;
        _0x5557d8.configurable = true;
        if ("value" in _0x5557d8) {
          _0x5557d8.writable = true;
        }
        Object.defineProperty(_0x47312f, _0x5557d8.key, _0x5557d8);
      }
    }
    function _0x1c9b3d(_0x35addf, _0x17d854, _0x34a7bb) {
      if (_0x17d854) {
        _0x51b756(_0x35addf.prototype, _0x17d854);
      }
      if (_0x34a7bb) {
        _0x51b756(_0x35addf, _0x34a7bb);
      }
      return _0x35addf;
    }
    function _0x4bb19c(_0x16dfaa, _0x3fd031) {
      var _0x382577 = _0x16dfaa == null ? null : typeof Symbol !== "undefined" && _0x16dfaa[Symbol.iterator] || _0x16dfaa["@@iterator"];
      if (_0x382577 == null) {
        return;
      }
      var _0x171de5 = [];
      var _0x354fdf = true;
      var _0x36d9c4 = false;
      var _0x5a4c6b;
      var _0x35b95a;
      try {
        for (_0x382577 = _0x382577.call(_0x16dfaa); !(_0x354fdf = (_0x5a4c6b = _0x382577.next()).done); _0x354fdf = true) {
          _0x171de5.push(_0x5a4c6b.value);
          if (_0x3fd031 && _0x171de5.length === _0x3fd031) {
            break;
          }
        }
      } catch (_0x476773) {
        _0x36d9c4 = true;
        _0x35b95a = _0x476773;
      } finally {
        try {
          if (!_0x354fdf && _0x382577.return != null) {
            _0x382577.return();
          }
        } finally {
          if (_0x36d9c4) {
            throw _0x35b95a;
          }
        }
      }
      return _0x171de5;
    }
    function _0x4dafdb() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x43f26c(_0x27bbd5, _0x4c1ab7) {
      return _0x2d95ea(_0x27bbd5) || _0x4bb19c(_0x27bbd5, _0x4c1ab7) || _0x2b0549(_0x27bbd5, _0x4c1ab7) || _0x4dafdb();
    }
    function _0x2b0549(_0x17762a, _0x16cfd2) {
      if (!_0x17762a) {
        return;
      }
      if (typeof _0x17762a === "string") {
        return _0x143f53(_0x17762a, _0x16cfd2);
      }
      var _0x2cb28c = Object.prototype.toString.call(_0x17762a).slice(8, -1);
      if (_0x2cb28c === "Object" && _0x17762a.constructor) {
        _0x2cb28c = _0x17762a.constructor.name;
      }
      if (_0x2cb28c === "Map" || _0x2cb28c === "Set") {
        return Array.from(_0x2cb28c);
      }
      if (_0x2cb28c === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x2cb28c)) {
        return _0x143f53(_0x17762a, _0x16cfd2);
      }
    }
    var _0x4cb80b = new WeakMap();
    var _0x4dd882 = new WeakMap();
    var _0x35f6e2 = new WeakMap();
    var _0x41489d = new WeakMap();
    var _0x2ed724 = new WeakMap();
    var _0x52ddb6 = new WeakSet();
    var _0x552519 = new WeakSet();
    var _0x98e17f = function () {
      'use strict';

      function _0x4f407a(_0x3d2958, _0x406f02, _0x422387, _0x4ce13d) {
        _0x610da5(this, _0x4f407a);
        _0x5e4b0b(this, _0x52ddb6);
        _0x5e4b0b(this, _0x552519);
        var _0x2c8936 = {
          writable: true,
          value: undefined
        };
        _0x1d5779(this, _0x4cb80b, _0x2c8936);
        var _0x180ef8 = {
          writable: true,
          value: undefined
        };
        _0x1d5779(this, _0x4dd882, _0x180ef8);
        var _0x45ca0c = {
          writable: true,
          value: undefined
        };
        _0x1d5779(this, _0x35f6e2, _0x45ca0c);
        var _0x36ddf8 = {
          writable: true,
          value: undefined
        };
        _0x1d5779(this, _0x41489d, _0x36ddf8);
        var _0x40e7aa = {
          writable: true,
          value: undefined
        };
        _0x1d5779(this, _0x2ed724, _0x40e7aa);
        _0x235c68(this, _0x4cb80b, _0x3d2958);
        _0x235c68(this, _0x4dd882, _0x406f02);
        _0x235c68(this, _0x35f6e2, _0x422387);
        _0x235c68(this, _0x41489d, _0x4ce13d);
        _0x235c68(this, _0x2ed724, _0x254cb5(this, _0x52ddb6, _0x27149c).call(this));
      }
      _0x1c9b3d(_0x4f407a, [{
        key: "id",
        get: function _0x52a1a0() {
          return _0x484470(this, _0x4cb80b);
        }
      }, {
        key: "center",
        get: function _0x35963() {
          return _0x484470(this, _0x4dd882);
        }
      }, {
        key: "radius",
        get: function _0x38d994() {
          return _0x484470(this, _0x35f6e2);
        }
      }, {
        key: "size",
        get: function _0x183ced() {
          return _0x484470(this, _0x41489d);
        }
      }, {
        key: "update",
        value: function _0x241811(_0x4f28ca, _0x35757d, _0x101f1f) {
          _0x235c68(this, _0x4dd882, _0x4f28ca);
          _0x235c68(this, _0x35f6e2, _0x35757d);
          _0x235c68(this, _0x41489d, _0x101f1f);
          var _0x57791e = _0x43f26c(_0x254cb5(this, _0x552519, _0xb9eaa4).call(this), 2);
          var _0x11be30 = _0x57791e[0];
          var _0xba004e = _0x57791e[1];
          SetBlipColour(_0x484470(this, _0x2ed724), _0x11be30);
          SetBlipAlpha(_0x484470(this, _0x2ed724), _0xba004e);
        }
      }, {
        key: "toJSON",
        value: function _0x389883() {
          var _0x5098ee = {
            id: this.id,
            center: this.center,
            radius: this.radius,
            size: this.size
          };
          return _0x5098ee;
        }
      }, {
        key: "destroy",
        value: function _0x39fa3f() {
          RemoveBlip(_0x484470(this, _0x2ed724));
        }
      }]);
      return _0x4f407a;
    }();
    function _0x27149c() {
      var _0x38c68e = AddBlipForRadius(_0x484470(this, _0x4dd882).x, _0x484470(this, _0x4dd882).y, _0x484470(this, _0x4dd882).z, _0x484470(this, _0x35f6e2));
      var _0x3735eb = _0x43f26c(_0x254cb5(this, _0x552519, _0xb9eaa4).call(this), 2);
      var _0x287b42 = _0x3735eb[0];
      var _0x5edeb2 = _0x3735eb[1];
      SetBlipColour(_0x38c68e, _0x287b42);
      SetBlipAlpha(_0x38c68e, _0x5edeb2);
      return _0x38c68e;
    }
    function _0xb9eaa4() {
      if (this.size >= 50) {
        return [1, 150];
      } else if (this.size >= 25) {
        return [47, 125];
      } else if (this.size >= 10) {
        return [33, 100];
      } else if (this.size >= 3) {
        return [2, 75];
      } else {
        return [2, 0];
      }
    }
    ;
    function _0x3bfa33(_0x2472e1, _0x5873ae) {
      if (_0x5873ae == null || _0x5873ae > _0x2472e1.length) {
        _0x5873ae = _0x2472e1.length;
      }
      for (var _0x3f8eaf = 0, _0x39412e = new Array(_0x5873ae); _0x3f8eaf < _0x5873ae; _0x3f8eaf++) {
        _0x39412e[_0x3f8eaf] = _0x2472e1[_0x3f8eaf];
      }
      return _0x39412e;
    }
    function _0x5abcfb(_0x2a0747) {
      if (Array.isArray(_0x2a0747)) {
        return _0x2a0747;
      }
    }
    function _0x128254(_0x3915c1, _0x1e1746, _0x407d42, _0xe70d68, _0x12668f, _0x519bab, _0x3993b5) {
      try {
        var _0x54e2d2 = _0x3915c1[_0x519bab](_0x3993b5);
        var _0x57912e = _0x54e2d2.value;
      } catch (_0x1f9895) {
        _0x407d42(_0x1f9895);
        return;
      }
      if (_0x54e2d2.done) {
        _0x1e1746(_0x57912e);
      } else {
        Promise.resolve(_0x57912e).then(_0xe70d68, _0x12668f);
      }
    }
    function _0x53ae81(_0x57d782) {
      return function () {
        var _0x329055 = this;
        var _0x1c57fe = arguments;
        return new Promise(function (_0x34544c, _0x5ea2e6) {
          var _0x9ac4b3 = _0x57d782.apply(_0x329055, _0x1c57fe);
          function _0x1893a9(_0x2335f1) {
            _0x128254(_0x9ac4b3, _0x34544c, _0x5ea2e6, _0x1893a9, _0x4f894a, "next", _0x2335f1);
          }
          function _0x4f894a(_0x25adee) {
            _0x128254(_0x9ac4b3, _0x34544c, _0x5ea2e6, _0x1893a9, _0x4f894a, "throw", _0x25adee);
          }
          _0x1893a9(undefined);
        });
      };
    }
    function _0x4034c6(_0x30c997, _0x2bc227) {
      var _0x2d7f0b = _0x30c997 == null ? null : typeof Symbol !== "undefined" && _0x30c997[Symbol.iterator] || _0x30c997["@@iterator"];
      if (_0x2d7f0b == null) {
        return;
      }
      var _0x2c3916 = [];
      var _0x2bf5e0 = true;
      var _0xc8f245 = false;
      var _0xeca6ce;
      var _0x5aca31;
      try {
        for (_0x2d7f0b = _0x2d7f0b.call(_0x30c997); !(_0x2bf5e0 = (_0xeca6ce = _0x2d7f0b.next()).done); _0x2bf5e0 = true) {
          _0x2c3916.push(_0xeca6ce.value);
          if (_0x2bc227 && _0x2c3916.length === _0x2bc227) {
            break;
          }
        }
      } catch (_0x451f86) {
        _0xc8f245 = true;
        _0x5aca31 = _0x451f86;
      } finally {
        try {
          if (!_0x2bf5e0 && _0x2d7f0b.return != null) {
            _0x2d7f0b.return();
          }
        } finally {
          if (_0xc8f245) {
            throw _0x5aca31;
          }
        }
      }
      return _0x2c3916;
    }
    function _0x49aed1() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x139cde(_0x11a79f, _0x953fd6) {
      return _0x5abcfb(_0x11a79f) || _0x4034c6(_0x11a79f, _0x953fd6) || _0x2aca03(_0x11a79f, _0x953fd6) || _0x49aed1();
    }
    function _0x2aca03(_0x32ff54, _0xfebd5) {
      if (!_0x32ff54) {
        return;
      }
      if (typeof _0x32ff54 === "string") {
        return _0x3bfa33(_0x32ff54, _0xfebd5);
      }
      var _0x2a340e = Object.prototype.toString.call(_0x32ff54).slice(8, -1);
      if (_0x2a340e === "Object" && _0x32ff54.constructor) {
        _0x2a340e = _0x32ff54.constructor.name;
      }
      if (_0x2a340e === "Map" || _0x2a340e === "Set") {
        return Array.from(_0x2a340e);
      }
      if (_0x2a340e === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x2a340e)) {
        return _0x3bfa33(_0x32ff54, _0xfebd5);
      }
    }
    function _0x31752d(_0x5249b0, _0x48c63a) {
      var _0x6e179b;
      var _0x5cc7ac;
      var _0x103182;
      var _0x3d8e69;
      var _0x3e70d8 = {
        label: 0,
        sent: function () {
          if (_0x103182[0] & 1) {
            throw _0x103182[1];
          }
          return _0x103182[1];
        },
        trys: [],
        ops: []
      };
      _0x3d8e69 = {
        next: _0x1e9166(0),
        throw: _0x1e9166(1),
        return: _0x1e9166(2)
      };
      if (typeof Symbol === "function") {
        _0x3d8e69[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3d8e69;
      function _0x1e9166(_0x1f7e65) {
        return function (_0x10ac60) {
          return _0x42d834([_0x1f7e65, _0x10ac60]);
        };
      }
      function _0x42d834(_0x8faf06) {
        if (_0x6e179b) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3e70d8) {
          try {
            _0x6e179b = 1;
            if (_0x5cc7ac && (_0x103182 = _0x8faf06[0] & 2 ? _0x5cc7ac.return : _0x8faf06[0] ? _0x5cc7ac.throw || ((_0x103182 = _0x5cc7ac.return) && _0x103182.call(_0x5cc7ac), 0) : _0x5cc7ac.next) && !(_0x103182 = _0x103182.call(_0x5cc7ac, _0x8faf06[1])).done) {
              return _0x103182;
            }
            _0x5cc7ac = 0;
            if (_0x103182) {
              _0x8faf06 = [_0x8faf06[0] & 2, _0x103182.value];
            }
            switch (_0x8faf06[0]) {
              case 0:
              case 1:
                _0x103182 = _0x8faf06;
                break;
              case 4:
                _0x3e70d8.label++;
                var _0x56f405 = {
                  value: _0x8faf06[1],
                  done: false
                };
                return _0x56f405;
              case 5:
                _0x3e70d8.label++;
                _0x5cc7ac = _0x8faf06[1];
                _0x8faf06 = [0];
                continue;
              case 7:
                _0x8faf06 = _0x3e70d8.ops.pop();
                _0x3e70d8.trys.pop();
                continue;
              default:
                if (!(_0x103182 = _0x3e70d8.trys, _0x103182 = _0x103182.length > 0 && _0x103182[_0x103182.length - 1]) && (_0x8faf06[0] === 6 || _0x8faf06[0] === 2)) {
                  _0x3e70d8 = 0;
                  continue;
                }
                if (_0x8faf06[0] === 3 && (!_0x103182 || _0x8faf06[1] > _0x103182[0] && _0x8faf06[1] < _0x103182[3])) {
                  _0x3e70d8.label = _0x8faf06[1];
                  break;
                }
                if (_0x8faf06[0] === 6 && _0x3e70d8.label < _0x103182[1]) {
                  _0x3e70d8.label = _0x103182[1];
                  _0x103182 = _0x8faf06;
                  break;
                }
                if (_0x103182 && _0x3e70d8.label < _0x103182[2]) {
                  _0x3e70d8.label = _0x103182[2];
                  _0x3e70d8.ops.push(_0x8faf06);
                  break;
                }
                if (_0x103182[2]) {
                  _0x3e70d8.ops.pop();
                }
                _0x3e70d8.trys.pop();
                continue;
            }
            _0x8faf06 = _0x48c63a.call(_0x5249b0, _0x3e70d8);
          } catch (_0x502c8f) {
            _0x8faf06 = [6, _0x502c8f];
            _0x5cc7ac = 0;
          } finally {
            _0x6e179b = _0x103182 = 0;
          }
        }
        if (_0x8faf06[0] & 5) {
          throw _0x8faf06[1];
        }
        var _0xedddbb = {
          value: _0x8faf06[0] ? _0x8faf06[1] : undefined,
          done: true
        };
        return _0xedddbb;
      }
    }
    var _0x462b62 = new Map();
    onNet("np-jobs:jobChanged", function () {
      var _0x1e1837 = _0x53ae81(function (_0x4339ea) {
        var _0x2333cb;
        return _0x31752d(this, function (_0x3ceffa) {
          _0x2333cb = _0x4339ea === "sanitation_worker";
          if (_0x2333cb) {
            _0x1662b5();
          } else {
            _0x1795fd();
          }
          return [2];
        });
      });
      return function (_0x3b26d0) {
        return _0x1e1837.apply(this, arguments);
      };
    }());
    function _0x1662b5() {
      return _0x6a5094.apply(this, arguments);
    }
    function _0x6a5094() {
      _0x6a5094 = _0x53ae81(function () {
        var _0x21bed3;
        var _0x2327c8;
        var _0x4b237d;
        var _0x263e4f;
        var _0x5764d8;
        var _0x555979;
        var _0x2f08c7;
        var _0x3da05d;
        var _0x33ced3;
        return _0x31752d(this, function (_0x3077d8) {
          switch (_0x3077d8.label) {
            case 0:
              return [4, _0x11a862.execute("np-jobs:sanitation:getZones")];
            case 1:
              _0x21bed3 = _0x3077d8.sent();
              _0x2327c8 = true;
              _0x4b237d = false;
              _0x263e4f = undefined;
              try {
                for (_0x5764d8 = _0x21bed3[Symbol.iterator](); !(_0x2327c8 = (_0x555979 = _0x5764d8.next()).done); _0x2327c8 = true) {
                  _0x2f08c7 = _0x555979.value;
                  _0x3da05d = new _0x26b14d(_0x2f08c7.center.x, _0x2f08c7.center.y, _0x2f08c7.center.z);
                  _0x33ced3 = new _0x98e17f(_0x2f08c7.id, _0x3da05d, _0x2f08c7.radius, _0x2f08c7.size);
                  _0x462b62.set(_0x2f08c7.id, _0x33ced3);
                }
              } catch (_0x2132f3) {
                _0x4b237d = true;
                _0x263e4f = _0x2132f3;
              } finally {
                try {
                  if (!_0x2327c8 && _0x5764d8.return != null) {
                    _0x5764d8.return();
                  }
                } finally {
                  if (_0x4b237d) {
                    throw _0x263e4f;
                  }
                }
              }
              return [2];
          }
        });
      });
      return _0x6a5094.apply(this, arguments);
    }
    function _0x1795fd() {
      return _0x3bf3ce.apply(this, arguments);
    }
    function _0x3bf3ce() {
      _0x3bf3ce = _0x53ae81(function () {
        var _0x539e67;
        var _0x33b956;
        var _0x1578e3;
        var _0x50dc0d;
        var _0x297439;
        var _0xad8f0c;
        var _0x5c99c6;
        var _0x2724d2;
        return _0x31752d(this, function (_0x43829b) {
          _0x539e67 = true;
          _0x33b956 = false;
          _0x1578e3 = undefined;
          try {
            for (_0x50dc0d = _0x462b62[Symbol.iterator](); !(_0x539e67 = (_0x297439 = _0x50dc0d.next()).done); _0x539e67 = true) {
              _0xad8f0c = _0x139cde(_0x297439.value, 2);
              _0x5c99c6 = _0xad8f0c[0];
              _0x2724d2 = _0xad8f0c[1];
              _0x2724d2.destroy();
              _0x462b62.delete(_0x5c99c6);
            }
          } catch (_0x2836f6) {
            _0x33b956 = true;
            _0x1578e3 = _0x2836f6;
          } finally {
            try {
              if (!_0x539e67 && _0x50dc0d.return != null) {
                _0x50dc0d.return();
              }
            } finally {
              if (_0x33b956) {
                throw _0x1578e3;
              }
            }
          }
          return [2];
        });
      });
      return _0x3bf3ce.apply(this, arguments);
    }
    function _0x2c8ab2(_0xd0fdd9) {
      return _0x462b62.get(_0xd0fdd9);
    }
    _0x10598b.onNet("np-jobs:sanitation:zone:update", function (_0x15ea5f, _0x268a16, _0x32ad8e, _0x1efd46) {
      var _0x1b23cd = _0x2c8ab2(_0x15ea5f);
      if (!_0x1b23cd) {
        return;
      }
      _0x1b23cd.update(_0x268a16, _0x32ad8e, _0x1efd46);
    });
    ;
    var _0x376dd0 = false;
    on("wounds:changeDeathState", function (_0x4ee762) {
      _0x376dd0 = _0x4ee762;
    });
    ;
    function _0x562f6a(_0x4bfcab, _0x317893, _0x5bd5c6, _0x277928, _0x2fea88, _0x11713d, _0x32321c) {
      try {
        var _0x204a1c = _0x4bfcab[_0x11713d](_0x32321c);
        var _0x2e8ad = _0x204a1c.value;
      } catch (_0x1abf61) {
        _0x5bd5c6(_0x1abf61);
        return;
      }
      if (_0x204a1c.done) {
        _0x317893(_0x2e8ad);
      } else {
        Promise.resolve(_0x2e8ad).then(_0x277928, _0x2fea88);
      }
    }
    function _0x58d490(_0x37bd61) {
      return function () {
        var _0x11462f = this;
        var _0x381e4e = arguments;
        return new Promise(function (_0x52fe38, _0x3c1d1c) {
          var _0x3f3b35 = _0x37bd61.apply(_0x11462f, _0x381e4e);
          function _0x81e9d1(_0x5d2349) {
            _0x562f6a(_0x3f3b35, _0x52fe38, _0x3c1d1c, _0x81e9d1, _0x22da9c, "next", _0x5d2349);
          }
          function _0x22da9c(_0x19820c) {
            _0x562f6a(_0x3f3b35, _0x52fe38, _0x3c1d1c, _0x81e9d1, _0x22da9c, "throw", _0x19820c);
          }
          _0x81e9d1(undefined);
        });
      };
    }
    function _0x3699ae(_0xe31e3e, _0x59fe09) {
      var _0x23aca3;
      var _0x4b2f57;
      var _0x561692;
      var _0x32fe77;
      var _0x4b95b0 = {
        label: 0,
        sent: function () {
          if (_0x561692[0] & 1) {
            throw _0x561692[1];
          }
          return _0x561692[1];
        },
        trys: [],
        ops: []
      };
      _0x32fe77 = {
        next: _0x1dc981(0),
        throw: _0x1dc981(1),
        return: _0x1dc981(2)
      };
      if (typeof Symbol === "function") {
        _0x32fe77[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x32fe77;
      function _0x1dc981(_0xd99e61) {
        return function (_0x33ce3) {
          return _0x4179ef([_0xd99e61, _0x33ce3]);
        };
      }
      function _0x4179ef(_0x361c77) {
        if (_0x23aca3) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4b95b0) {
          try {
            _0x23aca3 = 1;
            if (_0x4b2f57 && (_0x561692 = _0x361c77[0] & 2 ? _0x4b2f57.return : _0x361c77[0] ? _0x4b2f57.throw || ((_0x561692 = _0x4b2f57.return) && _0x561692.call(_0x4b2f57), 0) : _0x4b2f57.next) && !(_0x561692 = _0x561692.call(_0x4b2f57, _0x361c77[1])).done) {
              return _0x561692;
            }
            _0x4b2f57 = 0;
            if (_0x561692) {
              _0x361c77 = [_0x361c77[0] & 2, _0x561692.value];
            }
            switch (_0x361c77[0]) {
              case 0:
              case 1:
                _0x561692 = _0x361c77;
                break;
              case 4:
                _0x4b95b0.label++;
                var _0x53a965 = {
                  value: _0x361c77[1],
                  done: false
                };
                return _0x53a965;
              case 5:
                _0x4b95b0.label++;
                _0x4b2f57 = _0x361c77[1];
                _0x361c77 = [0];
                continue;
              case 7:
                _0x361c77 = _0x4b95b0.ops.pop();
                _0x4b95b0.trys.pop();
                continue;
              default:
                if (!(_0x561692 = _0x4b95b0.trys, _0x561692 = _0x561692.length > 0 && _0x561692[_0x561692.length - 1]) && (_0x361c77[0] === 6 || _0x361c77[0] === 2)) {
                  _0x4b95b0 = 0;
                  continue;
                }
                if (_0x361c77[0] === 3 && (!_0x561692 || _0x361c77[1] > _0x561692[0] && _0x361c77[1] < _0x561692[3])) {
                  _0x4b95b0.label = _0x361c77[1];
                  break;
                }
                if (_0x361c77[0] === 6 && _0x4b95b0.label < _0x561692[1]) {
                  _0x4b95b0.label = _0x561692[1];
                  _0x561692 = _0x361c77;
                  break;
                }
                if (_0x561692 && _0x4b95b0.label < _0x561692[2]) {
                  _0x4b95b0.label = _0x561692[2];
                  _0x4b95b0.ops.push(_0x361c77);
                  break;
                }
                if (_0x561692[2]) {
                  _0x4b95b0.ops.pop();
                }
                _0x4b95b0.trys.pop();
                continue;
            }
            _0x361c77 = _0x59fe09.call(_0xe31e3e, _0x4b95b0);
          } catch (_0x48bcd8) {
            _0x361c77 = [6, _0x48bcd8];
            _0x4b2f57 = 0;
          } finally {
            _0x23aca3 = _0x561692 = 0;
          }
        }
        if (_0x361c77[0] & 5) {
          throw _0x361c77[1];
        }
        var _0x18539f = {
          value: _0x361c77[0] ? _0x361c77[1] : undefined,
          done: true
        };
        return _0x18539f;
      }
    }
    var _0x5e239a = false;
    var _0x5ad186 = null;
    function _0x30e65d(_0x5bb059) {
      return _0x169a34.apply(this, arguments);
    }
    function _0x169a34() {
      _0x169a34 = _0x58d490(function (_0x208658) {
        var _0x2ba10d;
        var _0x7e28e8;
        var _0x55dff9;
        var _0x112d10;
        var _0xe93d65;
        return _0x3699ae(this, function (_0x337072) {
          switch (_0x337072.label) {
            case 0:
              _0x2ba10d = PlayerPedId();
              _0x7e28e8 = "anim@heists@narcotics@trash";
              _0x55dff9 = "walk";
              _0x5e239a = true;
              _0x5ad186 = _0x208658;
              return [4, _0x5cb85b.loadAnim(_0x7e28e8)];
            case 1:
              _0x112d10 = _0x337072.sent();
              if (!_0x112d10) {
                _0x5e239a = false;
                return [2];
              }
              emit("attachItem", "trashbag");
              _0xe93d65 = setTick(function () {
                if (!_0x5e239a) {
                  StopAnimTask(_0x2ba10d, _0x7e28e8, _0x55dff9, 3);
                  return clearTick(_0xe93d65);
                }
                if (!IsEntityPlayingAnim(_0x2ba10d, _0x7e28e8, _0x55dff9, 3)) {
                  TaskPlayAnim(_0x2ba10d, _0x7e28e8, _0x55dff9, 8, 0, -1, 48, 0, false, false, false);
                }
                if (IsControlJustReleased(0, _0x1f76dd.ESC) || _0x376dd0) {
                  return _0x1b8b6e();
                }
              });
              return [2];
          }
        });
      });
      return _0x169a34.apply(this, arguments);
    }
    function _0x1b8b6e() {
      _0x5e239a = false;
      _0x5ad186 = null;
      emit("destroyProp");
      ClearPedTasksImmediately(PlayerPedId());
    }
    function _0x365346() {
      return _0x3e369a.apply(this, arguments);
    }
    function _0x3e369a() {
      _0x3e369a = _0x58d490(function () {
        var _0x45466f;
        var _0x3b6922;
        var _0x3effeb;
        var _0x4d9dd0;
        var _0x554ed9;
        return _0x3699ae(this, function (_0x269cc2) {
          switch (_0x269cc2.label) {
            case 0:
              _0x45466f = PlayerPedId();
              _0x3b6922 = "anim@heists@narcotics@trash";
              _0x3effeb = "throw_b";
              _0x4d9dd0 = 800;
              return [4, _0x5cb85b.loadAnim(_0x3b6922)];
            case 1:
              _0x554ed9 = _0x269cc2.sent();
              if (!_0x554ed9) {
                return [2];
              }
              _0x5e239a = false;
              if (!IsEntityPlayingAnim(_0x45466f, _0x3b6922, _0x3effeb, 3)) {
                TaskPlayAnim(_0x45466f, _0x3b6922, _0x3effeb, 8, 0, _0x4d9dd0, 48, 0, false, false, false);
              }
              return [4, _0x5d5475.wait(_0x4d9dd0)];
            case 2:
              _0x269cc2.sent();
              StopAnimTask(_0x45466f, _0x3b6922, _0x3effeb, 3);
              emit("destroyProp");
              ClearPedTasks(_0x45466f);
              _0x5ad186 = null;
              return [2];
          }
        });
      });
      return _0x3e369a.apply(this, arguments);
    }
    ;
    function _0x4831b8(_0x30fef0, _0x33a3c0, _0x244e86) {
      if (_0x33a3c0 in _0x30fef0) {
        var _0x464e5f = {
          value: _0x244e86,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x30fef0, _0x33a3c0, _0x464e5f);
      } else {
        _0x30fef0[_0x33a3c0] = _0x244e86;
      }
      return _0x30fef0;
    }
    var _0x9633e6 = _0x4831b8({}, GetHashKey("trash"), [{
      position: new _0x36b213(-0.6, -5.2, 0.4),
      rotation: new _0x36b213(-25.5, 0, 0)
    }, {
      position: new _0x36b213(0, -5.2, 0.4),
      rotation: new _0x36b213(-25.5, 0, 0)
    }, {
      position: new _0x36b213(0.6, -5.2, 0.4),
      rotation: new _0x36b213(-25.5, 0, 0)
    }]);
    var _0x1d50c4 = _0x4831b8({}, "prop_cs_street_binbag_01", _0x9633e6);
    ;
    function _0x36f9cc(_0x1265af, _0x30b8ff) {
      if (_0x30b8ff == null || _0x30b8ff > _0x1265af.length) {
        _0x30b8ff = _0x1265af.length;
      }
      for (var _0x3b1a07 = 0, _0x1a1d89 = new Array(_0x30b8ff); _0x3b1a07 < _0x30b8ff; _0x3b1a07++) {
        _0x1a1d89[_0x3b1a07] = _0x1265af[_0x3b1a07];
      }
      return _0x1a1d89;
    }
    function _0x1d86e9(_0x3dd868) {
      if (Array.isArray(_0x3dd868)) {
        return _0x3dd868;
      }
    }
    function _0xce9a4f(_0x50b611, _0x483705, _0x10583e, _0x43c3db, _0x2b3b99, _0x365ec6, _0x13bb9f) {
      try {
        var _0x10800c = _0x50b611[_0x365ec6](_0x13bb9f);
        var _0x455deb = _0x10800c.value;
      } catch (_0xd6cf30) {
        _0x10583e(_0xd6cf30);
        return;
      }
      if (_0x10800c.done) {
        _0x483705(_0x455deb);
      } else {
        Promise.resolve(_0x455deb).then(_0x43c3db, _0x2b3b99);
      }
    }
    function _0x12a62d(_0x2af67c) {
      return function () {
        var _0x589000 = this;
        var _0x2d4333 = arguments;
        return new Promise(function (_0x3a87cf, _0x557489) {
          var _0x57b5c9 = _0x2af67c.apply(_0x589000, _0x2d4333);
          function _0x2a614e(_0x3843a1) {
            _0xce9a4f(_0x57b5c9, _0x3a87cf, _0x557489, _0x2a614e, _0x1fb7fb, "next", _0x3843a1);
          }
          function _0x1fb7fb(_0x2d7f78) {
            _0xce9a4f(_0x57b5c9, _0x3a87cf, _0x557489, _0x2a614e, _0x1fb7fb, "throw", _0x2d7f78);
          }
          _0x2a614e(undefined);
        });
      };
    }
    function _0x2d57ec(_0x1848ff, _0x4ebaae) {
      var _0x52d09a = _0x1848ff == null ? null : typeof Symbol !== "undefined" && _0x1848ff[Symbol.iterator] || _0x1848ff["@@iterator"];
      if (_0x52d09a == null) {
        return;
      }
      var _0x307811 = [];
      var _0x183b31 = true;
      var _0x5e9012 = false;
      var _0x2b5466;
      var _0x102d34;
      try {
        for (_0x52d09a = _0x52d09a.call(_0x1848ff); !(_0x183b31 = (_0x2b5466 = _0x52d09a.next()).done); _0x183b31 = true) {
          _0x307811.push(_0x2b5466.value);
          if (_0x4ebaae && _0x307811.length === _0x4ebaae) {
            break;
          }
        }
      } catch (_0x2e10c7) {
        _0x5e9012 = true;
        _0x102d34 = _0x2e10c7;
      } finally {
        try {
          if (!_0x183b31 && _0x52d09a.return != null) {
            _0x52d09a.return();
          }
        } finally {
          if (_0x5e9012) {
            throw _0x102d34;
          }
        }
      }
      return _0x307811;
    }
    function _0x44368b() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x57d0b1(_0x42f440, _0x103354) {
      return _0x1d86e9(_0x42f440) || _0x2d57ec(_0x42f440, _0x103354) || _0x29ed49(_0x42f440, _0x103354) || _0x44368b();
    }
    function _0x29ed49(_0xbe2219, _0x556b29) {
      if (!_0xbe2219) {
        return;
      }
      if (typeof _0xbe2219 === "string") {
        return _0x36f9cc(_0xbe2219, _0x556b29);
      }
      var _0x42abcf = Object.prototype.toString.call(_0xbe2219).slice(8, -1);
      if (_0x42abcf === "Object" && _0xbe2219.constructor) {
        _0x42abcf = _0xbe2219.constructor.name;
      }
      if (_0x42abcf === "Map" || _0x42abcf === "Set") {
        return Array.from(_0x42abcf);
      }
      if (_0x42abcf === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x42abcf)) {
        return _0x36f9cc(_0xbe2219, _0x556b29);
      }
    }
    function _0x4b99ca(_0x187af7, _0x37d9ca) {
      var _0x439096;
      var _0x3c8bad;
      var _0x595792;
      var _0x1b3f76;
      var _0x537909 = {
        label: 0,
        sent: function () {
          if (_0x595792[0] & 1) {
            throw _0x595792[1];
          }
          return _0x595792[1];
        },
        trys: [],
        ops: []
      };
      _0x1b3f76 = {
        next: _0x5760b3(0),
        throw: _0x5760b3(1),
        return: _0x5760b3(2)
      };
      if (typeof Symbol === "function") {
        _0x1b3f76[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1b3f76;
      function _0x5760b3(_0x30da3d) {
        return function (_0x1e935a) {
          return _0x4e4a10([_0x30da3d, _0x1e935a]);
        };
      }
      function _0x4e4a10(_0x3b6bb5) {
        if (_0x439096) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x537909) {
          try {
            _0x439096 = 1;
            if (_0x3c8bad && (_0x595792 = _0x3b6bb5[0] & 2 ? _0x3c8bad.return : _0x3b6bb5[0] ? _0x3c8bad.throw || ((_0x595792 = _0x3c8bad.return) && _0x595792.call(_0x3c8bad), 0) : _0x3c8bad.next) && !(_0x595792 = _0x595792.call(_0x3c8bad, _0x3b6bb5[1])).done) {
              return _0x595792;
            }
            _0x3c8bad = 0;
            if (_0x595792) {
              _0x3b6bb5 = [_0x3b6bb5[0] & 2, _0x595792.value];
            }
            switch (_0x3b6bb5[0]) {
              case 0:
              case 1:
                _0x595792 = _0x3b6bb5;
                break;
              case 4:
                _0x537909.label++;
                var _0x344df1 = {
                  value: _0x3b6bb5[1],
                  done: false
                };
                return _0x344df1;
              case 5:
                _0x537909.label++;
                _0x3c8bad = _0x3b6bb5[1];
                _0x3b6bb5 = [0];
                continue;
              case 7:
                _0x3b6bb5 = _0x537909.ops.pop();
                _0x537909.trys.pop();
                continue;
              default:
                if (!(_0x595792 = _0x537909.trys, _0x595792 = _0x595792.length > 0 && _0x595792[_0x595792.length - 1]) && (_0x3b6bb5[0] === 6 || _0x3b6bb5[0] === 2)) {
                  _0x537909 = 0;
                  continue;
                }
                if (_0x3b6bb5[0] === 3 && (!_0x595792 || _0x3b6bb5[1] > _0x595792[0] && _0x3b6bb5[1] < _0x595792[3])) {
                  _0x537909.label = _0x3b6bb5[1];
                  break;
                }
                if (_0x3b6bb5[0] === 6 && _0x537909.label < _0x595792[1]) {
                  _0x537909.label = _0x595792[1];
                  _0x595792 = _0x3b6bb5;
                  break;
                }
                if (_0x595792 && _0x537909.label < _0x595792[2]) {
                  _0x537909.label = _0x595792[2];
                  _0x537909.ops.push(_0x3b6bb5);
                  break;
                }
                if (_0x595792[2]) {
                  _0x537909.ops.pop();
                }
                _0x537909.trys.pop();
                continue;
            }
            _0x3b6bb5 = _0x37d9ca.call(_0x187af7, _0x537909);
          } catch (_0x3e5094) {
            _0x3b6bb5 = [6, _0x3e5094];
            _0x3c8bad = 0;
          } finally {
            _0x439096 = _0x595792 = 0;
          }
        }
        if (_0x3b6bb5[0] & 5) {
          throw _0x3b6bb5[1];
        }
        var _0x417761 = {
          value: _0x3b6bb5[0] ? _0x3b6bb5[1] : undefined,
          done: true
        };
        return _0x417761;
      }
    }
    var _0x384c35 = new Map();
    var _0x35cfbb;
    function _0x1c239b(_0x4d48d1, _0x4490a8) {
      var _0x3cd55d = _0x384c35.get(_0x4d48d1);
      if (!_0x3cd55d) {
        return;
      }
      var _0x16d186 = true;
      var _0x7f3b62 = false;
      var _0x298000 = undefined;
      try {
        for (var _0x4e9cb2 = _0x3cd55d[Symbol.iterator](), _0x34e568; !(_0x16d186 = (_0x34e568 = _0x4e9cb2.next()).done); _0x16d186 = true) {
          var _0x541c81 = _0x57d0b1(_0x34e568.value, 2);
          var _0x427457 = _0x541c81[0];
          var _0x6be250 = _0x541c81[1];
          if (_0x4490a8 && _0x427457 !== _0x4490a8) {
            continue;
          }
          var _0x1cf659 = true;
          var _0x5346c5 = false;
          var _0x1b4d74 = undefined;
          try {
            for (var _0x4397f1 = _0x6be250[Symbol.iterator](), _0x19b127; !(_0x1cf659 = (_0x19b127 = _0x4397f1.next()).done); _0x1cf659 = true) {
              var _0x22efa7 = _0x19b127.value;
              DeleteEntity(_0x22efa7);
            }
          } catch (_0xee3c05) {
            _0x5346c5 = true;
            _0x1b4d74 = _0xee3c05;
          } finally {
            try {
              if (!_0x1cf659 && _0x4397f1.return != null) {
                _0x4397f1.return();
              }
            } finally {
              if (_0x5346c5) {
                throw _0x1b4d74;
              }
            }
          }
          _0x3cd55d.delete(_0x427457);
        }
      } catch (_0x229097) {
        _0x7f3b62 = true;
        _0x298000 = _0x229097;
      } finally {
        try {
          if (!_0x16d186 && _0x4e9cb2.return != null) {
            _0x4e9cb2.return();
          }
        } finally {
          if (_0x7f3b62) {
            throw _0x298000;
          }
        }
      }
      if (_0x3cd55d.size === 0) {
        _0x384c35.delete(_0x4d48d1);
      }
    }
    function _0x663e5(_0x46e472, _0x4f5f9a, _0x21d4f4, _0xbe1e8, _0x53d1cc) {
      return _0x2d7a50.apply(this, arguments);
    }
    function _0x2d7a50() {
      _0x2d7a50 = _0x12a62d(function (_0x2d1672, _0x5ec8c2, _0x10b2a7, _0x415eae, _0x582372) {
        var _0x45e19c;
        var _0x85bfc6;
        var _0x59e3d6;
        var _0x50e262;
        var _0x44b8b3;
        var _0x1309ee;
        var _0x44366b;
        var _0x467be6;
        var _0x54f57a;
        var _0x3548b7;
        var _0x40bb18;
        var _0x44e531;
        var _0xad809c;
        return _0x4b99ca(this, function (_0x1ffd5c) {
          switch (_0x1ffd5c.label) {
            case 0:
              _0x1c239b(_0x2d1672, _0x10b2a7);
              if (_0x582372 === 0) {
                return [2, [true, null]];
              }
              _0x45e19c = _0x384c35.get(_0x2d1672) ?? new Map();
              if (!_0x384c35.has(_0x2d1672)) {
                _0x384c35.set(_0x2d1672, _0x45e19c);
              }
              _0x85bfc6 = _0x45e19c.get(_0x10b2a7) ?? [];
              if (!_0x45e19c.has(_0x10b2a7)) {
                _0x45e19c.set(_0x10b2a7, _0x85bfc6);
              }
              _0x59e3d6 = _0x1d50c4[_0x10b2a7][_0x5ec8c2];
              if (!_0x59e3d6) {
                return [2, [false, `Invalid Prop or model: ${_0x10b2a7} - ${_0x5ec8c2}`]];
              }
              _0x50e262 = NetworkGetEntityFromNetworkId(_0x2d1672);
              if (!_0x50e262) {
                return [2, [false, `Invalid entity: ${_0x2d1672}`]];
              }
              _0x44b8b3 = GetHashKey(_0x10b2a7);
              return [4, _0x5cb85b.loadModel(_0x44b8b3)];
            case 1:
              _0x1309ee = _0x1ffd5c.sent();
              if (!_0x1309ee) {
                return [2, [false, `Failed to load model: ${_0x10b2a7}`]];
              }
              _0x44366b = new _0x36b213(GetEntityCoords(_0x50e262, false));
              _0x467be6 = GetEntityBoneIndexByName(_0x50e262, _0x415eae);
              for (_0x54f57a = 0; _0x54f57a < _0x582372; _0x54f57a++) {
                if (!_0x59e3d6[_0x54f57a]) {
                  continue;
                }
                _0x3548b7 = _0x59e3d6[_0x54f57a];
                _0x40bb18 = _0x3548b7.position;
                _0x44e531 = _0x3548b7.rotation;
                _0xad809c = CreateObjectNoOffset(_0x44b8b3, _0x44366b.x, _0x44366b.y, _0x44366b.z, false, false, false);
                _0x85bfc6.push(_0xad809c);
                SetEntityCollision(_0xad809c, false, false);
                AttachEntityToEntity(_0xad809c, _0x50e262, _0x467be6, _0x40bb18.x, _0x40bb18.y, _0x40bb18.z, _0x44e531.x, _0x44e531.y, _0x44e531.z, true, true, true, false, 2, true);
              }
              if (!_0x35cfbb) {
                _0x1eaabf();
              }
              return [2, [true, null]];
          }
        });
      });
      return _0x2d7a50.apply(this, arguments);
    }
    function _0x1eaabf() {
      if (_0x35cfbb) {
        return;
      }
      _0x35cfbb = setTick(_0x12a62d(function () {
        var _0x3c2bd1;
        var _0x4aea39;
        var _0x37668f;
        var _0x620d0f;
        var _0x586e91;
        var _0x21cbec;
        var _0x3c084d;
        return _0x4b99ca(this, function (_0x57859e) {
          switch (_0x57859e.label) {
            case 0:
              if (_0x384c35.size === 0) {
                clearTick(_0x35cfbb);
                _0x35cfbb = null;
                return [2];
              }
              _0x3c2bd1 = true;
              _0x4aea39 = false;
              _0x37668f = undefined;
              try {
                for (_0x620d0f = _0x384c35[Symbol.iterator](); !(_0x3c2bd1 = (_0x586e91 = _0x620d0f.next()).done); _0x3c2bd1 = true) {
                  _0x21cbec = _0x57d0b1(_0x586e91.value, 1);
                  _0x3c084d = _0x21cbec[0];
                  if (NetworkDoesNetworkIdExist(_0x3c084d)) {
                    continue;
                  }
                  _0x1c239b(_0x3c084d);
                }
              } catch (_0xf93f3) {
                _0x4aea39 = true;
                _0x37668f = _0xf93f3;
              } finally {
                try {
                  if (!_0x3c2bd1 && _0x620d0f.return != null) {
                    _0x620d0f.return();
                  }
                } finally {
                  if (_0x4aea39) {
                    throw _0x37668f;
                  }
                }
              }
              return [4, _0x3ab810.wait(1000)];
            case 1:
              _0x57859e.sent();
              return [2];
          }
        });
      }));
    }
    on("onResourceStop", function (_0x303c44) {
      if (_0x303c44 !== GetCurrentResourceName()) {
        return;
      }
      var _0x16c53f = true;
      var _0x287afb = false;
      var _0xaa8352 = undefined;
      try {
        for (var _0x4e8364 = _0x384c35[Symbol.iterator](), _0x331a31; !(_0x16c53f = (_0x331a31 = _0x4e8364.next()).done); _0x16c53f = true) {
          var _0x422a92 = _0x57d0b1(_0x331a31.value, 1);
          var _0x2617a2 = _0x422a92[0];
          _0x1c239b(_0x2617a2);
        }
      } catch (_0x30c2a4) {
        _0x287afb = true;
        _0xaa8352 = _0x30c2a4;
      } finally {
        try {
          if (!_0x16c53f && _0x4e8364.return != null) {
            _0x4e8364.return();
          }
        } finally {
          if (_0x287afb) {
            throw _0xaa8352;
          }
        }
      }
    });
    ;
    var _0x2932e1 = ["trash", "trash2"];
    var _0x1b96e0 = _0x2932e1.map(function (_0xd212e7) {
      return GetHashKey(_0xd212e7);
    });
    var _0x41679a = ["ng_proc_binbag_01a"];
    var _0x22c799 = _0x41679a.map(function (_0x402a40) {
      return GetHashKey(_0x402a40);
    });
    var _0x2a1289 = ["prop_dumpster_01a", "prop_dumpster_02a", "prop_dumpster_02b", "prop_dumpster_3a", "prop_dumpster_4a", "prop_dumpster_4b", "prop_bin_01a", "prop_bin_14b", "prop_bin_14a", "prop_bin_08a", "prop_bin_05a", "prop_bin_07c"];
    var _0x21e57b = _0x2a1289.map(function (_0x48ec26) {
      return GetHashKey(_0x48ec26);
    });
    ;
    function _0x45311e(_0x39f59f, _0x1ebbe9) {
      if (_0x1ebbe9 == null || _0x1ebbe9 > _0x39f59f.length) {
        _0x1ebbe9 = _0x39f59f.length;
      }
      for (var _0x5b81a1 = 0, _0x282f18 = new Array(_0x1ebbe9); _0x5b81a1 < _0x1ebbe9; _0x5b81a1++) {
        _0x282f18[_0x5b81a1] = _0x39f59f[_0x5b81a1];
      }
      return _0x282f18;
    }
    function _0x477cec(_0x222e30) {
      if (Array.isArray(_0x222e30)) {
        return _0x222e30;
      }
    }
    function _0x417bb9(_0x10e823, _0x432a25) {
      var _0x8de9a6 = _0x10e823 == null ? null : typeof Symbol !== "undefined" && _0x10e823[Symbol.iterator] || _0x10e823["@@iterator"];
      if (_0x8de9a6 == null) {
        return;
      }
      var _0x544e84 = [];
      var _0x333a60 = true;
      var _0x3e2ce0 = false;
      var _0x8cb452;
      var _0x3280be;
      try {
        for (_0x8de9a6 = _0x8de9a6.call(_0x10e823); !(_0x333a60 = (_0x8cb452 = _0x8de9a6.next()).done); _0x333a60 = true) {
          _0x544e84.push(_0x8cb452.value);
          if (_0x432a25 && _0x544e84.length === _0x432a25) {
            break;
          }
        }
      } catch (_0x43e62c) {
        _0x3e2ce0 = true;
        _0x3280be = _0x43e62c;
      } finally {
        try {
          if (!_0x333a60 && _0x8de9a6.return != null) {
            _0x8de9a6.return();
          }
        } finally {
          if (_0x3e2ce0) {
            throw _0x3280be;
          }
        }
      }
      return _0x544e84;
    }
    function _0x3c9337() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x35088d(_0x593d69, _0x5df4db) {
      return _0x477cec(_0x593d69) || _0x417bb9(_0x593d69, _0x5df4db) || _0xde264a(_0x593d69, _0x5df4db) || _0x3c9337();
    }
    function _0xde264a(_0x2e5552, _0x46553d) {
      if (!_0x2e5552) {
        return;
      }
      if (typeof _0x2e5552 === "string") {
        return _0x45311e(_0x2e5552, _0x46553d);
      }
      var _0x5d885a = Object.prototype.toString.call(_0x2e5552).slice(8, -1);
      if (_0x5d885a === "Object" && _0x2e5552.constructor) {
        _0x5d885a = _0x2e5552.constructor.name;
      }
      if (_0x5d885a === "Map" || _0x5d885a === "Set") {
        return Array.from(_0x5d885a);
      }
      if (_0x5d885a === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5d885a)) {
        return _0x45311e(_0x2e5552, _0x46553d);
      }
    }
    var _0x51ad36 = null;
    var _0x52decb = [{
      bone: "wheel_lf",
      index: 0
    }, {
      bone: "wheel_rf",
      index: 1
    }, {
      bone: "wheel_lm",
      index: 2
    }, {
      bone: "wheel_rm",
      index: 3
    }, {
      bone: "wheel_lr",
      index: 4
    }, {
      bone: "wheel_rr",
      index: 5
    }, {
      bone: "wheel_lm1",
      index: 2
    }, {
      bone: "wheel_rm1",
      index: 3
    }, {
      bone: "door_dside_f",
      index: 0
    }, {
      bone: "door_pside_f",
      index: 1
    }, {
      bone: "door_dside_r",
      index: 2
    }, {
      bone: "door_pside_r",
      index: 3
    }, {
      bone: "bonnet",
      index: 4
    }, {
      bone: "boot",
      index: 5
    }];
    function _0x2c9d35(_0x5611e0) {
      return _0x52decb.find(function (_0x136042) {
        return _0x136042.bone === _0x5611e0;
      })?.index;
    }
    function _0x164b32(_0x252071) {
      var _0x579f1e = _0x35088d(GetModelDimensions(GetEntityModel(_0x252071)), 2);
      var _0x3a0419 = _0x579f1e[0];
      var _0x2e816f = _0x579f1e[1];
      return GetOffsetFromEntityInWorldCoords(_0x252071, 0, _0x2e816f[1] + 0.5, 0);
    }
    function _0x178e3e(_0x317a84) {
      var _0x29e415 = _0x35088d(GetModelDimensions(GetEntityModel(_0x317a84)), 1);
      var _0x2017b2 = _0x29e415[0];
      return GetOffsetFromEntityInWorldCoords(_0x317a84, 0, _0x2017b2[1] - 0.5, 0);
    }
    function _0x47ff90(_0x3f17b4) {
      var _0x59a7b2 = _0x178e3e(_0x3f17b4);
      var _0x4bb84b = GetBoneDistance(_0x3f17b4, 2, "engine", _0x59a7b2);
      if (_0x4bb84b <= 2) {
        return _0x59a7b2;
      }
      return _0x164b32(_0x3f17b4);
    }
    function _0x431c81() {
      return true;
    }
    on("baseevents:enteredVehicle", function (_0x1f9f9c) {
      _0x51ad36 = _0x1f9f9c;
    });
    on("baseevents:leftVehicle", function () {
      _0x51ad36 = null;
    });
    on("np-jobs:hotreload", function () {
      var _0x384abe = PlayerPedId();
      var _0x2939dd = GetVehiclePedIsIn(_0x384abe, false);
      if (!_0x2939dd) {
        return;
      }
      _0x51ad36 = _0x2939dd;
    });
    ;
    function _0x35a52c(_0x2ddbc4, _0x2d04d6) {
      if (_0x2d04d6 == null || _0x2d04d6 > _0x2ddbc4.length) {
        _0x2d04d6 = _0x2ddbc4.length;
      }
      for (var _0x5a5b9f = 0, _0x5bd2fd = new Array(_0x2d04d6); _0x5a5b9f < _0x2d04d6; _0x5a5b9f++) {
        _0x5bd2fd[_0x5a5b9f] = _0x2ddbc4[_0x5a5b9f];
      }
      return _0x5bd2fd;
    }
    function _0x51e796(_0x3c1a0c) {
      if (Array.isArray(_0x3c1a0c)) {
        return _0x3c1a0c;
      }
    }
    function _0xe05d66(_0x1453d2, _0x55d329, _0x7be3, _0x772545, _0x27f85b, _0x197685, _0x524244) {
      try {
        var _0x4cf6e9 = _0x1453d2[_0x197685](_0x524244);
        var _0x219be5 = _0x4cf6e9.value;
      } catch (_0x314739) {
        _0x7be3(_0x314739);
        return;
      }
      if (_0x4cf6e9.done) {
        _0x55d329(_0x219be5);
      } else {
        Promise.resolve(_0x219be5).then(_0x772545, _0x27f85b);
      }
    }
    function _0x4991de(_0x299981) {
      return function () {
        var _0x911b1d = this;
        var _0x196751 = arguments;
        return new Promise(function (_0x139d77, _0x247dd8) {
          var _0x36d05d = _0x299981.apply(_0x911b1d, _0x196751);
          function _0x46a744(_0x2aebc8) {
            _0xe05d66(_0x36d05d, _0x139d77, _0x247dd8, _0x46a744, _0x4a4a00, "next", _0x2aebc8);
          }
          function _0x4a4a00(_0x4862a2) {
            _0xe05d66(_0x36d05d, _0x139d77, _0x247dd8, _0x46a744, _0x4a4a00, "throw", _0x4862a2);
          }
          _0x46a744(undefined);
        });
      };
    }
    function _0x59649a(_0x8b91d0, _0x2de066) {
      var _0x402585 = _0x8b91d0 == null ? null : typeof Symbol !== "undefined" && _0x8b91d0[Symbol.iterator] || _0x8b91d0["@@iterator"];
      if (_0x402585 == null) {
        return;
      }
      var _0x47440e = [];
      var _0x199e0f = true;
      var _0x4c1ca9 = false;
      var _0x363b24;
      var _0x49568f;
      try {
        for (_0x402585 = _0x402585.call(_0x8b91d0); !(_0x199e0f = (_0x363b24 = _0x402585.next()).done); _0x199e0f = true) {
          _0x47440e.push(_0x363b24.value);
          if (_0x2de066 && _0x47440e.length === _0x2de066) {
            break;
          }
        }
      } catch (_0x2cb086) {
        _0x4c1ca9 = true;
        _0x49568f = _0x2cb086;
      } finally {
        try {
          if (!_0x199e0f && _0x402585.return != null) {
            _0x402585.return();
          }
        } finally {
          if (_0x4c1ca9) {
            throw _0x49568f;
          }
        }
      }
      return _0x47440e;
    }
    function _0x2c9446() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x566e80(_0x2061e4, _0x592603) {
      return _0x51e796(_0x2061e4) || _0x59649a(_0x2061e4, _0x592603) || _0x3bdd63(_0x2061e4, _0x592603) || _0x2c9446();
    }
    function _0x3bdd63(_0x3e6f40, _0x280c1d) {
      if (!_0x3e6f40) {
        return;
      }
      if (typeof _0x3e6f40 === "string") {
        return _0x35a52c(_0x3e6f40, _0x280c1d);
      }
      var _0x37966f = Object.prototype.toString.call(_0x3e6f40).slice(8, -1);
      if (_0x37966f === "Object" && _0x3e6f40.constructor) {
        _0x37966f = _0x3e6f40.constructor.name;
      }
      if (_0x37966f === "Map" || _0x37966f === "Set") {
        return Array.from(_0x37966f);
      }
      if (_0x37966f === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x37966f)) {
        return _0x35a52c(_0x3e6f40, _0x280c1d);
      }
    }
    function _0x5598fb(_0x4f2d8c, _0x828c8d) {
      var _0x1b371a;
      var _0x4b8a3d;
      var _0x1ff912;
      var _0x2a5d49;
      var _0x3083c1 = {
        label: 0,
        sent: function () {
          if (_0x1ff912[0] & 1) {
            throw _0x1ff912[1];
          }
          return _0x1ff912[1];
        },
        trys: [],
        ops: []
      };
      _0x2a5d49 = {
        next: _0x422393(0),
        throw: _0x422393(1),
        return: _0x422393(2)
      };
      if (typeof Symbol === "function") {
        _0x2a5d49[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2a5d49;
      function _0x422393(_0x3ee800) {
        return function (_0x398c4b) {
          return _0x1013ae([_0x3ee800, _0x398c4b]);
        };
      }
      function _0x1013ae(_0x2d7eca) {
        if (_0x1b371a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3083c1) {
          try {
            _0x1b371a = 1;
            if (_0x4b8a3d && (_0x1ff912 = _0x2d7eca[0] & 2 ? _0x4b8a3d.return : _0x2d7eca[0] ? _0x4b8a3d.throw || ((_0x1ff912 = _0x4b8a3d.return) && _0x1ff912.call(_0x4b8a3d), 0) : _0x4b8a3d.next) && !(_0x1ff912 = _0x1ff912.call(_0x4b8a3d, _0x2d7eca[1])).done) {
              return _0x1ff912;
            }
            _0x4b8a3d = 0;
            if (_0x1ff912) {
              _0x2d7eca = [_0x2d7eca[0] & 2, _0x1ff912.value];
            }
            switch (_0x2d7eca[0]) {
              case 0:
              case 1:
                _0x1ff912 = _0x2d7eca;
                break;
              case 4:
                _0x3083c1.label++;
                var _0x59dd52 = {
                  value: _0x2d7eca[1],
                  done: false
                };
                return _0x59dd52;
              case 5:
                _0x3083c1.label++;
                _0x4b8a3d = _0x2d7eca[1];
                _0x2d7eca = [0];
                continue;
              case 7:
                _0x2d7eca = _0x3083c1.ops.pop();
                _0x3083c1.trys.pop();
                continue;
              default:
                if (!(_0x1ff912 = _0x3083c1.trys, _0x1ff912 = _0x1ff912.length > 0 && _0x1ff912[_0x1ff912.length - 1]) && (_0x2d7eca[0] === 6 || _0x2d7eca[0] === 2)) {
                  _0x3083c1 = 0;
                  continue;
                }
                if (_0x2d7eca[0] === 3 && (!_0x1ff912 || _0x2d7eca[1] > _0x1ff912[0] && _0x2d7eca[1] < _0x1ff912[3])) {
                  _0x3083c1.label = _0x2d7eca[1];
                  break;
                }
                if (_0x2d7eca[0] === 6 && _0x3083c1.label < _0x1ff912[1]) {
                  _0x3083c1.label = _0x1ff912[1];
                  _0x1ff912 = _0x2d7eca;
                  break;
                }
                if (_0x1ff912 && _0x3083c1.label < _0x1ff912[2]) {
                  _0x3083c1.label = _0x1ff912[2];
                  _0x3083c1.ops.push(_0x2d7eca);
                  break;
                }
                if (_0x1ff912[2]) {
                  _0x3083c1.ops.pop();
                }
                _0x3083c1.trys.pop();
                continue;
            }
            _0x2d7eca = _0x828c8d.call(_0x4f2d8c, _0x3083c1);
          } catch (_0x4da0a4) {
            _0x2d7eca = [6, _0x4da0a4];
            _0x4b8a3d = 0;
          } finally {
            _0x1b371a = _0x1ff912 = 0;
          }
        }
        if (_0x2d7eca[0] & 5) {
          throw _0x2d7eca[1];
        }
        var _0x46f191 = {
          value: _0x2d7eca[0] ? _0x2d7eca[1] : undefined,
          done: true
        };
        return _0x46f191;
      }
    }
    var _0x5ae551 = false;
    _0x213dc5.RegisterStatebagChangeHandler("sanitationTrashBags", false, false, function (_0xc16e14, _0x4a6525, _0x5433b7) {
      var _0x224fe0 = GetEntityModel(_0x4a6525);
      _0x663e5(_0xc16e14, _0x224fe0, "prop_cs_street_binbag_01", "chassis", _0x5433b7);
    });
    function _0x135fca(_0x1f7bef) {
      var _0x3aa84e = GetVehicleDoorAngleRatio(_0x1f7bef, 5) > 0.1;
      if (_0x3aa84e) {
        return false;
      }
      var _0xf0e0bd = _0x213dc5.GetEntityStateValue(_0x1f7bef, "compactingTrash");
      if (_0xf0e0bd) {
        return false;
      }
      return GetVehicleDoorLockStatus(_0x1f7bef) <= 1;
    }
    function _0x4e6da3(_0x2f4a32) {
      return _0x3e0f74.apply(this, arguments);
    }
    function _0x3e0f74() {
      _0x3e0f74 = _0x4991de(function (_0x2e82e2) {
        return _0x5598fb(this, function (_0x137bd1) {
          if (!_0x135fca(_0x2e82e2)) {
            return [2];
          }
          _0x3cbfd9.g.exports["np-sync"].SyncedExecution("SetVehicleDoorOpen", _0x2e82e2, 5, false, false);
          return [2];
        });
      });
      return _0x3e0f74.apply(this, arguments);
    }
    function _0x2a32af(_0x4138c0) {
      if (!_0x5e239a || _0x5ae551 || _0x5ad186 === null) {
        return false;
      }
      var _0x1a3c3b = GetVehicleDoorAngleRatio(_0x4138c0, 5) > 0.1;
      if (!_0x1a3c3b) {
        return false;
      }
      var _0x57800a = _0x213dc5.GetEntityStateValue(_0x4138c0, "sanitationTrashBags");
      return _0x57800a < 5;
    }
    function _0x2fcb04(_0x3566bd) {
      return _0x37b365.apply(this, arguments);
    }
    function _0x37b365() {
      _0x37b365 = _0x4991de(function (_0x10fbec) {
        var _0x59f8c2;
        var _0x502ac1;
        var _0xe49fb9;
        var _0x15583c;
        var _0x3227c9;
        return _0x5598fb(this, function (_0x2c9442) {
          switch (_0x2c9442.label) {
            case 0:
              if (!_0x2a32af(_0x10fbec)) {
                return [2];
              }
              _0x5ae551 = true;
              _0x59f8c2 = _0x5ad186;
              _0x502ac1 = NetworkGetNetworkIdFromEntity(_0x10fbec);
              return [4, _0x365346()];
            case 1:
              _0x2c9442.sent();
              _0x5ae551 = false;
              return [4, _0x11a862.execute("np-jobs:sanitation:placeTrash", _0x502ac1, _0x59f8c2)];
            case 2:
              _0xe49fb9 = _0x566e80.apply(undefined, [_0x2c9442.sent(), 2]);
              _0x15583c = _0xe49fb9[0];
              _0x3227c9 = _0xe49fb9[1];
              if (!_0x15583c) {
                console.error(_0x3227c9);
              }
              return [2];
          }
        });
      });
      return _0x37b365.apply(this, arguments);
    }
    function _0x131259(_0x52d05b) {
      var _0x4891eb = _0x213dc5.GetEntityStateValue(_0x52d05b, "compactingTrash");
      if (_0x4891eb) {
        return false;
      }
      var _0x189e20 = _0x213dc5.GetEntityStateValue(_0x52d05b, "sanitationTrashBags");
      return _0x189e20 >= 1;
    }
    function _0x52630c(_0xf51e8f) {
      return _0x5de9f0.apply(this, arguments);
    }
    function _0x5de9f0() {
      _0x5de9f0 = _0x4991de(function (_0x597cdb) {
        var _0xd45b42;
        var _0xbc65e4;
        var _0x18459c;
        var _0x13f699;
        return _0x5598fb(this, function (_0x45ead8) {
          switch (_0x45ead8.label) {
            case 0:
              if (!_0x131259(_0x597cdb)) {
                return [2];
              }
              _0xd45b42 = NetworkGetNetworkIdFromEntity(_0x597cdb);
              _0x3cbfd9.g.exports["np-sync"].SyncedExecution("SetVehicleDoorShut", _0x597cdb, 5, false);
              return [4, _0x11a862.execute("np-jobs:sanitation:compactTrash", _0xd45b42)];
            case 1:
              _0xbc65e4 = _0x566e80.apply(undefined, [_0x45ead8.sent(), 2]);
              _0x18459c = _0xbc65e4[0];
              _0x13f699 = _0xbc65e4[1];
              if (!_0x18459c) {
                console.error(_0x13f699);
              }
              _0x3cbfd9.g.exports["np-sync"].SyncedExecution("SetVehicleDoorOpen", _0x597cdb, 5, false, false);
              return [2];
          }
        });
      });
      return _0x5de9f0.apply(this, arguments);
    }
    function _0x4124fd(_0x1ad3fc) {
      if (_0x5e239a || _0x5ae551 || _0x5ad186 !== null) {
        return false;
      }
      var _0x105b7c = GetVehicleDoorAngleRatio(_0x1ad3fc, 5) > 0.1;
      return _0x105b7c;
    }
    _0x10598b.on("np-jobs:sanitation:openCompactor", function () {
      var _0x16a286 = _0x4991de(function (_0x28919c, _0x1b3b52) {
        return _0x5598fb(this, function (_0x10202b) {
          if (!_0x135fca(_0x1b3b52)) {
            return [2];
          }
          _0x4e6da3(_0x1b3b52);
          return [2];
        });
      });
      return function (_0x2ac1cc, _0x341e28) {
        return _0x16a286.apply(this, arguments);
      };
    }());
    _0x10598b.on("np-jobs:sanitation:placeTrash", function () {
      var _0x240df4 = _0x4991de(function (_0x33ca50, _0x179aab) {
        return _0x5598fb(this, function (_0x4c3250) {
          if (!_0x2a32af(_0x179aab)) {
            return [2];
          }
          _0x2fcb04(_0x179aab);
          return [2];
        });
      });
      return function (_0x517b47, _0x412973) {
        return _0x240df4.apply(this, arguments);
      };
    }());
    _0x10598b.on("np-jobs:sanitation:compactTrash", function () {
      var _0x3cdcb6 = _0x4991de(function (_0x59d33d, _0x41d859) {
        return _0x5598fb(this, function (_0x20340a) {
          if (!_0x131259(_0x41d859)) {
            return [2];
          }
          _0x52630c(_0x41d859);
          return [2];
        });
      });
      return function (_0x3f8373, _0x25eb21) {
        return _0x3cdcb6.apply(this, arguments);
      };
    }());
    _0x10598b.on("np-jobs:sanitation:openStorage", function () {
      var _0x49ea77 = _0x4991de(function (_0x16a214, _0x5604d2) {
        var _0x459f35;
        return _0x5598fb(this, function (_0x2a0b4c) {
          _0x459f35 = _0x1ea2c6.GetIdentifier(_0x5604d2);
          if (!_0x459f35) {
            return [2];
          }
          _0x2663ad.OpenInventory([`trash-compactor::${_0x459f35}`], true);
          return [2];
        });
      });
      return function (_0x766428, _0x26e1f6) {
        return _0x49ea77.apply(this, arguments);
      };
    }());
    setImmediate(_0x4991de(function () {
      var _0x25187c;
      var _0x1b4d49;
      var _0x1b892d;
      var _0x22260d;
      return _0x5598fb(this, function (_0x33d11e) {
        _0x25187c = {
          id: "open_compactor",
          label: "Open Compactor",
          eventSDK: "np-jobs:sanitation:openCompactor",
          parameters: []
        };
        _0x1b4d49 = {
          id: "place_trash",
          label: "Place Trash",
          eventSDK: "np-jobs:sanitation:placeTrash",
          parameters: []
        };
        _0x1b892d = {
          id: "compact_trash",
          label: "Compact Trash",
          eventSDK: "np-jobs:sanitation:compactTrash",
          parameters: []
        };
        _0x22260d = {
          id: "open_storage",
          label: "Open Waste Storage",
          eventSDK: "np-jobs:sanitation:openStorage",
          parameters: []
        };
        _0x121f17.addVehicleInteraction("open_compactor", [_0x25187c], {
          distance: 5.5,
          isEnabled: function (_0x1dd944) {
            if (_0x431c81()) {
              return false;
            }
            var _0x580956 = GetEntityModel(_0x1dd944);
            if (!_0x1b96e0.includes(_0x580956)) {
              return false;
            }
            return _0x135fca(_0x1dd944);
          },
          offset: function () {
            return [0, -6.4, 0.4];
          }
        });
        _0x121f17.addVehicleInteraction("place_trash", [_0x1b4d49], {
          distance: 5.5,
          isEnabled: function (_0x46a47e) {
            if (_0x431c81()) {
              return false;
            }
            var _0x561d77 = GetEntityModel(_0x46a47e);
            if (!_0x1b96e0.includes(_0x561d77)) {
              return false;
            }
            return _0x2a32af(_0x46a47e);
          },
          offset: function () {
            return [0, -6.4, 0.4];
          }
        });
        _0x121f17.addVehicleInteraction("compact_trash", [_0x1b892d], {
          distance: 5.5,
          isEnabled: function (_0x1a2cc7) {
            if (_0x431c81()) {
              return false;
            }
            var _0x1c07ed = GetEntityModel(_0x1a2cc7);
            if (!_0x1b96e0.includes(_0x1c07ed)) {
              return false;
            }
            return _0x131259(_0x1a2cc7);
          },
          offset: function () {
            return [0, -6.4, 0.4];
          }
        });
        _0x121f17.addVehicleInteraction("open_storage", [_0x22260d], {
          distance: 5.5,
          isEnabled: function (_0x2275be) {
            if (_0x431c81()) {
              return false;
            }
            var _0x1f022b = GetEntityModel(_0x2275be);
            if (!_0x1b96e0.includes(_0x1f022b)) {
              return false;
            }
            var _0x1bbe60 = GetVehicleDoorLockStatus(_0x2275be);
            if (_0x1bbe60 > 1) {
              return false;
            }
            return _0x4124fd(_0x2275be);
          },
          offset: function () {
            return [0, -6.4, 0.4];
          }
        });
        return [2];
      });
    }));
    ;
    function _0x5d97f9(_0x224e43, _0x54e973, _0xe3788c, _0xdc361d, _0x2da535, _0x3d4d2a, _0x1854d2) {
      try {
        var _0x5ac317 = _0x224e43[_0x3d4d2a](_0x1854d2);
        var _0x5542ba = _0x5ac317.value;
      } catch (_0x2ce031) {
        _0xe3788c(_0x2ce031);
        return;
      }
      if (_0x5ac317.done) {
        _0x54e973(_0x5542ba);
      } else {
        Promise.resolve(_0x5542ba).then(_0xdc361d, _0x2da535);
      }
    }
    function _0x5594d4(_0x48cc68) {
      return function () {
        var _0x444f7e = this;
        var _0x55f682 = arguments;
        return new Promise(function (_0x2d811e, _0x1479d1) {
          var _0x18509c = _0x48cc68.apply(_0x444f7e, _0x55f682);
          function _0x521a5b(_0x40b7c9) {
            _0x5d97f9(_0x18509c, _0x2d811e, _0x1479d1, _0x521a5b, _0xe86ca6, "next", _0x40b7c9);
          }
          function _0xe86ca6(_0x2e6f6a) {
            _0x5d97f9(_0x18509c, _0x2d811e, _0x1479d1, _0x521a5b, _0xe86ca6, "throw", _0x2e6f6a);
          }
          _0x521a5b(undefined);
        });
      };
    }
    function _0x35af28(_0x7bd174, _0xd26a0a) {
      var _0x24557;
      var _0x2f85b8;
      var _0x29e03b;
      var _0x3367ce;
      var _0x582c70 = {
        label: 0,
        sent: function () {
          if (_0x29e03b[0] & 1) {
            throw _0x29e03b[1];
          }
          return _0x29e03b[1];
        },
        trys: [],
        ops: []
      };
      _0x3367ce = {
        next: _0x511044(0),
        throw: _0x511044(1),
        return: _0x511044(2)
      };
      if (typeof Symbol === "function") {
        _0x3367ce[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3367ce;
      function _0x511044(_0x343219) {
        return function (_0xceb870) {
          return _0x175851([_0x343219, _0xceb870]);
        };
      }
      function _0x175851(_0x3d18d1) {
        if (_0x24557) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x582c70) {
          try {
            _0x24557 = 1;
            if (_0x2f85b8 && (_0x29e03b = _0x3d18d1[0] & 2 ? _0x2f85b8.return : _0x3d18d1[0] ? _0x2f85b8.throw || ((_0x29e03b = _0x2f85b8.return) && _0x29e03b.call(_0x2f85b8), 0) : _0x2f85b8.next) && !(_0x29e03b = _0x29e03b.call(_0x2f85b8, _0x3d18d1[1])).done) {
              return _0x29e03b;
            }
            _0x2f85b8 = 0;
            if (_0x29e03b) {
              _0x3d18d1 = [_0x3d18d1[0] & 2, _0x29e03b.value];
            }
            switch (_0x3d18d1[0]) {
              case 0:
              case 1:
                _0x29e03b = _0x3d18d1;
                break;
              case 4:
                _0x582c70.label++;
                var _0x2bfecb = {
                  value: _0x3d18d1[1],
                  done: false
                };
                return _0x2bfecb;
              case 5:
                _0x582c70.label++;
                _0x2f85b8 = _0x3d18d1[1];
                _0x3d18d1 = [0];
                continue;
              case 7:
                _0x3d18d1 = _0x582c70.ops.pop();
                _0x582c70.trys.pop();
                continue;
              default:
                if (!(_0x29e03b = _0x582c70.trys, _0x29e03b = _0x29e03b.length > 0 && _0x29e03b[_0x29e03b.length - 1]) && (_0x3d18d1[0] === 6 || _0x3d18d1[0] === 2)) {
                  _0x582c70 = 0;
                  continue;
                }
                if (_0x3d18d1[0] === 3 && (!_0x29e03b || _0x3d18d1[1] > _0x29e03b[0] && _0x3d18d1[1] < _0x29e03b[3])) {
                  _0x582c70.label = _0x3d18d1[1];
                  break;
                }
                if (_0x3d18d1[0] === 6 && _0x582c70.label < _0x29e03b[1]) {
                  _0x582c70.label = _0x29e03b[1];
                  _0x29e03b = _0x3d18d1;
                  break;
                }
                if (_0x29e03b && _0x582c70.label < _0x29e03b[2]) {
                  _0x582c70.label = _0x29e03b[2];
                  _0x582c70.ops.push(_0x3d18d1);
                  break;
                }
                if (_0x29e03b[2]) {
                  _0x582c70.ops.pop();
                }
                _0x582c70.trys.pop();
                continue;
            }
            _0x3d18d1 = _0xd26a0a.call(_0x7bd174, _0x582c70);
          } catch (_0x247142) {
            _0x3d18d1 = [6, _0x247142];
            _0x2f85b8 = 0;
          } finally {
            _0x24557 = _0x29e03b = 0;
          }
        }
        if (_0x3d18d1[0] & 5) {
          throw _0x3d18d1[1];
        }
        var _0x357b88 = {
          value: _0x3d18d1[0] ? _0x3d18d1[1] : undefined,
          done: true
        };
        return _0x357b88;
      }
    }
    var _0x548eaa = null;
    var _0x3a6f94;
    var _0x5066ab;
    var _0x100c84;
    var _0x30b724;
    var _0x199f54 = false;
    function _0x5f1819() {
      return _0x548eaa !== null;
    }
    function _0x424230() {
      return _0x548eaa !== null && _0x199f54;
    }
    function _0x2e94da(_0x3b9efa, _0x38c9b2, _0x225fd6) {
      var _0x126c71 = _0x3b9efa.getDistance(_0x38c9b2);
      return _0x126c71 <= _0x225fd6;
    }
    function _0x5c03fe(_0x4a6b51, _0x1df456, _0x10e80f) {
      var _0x4b39c2 = AddBlipForRadius(_0x4a6b51.x, _0x4a6b51.y, _0x4a6b51.z, _0x1df456);
      SetBlipColour(_0x4b39c2, 1);
      SetBlipAlpha(_0x4b39c2, 150);
      BeginTextCommandSetBlipName("STRING");
      AddTextComponentString(`Collection Zone: ${_0x10e80f}`);
      EndTextCommandSetBlipName(_0x4b39c2);
      return _0x4b39c2;
    }
    on("np-jobs:sanitation:activity:goToCollectionZone", function (_0x4a8b5b, _0x353fa2, _0x497924, _0x5c0779, _0x1e127c) {
      _0x548eaa = _0x4a8b5b;
      _0x3a6f94 = _0x1e127c;
      _0x30b724 = _0x5c0779.pop().id;
      _0x100c84 = _0x497924.find(function (_0x1ac0cf) {
        return _0x1ac0cf.id === "collection_zone";
      });
      var _0x17272f = _0x100c84.settings.name;
      var _0x48ac33 = new _0x26b14d(_0x100c84.settings.vectors);
      var _0x5e1f12 = _0x100c84.settings.radius;
      var _0x33b37d = PlayerPedId();
      var _0xb5d24f = _0x5c03fe(_0x48ac33, _0x5e1f12, _0x17272f);
      var _0x246b69 = setTick(_0x5594d4(function () {
        var _0x595549;
        return _0x35af28(this, function (_0x2bdb8b) {
          switch (_0x2bdb8b.label) {
            case 0:
              _0x595549 = GetEntityCoords(_0x33b37d);
              _0x199f54 = _0x2e94da(_0x48ac33, _0x595549, _0x5e1f12);
              if (_0x199f54 || _0x4a8b5b !== _0x548eaa || !_0x16cde5("sanitation_worker")) {
                clearTick(_0x246b69);
                RemoveBlip(_0xb5d24f);
                if (_0x199f54) {
                  _0x3a6f94("updateObjectiveData", _0x30b724, "count", 1);
                  _0x3a6f94("updateObjectiveData", _0x30b724, "status", "completed");
                }
                _0x199f54 = false;
              }
              return [4, _0x5d5475.wait(500)];
            case 1:
              return [2, _0x2bdb8b.sent()];
          }
        });
      }));
    });
    on("np-jobs:sanitation:activity:collectTrash", function (_0x561031, _0x153c11, _0x48ee5c, _0x177211, _0x995837) {
      _0x548eaa = _0x561031;
      _0x3a6f94 = _0x995837;
      _0x30b724 = _0x177211.pop().id;
      _0x100c84 = _0x48ee5c.find(function (_0x550115) {
        return _0x550115.id === "collection_zone";
      });
      var _0x176877 = _0x100c84.settings.name;
      var _0x44f9d2 = new _0x26b14d(_0x100c84.settings.vectors);
      var _0x46efba = _0x100c84.settings.radius;
      var _0x623343 = PlayerPedId();
      var _0x1869e1 = _0x5c03fe(_0x44f9d2, _0x46efba, _0x176877);
      var _0x4f5841 = setTick(_0x5594d4(function () {
        var _0x53b00f;
        return _0x35af28(this, function (_0x43cd83) {
          _0x53b00f = GetEntityCoords(_0x623343);
          _0x199f54 = _0x2e94da(_0x44f9d2, _0x53b00f, _0x46efba);
          if (_0x561031 !== _0x548eaa || !_0x16cde5("sanitation_worker")) {
            clearTick(_0x4f5841);
            RemoveBlip(_0x1869e1);
            _0x199f54 = false;
          }
          return [2];
        });
      }));
    });
    onNet("np:jobs:activityCompleted", function () {
      _0x199f54 = false;
      _0x548eaa = null;
      _0x3a6f94 = null;
      _0x5066ab = null;
      _0x100c84 = null;
      _0x30b724 = null;
    });
    ;
    ;
    function _0x56deb9(_0x45eee8, _0xabf2f4, _0x3c28f4, _0x1b79da, _0x71aab, _0x13d04f, _0x185ae9) {
      try {
        var _0x2a49d2 = _0x45eee8[_0x13d04f](_0x185ae9);
        var _0x56d24c = _0x2a49d2.value;
      } catch (_0xe197d) {
        _0x3c28f4(_0xe197d);
        return;
      }
      if (_0x2a49d2.done) {
        _0xabf2f4(_0x56d24c);
      } else {
        Promise.resolve(_0x56d24c).then(_0x1b79da, _0x71aab);
      }
    }
    function _0x4d35fe(_0x52f37d) {
      return function () {
        var _0x5c354f = this;
        var _0x1a37cc = arguments;
        return new Promise(function (_0x19a853, _0x547d5e) {
          var _0x30c9ef = _0x52f37d.apply(_0x5c354f, _0x1a37cc);
          function _0x1e1b9d(_0xf6e8f9) {
            _0x56deb9(_0x30c9ef, _0x19a853, _0x547d5e, _0x1e1b9d, _0x1f89fa, "next", _0xf6e8f9);
          }
          function _0x1f89fa(_0x461c73) {
            _0x56deb9(_0x30c9ef, _0x19a853, _0x547d5e, _0x1e1b9d, _0x1f89fa, "throw", _0x461c73);
          }
          _0x1e1b9d(undefined);
        });
      };
    }
    function _0x355237(_0x3340b8, _0x21a69d) {
      var _0x5643be;
      var _0x44ce01;
      var _0x2e4f39;
      var _0x144e5f;
      var _0x41485a = {
        label: 0,
        sent: function () {
          if (_0x2e4f39[0] & 1) {
            throw _0x2e4f39[1];
          }
          return _0x2e4f39[1];
        },
        trys: [],
        ops: []
      };
      _0x144e5f = {
        next: _0x380c54(0),
        throw: _0x380c54(1),
        return: _0x380c54(2)
      };
      if (typeof Symbol === "function") {
        _0x144e5f[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x144e5f;
      function _0x380c54(_0x1aa9bd) {
        return function (_0x1c171f) {
          return _0x2962ea([_0x1aa9bd, _0x1c171f]);
        };
      }
      function _0x2962ea(_0x456db5) {
        if (_0x5643be) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x41485a) {
          try {
            _0x5643be = 1;
            if (_0x44ce01 && (_0x2e4f39 = _0x456db5[0] & 2 ? _0x44ce01.return : _0x456db5[0] ? _0x44ce01.throw || ((_0x2e4f39 = _0x44ce01.return) && _0x2e4f39.call(_0x44ce01), 0) : _0x44ce01.next) && !(_0x2e4f39 = _0x2e4f39.call(_0x44ce01, _0x456db5[1])).done) {
              return _0x2e4f39;
            }
            _0x44ce01 = 0;
            if (_0x2e4f39) {
              _0x456db5 = [_0x456db5[0] & 2, _0x2e4f39.value];
            }
            switch (_0x456db5[0]) {
              case 0:
              case 1:
                _0x2e4f39 = _0x456db5;
                break;
              case 4:
                _0x41485a.label++;
                var _0x1a950f = {
                  value: _0x456db5[1],
                  done: false
                };
                return _0x1a950f;
              case 5:
                _0x41485a.label++;
                _0x44ce01 = _0x456db5[1];
                _0x456db5 = [0];
                continue;
              case 7:
                _0x456db5 = _0x41485a.ops.pop();
                _0x41485a.trys.pop();
                continue;
              default:
                if (!(_0x2e4f39 = _0x41485a.trys, _0x2e4f39 = _0x2e4f39.length > 0 && _0x2e4f39[_0x2e4f39.length - 1]) && (_0x456db5[0] === 6 || _0x456db5[0] === 2)) {
                  _0x41485a = 0;
                  continue;
                }
                if (_0x456db5[0] === 3 && (!_0x2e4f39 || _0x456db5[1] > _0x2e4f39[0] && _0x456db5[1] < _0x2e4f39[3])) {
                  _0x41485a.label = _0x456db5[1];
                  break;
                }
                if (_0x456db5[0] === 6 && _0x41485a.label < _0x2e4f39[1]) {
                  _0x41485a.label = _0x2e4f39[1];
                  _0x2e4f39 = _0x456db5;
                  break;
                }
                if (_0x2e4f39 && _0x41485a.label < _0x2e4f39[2]) {
                  _0x41485a.label = _0x2e4f39[2];
                  _0x41485a.ops.push(_0x456db5);
                  break;
                }
                if (_0x2e4f39[2]) {
                  _0x41485a.ops.pop();
                }
                _0x41485a.trys.pop();
                continue;
            }
            _0x456db5 = _0x21a69d.call(_0x3340b8, _0x41485a);
          } catch (_0x17ce1e) {
            _0x456db5 = [6, _0x17ce1e];
            _0x44ce01 = 0;
          } finally {
            _0x5643be = _0x2e4f39 = 0;
          }
        }
        if (_0x456db5[0] & 5) {
          throw _0x456db5[1];
        }
        var _0x4bcfdd = {
          value: _0x456db5[0] ? _0x456db5[1] : undefined,
          done: true
        };
        return _0x4bcfdd;
      }
    }
    var _0x4565cd = new Map();
    console.log(`[np-jobs:sanitation:objects] Loaded ${_0x22c799.length} trash bag models`);
    on("np-objects:objectCreated", function () {
      var _0x106848 = _0x4d35fe(function (_0x535331, _0x2de516) {
        var _0x41c2e2;
        var _0x211f77;
        var _0x3f9d87;
        return _0x355237(this, function (_0x30494d) {
          if (_0x535331.ns !== "objects") {
            return [2];
          }
          _0x41c2e2 = _0x535331.id;
          _0x211f77 = _0x535331.data;
          _0x3f9d87 = _0x211f77.model;
          if (!_0x2137e9(_0x3f9d87)) {
            return [2];
          }
          _0x4565cd.set(_0x41c2e2, _0x2de516);
          _0x4565cd.set(_0x2de516, _0x41c2e2);
          return [2];
        });
      });
      return function (_0x154141, _0x50f78c) {
        return _0x106848.apply(this, arguments);
      };
    }());
    on("np-objects:objectDeleted", function () {
      var _0x60366a = _0x4d35fe(function (_0x1ab71b) {
        var _0x507146;
        var _0x858cc5;
        return _0x355237(this, function (_0x5eba76) {
          if (_0x1ab71b.ns !== "objects") {
            return [2];
          }
          _0x507146 = _0x1ab71b.id;
          _0x858cc5 = _0x4565cd.get(_0x507146);
          if (!_0x858cc5) {
            return [2];
          }
          _0x4565cd.delete(_0x507146);
          _0x4565cd.delete(_0x858cc5);
          return [2];
        });
      });
      return function (_0x5cc57e) {
        return _0x60366a.apply(this, arguments);
      };
    }());
    function _0x2137e9(_0x369476) {
      return _0x22c799.includes(_0x369476);
    }
    function _0x55cb58(_0x11f929) {
      return _0x4565cd.has(_0x11f929);
    }
    function _0x57f089(_0x3ce772) {
      return _0x4565cd.get(_0x3ce772) ?? null;
    }
    function _0x5ef1a1(_0x43d3a6) {
      return _0x4565cd.get(_0x43d3a6) ?? null;
    }
    ;
    function _0x2b334e(_0x16c5b7, _0x3c82a9) {
      if (_0x3c82a9 == null || _0x3c82a9 > _0x16c5b7.length) {
        _0x3c82a9 = _0x16c5b7.length;
      }
      for (var _0x2dfbaa = 0, _0x3a879a = new Array(_0x3c82a9); _0x2dfbaa < _0x3c82a9; _0x2dfbaa++) {
        _0x3a879a[_0x2dfbaa] = _0x16c5b7[_0x2dfbaa];
      }
      return _0x3a879a;
    }
    function _0x1adc43(_0x531ac8) {
      if (Array.isArray(_0x531ac8)) {
        return _0x531ac8;
      }
    }
    function _0x4c3ba5(_0x311c50, _0x3885d9, _0xffd51b, _0x5d143f, _0x43843e, _0x24772b, _0x308629) {
      try {
        var _0x49cf08 = _0x311c50[_0x24772b](_0x308629);
        var _0x8e60eb = _0x49cf08.value;
      } catch (_0x381ce4) {
        _0xffd51b(_0x381ce4);
        return;
      }
      if (_0x49cf08.done) {
        _0x3885d9(_0x8e60eb);
      } else {
        Promise.resolve(_0x8e60eb).then(_0x5d143f, _0x43843e);
      }
    }
    function _0x1dfb7d(_0x576d48) {
      return function () {
        var _0x2b984c = this;
        var _0x239119 = arguments;
        return new Promise(function (_0x5aebd6, _0x17e54a) {
          var _0x54f2f3 = _0x576d48.apply(_0x2b984c, _0x239119);
          function _0x15004c(_0xff731c) {
            _0x4c3ba5(_0x54f2f3, _0x5aebd6, _0x17e54a, _0x15004c, _0x1a7b9b, "next", _0xff731c);
          }
          function _0x1a7b9b(_0x439375) {
            _0x4c3ba5(_0x54f2f3, _0x5aebd6, _0x17e54a, _0x15004c, _0x1a7b9b, "throw", _0x439375);
          }
          _0x15004c(undefined);
        });
      };
    }
    function _0x363818(_0x709207, _0x15d513) {
      var _0x424c5c = _0x709207 == null ? null : typeof Symbol !== "undefined" && _0x709207[Symbol.iterator] || _0x709207["@@iterator"];
      if (_0x424c5c == null) {
        return;
      }
      var _0x496113 = [];
      var _0x208d08 = true;
      var _0x1fbc00 = false;
      var _0x71fe3d;
      var _0x16f548;
      try {
        for (_0x424c5c = _0x424c5c.call(_0x709207); !(_0x208d08 = (_0x71fe3d = _0x424c5c.next()).done); _0x208d08 = true) {
          _0x496113.push(_0x71fe3d.value);
          if (_0x15d513 && _0x496113.length === _0x15d513) {
            break;
          }
        }
      } catch (_0x4a13a4) {
        _0x1fbc00 = true;
        _0x16f548 = _0x4a13a4;
      } finally {
        try {
          if (!_0x208d08 && _0x424c5c.return != null) {
            _0x424c5c.return();
          }
        } finally {
          if (_0x1fbc00) {
            throw _0x16f548;
          }
        }
      }
      return _0x496113;
    }
    function _0x4eef42() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x350d35(_0x346d64, _0x49b19c) {
      return _0x1adc43(_0x346d64) || _0x363818(_0x346d64, _0x49b19c) || _0x473e01(_0x346d64, _0x49b19c) || _0x4eef42();
    }
    function _0x473e01(_0x1462a2, _0x37af6f) {
      if (!_0x1462a2) {
        return;
      }
      if (typeof _0x1462a2 === "string") {
        return _0x2b334e(_0x1462a2, _0x37af6f);
      }
      var _0x1d7355 = Object.prototype.toString.call(_0x1462a2).slice(8, -1);
      if (_0x1d7355 === "Object" && _0x1462a2.constructor) {
        _0x1d7355 = _0x1462a2.constructor.name;
      }
      if (_0x1d7355 === "Map" || _0x1d7355 === "Set") {
        return Array.from(_0x1d7355);
      }
      if (_0x1d7355 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x1d7355)) {
        return _0x2b334e(_0x1462a2, _0x37af6f);
      }
    }
    function _0x16bd51(_0x2ab126, _0x59c7d5) {
      var _0x14b5e3;
      var _0x2dcf1a;
      var _0x21059c;
      var _0x4df5bc;
      var _0xe9b383 = {
        label: 0,
        sent: function () {
          if (_0x21059c[0] & 1) {
            throw _0x21059c[1];
          }
          return _0x21059c[1];
        },
        trys: [],
        ops: []
      };
      _0x4df5bc = {
        next: _0x45e907(0),
        throw: _0x45e907(1),
        return: _0x45e907(2)
      };
      if (typeof Symbol === "function") {
        _0x4df5bc[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4df5bc;
      function _0x45e907(_0xcf493b) {
        return function (_0x528605) {
          return _0x4f838e([_0xcf493b, _0x528605]);
        };
      }
      function _0x4f838e(_0x358500) {
        if (_0x14b5e3) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xe9b383) {
          try {
            _0x14b5e3 = 1;
            if (_0x2dcf1a && (_0x21059c = _0x358500[0] & 2 ? _0x2dcf1a.return : _0x358500[0] ? _0x2dcf1a.throw || ((_0x21059c = _0x2dcf1a.return) && _0x21059c.call(_0x2dcf1a), 0) : _0x2dcf1a.next) && !(_0x21059c = _0x21059c.call(_0x2dcf1a, _0x358500[1])).done) {
              return _0x21059c;
            }
            _0x2dcf1a = 0;
            if (_0x21059c) {
              _0x358500 = [_0x358500[0] & 2, _0x21059c.value];
            }
            switch (_0x358500[0]) {
              case 0:
              case 1:
                _0x21059c = _0x358500;
                break;
              case 4:
                _0xe9b383.label++;
                var _0x1096e6 = {
                  value: _0x358500[1],
                  done: false
                };
                return _0x1096e6;
              case 5:
                _0xe9b383.label++;
                _0x2dcf1a = _0x358500[1];
                _0x358500 = [0];
                continue;
              case 7:
                _0x358500 = _0xe9b383.ops.pop();
                _0xe9b383.trys.pop();
                continue;
              default:
                if (!(_0x21059c = _0xe9b383.trys, _0x21059c = _0x21059c.length > 0 && _0x21059c[_0x21059c.length - 1]) && (_0x358500[0] === 6 || _0x358500[0] === 2)) {
                  _0xe9b383 = 0;
                  continue;
                }
                if (_0x358500[0] === 3 && (!_0x21059c || _0x358500[1] > _0x21059c[0] && _0x358500[1] < _0x21059c[3])) {
                  _0xe9b383.label = _0x358500[1];
                  break;
                }
                if (_0x358500[0] === 6 && _0xe9b383.label < _0x21059c[1]) {
                  _0xe9b383.label = _0x21059c[1];
                  _0x21059c = _0x358500;
                  break;
                }
                if (_0x21059c && _0xe9b383.label < _0x21059c[2]) {
                  _0xe9b383.label = _0x21059c[2];
                  _0xe9b383.ops.push(_0x358500);
                  break;
                }
                if (_0x21059c[2]) {
                  _0xe9b383.ops.pop();
                }
                _0xe9b383.trys.pop();
                continue;
            }
            _0x358500 = _0x59c7d5.call(_0x2ab126, _0xe9b383);
          } catch (_0x49e16) {
            _0x358500 = [6, _0x49e16];
            _0x2dcf1a = 0;
          } finally {
            _0x14b5e3 = _0x21059c = 0;
          }
        }
        if (_0x358500[0] & 5) {
          throw _0x358500[1];
        }
        var _0x3441a5 = {
          value: _0x358500[0] ? _0x358500[1] : undefined,
          done: true
        };
        return _0x3441a5;
      }
    }
    var _0x17415e = false;
    function _0x678de6(_0x56549c) {
      if (_0x17415e || _0x5e239a || !_0x16cde5("sanitation_worker")) {
        return false;
      }
      return _0x55cb58(_0x56549c);
    }
    function _0x1a4bc6(_0x524fbf) {
      return _0x4d7d1b.apply(this, arguments);
    }
    function _0x4d7d1b() {
      _0x4d7d1b = _0x1dfb7d(function (_0x35faed) {
        var _0x423ebc;
        var _0x1f3c07;
        var _0x58e852;
        var _0x2124e1;
        return _0x16bd51(this, function (_0x4b1aae) {
          switch (_0x4b1aae.label) {
            case 0:
              if (!_0x678de6(_0x35faed)) {
                return [2];
              }
              _0x423ebc = _0x57f089(_0x35faed);
              if (!_0x423ebc) {
                return [2];
              }
              _0x17415e = true;
              return [4, _0x11a862.execute("np-jobs:sanitation:pickupDropTrash", _0x423ebc)];
            case 1:
              _0x1f3c07 = _0x350d35.apply(undefined, [_0x4b1aae.sent(), 2]);
              _0x58e852 = _0x1f3c07[0];
              _0x2124e1 = _0x1f3c07[1];
              _0x17415e = false;
              if (!_0x58e852) {
                return [2, emit("DoLongHudText", _0x2124e1, 2)];
              }
              var _0x28a13b = {
                id: _0x423ebc,
                type: "bag",
                activityId: null
              };
              _0x30e65d(_0x28a13b);
              return [2];
          }
        });
      });
      return _0x4d7d1b.apply(this, arguments);
    }
    _0x10598b.on("np-jobs:sanitation:pickupTrash", function (_0x42108c, _0x3bd4bd) {
      var _0xb4aa7 = _0x350d35(_0x42108c, 1);
      var _0x19e5aa = _0xb4aa7[0];
      if (_0x19e5aa !== "bag") {
        return;
      }
      _0x1a4bc6(_0x3bd4bd);
    });
    setImmediate(_0x1dfb7d(function () {
      var _0x96be31;
      return _0x16bd51(this, function (_0x20e2ee) {
        _0x96be31 = {
          id: "trash_pickup",
          label: "Pickup Trash",
          eventSDK: "np-jobs:sanitation:pickupTrash",
          parameters: ["bag"]
        };
        var _0x22fd59 = {
          distance: 5.5,
          isEnabled: _0x678de6
        };
        _0x121f17.addInteractionByModel("trash_pickup", _0x41679a, [_0x96be31], _0x22fd59);
        return [2];
      });
    }));
    ;
    function _0x5a85db(_0x335512, _0x576745) {
      if (_0x576745 == null || _0x576745 > _0x335512.length) {
        _0x576745 = _0x335512.length;
      }
      for (var _0x5eb3b2 = 0, _0x2e90d8 = new Array(_0x576745); _0x5eb3b2 < _0x576745; _0x5eb3b2++) {
        _0x2e90d8[_0x5eb3b2] = _0x335512[_0x5eb3b2];
      }
      return _0x2e90d8;
    }
    function _0x2970f0(_0x3c1ad6) {
      if (Array.isArray(_0x3c1ad6)) {
        return _0x3c1ad6;
      }
    }
    function _0x984b2b(_0x49cc13, _0x1ab468, _0x590d98, _0x2cdca6, _0x31b297, _0xe50018, _0x3fa737) {
      try {
        var _0x436812 = _0x49cc13[_0xe50018](_0x3fa737);
        var _0x528b1f = _0x436812.value;
      } catch (_0x3246bc) {
        _0x590d98(_0x3246bc);
        return;
      }
      if (_0x436812.done) {
        _0x1ab468(_0x528b1f);
      } else {
        Promise.resolve(_0x528b1f).then(_0x2cdca6, _0x31b297);
      }
    }
    function _0x5c0fe4(_0xe8cbc5) {
      return function () {
        var _0x8612bd = this;
        var _0x4a56fe = arguments;
        return new Promise(function (_0x5dbcc1, _0x24e37d) {
          var _0x4ba3f7 = _0xe8cbc5.apply(_0x8612bd, _0x4a56fe);
          function _0xb9b72a(_0x1d8c2a) {
            _0x984b2b(_0x4ba3f7, _0x5dbcc1, _0x24e37d, _0xb9b72a, _0x3752db, "next", _0x1d8c2a);
          }
          function _0x3752db(_0xaa796d) {
            _0x984b2b(_0x4ba3f7, _0x5dbcc1, _0x24e37d, _0xb9b72a, _0x3752db, "throw", _0xaa796d);
          }
          _0xb9b72a(undefined);
        });
      };
    }
    function _0x471b59(_0x1b9b96, _0xa42a91) {
      var _0x114085 = _0x1b9b96 == null ? null : typeof Symbol !== "undefined" && _0x1b9b96[Symbol.iterator] || _0x1b9b96["@@iterator"];
      if (_0x114085 == null) {
        return;
      }
      var _0xbe1e68 = [];
      var _0x19d443 = true;
      var _0x21a23b = false;
      var _0x3455ef;
      var _0x4eabad;
      try {
        for (_0x114085 = _0x114085.call(_0x1b9b96); !(_0x19d443 = (_0x3455ef = _0x114085.next()).done); _0x19d443 = true) {
          _0xbe1e68.push(_0x3455ef.value);
          if (_0xa42a91 && _0xbe1e68.length === _0xa42a91) {
            break;
          }
        }
      } catch (_0x39f527) {
        _0x21a23b = true;
        _0x4eabad = _0x39f527;
      } finally {
        try {
          if (!_0x19d443 && _0x114085.return != null) {
            _0x114085.return();
          }
        } finally {
          if (_0x21a23b) {
            throw _0x4eabad;
          }
        }
      }
      return _0xbe1e68;
    }
    function _0x5377d2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x2483be(_0x209ae5, _0x3ee4a1) {
      return _0x2970f0(_0x209ae5) || _0x471b59(_0x209ae5, _0x3ee4a1) || _0x549c8d(_0x209ae5, _0x3ee4a1) || _0x5377d2();
    }
    function _0x549c8d(_0x456041, _0x2e63d2) {
      if (!_0x456041) {
        return;
      }
      if (typeof _0x456041 === "string") {
        return _0x5a85db(_0x456041, _0x2e63d2);
      }
      var _0xd987c1 = Object.prototype.toString.call(_0x456041).slice(8, -1);
      if (_0xd987c1 === "Object" && _0x456041.constructor) {
        _0xd987c1 = _0x456041.constructor.name;
      }
      if (_0xd987c1 === "Map" || _0xd987c1 === "Set") {
        return Array.from(_0xd987c1);
      }
      if (_0xd987c1 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0xd987c1)) {
        return _0x5a85db(_0x456041, _0x2e63d2);
      }
    }
    function _0x4ada0f(_0x3a005a, _0x2caacc) {
      var _0x3a5f6f;
      var _0x5537a9;
      var _0xc1e063;
      var _0x2ca704;
      var _0x1d47c3 = {
        label: 0,
        sent: function () {
          if (_0xc1e063[0] & 1) {
            throw _0xc1e063[1];
          }
          return _0xc1e063[1];
        },
        trys: [],
        ops: []
      };
      _0x2ca704 = {
        next: _0x1afab5(0),
        throw: _0x1afab5(1),
        return: _0x1afab5(2)
      };
      if (typeof Symbol === "function") {
        _0x2ca704[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2ca704;
      function _0x1afab5(_0x5212d1) {
        return function (_0x321068) {
          return _0x5b1b39([_0x5212d1, _0x321068]);
        };
      }
      function _0x5b1b39(_0x1f8268) {
        if (_0x3a5f6f) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1d47c3) {
          try {
            _0x3a5f6f = 1;
            if (_0x5537a9 && (_0xc1e063 = _0x1f8268[0] & 2 ? _0x5537a9.return : _0x1f8268[0] ? _0x5537a9.throw || ((_0xc1e063 = _0x5537a9.return) && _0xc1e063.call(_0x5537a9), 0) : _0x5537a9.next) && !(_0xc1e063 = _0xc1e063.call(_0x5537a9, _0x1f8268[1])).done) {
              return _0xc1e063;
            }
            _0x5537a9 = 0;
            if (_0xc1e063) {
              _0x1f8268 = [_0x1f8268[0] & 2, _0xc1e063.value];
            }
            switch (_0x1f8268[0]) {
              case 0:
              case 1:
                _0xc1e063 = _0x1f8268;
                break;
              case 4:
                _0x1d47c3.label++;
                var _0x48ac1f = {
                  value: _0x1f8268[1],
                  done: false
                };
                return _0x48ac1f;
              case 5:
                _0x1d47c3.label++;
                _0x5537a9 = _0x1f8268[1];
                _0x1f8268 = [0];
                continue;
              case 7:
                _0x1f8268 = _0x1d47c3.ops.pop();
                _0x1d47c3.trys.pop();
                continue;
              default:
                if (!(_0xc1e063 = _0x1d47c3.trys, _0xc1e063 = _0xc1e063.length > 0 && _0xc1e063[_0xc1e063.length - 1]) && (_0x1f8268[0] === 6 || _0x1f8268[0] === 2)) {
                  _0x1d47c3 = 0;
                  continue;
                }
                if (_0x1f8268[0] === 3 && (!_0xc1e063 || _0x1f8268[1] > _0xc1e063[0] && _0x1f8268[1] < _0xc1e063[3])) {
                  _0x1d47c3.label = _0x1f8268[1];
                  break;
                }
                if (_0x1f8268[0] === 6 && _0x1d47c3.label < _0xc1e063[1]) {
                  _0x1d47c3.label = _0xc1e063[1];
                  _0xc1e063 = _0x1f8268;
                  break;
                }
                if (_0xc1e063 && _0x1d47c3.label < _0xc1e063[2]) {
                  _0x1d47c3.label = _0xc1e063[2];
                  _0x1d47c3.ops.push(_0x1f8268);
                  break;
                }
                if (_0xc1e063[2]) {
                  _0x1d47c3.ops.pop();
                }
                _0x1d47c3.trys.pop();
                continue;
            }
            _0x1f8268 = _0x2caacc.call(_0x3a005a, _0x1d47c3);
          } catch (_0x2de109) {
            _0x1f8268 = [6, _0x2de109];
            _0x5537a9 = 0;
          } finally {
            _0x3a5f6f = _0xc1e063 = 0;
          }
        }
        if (_0x1f8268[0] & 5) {
          throw _0x1f8268[1];
        }
        var _0x5a01fc = {
          value: _0x1f8268[0] ? _0x1f8268[1] : undefined,
          done: true
        };
        return _0x5a01fc;
      }
    }
    var _0x4c24a1 = false;
    function _0x1db571(_0x4ebf83) {
      if (_0x4c24a1 || _0x5e239a || !_0x424230()) {
        return false;
      }
      var _0x18741c = _0x213dc5.GetEntityStateValue(_0x4ebf83, "trashCollected");
      return !_0x18741c;
    }
    function _0x4132e8(_0x5b4c19) {
      return _0x15de00.apply(this, arguments);
    }
    function _0x15de00() {
      _0x15de00 = _0x5c0fe4(function (_0x4204fb) {
        var _0x4bc4f1;
        var _0x2621e6;
        var _0xc95146;
        var _0x3af20c;
        return _0x4ada0f(this, function (_0x29fb43) {
          switch (_0x29fb43.label) {
            case 0:
              if (!_0x1db571(_0x4204fb)) {
                return [2];
              }
              _0x4bc4f1 = _0x5803d8(_0x4204fb);
              if (!_0x4bc4f1) {
                return [2];
              }
              _0x4c24a1 = true;
              return [4, _0x11a862.execute("np-jobs:sanitation:pickupBinTrash", _0x4bc4f1, "bin")];
            case 1:
              _0x2621e6 = _0x2483be.apply(undefined, [_0x29fb43.sent(), 2]);
              _0xc95146 = _0x2621e6[0];
              _0x3af20c = _0x2621e6[1];
              _0x213dc5.SetEntityStateValue(_0x4204fb, "trashCollected", true, false);
              _0x4c24a1 = false;
              if (!_0xc95146) {
                return [2, emit("DoLongHudText", _0x3af20c, 2)];
              }
              var _0x782fb3 = {
                id: _0x4bc4f1,
                type: "bin",
                activityId: _0x548eaa
              };
              _0x30e65d(_0x782fb3);
              return [2];
          }
        });
      });
      return _0x15de00.apply(this, arguments);
    }
    _0x10598b.on("np-jobs:sanitation:pickupTrash", function (_0x3d6687, _0x55d55c) {
      var _0x4536fb = _0x2483be(_0x3d6687, 1);
      var _0xaa288a = _0x4536fb[0];
      if (_0xaa288a !== "bin") {
        return;
      }
      _0x4132e8(_0x55d55c);
    });
    setImmediate(function () {
      var _0x11212f = {
        id: "trash_collect",
        label: "Collect Trash",
        eventSDK: "np-jobs:sanitation:pickupTrash",
        parameters: ["bin"]
      };
      var _0x8f60eb = {
        distance: {
          draw: 5.5,
          use: 2.5
        },
        isEnabled: _0x1db571
      };
      _0x121f17.addInteractionByModel("trash_collect", _0x2a1289, [_0x11212f], _0x8f60eb);
    });
    ;
    function _0x313163(_0x39d268, _0xe3c847, _0x4f5030, _0x7af67a, _0x565ecf, _0xd8254d, _0x3c5130) {
      try {
        var _0x1b0a46 = _0x39d268[_0xd8254d](_0x3c5130);
        var _0x36d189 = _0x1b0a46.value;
      } catch (_0x5784af) {
        _0x4f5030(_0x5784af);
        return;
      }
      if (_0x1b0a46.done) {
        _0xe3c847(_0x36d189);
      } else {
        Promise.resolve(_0x36d189).then(_0x7af67a, _0x565ecf);
      }
    }
    function _0x42317d(_0x4309de) {
      return function () {
        var _0x338947 = this;
        var _0x15f290 = arguments;
        return new Promise(function (_0x13d09b, _0x387a96) {
          var _0x216ba6 = _0x4309de.apply(_0x338947, _0x15f290);
          function _0x513dbf(_0x3e6407) {
            _0x313163(_0x216ba6, _0x13d09b, _0x387a96, _0x513dbf, _0x131419, "next", _0x3e6407);
          }
          function _0x131419(_0x4b8f2a) {
            _0x313163(_0x216ba6, _0x13d09b, _0x387a96, _0x513dbf, _0x131419, "throw", _0x4b8f2a);
          }
          _0x513dbf(undefined);
        });
      };
    }
    function _0x3687f2(_0x483582, _0x439af6) {
      var _0x36bd02;
      var _0x2bc4c7;
      var _0x35be17;
      var _0x41fb6c;
      var _0x24fd85 = {
        label: 0,
        sent: function () {
          if (_0x35be17[0] & 1) {
            throw _0x35be17[1];
          }
          return _0x35be17[1];
        },
        trys: [],
        ops: []
      };
      _0x41fb6c = {
        next: _0x4eec44(0),
        throw: _0x4eec44(1),
        return: _0x4eec44(2)
      };
      if (typeof Symbol === "function") {
        _0x41fb6c[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x41fb6c;
      function _0x4eec44(_0x1250ba) {
        return function (_0x3e9076) {
          return _0x47abf8([_0x1250ba, _0x3e9076]);
        };
      }
      function _0x47abf8(_0x5be728) {
        if (_0x36bd02) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x24fd85) {
          try {
            _0x36bd02 = 1;
            if (_0x2bc4c7 && (_0x35be17 = _0x5be728[0] & 2 ? _0x2bc4c7.return : _0x5be728[0] ? _0x2bc4c7.throw || ((_0x35be17 = _0x2bc4c7.return) && _0x35be17.call(_0x2bc4c7), 0) : _0x2bc4c7.next) && !(_0x35be17 = _0x35be17.call(_0x2bc4c7, _0x5be728[1])).done) {
              return _0x35be17;
            }
            _0x2bc4c7 = 0;
            if (_0x35be17) {
              _0x5be728 = [_0x5be728[0] & 2, _0x35be17.value];
            }
            switch (_0x5be728[0]) {
              case 0:
              case 1:
                _0x35be17 = _0x5be728;
                break;
              case 4:
                _0x24fd85.label++;
                var _0x5356f9 = {
                  value: _0x5be728[1],
                  done: false
                };
                return _0x5356f9;
              case 5:
                _0x24fd85.label++;
                _0x2bc4c7 = _0x5be728[1];
                _0x5be728 = [0];
                continue;
              case 7:
                _0x5be728 = _0x24fd85.ops.pop();
                _0x24fd85.trys.pop();
                continue;
              default:
                if (!(_0x35be17 = _0x24fd85.trys, _0x35be17 = _0x35be17.length > 0 && _0x35be17[_0x35be17.length - 1]) && (_0x5be728[0] === 6 || _0x5be728[0] === 2)) {
                  _0x24fd85 = 0;
                  continue;
                }
                if (_0x5be728[0] === 3 && (!_0x35be17 || _0x5be728[1] > _0x35be17[0] && _0x5be728[1] < _0x35be17[3])) {
                  _0x24fd85.label = _0x5be728[1];
                  break;
                }
                if (_0x5be728[0] === 6 && _0x24fd85.label < _0x35be17[1]) {
                  _0x24fd85.label = _0x35be17[1];
                  _0x35be17 = _0x5be728;
                  break;
                }
                if (_0x35be17 && _0x24fd85.label < _0x35be17[2]) {
                  _0x24fd85.label = _0x35be17[2];
                  _0x24fd85.ops.push(_0x5be728);
                  break;
                }
                if (_0x35be17[2]) {
                  _0x24fd85.ops.pop();
                }
                _0x24fd85.trys.pop();
                continue;
            }
            _0x5be728 = _0x439af6.call(_0x483582, _0x24fd85);
          } catch (_0x48321c) {
            _0x5be728 = [6, _0x48321c];
            _0x2bc4c7 = 0;
          } finally {
            _0x36bd02 = _0x35be17 = 0;
          }
        }
        if (_0x5be728[0] & 5) {
          throw _0x5be728[1];
        }
        var _0x43d6c2 = {
          value: _0x5be728[0] ? _0x5be728[1] : undefined,
          done: true
        };
        return _0x43d6c2;
      }
    }
    function _0x210b49() {
      return _0x5ec903.apply(this, arguments);
    }
    function _0x5ec903() {
      _0x5ec903 = _0x42317d(function () {
        return _0x3687f2(this, function (_0x4fbb7b) {
          _0x4995a5("sanitation_worker", ["job_sanitation"]);
          return [2];
        });
      });
      return _0x5ec903.apply(this, arguments);
    }
    ;
    var _0xe51b9f = {
      getClean: {
        coords: new _0x26b14d(-552.43, 5369.49, 70.95),
        label: "Lumberjack - Process Logs",
        sprite: 503
      },
      getCleaned: {
        coords: new _0x26b14d(-574.66, 5311.73, 70.15),
        label: "Lumberjack - Get Cleaned Logs",
        sprite: 504
      },
      getPlanks: {
        coords: new _0x26b14d(-510.31, 5278.65, 80.51),
        label: "Lumberjack - Get Planks",
        sprite: 505
      },
      sand: {
        coords: new _0x26b14d(-487.63, 5285.98, 80.51),
        label: "Lumberjack - Sand Planks",
        sprite: 506
      },
      finish: {
        coords: new _0x26b14d(-28.13, -2659.9, 5.01),
        label: "Lumberjack - Apply Wood Finish",
        sprite: 507
      }
    };
    var _0x2e989c = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.141, -0.2709],
      rot: [-0, 0, -88.0649]
    };
    var _0x139138 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.4598, -0.2709],
      rot: [-0, 0, -89.8678]
    };
    var _0x54cf7e = {
      model: "np_woodwork_log_big_02a",
      coords: [0.1866, 0.3128, -0.1042],
      rot: [-0, 0, -90]
    };
    var _0x2629da = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.7959, -0.2709],
      rot: [-0, 0, -91.3158]
    };
    var _0x2c1ff0 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 1.1025, -0.2709],
      rot: [-0, 0, -89.8678]
    };
    var _0x20bf73 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.6318, -0.1042],
      rot: [-60.2004, 0, -87.806]
    };
    var _0x346775 = {
      model: "np_woodwork_log_big_02a",
      coords: [0.1866, 0.9689, -0.1042],
      rot: [52.3925, 0, -89.8678]
    };
    var _0x12dfa8 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.017, -0.1042],
      rot: [-0, 0, -91.2339]
    };
    var _0x3eda30 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 1.243, -0.1042],
      rot: [13.615, 0, -89.3203]
    };
    var _0x2a8676 = {
      model: "np_woodwork_log_small_01a",
      coords: [0.3785, 0.1462, 0.0547],
      rot: [37.1752, 0, -91.2339]
    };
    var _0x10f20a = {
      model: "np_woodwork_log_small_01a",
      coords: [0.3785, 0.2837, 0.1323],
      rot: [37.1752, 0, -91.2339]
    };
    var _0x19e540 = {
      model: "np_woodwork_log_small_01a",
      coords: [0.281, 0.4878, 0.0333],
      rot: [-63.6125, -0.9681, -86.9223]
    };
    var _0x48eec1 = {
      model: "np_woodwork_log_small_01a",
      coords: [0.4443, 0.8119, 0.0461],
      rot: [-0, 0, -90.0004]
    };
    var _0x80632 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1643, -0.0802, 0.1323],
      rot: [-0, 0, 90]
    };
    var _0x4173ec = {
      model: "np_woodwork_log_big_02a",
      coords: [0.1643, 1.0926, 0.096],
      rot: [-0, 0, 90]
    };
    var _0x27eb7d = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1643, 1.379, 0.1193],
      rot: [-0, 0, 90]
    };
    var _0x51b13a = {
      model: "np_woodwork_log_small_02a",
      coords: [-0.2482, 0.1278, 0.2224],
      rot: [-6.4798, -14.9799, -99.6405]
    };
    var _0x45dfb1 = {
      model: "np_woodwork_log_small_02a",
      coords: [0.3785, 0.4336, 0.2029],
      rot: [37.1752, 0, -91.2339]
    };
    var _0x1bb093 = {
      model: "np_woodwork_log_small_01a",
      coords: [-0.2787, 0.8979, 0.242],
      rot: [0.6489, 7.4052, -111.5043]
    };
    var _0x43254f = {
      model: "np_woodwork_log_small_02a",
      coords: [0.5303, 1.2504, 0.3004],
      rot: [-0, 0, -113.6027]
    };
    var _0x3db519 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 1.1185, -0.2394],
      rot: [-0, 0, 90]
    };
    var _0x4da41b = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.172, 0.8422, -0.2394],
      rot: [-0, 0, 90]
    };
    var _0xc9332b = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.9994, -0.1036],
      rot: [-0, 0, 90]
    };
    var _0x3144c3 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 1.3125, -0.1036],
      rot: [-0, 0, 93.4688]
    };
    var _0x485f5d = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.6748, -0.1036],
      rot: [-0, 0, 90]
    };
    var _0xc1ec8c = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.3433, -0.1036],
      rot: [-0, 0, 86.6133]
    };
    var _0x2c4474 = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.172, 0.1954, -0.2394],
      rot: [-0, 0, 90]
    };
    var _0x440822 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.5419, -0.2394],
      rot: [-0, 0, 90]
    };
    var _0x16598f = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.0257, -0.0956],
      rot: [-0, 0, 84.8879]
    };
    var _0x31d6a6 = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.147, 0.5151, 0.0239],
      rot: [-0, 0, 89.8354]
    };
    var _0x50dcdf = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.8849, 0.0239],
      rot: [-0, 0, 91.7819]
    };
    var _0x1ac934 = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.147, 1.2675, 0.0192],
      rot: [-0, 0, 89.8354]
    };
    var _0x2c3414 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.1637, 0.7097, 0.1803],
      rot: [-0, 0, 89.8354]
    };
    var _0x57d763 = {
      model: "np_woodwork_board_big_01a",
      coords: [0.1471, 0.214, 0.0239],
      rot: [-0, 0, 89.8354]
    };
    var _0x59a097 = {
      model: "np_woodwork_board_big_02a",
      coords: [0.2433, 0.0387, 0.1242],
      rot: [2.2122, -5.9103, -81.8275]
    };
    var _0x45677d = {
      model: "np_woodwork_board_big_01a",
      coords: [0.144, 0.0716, 0.1778],
      rot: [-7.6974, -1.6649, 65.8083]
    };
    var _0x302378 = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.141, -0.2709],
      rot: [-0, 0, -88.0649]
    };
    var _0x2a386c = {
      model: "np_woodwork_log_big_02a",
      coords: [0.1866, 0.4598, -0.2709],
      rot: [-0, 0, -89.8678]
    };
    var _0x571a31 = {
      model: "np_woodwork_log_big_02a",
      coords: [0.1866, 0.3128, -0.1042],
      rot: [-0, 0, -90]
    };
    var _0x1b8540 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.8422, -0.2394],
      rot: [-0, 0, 90]
    };
    var _0x2b2d34 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 1.1185, -0.2394],
      rot: [-0, 0, 90]
    };
    var _0x31292a = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.172, 0.9994, -0.1036],
      rot: [-0, 0, 90]
    };
    var _0x6de3de = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1866, 0.0023, -0.1042],
      rot: [-0, 0, -90]
    };
    var _0x37fd78 = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.6992, -0.0948],
      rot: [-0, 0, 90]
    };
    var _0x4a9ef6 = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.1866, 1.3462, -0.1042],
      rot: [-0, 0, 90]
    };
    var _0xa433e = {
      model: "np_woodwork_log_big_01a",
      coords: [0.1852, 0.155, 0.0608],
      rot: [-0, 0, -90]
    };
    var _0x9f7063 = {
      model: "np_woodwork_log_big_02a",
      coords: [0.1852, 0.4634, 0.0608],
      rot: [-0, 0, -90]
    };
    var _0xf9587e = {
      model: "np_woodwork_log_small_01a",
      coords: [0.4603, 0.3259, 0.2097],
      rot: [-0, 0, -90]
    };
    var _0x12a74d = {
      model: "np_woodwork_beam_big_01a",
      coords: [0.172, 0.8283, 0.0447],
      rot: [-0, 0, 90]
    };
    var _0x294b2a = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.2562, 1.224, 0.056],
      rot: [-0, 0, 90]
    };
    var _0x9759da = {
      model: "np_woodwork_log_small_02a",
      coords: [0.0297, -0.0856, 0.1741],
      rot: [4.818, -9.1737, 86.1308]
    };
    var _0x4f3717 = {
      model: "np_woodwork_log_small_01a",
      coords: [0.6418, -0.1059, 0.1407],
      rot: [1.4981, -12.8312, -80.057]
    };
    var _0x1806cb = {
      model: "np_woodwork_log_small_01a",
      coords: [0.4384, 0.6652, 0.2091],
      rot: [-0.634, -3.2818, -100.9404]
    };
    var _0x159573 = {
      model: "np_woodwork_beam_big_02a",
      coords: [0.172, 1.0135, 0.1989],
      rot: [-0, 0, 90]
    };
    var _0x3edc6c = {
      model: "np_woodwork_board_big_02a",
      coords: [0.1693, 1.3745, 0.2086],
      rot: [0.2872, -3.0592, 95.3653]
    };
    var _0x4f4cc9 = {
      model: "np_woodwork_board_big_01a",
      coords: [0.2196, 0.8381, 0.3161],
      rot: [-0.8907, -1.9723, 63.2474]
    };
    var _0x46e941 = {
      logs: [[_0x2e989c, _0x139138, _0x54cf7e], [_0x2629da, _0x2c1ff0, _0x20bf73, _0x346775], [_0x12dfa8, _0x3eda30, _0x2a8676, _0x10f20a, _0x19e540, _0x48eec1], [_0x80632, _0x4173ec, _0x27eb7d, _0x51b13a, _0x45dfb1, _0x1bb093, _0x43254f]],
      planks: [[_0x3db519, _0x4da41b, _0xc9332b], [_0x3144c3, _0x485f5d, _0xc1ec8c, _0x2c4474, _0x440822], [_0x16598f, _0x31d6a6, _0x50dcdf], [_0x1ac934, _0x2c3414, _0x57d763, _0x59a097, _0x45677d]],
      combined: [[_0x302378, _0x2a386c, _0x571a31, _0x1b8540, _0x2b2d34, _0x31292a], [_0x6de3de, _0x37fd78, _0x4a9ef6], [_0xa433e, _0x9f7063, _0xf9587e, _0x12a74d, _0x294b2a], [_0x9759da, _0x4f3717, _0x1806cb, _0x159573, _0x3edc6c, _0x4f4cc9]]
    };
    var _0x249d64 = _0x46e941;
    var _0x506214 = {
      model: "np_hunting_deer_body",
      coords: [0.3201, 1.2039, -0.1432],
      rot: [-0.2454, -3.0467, -179.0344]
    };
    var _0x7d3dd7 = {
      model: "np_hunting_deer_body",
      coords: [0.5437, 0.6179, -0.1156],
      rot: [-0.173, -4.144, -0.5071]
    };
    var _0x41eaf6 = {
      model: "np_hunting_deer_leg",
      coords: [0.8086, 1.0312, 0.1006],
      rot: [-330.2963, 83.2204, 284.3629]
    };
    var _0x384680 = {
      model: "np_hunting_deer_body",
      coords: [0.5608, 0.0756, -0.1156],
      rot: [-0, -4.1476, 1.885]
    };
    var _0x475f74 = {
      model: "np_hunting_deer_body",
      coords: [-0.5424, 0.7185, -0.1257],
      rot: [7.7231, 0.1288, -266.84]
    };
    var _0x2d93ca = {
      model: "np_hunting_deer_leg",
      coords: [-0.3414, 0.406, 0.1424],
      rot: [-413.0569, 69.783, 349.6316]
    };
    var _0x4f653c = {
      model: "np_hunting_deer_head",
      coords: [0.6705, 0.2896, 0.3206],
      rot: [-53.5525, 37.2223, -31.412]
    };
    var _0x153e9e = {
      model: "np_hunting_deer_head",
      coords: [-0.3105, 0.8838, 0.3272],
      rot: [23.5088, -100.295, 16.2487]
    };
    var _0x4853b3 = {
      model: "np_deer_pelt",
      coords: [0.6603, 0.1521, -0.2229],
      rot: [0, 0, 0]
    };
    var _0x1367f6 = {
      model: "np_deer_pelt",
      coords: [0.6603, 0.4617, -0.2229],
      rot: [-40.5946, 0, 0]
    };
    var _0x28b949 = {
      model: "np_deer_pelt",
      coords: [0.6603, -0.0218, 0.003],
      rot: [0.003, 76.172, 1.0763, 0.2649]
    };
    var _0x140770 = {
      model: "np_deer_pelt",
      coords: [0.6671, 0.8476, -0.1962],
      rot: [86.0525, 0, -0]
    };
    var _0x373889 = {
      model: "np_deer_pelt",
      coords: [0.6648, 1.1108, -0.2038],
      rot: [262.9992, 0, -0]
    };
    var _0x2ed676 = {
      model: "np_deer_pelt",
      coords: [0.6603, 0.671, -0.033],
      rot: [81.3568, 0, -0]
    };
    var _0x5e2890 = {
      model: "np_deer_pelt",
      coords: [0.6603, 0.9939, 0.003],
      rot: [76.1745, 0, -0]
    };
    var _0x202349 = {
      model: "np_deer_pelt",
      coords: [0.6652, 1.2713, 0.0388],
      rot: [-76.1496, -3.4042, -179.1612]
    };
    var _0x13b4f8 = {
      model: "np_deer_pelt",
      coords: [0.6603, 0.4493, 0.1729],
      rot: [-76.1557, 2.9556, -180.728]
    };
    var _0x3ec8f8 = {
      model: "np_deer_pelt",
      coords: [0.6603, 0.7559, 0.1729],
      rot: [-76.1557, 2.9556, -180.728]
    };
    var _0x28c792 = {
      model: "np_deer_pelt",
      coords: [-0.0041, 0.7099, -0.2229],
      rot: [0, -40.5193, 94.1766]
    };
    var _0x3bee32 = {
      model: "np_deer_pelt",
      coords: [-0.3189, 0.4641, -0.2229],
      rot: [0.7122, 39.2454, 89.5974]
    };
    var _0x4979e9 = {
      model: "np_deer_pelt",
      coords: [-0.6334, 0.9499, -0.2229],
      rot: [0, 39.2508, 90.7231]
    };
    var _0xf2b89c = {
      model: "np_deer_pelt",
      coords: [-0.1277, 0.2728, 0.012],
      rot: [5.1321, 41.4922, 86.3206]
    };
    var _0x367643 = {
      model: "np_deer_pelt",
      coords: [-0.497, 0.1848, -0.1066],
      rot: [28.5044, 53.3733, 75.2107]
    };
    var _0x90fd4b = {
      model: "np_deer_pelt",
      coords: [-0.4154, 1.0389, 0.0124],
      rot: [-68.7204, -55.5109, -148.3307]
    };
    var _0x28a62c = {
      model: "np_deer_pelt",
      coords: [-0.1658, 1.0725, 0.0723],
      rot: [22.9844, 48.3951, -325.1112]
    };
    var _0x18cd60 = {
      model: "np_hunting_deer_body",
      coords: [0.428, 0.6417, -0.179],
      rot: [0, 0, 0]
    };
    var _0x5dc75c = {
      model: "np_deer_pelt",
      coords: [0.5621, 1.1108, -0.2538],
      rot: [262.9992, 0, -0]
    };
    var _0x2a7296 = {
      model: "np_deer_pelt",
      coords: [0.4668, 1.0622, -0.0227],
      rot: [81.3568, 0, -0]
    };
    var _0xd20a7a = {
      model: "np_hunting_deer_body",
      coords: [0.5427, 0.1081, -0.179],
      rot: [0, 0, 0]
    };
    var _0x4d6d27 = {
      model: "np_deer_pelt",
      coords: [0.6652, 1.313, -0.0112],
      rot: [-76.1496, -3.4042, -179.1612]
    };
    var _0x113c20 = {
      model: "np_hunting_deer_leg",
      coords: [0, 0.8473, 0.0543],
      rot: [-46.948, 43.8031, -22.1534]
    };
    var _0xc6fba1 = {
      model: "np_deer_pelt",
      coords: [-0.2565, 0.8077, -0.301],
      rot: [20.9411, 47.7285, -301.4365]
    };
    var _0x2b397b = {
      model: "np_hunting_deer_head",
      coords: [0.637, 0.3363, 0.2845],
      rot: [-48.9285, 35.9657, -19.3099]
    };
    var _0x989a08 = {
      model: "np_deer_pelt",
      coords: [-0.639, 0.9516, -0.2676],
      rot: [2.593, 36.5519, 87.8398]
    };
    var _0x419392 = {
      model: "np_deer_pelt",
      coords: [-0.3899, 0.9935, -0.0575],
      rot: [-68.7204, -55.5109, -148.3307]
    };
    var _0x57a796 = {
      model: "np_hunting_deer_head",
      coords: [-0.3834, 0.3493, 0.0417],
      rot: [85.2905, 132.3854, -272.1532]
    };
    var _0x86f21f = {
      meat: [[_0x506214], [_0x7d3dd7, _0x41eaf6, _0x384680], [_0x475f74, _0x2d93ca], [_0x4f653c, _0x153e9e]],
      fur: [[_0x4853b3, _0x1367f6, {
        model: "np_deer_pelt",
        coords: [0.6603, 0.3235, 0.003],
        rot: [76.1745, 0, 0]
      }, _0x28b949], [_0x140770, _0x373889, _0x2ed676, _0x5e2890, _0x202349], [{
        model: "np_deer_pelt",
        coords: [0.6603, 0.1342, 0.1932],
        rot: [76.1698, 1.4778, 0.3638]
      }, _0x13b4f8, _0x3ec8f8, _0x28c792, _0x3bee32], [_0x4979e9, _0xf2b89c, _0x367643, _0x90fd4b, _0x28a62c]],
      combined: [[_0x18cd60, _0x5dc75c, _0x2a7296], [_0xd20a7a, _0x4d6d27], [_0x113c20, _0xc6fba1, _0x2b397b], [_0x989a08, _0x419392, _0x57a796]]
    };
    var _0x8376c2 = _0x86f21f;
    ;
    function _0x488fdf() {}
    setImmediate(function () {
      _0x121f17.addInteraction("lumberjack:clean", _0xe51b9f.getClean.coords, [{
        id: "lumberjack:clean",
        label: "Clean Logs",
        eventSDK: "np-jobs:lumberjack:openClean",
        parameters: {}
      }], {
        distance: {
          draw: 500,
          use: 5
        },
        isToggled: true,
        skipLos: true,
        isEnabled: function () {
          return _0x56b6ba() === "lumberjack";
        }
      });
      _0x121f17.addInteraction("lumberjack:getCleaned", _0xe51b9f.getCleaned.coords, [{
        id: "lumberjack:getCleaned",
        label: "Get cleaned logs",
        eventSDK: "np-jobs:lumberjack:openGetClean",
        parameters: {}
      }, {
        id: "lumberjack:logsToPlanks",
        label: "Logs to Planks",
        eventSDK: "np-jobs:lumberjack:logsToPlanks",
        parameters: {}
      }], {
        distance: {
          draw: 500,
          use: 5
        },
        isToggled: true,
        skipLos: true,
        isEnabled: function () {
          return _0x56b6ba() === "lumberjack";
        }
      });
      _0x121f17.addInteraction("lumberjack:getPlanks", _0xe51b9f.getPlanks.coords, [{
        id: "lumberjack:getPlanks",
        label: "Get planks",
        eventSDK: "np-jobs:lumberjack:getPlanks",
        parameters: {}
      }], {
        distance: {
          draw: 500,
          use: 5
        },
        isToggled: true,
        skipLos: true,
        isEnabled: function () {
          return _0x56b6ba() === "lumberjack";
        }
      });
      _0x121f17.addInteraction("lumberjack:sand", _0xe51b9f.sand.coords, [{
        id: "lumberjack:sand",
        label: "Sand",
        eventSDK: "np-jobs:lumberjack:sand",
        parameters: {}
      }, {
        id: "lumberjack:sand",
        label: "Get sanded planks",
        eventSDK: "np-jobs:lumberjack:getSanded",
        parameters: {}
      }], {
        distance: {
          draw: 500,
          use: 5
        },
        isToggled: true,
        skipLos: true,
        isEnabled: function () {
          return _0x56b6ba() === "lumberjack";
        }
      });
      _0x121f17.addInteraction("lumberjack:finish", _0xe51b9f.finish.coords, [{
        id: "lumberjack:finish",
        label: "Apply wood finish",
        eventSDK: "np-jobs:lumberjack:finish",
        parameters: {}
      }, {
        id: "lumberjack:finish",
        label: "Get finished planks",
        eventSDK: "np-jobs:lumberjack:getFinished",
        parameters: {}
      }], {
        distance: {
          draw: 500,
          use: 5
        },
        isToggled: true,
        skipLos: true,
        isEnabled: function () {
          return _0x56b6ba() === "lumberjack";
        }
      });
      var _0xe73f5d = ["prop_lumberjack_tree_s", "prop_lumberjack_tree_a_m", "prop_lumberjack_tree_b_m", "prop_lumberjack_tree_a_l", "prop_lumberjack_tree_b_l"];
      _0x121f17.addInteractionByModel("lumberjack:tree:medium", _0xe73f5d, [], {
        flag: [],
        distance: {
          draw: 500,
          use: 5
        },
        isToggled: true,
        isEnabled: function () {
          return _0x56b6ba() === "lumberjack";
        },
        skipLos: true,
        onHover: {
          event: "lumberjack:trees:hover",
          parameters: {}
        },
        offset: [0, 0, 1]
      });
    });
    ;
    var _0x42c1df = 10;
    var _0x597bc1 = {
      coords: [-533.0241, 5232.419, 78.04932],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x42e93f = {
      coords: [-533.0241, 5232.419, 78.04932],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x6f3b2 = {
      coords: [-533.0241, 5232.419, 78.04932],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x425f43 = {
      coords: [-549.7684, 5225.637, 74.40001],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x129f35 = {
      coords: [-610.4636, 5243.29, 70.89495],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0xbe6bf9 = {
      coords: [-626.639, 5235.579, 73.53409],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x46efd7 = {
      coords: [-615.1752, 5191.193, 90.5518],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x2b0508 = {
      coords: [-563.9933, 5175.367, 97.60523],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x5307c9 = {
      coords: [-554.9098, 5181.466, 95.6798],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x57fd8b = {
      coords: [-572.5436, 5147.082, 105.5383],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x351431 = {
      coords: [-621.5879, 5147.348, 109.7678],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x8a4b0a = {
      coords: [-647.5836, 5149.276, 114.0346],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x73f5ce = {
      coords: [-676.9713, 5183.662, 104.6053],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x31d164 = {
      coords: [-679.4445, 5170.439, 107.2553],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2b6db2 = {
      coords: [-693.2548, 5198.487, 101.336],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x4fac88 = {
      coords: [-681.7182, 5217.234, 94.31977],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3f2649 = {
      coords: [-731.4064, 5236.307, 96.71639],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x59f66e = {
      coords: [-750.4053, 5235.176, 96.74647],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x23718b = {
      coords: [-783.0895, 5244.052, 96.96616],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x3a4f8e = {
      coords: [-794.345, 5220.743, 104.3835],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x6727f = {
      coords: [-774.9187, 5201.017, 112.8307],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x9397ef = {
      coords: [-785.6127, 5179.307, 123.9017],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x175ef7 = {
      coords: [-796.5718, 5172.778, 129.9497],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x43861a = {
      coords: [-780.9235, 5148.588, 130.8081],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x300bc3 = {
      coords: [-745.1706, 5137.747, 127.2476],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0xad87ca = {
      coords: [-731.2798, 5139.263, 119.5841],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0xe18bd8 = {
      coords: [-708.4751, 5137.168, 118.5429],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3730c0 = {
      coords: [-705.2882, 5152.396, 114.5372],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x40994c = {
      coords: [-688.0153, 5109.744, 133.9302],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4505dd = {
      coords: [-669.6415, 5115.88, 129.4151],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x32bf9f = {
      coords: [-647.628, 5102.918, 129.7841],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x422336 = {
      coords: [-623.2059, 5106.835, 126.1773],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x31d52d = {
      coords: [-610.7714, 5139.828, 112.4355],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4a35ab = {
      coords: [-572.6792, 5114.756, 116.4724],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x4cd4f2 = {
      coords: [-567.9504, 5115.231, 115.271],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x1c3b79 = {
      coords: [-545.4021, 5107.964, 113.2],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4f2ee6 = {
      coords: [-537.0339, 5101.939, 114.3623],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x274809 = {
      coords: [-526.108, 5109.058, 110.3067],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x5c71f2 = {
      coords: [-536.6732, 5048.677, 128.2262],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x515956 = {
      coords: [-509.8519, 5036.591, 139.1917],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x4ce35e = {
      coords: [-504.2481, 5061.736, 133.4578],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2cd24c = {
      coords: [-486.1361, 5095.387, 120.5811],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x67390a = {
      coords: [-470.425, 5114.061, 118.298],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0xa06de = {
      coords: [-443.7121, 5093.829, 133.3646],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x233d52 = {
      coords: [-457.2676, 5076.589, 135.2982],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x267d03 = {
      coords: [-418.4106, 5101.798, 134.6462],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x370410 = {
      coords: [-403.0612, 5136.409, 118.9606],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x15dc09 = {
      coords: [-456.6845, 5145.28, 105.613],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0xc83e40 = {
      coords: [-470.6184, 5175.244, 95.43956],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3e3e6e = {
      coords: [-447.1844, 5184.225, 108.3261],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x49f7f5 = {
      coords: [-412.8944, 5212.855, 126.5873],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x5e6266 = {
      coords: [-432.6586, 5234.703, 120.3319],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x468d22 = {
      coords: [-412.2403, 5271.647, 125],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3f076c = {
      coords: [-404.919, 5297.353, 119.9205],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x2bf949 = {
      coords: [-381.5384, 5283.79, 130.708],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x26401d = {
      coords: [-349.9629, 5265.521, 154.6059],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x55875c = {
      coords: [-308.1098, 5278.954, 172.0645],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4d9dd6 = {
      coords: [-308.1098, 5278.954, 172.0645],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x1ce467 = {
      coords: [-304.5515, 5317.642, 168.4377],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4b6055 = {
      coords: [-297.899, 5319.049, 173.0546],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x32feae = {
      coords: [-316.688, 5322.041, 163.8272],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x53d024 = {
      coords: [-347.0544, 5306.545, 138.2504],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x35bcf7 = {
      coords: [-354.5252, 5342.961, 130.9863],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3078a5 = {
      coords: [-371.0732, 5374.465, 120.6033],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x4647ce = {
      coords: [-396.7314, 5364.5, 111.3137],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x5cbfe5 = {
      coords: [-410.5267, 5361.409, 108.1724],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x55e929 = {
      coords: [-384.0824, 5413.675, 102.7409],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x19f275 = {
      coords: [-412.1893, 5463.725, 87.69926],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x35d463 = {
      coords: [-368.9183, 5489.154, 132.5008],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4abdc7 = {
      coords: [-345.2885, 5522.195, 158.2336],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x100cee = {
      coords: [-342.1321, 5501.601, 155.6988],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3bf843 = {
      coords: [-309.2679, 5530.449, 178.2264],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x36d947 = {
      coords: [-269.3416, 5529.913, 191.2529],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0xa0c103 = {
      coords: [-243.5156, 5521.208, 209.663],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x61b382 = {
      coords: [-207.5652, 5478.047, 184.0802],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x1acafb = {
      coords: [-208.4907, 5394.685, 234.6538],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x563827 = {
      coords: [-490.8322, 5389.251, 76.62089],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x1df4ab = {
      coords: [-462.9597, 5396.421, 78.30272],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x58485a = {
      coords: [-448.1007, 5403.104, 78.33337],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x591931 = {
      coords: [-511.3619, 5400.315, 73.96419],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x1a8701 = {
      coords: [-512.3774, 5368.907, 72.80805],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x593df2 = {
      coords: [-532.9822, 5401.164, 70.08067],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x2f3eb0 = {
      coords: [-526.0685, 5454.6, 71.50775],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x369975 = {
      coords: [-534.3738, 5449.306, 69.14627],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x1fbf2c = {
      coords: [-516.1088, 5449.89, 74.07529],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x66313d = {
      coords: [-483.8195, 5485.604, 82.12525],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x41f675 = {
      coords: [-464.357, 5477.582, 83.20703],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x98008c = {
      coords: [-491.9727, 5521.198, 75.63767],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x619912 = {
      coords: [-515.6085, 5494.653, 70.47828],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x3a059c = {
      coords: [-536.3734, 5558.658, 60.29284],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x36d283 = {
      coords: [-508.5266, 5608.792, 63.30936],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2e603a = {
      coords: [-477.8803, 5620.608, 64.17537],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x28133c = {
      coords: [-533.6964, 5638.166, 49.67779],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x498e2d = {
      coords: [-482.2548, 5666.482, 58.35204],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x5ca185 = {
      coords: [-469.641, 5719.019, 68.04617],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x415035 = {
      coords: [-574.984, 5598.165, 42.41106],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0xb87ed7 = {
      coords: [-588.9465, 5559.654, 47.05266],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x19ffd4 = {
      coords: [-606.2779, 5536.606, 46.64916],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x4c0f7d = {
      coords: [-615.9483, 5540.977, 44.46906],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2638f9 = {
      coords: [-619.5182, 5477.081, 52.00388],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0xaf4053 = {
      coords: [-655.1204, 5472.9, 50.95716],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x150e08 = {
      coords: [-688.3453, 5455.582, 45.78496],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x50e077 = {
      coords: [-647.1627, 5429.278, 48.64663],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x4ba782 = {
      coords: [-619.8032, 5400.228, 49.49516],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x19ffe6 = {
      coords: [-622.7793, 5386.264, 54.69902],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x58cfd1 = {
      coords: [-633.5029, 5351.566, 50.90854],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0xdf9141 = {
      coords: [-688.6064, 5381.031, 57.1683],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x26db16 = {
      coords: [-730.3554, 5375.367, 57.03505],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x1122ef = {
      coords: [-744.6347, 5354.532, 59.96453],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2fcfc5 = {
      coords: [-719.3491, 5351.012, 63.97101],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x38f288 = {
      coords: [-768.8539, 5353.266, 56.62178],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x567737 = {
      coords: [-825.0564, 5350.398, 59.96478],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x5d3f40 = {
      coords: [-823.3613, 5332.935, 73.22174],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x304a8a = {
      coords: [-889.9935, 5343.919, 58.86121],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x562b90 = {
      coords: [-889.9935, 5343.919, 58.86121],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x44af80 = {
      coords: [-943.5627, 5340.028, 64.31651],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x1bf1e1 = {
      coords: [-941.5255, 5323.889, 67.70086],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2d6dce = {
      coords: [-952.0927, 5284.85, 79.51371],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x1cf466 = {
      coords: [-960.4422, 5222.798, 108.5485],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x1f7638 = {
      coords: [-967.7835, 5221.931, 109.2087],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x59af17 = {
      coords: [-870.1626, 5213.991, 106.0396],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x372763 = {
      coords: [-845.5635, 5204.076, 109.1253],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x46f81d = {
      coords: [-875.2475, 5157.877, 149.3262],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x281118 = {
      coords: [-908.3567, 5134.491, 158.7684],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x39d138 = {
      coords: [-920.1871, 5087.569, 164.6645],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x418374 = {
      coords: [-910.0422, 5090.281, 162.0914],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x2506ed = {
      coords: [-939.2368, 5021.184, 174.6281],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x88230a = {
      coords: [-785.1966, 4969.766, 208.5401],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x30f4dc = {
      coords: [-704.1971, 4980.379, 179.9412],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x1c6c7c = {
      coords: [-654.7186, 4926.789, 179.2639],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x529c73 = {
      coords: [-563.7581, 4950.407, 156.2035],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x28e4ba = {
      coords: [-544.3616, 4936.243, 154.8953],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_a_l"
    };
    var _0x111ffc = {
      coords: [-583.6925, 4922.442, 170.6332],
      rotation: [0, 0, 0],
      model: "prop_lumberjack_tree_b_l"
    };
    var _0x257030 = [_0x597bc1, _0x42e93f, _0x6f3b2, _0x425f43, _0x129f35, _0xbe6bf9, _0x46efd7, _0x2b0508, _0x5307c9, _0x57fd8b, _0x351431, _0x8a4b0a, _0x73f5ce, _0x31d164, _0x2b6db2, _0x4fac88, _0x3f2649, _0x59f66e, _0x23718b, _0x3a4f8e, _0x6727f, _0x9397ef, _0x175ef7, _0x43861a, _0x300bc3, _0xad87ca, _0xe18bd8, _0x3730c0, _0x40994c, _0x4505dd, _0x32bf9f, _0x422336, _0x31d52d, _0x4a35ab, _0x4cd4f2, _0x1c3b79, _0x4f2ee6, _0x274809, _0x5c71f2, _0x515956, _0x4ce35e, _0x2cd24c, _0x67390a, _0xa06de, _0x233d52, _0x267d03, _0x370410, _0x15dc09, _0xc83e40, _0x3e3e6e, _0x49f7f5, _0x5e6266, _0x468d22, _0x3f076c, _0x2bf949, _0x26401d, _0x55875c, _0x4d9dd6, _0x1ce467, _0x4b6055, _0x32feae, _0x53d024, _0x35bcf7, _0x3078a5, _0x4647ce, _0x5cbfe5, _0x55e929, _0x19f275, _0x35d463, _0x4abdc7, _0x100cee, _0x3bf843, _0x36d947, _0xa0c103, _0x61b382, _0x1acafb, _0x563827, _0x1df4ab, _0x58485a, _0x591931, _0x1a8701, _0x593df2, _0x2f3eb0, _0x369975, _0x1fbf2c, _0x66313d, _0x41f675, _0x98008c, _0x619912, _0x3a059c, _0x36d283, _0x2e603a, _0x28133c, _0x498e2d, _0x5ca185, _0x415035, _0xb87ed7, _0x19ffd4, _0x4c0f7d, _0x2638f9, _0xaf4053, _0x150e08, _0x50e077, _0x4ba782, _0x19ffe6, _0x58cfd1, _0xdf9141, _0x26db16, _0x1122ef, _0x2fcfc5, _0x38f288, _0x567737, _0x5d3f40, _0x304a8a, _0x562b90, _0x44af80, _0x1bf1e1, _0x2d6dce, _0x1cf466, _0x1f7638, _0x59af17, _0x372763, _0x46f81d, _0x281118, _0x39d138, _0x418374, _0x2506ed, _0x88230a, _0x30f4dc, _0x1c6c7c, _0x529c73, _0x28e4ba, _0x111ffc];
    ;
    function _0x9d731b(_0x3eb1d5, _0x4816eb) {
      if (_0x4816eb == null || _0x4816eb > _0x3eb1d5.length) {
        _0x4816eb = _0x3eb1d5.length;
      }
      for (var _0x1505b4 = 0, _0x50ec1c = new Array(_0x4816eb); _0x1505b4 < _0x4816eb; _0x1505b4++) {
        _0x50ec1c[_0x1505b4] = _0x3eb1d5[_0x1505b4];
      }
      return _0x50ec1c;
    }
    function _0xb78046(_0x3c92e1) {
      if (Array.isArray(_0x3c92e1)) {
        return _0x3c92e1;
      }
    }
    function _0x30de7c(_0x9305f, _0x275357, _0x5baf53, _0x4f525b, _0x3f6484, _0x36e82a, _0x2b7e96) {
      try {
        var _0x10b357 = _0x9305f[_0x36e82a](_0x2b7e96);
        var _0x4ff8ad = _0x10b357.value;
      } catch (_0x19fa62) {
        _0x5baf53(_0x19fa62);
        return;
      }
      if (_0x10b357.done) {
        _0x275357(_0x4ff8ad);
      } else {
        Promise.resolve(_0x4ff8ad).then(_0x4f525b, _0x3f6484);
      }
    }
    function _0x4e3aae(_0x3aecea) {
      return function () {
        var _0x155225 = this;
        var _0x50a324 = arguments;
        return new Promise(function (_0x32a6bd, _0x289131) {
          var _0x1b42d2 = _0x3aecea.apply(_0x155225, _0x50a324);
          function _0x14be16(_0x2d9abc) {
            _0x30de7c(_0x1b42d2, _0x32a6bd, _0x289131, _0x14be16, _0x143098, "next", _0x2d9abc);
          }
          function _0x143098(_0x325024) {
            _0x30de7c(_0x1b42d2, _0x32a6bd, _0x289131, _0x14be16, _0x143098, "throw", _0x325024);
          }
          _0x14be16(undefined);
        });
      };
    }
    function _0x36e3b3(_0x5b877f, _0x4bcb57) {
      var _0x1567d0 = _0x5b877f == null ? null : typeof Symbol !== "undefined" && _0x5b877f[Symbol.iterator] || _0x5b877f["@@iterator"];
      if (_0x1567d0 == null) {
        return;
      }
      var _0x3551d4 = [];
      var _0x2bbfe2 = true;
      var _0x238793 = false;
      var _0xfb20dc;
      var _0x5edadb;
      try {
        for (_0x1567d0 = _0x1567d0.call(_0x5b877f); !(_0x2bbfe2 = (_0xfb20dc = _0x1567d0.next()).done); _0x2bbfe2 = true) {
          _0x3551d4.push(_0xfb20dc.value);
          if (_0x4bcb57 && _0x3551d4.length === _0x4bcb57) {
            break;
          }
        }
      } catch (_0x2cd159) {
        _0x238793 = true;
        _0x5edadb = _0x2cd159;
      } finally {
        try {
          if (!_0x2bbfe2 && _0x1567d0.return != null) {
            _0x1567d0.return();
          }
        } finally {
          if (_0x238793) {
            throw _0x5edadb;
          }
        }
      }
      return _0x3551d4;
    }
    function _0x19d92b() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x315dd8(_0x225b7c, _0x22e2ba) {
      return _0xb78046(_0x225b7c) || _0x36e3b3(_0x225b7c, _0x22e2ba) || _0x53c39d(_0x225b7c, _0x22e2ba) || _0x19d92b();
    }
    function _0x53c39d(_0x5d9e02, _0x54cad7) {
      if (!_0x5d9e02) {
        return;
      }
      if (typeof _0x5d9e02 === "string") {
        return _0x9d731b(_0x5d9e02, _0x54cad7);
      }
      var _0xc2807a = Object.prototype.toString.call(_0x5d9e02).slice(8, -1);
      if (_0xc2807a === "Object" && _0x5d9e02.constructor) {
        _0xc2807a = _0x5d9e02.constructor.name;
      }
      if (_0xc2807a === "Map" || _0xc2807a === "Set") {
        return Array.from(_0xc2807a);
      }
      if (_0xc2807a === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0xc2807a)) {
        return _0x9d731b(_0x5d9e02, _0x54cad7);
      }
    }
    function _0x4a17f9(_0x20841b, _0x264357) {
      var _0x90a488;
      var _0x285d51;
      var _0x46d47d;
      var _0x7097df;
      var _0x54f7c7 = {
        label: 0,
        sent: function () {
          if (_0x46d47d[0] & 1) {
            throw _0x46d47d[1];
          }
          return _0x46d47d[1];
        },
        trys: [],
        ops: []
      };
      _0x7097df = {
        next: _0x5dd745(0),
        throw: _0x5dd745(1),
        return: _0x5dd745(2)
      };
      if (typeof Symbol === "function") {
        _0x7097df[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x7097df;
      function _0x5dd745(_0xe651d4) {
        return function (_0x1db626) {
          return _0x381d6a([_0xe651d4, _0x1db626]);
        };
      }
      function _0x381d6a(_0x538550) {
        if (_0x90a488) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x54f7c7) {
          try {
            _0x90a488 = 1;
            if (_0x285d51 && (_0x46d47d = _0x538550[0] & 2 ? _0x285d51.return : _0x538550[0] ? _0x285d51.throw || ((_0x46d47d = _0x285d51.return) && _0x46d47d.call(_0x285d51), 0) : _0x285d51.next) && !(_0x46d47d = _0x46d47d.call(_0x285d51, _0x538550[1])).done) {
              return _0x46d47d;
            }
            _0x285d51 = 0;
            if (_0x46d47d) {
              _0x538550 = [_0x538550[0] & 2, _0x46d47d.value];
            }
            switch (_0x538550[0]) {
              case 0:
              case 1:
                _0x46d47d = _0x538550;
                break;
              case 4:
                _0x54f7c7.label++;
                var _0x407a74 = {
                  value: _0x538550[1],
                  done: false
                };
                return _0x407a74;
              case 5:
                _0x54f7c7.label++;
                _0x285d51 = _0x538550[1];
                _0x538550 = [0];
                continue;
              case 7:
                _0x538550 = _0x54f7c7.ops.pop();
                _0x54f7c7.trys.pop();
                continue;
              default:
                if (!(_0x46d47d = _0x54f7c7.trys, _0x46d47d = _0x46d47d.length > 0 && _0x46d47d[_0x46d47d.length - 1]) && (_0x538550[0] === 6 || _0x538550[0] === 2)) {
                  _0x54f7c7 = 0;
                  continue;
                }
                if (_0x538550[0] === 3 && (!_0x46d47d || _0x538550[1] > _0x46d47d[0] && _0x538550[1] < _0x46d47d[3])) {
                  _0x54f7c7.label = _0x538550[1];
                  break;
                }
                if (_0x538550[0] === 6 && _0x54f7c7.label < _0x46d47d[1]) {
                  _0x54f7c7.label = _0x46d47d[1];
                  _0x46d47d = _0x538550;
                  break;
                }
                if (_0x46d47d && _0x54f7c7.label < _0x46d47d[2]) {
                  _0x54f7c7.label = _0x46d47d[2];
                  _0x54f7c7.ops.push(_0x538550);
                  break;
                }
                if (_0x46d47d[2]) {
                  _0x54f7c7.ops.pop();
                }
                _0x54f7c7.trys.pop();
                continue;
            }
            _0x538550 = _0x264357.call(_0x20841b, _0x54f7c7);
          } catch (_0x300f09) {
            _0x538550 = [6, _0x300f09];
            _0x285d51 = 0;
          } finally {
            _0x90a488 = _0x46d47d = 0;
          }
        }
        if (_0x538550[0] & 5) {
          throw _0x538550[1];
        }
        var _0x2d0d14 = {
          value: _0x538550[0] ? _0x538550[1] : undefined,
          done: true
        };
        return _0x2d0d14;
      }
    }
    function _0xe4e41a() {}
    function _0x56cbcc(_0x27ca08, _0x148f59, _0x1ed091) {
      var _0x379b9a = Math.atan2(_0x27ca08, _0x1ed091) * 57.295779513082;
      var _0x37a2be = Math.atan2(_0x148f59, Math.sqrt(_0x27ca08 * _0x27ca08 + _0x1ed091 * _0x1ed091)) * 57.295779513082;
      return [_0x379b9a, _0x37a2be, 0];
    }
    function _0x16cf59(_0x4aaffb, _0x2c9610) {
      var _0x9166ed = _0x4aaffb;
      var _0x5bbee5 = GetEntityModel(_0x9166ed);
      var _0x3cd4bd = _0x315dd8(GetModelDimensions(_0x5bbee5), 2);
      var _0x2691fd = _0x3cd4bd[0];
      var _0x4215ff = _0x3cd4bd[1];
      var _0x48cc9c = GetEntityRotation(_0x9166ed, 2);
      var _0x162572 = _0x48cc9c[0];
      var _0x4bb3ca = GetGameTimer();
      if (_0x2c9610) {
        var _0x3b095b = GetOffsetFromEntityInWorldCoords(_0x9166ed, 0, -_0x4215ff[2], 0);
        var _0x26cc0c = _0x56cbcc(_0x3b095b[0], _0x3b095b[1], _0x3b095b[2]);
        SetEntityRotation(_0x9166ed, _0x26cc0c[0], _0x48cc9c[1], _0x48cc9c[2], 2, true);
      } else {
        var _0x2d4ef6 = setTick(_0x4e3aae(function () {
          var _0x398904;
          var _0x322404;
          var _0x10a9e9;
          var _0x1ca7b5;
          var _0x4c81e6;
          var _0x191f3a;
          var _0x4cf2e6;
          return _0x4a17f9(this, function (_0xf3ef63) {
            _0x398904 = GetGameTimer();
            _0x322404 = _0x398904 - _0x4bb3ca;
            _0x162572 += _0x322404 / 500;
            _0x10a9e9 = GetOffsetFromEntityInWorldCoords(_0x9166ed, 0, 0, _0x4215ff[2]);
            _0x1ca7b5 = _0x315dd8(GetGroundZFor_3dCoord(_0x10a9e9[0], _0x10a9e9[1], _0x10a9e9[2], false), 2);
            _0x4c81e6 = _0x1ca7b5[0];
            _0x191f3a = _0x1ca7b5[1];
            _0x4cf2e6 = _0x322404 / 5 * (_0x162572 / 250);
            _0x162572 += _0x4cf2e6;
            if (!_0x4c81e6) {
              clearTick(_0x2d4ef6);
            }
            SetEntityRotation(_0x9166ed, _0x162572, _0x48cc9c[1], _0x48cc9c[2], 2, true);
            _0x4bb3ca = _0x398904;
            return [2];
          });
        }));
      }
    }
    on("np-objects:objectCreated", function () {
      var _0x3367e9 = _0x4e3aae(function (_0x29874c, _0x4269f9) {
        var _0x52266c;
        return _0x4a17f9(this, function (_0x14654d) {
          if (_0x29874c.ns !== "lumberjack") {
            return [2];
          }
          _0x52266c = _0x29874c.data;
          if (_0x52266c.metadata.fallen && _0x52266c.metadata.cuts < _0x42c1df) {
            _0x16cf59(_0x4269f9, true);
          }
          return [2];
        });
      });
      return function (_0x53cabf, _0x559dda) {
        return _0x3367e9.apply(this, arguments);
      };
    }());
    on("np-objects:objectUpdated", function () {
      var _0x207c06 = _0x4e3aae(function (_0x4c9114, _0x58eddd) {
        var _0x321769;
        return _0x4a17f9(this, function (_0x1f51d0) {
          if (_0x4c9114.ns !== "lumberjack") {
            return [2];
          }
          _0x321769 = _0x4c9114.data;
          if (_0x321769.metadata.fallen) {
            return [2];
          }
          _0x16cf59(_0x58eddd, false);
          return [2];
        });
      });
      return function (_0x2e3865, _0x4253cd) {
        return _0x207c06.apply(this, arguments);
      };
    }());
    on("np-objects:objectDeleted", function () {
      var _0x4b3239 = _0x4e3aae(function (_0x34d5f0, _0x14c5ee) {
        return _0x4a17f9(this, function (_0x27f286) {
          if (_0x34d5f0.ns !== "lumberjack") {
            return [2];
          }
          emit("lumberjack:trees:hover", null, false);
          return [2];
        });
      });
      return function (_0x410341, _0x22e0cf) {
        return _0x4b3239.apply(this, arguments);
      };
    }());
    ;
    function _0x15631d(_0x5a1e44, _0xd31f84) {
      if (_0xd31f84 == null || _0xd31f84 > _0x5a1e44.length) {
        _0xd31f84 = _0x5a1e44.length;
      }
      for (var _0x32f419 = 0, _0x2980ba = new Array(_0xd31f84); _0x32f419 < _0xd31f84; _0x32f419++) {
        _0x2980ba[_0x32f419] = _0x5a1e44[_0x32f419];
      }
      return _0x2980ba;
    }
    function _0x4d5686(_0x1d4ce1) {
      if (Array.isArray(_0x1d4ce1)) {
        return _0x1d4ce1;
      }
    }
    function _0x20ef6e(_0x5a11ef, _0x2c73fe, _0x1f899e, _0x5de25d, _0x32c957, _0x41b75e, _0x2dd43a) {
      try {
        var _0x3e9f82 = _0x5a11ef[_0x41b75e](_0x2dd43a);
        var _0xdaf74d = _0x3e9f82.value;
      } catch (_0x32348c) {
        _0x1f899e(_0x32348c);
        return;
      }
      if (_0x3e9f82.done) {
        _0x2c73fe(_0xdaf74d);
      } else {
        Promise.resolve(_0xdaf74d).then(_0x5de25d, _0x32c957);
      }
    }
    function _0x4da28a(_0x25f9dc) {
      return function () {
        var _0x213a0a = this;
        var _0xfebef8 = arguments;
        return new Promise(function (_0x405044, _0x2e633a) {
          var _0x2ae6f6 = _0x25f9dc.apply(_0x213a0a, _0xfebef8);
          function _0x3fc8eb(_0x5677b1) {
            _0x20ef6e(_0x2ae6f6, _0x405044, _0x2e633a, _0x3fc8eb, _0x4b8f8a, "next", _0x5677b1);
          }
          function _0x4b8f8a(_0x385fb1) {
            _0x20ef6e(_0x2ae6f6, _0x405044, _0x2e633a, _0x3fc8eb, _0x4b8f8a, "throw", _0x385fb1);
          }
          _0x3fc8eb(undefined);
        });
      };
    }
    function _0x3434b2(_0x24d2e3, _0x2feefb) {
      var _0x17939b = _0x24d2e3 == null ? null : typeof Symbol !== "undefined" && _0x24d2e3[Symbol.iterator] || _0x24d2e3["@@iterator"];
      if (_0x17939b == null) {
        return;
      }
      var _0x185874 = [];
      var _0x4c4a5d = true;
      var _0x3dd29a = false;
      var _0x4759eb;
      var _0x5689e7;
      try {
        for (_0x17939b = _0x17939b.call(_0x24d2e3); !(_0x4c4a5d = (_0x4759eb = _0x17939b.next()).done); _0x4c4a5d = true) {
          _0x185874.push(_0x4759eb.value);
          if (_0x2feefb && _0x185874.length === _0x2feefb) {
            break;
          }
        }
      } catch (_0x2a6d1c) {
        _0x3dd29a = true;
        _0x5689e7 = _0x2a6d1c;
      } finally {
        try {
          if (!_0x4c4a5d && _0x17939b.return != null) {
            _0x17939b.return();
          }
        } finally {
          if (_0x3dd29a) {
            throw _0x5689e7;
          }
        }
      }
      return _0x185874;
    }
    function _0x3bbf98() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x1a0bcc(_0x53caef, _0x1d7e64) {
      return _0x4d5686(_0x53caef) || _0x3434b2(_0x53caef, _0x1d7e64) || _0x13106e(_0x53caef, _0x1d7e64) || _0x3bbf98();
    }
    function _0x13106e(_0x1ffcf7, _0xe0d4e8) {
      if (!_0x1ffcf7) {
        return;
      }
      if (typeof _0x1ffcf7 === "string") {
        return _0x15631d(_0x1ffcf7, _0xe0d4e8);
      }
      var _0x3a4508 = Object.prototype.toString.call(_0x1ffcf7).slice(8, -1);
      if (_0x3a4508 === "Object" && _0x1ffcf7.constructor) {
        _0x3a4508 = _0x1ffcf7.constructor.name;
      }
      if (_0x3a4508 === "Map" || _0x3a4508 === "Set") {
        return Array.from(_0x3a4508);
      }
      if (_0x3a4508 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x3a4508)) {
        return _0x15631d(_0x1ffcf7, _0xe0d4e8);
      }
    }
    function _0x366194(_0x9c8c32, _0x4cd46b) {
      var _0x3f0768;
      var _0x5b0de3;
      var _0x179025;
      var _0x2de377;
      var _0x4ddb8e = {
        label: 0,
        sent: function () {
          if (_0x179025[0] & 1) {
            throw _0x179025[1];
          }
          return _0x179025[1];
        },
        trys: [],
        ops: []
      };
      _0x2de377 = {
        next: _0x18144b(0),
        throw: _0x18144b(1),
        return: _0x18144b(2)
      };
      if (typeof Symbol === "function") {
        _0x2de377[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2de377;
      function _0x18144b(_0x3265ac) {
        return function (_0x1db392) {
          return _0x4c7273([_0x3265ac, _0x1db392]);
        };
      }
      function _0x4c7273(_0x4d168a) {
        if (_0x3f0768) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4ddb8e) {
          try {
            _0x3f0768 = 1;
            if (_0x5b0de3 && (_0x179025 = _0x4d168a[0] & 2 ? _0x5b0de3.return : _0x4d168a[0] ? _0x5b0de3.throw || ((_0x179025 = _0x5b0de3.return) && _0x179025.call(_0x5b0de3), 0) : _0x5b0de3.next) && !(_0x179025 = _0x179025.call(_0x5b0de3, _0x4d168a[1])).done) {
              return _0x179025;
            }
            _0x5b0de3 = 0;
            if (_0x179025) {
              _0x4d168a = [_0x4d168a[0] & 2, _0x179025.value];
            }
            switch (_0x4d168a[0]) {
              case 0:
              case 1:
                _0x179025 = _0x4d168a;
                break;
              case 4:
                _0x4ddb8e.label++;
                var _0xb338d = {
                  value: _0x4d168a[1],
                  done: false
                };
                return _0xb338d;
              case 5:
                _0x4ddb8e.label++;
                _0x5b0de3 = _0x4d168a[1];
                _0x4d168a = [0];
                continue;
              case 7:
                _0x4d168a = _0x4ddb8e.ops.pop();
                _0x4ddb8e.trys.pop();
                continue;
              default:
                if (!(_0x179025 = _0x4ddb8e.trys, _0x179025 = _0x179025.length > 0 && _0x179025[_0x179025.length - 1]) && (_0x4d168a[0] === 6 || _0x4d168a[0] === 2)) {
                  _0x4ddb8e = 0;
                  continue;
                }
                if (_0x4d168a[0] === 3 && (!_0x179025 || _0x4d168a[1] > _0x179025[0] && _0x4d168a[1] < _0x179025[3])) {
                  _0x4ddb8e.label = _0x4d168a[1];
                  break;
                }
                if (_0x4d168a[0] === 6 && _0x4ddb8e.label < _0x179025[1]) {
                  _0x4ddb8e.label = _0x179025[1];
                  _0x179025 = _0x4d168a;
                  break;
                }
                if (_0x179025 && _0x4ddb8e.label < _0x179025[2]) {
                  _0x4ddb8e.label = _0x179025[2];
                  _0x4ddb8e.ops.push(_0x4d168a);
                  break;
                }
                if (_0x179025[2]) {
                  _0x4ddb8e.ops.pop();
                }
                _0x4ddb8e.trys.pop();
                continue;
            }
            _0x4d168a = _0x4cd46b.call(_0x9c8c32, _0x4ddb8e);
          } catch (_0x4a2cd6) {
            _0x4d168a = [6, _0x4a2cd6];
            _0x5b0de3 = 0;
          } finally {
            _0x3f0768 = _0x179025 = 0;
          }
        }
        if (_0x4d168a[0] & 5) {
          throw _0x4d168a[1];
        }
        var _0x59f9bf = {
          value: _0x4d168a[0] ? _0x4d168a[1] : undefined,
          done: true
        };
        return _0x59f9bf;
      }
    }
    function _0xa781f7() {}
    var _0x422749;
    var _0x3e3c52;
    var _0x3864cb;
    var _0x27d0cd;
    var _0x1a699f;
    var _0x1c963e = new Set();
    onNet("np-jobs:lumberjack:collect:notify", function () {
      var _0xafca87 = _0x4da28a(function (_0x1c03ab, _0xf28de7, _0x5cbe54, _0x1e42ca, _0x3c63a3) {
        var _0x59e9c3;
        var _0x54e929;
        var _0x49546c;
        var _0x4bf238;
        var _0x464880;
        var _0x2f7ab4;
        var _0x3061c1;
        var _0x348dea;
        var _0x152d42;
        var _0x495679;
        var _0x5ba1e8;
        var _0x3dec35;
        var _0x1d9be2;
        var _0x25b848;
        var _0xe06689;
        var _0x4f4d01;
        return _0x366194(this, function (_0x5c2df6) {
          switch (_0x5c2df6.label) {
            case 0:
              _0x422749 = _0x1c03ab;
              _0x3e3c52 = _0x3c63a3;
              _0x1a699f = _0x1e42ca.pop().id;
              return [4, _0x5d5475.wait(1000)];
            case 1:
              _0x5c2df6.sent();
              _0x121f17.phoneNotification("Lumberjack", "Use LEFT ALT to view toggled interactions.");
              _0x59e9c3 = true;
              _0x54e929 = false;
              _0x49546c = undefined;
              try {
                for (_0x4bf238 = Object.entries(_0xe51b9f)[Symbol.iterator](); !(_0x59e9c3 = (_0x464880 = _0x4bf238.next()).done); _0x59e9c3 = true) {
                  _0x2f7ab4 = _0x1a0bcc(_0x464880.value, 2);
                  _0x3061c1 = _0x2f7ab4[0];
                  _0x348dea = _0x2f7ab4[1];
                  _0x152d42 = _0x4be8d9.createBlip("coord", _0x348dea.coords.x, _0x348dea.coords.y, _0x348dea.coords.z);
                  _0x4be8d9.applyBlipSettings(_0x152d42, _0x348dea.label, _0x348dea.sprite, 17, undefined, 0.8, undefined, true);
                  _0x1c963e.add(_0x152d42);
                }
              } catch (_0x25bace) {
                _0x54e929 = true;
                _0x49546c = _0x25bace;
              } finally {
                try {
                  if (!_0x59e9c3 && _0x4bf238.return != null) {
                    _0x4bf238.return();
                  }
                } finally {
                  if (_0x54e929) {
                    throw _0x49546c;
                  }
                }
              }
              _0x495679 = true;
              _0x5ba1e8 = false;
              _0x3dec35 = undefined;
              try {
                for (_0x1d9be2 = _0x257030[Symbol.iterator](); !(_0x495679 = (_0x25b848 = _0x1d9be2.next()).done); _0x495679 = true) {
                  _0xe06689 = _0x25b848.value;
                  _0x4f4d01 = _0x4be8d9.createBlip("coord", _0xe06689.coords[0], _0xe06689.coords[1], _0xe06689.coords[2]);
                  _0x4be8d9.applyBlipSettings(_0x4f4d01, "Tree", 502, 17, undefined, 0.3, undefined, true);
                  _0x1c963e.add(_0x4f4d01);
                }
              } catch (_0x1f7896) {
                _0x5ba1e8 = true;
                _0x3dec35 = _0x1f7896;
              } finally {
                try {
                  if (!_0x495679 && _0x1d9be2.return != null) {
                    _0x1d9be2.return();
                  }
                } finally {
                  if (_0x5ba1e8) {
                    throw _0x3dec35;
                  }
                }
              }
              return [2];
          }
        });
      });
      return function (_0x544521, _0x52e547, _0x368228, _0x3133ba, _0x2eb19d) {
        return _0xafca87.apply(this, arguments);
      };
    }());
    onNet("np-jobs:lumberjack:collect", function () {
      var _0x59b134 = _0x4da28a(function (_0x32d2a4, _0x2c1ecd, _0x393af6, _0x39324d, _0x53d013) {
        return _0x366194(this, function (_0x15e6da) {
          switch (_0x15e6da.label) {
            case 0:
              _0x422749 = _0x32d2a4;
              _0x3e3c52 = _0x53d013;
              _0x1a699f = _0x39324d.pop().id;
              return [4, _0x5d5475.wait(1000)];
            case 1:
              _0x15e6da.sent();
              _0x3e3c52("updateObjectiveData", _0x1a699f, "status", "completed");
              return [2];
          }
        });
      });
      return function (_0x37cd2d, _0xabcaa4, _0x5c19ad, _0x3bc84c, _0x387e14) {
        return _0x59b134.apply(this, arguments);
      };
    }());
    _0x11a862.register("np-jobs:lumberjack:useAxe", function () {
      var _0x14a86e = _0x4da28a(function (_0x13be09, _0x341b4e) {
        var _0x15b85b;
        var _0x445bde;
        var _0x2e17f3;
        var _0x2a1d45;
        var _0xc2f1a1;
        var _0x3c0110;
        var _0x453324;
        var _0x190d52;
        var _0x2b8b16;
        var _0x1f5072;
        return _0x366194(this, function (_0x5cd5d6) {
          switch (_0x5cd5d6.label) {
            case 0:
              if (_0x56b6ba() !== "lumberjack") {
                emit("DoLongHudText", "You are not assigned to that job.", 3);
                return [2];
              }
              _0x15b85b = PlayerPedId();
              _0x445bde = GetEntityCoords(_0x15b85b, false);
              _0x2e17f3 = globalThis.exports["np-objects"].GetObjectsByNamespace("lumberjack");
              if (!_0x2e17f3) {
                return [2];
              }
              _0x2a1d45 = _0x2e17f3.find(function (_0x44dc6a) {
                var _0x580d42 = [_0x44dc6a.x, _0x44dc6a.y, _0x44dc6a.z];
                var _0x2a4e80 = _0x5d5475.MathUtils.getDistance(_0x445bde, _0x580d42);
                return _0x2a4e80 < 2;
              });
              if (!_0x2a1d45) {
                return [2];
              }
              _0xc2f1a1 = _0x13be09 ? parseInt(_0x13be09.replace("tier", "")) + 1 : 1;
              _0x3c0110 = "lumberjack@anims";
              _0x453324 = "axe_swing";
              if (_0x2a1d45.data.metadata.fallen) {
                _0x3c0110 = "melee@large_wpn@streamed_core";
                _0x453324 = "ground_attack_on_spot";
              }
              return [4, _0x5cb85b.loadAnim(_0x3c0110)];
            case 1:
              _0x5cd5d6.sent();
              return [4, _0x5cb85b.loadModel(_0x341b4e)];
            case 2:
              _0x5cd5d6.sent();
              _0x190d52 = CreateObjectNoOffset(_0x341b4e, _0x445bde[0], _0x445bde[1], _0x445bde[2], true, true, true);
              if (_0x2a1d45.data.metadata.fallen) {
                AttachEntityToEntity(_0x190d52, _0x15b85b, GetPedBoneIndex(_0x15b85b, 57005), 0.179963, 0.135624, -0.007741, -131.224, -62.147, 49.1454, false, false, false, false, 5, true);
              } else {
                AttachEntityToEntity(_0x190d52, _0x15b85b, GetPedBoneIndex(_0x15b85b, 57005), 0.14073, 0.140791, -0.005148, -122.618, -81.3436, 52.712, false, false, false, false, 5, true);
              }
              TaskPlayAnim(_0x15b85b, _0x3c0110, _0x453324, 8, 8, -1, 1, 0, false, false, false);
              _0x2b8b16 = false;
              setImmediate(_0x4da28a(function () {
                var _0x5f17c9;
                var _0x55da43;
                return _0x366194(this, function (_0x17ec4b) {
                  switch (_0x17ec4b.label) {
                    case 0:
                      _0x5f17c9 = _0x2a1d45.data.metadata.fallen ? 700 : 600;
                      return [4, _0x5d5475.wait(_0x5f17c9)];
                    case 1:
                      _0x17ec4b.sent();
                      _0x55da43 = _0x2a1d45.data.metadata.fallen ? 2360 : 1500;
                      _0x17ec4b.label = 2;
                    case 2:
                      if (!!_0x2b8b16) {
                        return [3, 4];
                      }
                      _0x10598b.emitNet("np-jobs:lumberjack:playSound", _0x2a1d45.data.metadata.fallen ? "wood_chop" : "axe_swing");
                      return [4, _0x5d5475.wait(_0x55da43)];
                    case 3:
                      _0x17ec4b.sent();
                      return [3, 2];
                    case 4:
                      return [2];
                  }
                });
              }));
              return [4, _0x121f17.taskBar(15000 / _0xc2f1a1, "Chopping tree")];
            case 3:
              _0x1f5072 = _0x5cd5d6.sent();
              _0x2b8b16 = true;
              ClearPedTasks(_0x15b85b);
              if (_0x1f5072 !== 100) {
                return [2];
              }
              DeleteEntity(_0x190d52);
              var _0x1107d9 = {
                id: _0x2a1d45.id
              };
              return [2, _0x1107d9];
          }
        });
      });
      return function (_0x28069b, _0x337dc2) {
        return _0x14a86e.apply(this, arguments);
      };
    }());
    onNet("np:jobs:activityCompleted", function () {
      _0x422749 = null;
      _0x3e3c52 = null;
      _0x3864cb = null;
      _0x27d0cd = null;
      _0x1a699f = null;
      var _0x36d371 = true;
      var _0x56d094 = false;
      var _0x1d315d = undefined;
      try {
        for (var _0x1e646b = _0x1c963e[Symbol.iterator](), _0x50eaec; !(_0x36d371 = (_0x50eaec = _0x1e646b.next()).done); _0x36d371 = true) {
          var _0x491ec5 = _0x50eaec.value;
          RemoveBlip(_0x491ec5);
        }
      } catch (_0x584284) {
        _0x56d094 = true;
        _0x1d315d = _0x584284;
      } finally {
        try {
          if (!_0x36d371 && _0x1e646b.return != null) {
            _0x1e646b.return();
          }
        } finally {
          if (_0x56d094) {
            throw _0x1d315d;
          }
        }
      }
    });
    ;
    function _0x2b0283(_0x52ba2e, _0x1dd4b6, _0xc8d6ba, _0x4e8750, _0x174e5a, _0x2a8bd0, _0x36b2ce) {
      try {
        var _0x650d66 = _0x52ba2e[_0x2a8bd0](_0x36b2ce);
        var _0x18d5f7 = _0x650d66.value;
      } catch (_0x1403d0) {
        _0xc8d6ba(_0x1403d0);
        return;
      }
      if (_0x650d66.done) {
        _0x1dd4b6(_0x18d5f7);
      } else {
        Promise.resolve(_0x18d5f7).then(_0x4e8750, _0x174e5a);
      }
    }
    function _0x18b153(_0xc52058) {
      return function () {
        var _0xbf46da = this;
        var _0xcc0324 = arguments;
        return new Promise(function (_0x21bbfb, _0x16c0c4) {
          var _0x558e66 = _0xc52058.apply(_0xbf46da, _0xcc0324);
          function _0x2bfd5c(_0x7736a9) {
            _0x2b0283(_0x558e66, _0x21bbfb, _0x16c0c4, _0x2bfd5c, _0x115fc8, "next", _0x7736a9);
          }
          function _0x115fc8(_0x327c90) {
            _0x2b0283(_0x558e66, _0x21bbfb, _0x16c0c4, _0x2bfd5c, _0x115fc8, "throw", _0x327c90);
          }
          _0x2bfd5c(undefined);
        });
      };
    }
    function _0x2491a7(_0x29602a, _0x598895) {
      var _0x416b6a;
      var _0x4d07dd;
      var _0xc1dda8;
      var _0x48f290;
      var _0x71dad5 = {
        label: 0,
        sent: function () {
          if (_0xc1dda8[0] & 1) {
            throw _0xc1dda8[1];
          }
          return _0xc1dda8[1];
        },
        trys: [],
        ops: []
      };
      _0x48f290 = {
        next: _0x2994cb(0),
        throw: _0x2994cb(1),
        return: _0x2994cb(2)
      };
      if (typeof Symbol === "function") {
        _0x48f290[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x48f290;
      function _0x2994cb(_0x8096a5) {
        return function (_0x51d368) {
          return _0xd8d54b([_0x8096a5, _0x51d368]);
        };
      }
      function _0xd8d54b(_0x3bd876) {
        if (_0x416b6a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x71dad5) {
          try {
            _0x416b6a = 1;
            if (_0x4d07dd && (_0xc1dda8 = _0x3bd876[0] & 2 ? _0x4d07dd.return : _0x3bd876[0] ? _0x4d07dd.throw || ((_0xc1dda8 = _0x4d07dd.return) && _0xc1dda8.call(_0x4d07dd), 0) : _0x4d07dd.next) && !(_0xc1dda8 = _0xc1dda8.call(_0x4d07dd, _0x3bd876[1])).done) {
              return _0xc1dda8;
            }
            _0x4d07dd = 0;
            if (_0xc1dda8) {
              _0x3bd876 = [_0x3bd876[0] & 2, _0xc1dda8.value];
            }
            switch (_0x3bd876[0]) {
              case 0:
              case 1:
                _0xc1dda8 = _0x3bd876;
                break;
              case 4:
                _0x71dad5.label++;
                var _0x4c2981 = {
                  value: _0x3bd876[1],
                  done: false
                };
                return _0x4c2981;
              case 5:
                _0x71dad5.label++;
                _0x4d07dd = _0x3bd876[1];
                _0x3bd876 = [0];
                continue;
              case 7:
                _0x3bd876 = _0x71dad5.ops.pop();
                _0x71dad5.trys.pop();
                continue;
              default:
                if (!(_0xc1dda8 = _0x71dad5.trys, _0xc1dda8 = _0xc1dda8.length > 0 && _0xc1dda8[_0xc1dda8.length - 1]) && (_0x3bd876[0] === 6 || _0x3bd876[0] === 2)) {
                  _0x71dad5 = 0;
                  continue;
                }
                if (_0x3bd876[0] === 3 && (!_0xc1dda8 || _0x3bd876[1] > _0xc1dda8[0] && _0x3bd876[1] < _0xc1dda8[3])) {
                  _0x71dad5.label = _0x3bd876[1];
                  break;
                }
                if (_0x3bd876[0] === 6 && _0x71dad5.label < _0xc1dda8[1]) {
                  _0x71dad5.label = _0xc1dda8[1];
                  _0xc1dda8 = _0x3bd876;
                  break;
                }
                if (_0xc1dda8 && _0x71dad5.label < _0xc1dda8[2]) {
                  _0x71dad5.label = _0xc1dda8[2];
                  _0x71dad5.ops.push(_0x3bd876);
                  break;
                }
                if (_0xc1dda8[2]) {
                  _0x71dad5.ops.pop();
                }
                _0x71dad5.trys.pop();
                continue;
            }
            _0x3bd876 = _0x598895.call(_0x29602a, _0x71dad5);
          } catch (_0x5d7cf8) {
            _0x3bd876 = [6, _0x5d7cf8];
            _0x4d07dd = 0;
          } finally {
            _0x416b6a = _0xc1dda8 = 0;
          }
        }
        if (_0x3bd876[0] & 5) {
          throw _0x3bd876[1];
        }
        var _0x59c6ef = {
          value: _0x3bd876[0] ? _0x3bd876[1] : undefined,
          done: true
        };
        return _0x59c6ef;
      }
    }
    function _0x459507() {}
    on("lumberjack:trees:hover", function (_0x4a0820, _0x27ecc6, _0x449964) {
      if (!_0x27ecc6) {
        _0x30390f.execute("lumberjack:data", {
          show: false
        });
        return;
      }
      var _0x3f7538 = globalThis.exports["np-objects"].GetObjectByEntity(_0x449964);
      if (!_0x3f7538) {
        return;
      }
      var _0x549812 = {
        show: true,
        data: _0x3f7538.data.metadata
      };
      _0x30390f.execute("lumberjack:data", _0x549812);
    });
    _0x10598b.on("np-jobs:lumberjack:openClean", function () {
      if (!_0x422749) {
        return;
      }
      _0x2663ad.OpenInventory([`logs::${_0x422749}`], true);
    });
    _0x10598b.on("np-jobs:lumberjack:openGetClean", function () {
      if (!_0x422749) {
        return;
      }
      _0x2663ad.OpenInventory([`clean-logs::${_0x422749}`], true);
    });
    _0x10598b.on("np-jobs:lumberjack:logsToPlanks", _0x18b153(function () {
      return _0x2491a7(this, function (_0x261f00) {
        if (!_0x422749) {
          return [2];
        }
        _0x2663ad.OpenInventory([`logs-planks::${_0x422749}`], true);
        return [2];
      });
    }));
    _0x10598b.on("np-jobs:lumberjack:getPlanks", _0x18b153(function () {
      return _0x2491a7(this, function (_0x4b3a1) {
        if (!_0x422749) {
          return [2];
        }
        _0x2663ad.OpenInventory([`planks::${_0x422749}`], true);
        return [2];
      });
    }));
    _0x10598b.on("np-jobs:lumberjack:sand", _0x18b153(function () {
      return _0x2491a7(this, function (_0xd2c401) {
        if (!_0x422749) {
          return [2];
        }
        _0x2663ad.OpenInventory([`planks-to-sand::${_0x422749}`], true);
        return [2];
      });
    }));
    _0x10598b.on("np-jobs:lumberjack:getSanded", _0x18b153(function () {
      return _0x2491a7(this, function (_0x179982) {
        if (!_0x422749) {
          return [2];
        }
        _0x2663ad.OpenInventory([`sanded-planks::${_0x422749}`], true);
        return [2];
      });
    }));
    _0x10598b.on("np-jobs:lumberjack:finish", _0x18b153(function () {
      return _0x2491a7(this, function (_0x52c04b) {
        if (!_0x422749) {
          return [2];
        }
        _0x2663ad.OpenInventory([`planks-to-finish::${_0x422749}`], true);
        return [2];
      });
    }));
    _0x10598b.on("np-jobs:lumberjack:getFinished", _0x18b153(function () {
      return _0x2491a7(this, function (_0x51496f) {
        if (!_0x422749) {
          return [2];
        }
        _0x2663ad.OpenInventory([`finished-planks::${_0x422749}`], true);
        return [2];
      });
    }));
    _0x10598b.on("np-jobs:lumberjack:sell", _0x18b153(function () {
      return _0x2491a7(this, function (_0x41c9e7) {
        if (!_0x422749) {
          emit("DoLongHudText", "You are not doing a job", 2);
          return [2];
        }
        setTimeout(function () {
          _0x2663ad.OpenInventory([`sell-planks::${_0x422749}`, `sell-planks-result::${_0x422749}`], false);
        }, 100);
        return [2];
      });
    }));
    ;
    function _0x2abef2(_0x53dd63, _0x4f604e) {
      if (_0x4f604e == null || _0x4f604e > _0x53dd63.length) {
        _0x4f604e = _0x53dd63.length;
      }
      for (var _0x531dd8 = 0, _0x4be74b = new Array(_0x4f604e); _0x531dd8 < _0x4f604e; _0x531dd8++) {
        _0x4be74b[_0x531dd8] = _0x53dd63[_0x531dd8];
      }
      return _0x4be74b;
    }
    function _0x155da8(_0x55444d) {
      if (Array.isArray(_0x55444d)) {
        return _0x55444d;
      }
    }
    function _0x581540(_0x3934a2, _0x13950d, _0x518743, _0x29e74c, _0x368166, _0x1c4dbf, _0x5b5a43) {
      try {
        var _0x177a66 = _0x3934a2[_0x1c4dbf](_0x5b5a43);
        var _0x46805c = _0x177a66.value;
      } catch (_0x50de05) {
        _0x518743(_0x50de05);
        return;
      }
      if (_0x177a66.done) {
        _0x13950d(_0x46805c);
      } else {
        Promise.resolve(_0x46805c).then(_0x29e74c, _0x368166);
      }
    }
    function _0x2b265f(_0x4046c2) {
      return function () {
        var _0x10d720 = this;
        var _0x36bce5 = arguments;
        return new Promise(function (_0x53ed92, _0x1c5925) {
          var _0x3f3217 = _0x4046c2.apply(_0x10d720, _0x36bce5);
          function _0x519bc8(_0x168516) {
            _0x581540(_0x3f3217, _0x53ed92, _0x1c5925, _0x519bc8, _0x2331bd, "next", _0x168516);
          }
          function _0x2331bd(_0x280329) {
            _0x581540(_0x3f3217, _0x53ed92, _0x1c5925, _0x519bc8, _0x2331bd, "throw", _0x280329);
          }
          _0x519bc8(undefined);
        });
      };
    }
    function _0x11893d(_0x848733, _0x3bb80b) {
      var _0x49f078 = _0x848733 == null ? null : typeof Symbol !== "undefined" && _0x848733[Symbol.iterator] || _0x848733["@@iterator"];
      if (_0x49f078 == null) {
        return;
      }
      var _0x3d1c1c = [];
      var _0xf485d0 = true;
      var _0x35069f = false;
      var _0x1cae3e;
      var _0x2e342;
      try {
        for (_0x49f078 = _0x49f078.call(_0x848733); !(_0xf485d0 = (_0x1cae3e = _0x49f078.next()).done); _0xf485d0 = true) {
          _0x3d1c1c.push(_0x1cae3e.value);
          if (_0x3bb80b && _0x3d1c1c.length === _0x3bb80b) {
            break;
          }
        }
      } catch (_0x6bfcf1) {
        _0x35069f = true;
        _0x2e342 = _0x6bfcf1;
      } finally {
        try {
          if (!_0xf485d0 && _0x49f078.return != null) {
            _0x49f078.return();
          }
        } finally {
          if (_0x35069f) {
            throw _0x2e342;
          }
        }
      }
      return _0x3d1c1c;
    }
    function _0x4f6623() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x9fe590(_0xe6f91e, _0x3fb2d6) {
      return _0x155da8(_0xe6f91e) || _0x11893d(_0xe6f91e, _0x3fb2d6) || _0x1d747a(_0xe6f91e, _0x3fb2d6) || _0x4f6623();
    }
    function _0x1d747a(_0x17e3af, _0x30394f) {
      if (!_0x17e3af) {
        return;
      }
      if (typeof _0x17e3af === "string") {
        return _0x2abef2(_0x17e3af, _0x30394f);
      }
      var _0xef99a1 = Object.prototype.toString.call(_0x17e3af).slice(8, -1);
      if (_0xef99a1 === "Object" && _0x17e3af.constructor) {
        _0xef99a1 = _0x17e3af.constructor.name;
      }
      if (_0xef99a1 === "Map" || _0xef99a1 === "Set") {
        return Array.from(_0xef99a1);
      }
      if (_0xef99a1 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0xef99a1)) {
        return _0x2abef2(_0x17e3af, _0x30394f);
      }
    }
    function _0x3ad9ac(_0x3888f7, _0x4bc82b) {
      var _0x341378;
      var _0x5190ef;
      var _0x2741f3;
      var _0x149592;
      var _0x278cc8 = {
        label: 0,
        sent: function () {
          if (_0x2741f3[0] & 1) {
            throw _0x2741f3[1];
          }
          return _0x2741f3[1];
        },
        trys: [],
        ops: []
      };
      _0x149592 = {
        next: _0x5e7c7d(0),
        throw: _0x5e7c7d(1),
        return: _0x5e7c7d(2)
      };
      if (typeof Symbol === "function") {
        _0x149592[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x149592;
      function _0x5e7c7d(_0x15cda6) {
        return function (_0x88b747) {
          return _0x568b97([_0x15cda6, _0x88b747]);
        };
      }
      function _0x568b97(_0x19a2a6) {
        if (_0x341378) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x278cc8) {
          try {
            _0x341378 = 1;
            if (_0x5190ef && (_0x2741f3 = _0x19a2a6[0] & 2 ? _0x5190ef.return : _0x19a2a6[0] ? _0x5190ef.throw || ((_0x2741f3 = _0x5190ef.return) && _0x2741f3.call(_0x5190ef), 0) : _0x5190ef.next) && !(_0x2741f3 = _0x2741f3.call(_0x5190ef, _0x19a2a6[1])).done) {
              return _0x2741f3;
            }
            _0x5190ef = 0;
            if (_0x2741f3) {
              _0x19a2a6 = [_0x19a2a6[0] & 2, _0x2741f3.value];
            }
            switch (_0x19a2a6[0]) {
              case 0:
              case 1:
                _0x2741f3 = _0x19a2a6;
                break;
              case 4:
                _0x278cc8.label++;
                var _0x418fb7 = {
                  value: _0x19a2a6[1],
                  done: false
                };
                return _0x418fb7;
              case 5:
                _0x278cc8.label++;
                _0x5190ef = _0x19a2a6[1];
                _0x19a2a6 = [0];
                continue;
              case 7:
                _0x19a2a6 = _0x278cc8.ops.pop();
                _0x278cc8.trys.pop();
                continue;
              default:
                if (!(_0x2741f3 = _0x278cc8.trys, _0x2741f3 = _0x2741f3.length > 0 && _0x2741f3[_0x2741f3.length - 1]) && (_0x19a2a6[0] === 6 || _0x19a2a6[0] === 2)) {
                  _0x278cc8 = 0;
                  continue;
                }
                if (_0x19a2a6[0] === 3 && (!_0x2741f3 || _0x19a2a6[1] > _0x2741f3[0] && _0x19a2a6[1] < _0x2741f3[3])) {
                  _0x278cc8.label = _0x19a2a6[1];
                  break;
                }
                if (_0x19a2a6[0] === 6 && _0x278cc8.label < _0x2741f3[1]) {
                  _0x278cc8.label = _0x2741f3[1];
                  _0x2741f3 = _0x19a2a6;
                  break;
                }
                if (_0x2741f3 && _0x278cc8.label < _0x2741f3[2]) {
                  _0x278cc8.label = _0x2741f3[2];
                  _0x278cc8.ops.push(_0x19a2a6);
                  break;
                }
                if (_0x2741f3[2]) {
                  _0x278cc8.ops.pop();
                }
                _0x278cc8.trys.pop();
                continue;
            }
            _0x19a2a6 = _0x4bc82b.call(_0x3888f7, _0x278cc8);
          } catch (_0x4034da) {
            _0x19a2a6 = [6, _0x4034da];
            _0x5190ef = 0;
          } finally {
            _0x341378 = _0x2741f3 = 0;
          }
        }
        if (_0x19a2a6[0] & 5) {
          throw _0x19a2a6[1];
        }
        var _0x1f4205 = {
          value: _0x19a2a6[0] ? _0x19a2a6[1] : undefined,
          done: true
        };
        return _0x1f4205;
      }
    }
    var _0x4aac86 = new Map();
    function _0x179cdf() {
      setInterval(function () {
        var _0x14269f = GetGamePool("CVehicle").filter(function (_0x341d0a) {
          var _0x43bec7 = Entity(_0x341d0a).state;
          var _0x11ca8c = NetworkGetEntityIsNetworked(_0x341d0a);
          if (!_0x11ca8c) {
            return false;
          }
          var _0x54d5bd = NetworkGetNetworkIdFromEntity(_0x341d0a);
          return _0x43bec7.lumberjackObjects && !_0x4aac86.has(_0x54d5bd);
        });
        var _0x3e84f0 = true;
        var _0xd192a2 = false;
        var _0x4d3f33 = undefined;
        try {
          for (var _0x293300 = _0x4aac86[Symbol.iterator](), _0xa163b1; !(_0x3e84f0 = (_0xa163b1 = _0x293300.next()).done); _0x3e84f0 = true) {
            var _0x192453 = _0x9fe590(_0xa163b1.value, 2);
            var _0x2094cf = _0x192453[0];
            var _0x3e58a0 = _0x192453[1];
            var _0x6c40e1 = NetworkGetEntityFromNetworkId(_0x2094cf);
            if (!DoesEntityExist(_0x6c40e1)) {
              _0x3e58a0.forEach(function (_0x16a57b) {
                return DeleteEntity(_0x16a57b);
              });
              _0x4aac86.delete(_0x2094cf);
            }
          }
        } catch (_0x56cc41) {
          _0xd192a2 = true;
          _0x4d3f33 = _0x56cc41;
        } finally {
          try {
            if (!_0x3e84f0 && _0x293300.return != null) {
              _0x293300.return();
            }
          } finally {
            if (_0xd192a2) {
              throw _0x4d3f33;
            }
          }
        }
        var _0x50add1 = true;
        var _0x519ec9 = false;
        var _0x398ec6 = undefined;
        try {
          for (var _0x328e96 = _0x14269f[Symbol.iterator](), _0x5750ea; !(_0x50add1 = (_0x5750ea = _0x328e96.next()).done); _0x50add1 = true) {
            var _0x3d0184 = _0x5750ea.value;
            var _0x2ae10f = Entity(_0x3d0184).state;
            var _0x20a987 = _0x2ae10f.lumberjackObjects;
            _0x5e67c5(_0x3d0184, _0x20a987);
          }
        } catch (_0x3260fa) {
          _0x519ec9 = true;
          _0x398ec6 = _0x3260fa;
        } finally {
          try {
            if (!_0x50add1 && _0x328e96.return != null) {
              _0x328e96.return();
            }
          } finally {
            if (_0x519ec9) {
              throw _0x398ec6;
            }
          }
        }
      }, 10000);
    }
    var _0x5e67c5 = function () {
      var _0xe8ae96 = _0x2b265f(function (_0x2e52c2, _0x242193) {
        var _0x572dd2;
        var _0x16899b;
        var _0x316c3f;
        var _0xbdc2bd;
        var _0x4074f7;
        var _0x375a95;
        var _0x19e792;
        var _0x230f2c;
        var _0x46ff52;
        var _0x2c8820;
        var _0x31497e;
        var _0x2dee4f;
        var _0x53f0ff;
        var _0x2ae723;
        var _0x26e252;
        var _0xd4de4a;
        var _0x393ae1;
        var _0xd66a39;
        var _0x452f98;
        var _0x22bf80;
        return _0x3ad9ac(this, function (_0x555e8d) {
          switch (_0x555e8d.label) {
            case 0:
              _0x572dd2 = NetworkGetNetworkIdFromEntity(_0x2e52c2);
              _0x16899b = _0x4aac86.get(_0x572dd2);
              if (_0x16899b) {
                _0x16899b.forEach(function (_0x4a21cc) {
                  return DeleteEntity(_0x4a21cc);
                });
                _0x4aac86.delete(_0x572dd2);
              }
              _0x316c3f = _0x242193.job === "lumberjack" ? _0x249d64[_0x242193.type] : _0x8376c2[_0x242193.type];
              if (!_0x316c3f) {
                return [2];
              }
              _0xbdc2bd = [];
              _0x4074f7 = 0;
              _0x555e8d.label = 1;
            case 1:
              if (_0x4074f7 >= _0x242193.stage) {
                return [3, 10];
              }
              _0x375a95 = _0x316c3f[_0x4074f7];
              _0x19e792 = true;
              _0x230f2c = false;
              _0x46ff52 = undefined;
              _0x555e8d.label = 2;
            case 2:
              _0x555e8d.trys.push([2, 7, 8, 9]);
              _0x2c8820 = _0x375a95[Symbol.iterator]();
              _0x555e8d.label = 3;
            case 3:
              if (!!(_0x19e792 = (_0x31497e = _0x2c8820.next()).done)) {
                return [3, 6];
              }
              _0x2dee4f = _0x31497e.value;
              _0x53f0ff = GetHashKey(_0x2dee4f.model);
              return [4, _0x5cb85b.loadModel(_0x53f0ff)];
            case 4:
              _0x555e8d.sent();
              _0x2ae723 = _0x9fe590(GetEntityCoords(_0x2e52c2), 3);
              _0x26e252 = _0x2ae723[0];
              _0xd4de4a = _0x2ae723[1];
              _0x393ae1 = _0x2ae723[2];
              _0xd66a39 = GetEntityBoneIndexByName(_0x2e52c2, "seat_pside_r2");
              _0x452f98 = CreateObject(_0x53f0ff, _0x26e252, _0xd4de4a, _0x393ae1, false, true, false);
              _0xbdc2bd.push(_0x452f98);
              SetEntityCollision(_0x452f98, false, false);
              AttachEntityToEntity(_0x452f98, _0x2e52c2, _0xd66a39, _0x2dee4f.coords[0], _0x2dee4f.coords[1], _0x2dee4f.coords[2], _0x2dee4f.rot[0], _0x2dee4f.rot[1], _0x2dee4f.rot[2], true, true, true, false, 5, true);
              _0x555e8d.label = 5;
            case 5:
              _0x19e792 = true;
              return [3, 3];
            case 6:
              return [3, 9];
            case 7:
              _0x22bf80 = _0x555e8d.sent();
              _0x230f2c = true;
              _0x46ff52 = _0x22bf80;
              return [3, 9];
            case 8:
              try {
                if (!_0x19e792 && _0x2c8820.return != null) {
                  _0x2c8820.return();
                }
              } finally {
                if (_0x230f2c) {
                  throw _0x46ff52;
                }
              }
              return [7];
            case 9:
              _0x4074f7++;
              return [3, 1];
            case 10:
              _0x4aac86.set(_0x572dd2, _0xbdc2bd);
              return [2];
          }
        });
      });
      return function _0x346ce9(_0x1f2129, _0x376d22) {
        return _0xe8ae96.apply(this, arguments);
      };
    }();
    AddStateBagChangeHandler("lumberjackObjects", null, function () {
      var _0x13e2d2 = _0x2b265f(function (_0x41591a, _0x567b2c, _0x419e4f, _0xf13c15, _0x22e7df) {
        var _0x559efe;
        return _0x3ad9ac(this, function (_0xda5fee) {
          _0x559efe = GetEntityFromStateBagName(_0x41591a);
          if (_0x559efe === 0) {
            return [2];
          }
          _0x5e67c5(_0x559efe, _0x419e4f);
          return [2];
        });
      });
      return function (_0x560d24, _0x4ab248, _0x5c58fb, _0xb57e2b, _0x388fbb) {
        return _0x13e2d2.apply(this, arguments);
      };
    }());
    _0x10598b.onNet("lumberjack:deleteTruck", function (_0x8b5e46) {
      var _0x47c9bd = _0x4aac86.get(_0x8b5e46);
      if (_0x47c9bd) {
        _0x47c9bd.forEach(function (_0x47fcec) {
          return DeleteEntity(_0x47fcec);
        });
        _0x4aac86.delete(_0x8b5e46);
      }
    });
    ;
    function _0x179bf3(_0x1185b, _0x38b361, _0x1dc64c, _0x4a6b0a, _0x54fde7, _0x2f9de5, _0x52ed6c) {
      try {
        var _0x250c76 = _0x1185b[_0x2f9de5](_0x52ed6c);
        var _0x2121f4 = _0x250c76.value;
      } catch (_0x1391c6) {
        _0x1dc64c(_0x1391c6);
        return;
      }
      if (_0x250c76.done) {
        _0x38b361(_0x2121f4);
      } else {
        Promise.resolve(_0x2121f4).then(_0x4a6b0a, _0x54fde7);
      }
    }
    function _0x24ab8f(_0x3823c0) {
      return function () {
        var _0x1c4ce4 = this;
        var _0x593f2c = arguments;
        return new Promise(function (_0x419588, _0x10a935) {
          var _0x49a125 = _0x3823c0.apply(_0x1c4ce4, _0x593f2c);
          function _0x52b305(_0x5d873c) {
            _0x179bf3(_0x49a125, _0x419588, _0x10a935, _0x52b305, _0x547e9e, "next", _0x5d873c);
          }
          function _0x547e9e(_0xe727a0) {
            _0x179bf3(_0x49a125, _0x419588, _0x10a935, _0x52b305, _0x547e9e, "throw", _0xe727a0);
          }
          _0x52b305(undefined);
        });
      };
    }
    function _0x1b2c41(_0x1f6124, _0x27a543) {
      var _0x2cab44;
      var _0xd77c81;
      var _0x3121a3;
      var _0x2630c9;
      var _0x5f1226 = {
        label: 0,
        sent: function () {
          if (_0x3121a3[0] & 1) {
            throw _0x3121a3[1];
          }
          return _0x3121a3[1];
        },
        trys: [],
        ops: []
      };
      _0x2630c9 = {
        next: _0x46f596(0),
        throw: _0x46f596(1),
        return: _0x46f596(2)
      };
      if (typeof Symbol === "function") {
        _0x2630c9[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2630c9;
      function _0x46f596(_0x19d055) {
        return function (_0x4201e4) {
          return _0x10a2b1([_0x19d055, _0x4201e4]);
        };
      }
      function _0x10a2b1(_0x8bbbb7) {
        if (_0x2cab44) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5f1226) {
          try {
            _0x2cab44 = 1;
            if (_0xd77c81 && (_0x3121a3 = _0x8bbbb7[0] & 2 ? _0xd77c81.return : _0x8bbbb7[0] ? _0xd77c81.throw || ((_0x3121a3 = _0xd77c81.return) && _0x3121a3.call(_0xd77c81), 0) : _0xd77c81.next) && !(_0x3121a3 = _0x3121a3.call(_0xd77c81, _0x8bbbb7[1])).done) {
              return _0x3121a3;
            }
            _0xd77c81 = 0;
            if (_0x3121a3) {
              _0x8bbbb7 = [_0x8bbbb7[0] & 2, _0x3121a3.value];
            }
            switch (_0x8bbbb7[0]) {
              case 0:
              case 1:
                _0x3121a3 = _0x8bbbb7;
                break;
              case 4:
                _0x5f1226.label++;
                var _0x9b3143 = {
                  value: _0x8bbbb7[1],
                  done: false
                };
                return _0x9b3143;
              case 5:
                _0x5f1226.label++;
                _0xd77c81 = _0x8bbbb7[1];
                _0x8bbbb7 = [0];
                continue;
              case 7:
                _0x8bbbb7 = _0x5f1226.ops.pop();
                _0x5f1226.trys.pop();
                continue;
              default:
                if (!(_0x3121a3 = _0x5f1226.trys, _0x3121a3 = _0x3121a3.length > 0 && _0x3121a3[_0x3121a3.length - 1]) && (_0x8bbbb7[0] === 6 || _0x8bbbb7[0] === 2)) {
                  _0x5f1226 = 0;
                  continue;
                }
                if (_0x8bbbb7[0] === 3 && (!_0x3121a3 || _0x8bbbb7[1] > _0x3121a3[0] && _0x8bbbb7[1] < _0x3121a3[3])) {
                  _0x5f1226.label = _0x8bbbb7[1];
                  break;
                }
                if (_0x8bbbb7[0] === 6 && _0x5f1226.label < _0x3121a3[1]) {
                  _0x5f1226.label = _0x3121a3[1];
                  _0x3121a3 = _0x8bbbb7;
                  break;
                }
                if (_0x3121a3 && _0x5f1226.label < _0x3121a3[2]) {
                  _0x5f1226.label = _0x3121a3[2];
                  _0x5f1226.ops.push(_0x8bbbb7);
                  break;
                }
                if (_0x3121a3[2]) {
                  _0x5f1226.ops.pop();
                }
                _0x5f1226.trys.pop();
                continue;
            }
            _0x8bbbb7 = _0x27a543.call(_0x1f6124, _0x5f1226);
          } catch (_0x5f0f94) {
            _0x8bbbb7 = [6, _0x5f0f94];
            _0xd77c81 = 0;
          } finally {
            _0x2cab44 = _0x3121a3 = 0;
          }
        }
        if (_0x8bbbb7[0] & 5) {
          throw _0x8bbbb7[1];
        }
        var _0x3c872c = {
          value: _0x8bbbb7[0] ? _0x8bbbb7[1] : undefined,
          done: true
        };
        return _0x3c872c;
      }
    }
    var _0x3d7482 = function () {
      var _0x46926f = _0x24ab8f(function () {
        return _0x1b2c41(this, function (_0x19f182) {
          _0x488fdf();
          _0xe4e41a();
          _0xa781f7();
          _0x459507();
          _0x179cdf();
          return [2];
        });
      });
      return function _0x47a6c1() {
        return _0x46926f.apply(this, arguments);
      };
    }();
    ;
    function _0x1a8fbc(_0x5bcdd6, _0xae0238, _0x5ae49c, _0x2a74a4, _0x4303fb, _0x2b9910, _0x3ffd78) {
      try {
        var _0xf8449f = _0x5bcdd6[_0x2b9910](_0x3ffd78);
        var _0x212009 = _0xf8449f.value;
      } catch (_0x1d77f7) {
        _0x5ae49c(_0x1d77f7);
        return;
      }
      if (_0xf8449f.done) {
        _0xae0238(_0x212009);
      } else {
        Promise.resolve(_0x212009).then(_0x2a74a4, _0x4303fb);
      }
    }
    function _0x22b5f5(_0xb7e166) {
      return function () {
        var _0x31bf5a = this;
        var _0x66a18d = arguments;
        return new Promise(function (_0x3bfacf, _0x46c0c8) {
          var _0xdcf8c4 = _0xb7e166.apply(_0x31bf5a, _0x66a18d);
          function _0x4f5b7(_0x5203ed) {
            _0x1a8fbc(_0xdcf8c4, _0x3bfacf, _0x46c0c8, _0x4f5b7, _0x2d194f, "next", _0x5203ed);
          }
          function _0x2d194f(_0x1bd063) {
            _0x1a8fbc(_0xdcf8c4, _0x3bfacf, _0x46c0c8, _0x4f5b7, _0x2d194f, "throw", _0x1bd063);
          }
          _0x4f5b7(undefined);
        });
      };
    }
    function _0x2b8489(_0x3037d5, _0x3a5470) {
      var _0x34283e;
      var _0x5274ac;
      var _0x3ee050;
      var _0xb53bdd;
      var _0xaecb1e = {
        label: 0,
        sent: function () {
          if (_0x3ee050[0] & 1) {
            throw _0x3ee050[1];
          }
          return _0x3ee050[1];
        },
        trys: [],
        ops: []
      };
      _0xb53bdd = {
        next: _0x3ed219(0),
        throw: _0x3ed219(1),
        return: _0x3ed219(2)
      };
      if (typeof Symbol === "function") {
        _0xb53bdd[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0xb53bdd;
      function _0x3ed219(_0x29f1bc) {
        return function (_0x1cbb29) {
          return _0x535ad1([_0x29f1bc, _0x1cbb29]);
        };
      }
      function _0x535ad1(_0x222ea9) {
        if (_0x34283e) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xaecb1e) {
          try {
            _0x34283e = 1;
            if (_0x5274ac && (_0x3ee050 = _0x222ea9[0] & 2 ? _0x5274ac.return : _0x222ea9[0] ? _0x5274ac.throw || ((_0x3ee050 = _0x5274ac.return) && _0x3ee050.call(_0x5274ac), 0) : _0x5274ac.next) && !(_0x3ee050 = _0x3ee050.call(_0x5274ac, _0x222ea9[1])).done) {
              return _0x3ee050;
            }
            _0x5274ac = 0;
            if (_0x3ee050) {
              _0x222ea9 = [_0x222ea9[0] & 2, _0x3ee050.value];
            }
            switch (_0x222ea9[0]) {
              case 0:
              case 1:
                _0x3ee050 = _0x222ea9;
                break;
              case 4:
                _0xaecb1e.label++;
                var _0x6f16fd = {
                  value: _0x222ea9[1],
                  done: false
                };
                return _0x6f16fd;
              case 5:
                _0xaecb1e.label++;
                _0x5274ac = _0x222ea9[1];
                _0x222ea9 = [0];
                continue;
              case 7:
                _0x222ea9 = _0xaecb1e.ops.pop();
                _0xaecb1e.trys.pop();
                continue;
              default:
                if (!(_0x3ee050 = _0xaecb1e.trys, _0x3ee050 = _0x3ee050.length > 0 && _0x3ee050[_0x3ee050.length - 1]) && (_0x222ea9[0] === 6 || _0x222ea9[0] === 2)) {
                  _0xaecb1e = 0;
                  continue;
                }
                if (_0x222ea9[0] === 3 && (!_0x3ee050 || _0x222ea9[1] > _0x3ee050[0] && _0x222ea9[1] < _0x3ee050[3])) {
                  _0xaecb1e.label = _0x222ea9[1];
                  break;
                }
                if (_0x222ea9[0] === 6 && _0xaecb1e.label < _0x3ee050[1]) {
                  _0xaecb1e.label = _0x3ee050[1];
                  _0x3ee050 = _0x222ea9;
                  break;
                }
                if (_0x3ee050 && _0xaecb1e.label < _0x3ee050[2]) {
                  _0xaecb1e.label = _0x3ee050[2];
                  _0xaecb1e.ops.push(_0x222ea9);
                  break;
                }
                if (_0x3ee050[2]) {
                  _0xaecb1e.ops.pop();
                }
                _0xaecb1e.trys.pop();
                continue;
            }
            _0x222ea9 = _0x3a5470.call(_0x3037d5, _0xaecb1e);
          } catch (_0x6919a9) {
            _0x222ea9 = [6, _0x6919a9];
            _0x5274ac = 0;
          } finally {
            _0x34283e = _0x3ee050 = 0;
          }
        }
        if (_0x222ea9[0] & 5) {
          throw _0x222ea9[1];
        }
        var _0x1d64aa = {
          value: _0x222ea9[0] ? _0x222ea9[1] : undefined,
          done: true
        };
        return _0x1d64aa;
      }
    }
    var _0x46cbee = function () {
      var _0x1fba72 = _0x22b5f5(function () {
        return _0x2b8489(this, function (_0xce3d8f) {
          return [2];
        });
      });
      return function _0x4f7474() {
        return _0x1fba72.apply(this, arguments);
      };
    }();
    var _0x5c79ae = 0;
    var _0x5bb13e = new _0x1f4826(0, 0, 0);
    var _0x29d610 = 0;
    _0x10598b.onNet("np-jobs:news:assignActivity", function (_0x3e5f19, _0x3dea6b) {
      _0x5c79ae = AddBlipForRadius(_0x3e5f19.x, _0x3e5f19.y, _0x3e5f19.z, _0x3dea6b);
      SetBlipAlpha(_0x5c79ae, 125);
      SetBlipSprite(_0x5c79ae, 9);
      SetBlipColour(_0x5c79ae, 41);
      _0x5bb13e = _0x3e5f19;
      _0x29d610 = _0x3dea6b;
    });
    _0x10598b.onNet("np-jobs:news:removeActivity", function () {
      RemoveBlip(_0x5c79ae);
      clearInterval(_0x12a11f);
    });
    _0x10598b.onNet("np-jobs:news:findGarage", function (_0xe9c475, _0x51bad8) {
      SetNewWaypoint(_0xe9c475.x, _0xe9c475.y);
    });
    var _0x5cfa5f;
    var _0x4efc0f;
    var _0x214ece;
    var _0x2a55a8;
    var _0x12a11f = null;
    onNet("np-jobs:news:arrived", function () {
      var _0x343ad9 = _0x22b5f5(function (_0x372d15, _0x15e78e, _0x4ecc23, _0x37c3f9, _0x74e434) {
        return _0x2b8489(this, function (_0x52c45a) {
          _0x5cfa5f = _0x372d15;
          _0x4efc0f = _0x74e434;
          _0x214ece = _0x37c3f9.pop().id;
          _0x2a55a8 = _0x4ecc23;
          _0x12a11f = setInterval(_0x22b5f5(function () {
            var _0x527a7f;
            return _0x2b8489(this, function (_0xbf992e) {
              _0x527a7f = GetEntityCoords(PlayerPedId());
              if (_0x5d5475.MathUtils.getDistance(_0x527a7f, [_0x5bb13e.x, _0x5bb13e.y, _0x5bb13e.z]) > _0x29d610) {
                _0x10598b.emitNet("np-jobs:news:completeActivity", _0x372d15, true);
                clearInterval(_0x12a11f);
              }
              return [2];
            });
          }), 15000);
          _0x10598b.emitNet("np-jobs:news:arrivedAtScene", _0x372d15);
          return [2];
        });
      });
      return function (_0x20ec36, _0x351d09, _0x497b15, _0x4c2cba, _0x32336e) {
        return _0x343ad9.apply(this, arguments);
      };
    }());
    onNet("np-jobs:news:askSkip", function () {
      var _0x970f12 = _0x22b5f5(function (_0x57af12, _0x25e3c8, _0x338f34, _0x158642, _0x1efb30) {
        var _0x39abc6;
        return _0x2b8489(this, function (_0x5879ee) {
          switch (_0x5879ee.label) {
            case 0:
              _0x5cfa5f = _0x57af12;
              _0x4efc0f = _0x1efb30;
              _0x214ece = _0x158642.pop().id;
              _0x2a55a8 = _0x338f34;
              return [4, _0x5d5475.wait(500)];
            case 1:
              _0x5879ee.sent();
              return [4, _0x54cb5f("News", "Do you want to move onto the next call?")];
            case 2:
              _0x39abc6 = _0x5879ee.sent();
              _0x10598b.emitNet("np-jobs:news:completeActivity", _0x57af12, _0x39abc6);
              return [2];
          }
        });
      });
      return function (_0x18f52a, _0x2c439d, _0x13f299, _0xfe1fec, _0x1b28d7) {
        return _0x970f12.apply(this, arguments);
      };
    }());
    ;
    var _0x3b2a90 = _0x3fbba9("np-jobs:trucking", "weights");
    ;
    function _0x1d3c59(_0xc3d00e, _0x21252d, _0x4d9a31, _0x53e5a3, _0x5afa42, _0x4229b2, _0x24465f) {
      try {
        var _0x154c0a = _0xc3d00e[_0x4229b2](_0x24465f);
        var _0x8e6def = _0x154c0a.value;
      } catch (_0x35bd75) {
        _0x4d9a31(_0x35bd75);
        return;
      }
      if (_0x154c0a.done) {
        _0x21252d(_0x8e6def);
      } else {
        Promise.resolve(_0x8e6def).then(_0x53e5a3, _0x5afa42);
      }
    }
    function _0x33fafc(_0x26236a) {
      return function () {
        var _0x450ff7 = this;
        var _0x1eb183 = arguments;
        return new Promise(function (_0x48f167, _0x51cbba) {
          var _0x21d587 = _0x26236a.apply(_0x450ff7, _0x1eb183);
          function _0x1f1523(_0x30c67f) {
            _0x1d3c59(_0x21d587, _0x48f167, _0x51cbba, _0x1f1523, _0x10cfdc, "next", _0x30c67f);
          }
          function _0x10cfdc(_0x2bc459) {
            _0x1d3c59(_0x21d587, _0x48f167, _0x51cbba, _0x1f1523, _0x10cfdc, "throw", _0x2bc459);
          }
          _0x1f1523(undefined);
        });
      };
    }
    function _0x32128d(_0x6196a3, _0x31ed9d) {
      var _0x5077d7;
      var _0x9afe83;
      var _0x459388;
      var _0x596f99;
      var _0x5546ff = {
        label: 0,
        sent: function () {
          if (_0x459388[0] & 1) {
            throw _0x459388[1];
          }
          return _0x459388[1];
        },
        trys: [],
        ops: []
      };
      _0x596f99 = {
        next: _0xbacf3f(0),
        throw: _0xbacf3f(1),
        return: _0xbacf3f(2)
      };
      if (typeof Symbol === "function") {
        _0x596f99[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x596f99;
      function _0xbacf3f(_0x1e4b17) {
        return function (_0x2084a9) {
          return _0xd6be2d([_0x1e4b17, _0x2084a9]);
        };
      }
      function _0xd6be2d(_0x519b19) {
        if (_0x5077d7) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5546ff) {
          try {
            _0x5077d7 = 1;
            if (_0x9afe83 && (_0x459388 = _0x519b19[0] & 2 ? _0x9afe83.return : _0x519b19[0] ? _0x9afe83.throw || ((_0x459388 = _0x9afe83.return) && _0x459388.call(_0x9afe83), 0) : _0x9afe83.next) && !(_0x459388 = _0x459388.call(_0x9afe83, _0x519b19[1])).done) {
              return _0x459388;
            }
            _0x9afe83 = 0;
            if (_0x459388) {
              _0x519b19 = [_0x519b19[0] & 2, _0x459388.value];
            }
            switch (_0x519b19[0]) {
              case 0:
              case 1:
                _0x459388 = _0x519b19;
                break;
              case 4:
                _0x5546ff.label++;
                var _0x61a22a = {
                  value: _0x519b19[1],
                  done: false
                };
                return _0x61a22a;
              case 5:
                _0x5546ff.label++;
                _0x9afe83 = _0x519b19[1];
                _0x519b19 = [0];
                continue;
              case 7:
                _0x519b19 = _0x5546ff.ops.pop();
                _0x5546ff.trys.pop();
                continue;
              default:
                if (!(_0x459388 = _0x5546ff.trys, _0x459388 = _0x459388.length > 0 && _0x459388[_0x459388.length - 1]) && (_0x519b19[0] === 6 || _0x519b19[0] === 2)) {
                  _0x5546ff = 0;
                  continue;
                }
                if (_0x519b19[0] === 3 && (!_0x459388 || _0x519b19[1] > _0x459388[0] && _0x519b19[1] < _0x459388[3])) {
                  _0x5546ff.label = _0x519b19[1];
                  break;
                }
                if (_0x519b19[0] === 6 && _0x5546ff.label < _0x459388[1]) {
                  _0x5546ff.label = _0x459388[1];
                  _0x459388 = _0x519b19;
                  break;
                }
                if (_0x459388 && _0x5546ff.label < _0x459388[2]) {
                  _0x5546ff.label = _0x459388[2];
                  _0x5546ff.ops.push(_0x519b19);
                  break;
                }
                if (_0x459388[2]) {
                  _0x5546ff.ops.pop();
                }
                _0x5546ff.trys.pop();
                continue;
            }
            _0x519b19 = _0x31ed9d.call(_0x6196a3, _0x5546ff);
          } catch (_0x5429e1) {
            _0x519b19 = [6, _0x5429e1];
            _0x9afe83 = 0;
          } finally {
            _0x5077d7 = _0x459388 = 0;
          }
        }
        if (_0x519b19[0] & 5) {
          throw _0x519b19[1];
        }
        var _0x277b8b = {
          value: _0x519b19[0] ? _0x519b19[1] : undefined,
          done: true
        };
        return _0x277b8b;
      }
    }
    function _0x32e3f1() {
      var _0x1184b3 = _0x297216.Sync.config.GetModuleConfig("np-jobs:trucking")?.models ?? {};
      var _0x57e42e = Object.values(_0x1184b3).map(function (_0x20b82a) {
        return _0x20b82a !== "packer" && GetHashKey(_0x20b82a);
      });
      _0x121f17.addVehicleInteraction("open_cargo", [{
        id: "open_cargo",
        label: "View Cargo",
        eventSDK: "np-jobs:trucking:openCargo",
        parameters: {}
      }, {
        id: "cargo_stats",
        label: "Cargo Info",
        eventSDK: "np-jobs:trucking:cargoStats",
        parameters: {}
      }], {
        distance: {
          draw: 8,
          use: 3
        },
        isEnabled: function (_0x51ccd1) {
          if (!_0x51ccd1) {
            return;
          }
          var _0x103baf = PlayerPedId();
          if (IsPedInAnyVehicle(_0x103baf, false)) {
            return;
          }
          var _0x68c590 = GetVehicleDoorLockStatus(_0x51ccd1);
          if (_0x68c590 > 1) {
            return;
          }
          var _0x33a078 = GetEntityModel(_0x51ccd1);
          return _0x57e42e.includes(_0x33a078) || _0x33a078 === GetHashKey("trailers2");
        },
        offset: function (_0x4ea9e7) {
          var _0x4eaf0c = GetEntityModel(_0x4ea9e7);
          if (_0x4eaf0c === GetHashKey("trailers2")) {
            return [0, -6, 0];
          }
          if (_0x4eaf0c === GetHashKey("pounder")) {
            return [0, -8, 0];
          }
          if (_0x4eaf0c === GetHashKey("boxville2")) {
            return [0, -3.8, 0];
          }
        }
      });
    }
    _0x10598b.on("np-jobs:trucking:openCargo", function (_0x19216e, _0x37882c) {
      var _0x35a23d = Entity(_0x37882c).state;
      var _0x4d0a7d = _0x35a23d.activityId;
      if (!_0x4d0a7d) {
        emit("DoLongHudText", "No activity found", 2);
        return;
      }
      var _0xd546cd = GetVehicleDoorLockStatus(_0x37882c);
      var _0x353428 = GetVehicleDoorAngleRatio(_0x37882c, 5);
      if (_0xd546cd !== 1 && _0x353428 < 0.1) {
        emit("DoLongHudText", "The trunk is locked", 2);
        return;
      }
      if (_0x353428 < 0.1) {
        _0x3cbfd9.g.exports["np-sync"].SyncedExecution("SetVehicleDoorOpen", _0x37882c, 5, false, false);
      }
      _0x2663ad.OpenInventory([`cargo::${_0x4d0a7d}`], true);
    });
    _0x10598b.on("np-jobs:trucking:cargoStats", function () {
      var _0x24915d = _0x33fafc(function (_0x3be138, _0x1c2921) {
        var _0x17ae1d;
        var _0x3c4794;
        var _0x51f12d;
        var _0x43a9ac;
        return _0x32128d(this, function (_0x490956) {
          switch (_0x490956.label) {
            case 0:
              _0x17ae1d = Entity(_0x1c2921).state;
              _0x3c4794 = _0x17ae1d.activityId;
              if (!_0x3c4794) {
                emit("DoLongHudText", "No activity found", 2);
                return [2];
              }
              return [4, RPC.execute("np-jobs:trucking:getActivityData", _0x3c4794)];
            case 1:
              _0x51f12d = _0x490956.sent();
              _0x43a9ac = [{
                title: "License Weight Limit",
                description: `${_0x3b2a90[_0x51f12d.progression][1]}kg`
              }, {
                title: "Contract Cargo (TYPE)",
                description: `${_0x51f12d.itemType.charAt(0).toUpperCase() + _0x51f12d.itemType.slice(1)}`
              }];
              globalThis.exports["np-ui"].showContextMenu(_0x43a9ac);
              return [2];
          }
        });
      });
      return function (_0x59d89d, _0x3a0fa2) {
        return _0x24915d.apply(this, arguments);
      };
    }());
    ;
    function _0x5dc36a() {}
    var _0xd1d2c6 = null;
    _0x2b402b.onEnter("trucking_collect", function (_0x2ee69f) {
      var _0x31f690 = _0x2ee69f.pickupLocation.contactPosition;
      emit("np-npcs:set:position", "CONTACT_trucking-delivery", new _0x26b14d(_0x31f690), _0x31f690[3]);
      _0xd1d2c6 = _0x2ee69f.id;
    });
    ;
    function _0x40b70c(_0x59d034, _0x3b9aba) {
      if (_0x3b9aba == null || _0x3b9aba > _0x59d034.length) {
        _0x3b9aba = _0x59d034.length;
      }
      for (var _0x49ff51 = 0, _0x3f3f4f = new Array(_0x3b9aba); _0x49ff51 < _0x3b9aba; _0x49ff51++) {
        _0x3f3f4f[_0x49ff51] = _0x59d034[_0x49ff51];
      }
      return _0x3f3f4f;
    }
    function _0xfcc066(_0x192760) {
      if (Array.isArray(_0x192760)) {
        return _0x192760;
      }
    }
    function _0x6005a6(_0xe99498, _0x3f2779, _0x381eb4, _0x3846a4, _0x3cb2a9, _0x7c4874, _0x5ac3bc) {
      try {
        var _0x4f80fd = _0xe99498[_0x7c4874](_0x5ac3bc);
        var _0x2de8d2 = _0x4f80fd.value;
      } catch (_0x90ac53) {
        _0x381eb4(_0x90ac53);
        return;
      }
      if (_0x4f80fd.done) {
        _0x3f2779(_0x2de8d2);
      } else {
        Promise.resolve(_0x2de8d2).then(_0x3846a4, _0x3cb2a9);
      }
    }
    function _0x5be923(_0x58ffa7) {
      return function () {
        var _0x21cdcd = this;
        var _0x193b08 = arguments;
        return new Promise(function (_0x23d715, _0x32cc85) {
          var _0x309f1a = _0x58ffa7.apply(_0x21cdcd, _0x193b08);
          function _0x547bdd(_0x2673c3) {
            _0x6005a6(_0x309f1a, _0x23d715, _0x32cc85, _0x547bdd, _0x13fdfe, "next", _0x2673c3);
          }
          function _0x13fdfe(_0x3c3c98) {
            _0x6005a6(_0x309f1a, _0x23d715, _0x32cc85, _0x547bdd, _0x13fdfe, "throw", _0x3c3c98);
          }
          _0x547bdd(undefined);
        });
      };
    }
    function _0x1ea93c(_0x1e5097, _0x674c) {
      var _0x5259bc = _0x1e5097 == null ? null : typeof Symbol !== "undefined" && _0x1e5097[Symbol.iterator] || _0x1e5097["@@iterator"];
      if (_0x5259bc == null) {
        return;
      }
      var _0x5d3992 = [];
      var _0x4767ce = true;
      var _0x160fd2 = false;
      var _0x2bf877;
      var _0xc1d046;
      try {
        for (_0x5259bc = _0x5259bc.call(_0x1e5097); !(_0x4767ce = (_0x2bf877 = _0x5259bc.next()).done); _0x4767ce = true) {
          _0x5d3992.push(_0x2bf877.value);
          if (_0x674c && _0x5d3992.length === _0x674c) {
            break;
          }
        }
      } catch (_0x194867) {
        _0x160fd2 = true;
        _0xc1d046 = _0x194867;
      } finally {
        try {
          if (!_0x4767ce && _0x5259bc.return != null) {
            _0x5259bc.return();
          }
        } finally {
          if (_0x160fd2) {
            throw _0xc1d046;
          }
        }
      }
      return _0x5d3992;
    }
    function _0x29ae9f() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x381267(_0x4c9b99, _0x5b3c25) {
      return _0xfcc066(_0x4c9b99) || _0x1ea93c(_0x4c9b99, _0x5b3c25) || _0x53b673(_0x4c9b99, _0x5b3c25) || _0x29ae9f();
    }
    function _0x53b673(_0x11bfaf, _0x19d057) {
      if (!_0x11bfaf) {
        return;
      }
      if (typeof _0x11bfaf === "string") {
        return _0x40b70c(_0x11bfaf, _0x19d057);
      }
      var _0x4b672f = Object.prototype.toString.call(_0x11bfaf).slice(8, -1);
      if (_0x4b672f === "Object" && _0x11bfaf.constructor) {
        _0x4b672f = _0x11bfaf.constructor.name;
      }
      if (_0x4b672f === "Map" || _0x4b672f === "Set") {
        return Array.from(_0x4b672f);
      }
      if (_0x4b672f === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x4b672f)) {
        return _0x40b70c(_0x11bfaf, _0x19d057);
      }
    }
    function _0x3b3e2d(_0x559d00, _0x482c5f) {
      var _0x53cdc1;
      var _0x6e5d60;
      var _0x4fadf3;
      var _0x2b1d31;
      var _0x1fff8a = {
        label: 0,
        sent: function () {
          if (_0x4fadf3[0] & 1) {
            throw _0x4fadf3[1];
          }
          return _0x4fadf3[1];
        },
        trys: [],
        ops: []
      };
      _0x2b1d31 = {
        next: _0x30d2ca(0),
        throw: _0x30d2ca(1),
        return: _0x30d2ca(2)
      };
      if (typeof Symbol === "function") {
        _0x2b1d31[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2b1d31;
      function _0x30d2ca(_0x6bf32d) {
        return function (_0x202571) {
          return _0x5eee24([_0x6bf32d, _0x202571]);
        };
      }
      function _0x5eee24(_0x518745) {
        if (_0x53cdc1) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1fff8a) {
          try {
            _0x53cdc1 = 1;
            if (_0x6e5d60 && (_0x4fadf3 = _0x518745[0] & 2 ? _0x6e5d60.return : _0x518745[0] ? _0x6e5d60.throw || ((_0x4fadf3 = _0x6e5d60.return) && _0x4fadf3.call(_0x6e5d60), 0) : _0x6e5d60.next) && !(_0x4fadf3 = _0x4fadf3.call(_0x6e5d60, _0x518745[1])).done) {
              return _0x4fadf3;
            }
            _0x6e5d60 = 0;
            if (_0x4fadf3) {
              _0x518745 = [_0x518745[0] & 2, _0x4fadf3.value];
            }
            switch (_0x518745[0]) {
              case 0:
              case 1:
                _0x4fadf3 = _0x518745;
                break;
              case 4:
                _0x1fff8a.label++;
                var _0x1641df = {
                  value: _0x518745[1],
                  done: false
                };
                return _0x1641df;
              case 5:
                _0x1fff8a.label++;
                _0x6e5d60 = _0x518745[1];
                _0x518745 = [0];
                continue;
              case 7:
                _0x518745 = _0x1fff8a.ops.pop();
                _0x1fff8a.trys.pop();
                continue;
              default:
                if (!(_0x4fadf3 = _0x1fff8a.trys, _0x4fadf3 = _0x4fadf3.length > 0 && _0x4fadf3[_0x4fadf3.length - 1]) && (_0x518745[0] === 6 || _0x518745[0] === 2)) {
                  _0x1fff8a = 0;
                  continue;
                }
                if (_0x518745[0] === 3 && (!_0x4fadf3 || _0x518745[1] > _0x4fadf3[0] && _0x518745[1] < _0x4fadf3[3])) {
                  _0x1fff8a.label = _0x518745[1];
                  break;
                }
                if (_0x518745[0] === 6 && _0x1fff8a.label < _0x4fadf3[1]) {
                  _0x1fff8a.label = _0x4fadf3[1];
                  _0x4fadf3 = _0x518745;
                  break;
                }
                if (_0x4fadf3 && _0x1fff8a.label < _0x4fadf3[2]) {
                  _0x1fff8a.label = _0x4fadf3[2];
                  _0x1fff8a.ops.push(_0x518745);
                  break;
                }
                if (_0x4fadf3[2]) {
                  _0x1fff8a.ops.pop();
                }
                _0x1fff8a.trys.pop();
                continue;
            }
            _0x518745 = _0x482c5f.call(_0x559d00, _0x1fff8a);
          } catch (_0x30a069) {
            _0x518745 = [6, _0x30a069];
            _0x6e5d60 = 0;
          } finally {
            _0x53cdc1 = _0x4fadf3 = 0;
          }
        }
        if (_0x518745[0] & 5) {
          throw _0x518745[1];
        }
        var _0x3162fe = {
          value: _0x518745[0] ? _0x518745[1] : undefined,
          done: true
        };
        return _0x3162fe;
      }
    }
    function _0x495a1e() {
      _0x5dc36a();
    }
    var _0x1f86ca;
    var _0x3de74e;
    var _0x2e8e78;
    var _0x1f8a28;
    var _0x27fac6;
    var _0x430dc5 = new Set();
    var _0x8d3dd5 = new Set();
    var _0xc73781 = false;
    var _0x2428e6 = new _0x536d04.Thread(function () {
      var _0x313b64 = PlayerPedId();
      var _0x44c73b = GetVehiclePedIsIn(_0x313b64, false);
      if (!_0x44c73b) {
        return;
      }
      var _0x494171 = _0x381267(GetVehicleTrailerVehicle(_0x44c73b), 1);
      var _0x3b3f88 = _0x494171[0];
      if (!_0x3b3f88) {
        return;
      }
      _0x3de74e("updateObjectiveData", _0x1f8a28, "status", "completed");
      _0x2428e6.stop();
    }, 0);
    function _0x5ea69e() {
      emit("np-npcs:set:position", "CONTACT_trucking-delivery", new _0x26b14d(0, 0, 0), 0);
      var _0x4ac8ed = true;
      var _0x1bb3f6 = false;
      var _0x18a3cd = undefined;
      try {
        for (var _0x524be1 = _0x430dc5[Symbol.iterator](), _0x10dbeb; !(_0x4ac8ed = (_0x10dbeb = _0x524be1.next()).done); _0x4ac8ed = true) {
          var _0x5169cd = _0x10dbeb.value;
          RemoveBlip(_0x5169cd);
        }
      } catch (_0x3fc06e) {
        _0x1bb3f6 = true;
        _0x18a3cd = _0x3fc06e;
      } finally {
        try {
          if (!_0x4ac8ed && _0x524be1.return != null) {
            _0x524be1.return();
          }
        } finally {
          if (_0x1bb3f6) {
            throw _0x18a3cd;
          }
        }
      }
      var _0x2bc68b = true;
      var _0x23f898 = false;
      var _0x7d9297 = undefined;
      try {
        for (var _0x1cd9f7 = _0x8d3dd5[Symbol.iterator](), _0x5574c2; !(_0x2bc68b = (_0x5574c2 = _0x1cd9f7.next()).done); _0x2bc68b = true) {
          var _0x193e8b = _0x5574c2.value;
          _0x2b402b.removeZone("trucking_collect", _0x193e8b);
        }
      } catch (_0x2a6610) {
        _0x23f898 = true;
        _0x7d9297 = _0x2a6610;
      } finally {
        try {
          if (!_0x2bc68b && _0x1cd9f7.return != null) {
            _0x1cd9f7.return();
          }
        } finally {
          if (_0x23f898) {
            throw _0x7d9297;
          }
        }
      }
      _0x430dc5.clear();
      _0x8d3dd5.clear();
    }
    onNet("np-jobs:trucking:attachTrailer", function () {
      var _0x4d7b50 = _0x5be923(function (_0x32d5e6, _0x3cab17, _0x2014e6, _0x3015a3, _0x53e72c) {
        return _0x3b3e2d(this, function (_0xe3d89d) {
          _0x1f86ca = _0x32d5e6;
          _0x3de74e = _0x53e72c;
          _0x1f8a28 = _0x3015a3.pop().id;
          _0x27fac6 = _0x2014e6;
          _0x2428e6.start();
          return [2];
        });
      });
      return function (_0x4d2b9c, _0x31aea4, _0x332ae9, _0x55a710, _0x429598) {
        return _0x4d7b50.apply(this, arguments);
      };
    }());
    onNet("np-jobs:trucking:collect", function (_0x4662ab, _0x560e86, _0x298258, _0x263328, _0x706dcd) {
      _0x1f86ca = _0x4662ab;
      _0x3de74e = _0x706dcd;
      _0x1f8a28 = _0x263328.pop().id;
      _0x27fac6 = _0x298258;
      var _0x3e17ca = _0x158296.get(_0x4662ab);
      if (!_0x3e17ca) {
        return;
      }
      var _0x33a3ef = _0x3e17ca.references.get("pickup_locations");
      var _0x555e99 = _0x33a3ef.settings;
      var _0x59671b = _0x555e99.pickupLocations;
      _0x5ea69e();
      var _0x523413 = true;
      var _0x5f1430 = false;
      var _0x8c34d6 = undefined;
      try {
        for (var _0xa1db9c = _0x59671b.entries()[Symbol.iterator](), _0x3a88fd; !(_0x523413 = (_0x3a88fd = _0xa1db9c.next()).done); _0x523413 = true) {
          var _0x54e177 = _0x381267(_0x3a88fd.value, 2);
          var _0x30ada = _0x54e177[0];
          var _0x2f86f4 = _0x54e177[1];
          var _0x1644c2 = _0x2f86f4.contactPosition;
          var _0x49a85a = {
            activityId: _0x4662ab,
            pickupLocation: _0x2f86f4
          };
          _0x2b402b.addCircleZone(_0x30ada.toString(), "trucking_collect", new _0x26b14d(_0x1644c2), 50, {}, _0x49a85a);
          var _0x30f139 = _0x4be8d9.createBlip("coord", _0x1644c2[0], _0x1644c2[1], _0x1644c2[2], 1);
          _0x4be8d9.applyBlipSettings(_0x30f139, "Pickup Location", 501, 17, undefined, 0.8, undefined, true);
          _0x430dc5.add(_0x30f139);
          _0x8d3dd5.add(_0x30ada.toString());
        }
      } catch (_0x20ea61) {
        _0x5f1430 = true;
        _0x8c34d6 = _0x20ea61;
      } finally {
        try {
          if (!_0x523413 && _0xa1db9c.return != null) {
            _0xa1db9c.return();
          }
        } finally {
          if (_0x5f1430) {
            throw _0x8c34d6;
          }
        }
      }
    });
    onNet("np-jobs:trucking:askSkip", function () {
      var _0x27edb3 = _0x5be923(function (_0x401f22, _0x23fc2a, _0x3ca74d, _0x2f44d9, _0x2bbc8f) {
        var _0x3f6db1;
        return _0x3b3e2d(this, function (_0x521eeb) {
          switch (_0x521eeb.label) {
            case 0:
              _0x1f86ca = _0x401f22;
              _0x3de74e = _0x2bbc8f;
              _0x1f8a28 = _0x2f44d9.pop().id;
              _0x27fac6 = _0x3ca74d;
              return [4, _0x5d5475.wait(500)];
            case 1:
              _0x521eeb.sent();
              return [4, _0x54cb5f("Trucking", "Do you want to continue choosing another contract? Pay attention, you can go overweight!")];
            case 2:
              _0x3f6db1 = _0x521eeb.sent();
              _0x10598b.emitNet("np-jobs:trucking:skipTask", _0x3f6db1);
              return [2];
          }
        });
      });
      return function (_0x4f6286, _0xe6c7be, _0x5a08fd, _0x4ea911, _0x41ae33) {
        return _0x27edb3.apply(this, arguments);
      };
    }());
    onNet("np-jobs:trucking:parking", function () {
      var _0x3b6e0b = _0x5be923(function (_0x5c1530, _0x5c81bb, _0x42e8b6, _0x6835ad, _0x366409) {
        var _0x10495a;
        var _0x87f8a7;
        var _0x87825e;
        var _0x52ae34;
        var _0x4baa1d;
        var _0x2ed7f7;
        var _0x3e3909;
        var _0x3a1042;
        var _0x2b128a;
        var _0x403a1f;
        var _0x33c209;
        var _0xfbd8b2;
        var _0x160738;
        var _0x8a673f;
        var _0x26eb65;
        var _0x527a58;
        var _0x1c3da9;
        var _0x299117;
        return _0x3b3e2d(this, function (_0x4b7c37) {
          switch (_0x4b7c37.label) {
            case 0:
              _0x1f86ca = _0x5c1530;
              _0x3de74e = _0x366409;
              _0x1f8a28 = _0x6835ad.pop().id;
              _0x27fac6 = _0x42e8b6;
              _0x10495a = _0x158296.get(_0x5c1530);
              if (!_0x10495a) {
                return [2];
              }
              _0x87f8a7 = _0x10495a.references.get("delivery_location");
              _0x87825e = _0x87f8a7.settings;
              _0x52ae34 = _0x87825e.vectors;
              _0x4baa1d = _0x10495a.references.get("vehicle_target");
              _0x2ed7f7 = _0x4baa1d.settings;
              _0x3e3909 = _0x2ed7f7.model;
              _0x3a1042 = PlayerPedId();
              _0x2b128a = GetVehiclePedIsIn(_0x3a1042, false);
              if (!_0x2b128a) {
                return [2];
              }
              _0x403a1f = _0x381267(GetVehicleTrailerVehicle(_0x2b128a), 2);
              _0x33c209 = _0x403a1f[0];
              _0xfbd8b2 = _0x403a1f[1];
              _0x160738 = _0x33c209 ? _0xfbd8b2 : _0x2b128a;
              if (!_0x160738) {
                return [2];
              }
              return [4, _0x5d5475.waitForCondition(function () {
                return !!GetVehiclePedIsIn(_0x3a1042, false);
              }, 10000)];
            case 1:
              _0x4b7c37.sent();
              if (!_0x160738) {
                return [2];
              }
              _0x8a673f = _0x381267(GetModelDimensions(_0x3e3909), 2);
              _0x26eb65 = _0x8a673f[0];
              _0x527a58 = _0x8a673f[1];
              var _0x266ccf = {
                activityId: _0x5c1530
              };
              _0x2b402b.addBoxZone("trucking_parking", "trucking_parking", _0x52ae34, _0x527a58[1] * 3, _0x527a58[2] * 1.5, {
                heading: _0x87825e.heading,
                minZ: _0x52ae34.z - 4,
                maxZ: _0x52ae34.z + 2,
                debugPoly: true
              }, _0x266ccf);
              _0x1c3da9 = [0, 248, 185];
              _0x299117 = setTick(_0x5be923(function () {
                var _0xe153cb;
                var _0x20a6a9;
                var _0x2e0a20;
                var _0x1c469b;
                var _0x198beb;
                var _0x6701c5;
                var _0x21a383;
                var _0xe4f4fe;
                var _0xa9cc5d;
                var _0x1ab8e8;
                var _0x4ee56e;
                var _0xdc2715;
                var _0x5b5c70;
                return _0x3b3e2d(this, function (_0x4d17a3) {
                  switch (_0x4d17a3.label) {
                    case 0:
                      _0xe153cb = 500;
                      if (_0x1f8a28 !== "park_vehicle") {
                        clearTick(_0x299117);
                      }
                      _0x20a6a9 = PlayerPedId();
                      _0x2e0a20 = GetVehiclePedIsIn(_0x20a6a9, false);
                      if (!_0x2e0a20) {
                        return [2];
                      }
                      _0x1c469b = _0x381267(GetVehicleTrailerVehicle(_0x2e0a20), 2);
                      _0x198beb = _0x1c469b[0];
                      _0x6701c5 = _0x1c469b[1];
                      _0x21a383 = _0x198beb ? _0x6701c5 : _0x2e0a20;
                      if (!_0x21a383) {
                        return [2];
                      }
                      _0xe4f4fe = new _0x26b14d(GetEntityCoords(_0x21a383, false));
                      _0xa9cc5d = GetEntityHeading(_0x21a383);
                      _0x1ab8e8 = _0xe4f4fe.getDistance(_0x52ae34);
                      _0x4ee56e = Math.abs(_0xa9cc5d - _0x87825e.heading);
                      _0xdc2715 = [0, 248, 185];
                      if (_0x1ab8e8 < 4 && _0x4ee56e < 4) {
                        _0xdc2715 = [0, 248, 185];
                      } else {
                        _0xdc2715 = [248, 105, 105];
                      }
                      _0x5b5c70 = _0xdc2715[0] === 0;
                      if (_0x1c3da9[0] !== _0xdc2715[0]) {
                        _0x297216.Sync["np-polyzone"].AlterZoneColor("trucking_parking", _0xdc2715);
                        if (_0x5b5c70) {
                          _0x297216.Sync["np-ui"].showInteraction("[E] Park", "success");
                        } else {
                          _0x297216.Sync["np-ui"].hideInteraction();
                        }
                      }
                      if (_0x5b5c70) {
                        _0xe153cb = 0;
                        if (IsControlJustPressed(0, _0x1f76dd.E)) {
                          _0x3de74e("updateObjectiveData", _0x1f8a28, "status", "completed");
                        }
                      }
                      _0x1c3da9 = _0xdc2715;
                      if (!_0xe153cb) {
                        return [3, 2];
                      }
                      return [4, _0x5d5475.wait(_0xe153cb)];
                    case 1:
                      _0x4d17a3.sent();
                      _0x4d17a3.label = 2;
                    case 2:
                      return [2];
                  }
                });
              }));
              return [2];
          }
        });
      });
      return function (_0x404671, _0x2fc00c, _0x2f3a9d, _0x2dab5b, _0x4989c0) {
        return _0x3b6e0b.apply(this, arguments);
      };
    }());
    onNet("np-jobs:trucking:unload", function (_0x335a48, _0x41411a, _0xcb0f7, _0x15b404, _0x455741) {
      _0x1f86ca = _0x335a48;
      _0x3de74e = _0x455741;
      _0x1f8a28 = _0x15b404.pop().id;
      _0x27fac6 = _0xcb0f7;
      globalThis.exports["np-ui"].hideInteraction();
      _0x2b402b.removeZone("trucking_parking", "trucking_parking");
      var _0x452695 = _0x158296.get(_0x335a48);
      if (!_0x452695) {
        return;
      }
      var _0x382178 = _0x452695.references.get("delivery_ped_location");
      var _0x19b5ab = _0x382178.settings;
      var _0x3d65ad = _0x19b5ab.vectors;
      emit("np-npcs:set:position", "CONTACT_trucking-delivery", _0x3d65ad, _0x19b5ab.heading);
    });
    _0x10598b.on("np-jobs:trucking:openBoxes", function (_0x32483f, _0x4eeee7) {
      _0x2663ad.OpenInventory([`trucking-boxes::${_0x1f86ca}-${_0xd1d2c6}`], true);
    });
    onNet("np-jobs:trucking:chooseContract", function () {
      var _0x40e9e7 = _0x5be923(function (_0x2fda42, _0x4ef125, _0x3439b9, _0x267471, _0x5f2baf) {
        return _0x3b3e2d(this, function (_0x5d0394) {
          _0xc73781 = true;
          _0x1f86ca = _0x2fda42;
          _0x3de74e = _0x5f2baf;
          _0x1f8a28 = _0x267471.pop().id;
          _0x27fac6 = _0x3439b9;
          return [2];
        });
      });
      return function (_0x6a01b0, _0xea91fa, _0x339604, _0x56a3bb, _0x2d6422) {
        return _0x40e9e7.apply(this, arguments);
      };
    }());
    _0x10598b.onNet("np-jobs:trucking:job:started", function () {
      _0xc73781 = false;
    });
    onNet("np:jobs:activityCompleted", function () {
      _0x1f86ca = null;
      _0x3de74e = null;
      _0x2e8e78 = null;
      _0x1f8a28 = null;
      _0x27fac6 = null;
      _0x5ea69e();
    });
    on("onResourceStop", function (_0x33514c) {
      if (GetCurrentResourceName() != _0x33514c) {
        return;
      }
      _0x5ea69e();
    });
    ;
    function _0x12ed28(_0x35031a, _0x3c6501, _0x309c50, _0x49d43d, _0x560134, _0x35dadf, _0xe93149) {
      try {
        var _0x349e38 = _0x35031a[_0x35dadf](_0xe93149);
        var _0x122182 = _0x349e38.value;
      } catch (_0x10f347) {
        _0x309c50(_0x10f347);
        return;
      }
      if (_0x349e38.done) {
        _0x3c6501(_0x122182);
      } else {
        Promise.resolve(_0x122182).then(_0x49d43d, _0x560134);
      }
    }
    function _0x377ec3(_0x3e187d) {
      return function () {
        var _0x5383e2 = this;
        var _0x1ff82c = arguments;
        return new Promise(function (_0x3c340f, _0x42d022) {
          var _0x3c868f = _0x3e187d.apply(_0x5383e2, _0x1ff82c);
          function _0x264785(_0x5339d3) {
            _0x12ed28(_0x3c868f, _0x3c340f, _0x42d022, _0x264785, _0x3bc3bf, "next", _0x5339d3);
          }
          function _0x3bc3bf(_0x1f04ca) {
            _0x12ed28(_0x3c868f, _0x3c340f, _0x42d022, _0x264785, _0x3bc3bf, "throw", _0x1f04ca);
          }
          _0x264785(undefined);
        });
      };
    }
    function _0xb4867e(_0x1b388b, _0x354f4c, _0x55d899) {
      if (_0x354f4c in _0x1b388b) {
        var _0x1ed111 = {
          value: _0x55d899,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x1b388b, _0x354f4c, _0x1ed111);
      } else {
        _0x1b388b[_0x354f4c] = _0x55d899;
      }
      return _0x1b388b;
    }
    function _0xef3f70(_0x40597e) {
      for (var _0xce0a = 1; _0xce0a < arguments.length; _0xce0a++) {
        var _0x102b4e = arguments[_0xce0a] ?? {};
        var _0x3e72d3 = Object.keys(_0x102b4e);
        if (typeof Object.getOwnPropertySymbols === "function") {
          _0x3e72d3 = _0x3e72d3.concat(Object.getOwnPropertySymbols(_0x102b4e).filter(function (_0xa56dd9) {
            return Object.getOwnPropertyDescriptor(_0x102b4e, _0xa56dd9).enumerable;
          }));
        }
        _0x3e72d3.forEach(function (_0x2d7964) {
          _0xb4867e(_0x40597e, _0x2d7964, _0x102b4e[_0x2d7964]);
        });
      }
      return _0x40597e;
    }
    function _0x29b739(_0x393ac9, _0x7bdf44) {
      var _0x104e52 = Object.keys(_0x393ac9);
      if (Object.getOwnPropertySymbols) {
        var _0x548b20 = Object.getOwnPropertySymbols(_0x393ac9);
        if (_0x7bdf44) {
          _0x548b20 = _0x548b20.filter(function (_0x31a24e) {
            return Object.getOwnPropertyDescriptor(_0x393ac9, _0x31a24e).enumerable;
          });
        }
        _0x104e52.push.apply(_0x104e52, _0x548b20);
      }
      return _0x104e52;
    }
    function _0x2d8190(_0x5a6613, _0x3a6cea) {
      _0x3a6cea = _0x3a6cea ?? {};
      if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(_0x5a6613, Object.getOwnPropertyDescriptors(_0x3a6cea));
      } else {
        _0x29b739(Object(_0x3a6cea)).forEach(function (_0x205616) {
          Object.defineProperty(_0x5a6613, _0x205616, Object.getOwnPropertyDescriptor(_0x3a6cea, _0x205616));
        });
      }
      return _0x5a6613;
    }
    function _0x39809b(_0x523a16, _0x479cda) {
      var _0x59c374;
      var _0x57ad00;
      var _0x1d6957;
      var _0xe38f8a;
      var _0x22060d = {
        label: 0,
        sent: function () {
          if (_0x1d6957[0] & 1) {
            throw _0x1d6957[1];
          }
          return _0x1d6957[1];
        },
        trys: [],
        ops: []
      };
      _0xe38f8a = {
        next: _0x24a28a(0),
        throw: _0x24a28a(1),
        return: _0x24a28a(2)
      };
      if (typeof Symbol === "function") {
        _0xe38f8a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0xe38f8a;
      function _0x24a28a(_0x2afd09) {
        return function (_0x6bbacf) {
          return _0x476a0b([_0x2afd09, _0x6bbacf]);
        };
      }
      function _0x476a0b(_0xf7ce5a) {
        if (_0x59c374) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x22060d) {
          try {
            _0x59c374 = 1;
            if (_0x57ad00 && (_0x1d6957 = _0xf7ce5a[0] & 2 ? _0x57ad00.return : _0xf7ce5a[0] ? _0x57ad00.throw || ((_0x1d6957 = _0x57ad00.return) && _0x1d6957.call(_0x57ad00), 0) : _0x57ad00.next) && !(_0x1d6957 = _0x1d6957.call(_0x57ad00, _0xf7ce5a[1])).done) {
              return _0x1d6957;
            }
            _0x57ad00 = 0;
            if (_0x1d6957) {
              _0xf7ce5a = [_0xf7ce5a[0] & 2, _0x1d6957.value];
            }
            switch (_0xf7ce5a[0]) {
              case 0:
              case 1:
                _0x1d6957 = _0xf7ce5a;
                break;
              case 4:
                _0x22060d.label++;
                var _0x5c896c = {
                  value: _0xf7ce5a[1],
                  done: false
                };
                return _0x5c896c;
              case 5:
                _0x22060d.label++;
                _0x57ad00 = _0xf7ce5a[1];
                _0xf7ce5a = [0];
                continue;
              case 7:
                _0xf7ce5a = _0x22060d.ops.pop();
                _0x22060d.trys.pop();
                continue;
              default:
                if (!(_0x1d6957 = _0x22060d.trys, _0x1d6957 = _0x1d6957.length > 0 && _0x1d6957[_0x1d6957.length - 1]) && (_0xf7ce5a[0] === 6 || _0xf7ce5a[0] === 2)) {
                  _0x22060d = 0;
                  continue;
                }
                if (_0xf7ce5a[0] === 3 && (!_0x1d6957 || _0xf7ce5a[1] > _0x1d6957[0] && _0xf7ce5a[1] < _0x1d6957[3])) {
                  _0x22060d.label = _0xf7ce5a[1];
                  break;
                }
                if (_0xf7ce5a[0] === 6 && _0x22060d.label < _0x1d6957[1]) {
                  _0x22060d.label = _0x1d6957[1];
                  _0x1d6957 = _0xf7ce5a;
                  break;
                }
                if (_0x1d6957 && _0x22060d.label < _0x1d6957[2]) {
                  _0x22060d.label = _0x1d6957[2];
                  _0x22060d.ops.push(_0xf7ce5a);
                  break;
                }
                if (_0x1d6957[2]) {
                  _0x22060d.ops.pop();
                }
                _0x22060d.trys.pop();
                continue;
            }
            _0xf7ce5a = _0x479cda.call(_0x523a16, _0x22060d);
          } catch (_0x4084c5) {
            _0xf7ce5a = [6, _0x4084c5];
            _0x57ad00 = 0;
          } finally {
            _0x59c374 = _0x1d6957 = 0;
          }
        }
        if (_0xf7ce5a[0] & 5) {
          throw _0xf7ce5a[1];
        }
        var _0x1c2b10 = {
          value: _0xf7ce5a[0] ? _0xf7ce5a[1] : undefined,
          done: true
        };
        return _0x1c2b10;
      }
    }
    var _0x2e252a = {};
    function _0x34af4a() {
      var _0x1c92fd = _0x297216.Sync.config.GetModuleConfig("np-jobs:trucking")?.models ?? {};
      _0x2e252a = {
        0: {
          current: GetDisplayNameFromVehicleModel(GetHashKey(_0x1c92fd[0])),
          next: GetDisplayNameFromVehicleModel(GetHashKey(_0x1c92fd[150])),
          nextProgression: 150
        },
        150: {
          current: GetDisplayNameFromVehicleModel(GetHashKey(_0x1c92fd[150])),
          next: GetDisplayNameFromVehicleModel(GetHashKey(_0x1c92fd[300])),
          nextProgression: 300
        },
        300: {
          current: GetDisplayNameFromVehicleModel(GetHashKey(_0x1c92fd[300])),
          next: "MAX",
          nextProgression: 300
        }
      };
    }
    var _0x35cf35 = function () {
      var _0x30449b = _0x377ec3(function () {
        var _0x40831c;
        var _0x53fa02;
        var _0x318ecc;
        var _0x83cd1d;
        var _0x46f8de;
        var _0x251d2e;
        var _0x369484;
        var _0x24b33a;
        var _0x4926b4;
        var _0x18e92d;
        var _0x39bbb8;
        return _0x39809b(this, function (_0x1328da) {
          switch (_0x1328da.label) {
            case 0:
              return [4, _0x11a862.execute("contacts:getContact", "trucking")];
            case 1:
              _0x40831c = _0x1328da.sent();
              if (!_0x40831c) {
                return [2];
              }
              _0x53fa02 = _0x297216.Sync["np-progression"].GetProgression(`CONTACT_${_0x40831c.progressionId ?? _0x40831c.id}`) ?? 0;
              _0x318ecc = Object.keys(_0x2e252a).map(function (_0x149541) {
                return parseInt(_0x149541);
              });
              _0x83cd1d = _0x318ecc.sort(function (_0x3a3bc2, _0x13e923) {
                return _0x3a3bc2 - _0x13e923;
              });
              _0x46f8de = _0x2e252a[_0x83cd1d[0]];
              _0x251d2e = true;
              _0x369484 = false;
              _0x24b33a = undefined;
              try {
                for (_0x4926b4 = _0x83cd1d[Symbol.iterator](); !(_0x251d2e = (_0x18e92d = _0x4926b4.next()).done); _0x251d2e = true) {
                  _0x39bbb8 = _0x18e92d.value;
                  if (_0x53fa02 >= _0x39bbb8) {
                    _0x46f8de = _0x2e252a[_0x39bbb8];
                  }
                }
              } catch (_0x502891) {
                _0x369484 = true;
                _0x24b33a = _0x502891;
              } finally {
                try {
                  if (!_0x251d2e && _0x4926b4.return != null) {
                    _0x4926b4.return();
                  }
                } finally {
                  if (_0x369484) {
                    throw _0x24b33a;
                  }
                }
              }
              var _0x43870b = {
                progression: _0x53fa02
              };
              return [2, _0x2d8190(_0xef3f70({}, _0x46f8de), _0x43870b)];
          }
        });
      });
      return function _0x5b62c9() {
        return _0x30449b.apply(this, arguments);
      };
    }();
    _0x297216.Sync("getTruckingProgression", _0x35cf35);
    var _0xa8b270 = function () {
      var _0x42008f = _0x377ec3(function () {
        var _0x50cc0d;
        return _0x39809b(this, function (_0x295efb) {
          switch (_0x295efb.label) {
            case 0:
              return [4, _0x11a862.execute("np-jobs:trucking:getCurrentContract")];
            case 1:
              _0x50cc0d = _0x295efb.sent();
              return [2, [_0x50cc0d, _0xc73781]];
          }
        });
      });
      return function _0x4b7fb0() {
        return _0x42008f.apply(this, arguments);
      };
    }();
    _0x297216.Sync("getCurrentContract", _0xa8b270);
    function _0x18f6ea() {
      var _0xfdf5f = _0x3fbba9("np-jobs:trucking", "vehiclePrices");
      return _0xfdf5f;
    }
    _0x297216.Sync("getVehiclePrices", _0x18f6ea);
    ;
    function _0x4292cc(_0x293b3a, _0x55a903, _0x4cf6bf, _0x227743, _0x489448, _0x4afa3c, _0x36c685) {
      try {
        var _0x15bee0 = _0x293b3a[_0x4afa3c](_0x36c685);
        var _0x4c9e3d = _0x15bee0.value;
      } catch (_0x4bc5c0) {
        _0x4cf6bf(_0x4bc5c0);
        return;
      }
      if (_0x15bee0.done) {
        _0x55a903(_0x4c9e3d);
      } else {
        Promise.resolve(_0x4c9e3d).then(_0x227743, _0x489448);
      }
    }
    function _0x43a5c7(_0x1383e6) {
      return function () {
        var _0xa2f59c = this;
        var _0x2e2239 = arguments;
        return new Promise(function (_0x433352, _0x14e810) {
          var _0x2a73dc = _0x1383e6.apply(_0xa2f59c, _0x2e2239);
          function _0x4a1ab4(_0x4eb04c) {
            _0x4292cc(_0x2a73dc, _0x433352, _0x14e810, _0x4a1ab4, _0x2027a7, "next", _0x4eb04c);
          }
          function _0x2027a7(_0x254ee5) {
            _0x4292cc(_0x2a73dc, _0x433352, _0x14e810, _0x4a1ab4, _0x2027a7, "throw", _0x254ee5);
          }
          _0x4a1ab4(undefined);
        });
      };
    }
    function _0x556fef(_0x4e186e, _0x14afd7) {
      var _0x4bba27;
      var _0x5d88eb;
      var _0x30ba64;
      var _0x19a8ae;
      var _0x3df99b = {
        label: 0,
        sent: function () {
          if (_0x30ba64[0] & 1) {
            throw _0x30ba64[1];
          }
          return _0x30ba64[1];
        },
        trys: [],
        ops: []
      };
      _0x19a8ae = {
        next: _0x35d3a2(0),
        throw: _0x35d3a2(1),
        return: _0x35d3a2(2)
      };
      if (typeof Symbol === "function") {
        _0x19a8ae[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x19a8ae;
      function _0x35d3a2(_0x3c26fa) {
        return function (_0x2eecf0) {
          return _0x2c9a0f([_0x3c26fa, _0x2eecf0]);
        };
      }
      function _0x2c9a0f(_0x2dfb02) {
        if (_0x4bba27) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3df99b) {
          try {
            _0x4bba27 = 1;
            if (_0x5d88eb && (_0x30ba64 = _0x2dfb02[0] & 2 ? _0x5d88eb.return : _0x2dfb02[0] ? _0x5d88eb.throw || ((_0x30ba64 = _0x5d88eb.return) && _0x30ba64.call(_0x5d88eb), 0) : _0x5d88eb.next) && !(_0x30ba64 = _0x30ba64.call(_0x5d88eb, _0x2dfb02[1])).done) {
              return _0x30ba64;
            }
            _0x5d88eb = 0;
            if (_0x30ba64) {
              _0x2dfb02 = [_0x2dfb02[0] & 2, _0x30ba64.value];
            }
            switch (_0x2dfb02[0]) {
              case 0:
              case 1:
                _0x30ba64 = _0x2dfb02;
                break;
              case 4:
                _0x3df99b.label++;
                var _0x223d9b = {
                  value: _0x2dfb02[1],
                  done: false
                };
                return _0x223d9b;
              case 5:
                _0x3df99b.label++;
                _0x5d88eb = _0x2dfb02[1];
                _0x2dfb02 = [0];
                continue;
              case 7:
                _0x2dfb02 = _0x3df99b.ops.pop();
                _0x3df99b.trys.pop();
                continue;
              default:
                if (!(_0x30ba64 = _0x3df99b.trys, _0x30ba64 = _0x30ba64.length > 0 && _0x30ba64[_0x30ba64.length - 1]) && (_0x2dfb02[0] === 6 || _0x2dfb02[0] === 2)) {
                  _0x3df99b = 0;
                  continue;
                }
                if (_0x2dfb02[0] === 3 && (!_0x30ba64 || _0x2dfb02[1] > _0x30ba64[0] && _0x2dfb02[1] < _0x30ba64[3])) {
                  _0x3df99b.label = _0x2dfb02[1];
                  break;
                }
                if (_0x2dfb02[0] === 6 && _0x3df99b.label < _0x30ba64[1]) {
                  _0x3df99b.label = _0x30ba64[1];
                  _0x30ba64 = _0x2dfb02;
                  break;
                }
                if (_0x30ba64 && _0x3df99b.label < _0x30ba64[2]) {
                  _0x3df99b.label = _0x30ba64[2];
                  _0x3df99b.ops.push(_0x2dfb02);
                  break;
                }
                if (_0x30ba64[2]) {
                  _0x3df99b.ops.pop();
                }
                _0x3df99b.trys.pop();
                continue;
            }
            _0x2dfb02 = _0x14afd7.call(_0x4e186e, _0x3df99b);
          } catch (_0x1ebe9a) {
            _0x2dfb02 = [6, _0x1ebe9a];
            _0x5d88eb = 0;
          } finally {
            _0x4bba27 = _0x30ba64 = 0;
          }
        }
        if (_0x2dfb02[0] & 5) {
          throw _0x2dfb02[1];
        }
        var _0x15d487 = {
          value: _0x2dfb02[0] ? _0x2dfb02[1] : undefined,
          done: true
        };
        return _0x15d487;
      }
    }
    var _0x469271 = function () {
      var _0x4704fb = _0x43a5c7(function () {
        return _0x556fef(this, function (_0x51d1f8) {
          _0x32e3f1();
          _0x34af4a();
          _0x495a1e();
          return [2];
        });
      });
      return function _0x226afa() {
        return _0x4704fb.apply(this, arguments);
      };
    }();
    ;
    function _0x271e87(_0x514656, _0x563097) {
      if (_0x563097 == null || _0x563097 > _0x514656.length) {
        _0x563097 = _0x514656.length;
      }
      for (var _0x277053 = 0, _0x2192e6 = new Array(_0x563097); _0x277053 < _0x563097; _0x277053++) {
        _0x2192e6[_0x277053] = _0x514656[_0x277053];
      }
      return _0x2192e6;
    }
    function _0x512f68(_0x235572) {
      if (Array.isArray(_0x235572)) {
        return _0x235572;
      }
    }
    function _0x5ddab4(_0xbb3f12) {
      if (Array.isArray(_0xbb3f12)) {
        return _0x271e87(_0xbb3f12);
      }
    }
    function _0x2271ea(_0x5e65c1, _0x23f1d1, _0x368808, _0x115718, _0x146781, _0x5a153b, _0x4539a1) {
      try {
        var _0xecec65 = _0x5e65c1[_0x5a153b](_0x4539a1);
        var _0x438312 = _0xecec65.value;
      } catch (_0x5e6f0f) {
        _0x368808(_0x5e6f0f);
        return;
      }
      if (_0xecec65.done) {
        _0x23f1d1(_0x438312);
      } else {
        Promise.resolve(_0x438312).then(_0x115718, _0x146781);
      }
    }
    function _0x12889d(_0x3fe143) {
      return function () {
        var _0x1c3c6e = this;
        var _0x38cd12 = arguments;
        return new Promise(function (_0x8f27c1, _0x3daee1) {
          var _0x6f0c8 = _0x3fe143.apply(_0x1c3c6e, _0x38cd12);
          function _0x5ad5ef(_0x4a0cd0) {
            _0x2271ea(_0x6f0c8, _0x8f27c1, _0x3daee1, _0x5ad5ef, _0x326eac, "next", _0x4a0cd0);
          }
          function _0x326eac(_0x425a30) {
            _0x2271ea(_0x6f0c8, _0x8f27c1, _0x3daee1, _0x5ad5ef, _0x326eac, "throw", _0x425a30);
          }
          _0x5ad5ef(undefined);
        });
      };
    }
    function _0x38239f(_0x58d842) {
      if (typeof Symbol !== "undefined" && _0x58d842[Symbol.iterator] != null || _0x58d842["@@iterator"] != null) {
        return Array.from(_0x58d842);
      }
    }
    function _0x54d434(_0x149365, _0x353d6a) {
      var _0x22f4f0 = _0x149365 == null ? null : typeof Symbol !== "undefined" && _0x149365[Symbol.iterator] || _0x149365["@@iterator"];
      if (_0x22f4f0 == null) {
        return;
      }
      var _0x2ce1fd = [];
      var _0xaa474b = true;
      var _0x52080e = false;
      var _0x5e6d3a;
      var _0xf9b94c;
      try {
        for (_0x22f4f0 = _0x22f4f0.call(_0x149365); !(_0xaa474b = (_0x5e6d3a = _0x22f4f0.next()).done); _0xaa474b = true) {
          _0x2ce1fd.push(_0x5e6d3a.value);
          if (_0x353d6a && _0x2ce1fd.length === _0x353d6a) {
            break;
          }
        }
      } catch (_0x371e37) {
        _0x52080e = true;
        _0xf9b94c = _0x371e37;
      } finally {
        try {
          if (!_0xaa474b && _0x22f4f0.return != null) {
            _0x22f4f0.return();
          }
        } finally {
          if (_0x52080e) {
            throw _0xf9b94c;
          }
        }
      }
      return _0x2ce1fd;
    }
    function _0x35daef() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0xb137d5() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0xd2d881(_0x1be404, _0x1c474d) {
      return _0x512f68(_0x1be404) || _0x54d434(_0x1be404, _0x1c474d) || _0x3b29b5(_0x1be404, _0x1c474d) || _0x35daef();
    }
    function _0x497294(_0x28ad19) {
      return _0x5ddab4(_0x28ad19) || _0x38239f(_0x28ad19) || _0x3b29b5(_0x28ad19) || _0xb137d5();
    }
    function _0x3b29b5(_0x47af52, _0x4cf05e) {
      if (!_0x47af52) {
        return;
      }
      if (typeof _0x47af52 === "string") {
        return _0x271e87(_0x47af52, _0x4cf05e);
      }
      var _0x1604ad = Object.prototype.toString.call(_0x47af52).slice(8, -1);
      if (_0x1604ad === "Object" && _0x47af52.constructor) {
        _0x1604ad = _0x47af52.constructor.name;
      }
      if (_0x1604ad === "Map" || _0x1604ad === "Set") {
        return Array.from(_0x1604ad);
      }
      if (_0x1604ad === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x1604ad)) {
        return _0x271e87(_0x47af52, _0x4cf05e);
      }
    }
    function _0x33dd7(_0x437683, _0x2dc39b) {
      var _0x33eb73;
      var _0x140bb1;
      var _0x3e6f02;
      var _0x40d53d;
      var _0x5e2ccc = {
        label: 0,
        sent: function () {
          if (_0x3e6f02[0] & 1) {
            throw _0x3e6f02[1];
          }
          return _0x3e6f02[1];
        },
        trys: [],
        ops: []
      };
      _0x40d53d = {
        next: _0x44d0cf(0),
        throw: _0x44d0cf(1),
        return: _0x44d0cf(2)
      };
      if (typeof Symbol === "function") {
        _0x40d53d[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x40d53d;
      function _0x44d0cf(_0x147517) {
        return function (_0x56dc3b) {
          return _0x372765([_0x147517, _0x56dc3b]);
        };
      }
      function _0x372765(_0x16cb09) {
        if (_0x33eb73) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5e2ccc) {
          try {
            _0x33eb73 = 1;
            if (_0x140bb1 && (_0x3e6f02 = _0x16cb09[0] & 2 ? _0x140bb1.return : _0x16cb09[0] ? _0x140bb1.throw || ((_0x3e6f02 = _0x140bb1.return) && _0x3e6f02.call(_0x140bb1), 0) : _0x140bb1.next) && !(_0x3e6f02 = _0x3e6f02.call(_0x140bb1, _0x16cb09[1])).done) {
              return _0x3e6f02;
            }
            _0x140bb1 = 0;
            if (_0x3e6f02) {
              _0x16cb09 = [_0x16cb09[0] & 2, _0x3e6f02.value];
            }
            switch (_0x16cb09[0]) {
              case 0:
              case 1:
                _0x3e6f02 = _0x16cb09;
                break;
              case 4:
                _0x5e2ccc.label++;
                var _0x5adfa5 = {
                  value: _0x16cb09[1],
                  done: false
                };
                return _0x5adfa5;
              case 5:
                _0x5e2ccc.label++;
                _0x140bb1 = _0x16cb09[1];
                _0x16cb09 = [0];
                continue;
              case 7:
                _0x16cb09 = _0x5e2ccc.ops.pop();
                _0x5e2ccc.trys.pop();
                continue;
              default:
                if (!(_0x3e6f02 = _0x5e2ccc.trys, _0x3e6f02 = _0x3e6f02.length > 0 && _0x3e6f02[_0x3e6f02.length - 1]) && (_0x16cb09[0] === 6 || _0x16cb09[0] === 2)) {
                  _0x5e2ccc = 0;
                  continue;
                }
                if (_0x16cb09[0] === 3 && (!_0x3e6f02 || _0x16cb09[1] > _0x3e6f02[0] && _0x16cb09[1] < _0x3e6f02[3])) {
                  _0x5e2ccc.label = _0x16cb09[1];
                  break;
                }
                if (_0x16cb09[0] === 6 && _0x5e2ccc.label < _0x3e6f02[1]) {
                  _0x5e2ccc.label = _0x3e6f02[1];
                  _0x3e6f02 = _0x16cb09;
                  break;
                }
                if (_0x3e6f02 && _0x5e2ccc.label < _0x3e6f02[2]) {
                  _0x5e2ccc.label = _0x3e6f02[2];
                  _0x5e2ccc.ops.push(_0x16cb09);
                  break;
                }
                if (_0x3e6f02[2]) {
                  _0x5e2ccc.ops.pop();
                }
                _0x5e2ccc.trys.pop();
                continue;
            }
            _0x16cb09 = _0x2dc39b.call(_0x437683, _0x5e2ccc);
          } catch (_0x37c53f) {
            _0x16cb09 = [6, _0x37c53f];
            _0x140bb1 = 0;
          } finally {
            _0x33eb73 = _0x3e6f02 = 0;
          }
        }
        if (_0x16cb09[0] & 5) {
          throw _0x16cb09[1];
        }
        var _0x39ca19 = {
          value: _0x16cb09[0] ? _0x16cb09[1] : undefined,
          done: true
        };
        return _0x39ca19;
      }
    }
    var _0x4a898 = function () {
      var _0x9ffb53 = _0x12889d(function () {
        return _0x33dd7(this, function (_0x49eb6c) {
          return [2];
        });
      });
      return function _0x57aa7c() {
        return _0x9ffb53.apply(this, arguments);
      };
    }();
    var _0x2e194d;
    var _0x759288;
    var _0x6c9479;
    var _0x71354a;
    var _0x521da8;
    var _0x2f4eb0;
    var _0x3ec778 = 0;
    var _0x7a5b71 = function () {
      var _0x5f1cc5 = _0x12889d(function (_0x250d0b, _0x397df0) {
        var _0x4960e0;
        var _0x2e1626;
        var _0x4c1026;
        var _0x4c2f31;
        var _0x180185;
        var _0x5bedfb;
        var _0x5a176e;
        var _0x47846a;
        var _0x32339a;
        return _0x33dd7(this, function (_0x108eff) {
          switch (_0x108eff.label) {
            case 0:
              _0x4960e0 = exports.config.GetModuleConfig("clothing").models;
              _0x2e1626 = ["player_one", "player_zero", "mp_m_freemode_01", "mp_f_freemode_01"];
              _0x4c1026 = _0x497294(_0x4960e0.male).concat(_0x497294(_0x4960e0.female)).filter(function (_0x1208ff) {
                return !_0x2e1626.includes(_0x1208ff);
              });
              _0x4c2f31 = _0x4c1026[_0x5d5475.MathUtils.getRandomNumber(0, _0x4c1026.length)];
              return [4, _0x5cb85b.loadModel(_0x4c2f31)];
            case 1:
              _0x108eff.sent();
              _0x180185 = _0xd2d881(GetGroundZFor_3dCoord(_0x250d0b.x, _0x250d0b.y, _0x250d0b.z, true), 2);
              _0x5bedfb = _0x180185[0];
              _0x5a176e = _0x180185[1];
              if (_0x5bedfb) {
                _0x250d0b.z = _0x5a176e;
              }
              _0x3ec778 = CreatePed(4, _0x4c2f31, _0x250d0b.x, _0x250d0b.y, _0x250d0b.z, _0x397df0, true, true);
              emit("np-suppression:bypass", _0x3ec778);
              _0x47846a = NetworkGetNetworkIdFromEntity(_0x3ec778);
              _0x32339a = NetworkGetEntityOwner(_0x3ec778);
              SetNetworkIdCanMigrate(_0x47846a, false);
              NetworkRequestControlOfEntity(_0x3ec778);
              SetBlockingOfNonTemporaryEvents(_0x3ec778, true);
              SetPedSeeingRange(_0x3ec778, 0);
              SetPedHearingRange(_0x3ec778, 0);
              SetPedFleeAttributes(_0x3ec778, 0, false);
              SetPedKeepTask(_0x3ec778, true);
              FreezeEntityPosition(_0x3ec778, true);
              TaskStartScenarioInPlace(_0x3ec778, "WORLD_HUMAN_SMOKING", 0, true);
              var _0x338ec8 = {
                distance: {
                  draw: 3,
                  use: 2
                },
                isEnabled: function (_0x33c4c1) {
                  return _0x33c4c1 === _0x3ec778;
                }
              };
              _0x121f17.addPedInteraction("mosleys:npc", [{
                id: "mosleys:talk",
                label: "Take Vehicle",
                eventSDK: "np-jobs:mosleys:talk",
                parameters: {}
              }], _0x338ec8);
              emit("np-suppression:setEntitySpawnData", _0x47846a, _0x32339a);
              return [2];
          }
        });
      });
      return function _0x3d27ba(_0x17d2c5, _0x480ae8) {
        return _0x5f1cc5.apply(this, arguments);
      };
    }();
    _0x10598b.on("np-jobs:mosleys:talk", function () {
      var _0x427a7e = _0x12889d(function (_0x5a03ab, _0x4a9fb1) {
        var _0x1ff232;
        var _0x500022;
        var _0x207aae;
        var _0x4ea642;
        var _0x2fb2c4;
        return _0x33dd7(this, function (_0x48e0fd) {
          _0x1ff232 = _0x158296.get(_0x2e194d);
          if (!_0x1ff232) {
            return [2];
          }
          _0x500022 = new _0x26b14d(GetEntityCoords(_0x4a9fb1));
          _0x207aae = PlayerPedId();
          _0x4ea642 = new _0x26b14d(GetEntityCoords(_0x207aae));
          _0x2fb2c4 = _0x4ea642.getDistance(_0x500022);
          if (_0x2fb2c4 >= 5) {
            return [2];
          }
          _0x121f17.removePedInteraction("mosleys:npc");
          setTimeout(function () {
            if (_0x3ec778 && DoesEntityExist(_0x3ec778)) {
              DeleteEntity(_0x3ec778);
              _0x3ec778 = 0;
            }
          }, 10000);
          _0x759288("updateObjectiveData", _0x521da8, "status", "completed");
          return [2];
        });
      });
      return function (_0x441089, _0x2c9d92) {
        return _0x427a7e.apply(this, arguments);
      };
    }());
    var _0x2f0745 = new _0x26b14d(-12.36, -1669.08, 29.49);
    var _0x3040bd = new _0x536d04.Thread(function () {}, 1000);
    _0x3040bd.addHook("preStart", function () {
      this.data.ped = PlayerPedId();
      this.data.prevCoords = new _0x26b14d(GetEntityCoords(this.data.ped));
      this.data.distanceTravelled = 0;
    });
    _0x3040bd.addHook("active", function () {
      var _0x3aad0f = new _0x26b14d(GetEntityCoords(this.data.ped));
      var _0x2e27fc = _0x3aad0f.getDistance(this.data.prevCoords);
      this.data.distanceTravelled += _0x2e27fc;
      this.data.prevCoords = _0x3aad0f;
      if (this.data.distanceTravelled >= this.data.maxDistance) {
        _0x3040bd.stop();
        RPC.execute("phone:jobCenterActivityAbandon", _0x2e194d);
        _0x121f17.phoneNotification("Mosley's", "You have traveled too far from the delivery location.");
      }
    });
    _0x3040bd.addHook("afterStop", function () {
      this.data.ped = null;
      this.data.prevCoords = null;
      this.data.distanceTravelled = 0;
      this.data.maxDistance = 0;
    });
    onNet("np-jobs:mosleys:takeVehicle", function () {
      var _0x4617a0 = _0x12889d(function (_0x1b1d48, _0x46eb5c, _0x4e266f, _0x364b32, _0x4f1d0a) {
        var _0x2b74b8;
        var _0x5daab3;
        return _0x33dd7(this, function (_0x175a22) {
          _0x2e194d = _0x1b1d48;
          _0x759288 = _0x4f1d0a;
          _0x521da8 = _0x364b32.pop().id;
          _0x2f4eb0 = _0x4e266f;
          _0x2b74b8 = PlayerPedId();
          _0x5daab3 = new _0x26b14d(GetEntityCoords(_0x2b74b8));
          _0x3040bd.data.maxDistance = _0x5daab3.getDistance(_0x2f0745) * 2;
          _0x3040bd.start();
          return [2];
        });
      });
      return function (_0xb701a5, _0x3a77d0, _0x280763, _0x2da134, _0x175807) {
        return _0x4617a0.apply(this, arguments);
      };
    }());
    onNet("np-jobs:mosleys:npc", function () {
      var _0x2f0c3e = _0x12889d(function (_0x4bf293, _0x30bc43, _0x3353ce, _0xd01070, _0x360f27) {
        var _0x15e317;
        var _0x310c67;
        var _0x229ceb;
        var _0x3ff715;
        return _0x33dd7(this, function (_0xbc65c0) {
          switch (_0xbc65c0.label) {
            case 0:
              _0x2e194d = _0x4bf293;
              _0x759288 = _0x360f27;
              _0x521da8 = _0xd01070.pop().id;
              _0x2f4eb0 = _0x3353ce;
              _0x15e317 = _0x158296.get(_0x4bf293);
              if (!_0x15e317) {
                return [2];
              }
              _0x310c67 = _0x15e317.references.get("pickup_ped");
              _0x229ceb = _0x310c67.settings;
              _0x3ff715 = _0x229ceb.vectors;
              return [4, _0x7a5b71(_0x3ff715, _0x229ceb.heading)];
            case 1:
              _0xbc65c0.sent();
              setTimeout(function () {
                _0x759288("updateObjectiveData", _0x521da8, "status", "completed");
              }, 100);
              return [2];
          }
        });
      });
      return function (_0x10e7b2, _0xcad8f, _0x3cba29, _0x419325, _0x1a840b) {
        return _0x2f0c3e.apply(this, arguments);
      };
    }());
    onNet("np:jobs:startTask", function (_0x349757, _0x3b6bb1, _0x2c0c8c) {
      if (_0x349757 !== _0x2e194d) {
        return;
      }
      var _0x26c210 = _0x2c0c8c.name;
      if (_0x26c210 === "return_vehicle") {
        _0x3040bd.data.distanceTravelled = 0;
      }
    });
    onNet("np-jobs:mosleys:install", function (_0xf17989, _0x211dd6, _0x48af55, _0x3dc957, _0x1b0d46) {
      _0x2e194d = _0xf17989;
      _0x759288 = _0x1b0d46;
      _0x521da8 = _0x3dc957.pop().id;
      _0x2f4eb0 = _0x48af55;
      var _0x5e6903 = _0x158296.get(_0xf17989);
      if (!_0x5e6903) {
        return;
      }
      _0x10598b.emitNet("np-jobs:mosleys:getParts", _0x2e194d);
    });
    onNet("np:jobs:activityCompleted", function () {
      _0x2e194d = null;
      _0x759288 = null;
      _0x6c9479 = null;
      _0x71354a = null;
      _0x521da8 = null;
      _0x2f4eb0 = null;
      _0x3040bd.stop();
      if (_0x3ec778 && DoesEntityExist(_0x3ec778)) {
        DeleteEntity(_0x3ec778);
        _0x3ec778 = 0;
      }
    });
    on("baseevents:enteredVehicle", function (_0x1388b5) {
      if (_0x213dc5.GetEntityStateValue(_0x1388b5, "mosleys:vehDisabled")) {
        SetVehicleEngineOn(_0x1388b5, false, false, true);
        SetVehicleUndriveable(_0x1388b5, true);
        SetVehicleBodyHealth(_0x1388b5, 0);
        SetVehicleEngineHealth(_0x1388b5, 0);
      }
    });
    ;
    var _0x249ca8 = 75;
    var _0xd4c1db = [{
      name: "Deer",
      model: "a_c_deer",
      hash: GetHashKey("a_c_deer"),
      chance: 0.6,
      illegal: false,
      nightOnly: true,
      variant: "deer"
    }];
    function _0x5c85a6(_0x3a23f2) {
      if (typeof _0x3a23f2 === "string") {
        _0x3a23f2 = GetHashKey(_0x3a23f2);
      }
      var _0x2292b2 = _0xd4c1db.find(function (_0x552240) {
        return _0x552240.hash === _0x3a23f2;
      });
      if (!_0x2292b2) {
        return "deer";
      }
      return _0x2292b2.variant;
    }
    ;
    function _0x1eb757(_0x5b999a, _0x440bb7, _0x23bd59, _0x2ca5f4, _0x5645db, _0x4d4fb8, _0x47adc4) {
      try {
        var _0x30c6c3 = _0x5b999a[_0x4d4fb8](_0x47adc4);
        var _0x4c8d9f = _0x30c6c3.value;
      } catch (_0x2032f1) {
        _0x23bd59(_0x2032f1);
        return;
      }
      if (_0x30c6c3.done) {
        _0x440bb7(_0x4c8d9f);
      } else {
        Promise.resolve(_0x4c8d9f).then(_0x2ca5f4, _0x5645db);
      }
    }
    function _0x1f099a(_0xb3abdf) {
      return function () {
        var _0x42c177 = this;
        var _0x473ccd = arguments;
        return new Promise(function (_0x13987d, _0x207da1) {
          var _0x469746 = _0xb3abdf.apply(_0x42c177, _0x473ccd);
          function _0x410d2c(_0x2867ca) {
            _0x1eb757(_0x469746, _0x13987d, _0x207da1, _0x410d2c, _0x48237d, "next", _0x2867ca);
          }
          function _0x48237d(_0x55e256) {
            _0x1eb757(_0x469746, _0x13987d, _0x207da1, _0x410d2c, _0x48237d, "throw", _0x55e256);
          }
          _0x410d2c(undefined);
        });
      };
    }
    function _0x35be23(_0x344a41, _0x27008a) {
      var _0x539705;
      var _0x106c7b;
      var _0x523220;
      var _0xab2579;
      var _0x41a1d5 = {
        label: 0,
        sent: function () {
          if (_0x523220[0] & 1) {
            throw _0x523220[1];
          }
          return _0x523220[1];
        },
        trys: [],
        ops: []
      };
      _0xab2579 = {
        next: _0x2bc783(0),
        throw: _0x2bc783(1),
        return: _0x2bc783(2)
      };
      if (typeof Symbol === "function") {
        _0xab2579[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0xab2579;
      function _0x2bc783(_0x5a6365) {
        return function (_0x96022a) {
          return _0x570c7e([_0x5a6365, _0x96022a]);
        };
      }
      function _0x570c7e(_0x25af9c) {
        if (_0x539705) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x41a1d5) {
          try {
            _0x539705 = 1;
            if (_0x106c7b && (_0x523220 = _0x25af9c[0] & 2 ? _0x106c7b.return : _0x25af9c[0] ? _0x106c7b.throw || ((_0x523220 = _0x106c7b.return) && _0x523220.call(_0x106c7b), 0) : _0x106c7b.next) && !(_0x523220 = _0x523220.call(_0x106c7b, _0x25af9c[1])).done) {
              return _0x523220;
            }
            _0x106c7b = 0;
            if (_0x523220) {
              _0x25af9c = [_0x25af9c[0] & 2, _0x523220.value];
            }
            switch (_0x25af9c[0]) {
              case 0:
              case 1:
                _0x523220 = _0x25af9c;
                break;
              case 4:
                _0x41a1d5.label++;
                var _0x3ca308 = {
                  value: _0x25af9c[1],
                  done: false
                };
                return _0x3ca308;
              case 5:
                _0x41a1d5.label++;
                _0x106c7b = _0x25af9c[1];
                _0x25af9c = [0];
                continue;
              case 7:
                _0x25af9c = _0x41a1d5.ops.pop();
                _0x41a1d5.trys.pop();
                continue;
              default:
                if (!(_0x523220 = _0x41a1d5.trys, _0x523220 = _0x523220.length > 0 && _0x523220[_0x523220.length - 1]) && (_0x25af9c[0] === 6 || _0x25af9c[0] === 2)) {
                  _0x41a1d5 = 0;
                  continue;
                }
                if (_0x25af9c[0] === 3 && (!_0x523220 || _0x25af9c[1] > _0x523220[0] && _0x25af9c[1] < _0x523220[3])) {
                  _0x41a1d5.label = _0x25af9c[1];
                  break;
                }
                if (_0x25af9c[0] === 6 && _0x41a1d5.label < _0x523220[1]) {
                  _0x41a1d5.label = _0x523220[1];
                  _0x523220 = _0x25af9c;
                  break;
                }
                if (_0x523220 && _0x41a1d5.label < _0x523220[2]) {
                  _0x41a1d5.label = _0x523220[2];
                  _0x41a1d5.ops.push(_0x25af9c);
                  break;
                }
                if (_0x523220[2]) {
                  _0x41a1d5.ops.pop();
                }
                _0x41a1d5.trys.pop();
                continue;
            }
            _0x25af9c = _0x27008a.call(_0x344a41, _0x41a1d5);
          } catch (_0x4f6771) {
            _0x25af9c = [6, _0x4f6771];
            _0x106c7b = 0;
          } finally {
            _0x539705 = _0x523220 = 0;
          }
        }
        if (_0x25af9c[0] & 5) {
          throw _0x25af9c[1];
        }
        var _0xcff0bd = {
          value: _0x25af9c[0] ? _0x25af9c[1] : undefined,
          done: true
        };
        return _0xcff0bd;
      }
    }
    var _0x295c1d = function () {
      var _0x3b40bd = _0x1f099a(function () {
        return _0x35be23(this, function (_0x55b0d) {
          return [2];
        });
      });
      return function _0x1993ed() {
        return _0x3b40bd.apply(this, arguments);
      };
    }();
    var _0x56b143 = null;
    var _0x2398fb = function () {
      var _0x5082c3 = _0x1f099a(function (_0xd91110, _0x1da617) {
        var _0x1ba91b;
        return _0x35be23(this, function (_0x1f001a) {
          switch (_0x1f001a.label) {
            case 0:
              var _0x152897 = {
                distance: {
                  use: 3,
                  draw: 10
                },
                isEnabled: function () {
                  return true;
                },
                skipLos: true
              };
              _0x121f17.addInteraction("hunting:print", _0xd91110, [{
                id: "search_prints",
                label: "Search the animal",
                eventSDK: "np-jobs:hunting:spawnAnimal",
                parameters: {}
              }], _0x152897);
              _0x1ba91b = "prop_big_shit_02";
              return [4, _0x5cb85b.loadModel(_0x1ba91b)];
            case 1:
              _0x1f001a.sent();
              _0x56b143 = CreateObject(_0x1ba91b, _0xd91110.x, _0xd91110.y, _0xd91110.z, false, true, false);
              return [2];
          }
        });
      });
      return function _0x4ba1cd(_0x312b03, _0x516985) {
        return _0x5082c3.apply(this, arguments);
      };
    }();
    var _0x54e47e = function () {
      var _0x3028d3 = _0x1f099a(function () {
        return _0x35be23(this, function (_0x1e5579) {
          _0x121f17.removeInteraction("hunting:print");
          if (!_0x56b143) {
            return [2];
          }
          DeleteEntity(_0x56b143);
          _0x56b143 = null;
          return [2];
        });
      });
      return function _0x482a7d() {
        return _0x3028d3.apply(this, arguments);
      };
    }();
    ;
    function _0x5e37bb(_0x3408e4, _0x200912) {
      if (_0x200912 == null || _0x200912 > _0x3408e4.length) {
        _0x200912 = _0x3408e4.length;
      }
      for (var _0x2787df = 0, _0x23cea2 = new Array(_0x200912); _0x2787df < _0x200912; _0x2787df++) {
        _0x23cea2[_0x2787df] = _0x3408e4[_0x2787df];
      }
      return _0x23cea2;
    }
    function _0xba2404(_0x4d7561) {
      if (Array.isArray(_0x4d7561)) {
        return _0x4d7561;
      }
    }
    function _0x581997(_0x1f93d6, _0x3b9e94, _0x3aef65, _0x25f714, _0x38d4ff, _0x54837b, _0x482892) {
      try {
        var _0x33efbe = _0x1f93d6[_0x54837b](_0x482892);
        var _0x5cf3f2 = _0x33efbe.value;
      } catch (_0x17f7ac) {
        _0x3aef65(_0x17f7ac);
        return;
      }
      if (_0x33efbe.done) {
        _0x3b9e94(_0x5cf3f2);
      } else {
        Promise.resolve(_0x5cf3f2).then(_0x25f714, _0x38d4ff);
      }
    }
    function _0x315a52(_0x4cee60) {
      return function () {
        var _0x3ca6d8 = this;
        var _0x470e89 = arguments;
        return new Promise(function (_0x44c279, _0x14e2db) {
          var _0x4f79bd = _0x4cee60.apply(_0x3ca6d8, _0x470e89);
          function _0x43f592(_0x3660eb) {
            _0x581997(_0x4f79bd, _0x44c279, _0x14e2db, _0x43f592, _0x1d1f1c, "next", _0x3660eb);
          }
          function _0x1d1f1c(_0x5d4742) {
            _0x581997(_0x4f79bd, _0x44c279, _0x14e2db, _0x43f592, _0x1d1f1c, "throw", _0x5d4742);
          }
          _0x43f592(undefined);
        });
      };
    }
    function _0x541c3f(_0x96439e, _0x13c759) {
      var _0x27df6d = _0x96439e == null ? null : typeof Symbol !== "undefined" && _0x96439e[Symbol.iterator] || _0x96439e["@@iterator"];
      if (_0x27df6d == null) {
        return;
      }
      var _0x46f479 = [];
      var _0x3f3eb0 = true;
      var _0x2ae3fb = false;
      var _0x5311c9;
      var _0x24e8c5;
      try {
        for (_0x27df6d = _0x27df6d.call(_0x96439e); !(_0x3f3eb0 = (_0x5311c9 = _0x27df6d.next()).done); _0x3f3eb0 = true) {
          _0x46f479.push(_0x5311c9.value);
          if (_0x13c759 && _0x46f479.length === _0x13c759) {
            break;
          }
        }
      } catch (_0x5e954e) {
        _0x2ae3fb = true;
        _0x24e8c5 = _0x5e954e;
      } finally {
        try {
          if (!_0x3f3eb0 && _0x27df6d.return != null) {
            _0x27df6d.return();
          }
        } finally {
          if (_0x2ae3fb) {
            throw _0x24e8c5;
          }
        }
      }
      return _0x46f479;
    }
    function _0xc147d7() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x47f953(_0x53421f, _0x1a99dc) {
      return _0xba2404(_0x53421f) || _0x541c3f(_0x53421f, _0x1a99dc) || _0x4e94b3(_0x53421f, _0x1a99dc) || _0xc147d7();
    }
    function _0x4e94b3(_0x34b41b, _0x397975) {
      if (!_0x34b41b) {
        return;
      }
      if (typeof _0x34b41b === "string") {
        return _0x5e37bb(_0x34b41b, _0x397975);
      }
      var _0x5538e1 = Object.prototype.toString.call(_0x34b41b).slice(8, -1);
      if (_0x5538e1 === "Object" && _0x34b41b.constructor) {
        _0x5538e1 = _0x34b41b.constructor.name;
      }
      if (_0x5538e1 === "Map" || _0x5538e1 === "Set") {
        return Array.from(_0x5538e1);
      }
      if (_0x5538e1 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5538e1)) {
        return _0x5e37bb(_0x34b41b, _0x397975);
      }
    }
    function _0x170b01(_0x513e2c, _0x2f83ea) {
      var _0x21beb7;
      var _0x4d0434;
      var _0x46f527;
      var _0x3b47fa;
      var _0x19faf8 = {
        label: 0,
        sent: function () {
          if (_0x46f527[0] & 1) {
            throw _0x46f527[1];
          }
          return _0x46f527[1];
        },
        trys: [],
        ops: []
      };
      _0x3b47fa = {
        next: _0x1a8164(0),
        throw: _0x1a8164(1),
        return: _0x1a8164(2)
      };
      if (typeof Symbol === "function") {
        _0x3b47fa[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3b47fa;
      function _0x1a8164(_0x4630c4) {
        return function (_0x48a398) {
          return _0x263a72([_0x4630c4, _0x48a398]);
        };
      }
      function _0x263a72(_0x1bda49) {
        if (_0x21beb7) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x19faf8) {
          try {
            _0x21beb7 = 1;
            if (_0x4d0434 && (_0x46f527 = _0x1bda49[0] & 2 ? _0x4d0434.return : _0x1bda49[0] ? _0x4d0434.throw || ((_0x46f527 = _0x4d0434.return) && _0x46f527.call(_0x4d0434), 0) : _0x4d0434.next) && !(_0x46f527 = _0x46f527.call(_0x4d0434, _0x1bda49[1])).done) {
              return _0x46f527;
            }
            _0x4d0434 = 0;
            if (_0x46f527) {
              _0x1bda49 = [_0x1bda49[0] & 2, _0x46f527.value];
            }
            switch (_0x1bda49[0]) {
              case 0:
              case 1:
                _0x46f527 = _0x1bda49;
                break;
              case 4:
                _0x19faf8.label++;
                var _0xf1e7d9 = {
                  value: _0x1bda49[1],
                  done: false
                };
                return _0xf1e7d9;
              case 5:
                _0x19faf8.label++;
                _0x4d0434 = _0x1bda49[1];
                _0x1bda49 = [0];
                continue;
              case 7:
                _0x1bda49 = _0x19faf8.ops.pop();
                _0x19faf8.trys.pop();
                continue;
              default:
                if (!(_0x46f527 = _0x19faf8.trys, _0x46f527 = _0x46f527.length > 0 && _0x46f527[_0x46f527.length - 1]) && (_0x1bda49[0] === 6 || _0x1bda49[0] === 2)) {
                  _0x19faf8 = 0;
                  continue;
                }
                if (_0x1bda49[0] === 3 && (!_0x46f527 || _0x1bda49[1] > _0x46f527[0] && _0x1bda49[1] < _0x46f527[3])) {
                  _0x19faf8.label = _0x1bda49[1];
                  break;
                }
                if (_0x1bda49[0] === 6 && _0x19faf8.label < _0x46f527[1]) {
                  _0x19faf8.label = _0x46f527[1];
                  _0x46f527 = _0x1bda49;
                  break;
                }
                if (_0x46f527 && _0x19faf8.label < _0x46f527[2]) {
                  _0x19faf8.label = _0x46f527[2];
                  _0x19faf8.ops.push(_0x1bda49);
                  break;
                }
                if (_0x46f527[2]) {
                  _0x19faf8.ops.pop();
                }
                _0x19faf8.trys.pop();
                continue;
            }
            _0x1bda49 = _0x2f83ea.call(_0x513e2c, _0x19faf8);
          } catch (_0x4587a2) {
            _0x1bda49 = [6, _0x4587a2];
            _0x4d0434 = 0;
          } finally {
            _0x21beb7 = _0x46f527 = 0;
          }
        }
        if (_0x1bda49[0] & 5) {
          throw _0x1bda49[1];
        }
        var _0x1c36e3 = {
          value: _0x1bda49[0] ? _0x1bda49[1] : undefined,
          done: true
        };
        return _0x1c36e3;
      }
    }
    var _0xdcf0e4 = function () {
      var _0x3d50ad = _0x315a52(function (_0x31835a) {
        var _0x3438f8;
        var _0x113e65;
        var _0x32de28;
        var _0x556c53;
        var _0x27447a;
        var _0x4fc813;
        var _0x4525d6;
        var _0x40fbb0;
        var _0x32fb98;
        var _0x518916;
        var _0x4c2d3b;
        return _0x170b01(this, function (_0x11f494) {
          switch (_0x11f494.label) {
            case 0:
              _0x3438f8 = null;
              _0x113e65 = _0x249ca8;
              _0x32de28 = _0x249ca8;
              _0x11f494.label = 1;
            case 1:
              if (!!_0x3438f8) {
                return [3, 3];
              }
              _0x556c53 = _0x5d5475.MathUtils.getRandomNumber(-_0x113e65, _0x113e65);
              _0x27447a = _0x5d5475.MathUtils.getRandomNumber(-_0x113e65, _0x113e65);
              _0x4fc813 = _0x31835a[2];
              _0x4525d6 = [_0x31835a[0] + _0x556c53, _0x31835a[1] + _0x27447a, _0x31835a[2] + _0x4fc813];
              _0x3438f8 = _0x4525d6;
              if (_0x5d5475.MathUtils.getDistance(_0x31835a, _0x4525d6) > _0x32de28) {
                _0x3438f8 = _0x4525d6;
              }
              return [4, _0x5d5475.wait(0)];
            case 2:
              _0x11f494.sent();
              return [3, 1];
            case 3:
              _0x40fbb0 = _0x47f953(GetGroundZAndNormalFor_3dCoord(_0x3438f8[0], _0x3438f8[1], _0x3438f8[2]), 3);
              _0x32fb98 = _0x40fbb0[0];
              _0x518916 = _0x40fbb0[1];
              _0x4c2d3b = _0x40fbb0[2];
              return [2, [_0x3438f8[0], _0x3438f8[1], _0x518916]];
          }
        });
      });
      return function _0x521c30(_0x49fad0) {
        return _0x3d50ad.apply(this, arguments);
      };
    }();
    ;
    function _0x5181ff(_0x2fc987, _0x3b26ac) {
      if (_0x3b26ac == null || _0x3b26ac > _0x2fc987.length) {
        _0x3b26ac = _0x2fc987.length;
      }
      for (var _0x594ea2 = 0, _0x3c5eb8 = new Array(_0x3b26ac); _0x594ea2 < _0x3b26ac; _0x594ea2++) {
        _0x3c5eb8[_0x594ea2] = _0x2fc987[_0x594ea2];
      }
      return _0x3c5eb8;
    }
    function _0x13a200(_0x1179a2) {
      if (Array.isArray(_0x1179a2)) {
        return _0x1179a2;
      }
    }
    function _0x3906c1(_0x54c5ec, _0x400b69, _0x38bc83, _0x21e23d, _0x2d542f, _0x119b44, _0x291f7a) {
      try {
        var _0x4a090c = _0x54c5ec[_0x119b44](_0x291f7a);
        var _0xe18c07 = _0x4a090c.value;
      } catch (_0x3b70ed) {
        _0x38bc83(_0x3b70ed);
        return;
      }
      if (_0x4a090c.done) {
        _0x400b69(_0xe18c07);
      } else {
        Promise.resolve(_0xe18c07).then(_0x21e23d, _0x2d542f);
      }
    }
    function _0x843f94(_0x55f870) {
      return function () {
        var _0x241f12 = this;
        var _0x48da67 = arguments;
        return new Promise(function (_0x456456, _0x483db7) {
          var _0x389b26 = _0x55f870.apply(_0x241f12, _0x48da67);
          function _0x40673b(_0x436aab) {
            _0x3906c1(_0x389b26, _0x456456, _0x483db7, _0x40673b, _0x3c8581, "next", _0x436aab);
          }
          function _0x3c8581(_0x410f0e) {
            _0x3906c1(_0x389b26, _0x456456, _0x483db7, _0x40673b, _0x3c8581, "throw", _0x410f0e);
          }
          _0x40673b(undefined);
        });
      };
    }
    function _0x9e7c39(_0x170c07, _0x41d6c0) {
      var _0x69ddf0 = _0x170c07 == null ? null : typeof Symbol !== "undefined" && _0x170c07[Symbol.iterator] || _0x170c07["@@iterator"];
      if (_0x69ddf0 == null) {
        return;
      }
      var _0x515f3d = [];
      var _0x320e40 = true;
      var _0x355445 = false;
      var _0x2db79f;
      var _0x1cf7c0;
      try {
        for (_0x69ddf0 = _0x69ddf0.call(_0x170c07); !(_0x320e40 = (_0x2db79f = _0x69ddf0.next()).done); _0x320e40 = true) {
          _0x515f3d.push(_0x2db79f.value);
          if (_0x41d6c0 && _0x515f3d.length === _0x41d6c0) {
            break;
          }
        }
      } catch (_0x53c939) {
        _0x355445 = true;
        _0x1cf7c0 = _0x53c939;
      } finally {
        try {
          if (!_0x320e40 && _0x69ddf0.return != null) {
            _0x69ddf0.return();
          }
        } finally {
          if (_0x355445) {
            throw _0x1cf7c0;
          }
        }
      }
      return _0x515f3d;
    }
    function _0x483826() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x48aa1b(_0x11ba5f, _0x581e22) {
      return _0x13a200(_0x11ba5f) || _0x9e7c39(_0x11ba5f, _0x581e22) || _0x2de697(_0x11ba5f, _0x581e22) || _0x483826();
    }
    function _0x2de697(_0x237342, _0x1ef60e) {
      if (!_0x237342) {
        return;
      }
      if (typeof _0x237342 === "string") {
        return _0x5181ff(_0x237342, _0x1ef60e);
      }
      var _0x3fae1a = Object.prototype.toString.call(_0x237342).slice(8, -1);
      if (_0x3fae1a === "Object" && _0x237342.constructor) {
        _0x3fae1a = _0x237342.constructor.name;
      }
      if (_0x3fae1a === "Map" || _0x3fae1a === "Set") {
        return Array.from(_0x3fae1a);
      }
      if (_0x3fae1a === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x3fae1a)) {
        return _0x5181ff(_0x237342, _0x1ef60e);
      }
    }
    function _0x2f4ca8(_0x52a8d1, _0x3fcaa8) {
      var _0x214721;
      var _0x1d860c;
      var _0x3ab9dd;
      var _0x3d19a0;
      var _0x147314 = {
        label: 0,
        sent: function () {
          if (_0x3ab9dd[0] & 1) {
            throw _0x3ab9dd[1];
          }
          return _0x3ab9dd[1];
        },
        trys: [],
        ops: []
      };
      _0x3d19a0 = {
        next: _0x336c5f(0),
        throw: _0x336c5f(1),
        return: _0x336c5f(2)
      };
      if (typeof Symbol === "function") {
        _0x3d19a0[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3d19a0;
      function _0x336c5f(_0x486c85) {
        return function (_0x260940) {
          return _0x13e300([_0x486c85, _0x260940]);
        };
      }
      function _0x13e300(_0x190364) {
        if (_0x214721) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x147314) {
          try {
            _0x214721 = 1;
            if (_0x1d860c && (_0x3ab9dd = _0x190364[0] & 2 ? _0x1d860c.return : _0x190364[0] ? _0x1d860c.throw || ((_0x3ab9dd = _0x1d860c.return) && _0x3ab9dd.call(_0x1d860c), 0) : _0x1d860c.next) && !(_0x3ab9dd = _0x3ab9dd.call(_0x1d860c, _0x190364[1])).done) {
              return _0x3ab9dd;
            }
            _0x1d860c = 0;
            if (_0x3ab9dd) {
              _0x190364 = [_0x190364[0] & 2, _0x3ab9dd.value];
            }
            switch (_0x190364[0]) {
              case 0:
              case 1:
                _0x3ab9dd = _0x190364;
                break;
              case 4:
                _0x147314.label++;
                var _0x19e93c = {
                  value: _0x190364[1],
                  done: false
                };
                return _0x19e93c;
              case 5:
                _0x147314.label++;
                _0x1d860c = _0x190364[1];
                _0x190364 = [0];
                continue;
              case 7:
                _0x190364 = _0x147314.ops.pop();
                _0x147314.trys.pop();
                continue;
              default:
                if (!(_0x3ab9dd = _0x147314.trys, _0x3ab9dd = _0x3ab9dd.length > 0 && _0x3ab9dd[_0x3ab9dd.length - 1]) && (_0x190364[0] === 6 || _0x190364[0] === 2)) {
                  _0x147314 = 0;
                  continue;
                }
                if (_0x190364[0] === 3 && (!_0x3ab9dd || _0x190364[1] > _0x3ab9dd[0] && _0x190364[1] < _0x3ab9dd[3])) {
                  _0x147314.label = _0x190364[1];
                  break;
                }
                if (_0x190364[0] === 6 && _0x147314.label < _0x3ab9dd[1]) {
                  _0x147314.label = _0x3ab9dd[1];
                  _0x3ab9dd = _0x190364;
                  break;
                }
                if (_0x3ab9dd && _0x147314.label < _0x3ab9dd[2]) {
                  _0x147314.label = _0x3ab9dd[2];
                  _0x147314.ops.push(_0x190364);
                  break;
                }
                if (_0x3ab9dd[2]) {
                  _0x147314.ops.pop();
                }
                _0x147314.trys.pop();
                continue;
            }
            _0x190364 = _0x3fcaa8.call(_0x52a8d1, _0x147314);
          } catch (_0x4545e6) {
            _0x190364 = [6, _0x4545e6];
            _0x1d860c = 0;
          } finally {
            _0x214721 = _0x3ab9dd = 0;
          }
        }
        if (_0x190364[0] & 5) {
          throw _0x190364[1];
        }
        var _0x1555df = {
          value: _0x190364[0] ? _0x190364[1] : undefined,
          done: true
        };
        return _0x1555df;
      }
    }
    var _0x1af178 = function () {
      var _0x1320a1 = _0x843f94(function () {
        return _0x2f4ca8(this, function (_0x809e6e) {
          setImmediate(function () {
            _0x121f17.addInteractionByModel("hunting:animal", _0xd4c1db.map(function (_0xfe3d43) {
              return _0xfe3d43.model;
            }), [{
              id: "hunting:inspect",
              label: "Inspect the animal",
              eventSDK: "np-jobs:hunting:inspectAnimal",
              parameters: {}
            }], {
              distance: {
                use: 2.5,
                draw: 5
              },
              isEnabled: function (_0x237dc9) {
                return IsPedDeadOrDying(_0x237dc9, true) && _0x4d63ce.includes(_0x237dc9);
              },
              skipLos: true
            });
          });
          return [2];
        });
      });
      return function _0x5e9f34() {
        return _0x1320a1.apply(this, arguments);
      };
    }();
    var _0x4d63ce = [];
    function _0x1042c8() {
      var _0x9ebc78 = true;
      var _0x1bed9d = false;
      var _0x3ee42b = undefined;
      try {
        for (var _0x37fb3a = _0x4d63ce[Symbol.iterator](), _0x1ec5c6; !(_0x9ebc78 = (_0x1ec5c6 = _0x37fb3a.next()).done); _0x9ebc78 = true) {
          var _0x16f0c0 = _0x1ec5c6.value;
          DeleteEntity(_0x16f0c0);
        }
      } catch (_0x29fb34) {
        _0x1bed9d = true;
        _0x3ee42b = _0x29fb34;
      } finally {
        try {
          if (!_0x9ebc78 && _0x37fb3a.return != null) {
            _0x37fb3a.return();
          }
        } finally {
          if (_0x1bed9d) {
            throw _0x3ee42b;
          }
        }
      }
      _0x4d63ce = [];
    }
    var _0x239f6b = function () {
      var _0x201b2c = _0x843f94(function (_0x3c2636, _0x16f660) {
        var _0x772d83;
        var _0x1393ac;
        var _0x273ee2;
        var _0x47060f;
        var _0x4ef791;
        var _0xbf1a05;
        var _0x50db6a;
        return _0x2f4ca8(this, function (_0x5de1eb) {
          switch (_0x5de1eb.label) {
            case 0:
              _0x772d83 = _0xd4c1db[0];
              if (!_0x772d83) {
                return [2];
              }
              return [4, _0x5cb85b.loadModel(_0x772d83.hash)];
            case 1:
              _0x5de1eb.sent();
              _0x4d63ce = [];
              _0x1393ac = 0;
              _0x5de1eb.label = 2;
            case 2:
              if (_0x1393ac >= _0x16f660) {
                return [3, 5];
              }
              return [4, _0xdcf0e4(_0x3c2636)];
            case 3:
              _0x273ee2 = _0x48aa1b.apply(undefined, [_0x5de1eb.sent(), 3]);
              _0x47060f = _0x273ee2[0];
              _0x4ef791 = _0x273ee2[1];
              _0xbf1a05 = _0x273ee2[2];
              _0x50db6a = CreatePed(28, _0x772d83.hash, _0x47060f, _0x4ef791, _0xbf1a05, 0, true, true);
              _0x4d63ce.push(_0x50db6a);
              TaskWanderStandard(_0x50db6a, 10, 10);
              _0x5de1eb.label = 4;
            case 4:
              _0x1393ac++;
              return [3, 2];
            case 5:
              if (_0x772d83.illegal) {
                emit("civilian:alertPolice", 50, "hunt-illegal", 0, false, false);
              }
              SetModelAsNoLongerNeeded(_0x772d83.hash);
              return [2, _0x4d63ce];
          }
        });
      });
      return function _0x24afd5(_0x5c5cf1, _0x35b73e) {
        return _0x201b2c.apply(this, arguments);
      };
    }();
    var _0x9a9fb3 = new _0x536d04.Thread(function () {}, 1000);
    _0x9a9fb3.addHook("preStart", _0x843f94(function () {
      return _0x2f4ca8(this, function (_0x30b0a9) {
        _0x4d63ce = this.data.spawnedAnimals;
        return [2];
      });
    }));
    _0x9a9fb3.addHook("active", _0x843f94(function () {
      var _0x5b137f;
      var _0xd1bfdc;
      var _0x4c5626;
      var _0x292a8b;
      var _0x35b770;
      var _0x38cea4;
      var _0x5d4fe5;
      var _0x294f9c;
      return _0x2f4ca8(this, function (_0x202edc) {
        _0x5b137f = this.data.spawnedAnimals;
        _0xd1bfdc = _0x5b137f.every(function (_0x572fc1) {
          return IsPedDeadOrDying(_0x572fc1, true);
        });
        if (_0xd1bfdc) {
          _0x1c0e74();
        }
        _0x4c5626 = true;
        _0x292a8b = false;
        _0x35b770 = undefined;
        try {
          _0x38cea4 = function () {
            var _0x26a45d = _0x294f9c.value;
            var _0x192c29 = GetEntityCoords(_0x26a45d, true);
            var _0x5a601b = GetEntityCoords(PlayerPedId(), true);
            var _0x210658 = _0x5d5475.MathUtils.getDistance(_0x192c29, _0x5a601b);
            if (_0x210658 < 10) {
              ClearPedTasks(_0x26a45d);
              TaskSmartFleePed(_0x26a45d, PlayerPedId(), 100, 5000, true, true);
              setTimeout(function () {
                TaskWanderStandard(_0x26a45d, 10, 10);
              }, 5000);
            }
          };
          for (_0x5d4fe5 = _0x5b137f[Symbol.iterator](); !(_0x4c5626 = (_0x294f9c = _0x5d4fe5.next()).done); _0x4c5626 = true) {
            _0x38cea4();
          }
        } catch (_0x1aa8a4) {
          _0x292a8b = true;
          _0x35b770 = _0x1aa8a4;
        } finally {
          try {
            if (!_0x4c5626 && _0x5d4fe5.return != null) {
              _0x5d4fe5.return();
            }
          } finally {
            if (_0x292a8b) {
              throw _0x35b770;
            }
          }
        }
        return [2];
      });
    }));
    _0x9a9fb3.addHook("afterStop", _0x843f94(function () {
      return _0x2f4ca8(this, function (_0x31fc78) {
        this.data.spawnedAnimals = [];
        return [2];
      });
    }));
    ;
    function _0x52a2a3(_0x40fc81, _0x38b4d8) {
      if (_0x38b4d8 == null || _0x38b4d8 > _0x40fc81.length) {
        _0x38b4d8 = _0x40fc81.length;
      }
      for (var _0x504a8c = 0, _0x51ca0e = new Array(_0x38b4d8); _0x504a8c < _0x38b4d8; _0x504a8c++) {
        _0x51ca0e[_0x504a8c] = _0x40fc81[_0x504a8c];
      }
      return _0x51ca0e;
    }
    function _0x5cabbf(_0x16260c) {
      if (Array.isArray(_0x16260c)) {
        return _0x16260c;
      }
    }
    function _0x4ad163(_0x28fbfb, _0x254315, _0x127a78, _0x38ca44, _0xaeb233, _0x3887ee, _0x100395) {
      try {
        var _0x247216 = _0x28fbfb[_0x3887ee](_0x100395);
        var _0x295a03 = _0x247216.value;
      } catch (_0x273cba) {
        _0x127a78(_0x273cba);
        return;
      }
      if (_0x247216.done) {
        _0x254315(_0x295a03);
      } else {
        Promise.resolve(_0x295a03).then(_0x38ca44, _0xaeb233);
      }
    }
    function _0x57827e(_0x33a821) {
      return function () {
        var _0x2953f1 = this;
        var _0x10d9bb = arguments;
        return new Promise(function (_0x451103, _0x57e69e) {
          var _0x240ac9 = _0x33a821.apply(_0x2953f1, _0x10d9bb);
          function _0x260f68(_0x54c995) {
            _0x4ad163(_0x240ac9, _0x451103, _0x57e69e, _0x260f68, _0x1a9250, "next", _0x54c995);
          }
          function _0x1a9250(_0x80f7de) {
            _0x4ad163(_0x240ac9, _0x451103, _0x57e69e, _0x260f68, _0x1a9250, "throw", _0x80f7de);
          }
          _0x260f68(undefined);
        });
      };
    }
    function _0x4e9dee(_0x16fb44, _0x792b9b) {
      var _0x532138 = _0x16fb44 == null ? null : typeof Symbol !== "undefined" && _0x16fb44[Symbol.iterator] || _0x16fb44["@@iterator"];
      if (_0x532138 == null) {
        return;
      }
      var _0x25cb40 = [];
      var _0x505f5f = true;
      var _0x32d212 = false;
      var _0x4b9ac7;
      var _0x248f70;
      try {
        for (_0x532138 = _0x532138.call(_0x16fb44); !(_0x505f5f = (_0x4b9ac7 = _0x532138.next()).done); _0x505f5f = true) {
          _0x25cb40.push(_0x4b9ac7.value);
          if (_0x792b9b && _0x25cb40.length === _0x792b9b) {
            break;
          }
        }
      } catch (_0x2d4e30) {
        _0x32d212 = true;
        _0x248f70 = _0x2d4e30;
      } finally {
        try {
          if (!_0x505f5f && _0x532138.return != null) {
            _0x532138.return();
          }
        } finally {
          if (_0x32d212) {
            throw _0x248f70;
          }
        }
      }
      return _0x25cb40;
    }
    function _0x39c14e() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x1aba06(_0x1ba4eb, _0x3fd80d) {
      return _0x5cabbf(_0x1ba4eb) || _0x4e9dee(_0x1ba4eb, _0x3fd80d) || _0x37499d(_0x1ba4eb, _0x3fd80d) || _0x39c14e();
    }
    function _0x37499d(_0x449372, _0x152f6e) {
      if (!_0x449372) {
        return;
      }
      if (typeof _0x449372 === "string") {
        return _0x52a2a3(_0x449372, _0x152f6e);
      }
      var _0x22e1a7 = Object.prototype.toString.call(_0x449372).slice(8, -1);
      if (_0x22e1a7 === "Object" && _0x449372.constructor) {
        _0x22e1a7 = _0x449372.constructor.name;
      }
      if (_0x22e1a7 === "Map" || _0x22e1a7 === "Set") {
        return Array.from(_0x22e1a7);
      }
      if (_0x22e1a7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x22e1a7)) {
        return _0x52a2a3(_0x449372, _0x152f6e);
      }
    }
    function _0x14bbb4(_0x461d3d, _0x3be2f1) {
      var _0x2d1aa1;
      var _0x45aea7;
      var _0x53ce96;
      var _0x16e19d;
      var _0x263fe1 = {
        label: 0,
        sent: function () {
          if (_0x53ce96[0] & 1) {
            throw _0x53ce96[1];
          }
          return _0x53ce96[1];
        },
        trys: [],
        ops: []
      };
      _0x16e19d = {
        next: _0x2b2c08(0),
        throw: _0x2b2c08(1),
        return: _0x2b2c08(2)
      };
      if (typeof Symbol === "function") {
        _0x16e19d[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x16e19d;
      function _0x2b2c08(_0x587b49) {
        return function (_0x5a8f4a) {
          return _0x4b931f([_0x587b49, _0x5a8f4a]);
        };
      }
      function _0x4b931f(_0x163ba9) {
        if (_0x2d1aa1) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x263fe1) {
          try {
            _0x2d1aa1 = 1;
            if (_0x45aea7 && (_0x53ce96 = _0x163ba9[0] & 2 ? _0x45aea7.return : _0x163ba9[0] ? _0x45aea7.throw || ((_0x53ce96 = _0x45aea7.return) && _0x53ce96.call(_0x45aea7), 0) : _0x45aea7.next) && !(_0x53ce96 = _0x53ce96.call(_0x45aea7, _0x163ba9[1])).done) {
              return _0x53ce96;
            }
            _0x45aea7 = 0;
            if (_0x53ce96) {
              _0x163ba9 = [_0x163ba9[0] & 2, _0x53ce96.value];
            }
            switch (_0x163ba9[0]) {
              case 0:
              case 1:
                _0x53ce96 = _0x163ba9;
                break;
              case 4:
                _0x263fe1.label++;
                var _0x1f08c2 = {
                  value: _0x163ba9[1],
                  done: false
                };
                return _0x1f08c2;
              case 5:
                _0x263fe1.label++;
                _0x45aea7 = _0x163ba9[1];
                _0x163ba9 = [0];
                continue;
              case 7:
                _0x163ba9 = _0x263fe1.ops.pop();
                _0x263fe1.trys.pop();
                continue;
              default:
                if (!(_0x53ce96 = _0x263fe1.trys, _0x53ce96 = _0x53ce96.length > 0 && _0x53ce96[_0x53ce96.length - 1]) && (_0x163ba9[0] === 6 || _0x163ba9[0] === 2)) {
                  _0x263fe1 = 0;
                  continue;
                }
                if (_0x163ba9[0] === 3 && (!_0x53ce96 || _0x163ba9[1] > _0x53ce96[0] && _0x163ba9[1] < _0x53ce96[3])) {
                  _0x263fe1.label = _0x163ba9[1];
                  break;
                }
                if (_0x163ba9[0] === 6 && _0x263fe1.label < _0x53ce96[1]) {
                  _0x263fe1.label = _0x53ce96[1];
                  _0x53ce96 = _0x163ba9;
                  break;
                }
                if (_0x53ce96 && _0x263fe1.label < _0x53ce96[2]) {
                  _0x263fe1.label = _0x53ce96[2];
                  _0x263fe1.ops.push(_0x163ba9);
                  break;
                }
                if (_0x53ce96[2]) {
                  _0x263fe1.ops.pop();
                }
                _0x263fe1.trys.pop();
                continue;
            }
            _0x163ba9 = _0x3be2f1.call(_0x461d3d, _0x263fe1);
          } catch (_0x4a82fe) {
            _0x163ba9 = [6, _0x4a82fe];
            _0x45aea7 = 0;
          } finally {
            _0x2d1aa1 = _0x53ce96 = 0;
          }
        }
        if (_0x163ba9[0] & 5) {
          throw _0x163ba9[1];
        }
        var _0x1c051b = {
          value: _0x163ba9[0] ? _0x163ba9[1] : undefined,
          done: true
        };
        return _0x1c051b;
      }
    }
    var _0x39eff = function () {
      var _0xc1c2ab = _0x57827e(function () {
        return _0x14bbb4(this, function (_0x72474b) {
          return [2];
        });
      });
      return function _0x1490af() {
        return _0xc1c2ab.apply(this, arguments);
      };
    }();
    var _0x10061a;
    var _0x2f2949;
    var _0x52c881;
    var _0x2daf03;
    var _0x345253;
    var _0x4949d0;
    var _0x6dd668 = new Set();
    onNet("np-jobs:hunting:blip", function () {
      var _0xebd79c = _0x57827e(function (_0x2fb632, _0x88ebe3, _0x25f92f, _0xbbc341, _0x4df880) {
        var _0x1d5376;
        var _0x21aa4a;
        var _0x1688e6;
        var _0x1b0461;
        var _0x59bfdf;
        var _0xcaa077;
        var _0x292d27;
        var _0x2b5d49;
        var _0x18e386;
        return _0x14bbb4(this, function (_0x2bd58d) {
          _0x10061a = _0x2fb632;
          _0x2f2949 = _0x4df880;
          _0x345253 = _0xbbc341.pop().id;
          _0x4949d0 = _0x25f92f;
          _0x1d5376 = _0x158296.get(_0x2fb632);
          if (!_0x1d5376) {
            return [2];
          }
          _0x21aa4a = _0x1d5376.references.get("prints_location");
          _0x1688e6 = _0x21aa4a.settings;
          _0x1b0461 = _0x1688e6.vectors;
          _0x59bfdf = _0x1d5376.references.get("zone_location");
          _0xcaa077 = _0x59bfdf.settings;
          _0x292d27 = _0xcaa077.vectors;
          _0x2b5d49 = [_0x1b0461.x, _0x1b0461.y, _0x1b0461.z - 1];
          emitNet("np:jobs:updateData", _0x10061a, _0x21aa4a.id, "printCoords", new _0x26b14d(_0x2b5d49));
          _0x18e386 = _0x4be8d9.createBlip("radius", _0x292d27.x, _0x292d27.y, _0x292d27.z, _0x249ca8);
          _0x4be8d9.applyBlipSettings(_0x18e386, "Hunting Area", null, 1, 150, undefined, true);
          _0x6dd668.add(_0x18e386);
          setTimeout(function () {
            _0x2f2949("updateObjectiveData", _0x345253, "status", "completed");
          }, 100);
          return [2];
        });
      });
      return function (_0x2d75d0, _0x22036a, _0x44070b, _0x51dfef, _0x3658e4) {
        return _0xebd79c.apply(this, arguments);
      };
    }());
    onNet("np-jobs:hunting:searchPrints", function () {
      var _0x43c806 = _0x57827e(function (_0x5f575a, _0x171de7, _0x5cd5de, _0x2cbb10, _0x5e5849) {
        var _0x400a1d;
        var _0x3ee0a2;
        var _0x931cb0;
        var _0x21b22a;
        return _0x14bbb4(this, function (_0x48dea2) {
          _0x10061a = _0x5f575a;
          _0x2f2949 = _0x5e5849;
          _0x345253 = _0x2cbb10.pop().id;
          _0x4949d0 = _0x5cd5de;
          _0x400a1d = _0x158296.get(_0x5f575a);
          if (!_0x400a1d) {
            return [2];
          }
          _0x3ee0a2 = _0x400a1d.references.get("prints_location");
          _0x931cb0 = _0x3ee0a2.data;
          _0x21b22a = _0x931cb0.printCoords;
          console.log("printCoords", _0x21b22a);
          _0x2398fb(new _0x26b14d(_0x21b22a.x, _0x21b22a.y, _0x21b22a.z), 0);
          return [2];
        });
      });
      return function (_0x2debba, _0x54e4f1, _0x406e94, _0x56ba20, _0x265928) {
        return _0x43c806.apply(this, arguments);
      };
    }());
    _0x10598b.on("np-jobs:hunting:spawnAnimal", _0x57827e(function () {
      var _0x10ea9d;
      var _0x4155b8;
      var _0x28f906;
      var _0x2cbb8a;
      var _0x37eb5e;
      var _0x1fab77;
      var _0xe26e1e;
      var _0x3d0745;
      var _0x494eba;
      var _0x3fbe60;
      var _0x23c79a;
      return _0x14bbb4(this, function (_0x159820) {
        switch (_0x159820.label) {
          case 0:
            _0x10ea9d = _0x158296.get(_0x10061a);
            if (!_0x10ea9d) {
              return [2];
            }
            return [4, _0x11a862.execute("np-jobs:hunting:canSpawnAnimal", _0x10061a)];
          case 1:
            _0x4155b8 = _0x1aba06.apply(undefined, [_0x159820.sent(), 2]);
            _0x28f906 = _0x4155b8[0];
            _0x2cbb8a = _0x4155b8[1];
            if (!_0x28f906) {
              emit("DoLongHudText", "Wait for the animal to spawn", 2);
              return [2];
            }
            _0x37eb5e = _0x10ea9d.references.get("prints_location");
            _0x1fab77 = _0x37eb5e.settings;
            _0xe26e1e = _0x1fab77.vectors;
            _0x3d0745 = new _0x26b14d(_0xe26e1e.x, _0xe26e1e.y, _0xe26e1e.z);
            _0x494eba = _0x3fbba9("np-jobs:hunting", "animalsSize");
            return [4, _0x239f6b(_0x3d0745.toArray(), _0x494eba[_0x2cbb8a.type])];
          case 2:
            _0x3fbe60 = _0x159820.sent();
            if (!_0x3fbe60) {
              return [2];
            }
            _0x23c79a = _0x3fbe60.map(function (_0x127f75) {
              return NetworkGetNetworkIdFromEntity(_0x127f75);
            });
            emitNet("np:jobs:updateData", _0x10061a, _0x37eb5e.id, "netIds", _0x23c79a);
            setTimeout(function () {
              _0x2f2949("updateObjectiveData", _0x345253, "status", "completed");
            }, 100);
            return [2];
        }
      });
    }));
    onNet("np-jobs:hunting:searchAnimal", function () {
      var _0x69fe75 = _0x57827e(function (_0x489a02, _0x42da98, _0x3e3cb8, _0x19896b, _0x29968d) {
        var _0xf596b1;
        var _0x2bf0e1;
        var _0x184b64;
        var _0x2047ea;
        var _0x536948;
        var _0x1fb2fa;
        var _0x1ccbfb;
        var _0x286244;
        var _0x153bfb;
        var _0x544392;
        var _0x1cc9fd;
        var _0x2ba97f;
        var _0x4ea1ec;
        return _0x14bbb4(this, function (_0x423374) {
          _0x10061a = _0x489a02;
          _0x2f2949 = _0x29968d;
          _0x345253 = _0x19896b.pop().id;
          _0x4949d0 = _0x3e3cb8;
          _0x54e47e();
          _0xf596b1 = _0x158296.get(_0x10061a);
          if (!_0xf596b1) {
            return [2];
          }
          _0x2bf0e1 = _0xf596b1.references.get("prints_location");
          _0x184b64 = _0x2bf0e1.data;
          _0x2047ea = _0x184b64.netIds;
          _0x536948 = true;
          _0x1fb2fa = false;
          _0x1ccbfb = undefined;
          try {
            for (_0x286244 = _0x2047ea[Symbol.iterator](); !(_0x536948 = (_0x153bfb = _0x286244.next()).done); _0x536948 = true) {
              _0x544392 = _0x153bfb.value;
              _0x1cc9fd = NetworkGetEntityFromNetworkId(_0x544392);
              if (!_0x1cc9fd) {
                return [2];
              }
              _0x2ba97f = _0x4be8d9.createBlip("entity", _0x1cc9fd);
              _0x4be8d9.applyBlipSettings(_0x2ba97f, "Animal", 141, 1, undefined, 0.8, false, true);
              _0x6dd668.add(_0x2ba97f);
            }
          } catch (_0x331543) {
            _0x1fb2fa = true;
            _0x1ccbfb = _0x331543;
          } finally {
            try {
              if (!_0x536948 && _0x286244.return != null) {
                _0x286244.return();
              }
            } finally {
              if (_0x1fb2fa) {
                throw _0x1ccbfb;
              }
            }
          }
          _0x4ea1ec = _0x2047ea.map(function (_0x225bd0) {
            return NetworkGetEntityFromNetworkId(_0x225bd0);
          });
          _0x9a9fb3.data.spawnedAnimals = _0x4ea1ec;
          _0x9a9fb3.start();
          return [2];
        });
      });
      return function (_0x985bbe, _0x1d3393, _0x13c483, _0x5cba78, _0x544905) {
        return _0x69fe75.apply(this, arguments);
      };
    }());
    var _0x1c0e74 = function () {
      var _0x79ccfa = _0x57827e(function () {
        return _0x14bbb4(this, function (_0x6bc7b1) {
          setTimeout(function () {
            _0x2f2949("updateObjectiveData", _0x345253, "status", "completed");
          }, 100);
          return [2];
        });
      });
      return function _0x35a713() {
        return _0x79ccfa.apply(this, arguments);
      };
    }();
    onNet("np:jobs:activityCompleted", function () {
      _0x2f2949 = null;
      _0x52c881 = null;
      _0x2daf03 = null;
      _0x345253 = null;
      _0x4949d0 = null;
      var _0x3e0e7b = true;
      var _0x294dbb = false;
      var _0x4da39b = undefined;
      try {
        for (var _0x309565 = _0x6dd668[Symbol.iterator](), _0x20aaf0; !(_0x3e0e7b = (_0x20aaf0 = _0x309565.next()).done); _0x3e0e7b = true) {
          var _0x46769e = _0x20aaf0.value;
          RemoveBlip(_0x46769e);
        }
      } catch (_0x5a8979) {
        _0x294dbb = true;
        _0x4da39b = _0x5a8979;
      } finally {
        try {
          if (!_0x3e0e7b && _0x309565.return != null) {
            _0x309565.return();
          }
        } finally {
          if (_0x294dbb) {
            throw _0x4da39b;
          }
        }
      }
      _0x54e47e();
      _0x9a9fb3.stop();
      var _0x295234 = _0x3fbba9("np-jobs:hunting", "despawnAnimalsTime");
      setTimeout(function () {
        _0x1042c8();
        _0x10061a = null;
      }, _0x295234 * 60 * 1000);
    });
    ;
    function _0x460eb7(_0x351347, _0x5640d3, _0x255812, _0x148d26, _0x47402d, _0x3da22f, _0x28b5b7) {
      try {
        var _0x50b43d = _0x351347[_0x3da22f](_0x28b5b7);
        var _0x2fc629 = _0x50b43d.value;
      } catch (_0x380048) {
        _0x255812(_0x380048);
        return;
      }
      if (_0x50b43d.done) {
        _0x5640d3(_0x2fc629);
      } else {
        Promise.resolve(_0x2fc629).then(_0x148d26, _0x47402d);
      }
    }
    function _0x1db20f(_0x51d795) {
      return function () {
        var _0x567c0d = this;
        var _0x3926e3 = arguments;
        return new Promise(function (_0x4161a9, _0x4e2e7c) {
          var _0x5386b9 = _0x51d795.apply(_0x567c0d, _0x3926e3);
          function _0x3104ba(_0x11362a) {
            _0x460eb7(_0x5386b9, _0x4161a9, _0x4e2e7c, _0x3104ba, _0x49fcb4, "next", _0x11362a);
          }
          function _0x49fcb4(_0x1c06bb) {
            _0x460eb7(_0x5386b9, _0x4161a9, _0x4e2e7c, _0x3104ba, _0x49fcb4, "throw", _0x1c06bb);
          }
          _0x3104ba(undefined);
        });
      };
    }
    function _0x3a48e3(_0x1e78b2, _0x57776f) {
      var _0x27b8c8;
      var _0xefb15b;
      var _0x1152f2;
      var _0x2de4ed;
      var _0x599acc = {
        label: 0,
        sent: function () {
          if (_0x1152f2[0] & 1) {
            throw _0x1152f2[1];
          }
          return _0x1152f2[1];
        },
        trys: [],
        ops: []
      };
      _0x2de4ed = {
        next: _0x1f01e3(0),
        throw: _0x1f01e3(1),
        return: _0x1f01e3(2)
      };
      if (typeof Symbol === "function") {
        _0x2de4ed[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2de4ed;
      function _0x1f01e3(_0x2d3389) {
        return function (_0x4d07c1) {
          return _0x17c524([_0x2d3389, _0x4d07c1]);
        };
      }
      function _0x17c524(_0x203808) {
        if (_0x27b8c8) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x599acc) {
          try {
            _0x27b8c8 = 1;
            if (_0xefb15b && (_0x1152f2 = _0x203808[0] & 2 ? _0xefb15b.return : _0x203808[0] ? _0xefb15b.throw || ((_0x1152f2 = _0xefb15b.return) && _0x1152f2.call(_0xefb15b), 0) : _0xefb15b.next) && !(_0x1152f2 = _0x1152f2.call(_0xefb15b, _0x203808[1])).done) {
              return _0x1152f2;
            }
            _0xefb15b = 0;
            if (_0x1152f2) {
              _0x203808 = [_0x203808[0] & 2, _0x1152f2.value];
            }
            switch (_0x203808[0]) {
              case 0:
              case 1:
                _0x1152f2 = _0x203808;
                break;
              case 4:
                _0x599acc.label++;
                var _0x1bf681 = {
                  value: _0x203808[1],
                  done: false
                };
                return _0x1bf681;
              case 5:
                _0x599acc.label++;
                _0xefb15b = _0x203808[1];
                _0x203808 = [0];
                continue;
              case 7:
                _0x203808 = _0x599acc.ops.pop();
                _0x599acc.trys.pop();
                continue;
              default:
                if (!(_0x1152f2 = _0x599acc.trys, _0x1152f2 = _0x1152f2.length > 0 && _0x1152f2[_0x1152f2.length - 1]) && (_0x203808[0] === 6 || _0x203808[0] === 2)) {
                  _0x599acc = 0;
                  continue;
                }
                if (_0x203808[0] === 3 && (!_0x1152f2 || _0x203808[1] > _0x1152f2[0] && _0x203808[1] < _0x1152f2[3])) {
                  _0x599acc.label = _0x203808[1];
                  break;
                }
                if (_0x203808[0] === 6 && _0x599acc.label < _0x1152f2[1]) {
                  _0x599acc.label = _0x1152f2[1];
                  _0x1152f2 = _0x203808;
                  break;
                }
                if (_0x1152f2 && _0x599acc.label < _0x1152f2[2]) {
                  _0x599acc.label = _0x1152f2[2];
                  _0x599acc.ops.push(_0x203808);
                  break;
                }
                if (_0x1152f2[2]) {
                  _0x599acc.ops.pop();
                }
                _0x599acc.trys.pop();
                continue;
            }
            _0x203808 = _0x57776f.call(_0x1e78b2, _0x599acc);
          } catch (_0x3108db) {
            _0x203808 = [6, _0x3108db];
            _0xefb15b = 0;
          } finally {
            _0x27b8c8 = _0x1152f2 = 0;
          }
        }
        if (_0x203808[0] & 5) {
          throw _0x203808[1];
        }
        var _0x5d817e = {
          value: _0x203808[0] ? _0x203808[1] : undefined,
          done: true
        };
        return _0x5d817e;
      }
    }
    var _0x550c0f = function () {
      var _0x2eb4d5 = _0x1db20f(function () {
        return _0x3a48e3(this, function (_0x269535) {
          switch (_0x269535.label) {
            case 0:
              return [4, _0x39eff()];
            case 1:
              _0x269535.sent();
              return [2];
          }
        });
      });
      return function _0xcf0623() {
        return _0x2eb4d5.apply(this, arguments);
      };
    }();
    ;
    function _0x56b2df(_0x498382, _0x492e9a) {
      if (!(_0x498382 instanceof _0x492e9a)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x425990(_0x1efd15, _0x4a8fc7) {
      for (var _0x164626 = 0; _0x164626 < _0x4a8fc7.length; _0x164626++) {
        var _0x3499f0 = _0x4a8fc7[_0x164626];
        _0x3499f0.enumerable = _0x3499f0.enumerable || false;
        _0x3499f0.configurable = true;
        if ("value" in _0x3499f0) {
          _0x3499f0.writable = true;
        }
        Object.defineProperty(_0x1efd15, _0x3499f0.key, _0x3499f0);
      }
    }
    function _0x148937(_0x1b47ed, _0xb0710c, _0xbc6b07) {
      if (_0xb0710c) {
        _0x425990(_0x1b47ed.prototype, _0xb0710c);
      }
      if (_0xbc6b07) {
        _0x425990(_0x1b47ed, _0xbc6b07);
      }
      return _0x1b47ed;
    }
    function _0x12176e(_0x68def7, _0x38581e, _0x4944e0) {
      if (_0x38581e in _0x68def7) {
        var _0x3e8bd1 = {
          value: _0x4944e0,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x68def7, _0x38581e, _0x3e8bd1);
      } else {
        _0x68def7[_0x38581e] = _0x4944e0;
      }
      return _0x68def7;
    }
    var _0xa11bdc = function () {
      'use strict';

      function _0x2917c6() {
        _0x56b2df(this, _0x2917c6);
      }
      _0x148937(_0x2917c6, null, [{
        key: "start",
        value: function _0x2795a9(_0x15c4d5, _0x219b1a) {
          this.cam = CreateCam("DEFAULT_SCRIPTED_CAMERA", true);
          var _0x493585 = GetEntityCoords(_0x15c4d5);
          var _0x1b6a81 = GetEntityHeading(_0x15c4d5);
          var _0x2d8a0a = GetObjectOffsetFromCoords(_0x493585[0], _0x493585[1], _0x493585[2], _0x1b6a81, -0.2, 0.1, 2);
          SetCamCoord(this.cam, _0x2d8a0a[0], _0x2d8a0a[1], _0x2d8a0a[2]);
          SetCamRot(this.cam, -90, 0, _0x1b6a81 + 90, 2);
          RenderScriptCams(true, true, 750, true, false);
          SetCamFov(this.cam, 60);
        }
      }, {
        key: "stop",
        value: function _0x4553c() {
          if (!this.cam) {
            return;
          }
          DestroyCam(this.cam, true);
          RenderScriptCams(false, true, 1000, true, false);
        }
      }]);
      return _0x2917c6;
    }();
    _0x12176e(_0xa11bdc, "cam", 0);
    ;
    function _0x5723df(_0x136a1d, _0x299742) {
      if (_0x299742 == null || _0x299742 > _0x136a1d.length) {
        _0x299742 = _0x136a1d.length;
      }
      for (var _0x38b269 = 0, _0x53cbf5 = new Array(_0x299742); _0x38b269 < _0x299742; _0x38b269++) {
        _0x53cbf5[_0x38b269] = _0x136a1d[_0x38b269];
      }
      return _0x53cbf5;
    }
    function _0x3af49e(_0x1c68f4) {
      if (Array.isArray(_0x1c68f4)) {
        return _0x1c68f4;
      }
    }
    function _0x3cdc44(_0x232c14, _0x59ead9, _0xea85e3, _0x61fda9, _0x1e47fa, _0x46cf16, _0x4ac8d5) {
      try {
        var _0x1203a3 = _0x232c14[_0x46cf16](_0x4ac8d5);
        var _0x2704ba = _0x1203a3.value;
      } catch (_0x469c05) {
        _0xea85e3(_0x469c05);
        return;
      }
      if (_0x1203a3.done) {
        _0x59ead9(_0x2704ba);
      } else {
        Promise.resolve(_0x2704ba).then(_0x61fda9, _0x1e47fa);
      }
    }
    function _0xc4dd6(_0x228949) {
      return function () {
        var _0x2a9ac7 = this;
        var _0xf276c6 = arguments;
        return new Promise(function (_0xa034f9, _0x5eeabc) {
          var _0xe41b8c = _0x228949.apply(_0x2a9ac7, _0xf276c6);
          function _0x30d212(_0x183474) {
            _0x3cdc44(_0xe41b8c, _0xa034f9, _0x5eeabc, _0x30d212, _0xd7c155, "next", _0x183474);
          }
          function _0xd7c155(_0x5f444a) {
            _0x3cdc44(_0xe41b8c, _0xa034f9, _0x5eeabc, _0x30d212, _0xd7c155, "throw", _0x5f444a);
          }
          _0x30d212(undefined);
        });
      };
    }
    function _0x463b0a(_0x5e4919, _0x67ae22) {
      var _0x4315d3 = _0x5e4919 == null ? null : typeof Symbol !== "undefined" && _0x5e4919[Symbol.iterator] || _0x5e4919["@@iterator"];
      if (_0x4315d3 == null) {
        return;
      }
      var _0x3c08cd = [];
      var _0x364e88 = true;
      var _0xbeea57 = false;
      var _0x2adceb;
      var _0x43130a;
      try {
        for (_0x4315d3 = _0x4315d3.call(_0x5e4919); !(_0x364e88 = (_0x2adceb = _0x4315d3.next()).done); _0x364e88 = true) {
          _0x3c08cd.push(_0x2adceb.value);
          if (_0x67ae22 && _0x3c08cd.length === _0x67ae22) {
            break;
          }
        }
      } catch (_0x31f160) {
        _0xbeea57 = true;
        _0x43130a = _0x31f160;
      } finally {
        try {
          if (!_0x364e88 && _0x4315d3.return != null) {
            _0x4315d3.return();
          }
        } finally {
          if (_0xbeea57) {
            throw _0x43130a;
          }
        }
      }
      return _0x3c08cd;
    }
    function _0xbce647() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x51c6ab(_0x57f665, _0x6afec4) {
      return _0x3af49e(_0x57f665) || _0x463b0a(_0x57f665, _0x6afec4) || _0x33d5ca(_0x57f665, _0x6afec4) || _0xbce647();
    }
    function _0x33d5ca(_0x9d3421, _0x2d4da2) {
      if (!_0x9d3421) {
        return;
      }
      if (typeof _0x9d3421 === "string") {
        return _0x5723df(_0x9d3421, _0x2d4da2);
      }
      var _0x13ddde = Object.prototype.toString.call(_0x9d3421).slice(8, -1);
      if (_0x13ddde === "Object" && _0x9d3421.constructor) {
        _0x13ddde = _0x9d3421.constructor.name;
      }
      if (_0x13ddde === "Map" || _0x13ddde === "Set") {
        return Array.from(_0x13ddde);
      }
      if (_0x13ddde === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x13ddde)) {
        return _0x5723df(_0x9d3421, _0x2d4da2);
      }
    }
    function _0x51f417(_0x16ecfc, _0x163dd4) {
      var _0x149e25;
      var _0xfee903;
      var _0x5188f1;
      var _0x3174d1;
      var _0x2dc6fc = {
        label: 0,
        sent: function () {
          if (_0x5188f1[0] & 1) {
            throw _0x5188f1[1];
          }
          return _0x5188f1[1];
        },
        trys: [],
        ops: []
      };
      _0x3174d1 = {
        next: _0x542aa9(0),
        throw: _0x542aa9(1),
        return: _0x542aa9(2)
      };
      if (typeof Symbol === "function") {
        _0x3174d1[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x3174d1;
      function _0x542aa9(_0x514a68) {
        return function (_0x476512) {
          return _0x40997c([_0x514a68, _0x476512]);
        };
      }
      function _0x40997c(_0x1078ca) {
        if (_0x149e25) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2dc6fc) {
          try {
            _0x149e25 = 1;
            if (_0xfee903 && (_0x5188f1 = _0x1078ca[0] & 2 ? _0xfee903.return : _0x1078ca[0] ? _0xfee903.throw || ((_0x5188f1 = _0xfee903.return) && _0x5188f1.call(_0xfee903), 0) : _0xfee903.next) && !(_0x5188f1 = _0x5188f1.call(_0xfee903, _0x1078ca[1])).done) {
              return _0x5188f1;
            }
            _0xfee903 = 0;
            if (_0x5188f1) {
              _0x1078ca = [_0x1078ca[0] & 2, _0x5188f1.value];
            }
            switch (_0x1078ca[0]) {
              case 0:
              case 1:
                _0x5188f1 = _0x1078ca;
                break;
              case 4:
                _0x2dc6fc.label++;
                var _0x165b17 = {
                  value: _0x1078ca[1],
                  done: false
                };
                return _0x165b17;
              case 5:
                _0x2dc6fc.label++;
                _0xfee903 = _0x1078ca[1];
                _0x1078ca = [0];
                continue;
              case 7:
                _0x1078ca = _0x2dc6fc.ops.pop();
                _0x2dc6fc.trys.pop();
                continue;
              default:
                if (!(_0x5188f1 = _0x2dc6fc.trys, _0x5188f1 = _0x5188f1.length > 0 && _0x5188f1[_0x5188f1.length - 1]) && (_0x1078ca[0] === 6 || _0x1078ca[0] === 2)) {
                  _0x2dc6fc = 0;
                  continue;
                }
                if (_0x1078ca[0] === 3 && (!_0x5188f1 || _0x1078ca[1] > _0x5188f1[0] && _0x1078ca[1] < _0x5188f1[3])) {
                  _0x2dc6fc.label = _0x1078ca[1];
                  break;
                }
                if (_0x1078ca[0] === 6 && _0x2dc6fc.label < _0x5188f1[1]) {
                  _0x2dc6fc.label = _0x5188f1[1];
                  _0x5188f1 = _0x1078ca;
                  break;
                }
                if (_0x5188f1 && _0x2dc6fc.label < _0x5188f1[2]) {
                  _0x2dc6fc.label = _0x5188f1[2];
                  _0x2dc6fc.ops.push(_0x1078ca);
                  break;
                }
                if (_0x5188f1[2]) {
                  _0x2dc6fc.ops.pop();
                }
                _0x2dc6fc.trys.pop();
                continue;
            }
            _0x1078ca = _0x163dd4.call(_0x16ecfc, _0x2dc6fc);
          } catch (_0x1c7f4d) {
            _0x1078ca = [6, _0x1c7f4d];
            _0xfee903 = 0;
          } finally {
            _0x149e25 = _0x5188f1 = 0;
          }
        }
        if (_0x1078ca[0] & 5) {
          throw _0x1078ca[1];
        }
        var _0x497419 = {
          value: _0x1078ca[0] ? _0x1078ca[1] : undefined,
          done: true
        };
        return _0x497419;
      }
    }
    var _0x11e8c0 = function () {
      var _0x58f213 = _0xc4dd6(function () {
        return _0x51f417(this, function (_0x2632f0) {
          return [2];
        });
      });
      return function _0x441050() {
        return _0x58f213.apply(this, arguments);
      };
    }();
    var _0x23f179 = null;
    var _0x2a6c20 = [{
      id: "head",
      label: "Cut Head",
      bone: 31086
    }, {
      id: "carcass",
      label: "Skin Carcass",
      bone: 0
    }, {
      id: "meat",
      label: "Harvest Meat",
      bone: 61163
    }, {
      id: "leg",
      label: "Cut Legs",
      bone: 63931
    }];
    _0x10598b.on("np-jobs:hunting:inspectAnimal", function () {
      var _0x43da73 = _0xc4dd6(function (_0x5746e0, _0x1b4cb7) {
        var _0x2d3ae3;
        var _0x3ef587;
        var _0x27f495;
        var _0x5fc145;
        var _0x318046;
        var _0x4438e0;
        var _0x4fb0ce;
        var _0x4a05e4;
        var _0x3e8eef;
        var _0x41bd5f;
        var _0x19dea8;
        var _0x21ea98;
        var _0x114e36;
        var _0x5e2079;
        var _0x2d8321;
        var _0x2bd312;
        var _0x41e6f3;
        var _0x332daf;
        return _0x51f417(this, function (_0x47b105) {
          switch (_0x47b105.label) {
            case 0:
              if (!_0x1b4cb7) {
                return [2];
              }
              _0x23f179 = _0x1b4cb7;
              _0xa11bdc.start(_0x1b4cb7, true);
              _0x2d3ae3 = PlayerPedId();
              TaskTurnPedToFaceEntity(_0x2d3ae3, _0x1b4cb7, -1);
              return [4, _0x5d5475.wait(800)];
            case 1:
              _0x47b105.sent();
              _0x3ef587 = "hunting@skinning@anims";
              _0x27f495 = GetAnimDuration(_0x3ef587, "entry") + 0.01;
              return [4, _0x5cb85b.loadAnim(_0x3ef587)];
            case 2:
              _0x47b105.sent();
              TaskPlayAnim(_0x2d3ae3, _0x3ef587, "entry", 8, 1, -1, 0, 0, false, false, false);
              return [4, _0x5d5475.wait(_0x27f495 * 1000)];
            case 3:
              _0x47b105.sent();
              TaskPlayAnim(_0x2d3ae3, _0x3ef587, "loop", 8, 1, -1, 0, 0, false, false, false);
              _0x5fc145 = [];
              _0x318046 = true;
              _0x4438e0 = false;
              _0x4fb0ce = undefined;
              try {
                for (_0x4a05e4 = Object.entries(_0x2a6c20)[Symbol.iterator](); !(_0x318046 = (_0x3e8eef = _0x4a05e4.next()).done); _0x318046 = true) {
                  _0x41bd5f = _0x51c6ab(_0x3e8eef.value, 2);
                  _0x19dea8 = _0x41bd5f[0];
                  _0x21ea98 = _0x41bd5f[1];
                  _0x114e36 = GetPedBoneIndex(_0x1b4cb7, _0x21ea98.bone);
                  _0x5e2079 = GetWorldPositionOfEntityBone(_0x1b4cb7, _0x114e36);
                  _0x2d8321 = _0x51c6ab(GetHudScreenPositionFromWorldPosition(_0x5e2079[0], _0x5e2079[1], _0x5e2079[2]), 3);
                  _0x2bd312 = _0x2d8321[0];
                  _0x41e6f3 = _0x2d8321[1];
                  _0x332daf = _0x2d8321[2];
                  var _0x568be5 = {
                    id: _0x21ea98.id,
                    label: _0x21ea98.label,
                    x: _0x41e6f3 * 100,
                    y: _0x332daf * 100,
                    isLeft: _0x19dea8 === "leftArm" || _0x19dea8 === "leftLeg" || _0x19dea8 === "body"
                  };
                  _0x5fc145.push(_0x568be5);
                }
              } catch (_0xcc20f3) {
                _0x4438e0 = true;
                _0x4fb0ce = _0xcc20f3;
              } finally {
                try {
                  if (!_0x318046 && _0x4a05e4.return != null) {
                    _0x4a05e4.return();
                  }
                } finally {
                  if (_0x4438e0) {
                    throw _0x4fb0ce;
                  }
                }
              }
              globalThis.exports.focusmanager.SetUIFocus(true, true);
              _0x30390f.execute("hunting:showInspection", true);
              return [4, _0x5d5475.wait(500)];
            case 4:
              _0x47b105.sent();
              _0x30390f.execute("hunting:inspection:offsets", _0x5fc145);
              return [2];
          }
        });
      });
      return function (_0x47fcdd, _0x1b9041) {
        return _0x43da73.apply(this, arguments);
      };
    }());
    var _0x579676 = function () {
      var _0x50512c = _0xc4dd6(function () {
        var _0xcc3da4;
        var _0x4b2a62;
        var _0x41ff64;
        return _0x51f417(this, function (_0x5b584c) {
          switch (_0x5b584c.label) {
            case 0:
              if (!_0x23f179) {
                return [3, 2];
              }
              _0x23f179 = null;
              _0xcc3da4 = "hunting@skinning@anims";
              _0x4b2a62 = GetAnimDuration(_0xcc3da4, "exit") + 0.01;
              _0x41ff64 = PlayerPedId();
              TaskPlayAnim(_0x41ff64, _0xcc3da4, "entry", 8, 1, -1, 0, 0, false, false, false);
              return [4, _0x5d5475.wait(_0x4b2a62 * 1000)];
            case 1:
              _0x5b584c.sent();
              ClearPedTasks(_0x41ff64);
              _0x5b584c.label = 2;
            case 2:
              return [2];
          }
        });
      });
      return function _0x3e2b69() {
        return _0x50512c.apply(this, arguments);
      };
    }();
    ;
    function _0x2fb601(_0x2126b7, _0x37cc19, _0x7e7fbc, _0xfd5fa2, _0x3e15cf, _0x40aadc, _0x285d4e) {
      try {
        var _0x3a6381 = _0x2126b7[_0x40aadc](_0x285d4e);
        var _0x508669 = _0x3a6381.value;
      } catch (_0x1b41a3) {
        _0x7e7fbc(_0x1b41a3);
        return;
      }
      if (_0x3a6381.done) {
        _0x37cc19(_0x508669);
      } else {
        Promise.resolve(_0x508669).then(_0xfd5fa2, _0x3e15cf);
      }
    }
    function _0x2a834b(_0x5c01ac) {
      return function () {
        var _0x7b1eac = this;
        var _0x5b732b = arguments;
        return new Promise(function (_0x20861c, _0x17a994) {
          var _0x1424bf = _0x5c01ac.apply(_0x7b1eac, _0x5b732b);
          function _0x5c52c0(_0x3bcc77) {
            _0x2fb601(_0x1424bf, _0x20861c, _0x17a994, _0x5c52c0, _0x1bac53, "next", _0x3bcc77);
          }
          function _0x1bac53(_0x12cf1a) {
            _0x2fb601(_0x1424bf, _0x20861c, _0x17a994, _0x5c52c0, _0x1bac53, "throw", _0x12cf1a);
          }
          _0x5c52c0(undefined);
        });
      };
    }
    function _0x40d76b(_0x516a5a, _0x4fc0c9) {
      var _0x316d0c;
      var _0x15e171;
      var _0x571c0b;
      var _0x2758e3;
      var _0x2419fe = {
        label: 0,
        sent: function () {
          if (_0x571c0b[0] & 1) {
            throw _0x571c0b[1];
          }
          return _0x571c0b[1];
        },
        trys: [],
        ops: []
      };
      _0x2758e3 = {
        next: _0xbfff8c(0),
        throw: _0xbfff8c(1),
        return: _0xbfff8c(2)
      };
      if (typeof Symbol === "function") {
        _0x2758e3[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2758e3;
      function _0xbfff8c(_0x32fe09) {
        return function (_0x20de49) {
          return _0x591d1f([_0x32fe09, _0x20de49]);
        };
      }
      function _0x591d1f(_0x5621a7) {
        if (_0x316d0c) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2419fe) {
          try {
            _0x316d0c = 1;
            if (_0x15e171 && (_0x571c0b = _0x5621a7[0] & 2 ? _0x15e171.return : _0x5621a7[0] ? _0x15e171.throw || ((_0x571c0b = _0x15e171.return) && _0x571c0b.call(_0x15e171), 0) : _0x15e171.next) && !(_0x571c0b = _0x571c0b.call(_0x15e171, _0x5621a7[1])).done) {
              return _0x571c0b;
            }
            _0x15e171 = 0;
            if (_0x571c0b) {
              _0x5621a7 = [_0x5621a7[0] & 2, _0x571c0b.value];
            }
            switch (_0x5621a7[0]) {
              case 0:
              case 1:
                _0x571c0b = _0x5621a7;
                break;
              case 4:
                _0x2419fe.label++;
                var _0x42137f = {
                  value: _0x5621a7[1],
                  done: false
                };
                return _0x42137f;
              case 5:
                _0x2419fe.label++;
                _0x15e171 = _0x5621a7[1];
                _0x5621a7 = [0];
                continue;
              case 7:
                _0x5621a7 = _0x2419fe.ops.pop();
                _0x2419fe.trys.pop();
                continue;
              default:
                if (!(_0x571c0b = _0x2419fe.trys, _0x571c0b = _0x571c0b.length > 0 && _0x571c0b[_0x571c0b.length - 1]) && (_0x5621a7[0] === 6 || _0x5621a7[0] === 2)) {
                  _0x2419fe = 0;
                  continue;
                }
                if (_0x5621a7[0] === 3 && (!_0x571c0b || _0x5621a7[1] > _0x571c0b[0] && _0x5621a7[1] < _0x571c0b[3])) {
                  _0x2419fe.label = _0x5621a7[1];
                  break;
                }
                if (_0x5621a7[0] === 6 && _0x2419fe.label < _0x571c0b[1]) {
                  _0x2419fe.label = _0x571c0b[1];
                  _0x571c0b = _0x5621a7;
                  break;
                }
                if (_0x571c0b && _0x2419fe.label < _0x571c0b[2]) {
                  _0x2419fe.label = _0x571c0b[2];
                  _0x2419fe.ops.push(_0x5621a7);
                  break;
                }
                if (_0x571c0b[2]) {
                  _0x2419fe.ops.pop();
                }
                _0x2419fe.trys.pop();
                continue;
            }
            _0x5621a7 = _0x4fc0c9.call(_0x516a5a, _0x2419fe);
          } catch (_0x1d8f68) {
            _0x5621a7 = [6, _0x1d8f68];
            _0x15e171 = 0;
          } finally {
            _0x316d0c = _0x571c0b = 0;
          }
        }
        if (_0x5621a7[0] & 5) {
          throw _0x5621a7[1];
        }
        var _0x21fdf9 = {
          value: _0x5621a7[0] ? _0x5621a7[1] : undefined,
          done: true
        };
        return _0x21fdf9;
      }
    }
    var _0x42b9ae = function () {
      var _0x49315d = _0x2a834b(function () {
        return _0x40d76b(this, function (_0x235df7) {
          return [2];
        });
      });
      return function _0x436c32() {
        return _0x49315d.apply(this, arguments);
      };
    }();
    _0x30390f.register("hunting:getContracts", _0x2a834b(function () {
      var _0x45987b;
      return _0x40d76b(this, function (_0x217541) {
        switch (_0x217541.label) {
          case 0:
            return [4, _0x11a862.execute("np-jobs:hunting:getContracts")];
          case 1:
            _0x45987b = _0x217541.sent();
            return [2, _0x45987b];
        }
      });
    }));
    _0x30390f.register("hunting:close", _0x2a834b(function () {
      return _0x40d76b(this, function (_0x50fe40) {
        switch (_0x50fe40.label) {
          case 0:
            _0x297216.Sync.focusmanager.SetUIFocus(false, false);
            _0xa11bdc.stop();
            return [4, _0x579676()];
          case 1:
            _0x50fe40.sent();
            return [2];
        }
      });
    }));
    _0x30390f.register("hunting:takeContract", function () {
      var _0x309033 = _0x2a834b(function (_0x2e1b09) {
        var _0xa8586e;
        return _0x40d76b(this, function (_0x46082b) {
          switch (_0x46082b.label) {
            case 0:
              return [4, _0x11a862.execute("np-jobs:hunting:job:started", _0x2e1b09)];
            case 1:
              _0xa8586e = _0x46082b.sent();
              return [2, _0xa8586e];
          }
        });
      });
      return function (_0x2ab7d5) {
        return _0x309033.apply(this, arguments);
      };
    }());
    _0x30390f.register("hunting:getCurrentContract", _0x2a834b(function () {
      var _0x1cb992;
      return _0x40d76b(this, function (_0x58374c) {
        switch (_0x58374c.label) {
          case 0:
            return [4, _0x11a862.execute("np-jobs:hunting:getCurrentContract")];
          case 1:
            _0x1cb992 = _0x58374c.sent();
            return [2, _0x1cb992];
        }
      });
    }));
    _0x30390f.register("hunting:hasKnife", _0x2a834b(function () {
      var _0x4e1f47;
      return _0x40d76b(this, function (_0x4e1e1c) {
        switch (_0x4e1e1c.label) {
          case 0:
            return [4, _0x2663ad.HasItem("np_knife")];
          case 1:
            _0x4e1f47 = _0x4e1e1c.sent();
            return [2, _0x4e1f47];
        }
      });
    }));
    var _0x1abdda = false;
    _0x30390f.register("hunting:dragEnd", function () {
      var _0x1cac2a = _0x2a834b(function (_0x21155f) {
        var _0xdc574;
        var _0x2c947d;
        var _0x1992e6;
        var _0x34f0f9;
        return _0x40d76b(this, function (_0x1088a5) {
          switch (_0x1088a5.label) {
            case 0:
              if (_0x1abdda) {
                emit("DoLongHudText", "You are already doing something", 2);
                return [2];
              }
              _0x1abdda = true;
              _0x1088a5.label = 1;
            case 1:
              _0x1088a5.trys.push([1,, 3, 4]);
              if (_0x213dc5.GetEntityStateValue(_0x23f179, _0x21155f)) {
                emit("DoLongHudText", "You have already done this", 2);
                return [2];
              }
              if (!_0x23f179 || !DoesEntityExist(_0x23f179)) {
                emit("DoLongHudText", "You are not inspecting an animal", 2);
                return [2];
              }
              return [4, _0x121f17.taskBar(3000, "Interacting...")];
            case 2:
              _0xdc574 = _0x1088a5.sent();
              if (_0xdc574 !== 100) {
                return [2];
              }
              if (_0x213dc5.GetEntityStateValue(_0x23f179, _0x21155f)) {
                emit("DoLongHudText", "You have already done this", 2);
                return [2];
              }
              _0x2c947d = NetworkGetNetworkIdFromEntity(_0x23f179);
              _0x1992e6 = GetEntityModel(_0x23f179);
              _0x34f0f9 = GetPedCauseOfDeath(_0x23f179);
              _0x10598b.emitNet("np-jobs:hunting:getItem", _0x21155f, _0x2c947d, _0x1992e6, _0x34f0f9 === GetHashKey("weapon_sniperrifle2"));
              return [3, 4];
            case 3:
              _0x1abdda = false;
              return [7];
            case 4:
              return [2];
          }
        });
      });
      return function (_0x27865a) {
        return _0x1cac2a.apply(this, arguments);
      };
    }());
    ;
    function _0xd04a3c(_0x43e306, _0x7197d1, _0x51262e, _0x3057d3, _0x55f266, _0x5f3e7f, _0x393409) {
      try {
        var _0x5d797f = _0x43e306[_0x5f3e7f](_0x393409);
        var _0xa0d4f8 = _0x5d797f.value;
      } catch (_0x1fba01) {
        _0x51262e(_0x1fba01);
        return;
      }
      if (_0x5d797f.done) {
        _0x7197d1(_0xa0d4f8);
      } else {
        Promise.resolve(_0xa0d4f8).then(_0x3057d3, _0x55f266);
      }
    }
    function _0x52bef6(_0x16b41f) {
      return function () {
        var _0x419a4a = this;
        var _0x4b3536 = arguments;
        return new Promise(function (_0x37e0cf, _0x2aef5f) {
          var _0x5a3753 = _0x16b41f.apply(_0x419a4a, _0x4b3536);
          function _0x406d15(_0x103a9e) {
            _0xd04a3c(_0x5a3753, _0x37e0cf, _0x2aef5f, _0x406d15, _0x525bca, "next", _0x103a9e);
          }
          function _0x525bca(_0x46eefe) {
            _0xd04a3c(_0x5a3753, _0x37e0cf, _0x2aef5f, _0x406d15, _0x525bca, "throw", _0x46eefe);
          }
          _0x406d15(undefined);
        });
      };
    }
    function _0x524fba(_0x32370f, _0x516c68) {
      var _0x28e469;
      var _0x1989bb;
      var _0x581510;
      var _0x305fef;
      var _0x29edc = {
        label: 0,
        sent: function () {
          if (_0x581510[0] & 1) {
            throw _0x581510[1];
          }
          return _0x581510[1];
        },
        trys: [],
        ops: []
      };
      _0x305fef = {
        next: _0x42b55c(0),
        throw: _0x42b55c(1),
        return: _0x42b55c(2)
      };
      if (typeof Symbol === "function") {
        _0x305fef[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x305fef;
      function _0x42b55c(_0x10105c) {
        return function (_0x23aef1) {
          return _0x3c766a([_0x10105c, _0x23aef1]);
        };
      }
      function _0x3c766a(_0x50ac90) {
        if (_0x28e469) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x29edc) {
          try {
            _0x28e469 = 1;
            if (_0x1989bb && (_0x581510 = _0x50ac90[0] & 2 ? _0x1989bb.return : _0x50ac90[0] ? _0x1989bb.throw || ((_0x581510 = _0x1989bb.return) && _0x581510.call(_0x1989bb), 0) : _0x1989bb.next) && !(_0x581510 = _0x581510.call(_0x1989bb, _0x50ac90[1])).done) {
              return _0x581510;
            }
            _0x1989bb = 0;
            if (_0x581510) {
              _0x50ac90 = [_0x50ac90[0] & 2, _0x581510.value];
            }
            switch (_0x50ac90[0]) {
              case 0:
              case 1:
                _0x581510 = _0x50ac90;
                break;
              case 4:
                _0x29edc.label++;
                var _0x5ce08c = {
                  value: _0x50ac90[1],
                  done: false
                };
                return _0x5ce08c;
              case 5:
                _0x29edc.label++;
                _0x1989bb = _0x50ac90[1];
                _0x50ac90 = [0];
                continue;
              case 7:
                _0x50ac90 = _0x29edc.ops.pop();
                _0x29edc.trys.pop();
                continue;
              default:
                if (!(_0x581510 = _0x29edc.trys, _0x581510 = _0x581510.length > 0 && _0x581510[_0x581510.length - 1]) && (_0x50ac90[0] === 6 || _0x50ac90[0] === 2)) {
                  _0x29edc = 0;
                  continue;
                }
                if (_0x50ac90[0] === 3 && (!_0x581510 || _0x50ac90[1] > _0x581510[0] && _0x50ac90[1] < _0x581510[3])) {
                  _0x29edc.label = _0x50ac90[1];
                  break;
                }
                if (_0x50ac90[0] === 6 && _0x29edc.label < _0x581510[1]) {
                  _0x29edc.label = _0x581510[1];
                  _0x581510 = _0x50ac90;
                  break;
                }
                if (_0x581510 && _0x29edc.label < _0x581510[2]) {
                  _0x29edc.label = _0x581510[2];
                  _0x29edc.ops.push(_0x50ac90);
                  break;
                }
                if (_0x581510[2]) {
                  _0x29edc.ops.pop();
                }
                _0x29edc.trys.pop();
                continue;
            }
            _0x50ac90 = _0x516c68.call(_0x32370f, _0x29edc);
          } catch (_0x2b15e) {
            _0x50ac90 = [6, _0x2b15e];
            _0x1989bb = 0;
          } finally {
            _0x28e469 = _0x581510 = 0;
          }
        }
        if (_0x50ac90[0] & 5) {
          throw _0x50ac90[1];
        }
        var _0x151e3a = {
          value: _0x50ac90[0] ? _0x50ac90[1] : undefined,
          done: true
        };
        return _0x151e3a;
      }
    }
    var _0x372a42 = function () {
      var _0xda0fc0 = _0x52bef6(function () {
        return _0x524fba(this, function (_0x3364a8) {
          return [2];
        });
      });
      return function _0x41ea3b() {
        return _0xda0fc0.apply(this, arguments);
      };
    }();
    var _0x2befa4 = [{
      id: "cut",
      coords: new _0x26b14d(715.97, -963.09, 30.6),
      label: "Cut Fur"
    }, {
      id: "clean",
      coords: new _0x26b14d(713.6, -960.64, 30.6),
      label: "Clean Fur"
    }, {
      id: "box",
      coords: new _0x26b14d(705.7, -959.65, 30.72),
      label: "Box Fur"
    }];
    setImmediate(function () {
      var _0x43099b = true;
      var _0xc477a1 = false;
      var _0x32f8fb = undefined;
      try {
        function _0x2cbdea() {
          var _0xc3bb16 = _0x105cfa.value;
          var _0x16ef73 = {
            distance: {
              draw: 10,
              use: 2
            },
            isEnabled: function () {
              return true;
            },
            skipLos: true
          };
          _0x121f17.addInteraction(`hunting:fur:${_0xc3bb16.id}`, _0xc3bb16.coords, [{
            id: `hunting:fur:${_0xc3bb16.id}`,
            label: _0xc3bb16.label,
            eventSDK: `np-jobs:hunting:fur:${_0xc3bb16.id}`,
            parameters: {}
          }], _0x16ef73);
          _0x10598b.on(`np-jobs:hunting:fur:${_0xc3bb16.id}`, function () {
            _0x2663ad.OpenInventory([`hunting-fur:${_0xc3bb16.id}::0`, `hunting-fur-result:${_0xc3bb16.id}::0`], false);
          });
        }
        for (var _0x5c96f9 = _0x2befa4[Symbol.iterator](), _0x105cfa; !(_0x43099b = (_0x105cfa = _0x5c96f9.next()).done); _0x43099b = true) {
          _0x2cbdea();
        }
      } catch (_0x122fa4) {
        _0xc477a1 = true;
        _0x32f8fb = _0x122fa4;
      } finally {
        try {
          if (!_0x43099b && _0x5c96f9.return != null) {
            _0x5c96f9.return();
          }
        } finally {
          if (_0xc477a1) {
            throw _0x32f8fb;
          }
        }
      }
    });
    ;
    function _0x515f71(_0x268311, _0x37d431, _0x230c90, _0x4e9020, _0x381951, _0x9f93a, _0xbe9813) {
      try {
        var _0x23097a = _0x268311[_0x9f93a](_0xbe9813);
        var _0x5e70d6 = _0x23097a.value;
      } catch (_0x5a04ac) {
        _0x230c90(_0x5a04ac);
        return;
      }
      if (_0x23097a.done) {
        _0x37d431(_0x5e70d6);
      } else {
        Promise.resolve(_0x5e70d6).then(_0x4e9020, _0x381951);
      }
    }
    function _0x43564b(_0x2f56e4) {
      return function () {
        var _0x1a2cee = this;
        var _0x707515 = arguments;
        return new Promise(function (_0x3d4426, _0x1c689c) {
          var _0x43799a = _0x2f56e4.apply(_0x1a2cee, _0x707515);
          function _0x3ce15d(_0x50ffb6) {
            _0x515f71(_0x43799a, _0x3d4426, _0x1c689c, _0x3ce15d, _0x5c5175, "next", _0x50ffb6);
          }
          function _0x5c5175(_0x2a9c1b) {
            _0x515f71(_0x43799a, _0x3d4426, _0x1c689c, _0x3ce15d, _0x5c5175, "throw", _0x2a9c1b);
          }
          _0x3ce15d(undefined);
        });
      };
    }
    function _0x10ba82(_0x1cd239, _0x344ca4) {
      var _0x46d514;
      var _0x59d8b6;
      var _0x49b6e3;
      var _0x203fe5;
      var _0x3d8ae4 = {
        label: 0,
        sent: function () {
          if (_0x49b6e3[0] & 1) {
            throw _0x49b6e3[1];
          }
          return _0x49b6e3[1];
        },
        trys: [],
        ops: []
      };
      _0x203fe5 = {
        next: _0x38cf80(0),
        throw: _0x38cf80(1),
        return: _0x38cf80(2)
      };
      if (typeof Symbol === "function") {
        _0x203fe5[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x203fe5;
      function _0x38cf80(_0x546f73) {
        return function (_0xc54ff4) {
          return _0x31b279([_0x546f73, _0xc54ff4]);
        };
      }
      function _0x31b279(_0x546abd) {
        if (_0x46d514) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3d8ae4) {
          try {
            _0x46d514 = 1;
            if (_0x59d8b6 && (_0x49b6e3 = _0x546abd[0] & 2 ? _0x59d8b6.return : _0x546abd[0] ? _0x59d8b6.throw || ((_0x49b6e3 = _0x59d8b6.return) && _0x49b6e3.call(_0x59d8b6), 0) : _0x59d8b6.next) && !(_0x49b6e3 = _0x49b6e3.call(_0x59d8b6, _0x546abd[1])).done) {
              return _0x49b6e3;
            }
            _0x59d8b6 = 0;
            if (_0x49b6e3) {
              _0x546abd = [_0x546abd[0] & 2, _0x49b6e3.value];
            }
            switch (_0x546abd[0]) {
              case 0:
              case 1:
                _0x49b6e3 = _0x546abd;
                break;
              case 4:
                _0x3d8ae4.label++;
                var _0x36168d = {
                  value: _0x546abd[1],
                  done: false
                };
                return _0x36168d;
              case 5:
                _0x3d8ae4.label++;
                _0x59d8b6 = _0x546abd[1];
                _0x546abd = [0];
                continue;
              case 7:
                _0x546abd = _0x3d8ae4.ops.pop();
                _0x3d8ae4.trys.pop();
                continue;
              default:
                if (!(_0x49b6e3 = _0x3d8ae4.trys, _0x49b6e3 = _0x49b6e3.length > 0 && _0x49b6e3[_0x49b6e3.length - 1]) && (_0x546abd[0] === 6 || _0x546abd[0] === 2)) {
                  _0x3d8ae4 = 0;
                  continue;
                }
                if (_0x546abd[0] === 3 && (!_0x49b6e3 || _0x546abd[1] > _0x49b6e3[0] && _0x546abd[1] < _0x49b6e3[3])) {
                  _0x3d8ae4.label = _0x546abd[1];
                  break;
                }
                if (_0x546abd[0] === 6 && _0x3d8ae4.label < _0x49b6e3[1]) {
                  _0x3d8ae4.label = _0x49b6e3[1];
                  _0x49b6e3 = _0x546abd;
                  break;
                }
                if (_0x49b6e3 && _0x3d8ae4.label < _0x49b6e3[2]) {
                  _0x3d8ae4.label = _0x49b6e3[2];
                  _0x3d8ae4.ops.push(_0x546abd);
                  break;
                }
                if (_0x49b6e3[2]) {
                  _0x3d8ae4.ops.pop();
                }
                _0x3d8ae4.trys.pop();
                continue;
            }
            _0x546abd = _0x344ca4.call(_0x1cd239, _0x3d8ae4);
          } catch (_0x167ade) {
            _0x546abd = [6, _0x167ade];
            _0x59d8b6 = 0;
          } finally {
            _0x46d514 = _0x49b6e3 = 0;
          }
        }
        if (_0x546abd[0] & 5) {
          throw _0x546abd[1];
        }
        var _0x561445 = {
          value: _0x546abd[0] ? _0x546abd[1] : undefined,
          done: true
        };
        return _0x561445;
      }
    }
    var _0x3ce06c = function () {
      var _0x4fdb94 = _0x43564b(function () {
        return _0x10ba82(this, function (_0x14c3a5) {
          switch (_0x14c3a5.label) {
            case 0:
              return [4, _0x372a42()];
            case 1:
              _0x14c3a5.sent();
              return [2];
          }
        });
      });
      return function _0x4ea3b7() {
        return _0x4fdb94.apply(this, arguments);
      };
    }();
    ;
    function _0x1bfa79(_0x57161c, _0x4214c6, _0x4a5153, _0x996be3, _0xa92ecc, _0x3933fa, _0x5b67cc) {
      try {
        var _0x1dd889 = _0x57161c[_0x3933fa](_0x5b67cc);
        var _0x2666b2 = _0x1dd889.value;
      } catch (_0x2aed15) {
        _0x4a5153(_0x2aed15);
        return;
      }
      if (_0x1dd889.done) {
        _0x4214c6(_0x2666b2);
      } else {
        Promise.resolve(_0x2666b2).then(_0x996be3, _0xa92ecc);
      }
    }
    function _0x33e873(_0x59b3af) {
      return function () {
        var _0x20bf12 = this;
        var _0x3f3fba = arguments;
        return new Promise(function (_0x1d3d8a, _0x4a6cfd) {
          var _0x44ec3 = _0x59b3af.apply(_0x20bf12, _0x3f3fba);
          function _0x470833(_0x3309f2) {
            _0x1bfa79(_0x44ec3, _0x1d3d8a, _0x4a6cfd, _0x470833, _0xffe2a0, "next", _0x3309f2);
          }
          function _0xffe2a0(_0x25a5b5) {
            _0x1bfa79(_0x44ec3, _0x1d3d8a, _0x4a6cfd, _0x470833, _0xffe2a0, "throw", _0x25a5b5);
          }
          _0x470833(undefined);
        });
      };
    }
    function _0x21bafe(_0x5561be, _0x46758f) {
      var _0x313bc2;
      var _0xad453c;
      var _0x524421;
      var _0x2577e0;
      var _0x5cc1ef = {
        label: 0,
        sent: function () {
          if (_0x524421[0] & 1) {
            throw _0x524421[1];
          }
          return _0x524421[1];
        },
        trys: [],
        ops: []
      };
      _0x2577e0 = {
        next: _0x150bcd(0),
        throw: _0x150bcd(1),
        return: _0x150bcd(2)
      };
      if (typeof Symbol === "function") {
        _0x2577e0[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2577e0;
      function _0x150bcd(_0x2b6c64) {
        return function (_0x179063) {
          return _0xe34ab9([_0x2b6c64, _0x179063]);
        };
      }
      function _0xe34ab9(_0x2a20e7) {
        if (_0x313bc2) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5cc1ef) {
          try {
            _0x313bc2 = 1;
            if (_0xad453c && (_0x524421 = _0x2a20e7[0] & 2 ? _0xad453c.return : _0x2a20e7[0] ? _0xad453c.throw || ((_0x524421 = _0xad453c.return) && _0x524421.call(_0xad453c), 0) : _0xad453c.next) && !(_0x524421 = _0x524421.call(_0xad453c, _0x2a20e7[1])).done) {
              return _0x524421;
            }
            _0xad453c = 0;
            if (_0x524421) {
              _0x2a20e7 = [_0x2a20e7[0] & 2, _0x524421.value];
            }
            switch (_0x2a20e7[0]) {
              case 0:
              case 1:
                _0x524421 = _0x2a20e7;
                break;
              case 4:
                _0x5cc1ef.label++;
                var _0x447318 = {
                  value: _0x2a20e7[1],
                  done: false
                };
                return _0x447318;
              case 5:
                _0x5cc1ef.label++;
                _0xad453c = _0x2a20e7[1];
                _0x2a20e7 = [0];
                continue;
              case 7:
                _0x2a20e7 = _0x5cc1ef.ops.pop();
                _0x5cc1ef.trys.pop();
                continue;
              default:
                if (!(_0x524421 = _0x5cc1ef.trys, _0x524421 = _0x524421.length > 0 && _0x524421[_0x524421.length - 1]) && (_0x2a20e7[0] === 6 || _0x2a20e7[0] === 2)) {
                  _0x5cc1ef = 0;
                  continue;
                }
                if (_0x2a20e7[0] === 3 && (!_0x524421 || _0x2a20e7[1] > _0x524421[0] && _0x2a20e7[1] < _0x524421[3])) {
                  _0x5cc1ef.label = _0x2a20e7[1];
                  break;
                }
                if (_0x2a20e7[0] === 6 && _0x5cc1ef.label < _0x524421[1]) {
                  _0x5cc1ef.label = _0x524421[1];
                  _0x524421 = _0x2a20e7;
                  break;
                }
                if (_0x524421 && _0x5cc1ef.label < _0x524421[2]) {
                  _0x5cc1ef.label = _0x524421[2];
                  _0x5cc1ef.ops.push(_0x2a20e7);
                  break;
                }
                if (_0x524421[2]) {
                  _0x5cc1ef.ops.pop();
                }
                _0x5cc1ef.trys.pop();
                continue;
            }
            _0x2a20e7 = _0x46758f.call(_0x5561be, _0x5cc1ef);
          } catch (_0x16cdec) {
            _0x2a20e7 = [6, _0x16cdec];
            _0xad453c = 0;
          } finally {
            _0x313bc2 = _0x524421 = 0;
          }
        }
        if (_0x2a20e7[0] & 5) {
          throw _0x2a20e7[1];
        }
        var _0x262e35 = {
          value: _0x2a20e7[0] ? _0x2a20e7[1] : undefined,
          done: true
        };
        return _0x262e35;
      }
    }
    var _0x1be525 = function () {
      var _0x32470e = _0x33e873(function () {
        return _0x21bafe(this, function (_0xa05d8d) {
          return [2];
        });
      });
      return function _0x513080() {
        return _0x32470e.apply(this, arguments);
      };
    }();
    var _0x276820 = [{
      id: "cut",
      coords: new _0x26b14d(983.9, -2113.57, 31.23),
      label: "Cut Meat"
    }, {
      id: "clean",
      coords: new _0x26b14d(984.92, -2117.41, 30.46),
      label: "Clean Meat"
    }, {
      id: "box",
      coords: new _0x26b14d(984.68, -2120.53, 30.76),
      label: "Box Meat"
    }];
    setImmediate(function () {
      var _0x4f8d63 = true;
      var _0xd36298 = false;
      var _0x1bd342 = undefined;
      try {
        function _0x3e6ad3() {
          var _0x2b1865 = _0x3be5ba.value;
          var _0x528de3 = {
            distance: {
              draw: 10,
              use: 2
            },
            isEnabled: function () {
              return true;
            },
            skipLos: true
          };
          _0x121f17.addInteraction(`hunting:meat:${_0x2b1865.id}`, _0x2b1865.coords, [{
            id: `hunting:meat:${_0x2b1865.id}`,
            label: _0x2b1865.label,
            eventSDK: `np-jobs:hunting:meat:${_0x2b1865.id}`,
            parameters: {}
          }], _0x528de3);
          _0x10598b.on(`np-jobs:hunting:meat:${_0x2b1865.id}`, function () {
            _0x2663ad.OpenInventory([`hunting-meat:${_0x2b1865.id}::0`, `hunting-meat-result:${_0x2b1865.id}::0`], false);
          });
        }
        for (var _0x1cdadc = _0x276820[Symbol.iterator](), _0x3be5ba; !(_0x4f8d63 = (_0x3be5ba = _0x1cdadc.next()).done); _0x4f8d63 = true) {
          _0x3e6ad3();
        }
      } catch (_0x4a83c2) {
        _0xd36298 = true;
        _0x1bd342 = _0x4a83c2;
      } finally {
        try {
          if (!_0x4f8d63 && _0x1cdadc.return != null) {
            _0x1cdadc.return();
          }
        } finally {
          if (_0xd36298) {
            throw _0x1bd342;
          }
        }
      }
    });
    ;
    function _0x55a35d(_0x373541, _0xcf50f0, _0x125307, _0x2e4215, _0x397c89, _0x57c829, _0x23dfda) {
      try {
        var _0x4d724c = _0x373541[_0x57c829](_0x23dfda);
        var _0x294cb9 = _0x4d724c.value;
      } catch (_0x50b465) {
        _0x125307(_0x50b465);
        return;
      }
      if (_0x4d724c.done) {
        _0xcf50f0(_0x294cb9);
      } else {
        Promise.resolve(_0x294cb9).then(_0x2e4215, _0x397c89);
      }
    }
    function _0x20f11c(_0x3fb395) {
      return function () {
        var _0x2508fa = this;
        var _0x36bd03 = arguments;
        return new Promise(function (_0x11e0ce, _0x4fd6a5) {
          var _0x52fa0f = _0x3fb395.apply(_0x2508fa, _0x36bd03);
          function _0x36cf35(_0x8d01c) {
            _0x55a35d(_0x52fa0f, _0x11e0ce, _0x4fd6a5, _0x36cf35, _0x31ba0d, "next", _0x8d01c);
          }
          function _0x31ba0d(_0x5d9a12) {
            _0x55a35d(_0x52fa0f, _0x11e0ce, _0x4fd6a5, _0x36cf35, _0x31ba0d, "throw", _0x5d9a12);
          }
          _0x36cf35(undefined);
        });
      };
    }
    function _0x623941(_0x2b646c, _0x4cf3d9) {
      var _0x35450d;
      var _0x530531;
      var _0x4c0cbb;
      var _0x5ad8eb;
      var _0x4f2269 = {
        label: 0,
        sent: function () {
          if (_0x4c0cbb[0] & 1) {
            throw _0x4c0cbb[1];
          }
          return _0x4c0cbb[1];
        },
        trys: [],
        ops: []
      };
      _0x5ad8eb = {
        next: _0x43b294(0),
        throw: _0x43b294(1),
        return: _0x43b294(2)
      };
      if (typeof Symbol === "function") {
        _0x5ad8eb[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5ad8eb;
      function _0x43b294(_0x31261c) {
        return function (_0x4d09b0) {
          return _0x58e6a5([_0x31261c, _0x4d09b0]);
        };
      }
      function _0x58e6a5(_0xb23e8e) {
        if (_0x35450d) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4f2269) {
          try {
            _0x35450d = 1;
            if (_0x530531 && (_0x4c0cbb = _0xb23e8e[0] & 2 ? _0x530531.return : _0xb23e8e[0] ? _0x530531.throw || ((_0x4c0cbb = _0x530531.return) && _0x4c0cbb.call(_0x530531), 0) : _0x530531.next) && !(_0x4c0cbb = _0x4c0cbb.call(_0x530531, _0xb23e8e[1])).done) {
              return _0x4c0cbb;
            }
            _0x530531 = 0;
            if (_0x4c0cbb) {
              _0xb23e8e = [_0xb23e8e[0] & 2, _0x4c0cbb.value];
            }
            switch (_0xb23e8e[0]) {
              case 0:
              case 1:
                _0x4c0cbb = _0xb23e8e;
                break;
              case 4:
                _0x4f2269.label++;
                var _0xa3a3ba = {
                  value: _0xb23e8e[1],
                  done: false
                };
                return _0xa3a3ba;
              case 5:
                _0x4f2269.label++;
                _0x530531 = _0xb23e8e[1];
                _0xb23e8e = [0];
                continue;
              case 7:
                _0xb23e8e = _0x4f2269.ops.pop();
                _0x4f2269.trys.pop();
                continue;
              default:
                if (!(_0x4c0cbb = _0x4f2269.trys, _0x4c0cbb = _0x4c0cbb.length > 0 && _0x4c0cbb[_0x4c0cbb.length - 1]) && (_0xb23e8e[0] === 6 || _0xb23e8e[0] === 2)) {
                  _0x4f2269 = 0;
                  continue;
                }
                if (_0xb23e8e[0] === 3 && (!_0x4c0cbb || _0xb23e8e[1] > _0x4c0cbb[0] && _0xb23e8e[1] < _0x4c0cbb[3])) {
                  _0x4f2269.label = _0xb23e8e[1];
                  break;
                }
                if (_0xb23e8e[0] === 6 && _0x4f2269.label < _0x4c0cbb[1]) {
                  _0x4f2269.label = _0x4c0cbb[1];
                  _0x4c0cbb = _0xb23e8e;
                  break;
                }
                if (_0x4c0cbb && _0x4f2269.label < _0x4c0cbb[2]) {
                  _0x4f2269.label = _0x4c0cbb[2];
                  _0x4f2269.ops.push(_0xb23e8e);
                  break;
                }
                if (_0x4c0cbb[2]) {
                  _0x4f2269.ops.pop();
                }
                _0x4f2269.trys.pop();
                continue;
            }
            _0xb23e8e = _0x4cf3d9.call(_0x2b646c, _0x4f2269);
          } catch (_0x439269) {
            _0xb23e8e = [6, _0x439269];
            _0x530531 = 0;
          } finally {
            _0x35450d = _0x4c0cbb = 0;
          }
        }
        if (_0xb23e8e[0] & 5) {
          throw _0xb23e8e[1];
        }
        var _0x344232 = {
          value: _0xb23e8e[0] ? _0xb23e8e[1] : undefined,
          done: true
        };
        return _0x344232;
      }
    }
    var _0x8a2c75 = function () {
      var _0x161c6b = _0x20f11c(function () {
        return _0x623941(this, function (_0x81b505) {
          switch (_0x81b505.label) {
            case 0:
              return [4, _0x1be525()];
            case 1:
              _0x81b505.sent();
              return [2];
          }
        });
      });
      return function _0x5ea88e() {
        return _0x161c6b.apply(this, arguments);
      };
    }();
    ;
    function _0x21496b(_0x1f8cff, _0x39ae81, _0x261327, _0x16b5ab, _0x1fe492, _0xcb5fca, _0x13c7a2) {
      try {
        var _0x258bba = _0x1f8cff[_0xcb5fca](_0x13c7a2);
        var _0x4ef9aa = _0x258bba.value;
      } catch (_0x17c694) {
        _0x261327(_0x17c694);
        return;
      }
      if (_0x258bba.done) {
        _0x39ae81(_0x4ef9aa);
      } else {
        Promise.resolve(_0x4ef9aa).then(_0x16b5ab, _0x1fe492);
      }
    }
    function _0x2c4394(_0x101703) {
      return function () {
        var _0x46dc92 = this;
        var _0x4831a1 = arguments;
        return new Promise(function (_0x3f8b32, _0x33e09b) {
          var _0xa3c323 = _0x101703.apply(_0x46dc92, _0x4831a1);
          function _0x1ba8d0(_0xfe309b) {
            _0x21496b(_0xa3c323, _0x3f8b32, _0x33e09b, _0x1ba8d0, _0x50e24e, "next", _0xfe309b);
          }
          function _0x50e24e(_0x5aa965) {
            _0x21496b(_0xa3c323, _0x3f8b32, _0x33e09b, _0x1ba8d0, _0x50e24e, "throw", _0x5aa965);
          }
          _0x1ba8d0(undefined);
        });
      };
    }
    function _0x428bc8(_0x2fc21e, _0x247d08) {
      var _0x2c6400;
      var _0x470599;
      var _0x293972;
      var _0x2d8b7c;
      var _0xf80b57 = {
        label: 0,
        sent: function () {
          if (_0x293972[0] & 1) {
            throw _0x293972[1];
          }
          return _0x293972[1];
        },
        trys: [],
        ops: []
      };
      _0x2d8b7c = {
        next: _0xc1d78e(0),
        throw: _0xc1d78e(1),
        return: _0xc1d78e(2)
      };
      if (typeof Symbol === "function") {
        _0x2d8b7c[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2d8b7c;
      function _0xc1d78e(_0x1840e4) {
        return function (_0x55ea34) {
          return _0x3e20cd([_0x1840e4, _0x55ea34]);
        };
      }
      function _0x3e20cd(_0x4395dc) {
        if (_0x2c6400) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xf80b57) {
          try {
            _0x2c6400 = 1;
            if (_0x470599 && (_0x293972 = _0x4395dc[0] & 2 ? _0x470599.return : _0x4395dc[0] ? _0x470599.throw || ((_0x293972 = _0x470599.return) && _0x293972.call(_0x470599), 0) : _0x470599.next) && !(_0x293972 = _0x293972.call(_0x470599, _0x4395dc[1])).done) {
              return _0x293972;
            }
            _0x470599 = 0;
            if (_0x293972) {
              _0x4395dc = [_0x4395dc[0] & 2, _0x293972.value];
            }
            switch (_0x4395dc[0]) {
              case 0:
              case 1:
                _0x293972 = _0x4395dc;
                break;
              case 4:
                _0xf80b57.label++;
                var _0x31185a = {
                  value: _0x4395dc[1],
                  done: false
                };
                return _0x31185a;
              case 5:
                _0xf80b57.label++;
                _0x470599 = _0x4395dc[1];
                _0x4395dc = [0];
                continue;
              case 7:
                _0x4395dc = _0xf80b57.ops.pop();
                _0xf80b57.trys.pop();
                continue;
              default:
                if (!(_0x293972 = _0xf80b57.trys, _0x293972 = _0x293972.length > 0 && _0x293972[_0x293972.length - 1]) && (_0x4395dc[0] === 6 || _0x4395dc[0] === 2)) {
                  _0xf80b57 = 0;
                  continue;
                }
                if (_0x4395dc[0] === 3 && (!_0x293972 || _0x4395dc[1] > _0x293972[0] && _0x4395dc[1] < _0x293972[3])) {
                  _0xf80b57.label = _0x4395dc[1];
                  break;
                }
                if (_0x4395dc[0] === 6 && _0xf80b57.label < _0x293972[1]) {
                  _0xf80b57.label = _0x293972[1];
                  _0x293972 = _0x4395dc;
                  break;
                }
                if (_0x293972 && _0xf80b57.label < _0x293972[2]) {
                  _0xf80b57.label = _0x293972[2];
                  _0xf80b57.ops.push(_0x4395dc);
                  break;
                }
                if (_0x293972[2]) {
                  _0xf80b57.ops.pop();
                }
                _0xf80b57.trys.pop();
                continue;
            }
            _0x4395dc = _0x247d08.call(_0x2fc21e, _0xf80b57);
          } catch (_0xacc21) {
            _0x4395dc = [6, _0xacc21];
            _0x470599 = 0;
          } finally {
            _0x2c6400 = _0x293972 = 0;
          }
        }
        if (_0x4395dc[0] & 5) {
          throw _0x4395dc[1];
        }
        var _0x226cf2 = {
          value: _0x4395dc[0] ? _0x4395dc[1] : undefined,
          done: true
        };
        return _0x226cf2;
      }
    }
    var _0x34fe77 = function () {
      var _0xcfb52 = _0x2c4394(function () {
        return _0x428bc8(this, function (_0x42b202) {
          switch (_0x42b202.label) {
            case 0:
              return [4, _0x8a2c75()];
            case 1:
              _0x42b202.sent();
              return [4, _0x3ce06c()];
            case 2:
              _0x42b202.sent();
              return [2];
          }
        });
      });
      return function _0x1262ac() {
        return _0xcfb52.apply(this, arguments);
      };
    }();
    ;
    function _0x1f190c(_0x240b6f, _0x5cc1c1, _0x78e1a7, _0x395751, _0x4f21fe, _0x1a10a2, _0x2dfed0) {
      try {
        var _0x5db32f = _0x240b6f[_0x1a10a2](_0x2dfed0);
        var _0x372cb9 = _0x5db32f.value;
      } catch (_0x3b730c) {
        _0x78e1a7(_0x3b730c);
        return;
      }
      if (_0x5db32f.done) {
        _0x5cc1c1(_0x372cb9);
      } else {
        Promise.resolve(_0x372cb9).then(_0x395751, _0x4f21fe);
      }
    }
    function _0x464d00(_0x5c8c89) {
      return function () {
        var _0x405ce8 = this;
        var _0x2d8a69 = arguments;
        return new Promise(function (_0xedd86f, _0x1f463e) {
          var _0x1a2193 = _0x5c8c89.apply(_0x405ce8, _0x2d8a69);
          function _0x39d5b2(_0x393793) {
            _0x1f190c(_0x1a2193, _0xedd86f, _0x1f463e, _0x39d5b2, _0x2ed313, "next", _0x393793);
          }
          function _0x2ed313(_0x1be29e) {
            _0x1f190c(_0x1a2193, _0xedd86f, _0x1f463e, _0x39d5b2, _0x2ed313, "throw", _0x1be29e);
          }
          _0x39d5b2(undefined);
        });
      };
    }
    function _0x304c0b(_0x5073a0, _0x536558) {
      var _0x116bfb;
      var _0x39f284;
      var _0x3ab929;
      var _0x525331;
      var _0x42e22a = {
        label: 0,
        sent: function () {
          if (_0x3ab929[0] & 1) {
            throw _0x3ab929[1];
          }
          return _0x3ab929[1];
        },
        trys: [],
        ops: []
      };
      _0x525331 = {
        next: _0x54132e(0),
        throw: _0x54132e(1),
        return: _0x54132e(2)
      };
      if (typeof Symbol === "function") {
        _0x525331[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x525331;
      function _0x54132e(_0x468c9c) {
        return function (_0x195dea) {
          return _0x2e84f4([_0x468c9c, _0x195dea]);
        };
      }
      function _0x2e84f4(_0x49a57c) {
        if (_0x116bfb) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x42e22a) {
          try {
            _0x116bfb = 1;
            if (_0x39f284 && (_0x3ab929 = _0x49a57c[0] & 2 ? _0x39f284.return : _0x49a57c[0] ? _0x39f284.throw || ((_0x3ab929 = _0x39f284.return) && _0x3ab929.call(_0x39f284), 0) : _0x39f284.next) && !(_0x3ab929 = _0x3ab929.call(_0x39f284, _0x49a57c[1])).done) {
              return _0x3ab929;
            }
            _0x39f284 = 0;
            if (_0x3ab929) {
              _0x49a57c = [_0x49a57c[0] & 2, _0x3ab929.value];
            }
            switch (_0x49a57c[0]) {
              case 0:
              case 1:
                _0x3ab929 = _0x49a57c;
                break;
              case 4:
                _0x42e22a.label++;
                var _0x2343e9 = {
                  value: _0x49a57c[1],
                  done: false
                };
                return _0x2343e9;
              case 5:
                _0x42e22a.label++;
                _0x39f284 = _0x49a57c[1];
                _0x49a57c = [0];
                continue;
              case 7:
                _0x49a57c = _0x42e22a.ops.pop();
                _0x42e22a.trys.pop();
                continue;
              default:
                if (!(_0x3ab929 = _0x42e22a.trys, _0x3ab929 = _0x3ab929.length > 0 && _0x3ab929[_0x3ab929.length - 1]) && (_0x49a57c[0] === 6 || _0x49a57c[0] === 2)) {
                  _0x42e22a = 0;
                  continue;
                }
                if (_0x49a57c[0] === 3 && (!_0x3ab929 || _0x49a57c[1] > _0x3ab929[0] && _0x49a57c[1] < _0x3ab929[3])) {
                  _0x42e22a.label = _0x49a57c[1];
                  break;
                }
                if (_0x49a57c[0] === 6 && _0x42e22a.label < _0x3ab929[1]) {
                  _0x42e22a.label = _0x3ab929[1];
                  _0x3ab929 = _0x49a57c;
                  break;
                }
                if (_0x3ab929 && _0x42e22a.label < _0x3ab929[2]) {
                  _0x42e22a.label = _0x3ab929[2];
                  _0x42e22a.ops.push(_0x49a57c);
                  break;
                }
                if (_0x3ab929[2]) {
                  _0x42e22a.ops.pop();
                }
                _0x42e22a.trys.pop();
                continue;
            }
            _0x49a57c = _0x536558.call(_0x5073a0, _0x42e22a);
          } catch (_0x4924ac) {
            _0x49a57c = [6, _0x4924ac];
            _0x39f284 = 0;
          } finally {
            _0x116bfb = _0x3ab929 = 0;
          }
        }
        if (_0x49a57c[0] & 5) {
          throw _0x49a57c[1];
        }
        var _0x5884a1 = {
          value: _0x49a57c[0] ? _0x49a57c[1] : undefined,
          done: true
        };
        return _0x5884a1;
      }
    }
    var _0x53d29a = [{
      label: "Meat Process - Hunting",
      sprite: 141,
      scale: 0.8,
      color: 1,
      coords: new _0x26b14d(965.85, -2116.22, 31.48)
    }, {
      label: "Fur Process - Hunting",
      sprite: 141,
      scale: 0.8,
      color: 1,
      coords: new _0x26b14d(718.11, -974.25, 24.91)
    }];
    var _0x3c0fe0 = function () {
      var _0x412101 = _0x464d00(function () {
        var _0x382343;
        var _0x16f16f;
        var _0x2fe68e;
        var _0x5dc87b;
        var _0x226bae;
        var _0x410381;
        var _0x4decc8;
        return _0x304c0b(this, function (_0x37dcb8) {
          _0x382343 = true;
          _0x16f16f = false;
          _0x2fe68e = undefined;
          try {
            for (_0x5dc87b = _0x53d29a[Symbol.iterator](); !(_0x382343 = (_0x226bae = _0x5dc87b.next()).done); _0x382343 = true) {
              _0x410381 = _0x226bae.value;
              _0x4decc8 = _0x4be8d9.createBlip("coord", _0x410381.coords.x, _0x410381.coords.y, _0x410381.coords.z);
              _0x4be8d9.applyBlipSettings(_0x4decc8, _0x410381.label, _0x410381.sprite, _0x410381.color, undefined, _0x410381.scale, undefined, true);
            }
          } catch (_0x3f7627) {
            _0x16f16f = true;
            _0x2fe68e = _0x3f7627;
          } finally {
            try {
              if (!_0x382343 && _0x5dc87b.return != null) {
                _0x5dc87b.return();
              }
            } finally {
              if (_0x16f16f) {
                throw _0x2fe68e;
              }
            }
          }
          return [2];
        });
      });
      return function _0x238e8c() {
        return _0x412101.apply(this, arguments);
      };
    }();
    ;
    function _0x161953(_0x27770d, _0x9c213d, _0x9e65b, _0x279587, _0x833482, _0x3c7e0a, _0x27696c) {
      try {
        var _0x59ac01 = _0x27770d[_0x3c7e0a](_0x27696c);
        var _0x2a3485 = _0x59ac01.value;
      } catch (_0x381983) {
        _0x9e65b(_0x381983);
        return;
      }
      if (_0x59ac01.done) {
        _0x9c213d(_0x2a3485);
      } else {
        Promise.resolve(_0x2a3485).then(_0x279587, _0x833482);
      }
    }
    function _0x2c5077(_0x1fda06) {
      return function () {
        var _0xcc9305 = this;
        var _0x1d4415 = arguments;
        return new Promise(function (_0x4b79ec, _0x197b78) {
          var _0x2779b3 = _0x1fda06.apply(_0xcc9305, _0x1d4415);
          function _0x5b2923(_0x3f0bfd) {
            _0x161953(_0x2779b3, _0x4b79ec, _0x197b78, _0x5b2923, _0x4ca40f, "next", _0x3f0bfd);
          }
          function _0x4ca40f(_0x217206) {
            _0x161953(_0x2779b3, _0x4b79ec, _0x197b78, _0x5b2923, _0x4ca40f, "throw", _0x217206);
          }
          _0x5b2923(undefined);
        });
      };
    }
    function _0x9d4785(_0x89c750, _0x2d30b) {
      var _0x41e83b;
      var _0x47dc1f;
      var _0xe16706;
      var _0x1d9990;
      var _0x31f46d = {
        label: 0,
        sent: function () {
          if (_0xe16706[0] & 1) {
            throw _0xe16706[1];
          }
          return _0xe16706[1];
        },
        trys: [],
        ops: []
      };
      _0x1d9990 = {
        next: _0x5efd48(0),
        throw: _0x5efd48(1),
        return: _0x5efd48(2)
      };
      if (typeof Symbol === "function") {
        _0x1d9990[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1d9990;
      function _0x5efd48(_0x17049e) {
        return function (_0x882e80) {
          return _0x197b3d([_0x17049e, _0x882e80]);
        };
      }
      function _0x197b3d(_0x5b77dc) {
        if (_0x41e83b) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x31f46d) {
          try {
            _0x41e83b = 1;
            if (_0x47dc1f && (_0xe16706 = _0x5b77dc[0] & 2 ? _0x47dc1f.return : _0x5b77dc[0] ? _0x47dc1f.throw || ((_0xe16706 = _0x47dc1f.return) && _0xe16706.call(_0x47dc1f), 0) : _0x47dc1f.next) && !(_0xe16706 = _0xe16706.call(_0x47dc1f, _0x5b77dc[1])).done) {
              return _0xe16706;
            }
            _0x47dc1f = 0;
            if (_0xe16706) {
              _0x5b77dc = [_0x5b77dc[0] & 2, _0xe16706.value];
            }
            switch (_0x5b77dc[0]) {
              case 0:
              case 1:
                _0xe16706 = _0x5b77dc;
                break;
              case 4:
                _0x31f46d.label++;
                var _0x5392a1 = {
                  value: _0x5b77dc[1],
                  done: false
                };
                return _0x5392a1;
              case 5:
                _0x31f46d.label++;
                _0x47dc1f = _0x5b77dc[1];
                _0x5b77dc = [0];
                continue;
              case 7:
                _0x5b77dc = _0x31f46d.ops.pop();
                _0x31f46d.trys.pop();
                continue;
              default:
                if (!(_0xe16706 = _0x31f46d.trys, _0xe16706 = _0xe16706.length > 0 && _0xe16706[_0xe16706.length - 1]) && (_0x5b77dc[0] === 6 || _0x5b77dc[0] === 2)) {
                  _0x31f46d = 0;
                  continue;
                }
                if (_0x5b77dc[0] === 3 && (!_0xe16706 || _0x5b77dc[1] > _0xe16706[0] && _0x5b77dc[1] < _0xe16706[3])) {
                  _0x31f46d.label = _0x5b77dc[1];
                  break;
                }
                if (_0x5b77dc[0] === 6 && _0x31f46d.label < _0xe16706[1]) {
                  _0x31f46d.label = _0xe16706[1];
                  _0xe16706 = _0x5b77dc;
                  break;
                }
                if (_0xe16706 && _0x31f46d.label < _0xe16706[2]) {
                  _0x31f46d.label = _0xe16706[2];
                  _0x31f46d.ops.push(_0x5b77dc);
                  break;
                }
                if (_0xe16706[2]) {
                  _0x31f46d.ops.pop();
                }
                _0x31f46d.trys.pop();
                continue;
            }
            _0x5b77dc = _0x2d30b.call(_0x89c750, _0x31f46d);
          } catch (_0x5bcef7) {
            _0x5b77dc = [6, _0x5bcef7];
            _0x47dc1f = 0;
          } finally {
            _0x41e83b = _0xe16706 = 0;
          }
        }
        if (_0x5b77dc[0] & 5) {
          throw _0x5b77dc[1];
        }
        var _0x1d455f = {
          value: _0x5b77dc[0] ? _0x5b77dc[1] : undefined,
          done: true
        };
        return _0x1d455f;
      }
    }
    var _0x348da3 = function () {
      var _0xd057d2 = _0x2c5077(function () {
        return _0x9d4785(this, function (_0x4290e8) {
          var _0x3d5d05 = {
            distance: {
              use: 2.5,
              draw: 5
            },
            isEnabled: function () {
              return true;
            },
            skipLos: true
          };
          _0x121f17.addInteraction("hunting:board", new _0x26b14d(-680.41, 5850.7, 17.8), [{
            id: "hunting:board",
            label: "Hunting Board",
            eventSDK: "np-jobs:hunting:contracts",
            parameters: {}
          }], _0x3d5d05);
          return [2];
        });
      });
      return function _0x351130() {
        return _0xd057d2.apply(this, arguments);
      };
    }();
    _0x10598b.on("np-jobs:hunting:contracts", function () {
      globalThis.exports.focusmanager.SetUIFocus(true, true);
      _0x30390f.execute("hunting:showContracts", true);
    });
    ;
    function _0x560a1d(_0xb141de, _0x516241) {
      if (_0x516241 == null || _0x516241 > _0xb141de.length) {
        _0x516241 = _0xb141de.length;
      }
      for (var _0x576f39 = 0, _0x2eed8b = new Array(_0x516241); _0x576f39 < _0x516241; _0x576f39++) {
        _0x2eed8b[_0x576f39] = _0xb141de[_0x576f39];
      }
      return _0x2eed8b;
    }
    function _0x47915d(_0x4a0ede) {
      if (Array.isArray(_0x4a0ede)) {
        return _0x4a0ede;
      }
    }
    function _0x29f741(_0x17ec83, _0x3ec7b2, _0x1c1a03, _0xbe3f6c, _0x458881, _0x562a73, _0x6ea656) {
      try {
        var _0x1ec8bd = _0x17ec83[_0x562a73](_0x6ea656);
        var _0x19c8f8 = _0x1ec8bd.value;
      } catch (_0x11a19c) {
        _0x1c1a03(_0x11a19c);
        return;
      }
      if (_0x1ec8bd.done) {
        _0x3ec7b2(_0x19c8f8);
      } else {
        Promise.resolve(_0x19c8f8).then(_0xbe3f6c, _0x458881);
      }
    }
    function _0x37ee28(_0x59136f) {
      return function () {
        var _0x39e7c9 = this;
        var _0x3be282 = arguments;
        return new Promise(function (_0x188d36, _0x552687) {
          var _0x4c54fa = _0x59136f.apply(_0x39e7c9, _0x3be282);
          function _0x5751cd(_0x1f0e5b) {
            _0x29f741(_0x4c54fa, _0x188d36, _0x552687, _0x5751cd, _0x352edc, "next", _0x1f0e5b);
          }
          function _0x352edc(_0x3a0b06) {
            _0x29f741(_0x4c54fa, _0x188d36, _0x552687, _0x5751cd, _0x352edc, "throw", _0x3a0b06);
          }
          _0x5751cd(undefined);
        });
      };
    }
    function _0x46fd1c(_0x4873bc, _0x1f36fd) {
      var _0xaf7114 = _0x4873bc == null ? null : typeof Symbol !== "undefined" && _0x4873bc[Symbol.iterator] || _0x4873bc["@@iterator"];
      if (_0xaf7114 == null) {
        return;
      }
      var _0x35339f = [];
      var _0x56482e = true;
      var _0x51bf3b = false;
      var _0x258837;
      var _0x18eb35;
      try {
        for (_0xaf7114 = _0xaf7114.call(_0x4873bc); !(_0x56482e = (_0x258837 = _0xaf7114.next()).done); _0x56482e = true) {
          _0x35339f.push(_0x258837.value);
          if (_0x1f36fd && _0x35339f.length === _0x1f36fd) {
            break;
          }
        }
      } catch (_0x363436) {
        _0x51bf3b = true;
        _0x18eb35 = _0x363436;
      } finally {
        try {
          if (!_0x56482e && _0xaf7114.return != null) {
            _0xaf7114.return();
          }
        } finally {
          if (_0x51bf3b) {
            throw _0x18eb35;
          }
        }
      }
      return _0x35339f;
    }
    function _0x15639c() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x381603(_0x4ab239, _0x14d285) {
      return _0x47915d(_0x4ab239) || _0x46fd1c(_0x4ab239, _0x14d285) || _0x517edb(_0x4ab239, _0x14d285) || _0x15639c();
    }
    function _0x517edb(_0x18a357, _0x5705d8) {
      if (!_0x18a357) {
        return;
      }
      if (typeof _0x18a357 === "string") {
        return _0x560a1d(_0x18a357, _0x5705d8);
      }
      var _0x13f6bf = Object.prototype.toString.call(_0x18a357).slice(8, -1);
      if (_0x13f6bf === "Object" && _0x18a357.constructor) {
        _0x13f6bf = _0x18a357.constructor.name;
      }
      if (_0x13f6bf === "Map" || _0x13f6bf === "Set") {
        return Array.from(_0x13f6bf);
      }
      if (_0x13f6bf === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x13f6bf)) {
        return _0x560a1d(_0x18a357, _0x5705d8);
      }
    }
    function _0x24de90(_0x85ec7d, _0x1cefc7) {
      var _0x297ae2;
      var _0x5de466;
      var _0x29bf26;
      var _0x1ed58e;
      var _0x5fb4c9 = {
        label: 0,
        sent: function () {
          if (_0x29bf26[0] & 1) {
            throw _0x29bf26[1];
          }
          return _0x29bf26[1];
        },
        trys: [],
        ops: []
      };
      _0x1ed58e = {
        next: _0x310821(0),
        throw: _0x310821(1),
        return: _0x310821(2)
      };
      if (typeof Symbol === "function") {
        _0x1ed58e[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1ed58e;
      function _0x310821(_0x32b0ed) {
        return function (_0x36f684) {
          return _0x47ad3a([_0x32b0ed, _0x36f684]);
        };
      }
      function _0x47ad3a(_0x11a18c) {
        if (_0x297ae2) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5fb4c9) {
          try {
            _0x297ae2 = 1;
            if (_0x5de466 && (_0x29bf26 = _0x11a18c[0] & 2 ? _0x5de466.return : _0x11a18c[0] ? _0x5de466.throw || ((_0x29bf26 = _0x5de466.return) && _0x29bf26.call(_0x5de466), 0) : _0x5de466.next) && !(_0x29bf26 = _0x29bf26.call(_0x5de466, _0x11a18c[1])).done) {
              return _0x29bf26;
            }
            _0x5de466 = 0;
            if (_0x29bf26) {
              _0x11a18c = [_0x11a18c[0] & 2, _0x29bf26.value];
            }
            switch (_0x11a18c[0]) {
              case 0:
              case 1:
                _0x29bf26 = _0x11a18c;
                break;
              case 4:
                _0x5fb4c9.label++;
                var _0x463f40 = {
                  value: _0x11a18c[1],
                  done: false
                };
                return _0x463f40;
              case 5:
                _0x5fb4c9.label++;
                _0x5de466 = _0x11a18c[1];
                _0x11a18c = [0];
                continue;
              case 7:
                _0x11a18c = _0x5fb4c9.ops.pop();
                _0x5fb4c9.trys.pop();
                continue;
              default:
                if (!(_0x29bf26 = _0x5fb4c9.trys, _0x29bf26 = _0x29bf26.length > 0 && _0x29bf26[_0x29bf26.length - 1]) && (_0x11a18c[0] === 6 || _0x11a18c[0] === 2)) {
                  _0x5fb4c9 = 0;
                  continue;
                }
                if (_0x11a18c[0] === 3 && (!_0x29bf26 || _0x11a18c[1] > _0x29bf26[0] && _0x11a18c[1] < _0x29bf26[3])) {
                  _0x5fb4c9.label = _0x11a18c[1];
                  break;
                }
                if (_0x11a18c[0] === 6 && _0x5fb4c9.label < _0x29bf26[1]) {
                  _0x5fb4c9.label = _0x29bf26[1];
                  _0x29bf26 = _0x11a18c;
                  break;
                }
                if (_0x29bf26 && _0x5fb4c9.label < _0x29bf26[2]) {
                  _0x5fb4c9.label = _0x29bf26[2];
                  _0x5fb4c9.ops.push(_0x11a18c);
                  break;
                }
                if (_0x29bf26[2]) {
                  _0x5fb4c9.ops.pop();
                }
                _0x5fb4c9.trys.pop();
                continue;
            }
            _0x11a18c = _0x1cefc7.call(_0x85ec7d, _0x5fb4c9);
          } catch (_0x43d2e8) {
            _0x11a18c = [6, _0x43d2e8];
            _0x5de466 = 0;
          } finally {
            _0x297ae2 = _0x29bf26 = 0;
          }
        }
        if (_0x11a18c[0] & 5) {
          throw _0x11a18c[1];
        }
        var _0x46dbe9 = {
          value: _0x11a18c[0] ? _0x11a18c[1] : undefined,
          done: true
        };
        return _0x46dbe9;
      }
    }
    var _0x40efff = false;
    var _0x3bd73b = function () {
      var _0x2ec204 = _0x37ee28(function () {
        return _0x24de90(this, function (_0x351ffd) {
          return [2];
        });
      });
      return function _0x444193() {
        return _0x2ec204.apply(this, arguments);
      };
    }();
    var _0x1d8b4e = new _0x536d04.Thread(function () {}, 0);
    _0x1d8b4e.addHook("preStart", function () {
      this.data.ped = PlayerPedId();
    });
    _0x1d8b4e.addHook("active", function () {
      var _0x18b172 = this.data.ped;
      var _0x188b81 = _0x381603(GetEntityPlayerIsFreeAimingAt(PlayerId()), 2);
      var _0x35671a = _0x188b81[0];
      var _0x315c20 = _0x188b81[1];
      var _0x578d61 = IsPlayerFreeAiming(PlayerId());
      _0x43eb78(_0x578d61);
      var _0x11eb83 = GetEntityType(_0x315c20);
      if (!_0x578d61 || IsPedAPlayer(_0x315c20) || _0x11eb83 === 2 || _0x11eb83 === 1 && IsPedInAnyVehicle(_0x315c20, false)) {
        DisableControlAction(0, 24, true);
        DisableControlAction(0, 47, true);
        DisableControlAction(0, 58, true);
        DisablePlayerFiring(_0x18b172, true);
      }
    });
    _0x10598b.on("inventory:weaponEquipped", function (_0x464d06) {
      if (_0x464d06.weapon === "weapon_sniperrifle2") {
        _0x1d8b4e.start();
      }
    });
    _0x10598b.on("inventory:weaponUnequipped", function () {
      _0x1d8b4e.stop();
      _0x43eb78(false);
    });
    function _0x43eb78(_0x3e6a50) {
      if (!_0x40efff && _0x3e6a50) {
        _0x40efff = true;
        _0x297216.Sync["np-ui"].sendAppEvent("sniper-scope", {
          show: true
        });
      } else if (_0x40efff && !_0x3e6a50) {
        _0x40efff = false;
        _0x297216.Sync["np-ui"].sendAppEvent("sniper-scope", {
          show: false
        });
      }
    }
    ;
    function _0x596ca1(_0x2071d5, _0x265ba7, _0x98191e, _0x1e89f8, _0x2d5bc7, _0x571926, _0x53cc42) {
      try {
        var _0xc3bb17 = _0x2071d5[_0x571926](_0x53cc42);
        var _0x4fb7c1 = _0xc3bb17.value;
      } catch (_0x537718) {
        _0x98191e(_0x537718);
        return;
      }
      if (_0xc3bb17.done) {
        _0x265ba7(_0x4fb7c1);
      } else {
        Promise.resolve(_0x4fb7c1).then(_0x1e89f8, _0x2d5bc7);
      }
    }
    function _0x2f0964(_0x519524) {
      return function () {
        var _0x2499a3 = this;
        var _0x1cd93f = arguments;
        return new Promise(function (_0x4bda2f, _0x454a5a) {
          var _0x21f928 = _0x519524.apply(_0x2499a3, _0x1cd93f);
          function _0x1faf6e(_0xd4c95f) {
            _0x596ca1(_0x21f928, _0x4bda2f, _0x454a5a, _0x1faf6e, _0x7f8efa, "next", _0xd4c95f);
          }
          function _0x7f8efa(_0x1134f6) {
            _0x596ca1(_0x21f928, _0x4bda2f, _0x454a5a, _0x1faf6e, _0x7f8efa, "throw", _0x1134f6);
          }
          _0x1faf6e(undefined);
        });
      };
    }
    function _0x35e005(_0x1f3b21, _0x314549) {
      var _0x84859a;
      var _0x193e57;
      var _0x105bf0;
      var _0x105047;
      var _0x2386dd = {
        label: 0,
        sent: function () {
          if (_0x105bf0[0] & 1) {
            throw _0x105bf0[1];
          }
          return _0x105bf0[1];
        },
        trys: [],
        ops: []
      };
      _0x105047 = {
        next: _0x16bb5d(0),
        throw: _0x16bb5d(1),
        return: _0x16bb5d(2)
      };
      if (typeof Symbol === "function") {
        _0x105047[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x105047;
      function _0x16bb5d(_0x144c34) {
        return function (_0x500cd1) {
          return _0xd894e9([_0x144c34, _0x500cd1]);
        };
      }
      function _0xd894e9(_0x49d32c) {
        if (_0x84859a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2386dd) {
          try {
            _0x84859a = 1;
            if (_0x193e57 && (_0x105bf0 = _0x49d32c[0] & 2 ? _0x193e57.return : _0x49d32c[0] ? _0x193e57.throw || ((_0x105bf0 = _0x193e57.return) && _0x105bf0.call(_0x193e57), 0) : _0x193e57.next) && !(_0x105bf0 = _0x105bf0.call(_0x193e57, _0x49d32c[1])).done) {
              return _0x105bf0;
            }
            _0x193e57 = 0;
            if (_0x105bf0) {
              _0x49d32c = [_0x49d32c[0] & 2, _0x105bf0.value];
            }
            switch (_0x49d32c[0]) {
              case 0:
              case 1:
                _0x105bf0 = _0x49d32c;
                break;
              case 4:
                _0x2386dd.label++;
                var _0x4fc0dd = {
                  value: _0x49d32c[1],
                  done: false
                };
                return _0x4fc0dd;
              case 5:
                _0x2386dd.label++;
                _0x193e57 = _0x49d32c[1];
                _0x49d32c = [0];
                continue;
              case 7:
                _0x49d32c = _0x2386dd.ops.pop();
                _0x2386dd.trys.pop();
                continue;
              default:
                if (!(_0x105bf0 = _0x2386dd.trys, _0x105bf0 = _0x105bf0.length > 0 && _0x105bf0[_0x105bf0.length - 1]) && (_0x49d32c[0] === 6 || _0x49d32c[0] === 2)) {
                  _0x2386dd = 0;
                  continue;
                }
                if (_0x49d32c[0] === 3 && (!_0x105bf0 || _0x49d32c[1] > _0x105bf0[0] && _0x49d32c[1] < _0x105bf0[3])) {
                  _0x2386dd.label = _0x49d32c[1];
                  break;
                }
                if (_0x49d32c[0] === 6 && _0x2386dd.label < _0x105bf0[1]) {
                  _0x2386dd.label = _0x105bf0[1];
                  _0x105bf0 = _0x49d32c;
                  break;
                }
                if (_0x105bf0 && _0x2386dd.label < _0x105bf0[2]) {
                  _0x2386dd.label = _0x105bf0[2];
                  _0x2386dd.ops.push(_0x49d32c);
                  break;
                }
                if (_0x105bf0[2]) {
                  _0x2386dd.ops.pop();
                }
                _0x2386dd.trys.pop();
                continue;
            }
            _0x49d32c = _0x314549.call(_0x1f3b21, _0x2386dd);
          } catch (_0x2a8f81) {
            _0x49d32c = [6, _0x2a8f81];
            _0x193e57 = 0;
          } finally {
            _0x84859a = _0x105bf0 = 0;
          }
        }
        if (_0x49d32c[0] & 5) {
          throw _0x49d32c[1];
        }
        var _0x296efe = {
          value: _0x49d32c[0] ? _0x49d32c[1] : undefined,
          done: true
        };
        return _0x296efe;
      }
    }
    var _0x365ccf = function () {
      var _0x4df1df = _0x2f0964(function () {
        return _0x35e005(this, function (_0x63747f) {
          return [2];
        });
      });
      return function _0xfc2e() {
        return _0x4df1df.apply(this, arguments);
      };
    }();
    _0x10598b.on("np-jobs:hunting:sell", _0x2f0964(function () {
      var _0x34e3c0;
      return _0x35e005(this, function (_0x18d3e1) {
        _0x34e3c0 = _0x297216.Sync.isPed.isPed("cid");
        setTimeout(function () {
          _0x2663ad.OpenInventory([`sell-hunting::${_0x34e3c0}`, `sell-hunting-result::${_0x34e3c0}`], false);
        }, 100);
        return [2];
      });
    }));
    ;
    function _0x38d94e(_0x56ffe7, _0x51599d, _0x540976, _0x2784cb, _0xdf9a9, _0x1aea65, _0x3350f6) {
      try {
        var _0x43aa8f = _0x56ffe7[_0x1aea65](_0x3350f6);
        var _0x1400cf = _0x43aa8f.value;
      } catch (_0x4c9840) {
        _0x540976(_0x4c9840);
        return;
      }
      if (_0x43aa8f.done) {
        _0x51599d(_0x1400cf);
      } else {
        Promise.resolve(_0x1400cf).then(_0x2784cb, _0xdf9a9);
      }
    }
    function _0x1680a5(_0x1e6baa) {
      return function () {
        var _0xe241f = this;
        var _0x466731 = arguments;
        return new Promise(function (_0xf24007, _0x1d6b88) {
          var _0x2ca609 = _0x1e6baa.apply(_0xe241f, _0x466731);
          function _0x238e3b(_0x27e5a3) {
            _0x38d94e(_0x2ca609, _0xf24007, _0x1d6b88, _0x238e3b, _0x8dad9d, "next", _0x27e5a3);
          }
          function _0x8dad9d(_0x526731) {
            _0x38d94e(_0x2ca609, _0xf24007, _0x1d6b88, _0x238e3b, _0x8dad9d, "throw", _0x526731);
          }
          _0x238e3b(undefined);
        });
      };
    }
    function _0x12102f(_0x3774c9, _0x54fcbc) {
      var _0x1fc23a;
      var _0x1271e5;
      var _0x15089b;
      var _0x5510f5;
      var _0x3c3bfb = {
        label: 0,
        sent: function () {
          if (_0x15089b[0] & 1) {
            throw _0x15089b[1];
          }
          return _0x15089b[1];
        },
        trys: [],
        ops: []
      };
      _0x5510f5 = {
        next: _0xae482f(0),
        throw: _0xae482f(1),
        return: _0xae482f(2)
      };
      if (typeof Symbol === "function") {
        _0x5510f5[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5510f5;
      function _0xae482f(_0x514bb9) {
        return function (_0x2c0e18) {
          return _0x3c3e36([_0x514bb9, _0x2c0e18]);
        };
      }
      function _0x3c3e36(_0x28c309) {
        if (_0x1fc23a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3c3bfb) {
          try {
            _0x1fc23a = 1;
            if (_0x1271e5 && (_0x15089b = _0x28c309[0] & 2 ? _0x1271e5.return : _0x28c309[0] ? _0x1271e5.throw || ((_0x15089b = _0x1271e5.return) && _0x15089b.call(_0x1271e5), 0) : _0x1271e5.next) && !(_0x15089b = _0x15089b.call(_0x1271e5, _0x28c309[1])).done) {
              return _0x15089b;
            }
            _0x1271e5 = 0;
            if (_0x15089b) {
              _0x28c309 = [_0x28c309[0] & 2, _0x15089b.value];
            }
            switch (_0x28c309[0]) {
              case 0:
              case 1:
                _0x15089b = _0x28c309;
                break;
              case 4:
                _0x3c3bfb.label++;
                var _0xe6e556 = {
                  value: _0x28c309[1],
                  done: false
                };
                return _0xe6e556;
              case 5:
                _0x3c3bfb.label++;
                _0x1271e5 = _0x28c309[1];
                _0x28c309 = [0];
                continue;
              case 7:
                _0x28c309 = _0x3c3bfb.ops.pop();
                _0x3c3bfb.trys.pop();
                continue;
              default:
                if (!(_0x15089b = _0x3c3bfb.trys, _0x15089b = _0x15089b.length > 0 && _0x15089b[_0x15089b.length - 1]) && (_0x28c309[0] === 6 || _0x28c309[0] === 2)) {
                  _0x3c3bfb = 0;
                  continue;
                }
                if (_0x28c309[0] === 3 && (!_0x15089b || _0x28c309[1] > _0x15089b[0] && _0x28c309[1] < _0x15089b[3])) {
                  _0x3c3bfb.label = _0x28c309[1];
                  break;
                }
                if (_0x28c309[0] === 6 && _0x3c3bfb.label < _0x15089b[1]) {
                  _0x3c3bfb.label = _0x15089b[1];
                  _0x15089b = _0x28c309;
                  break;
                }
                if (_0x15089b && _0x3c3bfb.label < _0x15089b[2]) {
                  _0x3c3bfb.label = _0x15089b[2];
                  _0x3c3bfb.ops.push(_0x28c309);
                  break;
                }
                if (_0x15089b[2]) {
                  _0x3c3bfb.ops.pop();
                }
                _0x3c3bfb.trys.pop();
                continue;
            }
            _0x28c309 = _0x54fcbc.call(_0x3774c9, _0x3c3bfb);
          } catch (_0x3f52a3) {
            _0x28c309 = [6, _0x3f52a3];
            _0x1271e5 = 0;
          } finally {
            _0x1fc23a = _0x15089b = 0;
          }
        }
        if (_0x28c309[0] & 5) {
          throw _0x28c309[1];
        }
        var _0xf89374 = {
          value: _0x28c309[0] ? _0x28c309[1] : undefined,
          done: true
        };
        return _0xf89374;
      }
    }
    var _0x478428 = function () {
      var _0x292fab = _0x1680a5(function () {
        return _0x12102f(this, function (_0x97d82a) {
          switch (_0x97d82a.label) {
            case 0:
              return [4, _0x550c0f()];
            case 1:
              _0x97d82a.sent();
              return [4, _0x295c1d()];
            case 2:
              _0x97d82a.sent();
              return [4, _0x42b9ae()];
            case 3:
              _0x97d82a.sent();
              return [4, _0x1af178()];
            case 4:
              _0x97d82a.sent();
              return [4, _0x11e8c0()];
            case 5:
              _0x97d82a.sent();
              return [4, _0x34fe77()];
            case 6:
              _0x97d82a.sent();
              return [4, _0x3c0fe0()];
            case 7:
              _0x97d82a.sent();
              return [4, _0x348da3()];
            case 8:
              _0x97d82a.sent();
              return [4, _0x3bd73b()];
            case 9:
              _0x97d82a.sent();
              return [4, _0x365ccf()];
            case 10:
              _0x97d82a.sent();
              return [2];
          }
        });
      });
      return function _0x3fa95f() {
        return _0x292fab.apply(this, arguments);
      };
    }();
    ;
    function _0xe4cc85(_0x327c51, _0x4b950a, _0x4d4f54, _0x4db5bd, _0x41f364, _0x2b6a43, _0x354d30) {
      try {
        var _0x3aad47 = _0x327c51[_0x2b6a43](_0x354d30);
        var _0x495c9e = _0x3aad47.value;
      } catch (_0xdda391) {
        _0x4d4f54(_0xdda391);
        return;
      }
      if (_0x3aad47.done) {
        _0x4b950a(_0x495c9e);
      } else {
        Promise.resolve(_0x495c9e).then(_0x4db5bd, _0x41f364);
      }
    }
    function _0x18b1b8(_0x16fa27) {
      return function () {
        var _0x3f42ee = this;
        var _0x5a6335 = arguments;
        return new Promise(function (_0x311d09, _0xbc39dc) {
          var _0x48606d = _0x16fa27.apply(_0x3f42ee, _0x5a6335);
          function _0x130839(_0x42e16f) {
            _0xe4cc85(_0x48606d, _0x311d09, _0xbc39dc, _0x130839, _0x2f8999, "next", _0x42e16f);
          }
          function _0x2f8999(_0x4677d0) {
            _0xe4cc85(_0x48606d, _0x311d09, _0xbc39dc, _0x130839, _0x2f8999, "throw", _0x4677d0);
          }
          _0x130839(undefined);
        });
      };
    }
    function _0x367fa2(_0xf61f0e, _0x4f2dc8) {
      var _0x5c258d;
      var _0x263c3e;
      var _0x5793e2;
      var _0x18abde;
      var _0x4dd4fa = {
        label: 0,
        sent: function () {
          if (_0x5793e2[0] & 1) {
            throw _0x5793e2[1];
          }
          return _0x5793e2[1];
        },
        trys: [],
        ops: []
      };
      _0x18abde = {
        next: _0x1927de(0),
        throw: _0x1927de(1),
        return: _0x1927de(2)
      };
      if (typeof Symbol === "function") {
        _0x18abde[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x18abde;
      function _0x1927de(_0x326392) {
        return function (_0x281510) {
          return _0x303275([_0x326392, _0x281510]);
        };
      }
      function _0x303275(_0x40ffbd) {
        if (_0x5c258d) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4dd4fa) {
          try {
            _0x5c258d = 1;
            if (_0x263c3e && (_0x5793e2 = _0x40ffbd[0] & 2 ? _0x263c3e.return : _0x40ffbd[0] ? _0x263c3e.throw || ((_0x5793e2 = _0x263c3e.return) && _0x5793e2.call(_0x263c3e), 0) : _0x263c3e.next) && !(_0x5793e2 = _0x5793e2.call(_0x263c3e, _0x40ffbd[1])).done) {
              return _0x5793e2;
            }
            _0x263c3e = 0;
            if (_0x5793e2) {
              _0x40ffbd = [_0x40ffbd[0] & 2, _0x5793e2.value];
            }
            switch (_0x40ffbd[0]) {
              case 0:
              case 1:
                _0x5793e2 = _0x40ffbd;
                break;
              case 4:
                _0x4dd4fa.label++;
                var _0x4d5b41 = {
                  value: _0x40ffbd[1],
                  done: false
                };
                return _0x4d5b41;
              case 5:
                _0x4dd4fa.label++;
                _0x263c3e = _0x40ffbd[1];
                _0x40ffbd = [0];
                continue;
              case 7:
                _0x40ffbd = _0x4dd4fa.ops.pop();
                _0x4dd4fa.trys.pop();
                continue;
              default:
                if (!(_0x5793e2 = _0x4dd4fa.trys, _0x5793e2 = _0x5793e2.length > 0 && _0x5793e2[_0x5793e2.length - 1]) && (_0x40ffbd[0] === 6 || _0x40ffbd[0] === 2)) {
                  _0x4dd4fa = 0;
                  continue;
                }
                if (_0x40ffbd[0] === 3 && (!_0x5793e2 || _0x40ffbd[1] > _0x5793e2[0] && _0x40ffbd[1] < _0x5793e2[3])) {
                  _0x4dd4fa.label = _0x40ffbd[1];
                  break;
                }
                if (_0x40ffbd[0] === 6 && _0x4dd4fa.label < _0x5793e2[1]) {
                  _0x4dd4fa.label = _0x5793e2[1];
                  _0x5793e2 = _0x40ffbd;
                  break;
                }
                if (_0x5793e2 && _0x4dd4fa.label < _0x5793e2[2]) {
                  _0x4dd4fa.label = _0x5793e2[2];
                  _0x4dd4fa.ops.push(_0x40ffbd);
                  break;
                }
                if (_0x5793e2[2]) {
                  _0x4dd4fa.ops.pop();
                }
                _0x4dd4fa.trys.pop();
                continue;
            }
            _0x40ffbd = _0x4f2dc8.call(_0xf61f0e, _0x4dd4fa);
          } catch (_0x3c5ff6) {
            _0x40ffbd = [6, _0x3c5ff6];
            _0x263c3e = 0;
          } finally {
            _0x5c258d = _0x5793e2 = 0;
          }
        }
        if (_0x40ffbd[0] & 5) {
          throw _0x40ffbd[1];
        }
        var _0x5db92b = {
          value: _0x40ffbd[0] ? _0x40ffbd[1] : undefined,
          done: true
        };
        return _0x5db92b;
      }
    }
    function _0x9f4ea() {
      return _0x5e67a5.apply(this, arguments);
    }
    function _0x5e67a5() {
      _0x5e67a5 = _0x18b1b8(function () {
        return _0x367fa2(this, function (_0x3dc67e) {
          switch (_0x3dc67e.label) {
            case 0:
              return [4, _0x2f8c79()];
            case 1:
              _0x3dc67e.sent();
              return [4, _0x210b49()];
            case 2:
              _0x3dc67e.sent();
              return [4, _0x3d7482()];
            case 3:
              _0x3dc67e.sent();
              return [4, _0x46cbee()];
            case 4:
              _0x3dc67e.sent();
              return [4, _0x469271()];
            case 5:
              _0x3dc67e.sent();
              return [4, _0x4a898()];
            case 6:
              _0x3dc67e.sent();
              return [4, _0x478428()];
            case 7:
              _0x3dc67e.sent();
              return [2];
          }
        });
      });
      return _0x5e67a5.apply(this, arguments);
    }
    ;
    function _0x41ffee(_0x11f5e5, _0x5a47d5) {
      if (_0x5a47d5 == null || _0x5a47d5 > _0x11f5e5.length) {
        _0x5a47d5 = _0x11f5e5.length;
      }
      for (var _0x350bb9 = 0, _0x4486eb = new Array(_0x5a47d5); _0x350bb9 < _0x5a47d5; _0x350bb9++) {
        _0x4486eb[_0x350bb9] = _0x11f5e5[_0x350bb9];
      }
      return _0x4486eb;
    }
    function _0x5b3964(_0x61cca9) {
      if (Array.isArray(_0x61cca9)) {
        return _0x61cca9;
      }
    }
    function _0x4e1b45(_0x93389a) {
      if (_0x93389a === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x93389a;
    }
    function _0x21f9b2(_0x1ef782, _0xba4686) {
      if (!(_0x1ef782 instanceof _0xba4686)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x3947b8(_0x332f8f, _0x2e2cd5) {
      for (var _0x1e3f29 = 0; _0x1e3f29 < _0x2e2cd5.length; _0x1e3f29++) {
        var _0x432db3 = _0x2e2cd5[_0x1e3f29];
        _0x432db3.enumerable = _0x432db3.enumerable || false;
        _0x432db3.configurable = true;
        if ("value" in _0x432db3) {
          _0x432db3.writable = true;
        }
        Object.defineProperty(_0x332f8f, _0x432db3.key, _0x432db3);
      }
    }
    function _0x492d45(_0x58ac56, _0x28bc34, _0x2a7307) {
      if (_0x28bc34) {
        _0x3947b8(_0x58ac56.prototype, _0x28bc34);
      }
      if (_0x2a7307) {
        _0x3947b8(_0x58ac56, _0x2a7307);
      }
      return _0x58ac56;
    }
    function _0x2a8dae(_0xf9e3d7, _0x19ea2c, _0x2b4571) {
      if (_0x19ea2c in _0xf9e3d7) {
        var _0xcef242 = {
          value: _0x2b4571,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0xf9e3d7, _0x19ea2c, _0xcef242);
      } else {
        _0xf9e3d7[_0x19ea2c] = _0x2b4571;
      }
      return _0xf9e3d7;
    }
    function _0x2ce588(_0x2867d8) {
      _0x2ce588 = Object.setPrototypeOf ? Object.getPrototypeOf : function _0xbc43bd(_0x4d819b) {
        return _0x4d819b.__proto__ || Object.getPrototypeOf(_0x4d819b);
      };
      return _0x2ce588(_0x2867d8);
    }
    function _0x2e1e9e(_0x46c47e, _0x4871a5) {
      if (typeof _0x4871a5 !== "function" && _0x4871a5 !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x46c47e.prototype = Object.create(_0x4871a5 && _0x4871a5.prototype, {
        constructor: {
          value: _0x46c47e,
          writable: true,
          configurable: true
        }
      });
      if (_0x4871a5) {
        _0x1c5a1b(_0x46c47e, _0x4871a5);
      }
    }
    function _0xf9d9b8(_0x5e7962, _0x81e870) {
      var _0x5844ae = _0x5e7962 == null ? null : typeof Symbol !== "undefined" && _0x5e7962[Symbol.iterator] || _0x5e7962["@@iterator"];
      if (_0x5844ae == null) {
        return;
      }
      var _0x244f45 = [];
      var _0xc394aa = true;
      var _0x1dced5 = false;
      var _0x17987c;
      var _0x25ec6d;
      try {
        for (_0x5844ae = _0x5844ae.call(_0x5e7962); !(_0xc394aa = (_0x17987c = _0x5844ae.next()).done); _0xc394aa = true) {
          _0x244f45.push(_0x17987c.value);
          if (_0x81e870 && _0x244f45.length === _0x81e870) {
            break;
          }
        }
      } catch (_0x2e223c) {
        _0x1dced5 = true;
        _0x25ec6d = _0x2e223c;
      } finally {
        try {
          if (!_0xc394aa && _0x5844ae.return != null) {
            _0x5844ae.return();
          }
        } finally {
          if (_0x1dced5) {
            throw _0x25ec6d;
          }
        }
      }
      return _0x244f45;
    }
    function _0x26657b() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x484259(_0x152013, _0x16095d) {
      if (_0x16095d && (_0x5ab4d3(_0x16095d) === "object" || typeof _0x16095d === "function")) {
        return _0x16095d;
      }
      return _0x4e1b45(_0x152013);
    }
    function _0x1c5a1b(_0x2dd71a, _0x14f5a5) {
      _0x1c5a1b = Object.setPrototypeOf || function _0x3b3641(_0x955c12, _0x112900) {
        _0x955c12.__proto__ = _0x112900;
        return _0x955c12;
      };
      return _0x1c5a1b(_0x2dd71a, _0x14f5a5);
    }
    function _0x1055ac(_0x24235c, _0x11ea8f) {
      return _0x5b3964(_0x24235c) || _0xf9d9b8(_0x24235c, _0x11ea8f) || _0x54b923(_0x24235c, _0x11ea8f) || _0x26657b();
    }
    function _0x5ab4d3(_0x1f4398) {
      '@swc/helpers - typeof';

      if (_0x1f4398 && typeof Symbol !== "undefined" && _0x1f4398.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x1f4398;
      }
    }
    function _0x54b923(_0x536597, _0x4c28f4) {
      if (!_0x536597) {
        return;
      }
      if (typeof _0x536597 === "string") {
        return _0x41ffee(_0x536597, _0x4c28f4);
      }
      var _0x35e679 = Object.prototype.toString.call(_0x536597).slice(8, -1);
      if (_0x35e679 === "Object" && _0x536597.constructor) {
        _0x35e679 = _0x536597.constructor.name;
      }
      if (_0x35e679 === "Map" || _0x35e679 === "Set") {
        return Array.from(_0x35e679);
      }
      if (_0x35e679 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x35e679)) {
        return _0x41ffee(_0x536597, _0x4c28f4);
      }
    }
    function _0x4802ff() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x31a80f) {
        return false;
      }
    }
    function _0x288934(_0x4af726) {
      var _0x315eec = _0x4802ff();
      return function _0xc289a2() {
        var _0x545dab = _0x2ce588(_0x4af726);
        var _0x490b71;
        if (_0x315eec) {
          var _0x5e593d = _0x2ce588(this).constructor;
          _0x490b71 = Reflect.construct(_0x545dab, arguments, _0x5e593d);
        } else {
          _0x490b71 = _0x545dab.apply(this, arguments);
        }
        return _0x484259(this, _0x490b71);
      };
    }
    var _0x37efb9 = function (_0x27fa54) {
      'use strict';

      _0x2e1e9e(_0x1d3f97, _0x27fa54);
      var _0x3f3feb = _0x288934(_0x1d3f97);
      function _0x1d3f97() {
        _0x21f9b2(this, _0x1d3f97);
        var _0x3a3353;
        _0x3a3353 = _0x3f3feb.call(this);
        _0x2a8dae(_0x4e1b45(_0x3a3353), "thread", undefined);
        _0x2a8dae(_0x4e1b45(_0x3a3353), "contexts", undefined);
        _0x2a8dae(_0x4e1b45(_0x3a3353), "keys", undefined);
        _0x3a3353.keys = new Set();
        _0x3a3353.contexts = new Map();
        return _0x3a3353;
      }
      _0x492d45(_0x1d3f97, [{
        key: "refresh",
        value: function _0x2f5efd() {
          var _0x301f76 = this;
          this.keys.forEach(function (_0x7e6b58) {
            var _0x5a90f7 = true;
            var _0x45eb1b = false;
            var _0x4b4e11 = undefined;
            try {
              for (var _0x23fc0a = _0x301f76.contexts[Symbol.iterator](), _0x28f0e0; !(_0x5a90f7 = (_0x28f0e0 = _0x23fc0a.next()).done); _0x5a90f7 = true) {
                var _0x4c867a = _0x1055ac(_0x28f0e0.value, 2);
                var _0x22b9e0 = _0x4c867a[0];
                var _0x3b1b72 = _0x4c867a[1];
                if (_0x3b1b72.has(_0x7e6b58)) {
                  return;
                }
              }
            } catch (_0x5be714) {
              _0x45eb1b = true;
              _0x4b4e11 = _0x5be714;
            } finally {
              try {
                if (!_0x5a90f7 && _0x23fc0a.return != null) {
                  _0x23fc0a.return();
                }
              } finally {
                if (_0x45eb1b) {
                  throw _0x4b4e11;
                }
              }
            }
            _0x301f76.keys.delete(_0x7e6b58);
          });
          if (this.thread && this.keys.size === 0) {
            this.stop();
          }
        }
      }, {
        key: "hasKey",
        value: function _0x3f4389(_0x309639, _0x23fd5f) {
          var _0x3ec927;
          if ((_0x3ec927 = this.contexts.get(_0x309639)) === null || _0x3ec927 === undefined) {
            return undefined;
          } else {
            return _0x3ec927.has(_0x23fd5f);
          }
        }
      }, {
        key: "addKey",
        value: function _0x32c579(_0x3ab106, _0x4c291e) {
          if (!this.contexts.has(_0x3ab106)) {
            this.contexts.set(_0x3ab106, new Set());
          }
          this.keys.add(_0x4c291e);
          this.contexts.get(_0x3ab106).add(_0x4c291e);
          if (!this.thread) {
            this.start();
          }
        }
      }, {
        key: "removeKey",
        value: function _0x168127(_0x2bf11e, _0x341996) {
          if (!this.contexts.has(_0x2bf11e)) {
            this.contexts.set(_0x2bf11e, new Set());
          }
          var _0x503625 = this.contexts.get(_0x2bf11e);
          if (!_0x503625.has(_0x341996)) {
            return;
          }
          _0x503625.delete(_0x341996);
          this.refresh();
        }
      }, {
        key: "start",
        value: function _0x413a43() {
          var _0x35cade = this;
          if (this.thread) {
            return;
          }
          this.thread = setTick(function () {
            if (_0x35cade.keys.size === 0) {
              return _0x35cade.stop();
            }
            _0x35cade.keys.forEach(function (_0x14cdd8) {
              if (IsControlJustReleased(0, _0x14cdd8)) {
                _0x35cade.emit("IsControlJustReleased", _0x14cdd8);
              }
            });
          });
        }
      }, {
        key: "stop",
        value: function _0x959720() {
          if (!this.thread) {
            return;
          }
          var _0x5a12ea = this.thread;
          this.thread = null;
          clearTick(_0x5a12ea);
          this.removeAllListeners();
        }
      }]);
      return _0x1d3f97;
    }(_0x1ba36b.EventEmitter);
    ;
    function _0x3c4316(_0x30df45, _0x35ad6d, _0x243b28, _0x1fe8e5, _0x410bb4, _0x40cd68, _0x288310) {
      try {
        var _0x68197c = _0x30df45[_0x40cd68](_0x288310);
        var _0x4eab98 = _0x68197c.value;
      } catch (_0x598f18) {
        _0x243b28(_0x598f18);
        return;
      }
      if (_0x68197c.done) {
        _0x35ad6d(_0x4eab98);
      } else {
        Promise.resolve(_0x4eab98).then(_0x1fe8e5, _0x410bb4);
      }
    }
    function _0x48b1e5(_0x14f07d) {
      return function () {
        var _0x35c2ee = this;
        var _0x3a868b = arguments;
        return new Promise(function (_0x315869, _0x1188df) {
          var _0xbf79f1 = _0x14f07d.apply(_0x35c2ee, _0x3a868b);
          function _0x34a10a(_0xd8c2f8) {
            _0x3c4316(_0xbf79f1, _0x315869, _0x1188df, _0x34a10a, _0x26ae01, "next", _0xd8c2f8);
          }
          function _0x26ae01(_0x26af5d) {
            _0x3c4316(_0xbf79f1, _0x315869, _0x1188df, _0x34a10a, _0x26ae01, "throw", _0x26af5d);
          }
          _0x34a10a(undefined);
        });
      };
    }
    function _0x46a472(_0x555139, _0x33a9df) {
      var _0x344a6c;
      var _0x3edf75;
      var _0x449d69;
      var _0x4c4876;
      var _0x3d50c4 = {
        label: 0,
        sent: function () {
          if (_0x449d69[0] & 1) {
            throw _0x449d69[1];
          }
          return _0x449d69[1];
        },
        trys: [],
        ops: []
      };
      _0x4c4876 = {
        next: _0x42da1d(0),
        throw: _0x42da1d(1),
        return: _0x42da1d(2)
      };
      if (typeof Symbol === "function") {
        _0x4c4876[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4c4876;
      function _0x42da1d(_0x3934ce) {
        return function (_0x3470db) {
          return _0x4cc435([_0x3934ce, _0x3470db]);
        };
      }
      function _0x4cc435(_0x5881f3) {
        if (_0x344a6c) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3d50c4) {
          try {
            _0x344a6c = 1;
            if (_0x3edf75 && (_0x449d69 = _0x5881f3[0] & 2 ? _0x3edf75.return : _0x5881f3[0] ? _0x3edf75.throw || ((_0x449d69 = _0x3edf75.return) && _0x449d69.call(_0x3edf75), 0) : _0x3edf75.next) && !(_0x449d69 = _0x449d69.call(_0x3edf75, _0x5881f3[1])).done) {
              return _0x449d69;
            }
            _0x3edf75 = 0;
            if (_0x449d69) {
              _0x5881f3 = [_0x5881f3[0] & 2, _0x449d69.value];
            }
            switch (_0x5881f3[0]) {
              case 0:
              case 1:
                _0x449d69 = _0x5881f3;
                break;
              case 4:
                _0x3d50c4.label++;
                var _0x4d5bc7 = {
                  value: _0x5881f3[1],
                  done: false
                };
                return _0x4d5bc7;
              case 5:
                _0x3d50c4.label++;
                _0x3edf75 = _0x5881f3[1];
                _0x5881f3 = [0];
                continue;
              case 7:
                _0x5881f3 = _0x3d50c4.ops.pop();
                _0x3d50c4.trys.pop();
                continue;
              default:
                if (!(_0x449d69 = _0x3d50c4.trys, _0x449d69 = _0x449d69.length > 0 && _0x449d69[_0x449d69.length - 1]) && (_0x5881f3[0] === 6 || _0x5881f3[0] === 2)) {
                  _0x3d50c4 = 0;
                  continue;
                }
                if (_0x5881f3[0] === 3 && (!_0x449d69 || _0x5881f3[1] > _0x449d69[0] && _0x5881f3[1] < _0x449d69[3])) {
                  _0x3d50c4.label = _0x5881f3[1];
                  break;
                }
                if (_0x5881f3[0] === 6 && _0x3d50c4.label < _0x449d69[1]) {
                  _0x3d50c4.label = _0x449d69[1];
                  _0x449d69 = _0x5881f3;
                  break;
                }
                if (_0x449d69 && _0x3d50c4.label < _0x449d69[2]) {
                  _0x3d50c4.label = _0x449d69[2];
                  _0x3d50c4.ops.push(_0x5881f3);
                  break;
                }
                if (_0x449d69[2]) {
                  _0x3d50c4.ops.pop();
                }
                _0x3d50c4.trys.pop();
                continue;
            }
            _0x5881f3 = _0x33a9df.call(_0x555139, _0x3d50c4);
          } catch (_0x5497ef) {
            _0x5881f3 = [6, _0x5497ef];
            _0x3edf75 = 0;
          } finally {
            _0x344a6c = _0x449d69 = 0;
          }
        }
        if (_0x5881f3[0] & 5) {
          throw _0x5881f3[1];
        }
        var _0x11be6d = {
          value: _0x5881f3[0] ? _0x5881f3[1] : undefined,
          done: true
        };
        return _0x11be6d;
      }
    }
    var _0x585913 = new _0x37efb9();
    function _0x56332c() {
      return _0x319bed.apply(this, arguments);
    }
    function _0x319bed() {
      _0x319bed = _0x48b1e5(function () {
        return _0x46a472(this, function (_0x37cfd6) {
          switch (_0x37cfd6.label) {
            case 0:
              return [4, _0x13f43e()];
            case 1:
              _0x37cfd6.sent();
              return [4, _0x9f4ea()];
            case 2:
              _0x37cfd6.sent();
              globalThis.exports.focusmanager.RegisterFocusHandler(function (_0x5e93ab, _0x53e3be) {
                SetNuiFocus(_0x5e93ab, _0x53e3be);
              });
              return [2];
          }
        });
      });
      return _0x319bed.apply(this, arguments);
    }
    _0x56332c();
  })();
})();