(() => {
  var _0x2ee923 = {
    318: (_0x2c9ffc, _0x510617, _0x30ffc1) => {
      'use strict';

      var _0x54945d = _0x30ffc1(13);
      var _0x1af939 = _0x30ffc1(480);
      function _0x22fe0d(_0x4567e7) {
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
          _0x22fe0d = function _0x7921cf(_0x4541cd) {
            return typeof _0x4541cd;
          };
        } else {
          _0x22fe0d = function _0x180dce(_0x59e528) {
            if (_0x59e528 && typeof Symbol === "function" && _0x59e528.constructor === Symbol && _0x59e528 !== Symbol.prototype) {
              return "symbol";
            } else {
              return typeof _0x59e528;
            }
          };
        }
        return _0x22fe0d(_0x4567e7);
      }
      function _0x59d433(_0x32f2d5, _0x5f28ea) {
        if (!(_0x32f2d5 instanceof _0x5f28ea)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      var _0x28b69c = _0x30ffc1(873);
      var _0x194a42 = _0x28b69c.codes;
      var _0x34d159 = _0x194a42.ERR_AMBIGUOUS_ARGUMENT;
      var _0x44013c = _0x194a42.ERR_INVALID_ARG_TYPE;
      var _0x21544e = _0x194a42.ERR_INVALID_ARG_VALUE;
      var _0x4b0204 = _0x194a42.ERR_INVALID_RETURN_VALUE;
      var _0x2c7e77 = _0x194a42.ERR_MISSING_ARGS;
      var _0x350934 = _0x30ffc1(342);
      var _0x1fc17c = _0x30ffc1(385);
      var _0x302d80 = _0x1fc17c.inspect;
      var _0x3719f2 = _0x30ffc1(385).types;
      var _0xf4dc5e = _0x3719f2.isPromise;
      var _0x2ff8d9 = _0x3719f2.isRegExp;
      var _0x283295 = Object.assign ? Object.assign : _0x30ffc1(93).assign;
      var _0x2d20da = Object.is ? Object.is : _0x30ffc1(338);
      var _0x48314f = new Map();
      var _0x349701;
      var _0x328982;
      var _0x1426b3;
      var _0x19fc21;
      var _0x5681a2;
      function _0xfd46c0() {
        var _0x3b6e54 = _0x30ffc1(559);
        _0x349701 = _0x3b6e54.isDeepEqual;
        _0x328982 = _0x3b6e54.isDeepStrictEqual;
      }
      var _0x3bef4b = /[\x00-\x08\x0b\x0c\x0e-\x1f]/g;
      var _0x53d6af = null && ["\\u0000", "\\u0001", "\\u0002", "\\u0003", "\\u0004", "\\u0005", "\\u0006", "\\u0007", "\\b", "", "", "\\u000b", "\\f", "", "\\u000e", "\\u000f", "\\u0010", "\\u0011", "\\u0012", "\\u0013", "\\u0014", "\\u0015", "\\u0016", "\\u0017", "\\u0018", "\\u0019", "\\u001a", "\\u001b", "\\u001c", "\\u001d", "\\u001e", "\\u001f"];
      var _0x23ad8c = function _0x6ce988(_0x2832df) {
        return _0x53d6af[_0x2832df.charCodeAt(0)];
      };
      var _0x22e5ba = false;
      var _0x392f68 = _0x2c9ffc.exports = _0x3302d7;
      var _0x29bf36 = {};
      function _0x41991c(_0xdbe035) {
        if (_0xdbe035.message instanceof Error) {
          throw _0xdbe035.message;
        }
        throw new _0x350934(_0xdbe035);
      }
      function _0x58b2aa(_0x9ca91f, _0x254158, _0x449d91, _0x3bd657, _0x5ae268) {
        var _0x1abab6 = arguments.length;
        var _0x390b5e;
        if (_0x1abab6 === 0) {
          _0x390b5e = "Failed";
        } else if (_0x1abab6 === 1) {
          _0x449d91 = _0x9ca91f;
          _0x9ca91f = undefined;
        } else {
          if (_0x22e5ba === false) {
            _0x22e5ba = true;
            var _0x4774f1 = _0x54945d.emitWarning ? _0x54945d.emitWarning : _0x1af939.warn.bind(_0x1af939);
            _0x4774f1("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
          }
          if (_0x1abab6 === 2) {
            _0x3bd657 = "!=";
          }
        }
        if (_0x449d91 instanceof Error) {
          throw _0x449d91;
        }
        var _0x49ca2a = {
          actual: _0x9ca91f,
          expected: _0x254158,
          operator: _0x3bd657 === undefined ? "fail" : _0x3bd657,
          stackStartFn: _0x5ae268 || _0x58b2aa
        };
        var _0x245884 = _0x49ca2a;
        if (_0x449d91 !== undefined) {
          _0x245884.message = _0x449d91;
        }
        var _0x251e9b = new _0x350934(_0x245884);
        if (_0x390b5e) {
          _0x251e9b.message = _0x390b5e;
          _0x251e9b.generatedMessage = true;
        }
        throw _0x251e9b;
      }
      _0x392f68.fail = _0x58b2aa;
      _0x392f68.AssertionError = _0x350934;
      function _0x2094c4(_0x2683e8, _0xc96ad6, _0x55593b, _0x1b288e) {
        if (!_0x55593b) {
          var _0x118ec9 = false;
          if (_0xc96ad6 === 0) {
            _0x118ec9 = true;
            _0x1b288e = "No value argument passed to `assert.ok()`";
          } else if (_0x1b288e instanceof Error) {
            throw _0x1b288e;
          }
          var _0x5d63df = {
            actual: _0x55593b,
            expected: true,
            message: _0x1b288e,
            operator: "==",
            stackStartFn: _0x2683e8
          };
          var _0x3e2aff = new _0x350934(_0x5d63df);
          _0x3e2aff.generatedMessage = _0x118ec9;
          throw _0x3e2aff;
        }
      }
      function _0x3302d7() {
        for (var _0x148317 = arguments.length, _0x4042b5 = new Array(_0x148317), _0x16c611 = 0; _0x16c611 < _0x148317; _0x16c611++) {
          _0x4042b5[_0x16c611] = arguments[_0x16c611];
        }
        _0x2094c4.apply(undefined, [_0x3302d7, _0x4042b5.length].concat(_0x4042b5));
      }
      _0x392f68.ok = _0x3302d7;
      _0x392f68.equal = function _0x5a820e(_0x8698f4, _0x1600ff, _0x157377) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0x8698f4 != _0x1600ff) {
          var _0x4d1bda = {
            actual: _0x8698f4,
            expected: _0x1600ff,
            message: _0x157377,
            operator: "==",
            stackStartFn: _0x5a820e
          };
          _0x41991c(_0x4d1bda);
        }
      };
      _0x392f68.notEqual = function _0x56e193(_0xb888f9, _0x1ac76e, _0x4f2f39) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0xb888f9 == _0x1ac76e) {
          var _0x212359 = {
            actual: _0xb888f9,
            expected: _0x1ac76e,
            message: _0x4f2f39,
            operator: "!=",
            stackStartFn: _0x56e193
          };
          _0x41991c(_0x212359);
        }
      };
      _0x392f68.deepEqual = function _0x2d694d(_0x322d73, _0x2fc0fa, _0x3623fc) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0x349701 === undefined) {
          _0xfd46c0();
        }
        if (!_0x349701(_0x322d73, _0x2fc0fa)) {
          var _0x464476 = {
            actual: _0x322d73,
            expected: _0x2fc0fa,
            message: _0x3623fc,
            operator: "deepEqual",
            stackStartFn: _0x2d694d
          };
          _0x41991c(_0x464476);
        }
      };
      _0x392f68.notDeepEqual = function _0x4ab79c(_0x2fa4a3, _0x4b3c7e, _0x34666d) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0x349701 === undefined) {
          _0xfd46c0();
        }
        if (_0x349701(_0x2fa4a3, _0x4b3c7e)) {
          var _0x37b68d = {
            actual: _0x2fa4a3,
            expected: _0x4b3c7e,
            message: _0x34666d,
            operator: "notDeepEqual",
            stackStartFn: _0x4ab79c
          };
          _0x41991c(_0x37b68d);
        }
      };
      _0x392f68.deepStrictEqual = function _0x1b2713(_0x2db46e, _0xbacdc, _0x1694ca) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0x349701 === undefined) {
          _0xfd46c0();
        }
        if (!_0x328982(_0x2db46e, _0xbacdc)) {
          var _0x5e0bc4 = {
            actual: _0x2db46e,
            expected: _0xbacdc,
            message: _0x1694ca,
            operator: "deepStrictEqual",
            stackStartFn: _0x1b2713
          };
          _0x41991c(_0x5e0bc4);
        }
      };
      _0x392f68.notDeepStrictEqual = _0x10d219;
      function _0x10d219(_0x525807, _0x3deb52, _0x4ab443) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0x349701 === undefined) {
          _0xfd46c0();
        }
        if (_0x328982(_0x525807, _0x3deb52)) {
          var _0x405480 = {
            actual: _0x525807,
            expected: _0x3deb52,
            message: _0x4ab443,
            operator: "notDeepStrictEqual",
            stackStartFn: _0x10d219
          };
          _0x41991c(_0x405480);
        }
      }
      _0x392f68.strictEqual = function _0x4435ef(_0x12d7b0, _0x48e3dc, _0x1fc8ab) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (!_0x2d20da(_0x12d7b0, _0x48e3dc)) {
          var _0x2e0f0e = {
            actual: _0x12d7b0,
            expected: _0x48e3dc,
            message: _0x1fc8ab,
            operator: "strictEqual",
            stackStartFn: _0x4435ef
          };
          _0x41991c(_0x2e0f0e);
        }
      };
      _0x392f68.notStrictEqual = function _0x59e14f(_0x57d1a3, _0x3c5f57, _0x2ba01d) {
        if (arguments.length < 2) {
          throw new _0x2c7e77("actual", "expected");
        }
        if (_0x2d20da(_0x57d1a3, _0x3c5f57)) {
          var _0x52d215 = {
            actual: _0x57d1a3,
            expected: _0x3c5f57,
            message: _0x2ba01d,
            operator: "notStrictEqual",
            stackStartFn: _0x59e14f
          };
          _0x41991c(_0x52d215);
        }
      };
      var _0x4548ec = function _0x14ff83(_0xef95a, _0x5f16dc, _0x350233) {
        var _0x5b4bc4 = this;
        _0x59d433(this, _0x14ff83);
        _0x5f16dc.forEach(function (_0x213bbc) {
          if (_0x213bbc in _0xef95a) {
            if (_0x350233 !== undefined && typeof _0x350233[_0x213bbc] === "string" && _0x2ff8d9(_0xef95a[_0x213bbc]) && _0xef95a[_0x213bbc].test(_0x350233[_0x213bbc])) {
              _0x5b4bc4[_0x213bbc] = _0x350233[_0x213bbc];
            } else {
              _0x5b4bc4[_0x213bbc] = _0xef95a[_0x213bbc];
            }
          }
        });
      };
      function _0x3d51e0(_0x5c90da, _0x5d0eb1, _0x47a932, _0x445374, _0x145082, _0x4aebe4) {
        if (!(_0x47a932 in _0x5c90da) || !_0x328982(_0x5c90da[_0x47a932], _0x5d0eb1[_0x47a932])) {
          if (!_0x445374) {
            var _0x380a71 = new _0x4548ec(_0x5c90da, _0x145082);
            var _0xdcdec9 = new _0x4548ec(_0x5d0eb1, _0x145082, _0x5c90da);
            var _0x24e92d = {
              actual: _0x380a71,
              expected: _0xdcdec9,
              operator: "deepStrictEqual",
              stackStartFn: _0x4aebe4
            };
            var _0x5b0df3 = new _0x350934(_0x24e92d);
            _0x5b0df3.actual = _0x5c90da;
            _0x5b0df3.expected = _0x5d0eb1;
            _0x5b0df3.operator = _0x4aebe4.name;
            throw _0x5b0df3;
          }
          var _0x51aee6 = {
            actual: _0x5c90da,
            expected: _0x5d0eb1,
            message: _0x445374,
            operator: _0x4aebe4.name,
            stackStartFn: _0x4aebe4
          };
          _0x41991c(_0x51aee6);
        }
      }
      function _0x245601(_0x40f169, _0x516d14, _0x4a2ead, _0x25dc30) {
        if (typeof _0x516d14 !== "function") {
          if (_0x2ff8d9(_0x516d14)) {
            return _0x516d14.test(_0x40f169);
          }
          if (arguments.length === 2) {
            throw new _0x44013c("expected", ["Function", "RegExp"], _0x516d14);
          }
          if (_0x22fe0d(_0x40f169) !== "object" || _0x40f169 === null) {
            var _0x5b9020 = {
              actual: _0x40f169,
              expected: _0x516d14,
              message: _0x4a2ead,
              operator: "deepStrictEqual",
              stackStartFn: _0x25dc30
            };
            var _0x3816af = new _0x350934(_0x5b9020);
            _0x3816af.operator = _0x25dc30.name;
            throw _0x3816af;
          }
          var _0x34c720 = Object.keys(_0x516d14);
          if (_0x516d14 instanceof Error) {
            _0x34c720.push("name", "message");
          } else if (_0x34c720.length === 0) {
            throw new _0x21544e("error", _0x516d14, "may not be an empty object");
          }
          if (_0x349701 === undefined) {
            _0xfd46c0();
          }
          _0x34c720.forEach(function (_0x3189ee) {
            if (typeof _0x40f169[_0x3189ee] === "string" && _0x2ff8d9(_0x516d14[_0x3189ee]) && _0x516d14[_0x3189ee].test(_0x40f169[_0x3189ee])) {
              return;
            }
            _0x3d51e0(_0x40f169, _0x516d14, _0x3189ee, _0x4a2ead, _0x34c720, _0x25dc30);
          });
          return true;
        }
        if (_0x516d14.prototype !== undefined && _0x40f169 instanceof _0x516d14) {
          return true;
        }
        if (Error.isPrototypeOf(_0x516d14)) {
          return false;
        }
        return _0x516d14.call({}, _0x40f169) === true;
      }
      function _0x1b0285(_0xe3f048) {
        if (typeof _0xe3f048 !== "function") {
          throw new _0x44013c("fn", "Function", _0xe3f048);
        }
        try {
          _0xe3f048();
        } catch (_0x44e7ef) {
          return _0x44e7ef;
        }
        return _0x29bf36;
      }
      function _0x7b44dc(_0x449ec9) {
        return _0xf4dc5e(_0x449ec9) || _0x449ec9 !== null && _0x22fe0d(_0x449ec9) === "object" && typeof _0x449ec9.then === "function" && typeof _0x449ec9.catch === "function";
      }
      function _0x161d6e(_0xa8f314) {
        return Promise.resolve().then(function () {
          var _0x1cfb09;
          if (typeof _0xa8f314 === "function") {
            _0x1cfb09 = _0xa8f314();
            if (!_0x7b44dc(_0x1cfb09)) {
              throw new _0x4b0204("instance of Promise", "promiseFn", _0x1cfb09);
            }
          } else if (_0x7b44dc(_0xa8f314)) {
            _0x1cfb09 = _0xa8f314;
          } else {
            throw new _0x44013c("promiseFn", ["Function", "Promise"], _0xa8f314);
          }
          return Promise.resolve().then(function () {
            return _0x1cfb09;
          }).then(function () {
            return _0x29bf36;
          }).catch(function (_0x6b1540) {
            return _0x6b1540;
          });
        });
      }
      function _0xc010c1(_0x312424, _0x3e7884, _0xeae494, _0x4a0aaf) {
        if (typeof _0xeae494 === "string") {
          if (arguments.length === 4) {
            throw new _0x44013c("error", ["Object", "Error", "Function", "RegExp"], _0xeae494);
          }
          if (_0x22fe0d(_0x3e7884) === "object" && _0x3e7884 !== null) {
            if (_0x3e7884.message === _0xeae494) {
              throw new _0x34d159("error/message", `The error message "${_0x3e7884.message}" is identical to the message.`);
            }
          } else if (_0x3e7884 === _0xeae494) {
            throw new _0x34d159("error/message", `The error "${_0x3e7884}" is identical to the message.`);
          }
          _0x4a0aaf = _0xeae494;
          _0xeae494 = undefined;
        } else if (_0xeae494 != null && _0x22fe0d(_0xeae494) !== "object" && typeof _0xeae494 !== "function") {
          throw new _0x44013c("error", ["Object", "Error", "Function", "RegExp"], _0xeae494);
        }
        if (_0x3e7884 === _0x29bf36) {
          var _0x2e25ca = "";
          if (_0xeae494 && _0xeae494.name) {
            _0x2e25ca += ` (${_0xeae494.name})`;
          }
          _0x2e25ca += _0x4a0aaf ? `: ${_0x4a0aaf}` : ".";
          var _0x59f044 = _0x312424.name === "rejects" ? "rejection" : "exception";
          _0x41991c({
            actual: undefined,
            expected: _0xeae494,
            operator: _0x312424.name,
            message: `Missing expected ${_0x59f044}${_0x2e25ca}`,
            stackStartFn: _0x312424
          });
        }
        if (_0xeae494 && !_0x245601(_0x3e7884, _0xeae494, _0x4a0aaf, _0x312424)) {
          throw _0x3e7884;
        }
      }
      function _0x5c4424(_0x3a1403, _0x5d39f5, _0x19eaa2, _0x2b3b6c) {
        if (_0x5d39f5 === _0x29bf36) {
          return;
        }
        if (typeof _0x19eaa2 === "string") {
          _0x2b3b6c = _0x19eaa2;
          _0x19eaa2 = undefined;
        }
        if (!_0x19eaa2 || _0x245601(_0x5d39f5, _0x19eaa2)) {
          var _0x2e3497 = _0x2b3b6c ? `: ${_0x2b3b6c}` : ".";
          var _0x4d0ae8 = _0x3a1403.name === "doesNotReject" ? "rejection" : "exception";
          _0x41991c({
            actual: _0x5d39f5,
            expected: _0x19eaa2,
            operator: _0x3a1403.name,
            message: `Got unwanted ${_0x4d0ae8}${_0x2e3497}
Actual message: "${_0x5d39f5 && _0x5d39f5.message}"`,
            stackStartFn: _0x3a1403
          });
        }
        throw _0x5d39f5;
      }
      _0x392f68.throws = function _0x329463(_0x42f1fb) {
        for (var _0x2a1600 = arguments.length, _0x57ef81 = new Array(_0x2a1600 > 1 ? _0x2a1600 - 1 : 0), _0x2646a6 = 1; _0x2646a6 < _0x2a1600; _0x2646a6++) {
          _0x57ef81[_0x2646a6 - 1] = arguments[_0x2646a6];
        }
        _0xc010c1.apply(undefined, [_0x329463, _0x1b0285(_0x42f1fb)].concat(_0x57ef81));
      };
      _0x392f68.rejects = function _0x14df4a(_0x2df86e) {
        for (var _0x40fcbf = arguments.length, _0xe36bbb = new Array(_0x40fcbf > 1 ? _0x40fcbf - 1 : 0), _0x769f6e = 1; _0x769f6e < _0x40fcbf; _0x769f6e++) {
          _0xe36bbb[_0x769f6e - 1] = arguments[_0x769f6e];
        }
        return _0x161d6e(_0x2df86e).then(function (_0x1c6a2e) {
          return _0xc010c1.apply(undefined, [_0x14df4a, _0x1c6a2e].concat(_0xe36bbb));
        });
      };
      _0x392f68.doesNotThrow = function _0x390a99(_0x487463) {
        for (var _0x49f250 = arguments.length, _0x119069 = new Array(_0x49f250 > 1 ? _0x49f250 - 1 : 0), _0x1d17c8 = 1; _0x1d17c8 < _0x49f250; _0x1d17c8++) {
          _0x119069[_0x1d17c8 - 1] = arguments[_0x1d17c8];
        }
        _0x5c4424.apply(undefined, [_0x390a99, _0x1b0285(_0x487463)].concat(_0x119069));
      };
      _0x392f68.doesNotReject = function _0x2d33d5(_0x541ec7) {
        for (var _0x388002 = arguments.length, _0x54d101 = new Array(_0x388002 > 1 ? _0x388002 - 1 : 0), _0xdb1e10 = 1; _0xdb1e10 < _0x388002; _0xdb1e10++) {
          _0x54d101[_0xdb1e10 - 1] = arguments[_0xdb1e10];
        }
        return _0x161d6e(_0x541ec7).then(function (_0xe00b0e) {
          return _0x5c4424.apply(undefined, [_0x2d33d5, _0xe00b0e].concat(_0x54d101));
        });
      };
      _0x392f68.ifError = function _0x5823eb(_0x192fcd) {
        if (_0x192fcd !== null && _0x192fcd !== undefined) {
          var _0x492eb9 = "ifError got unwanted exception: ";
          if (_0x22fe0d(_0x192fcd) === "object" && typeof _0x192fcd.message === "string") {
            if (_0x192fcd.message.length === 0 && _0x192fcd.constructor) {
              _0x492eb9 += _0x192fcd.constructor.name;
            } else {
              _0x492eb9 += _0x192fcd.message;
            }
          } else {
            _0x492eb9 += _0x302d80(_0x192fcd);
          }
          var _0x1e7dd9 = {
            actual: _0x192fcd,
            expected: null,
            operator: "ifError",
            message: _0x492eb9,
            stackStartFn: _0x5823eb
          };
          var _0x12043a = new _0x350934(_0x1e7dd9);
          var _0x21a33c = _0x192fcd.stack;
          if (typeof _0x21a33c === "string") {
            var _0x41903a = _0x21a33c.split("\n");
            _0x41903a.shift();
            var _0x5aa4d9 = _0x12043a.stack.split("\n");
            for (var _0x546912 = 0; _0x546912 < _0x41903a.length; _0x546912++) {
              var _0xeb77f5 = _0x5aa4d9.indexOf(_0x41903a[_0x546912]);
              if (_0xeb77f5 !== -1) {
                _0x5aa4d9 = _0x5aa4d9.slice(0, _0xeb77f5);
                break;
              }
            }
            _0x12043a.stack = `${_0x5aa4d9.join("\n")}
${_0x41903a.join("\n")}`;
          }
          throw _0x12043a;
        }
      };
      function _0x30821e() {
        for (var _0x55221f = arguments.length, _0x55212c = new Array(_0x55221f), _0x4eb669 = 0; _0x4eb669 < _0x55221f; _0x4eb669++) {
          _0x55212c[_0x4eb669] = arguments[_0x4eb669];
        }
        _0x2094c4.apply(undefined, [_0x30821e, _0x55212c.length].concat(_0x55212c));
      }
      _0x392f68.strict = _0x283295(_0x30821e, _0x392f68, {
        equal: _0x392f68.strictEqual,
        deepEqual: _0x392f68.deepStrictEqual,
        notEqual: _0x392f68.notStrictEqual,
        notDeepEqual: _0x392f68.notDeepStrictEqual
      });
      _0x392f68.strict.strict = _0x392f68.strict;
    },
    342: (_0x15a7ba, _0x45d1c0, _0x5a07b9) => {
      'use strict';

      var _0x49ea9f = _0x5a07b9(13);
      function _0x74181a(_0x911aad) {
        for (var _0x44ea45 = 1; _0x44ea45 < arguments.length; _0x44ea45++) {
          var _0x388bc5 = arguments[_0x44ea45] ?? {};
          var _0x2e6e91 = Object.keys(_0x388bc5);
          if (typeof Object.getOwnPropertySymbols === "function") {
            _0x2e6e91 = _0x2e6e91.concat(Object.getOwnPropertySymbols(_0x388bc5).filter(function (_0x58d892) {
              return Object.getOwnPropertyDescriptor(_0x388bc5, _0x58d892).enumerable;
            }));
          }
          _0x2e6e91.forEach(function (_0x4dce61) {
            _0x1fa8dd(_0x911aad, _0x4dce61, _0x388bc5[_0x4dce61]);
          });
        }
        return _0x911aad;
      }
      function _0x1fa8dd(_0x26151a, _0x3f5e37, _0x131f1f) {
        if (_0x3f5e37 in _0x26151a) {
          var _0x491ecd = {
            value: _0x131f1f,
            enumerable: true,
            configurable: true,
            writable: true
          };
          Object.defineProperty(_0x26151a, _0x3f5e37, _0x491ecd);
        } else {
          _0x26151a[_0x3f5e37] = _0x131f1f;
        }
        return _0x26151a;
      }
      function _0x48cb38(_0xbe1346, _0x100a1e) {
        if (!(_0xbe1346 instanceof _0x100a1e)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _0x386efd(_0x4bd53b, _0x5234f0) {
        for (var _0xfd8825 = 0; _0xfd8825 < _0x5234f0.length; _0xfd8825++) {
          var _0x1e57d7 = _0x5234f0[_0xfd8825];
          _0x1e57d7.enumerable = _0x1e57d7.enumerable || false;
          _0x1e57d7.configurable = true;
          if ("value" in _0x1e57d7) {
            _0x1e57d7.writable = true;
          }
          Object.defineProperty(_0x4bd53b, _0x1e57d7.key, _0x1e57d7);
        }
      }
      function _0x2c6c1c(_0x6d953, _0x259f92, _0x586ef6) {
        if (_0x259f92) {
          _0x386efd(_0x6d953.prototype, _0x259f92);
        }
        if (_0x586ef6) {
          _0x386efd(_0x6d953, _0x586ef6);
        }
        return _0x6d953;
      }
      function _0x269bdf(_0x53eec8, _0x3e58bc) {
        if (_0x3e58bc && (_0x499666(_0x3e58bc) === "object" || typeof _0x3e58bc === "function")) {
          return _0x3e58bc;
        }
        return _0x38ce15(_0x53eec8);
      }
      function _0x38ce15(_0x108fdf) {
        if (_0x108fdf === undefined) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return _0x108fdf;
      }
      function _0x336439(_0x4031a7, _0x3914a6) {
        if (typeof _0x3914a6 !== "function" && _0x3914a6 !== null) {
          throw new TypeError("Super expression must either be null or a function");
        }
        _0x4031a7.prototype = Object.create(_0x3914a6 && _0x3914a6.prototype, {
          constructor: {
            value: _0x4031a7,
            writable: true,
            configurable: true
          }
        });
        if (_0x3914a6) {
          _0x527913(_0x4031a7, _0x3914a6);
        }
      }
      function _0x52ddc2(_0x1d5a73) {
        var _0x6170b = typeof Map === "function" ? new Map() : undefined;
        _0x52ddc2 = function _0x30a640(_0x3a903b) {
          if (_0x3a903b === null || !_0x31c55e(_0x3a903b)) {
            return _0x3a903b;
          }
          if (typeof _0x3a903b !== "function") {
            throw new TypeError("Super expression must either be null or a function");
          }
          if (typeof _0x6170b !== "undefined") {
            if (_0x6170b.has(_0x3a903b)) {
              return _0x6170b.get(_0x3a903b);
            }
            _0x6170b.set(_0x3a903b, _0x14a4a7);
          }
          function _0x14a4a7() {
            return _0x3312ba(_0x3a903b, arguments, _0x50ca06(this).constructor);
          }
          _0x14a4a7.prototype = Object.create(_0x3a903b.prototype, {
            constructor: {
              value: _0x14a4a7,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
          return _0x527913(_0x14a4a7, _0x3a903b);
        };
        return _0x52ddc2(_0x1d5a73);
      }
      function _0x3fbdf9() {
        if (typeof Reflect === "undefined" || !Reflect.construct) {
          return false;
        }
        if (Reflect.construct.sham) {
          return false;
        }
        if (typeof Proxy === "function") {
          return true;
        }
        try {
          Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
          return true;
        } catch (_0x546d30) {
          return false;
        }
      }
      function _0x3312ba(_0x3556b7, _0x2cd04b, _0x5de965) {
        if (_0x3fbdf9()) {
          _0x3312ba = Reflect.construct;
        } else {
          _0x3312ba = function _0x1cd1ce(_0x1e9053, _0x21fb1a, _0x113882) {
            var _0x52044a = [null];
            _0x52044a.push.apply(_0x52044a, _0x21fb1a);
            var _0x74ca0e = Function.bind.apply(_0x1e9053, _0x52044a);
            var _0x162671 = new _0x74ca0e();
            if (_0x113882) {
              _0x527913(_0x162671, _0x113882.prototype);
            }
            return _0x162671;
          };
        }
        return _0x3312ba.apply(null, arguments);
      }
      function _0x31c55e(_0x34d1f4) {
        return Function.toString.call(_0x34d1f4).indexOf("[native code]") !== -1;
      }
      function _0x527913(_0x56b028, _0x51fae2) {
        _0x527913 = Object.setPrototypeOf || function _0x38ec72(_0x578f56, _0x342053) {
          _0x578f56.__proto__ = _0x342053;
          return _0x578f56;
        };
        return _0x527913(_0x56b028, _0x51fae2);
      }
      function _0x50ca06(_0x2fe2d9) {
        _0x50ca06 = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x13de12(_0x258832) {
          return _0x258832.__proto__ || Object.getPrototypeOf(_0x258832);
        };
        return _0x50ca06(_0x2fe2d9);
      }
      function _0x499666(_0x5d1bf4) {
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
          _0x499666 = function _0x1d91f0(_0x781998) {
            return typeof _0x781998;
          };
        } else {
          _0x499666 = function _0x4dc308(_0x3cd788) {
            if (_0x3cd788 && typeof Symbol === "function" && _0x3cd788.constructor === Symbol && _0x3cd788 !== Symbol.prototype) {
              return "symbol";
            } else {
              return typeof _0x3cd788;
            }
          };
        }
        return _0x499666(_0x5d1bf4);
      }
      var _0x18fd39 = _0x5a07b9(385);
      var _0x583408 = _0x18fd39.inspect;
      var _0x41c743 = _0x5a07b9(873);
      var _0x1d38b6 = _0x41c743.codes.ERR_INVALID_ARG_TYPE;
      function _0x3f3c63(_0x2e712c, _0x590eb0, _0x888c36) {
        if (_0x888c36 === undefined || _0x888c36 > _0x2e712c.length) {
          _0x888c36 = _0x2e712c.length;
        }
        return _0x2e712c.substring(_0x888c36 - _0x590eb0.length, _0x888c36) === _0x590eb0;
      }
      function _0x1230f6(_0x15f100, _0x3feb1c) {
        _0x3feb1c = Math.floor(_0x3feb1c);
        if (_0x15f100.length == 0 || _0x3feb1c == 0) {
          return "";
        }
        var _0xffe5e7 = _0x15f100.length * _0x3feb1c;
        _0x3feb1c = Math.floor(Math.log(_0x3feb1c) / Math.log(2));
        while (_0x3feb1c) {
          _0x15f100 += _0x15f100;
          _0x3feb1c--;
        }
        _0x15f100 += _0x15f100.substring(0, _0xffe5e7 - _0x15f100.length);
        return _0x15f100;
      }
      var _0x335738 = "";
      var _0x408dfc = "";
      var _0x1064cd = "";
      var _0x1af39e = "";
      var _0x4d0102 = {
        deepStrictEqual: "Expected values to be strictly deep-equal:",
        strictEqual: "Expected values to be strictly equal:",
        strictEqualObject: "Expected \"actual\" to be reference-equal to \"expected\":",
        deepEqual: "Expected values to be loosely deep-equal:",
        equal: "Expected values to be loosely equal:",
        notDeepStrictEqual: "Expected \"actual\" not to be strictly deep-equal to:",
        notStrictEqual: "Expected \"actual\" to be strictly unequal to:",
        notStrictEqualObject: "Expected \"actual\" not to be reference-equal to \"expected\":",
        notDeepEqual: "Expected \"actual\" not to be loosely deep-equal to:",
        notEqual: "Expected \"actual\" to be loosely unequal to:",
        notIdentical: "Values identical but not reference-equal:"
      };
      var _0xa6b410 = 10;
      function _0x20a807(_0x1e3155) {
        var _0xe35996 = Object.keys(_0x1e3155);
        var _0x4637dd = Object.create(Object.getPrototypeOf(_0x1e3155));
        _0xe35996.forEach(function (_0x167e9d) {
          _0x4637dd[_0x167e9d] = _0x1e3155[_0x167e9d];
        });
        var _0x5671aa = {
          value: _0x1e3155.message
        };
        Object.defineProperty(_0x4637dd, "message", _0x5671aa);
        return _0x4637dd;
      }
      function _0x4a4774(_0xc0153f) {
        var _0x958c7f = {
          compact: false,
          customInspect: false,
          depth: 1000,
          maxArrayLength: Infinity,
          showHidden: false,
          breakLength: Infinity,
          showProxy: false,
          sorted: true,
          getters: true
        };
        return _0x583408(_0xc0153f, _0x958c7f);
      }
      function _0x122e67(_0x4db154, _0x49deeb, _0x31446d) {
        var _0xeadd7f = "";
        var _0x1cd9d8 = "";
        var _0x4abfad = 0;
        var _0x1ebc6b = "";
        var _0x5c3ad6 = false;
        var _0x129ca7 = _0x4a4774(_0x4db154);
        var _0x4dbff7 = _0x129ca7.split("\n");
        var _0x26cca4 = _0x4a4774(_0x49deeb).split("\n");
        var _0x1e1efe = 0;
        var _0x503079 = "";
        if (_0x31446d === "strictEqual" && _0x499666(_0x4db154) === "object" && _0x499666(_0x49deeb) === "object" && _0x4db154 !== null && _0x49deeb !== null) {
          _0x31446d = "strictEqualObject";
        }
        if (_0x4dbff7.length === 1 && _0x26cca4.length === 1 && _0x4dbff7[0] !== _0x26cca4[0]) {
          var _0x237649 = _0x4dbff7[0].length + _0x26cca4[0].length;
          if (_0x237649 <= _0xa6b410) {
            if ((_0x499666(_0x4db154) !== "object" || _0x4db154 === null) && (_0x499666(_0x49deeb) !== "object" || _0x49deeb === null) && (_0x4db154 !== 0 || _0x49deeb !== 0)) {
              return `${_0x4d0102[_0x31446d]}

${_0x4dbff7[0]} !== ${_0x26cca4[0]}
`;
            }
          } else if (_0x31446d !== "strictEqualObject") {
            var _0x5bf1b0 = _0x49ea9f.stderr && _0x49ea9f.stderr.isTTY ? _0x49ea9f.stderr.columns : 80;
            if (_0x237649 < _0x5bf1b0) {
              while (_0x4dbff7[0][_0x1e1efe] === _0x26cca4[0][_0x1e1efe]) {
                _0x1e1efe++;
              }
              if (_0x1e1efe > 2) {
                _0x503079 = `
  ${_0x1230f6(" ", _0x1e1efe)}^`;
                _0x1e1efe = 0;
              }
            }
          }
        }
        var _0x408171 = _0x4dbff7[_0x4dbff7.length - 1];
        var _0x126b42 = _0x26cca4[_0x26cca4.length - 1];
        while (_0x408171 === _0x126b42) {
          if (_0x1e1efe++ < 2) {
            _0x1ebc6b = `
  ${_0x408171}${_0x1ebc6b}`;
          } else {
            _0xeadd7f = _0x408171;
          }
          _0x4dbff7.pop();
          _0x26cca4.pop();
          if (_0x4dbff7.length === 0 || _0x26cca4.length === 0) {
            break;
          }
          _0x408171 = _0x4dbff7[_0x4dbff7.length - 1];
          _0x126b42 = _0x26cca4[_0x26cca4.length - 1];
        }
        var _0x2e8979 = Math.max(_0x4dbff7.length, _0x26cca4.length);
        if (_0x2e8979 === 0) {
          var _0x57b326 = _0x129ca7.split("\n");
          if (_0x57b326.length > 30) {
            _0x57b326[26] = `${_0x335738}...${_0x1af39e}`;
            while (_0x57b326.length > 27) {
              _0x57b326.pop();
            }
          }
          return `${_0x4d0102.notIdentical}

${_0x57b326.join("\n")}
`;
        }
        if (_0x1e1efe > 3) {
          _0x1ebc6b = `
${_0x335738}...${_0x1af39e}${_0x1ebc6b}`;
          _0x5c3ad6 = true;
        }
        if (_0xeadd7f !== "") {
          _0x1ebc6b = `
  ${_0xeadd7f}${_0x1ebc6b}`;
          _0xeadd7f = "";
        }
        var _0xdd0ad4 = 0;
        var _0x382e1a = `${_0x4d0102[_0x31446d]}
${_0x408dfc}+ actual${_0x1af39e} ${_0x1064cd}- expected${_0x1af39e}`;
        var _0x52069b = ` ${_0x335738}...${_0x1af39e} Lines skipped`;
        for (_0x1e1efe = 0; _0x1e1efe < _0x2e8979; _0x1e1efe++) {
          var _0x717f13 = _0x1e1efe - _0x4abfad;
          if (_0x4dbff7.length < _0x1e1efe + 1) {
            if (_0x717f13 > 1 && _0x1e1efe > 2) {
              if (_0x717f13 > 4) {
                _0x1cd9d8 += `
${_0x335738}...${_0x1af39e}`;
                _0x5c3ad6 = true;
              } else if (_0x717f13 > 3) {
                _0x1cd9d8 += `
  ${_0x26cca4[_0x1e1efe - 2]}`;
                _0xdd0ad4++;
              }
              _0x1cd9d8 += `
  ${_0x26cca4[_0x1e1efe - 1]}`;
              _0xdd0ad4++;
            }
            _0x4abfad = _0x1e1efe;
            _0xeadd7f += `
${_0x1064cd}-${_0x1af39e} ${_0x26cca4[_0x1e1efe]}`;
            _0xdd0ad4++;
          } else if (_0x26cca4.length < _0x1e1efe + 1) {
            if (_0x717f13 > 1 && _0x1e1efe > 2) {
              if (_0x717f13 > 4) {
                _0x1cd9d8 += `
${_0x335738}...${_0x1af39e}`;
                _0x5c3ad6 = true;
              } else if (_0x717f13 > 3) {
                _0x1cd9d8 += `
  ${_0x4dbff7[_0x1e1efe - 2]}`;
                _0xdd0ad4++;
              }
              _0x1cd9d8 += `
  ${_0x4dbff7[_0x1e1efe - 1]}`;
              _0xdd0ad4++;
            }
            _0x4abfad = _0x1e1efe;
            _0x1cd9d8 += `
${_0x408dfc}+${_0x1af39e} ${_0x4dbff7[_0x1e1efe]}`;
            _0xdd0ad4++;
          } else {
            var _0x2434a6 = _0x26cca4[_0x1e1efe];
            var _0x7b9a89 = _0x4dbff7[_0x1e1efe];
            var _0x2deea8 = _0x7b9a89 !== _0x2434a6 && (!_0x3f3c63(_0x7b9a89, ",") || _0x7b9a89.slice(0, -1) !== _0x2434a6);
            if (_0x2deea8 && _0x3f3c63(_0x2434a6, ",") && _0x2434a6.slice(0, -1) === _0x7b9a89) {
              _0x2deea8 = false;
              _0x7b9a89 += ",";
            }
            if (_0x2deea8) {
              if (_0x717f13 > 1 && _0x1e1efe > 2) {
                if (_0x717f13 > 4) {
                  _0x1cd9d8 += `
${_0x335738}...${_0x1af39e}`;
                  _0x5c3ad6 = true;
                } else if (_0x717f13 > 3) {
                  _0x1cd9d8 += `
  ${_0x4dbff7[_0x1e1efe - 2]}`;
                  _0xdd0ad4++;
                }
                _0x1cd9d8 += `
  ${_0x4dbff7[_0x1e1efe - 1]}`;
                _0xdd0ad4++;
              }
              _0x4abfad = _0x1e1efe;
              _0x1cd9d8 += `
${_0x408dfc}+${_0x1af39e} ${_0x7b9a89}`;
              _0xeadd7f += `
${_0x1064cd}-${_0x1af39e} ${_0x2434a6}`;
              _0xdd0ad4 += 2;
            } else {
              _0x1cd9d8 += _0xeadd7f;
              _0xeadd7f = "";
              if (_0x717f13 === 1 || _0x1e1efe === 0) {
                _0x1cd9d8 += `
  ${_0x7b9a89}`;
                _0xdd0ad4++;
              }
            }
          }
          if (_0xdd0ad4 > 20 && _0x1e1efe < _0x2e8979 - 2) {
            return `${_0x382e1a}${_0x52069b}
${_0x1cd9d8}
${_0x335738}...${_0x1af39e}${_0xeadd7f}
${_0x335738}...${_0x1af39e}`;
          }
        }
        return `${_0x382e1a}${_0x5c3ad6 ? _0x52069b : ""}
${_0x1cd9d8}${_0xeadd7f}${_0x1ebc6b}${_0x503079}`;
      }
      var _0x2c3115 = function (_0x3a39ac) {
        _0x336439(_0x45494d, _0x3a39ac);
        function _0x45494d(_0xe2c964) {
          var _0x145169;
          _0x48cb38(this, _0x45494d);
          if (_0x499666(_0xe2c964) !== "object" || _0xe2c964 === null) {
            throw new _0x1d38b6("options", "Object", _0xe2c964);
          }
          var _0x1c32f3 = _0xe2c964.message;
          var _0x2713e9 = _0xe2c964.operator;
          var _0x5c4a48 = _0xe2c964.stackStartFn;
          var _0x55ee46 = _0xe2c964.actual;
          var _0x431ce5 = _0xe2c964.expected;
          var _0x48a105 = Error.stackTraceLimit;
          Error.stackTraceLimit = 0;
          if (_0x1c32f3 != null) {
            _0x145169 = _0x269bdf(this, _0x50ca06(_0x45494d).call(this, String(_0x1c32f3)));
          } else {
            if (_0x49ea9f.stderr && _0x49ea9f.stderr.isTTY) {
              if (_0x49ea9f.stderr && _0x49ea9f.stderr.getColorDepth && _0x49ea9f.stderr.getColorDepth() !== 1) {
                _0x335738 = "[34m";
                _0x408dfc = "[32m";
                _0x1af39e = "[39m";
                _0x1064cd = "[31m";
              } else {
                _0x335738 = "";
                _0x408dfc = "";
                _0x1af39e = "";
                _0x1064cd = "";
              }
            }
            if (_0x499666(_0x55ee46) === "object" && _0x55ee46 !== null && _0x499666(_0x431ce5) === "object" && _0x431ce5 !== null && "stack" in _0x55ee46 && _0x55ee46 instanceof Error && "stack" in _0x431ce5 && _0x431ce5 instanceof Error) {
              _0x55ee46 = _0x20a807(_0x55ee46);
              _0x431ce5 = _0x20a807(_0x431ce5);
            }
            if (_0x2713e9 === "deepStrictEqual" || _0x2713e9 === "strictEqual") {
              _0x145169 = _0x269bdf(this, _0x50ca06(_0x45494d).call(this, _0x122e67(_0x55ee46, _0x431ce5, _0x2713e9)));
            } else if (_0x2713e9 === "notDeepStrictEqual" || _0x2713e9 === "notStrictEqual") {
              var _0x533b0b = _0x4d0102[_0x2713e9];
              var _0x2904db = _0x4a4774(_0x55ee46).split("\n");
              if (_0x2713e9 === "notStrictEqual" && _0x499666(_0x55ee46) === "object" && _0x55ee46 !== null) {
                _0x533b0b = _0x4d0102.notStrictEqualObject;
              }
              if (_0x2904db.length > 30) {
                _0x2904db[26] = `${_0x335738}...${_0x1af39e}`;
                while (_0x2904db.length > 27) {
                  _0x2904db.pop();
                }
              }
              if (_0x2904db.length === 1) {
                _0x145169 = _0x269bdf(this, _0x50ca06(_0x45494d).call(this, `${_0x533b0b} ${_0x2904db[0]}`));
              } else {
                _0x145169 = _0x269bdf(this, _0x50ca06(_0x45494d).call(this, `${_0x533b0b}

${_0x2904db.join("\n")}
`));
              }
            } else {
              var _0x404090 = _0x4a4774(_0x55ee46);
              var _0x943493 = "";
              var _0x29661c = _0x4d0102[_0x2713e9];
              if (_0x2713e9 === "notDeepEqual" || _0x2713e9 === "notEqual") {
                _0x404090 = `${_0x4d0102[_0x2713e9]}

${_0x404090}`;
                if (_0x404090.length > 1024) {
                  _0x404090 = `${_0x404090.slice(0, 1021)}...`;
                }
              } else {
                _0x943493 = `${_0x4a4774(_0x431ce5)}`;
                if (_0x404090.length > 512) {
                  _0x404090 = `${_0x404090.slice(0, 509)}...`;
                }
                if (_0x943493.length > 512) {
                  _0x943493 = `${_0x943493.slice(0, 509)}...`;
                }
                if (_0x2713e9 === "deepEqual" || _0x2713e9 === "equal") {
                  _0x404090 = `${_0x29661c}

${_0x404090}

should equal

`;
                } else {
                  _0x943493 = ` ${_0x2713e9} ${_0x943493}`;
                }
              }
              _0x145169 = _0x269bdf(this, _0x50ca06(_0x45494d).call(this, `${_0x404090}${_0x943493}`));
            }
          }
          Error.stackTraceLimit = _0x48a105;
          _0x145169.generatedMessage = !_0x1c32f3;
          Object.defineProperty(_0x38ce15(_0x145169), "name", {
            value: "AssertionError [ERR_ASSERTION]",
            enumerable: false,
            writable: true,
            configurable: true
          });
          _0x145169.code = "ERR_ASSERTION";
          _0x145169.actual = _0x55ee46;
          _0x145169.expected = _0x431ce5;
          _0x145169.operator = _0x2713e9;
          if (Error.captureStackTrace) {
            Error.captureStackTrace(_0x38ce15(_0x145169), _0x5c4a48);
          }
          _0x145169.stack;
          _0x145169.name = "AssertionError";
          return _0x269bdf(_0x145169);
        }
        _0x2c6c1c(_0x45494d, [{
          key: "toString",
          value: function _0x2c0ae6() {
            return `${this.name} [${this.code}]: ${this.message}`;
          }
        }, {
          key: _0x583408.custom,
          value: function _0x548038(_0x4877dc, _0x50df80) {
            return _0x583408(this, _0x74181a({}, _0x50df80, {
              customInspect: false,
              depth: 0
            }));
          }
        }]);
        return _0x45494d;
      }(_0x52ddc2(Error));
      _0x15a7ba.exports = _0x2c3115;
    },
    873: (_0x4a129f, _0x13e0a1, _0x5afaa0) => {
      'use strict';

      function _0x261aab(_0x53c619) {
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
          _0x261aab = function _0x4d00b1(_0x1fcef2) {
            return typeof _0x1fcef2;
          };
        } else {
          _0x261aab = function _0x3e1993(_0x3fabf4) {
            if (_0x3fabf4 && typeof Symbol === "function" && _0x3fabf4.constructor === Symbol && _0x3fabf4 !== Symbol.prototype) {
              return "symbol";
            } else {
              return typeof _0x3fabf4;
            }
          };
        }
        return _0x261aab(_0x53c619);
      }
      function _0xc6a066(_0x5b8597, _0x4a01d1) {
        if (!(_0x5b8597 instanceof _0x4a01d1)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _0xafbfc(_0x39ab0a, _0x2e6a6e) {
        if (_0x2e6a6e && (_0x261aab(_0x2e6a6e) === "object" || typeof _0x2e6a6e === "function")) {
          return _0x2e6a6e;
        }
        return _0x5a05cd(_0x39ab0a);
      }
      function _0x5a05cd(_0x52af5b) {
        if (_0x52af5b === undefined) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return _0x52af5b;
      }
      function _0xbfd17f(_0x485079) {
        _0xbfd17f = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x3aed7d(_0x584732) {
          return _0x584732.__proto__ || Object.getPrototypeOf(_0x584732);
        };
        return _0xbfd17f(_0x485079);
      }
      function _0x56113d(_0x4e6217, _0x39c14a) {
        if (typeof _0x39c14a !== "function" && _0x39c14a !== null) {
          throw new TypeError("Super expression must either be null or a function");
        }
        _0x4e6217.prototype = Object.create(_0x39c14a && _0x39c14a.prototype, {
          constructor: {
            value: _0x4e6217,
            writable: true,
            configurable: true
          }
        });
        if (_0x39c14a) {
          _0x1bcc66(_0x4e6217, _0x39c14a);
        }
      }
      function _0x1bcc66(_0x2abae6, _0x298f0d) {
        _0x1bcc66 = Object.setPrototypeOf || function _0x1f4e42(_0x227ade, _0x26a0c0) {
          _0x227ade.__proto__ = _0x26a0c0;
          return _0x227ade;
        };
        return _0x1bcc66(_0x2abae6, _0x298f0d);
      }
      var _0x53119f = {};
      var _0x522d89;
      var _0x1610c3;
      function _0x3ba62c(_0x552288, _0x2eda56, _0x22d098) {
        if (!_0x22d098) {
          _0x22d098 = Error;
        }
        function _0x49d1e4(_0x213f4d, _0x2611a7, _0x95ef5e) {
          if (typeof _0x2eda56 === "string") {
            return _0x2eda56;
          } else {
            return _0x2eda56(_0x213f4d, _0x2611a7, _0x95ef5e);
          }
        }
        var _0x30abde = function (_0x58c9e4) {
          _0x56113d(_0x51f878, _0x58c9e4);
          function _0x51f878(_0x5b09ca, _0x4c80c0, _0x5f20a8) {
            var _0x55f67a;
            _0xc6a066(this, _0x51f878);
            _0x55f67a = _0xafbfc(this, _0xbfd17f(_0x51f878).call(this, _0x49d1e4(_0x5b09ca, _0x4c80c0, _0x5f20a8)));
            _0x55f67a.code = _0x552288;
            return _0x55f67a;
          }
          return _0x51f878;
        }(_0x22d098);
        _0x53119f[_0x552288] = _0x30abde;
      }
      function _0x287c31(_0xdbc27d, _0x486a08) {
        if (Array.isArray(_0xdbc27d)) {
          var _0x5d93c8 = _0xdbc27d.length;
          _0xdbc27d = _0xdbc27d.map(function (_0xcbcd12) {
            return String(_0xcbcd12);
          });
          if (_0x5d93c8 > 2) {
            return `one of ${_0x486a08} ${_0xdbc27d.slice(0, _0x5d93c8 - 1).join(", ")}, or ${_0xdbc27d[_0x5d93c8 - 1]}`;
          } else if (_0x5d93c8 === 2) {
            return `one of ${_0x486a08} ${_0xdbc27d[0]} or ${_0xdbc27d[1]}`;
          } else {
            return `of ${_0x486a08} ${_0xdbc27d[0]}`;
          }
        } else {
          return `of ${_0x486a08} ${String(_0xdbc27d)}`;
        }
      }
      function _0x1be29f(_0x4e95d9, _0x4bca7f, _0x3e00ff) {
        return _0x4e95d9.substr(!_0x3e00ff || _0x3e00ff < 0 ? 0 : +_0x3e00ff, _0x4bca7f.length) === _0x4bca7f;
      }
      function _0x5c8d86(_0x413918, _0x41fe3e, _0xcddaea) {
        if (_0xcddaea === undefined || _0xcddaea > _0x413918.length) {
          _0xcddaea = _0x413918.length;
        }
        return _0x413918.substring(_0xcddaea - _0x41fe3e.length, _0xcddaea) === _0x41fe3e;
      }
      function _0x3b7f49(_0xc83868, _0x320068, _0x484725) {
        if (typeof _0x484725 !== "number") {
          _0x484725 = 0;
        }
        if (_0x484725 + _0x320068.length > _0xc83868.length) {
          return false;
        } else {
          return _0xc83868.indexOf(_0x320068, _0x484725) !== -1;
        }
      }
      _0x3ba62c("ERR_AMBIGUOUS_ARGUMENT", "The \"%s\" argument is ambiguous. %s", TypeError);
      _0x3ba62c("ERR_INVALID_ARG_TYPE", function (_0x51f8b4, _0x193f82, _0x134883) {
        if (_0x522d89 === undefined) {
          _0x522d89 = _0x5afaa0(318);
        }
        _0x522d89(typeof _0x51f8b4 === "string", "'name' must be a string");
        var _0x16dd97;
        if (typeof _0x193f82 === "string" && _0x1be29f(_0x193f82, "not ")) {
          _0x16dd97 = "must not be";
          _0x193f82 = _0x193f82.replace(/^not /, "");
        } else {
          _0x16dd97 = "must be";
        }
        var _0x545bcf;
        if (_0x5c8d86(_0x51f8b4, " argument")) {
          _0x545bcf = `The ${_0x51f8b4} ${_0x16dd97} ${_0x287c31(_0x193f82, "type")}`;
        } else {
          var _0x15e33b = _0x3b7f49(_0x51f8b4, ".") ? "property" : "argument";
          _0x545bcf = `The "${_0x51f8b4}" ${_0x15e33b} ${_0x16dd97} ${_0x287c31(_0x193f82, "type")}`;
        }
        _0x545bcf += `. Received type ${_0x261aab(_0x134883)}`;
        return _0x545bcf;
      }, TypeError);
      _0x3ba62c("ERR_INVALID_ARG_VALUE", function (_0x237669, _0x2e0358) {
        var _0x2137e7 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "is invalid";
        if (_0x1610c3 === undefined) {
          _0x1610c3 = _0x5afaa0(385);
        }
        var _0x555768 = _0x1610c3.inspect(_0x2e0358);
        if (_0x555768.length > 128) {
          _0x555768 = `${_0x555768.slice(0, 128)}...`;
        }
        return `The argument '${_0x237669}' ${_0x2137e7}. Received ${_0x555768}`;
      }, TypeError, RangeError);
      _0x3ba62c("ERR_INVALID_RETURN_VALUE", function (_0x4a54fb, _0x57dc16, _0x39d07d) {
        var _0x97aee6;
        if (_0x39d07d && _0x39d07d.constructor && _0x39d07d.constructor.name) {
          _0x97aee6 = `instance of ${_0x39d07d.constructor.name}`;
        } else {
          _0x97aee6 = `type ${_0x261aab(_0x39d07d)}`;
        }
        return `Expected ${_0x4a54fb} to be returned from the "${_0x57dc16}" function but got ${_0x97aee6}.`;
      }, TypeError);
      _0x3ba62c("ERR_MISSING_ARGS", function () {
        for (var _0x2ae3f9 = arguments.length, _0x258afc = new Array(_0x2ae3f9), _0x5e98b5 = 0; _0x5e98b5 < _0x2ae3f9; _0x5e98b5++) {
          _0x258afc[_0x5e98b5] = arguments[_0x5e98b5];
        }
        if (_0x522d89 === undefined) {
          _0x522d89 = _0x5afaa0(318);
        }
        _0x522d89(_0x258afc.length > 0, "At least one arg needs to be specified");
        var _0xd21a70 = "The ";
        var _0x5ba05c = _0x258afc.length;
        _0x258afc = _0x258afc.map(function (_0x87a03f) {
          return `"${_0x87a03f}"`;
        });
        switch (_0x5ba05c) {
          case 1:
            _0xd21a70 += `${_0x258afc[0]} argument`;
            break;
          case 2:
            _0xd21a70 += `${_0x258afc[0]} and ${_0x258afc[1]} arguments`;
            break;
          default:
            _0xd21a70 += _0x258afc.slice(0, _0x5ba05c - 1).join(", ");
            _0xd21a70 += `, and ${_0x258afc[_0x5ba05c - 1]} arguments`;
            break;
        }
        return `${_0xd21a70} must be specified`;
      }, TypeError);
      _0x4a129f.exports.codes = _0x53119f;
    },
    559: (_0x145876, _0x478d25, _0x5254e7) => {
      'use strict';

      function _0x4c5c9c(_0x4080c2, _0x3adf52) {
        return _0x2e67ad(_0x4080c2) || _0x285f80(_0x4080c2, _0x3adf52) || _0x48f004();
      }
      function _0x48f004() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
      function _0x285f80(_0x11e8f8, _0x28c9bf) {
        var _0x2179e3 = [];
        var _0x34cedb = true;
        var _0x1ec79d = false;
        var _0x551e6a = undefined;
        try {
          for (var _0xc042d9 = _0x11e8f8[Symbol.iterator](), _0x5b5873; !(_0x34cedb = (_0x5b5873 = _0xc042d9.next()).done); _0x34cedb = true) {
            _0x2179e3.push(_0x5b5873.value);
            if (_0x28c9bf && _0x2179e3.length === _0x28c9bf) {
              break;
            }
          }
        } catch (_0x3a967e) {
          _0x1ec79d = true;
          _0x551e6a = _0x3a967e;
        } finally {
          try {
            if (!_0x34cedb && _0xc042d9.return != null) {
              _0xc042d9.return();
            }
          } finally {
            if (_0x1ec79d) {
              throw _0x551e6a;
            }
          }
        }
        return _0x2179e3;
      }
      function _0x2e67ad(_0x5c94b2) {
        if (Array.isArray(_0x5c94b2)) {
          return _0x5c94b2;
        }
      }
      function _0x566884(_0x5ec685) {
        if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
          _0x566884 = function _0x114b7e(_0x2a9dda) {
            return typeof _0x2a9dda;
          };
        } else {
          _0x566884 = function _0x3bc418(_0x1a7d20) {
            if (_0x1a7d20 && typeof Symbol === "function" && _0x1a7d20.constructor === Symbol && _0x1a7d20 !== Symbol.prototype) {
              return "symbol";
            } else {
              return typeof _0x1a7d20;
            }
          };
        }
        return _0x566884(_0x5ec685);
      }
      var _0x596609 = /a/g.flags !== undefined;
      var _0x2e0d82 = function _0x56ab18(_0xf03ea4) {
        var _0x5671ef = [];
        _0xf03ea4.forEach(function (_0x42094f) {
          return _0x5671ef.push(_0x42094f);
        });
        return _0x5671ef;
      };
      var _0x4b7bac = function _0x3b38eb(_0xba2112) {
        var _0x48e2a4 = [];
        _0xba2112.forEach(function (_0x339566, _0x1f7e98) {
          return _0x48e2a4.push([_0x1f7e98, _0x339566]);
        });
        return _0x48e2a4;
      };
      var _0x14df91 = Object.is ? Object.is : _0x5254e7(338);
      var _0x87e09d = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {
        return [];
      };
      var _0x1deda4 = Number.isNaN ? Number.isNaN : _0x5254e7(699);
      function _0x50afb8(_0x5389a5) {
        return _0x5389a5.call.bind(_0x5389a5);
      }
      var _0x5d8e79 = _0x50afb8(Object.prototype.hasOwnProperty);
      var _0x1cede9 = _0x50afb8(Object.prototype.propertyIsEnumerable);
      var _0x21824c = _0x50afb8(Object.prototype.toString);
      var _0x1926e7 = _0x5254e7(385).types;
      var _0x3ac73a = _0x1926e7.isAnyArrayBuffer;
      var _0x48a1c6 = _0x1926e7.isArrayBufferView;
      var _0xe34a07 = _0x1926e7.isDate;
      var _0x3a59db = _0x1926e7.isMap;
      var _0x413f0c = _0x1926e7.isRegExp;
      var _0x466efe = _0x1926e7.isSet;
      var _0x34c7e0 = _0x1926e7.isNativeError;
      var _0x173c04 = _0x1926e7.isBoxedPrimitive;
      var _0xbed84c = _0x1926e7.isNumberObject;
      var _0x24bf2f = _0x1926e7.isStringObject;
      var _0x29da33 = _0x1926e7.isBooleanObject;
      var _0x9c22d2 = _0x1926e7.isBigIntObject;
      var _0x4c80cf = _0x1926e7.isSymbolObject;
      var _0x5e6fb5 = _0x1926e7.isFloat32Array;
      var _0x37ee1c = _0x1926e7.isFloat64Array;
      function _0x19875f(_0xa0fbe9) {
        if (_0xa0fbe9.length === 0 || _0xa0fbe9.length > 10) {
          return true;
        }
        for (var _0x249ad5 = 0; _0x249ad5 < _0xa0fbe9.length; _0x249ad5++) {
          var _0x5979f2 = _0xa0fbe9.charCodeAt(_0x249ad5);
          if (_0x5979f2 < 48 || _0x5979f2 > 57) {
            return true;
          }
        }
        return _0xa0fbe9.length === 10 && _0xa0fbe9 >= Math.pow(2, 32);
      }
      function _0x2f3137(_0xf163b0) {
        return Object.keys(_0xf163b0).filter(_0x19875f).concat(_0x87e09d(_0xf163b0).filter(Object.prototype.propertyIsEnumerable.bind(_0xf163b0)));
      } /*!
        * The buffer module from node.js, for the browser.
        *
        * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
        * @license  MIT
        */
      function _0x56407c(_0xc8f2a1, _0x4103fa) {
        if (_0xc8f2a1 === _0x4103fa) {
          return 0;
        }
        var _0x359395 = _0xc8f2a1.length;
        var _0x858085 = _0x4103fa.length;
        for (var _0x289f38 = 0, _0x30dde9 = Math.min(_0x359395, _0x858085); _0x289f38 < _0x30dde9; ++_0x289f38) {
          if (_0xc8f2a1[_0x289f38] !== _0x4103fa[_0x289f38]) {
            _0x359395 = _0xc8f2a1[_0x289f38];
            _0x858085 = _0x4103fa[_0x289f38];
            break;
          }
        }
        if (_0x359395 < _0x858085) {
          return -1;
        }
        if (_0x858085 < _0x359395) {
          return 1;
        }
        return 0;
      }
      var _0x2a3075 = undefined;
      var _0x26761d = true;
      var _0x18575a = false;
      var _0x393b68 = 0;
      var _0x22cb77 = 1;
      var _0x806bbb = 2;
      var _0x187067 = 3;
      function _0x91cbae(_0x28d51b, _0x584a80) {
        if (_0x596609) {
          return _0x28d51b.source === _0x584a80.source && _0x28d51b.flags === _0x584a80.flags;
        } else {
          return RegExp.prototype.toString.call(_0x28d51b) === RegExp.prototype.toString.call(_0x584a80);
        }
      }
      function _0x302ff7(_0x4a046d, _0x116c29) {
        if (_0x4a046d.byteLength !== _0x116c29.byteLength) {
          return false;
        }
        for (var _0x389e7b = 0; _0x389e7b < _0x4a046d.byteLength; _0x389e7b++) {
          if (_0x4a046d[_0x389e7b] !== _0x116c29[_0x389e7b]) {
            return false;
          }
        }
        return true;
      }
      function _0x4bb887(_0x5df2c5, _0x5dfe7d) {
        if (_0x5df2c5.byteLength !== _0x5dfe7d.byteLength) {
          return false;
        }
        return _0x56407c(new Uint8Array(_0x5df2c5.buffer, _0x5df2c5.byteOffset, _0x5df2c5.byteLength), new Uint8Array(_0x5dfe7d.buffer, _0x5dfe7d.byteOffset, _0x5dfe7d.byteLength)) === 0;
      }
      function _0x4af592(_0x4413d9, _0x2a0532) {
        return _0x4413d9.byteLength === _0x2a0532.byteLength && _0x56407c(new Uint8Array(_0x4413d9), new Uint8Array(_0x2a0532)) === 0;
      }
      function _0xd99174(_0x285fed, _0x264550) {
        if (_0xbed84c(_0x285fed)) {
          return _0xbed84c(_0x264550) && _0x14df91(Number.prototype.valueOf.call(_0x285fed), Number.prototype.valueOf.call(_0x264550));
        }
        if (_0x24bf2f(_0x285fed)) {
          return _0x24bf2f(_0x264550) && String.prototype.valueOf.call(_0x285fed) === String.prototype.valueOf.call(_0x264550);
        }
        if (_0x29da33(_0x285fed)) {
          return _0x29da33(_0x264550) && Boolean.prototype.valueOf.call(_0x285fed) === Boolean.prototype.valueOf.call(_0x264550);
        }
        if (_0x9c22d2(_0x285fed)) {
          return _0x9c22d2(_0x264550) && BigInt.prototype.valueOf.call(_0x285fed) === BigInt.prototype.valueOf.call(_0x264550);
        }
        return _0x4c80cf(_0x264550) && Symbol.prototype.valueOf.call(_0x285fed) === Symbol.prototype.valueOf.call(_0x264550);
      }
      function _0x379f87(_0x1d3133, _0x25da49, _0x159810, _0x2de70d) {
        if (_0x1d3133 === _0x25da49) {
          if (_0x1d3133 !== 0) {
            return true;
          }
          if (_0x159810) {
            return _0x14df91(_0x1d3133, _0x25da49);
          } else {
            return true;
          }
        }
        if (_0x159810) {
          if (_0x566884(_0x1d3133) !== "object") {
            return typeof _0x1d3133 === "number" && _0x1deda4(_0x1d3133) && _0x1deda4(_0x25da49);
          }
          if (_0x566884(_0x25da49) !== "object" || _0x1d3133 === null || _0x25da49 === null) {
            return false;
          }
          if (Object.getPrototypeOf(_0x1d3133) !== Object.getPrototypeOf(_0x25da49)) {
            return false;
          }
        } else {
          if (_0x1d3133 === null || _0x566884(_0x1d3133) !== "object") {
            if (_0x25da49 === null || _0x566884(_0x25da49) !== "object") {
              return _0x1d3133 == _0x25da49;
            }
            return false;
          }
          if (_0x25da49 === null || _0x566884(_0x25da49) !== "object") {
            return false;
          }
        }
        var _0x101e59 = _0x21824c(_0x1d3133);
        var _0x4ad356 = _0x21824c(_0x25da49);
        if (_0x101e59 !== _0x4ad356) {
          return false;
        }
        if (Array.isArray(_0x1d3133)) {
          if (_0x1d3133.length !== _0x25da49.length) {
            return false;
          }
          var _0x7b4e80 = _0x2f3137(_0x1d3133, _0x2a3075);
          var _0x384ae8 = _0x2f3137(_0x25da49, _0x2a3075);
          if (_0x7b4e80.length !== _0x384ae8.length) {
            return false;
          }
          return _0x50491c(_0x1d3133, _0x25da49, _0x159810, _0x2de70d, _0x22cb77, _0x7b4e80);
        }
        if (_0x101e59 === "[object Object]") {
          if (!_0x3a59db(_0x1d3133) && _0x3a59db(_0x25da49) || !_0x466efe(_0x1d3133) && _0x466efe(_0x25da49)) {
            return false;
          }
        }
        if (_0xe34a07(_0x1d3133)) {
          if (!_0xe34a07(_0x25da49) || Date.prototype.getTime.call(_0x1d3133) !== Date.prototype.getTime.call(_0x25da49)) {
            return false;
          }
        } else if (_0x413f0c(_0x1d3133)) {
          if (!_0x413f0c(_0x25da49) || !_0x91cbae(_0x1d3133, _0x25da49)) {
            return false;
          }
        } else if (_0x34c7e0(_0x1d3133) || _0x1d3133 instanceof Error) {
          if (_0x1d3133.message !== _0x25da49.message || _0x1d3133.name !== _0x25da49.name) {
            return false;
          }
        } else if (_0x48a1c6(_0x1d3133)) {
          if (!_0x159810 && (_0x5e6fb5(_0x1d3133) || _0x37ee1c(_0x1d3133))) {
            if (!_0x302ff7(_0x1d3133, _0x25da49)) {
              return false;
            }
          } else if (!_0x4bb887(_0x1d3133, _0x25da49)) {
            return false;
          }
          var _0x37f9fb = _0x2f3137(_0x1d3133, _0x2a3075);
          var _0x4cbc35 = _0x2f3137(_0x25da49, _0x2a3075);
          if (_0x37f9fb.length !== _0x4cbc35.length) {
            return false;
          }
          return _0x50491c(_0x1d3133, _0x25da49, _0x159810, _0x2de70d, _0x393b68, _0x37f9fb);
        } else if (_0x466efe(_0x1d3133)) {
          if (!_0x466efe(_0x25da49) || _0x1d3133.size !== _0x25da49.size) {
            return false;
          }
          return _0x50491c(_0x1d3133, _0x25da49, _0x159810, _0x2de70d, _0x806bbb);
        } else if (_0x3a59db(_0x1d3133)) {
          if (!_0x3a59db(_0x25da49) || _0x1d3133.size !== _0x25da49.size) {
            return false;
          }
          return _0x50491c(_0x1d3133, _0x25da49, _0x159810, _0x2de70d, _0x187067);
        } else if (_0x3ac73a(_0x1d3133)) {
          if (!_0x4af592(_0x1d3133, _0x25da49)) {
            return false;
          }
        } else if (_0x173c04(_0x1d3133) && !_0xd99174(_0x1d3133, _0x25da49)) {
          return false;
        }
        return _0x50491c(_0x1d3133, _0x25da49, _0x159810, _0x2de70d, _0x393b68);
      }
      function _0x44ea8a(_0x3457c1, _0x1809b1) {
        return _0x1809b1.filter(function (_0xba4202) {
          return _0x1cede9(_0x3457c1, _0xba4202);
        });
      }
      function _0x50491c(_0x4d182e, _0x1ecaa9, _0x5b863d, _0x1916d7, _0x584489, _0x54a12f) {
        if (arguments.length === 5) {
          _0x54a12f = Object.keys(_0x4d182e);
          var _0x184304 = Object.keys(_0x1ecaa9);
          if (_0x54a12f.length !== _0x184304.length) {
            return false;
          }
        }
        var _0x2e3ea0 = 0;
        for (; _0x2e3ea0 < _0x54a12f.length; _0x2e3ea0++) {
          if (!_0x5d8e79(_0x1ecaa9, _0x54a12f[_0x2e3ea0])) {
            return false;
          }
        }
        if (_0x5b863d && arguments.length === 5) {
          var _0x3a1140 = _0x87e09d(_0x4d182e);
          if (_0x3a1140.length !== 0) {
            var _0x3af4a9 = 0;
            for (_0x2e3ea0 = 0; _0x2e3ea0 < _0x3a1140.length; _0x2e3ea0++) {
              var _0x35f7be = _0x3a1140[_0x2e3ea0];
              if (_0x1cede9(_0x4d182e, _0x35f7be)) {
                if (!_0x1cede9(_0x1ecaa9, _0x35f7be)) {
                  return false;
                }
                _0x54a12f.push(_0x35f7be);
                _0x3af4a9++;
              } else if (_0x1cede9(_0x1ecaa9, _0x35f7be)) {
                return false;
              }
            }
            var _0x1443b4 = _0x87e09d(_0x1ecaa9);
            if (_0x3a1140.length !== _0x1443b4.length && _0x44ea8a(_0x1ecaa9, _0x1443b4).length !== _0x3af4a9) {
              return false;
            }
          } else {
            var _0x329d81 = _0x87e09d(_0x1ecaa9);
            if (_0x329d81.length !== 0 && _0x44ea8a(_0x1ecaa9, _0x329d81).length !== 0) {
              return false;
            }
          }
        }
        if (_0x54a12f.length === 0 && (_0x584489 === _0x393b68 || _0x584489 === _0x22cb77 && _0x4d182e.length === 0 || _0x4d182e.size === 0)) {
          return true;
        }
        if (_0x1916d7 === undefined) {
          _0x1916d7 = {
            val1: new Map(),
            val2: new Map(),
            position: 0
          };
        } else {
          var _0x2a0eb5 = _0x1916d7.val1.get(_0x4d182e);
          if (_0x2a0eb5 !== undefined) {
            var _0x553e6a = _0x1916d7.val2.get(_0x1ecaa9);
            if (_0x553e6a !== undefined) {
              return _0x2a0eb5 === _0x553e6a;
            }
          }
          _0x1916d7.position++;
        }
        _0x1916d7.val1.set(_0x4d182e, _0x1916d7.position);
        _0x1916d7.val2.set(_0x1ecaa9, _0x1916d7.position);
        var _0x12f2e5 = _0x1e6ec5(_0x4d182e, _0x1ecaa9, _0x5b863d, _0x54a12f, _0x1916d7, _0x584489);
        _0x1916d7.val1.delete(_0x4d182e);
        _0x1916d7.val2.delete(_0x1ecaa9);
        return _0x12f2e5;
      }
      function _0x52f318(_0x1359fb, _0x1d6481, _0x4e0796, _0x4798b1) {
        var _0x463f5f = _0x2e0d82(_0x1359fb);
        for (var _0x4a21a7 = 0; _0x4a21a7 < _0x463f5f.length; _0x4a21a7++) {
          var _0x23fdc0 = _0x463f5f[_0x4a21a7];
          if (_0x379f87(_0x1d6481, _0x23fdc0, _0x4e0796, _0x4798b1)) {
            _0x1359fb.delete(_0x23fdc0);
            return true;
          }
        }
        return false;
      }
      function _0xf2255b(_0x2d3611) {
        switch (_0x566884(_0x2d3611)) {
          case "undefined":
            return null;
          case "object":
            return undefined;
          case "symbol":
            return false;
          case "string":
            _0x2d3611 = +_0x2d3611;
          case "number":
            if (_0x1deda4(_0x2d3611)) {
              return false;
            }
        }
        return true;
      }
      function _0x217a54(_0x171607, _0x125c4f, _0x29cd89) {
        var _0x35fcdb = _0xf2255b(_0x29cd89);
        if (_0x35fcdb != null) {
          return _0x35fcdb;
        }
        return _0x125c4f.has(_0x35fcdb) && !_0x171607.has(_0x35fcdb);
      }
      function _0x46896b(_0x47fdef, _0x5e6a7a, _0xf29e1a, _0x552360, _0x573775) {
        var _0x78c7dc = _0xf2255b(_0xf29e1a);
        if (_0x78c7dc != null) {
          return _0x78c7dc;
        }
        var _0x589dd3 = _0x5e6a7a.get(_0x78c7dc);
        if (_0x589dd3 === undefined && !_0x5e6a7a.has(_0x78c7dc) || !_0x379f87(_0x552360, _0x589dd3, false, _0x573775)) {
          return false;
        }
        return !_0x47fdef.has(_0x78c7dc) && _0x379f87(_0x552360, _0x589dd3, false, _0x573775);
      }
      function _0x5851b4(_0x9f35ce, _0x5014da, _0x3193da, _0x1a0e87) {
        var _0x1afa1 = null;
        var _0x3f2c58 = _0x2e0d82(_0x9f35ce);
        for (var _0x47feb5 = 0; _0x47feb5 < _0x3f2c58.length; _0x47feb5++) {
          var _0x25802a = _0x3f2c58[_0x47feb5];
          if (_0x566884(_0x25802a) === "object" && _0x25802a !== null) {
            if (_0x1afa1 === null) {
              _0x1afa1 = new Set();
            }
            _0x1afa1.add(_0x25802a);
          } else if (!_0x5014da.has(_0x25802a)) {
            if (_0x3193da) {
              return false;
            }
            if (!_0x217a54(_0x9f35ce, _0x5014da, _0x25802a)) {
              return false;
            }
            if (_0x1afa1 === null) {
              _0x1afa1 = new Set();
            }
            _0x1afa1.add(_0x25802a);
          }
        }
        if (_0x1afa1 !== null) {
          var _0x1aaddd = _0x2e0d82(_0x5014da);
          for (var _0x225c89 = 0; _0x225c89 < _0x1aaddd.length; _0x225c89++) {
            var _0x4475d1 = _0x1aaddd[_0x225c89];
            if (_0x566884(_0x4475d1) === "object" && _0x4475d1 !== null) {
              if (!_0x52f318(_0x1afa1, _0x4475d1, _0x3193da, _0x1a0e87)) {
                return false;
              }
            } else if (!_0x3193da && !_0x9f35ce.has(_0x4475d1) && !_0x52f318(_0x1afa1, _0x4475d1, _0x3193da, _0x1a0e87)) {
              return false;
            }
          }
          return _0x1afa1.size === 0;
        }
        return true;
      }
      function _0x58dbab(_0x54b157, _0x1721f9, _0x458cc5, _0x5ea8c8, _0x3715eb, _0x6a28b9) {
        var _0x1d97ea = _0x2e0d82(_0x54b157);
        for (var _0x17560d = 0; _0x17560d < _0x1d97ea.length; _0x17560d++) {
          var _0x4bde06 = _0x1d97ea[_0x17560d];
          if (_0x379f87(_0x458cc5, _0x4bde06, _0x3715eb, _0x6a28b9) && _0x379f87(_0x5ea8c8, _0x1721f9.get(_0x4bde06), _0x3715eb, _0x6a28b9)) {
            _0x54b157.delete(_0x4bde06);
            return true;
          }
        }
        return false;
      }
      function _0x383a05(_0x2bca87, _0x1adca7, _0x83acca, _0x1a3464) {
        var _0x3ddf48 = null;
        var _0x43afaf = _0x4b7bac(_0x2bca87);
        for (var _0x1da215 = 0; _0x1da215 < _0x43afaf.length; _0x1da215++) {
          var _0x42a451 = _0x4c5c9c(_0x43afaf[_0x1da215], 2);
          var _0x51c388 = _0x42a451[0];
          var _0x4c0220 = _0x42a451[1];
          if (_0x566884(_0x51c388) === "object" && _0x51c388 !== null) {
            if (_0x3ddf48 === null) {
              _0x3ddf48 = new Set();
            }
            _0x3ddf48.add(_0x51c388);
          } else {
            var _0x171249 = _0x1adca7.get(_0x51c388);
            if (_0x171249 === undefined && !_0x1adca7.has(_0x51c388) || !_0x379f87(_0x4c0220, _0x171249, _0x83acca, _0x1a3464)) {
              if (_0x83acca) {
                return false;
              }
              if (!_0x46896b(_0x2bca87, _0x1adca7, _0x51c388, _0x4c0220, _0x1a3464)) {
                return false;
              }
              if (_0x3ddf48 === null) {
                _0x3ddf48 = new Set();
              }
              _0x3ddf48.add(_0x51c388);
            }
          }
        }
        if (_0x3ddf48 !== null) {
          var _0xd0585 = _0x4b7bac(_0x1adca7);
          for (var _0x43db49 = 0; _0x43db49 < _0xd0585.length; _0x43db49++) {
            var _0x430a80 = _0x4c5c9c(_0xd0585[_0x43db49], 2);
            var _0x51c388 = _0x430a80[0];
            var _0x4f61a6 = _0x430a80[1];
            if (_0x566884(_0x51c388) === "object" && _0x51c388 !== null) {
              if (!_0x58dbab(_0x3ddf48, _0x2bca87, _0x51c388, _0x4f61a6, _0x83acca, _0x1a3464)) {
                return false;
              }
            } else if (!_0x83acca && (!_0x2bca87.has(_0x51c388) || !_0x379f87(_0x2bca87.get(_0x51c388), _0x4f61a6, false, _0x1a3464)) && !_0x58dbab(_0x3ddf48, _0x2bca87, _0x51c388, _0x4f61a6, false, _0x1a3464)) {
              return false;
            }
          }
          return _0x3ddf48.size === 0;
        }
        return true;
      }
      function _0x1e6ec5(_0x17a7ef, _0x2c212b, _0x53b1a1, _0x41b34f, _0x1214d1, _0x15fdb0) {
        var _0x14dbce = 0;
        if (_0x15fdb0 === _0x806bbb) {
          if (!_0x5851b4(_0x17a7ef, _0x2c212b, _0x53b1a1, _0x1214d1)) {
            return false;
          }
        } else if (_0x15fdb0 === _0x187067) {
          if (!_0x383a05(_0x17a7ef, _0x2c212b, _0x53b1a1, _0x1214d1)) {
            return false;
          }
        } else if (_0x15fdb0 === _0x22cb77) {
          for (; _0x14dbce < _0x17a7ef.length; _0x14dbce++) {
            if (_0x5d8e79(_0x17a7ef, _0x14dbce)) {
              if (!_0x5d8e79(_0x2c212b, _0x14dbce) || !_0x379f87(_0x17a7ef[_0x14dbce], _0x2c212b[_0x14dbce], _0x53b1a1, _0x1214d1)) {
                return false;
              }
            } else if (_0x5d8e79(_0x2c212b, _0x14dbce)) {
              return false;
            } else {
              var _0x1cd96f = Object.keys(_0x17a7ef);
              for (; _0x14dbce < _0x1cd96f.length; _0x14dbce++) {
                var _0x42654e = _0x1cd96f[_0x14dbce];
                if (!_0x5d8e79(_0x2c212b, _0x42654e) || !_0x379f87(_0x17a7ef[_0x42654e], _0x2c212b[_0x42654e], _0x53b1a1, _0x1214d1)) {
                  return false;
                }
              }
              if (_0x1cd96f.length !== Object.keys(_0x2c212b).length) {
                return false;
              }
              return true;
            }
          }
        }
        for (_0x14dbce = 0; _0x14dbce < _0x41b34f.length; _0x14dbce++) {
          var _0x325372 = _0x41b34f[_0x14dbce];
          if (!_0x379f87(_0x17a7ef[_0x325372], _0x2c212b[_0x325372], _0x53b1a1, _0x1214d1)) {
            return false;
          }
        }
        return true;
      }
      function _0xc837dd(_0x566840, _0x2d0d68) {
        return _0x379f87(_0x566840, _0x2d0d68, _0x18575a);
      }
      function _0x3201af(_0x4af479, _0x5d9bf0) {
        return _0x379f87(_0x4af479, _0x5d9bf0, _0x26761d);
      }
      var _0xccb924 = {
        isDeepEqual: _0xc837dd,
        isDeepStrictEqual: _0x3201af
      };
      _0x145876.exports = _0xccb924;
    },
    314: (_0x3500ef, _0x4a3f99) => {
      'use strict';

      _0x4a3f99.byteLength = _0x3bcbab;
      _0x4a3f99.toByteArray = _0xad3562;
      _0x4a3f99.fromByteArray = _0x543be7;
      var _0x3c7e81 = [];
      var _0x30d564 = [];
      var _0x48cd9b = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
      var _0x236ac2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      for (var _0x2ced49 = 0, _0xe7d352 = _0x236ac2.length; _0x2ced49 < _0xe7d352; ++_0x2ced49) {
        _0x3c7e81[_0x2ced49] = _0x236ac2[_0x2ced49];
        _0x30d564[_0x236ac2.charCodeAt(_0x2ced49)] = _0x2ced49;
      }
      _0x30d564["-".charCodeAt(0)] = 62;
      _0x30d564["_".charCodeAt(0)] = 63;
      function _0x1b9939(_0x515df6) {
        var _0x4fca86 = _0x515df6.length;
        if (_0x4fca86 % 4 > 0) {
          throw new Error("Invalid string. Length must be a multiple of 4");
        }
        var _0x554473 = _0x515df6.indexOf("=");
        if (_0x554473 === -1) {
          _0x554473 = _0x4fca86;
        }
        var _0x3ee3df = _0x554473 === _0x4fca86 ? 0 : 4 - _0x554473 % 4;
        return [_0x554473, _0x3ee3df];
      }
      function _0x3bcbab(_0x54b8e0) {
        var _0x228c6b = _0x1b9939(_0x54b8e0);
        var _0x4ed7ea = _0x228c6b[0];
        var _0x41f183 = _0x228c6b[1];
        return (_0x4ed7ea + _0x41f183) * 3 / 4 - _0x41f183;
      }
      function _0x50f735(_0x39cc80, _0x43180c, _0x870aad) {
        return (_0x43180c + _0x870aad) * 3 / 4 - _0x870aad;
      }
      function _0xad3562(_0x76e570) {
        var _0x5da492;
        var _0x3aa9f4 = _0x1b9939(_0x76e570);
        var _0x4e853d = _0x3aa9f4[0];
        var _0x373b1a = _0x3aa9f4[1];
        var _0x5edad0 = new _0x48cd9b(_0x50f735(_0x76e570, _0x4e853d, _0x373b1a));
        var _0x29bc42 = 0;
        var _0x31f363 = _0x373b1a > 0 ? _0x4e853d - 4 : _0x4e853d;
        var _0x4f780f;
        for (_0x4f780f = 0; _0x4f780f < _0x31f363; _0x4f780f += 4) {
          _0x5da492 = _0x30d564[_0x76e570.charCodeAt(_0x4f780f)] << 18 | _0x30d564[_0x76e570.charCodeAt(_0x4f780f + 1)] << 12 | _0x30d564[_0x76e570.charCodeAt(_0x4f780f + 2)] << 6 | _0x30d564[_0x76e570.charCodeAt(_0x4f780f + 3)];
          _0x5edad0[_0x29bc42++] = _0x5da492 >> 16 & 255;
          _0x5edad0[_0x29bc42++] = _0x5da492 >> 8 & 255;
          _0x5edad0[_0x29bc42++] = _0x5da492 & 255;
        }
        if (_0x373b1a === 2) {
          _0x5da492 = _0x30d564[_0x76e570.charCodeAt(_0x4f780f)] << 2 | _0x30d564[_0x76e570.charCodeAt(_0x4f780f + 1)] >> 4;
          _0x5edad0[_0x29bc42++] = _0x5da492 & 255;
        }
        if (_0x373b1a === 1) {
          _0x5da492 = _0x30d564[_0x76e570.charCodeAt(_0x4f780f)] << 10 | _0x30d564[_0x76e570.charCodeAt(_0x4f780f + 1)] << 4 | _0x30d564[_0x76e570.charCodeAt(_0x4f780f + 2)] >> 2;
          _0x5edad0[_0x29bc42++] = _0x5da492 >> 8 & 255;
          _0x5edad0[_0x29bc42++] = _0x5da492 & 255;
        }
        return _0x5edad0;
      }
      function _0x18ca7a(_0x39f49) {
        return _0x3c7e81[_0x39f49 >> 18 & 63] + _0x3c7e81[_0x39f49 >> 12 & 63] + _0x3c7e81[_0x39f49 >> 6 & 63] + _0x3c7e81[_0x39f49 & 63];
      }
      function _0x547b79(_0x140088, _0x4fec38, _0x22515e) {
        var _0x4943ed;
        var _0x759e96 = [];
        for (var _0x5f20e0 = _0x4fec38; _0x5f20e0 < _0x22515e; _0x5f20e0 += 3) {
          _0x4943ed = (_0x140088[_0x5f20e0] << 16 & 16711680) + (_0x140088[_0x5f20e0 + 1] << 8 & 65280) + (_0x140088[_0x5f20e0 + 2] & 255);
          _0x759e96.push(_0x18ca7a(_0x4943ed));
        }
        return _0x759e96.join("");
      }
      function _0x543be7(_0x218f1a) {
        var _0x23c019;
        var _0x3d6ea8 = _0x218f1a.length;
        var _0x4a887f = _0x3d6ea8 % 3;
        var _0x2899f1 = [];
        var _0x49ed47 = 16383;
        for (var _0x3b08ce = 0, _0x226672 = _0x3d6ea8 - _0x4a887f; _0x3b08ce < _0x226672; _0x3b08ce += _0x49ed47) {
          _0x2899f1.push(_0x547b79(_0x218f1a, _0x3b08ce, _0x3b08ce + _0x49ed47 > _0x226672 ? _0x226672 : _0x3b08ce + _0x49ed47));
        }
        if (_0x4a887f === 1) {
          _0x23c019 = _0x218f1a[_0x3d6ea8 - 1];
          _0x2899f1.push(_0x3c7e81[_0x23c019 >> 2] + _0x3c7e81[_0x23c019 << 4 & 63] + "==");
        } else if (_0x4a887f === 2) {
          _0x23c019 = (_0x218f1a[_0x3d6ea8 - 2] << 8) + _0x218f1a[_0x3d6ea8 - 1];
          _0x2899f1.push(_0x3c7e81[_0x23c019 >> 10] + _0x3c7e81[_0x23c019 >> 4 & 63] + _0x3c7e81[_0x23c019 << 2 & 63] + "=");
        }
        return _0x2899f1.join("");
      }
    },
    449: (_0x4a7d40, _0x5b88dd, _0x4ca0af) => {
      'use strict';

      var _0x3bc8b4;
      var _0x5ed888 = _0x4ca0af(480);
      /*!
      * The buffer module from node.js, for the browser.
      *
      * @author   Feross Aboukhadijeh <https://feross.org>
      * @license  MIT
      */
      const _0x3d0df3 = _0x4ca0af(314);
      const _0x264ecc = _0x4ca0af(503);
      const _0x368d61 = typeof Symbol === "function" && typeof Symbol.for === "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
      _0x5b88dd.lW = _0x2d4f7a;
      _0x3bc8b4 = _0x55d237;
      _0x5b88dd.h2 = 50;
      const _0x2d306b = 2147483647;
      _0x3bc8b4 = _0x2d306b;
      _0x2d4f7a.TYPED_ARRAY_SUPPORT = _0x236687();
      if (!_0x2d4f7a.TYPED_ARRAY_SUPPORT && typeof _0x5ed888 !== "undefined" && typeof _0x5ed888.error === "function") {
        _0x5ed888.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
      }
      function _0x236687() {
        try {
          const _0x5576eb = new Uint8Array(1);
          const _0x2c9322 = {
            foo: function () {
              return 42;
            }
          };
          Object.setPrototypeOf(_0x2c9322, Uint8Array.prototype);
          Object.setPrototypeOf(_0x5576eb, _0x2c9322);
          return _0x5576eb.foo() === 42;
        } catch (_0x29036f) {
          return false;
        }
      }
      Object.defineProperty(_0x2d4f7a.prototype, "parent", {
        enumerable: true,
        get: function () {
          if (!_0x2d4f7a.isBuffer(this)) {
            return undefined;
          }
          return this.buffer;
        }
      });
      Object.defineProperty(_0x2d4f7a.prototype, "offset", {
        enumerable: true,
        get: function () {
          if (!_0x2d4f7a.isBuffer(this)) {
            return undefined;
          }
          return this.byteOffset;
        }
      });
      function _0x2a464f(_0x1971c9) {
        if (_0x1971c9 > _0x2d306b) {
          throw new RangeError("The value \"" + _0x1971c9 + "\" is invalid for option \"size\"");
        }
        const _0xcf49ad = new Uint8Array(_0x1971c9);
        Object.setPrototypeOf(_0xcf49ad, _0x2d4f7a.prototype);
        return _0xcf49ad;
      }
      function _0x2d4f7a(_0x14224e, _0x1394ca, _0x35910f) {
        if (typeof _0x14224e === "number") {
          if (typeof _0x1394ca === "string") {
            throw new TypeError("The \"string\" argument must be of type string. Received type number");
          }
          return _0x25fc7e(_0x14224e);
        }
        return _0x308da6(_0x14224e, _0x1394ca, _0x35910f);
      }
      _0x2d4f7a.poolSize = 8192;
      function _0x308da6(_0x343099, _0x5b8c0f, _0x258201) {
        if (typeof _0x343099 === "string") {
          return _0x1ebfa9(_0x343099, _0x5b8c0f);
        }
        if (ArrayBuffer.isView(_0x343099)) {
          return _0x3de39e(_0x343099);
        }
        if (_0x343099 == null) {
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _0x343099);
        }
        if (_0x1fffa2(_0x343099, ArrayBuffer) || _0x343099 && _0x1fffa2(_0x343099.buffer, ArrayBuffer)) {
          return _0x10fa13(_0x343099, _0x5b8c0f, _0x258201);
        }
        if (typeof SharedArrayBuffer !== "undefined" && (_0x1fffa2(_0x343099, SharedArrayBuffer) || _0x343099 && _0x1fffa2(_0x343099.buffer, SharedArrayBuffer))) {
          return _0x10fa13(_0x343099, _0x5b8c0f, _0x258201);
        }
        if (typeof _0x343099 === "number") {
          throw new TypeError("The \"value\" argument must not be of type number. Received type number");
        }
        const _0x298e43 = _0x343099.valueOf && _0x343099.valueOf();
        if (_0x298e43 != null && _0x298e43 !== _0x343099) {
          return _0x2d4f7a.from(_0x298e43, _0x5b8c0f, _0x258201);
        }
        const _0x464749 = _0x4aa188(_0x343099);
        if (_0x464749) {
          return _0x464749;
        }
        if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof _0x343099[Symbol.toPrimitive] === "function") {
          return _0x2d4f7a.from(_0x343099[Symbol.toPrimitive]("string"), _0x5b8c0f, _0x258201);
        }
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof _0x343099);
      }
      _0x2d4f7a.from = function (_0x4a9dae, _0x45a167, _0x5d799f) {
        return _0x308da6(_0x4a9dae, _0x45a167, _0x5d799f);
      };
      Object.setPrototypeOf(_0x2d4f7a.prototype, Uint8Array.prototype);
      Object.setPrototypeOf(_0x2d4f7a, Uint8Array);
      function _0x2accdc(_0x34183d) {
        if (typeof _0x34183d !== "number") {
          throw new TypeError("\"size\" argument must be of type number");
        } else if (_0x34183d < 0) {
          throw new RangeError("The value \"" + _0x34183d + "\" is invalid for option \"size\"");
        }
      }
      function _0x219f49(_0x433026, _0x344b32, _0x29ed6c) {
        _0x2accdc(_0x433026);
        if (_0x433026 <= 0) {
          return _0x2a464f(_0x433026);
        }
        if (_0x344b32 !== undefined) {
          if (typeof _0x29ed6c === "string") {
            return _0x2a464f(_0x433026).fill(_0x344b32, _0x29ed6c);
          } else {
            return _0x2a464f(_0x433026).fill(_0x344b32);
          }
        }
        return _0x2a464f(_0x433026);
      }
      _0x2d4f7a.alloc = function (_0x565a93, _0x2c9117, _0x4fced5) {
        return _0x219f49(_0x565a93, _0x2c9117, _0x4fced5);
      };
      function _0x25fc7e(_0x287240) {
        _0x2accdc(_0x287240);
        return _0x2a464f(_0x287240 < 0 ? 0 : _0x36ed82(_0x287240) | 0);
      }
      _0x2d4f7a.allocUnsafe = function (_0x36cc3e) {
        return _0x25fc7e(_0x36cc3e);
      };
      _0x2d4f7a.allocUnsafeSlow = function (_0x271252) {
        return _0x25fc7e(_0x271252);
      };
      function _0x1ebfa9(_0xe3a723, _0x596362) {
        if (typeof _0x596362 !== "string" || _0x596362 === "") {
          _0x596362 = "utf8";
        }
        if (!_0x2d4f7a.isEncoding(_0x596362)) {
          throw new TypeError("Unknown encoding: " + _0x596362);
        }
        const _0x55ab02 = _0x5b0c49(_0xe3a723, _0x596362) | 0;
        let _0x4cc66b = _0x2a464f(_0x55ab02);
        const _0x37aab1 = _0x4cc66b.write(_0xe3a723, _0x596362);
        if (_0x37aab1 !== _0x55ab02) {
          _0x4cc66b = _0x4cc66b.slice(0, _0x37aab1);
        }
        return _0x4cc66b;
      }
      function _0x171cb2(_0x2287b7) {
        const _0xba8c82 = _0x2287b7.length < 0 ? 0 : _0x36ed82(_0x2287b7.length) | 0;
        const _0x2ff817 = _0x2a464f(_0xba8c82);
        for (let _0x3d97cd = 0; _0x3d97cd < _0xba8c82; _0x3d97cd += 1) {
          _0x2ff817[_0x3d97cd] = _0x2287b7[_0x3d97cd] & 255;
        }
        return _0x2ff817;
      }
      function _0x3de39e(_0x389c42) {
        if (_0x1fffa2(_0x389c42, Uint8Array)) {
          const _0x25dd29 = new Uint8Array(_0x389c42);
          return _0x10fa13(_0x25dd29.buffer, _0x25dd29.byteOffset, _0x25dd29.byteLength);
        }
        return _0x171cb2(_0x389c42);
      }
      function _0x10fa13(_0x4f5c0e, _0x27569e, _0x14cd9d) {
        if (_0x27569e < 0 || _0x4f5c0e.byteLength < _0x27569e) {
          throw new RangeError("\"offset\" is outside of buffer bounds");
        }
        if (_0x4f5c0e.byteLength < _0x27569e + (_0x14cd9d || 0)) {
          throw new RangeError("\"length\" is outside of buffer bounds");
        }
        let _0x313236;
        if (_0x27569e === undefined && _0x14cd9d === undefined) {
          _0x313236 = new Uint8Array(_0x4f5c0e);
        } else if (_0x14cd9d === undefined) {
          _0x313236 = new Uint8Array(_0x4f5c0e, _0x27569e);
        } else {
          _0x313236 = new Uint8Array(_0x4f5c0e, _0x27569e, _0x14cd9d);
        }
        Object.setPrototypeOf(_0x313236, _0x2d4f7a.prototype);
        return _0x313236;
      }
      function _0x4aa188(_0x86488a) {
        if (_0x2d4f7a.isBuffer(_0x86488a)) {
          const _0x19baac = _0x36ed82(_0x86488a.length) | 0;
          const _0x309912 = _0x2a464f(_0x19baac);
          if (_0x309912.length === 0) {
            return _0x309912;
          }
          _0x86488a.copy(_0x309912, 0, 0, _0x19baac);
          return _0x309912;
        }
        if (_0x86488a.length !== undefined) {
          if (typeof _0x86488a.length !== "number" || _0x4af45b(_0x86488a.length)) {
            return _0x2a464f(0);
          }
          return _0x171cb2(_0x86488a);
        }
        if (_0x86488a.type === "Buffer" && Array.isArray(_0x86488a.data)) {
          return _0x171cb2(_0x86488a.data);
        }
      }
      function _0x36ed82(_0x250d59) {
        if (_0x250d59 >= _0x2d306b) {
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + _0x2d306b.toString(16) + " bytes");
        }
        return _0x250d59 | 0;
      }
      function _0x55d237(_0x2bce53) {
        if (+_0x2bce53 != _0x2bce53) {
          _0x2bce53 = 0;
        }
        return _0x2d4f7a.alloc(+_0x2bce53);
      }
      _0x2d4f7a.isBuffer = function _0x568dc9(_0x14eacd) {
        return _0x14eacd != null && _0x14eacd._isBuffer === true && _0x14eacd !== _0x2d4f7a.prototype;
      };
      _0x2d4f7a.compare = function _0x529b06(_0x4149a4, _0x1b2411) {
        if (_0x1fffa2(_0x4149a4, Uint8Array)) {
          _0x4149a4 = _0x2d4f7a.from(_0x4149a4, _0x4149a4.offset, _0x4149a4.byteLength);
        }
        if (_0x1fffa2(_0x1b2411, Uint8Array)) {
          _0x1b2411 = _0x2d4f7a.from(_0x1b2411, _0x1b2411.offset, _0x1b2411.byteLength);
        }
        if (!_0x2d4f7a.isBuffer(_0x4149a4) || !_0x2d4f7a.isBuffer(_0x1b2411)) {
          throw new TypeError("The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array");
        }
        if (_0x4149a4 === _0x1b2411) {
          return 0;
        }
        let _0x2f2156 = _0x4149a4.length;
        let _0x3e2752 = _0x1b2411.length;
        for (let _0x12ed65 = 0, _0x3dfcbe = Math.min(_0x2f2156, _0x3e2752); _0x12ed65 < _0x3dfcbe; ++_0x12ed65) {
          if (_0x4149a4[_0x12ed65] !== _0x1b2411[_0x12ed65]) {
            _0x2f2156 = _0x4149a4[_0x12ed65];
            _0x3e2752 = _0x1b2411[_0x12ed65];
            break;
          }
        }
        if (_0x2f2156 < _0x3e2752) {
          return -1;
        }
        if (_0x3e2752 < _0x2f2156) {
          return 1;
        }
        return 0;
      };
      _0x2d4f7a.isEncoding = function _0x2b24fb(_0x5cdc54) {
        switch (String(_0x5cdc54).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      };
      _0x2d4f7a.concat = function _0x11bbbd(_0x5dcdac, _0x258c69) {
        if (!Array.isArray(_0x5dcdac)) {
          throw new TypeError("\"list\" argument must be an Array of Buffers");
        }
        if (_0x5dcdac.length === 0) {
          return _0x2d4f7a.alloc(0);
        }
        let _0x395564;
        if (_0x258c69 === undefined) {
          _0x258c69 = 0;
          for (_0x395564 = 0; _0x395564 < _0x5dcdac.length; ++_0x395564) {
            _0x258c69 += _0x5dcdac[_0x395564].length;
          }
        }
        const _0xa80deb = _0x2d4f7a.allocUnsafe(_0x258c69);
        let _0x3f4219 = 0;
        for (_0x395564 = 0; _0x395564 < _0x5dcdac.length; ++_0x395564) {
          let _0x54a310 = _0x5dcdac[_0x395564];
          if (_0x1fffa2(_0x54a310, Uint8Array)) {
            if (_0x3f4219 + _0x54a310.length > _0xa80deb.length) {
              if (!_0x2d4f7a.isBuffer(_0x54a310)) {
                _0x54a310 = _0x2d4f7a.from(_0x54a310);
              }
              _0x54a310.copy(_0xa80deb, _0x3f4219);
            } else {
              Uint8Array.prototype.set.call(_0xa80deb, _0x54a310, _0x3f4219);
            }
          } else if (!_0x2d4f7a.isBuffer(_0x54a310)) {
            throw new TypeError("\"list\" argument must be an Array of Buffers");
          } else {
            _0x54a310.copy(_0xa80deb, _0x3f4219);
          }
          _0x3f4219 += _0x54a310.length;
        }
        return _0xa80deb;
      };
      function _0x5b0c49(_0x2c849a, _0x21ba33) {
        if (_0x2d4f7a.isBuffer(_0x2c849a)) {
          return _0x2c849a.length;
        }
        if (ArrayBuffer.isView(_0x2c849a) || _0x1fffa2(_0x2c849a, ArrayBuffer)) {
          return _0x2c849a.byteLength;
        }
        if (typeof _0x2c849a !== "string") {
          throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof _0x2c849a);
        }
        const _0x74912e = _0x2c849a.length;
        const _0x1e303f = arguments.length > 2 && arguments[2] === true;
        if (!_0x1e303f && _0x74912e === 0) {
          return 0;
        }
        let _0x4dd7d9 = false;
        for (;;) {
          switch (_0x21ba33) {
            case "ascii":
            case "latin1":
            case "binary":
              return _0x74912e;
            case "utf8":
            case "utf-8":
              return _0x1eaf58(_0x2c849a).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return _0x74912e * 2;
            case "hex":
              return _0x74912e >>> 1;
            case "base64":
              return _0x334829(_0x2c849a).length;
            default:
              if (_0x4dd7d9) {
                if (_0x1e303f) {
                  return -1;
                } else {
                  return _0x1eaf58(_0x2c849a).length;
                }
              }
              _0x21ba33 = ("" + _0x21ba33).toLowerCase();
              _0x4dd7d9 = true;
          }
        }
      }
      _0x2d4f7a.byteLength = _0x5b0c49;
      function _0x926dce(_0x483b73, _0x2bec2b, _0x5a9554) {
        let _0x274e7c = false;
        if (_0x2bec2b === undefined || _0x2bec2b < 0) {
          _0x2bec2b = 0;
        }
        if (_0x2bec2b > this.length) {
          return "";
        }
        if (_0x5a9554 === undefined || _0x5a9554 > this.length) {
          _0x5a9554 = this.length;
        }
        if (_0x5a9554 <= 0) {
          return "";
        }
        _0x5a9554 >>>= 0;
        _0x2bec2b >>>= 0;
        if (_0x5a9554 <= _0x2bec2b) {
          return "";
        }
        if (!_0x483b73) {
          _0x483b73 = "utf8";
        }
        while (true) {
          switch (_0x483b73) {
            case "hex":
              return _0x34d0c2(this, _0x2bec2b, _0x5a9554);
            case "utf8":
            case "utf-8":
              return _0x5eb087(this, _0x2bec2b, _0x5a9554);
            case "ascii":
              return _0x206813(this, _0x2bec2b, _0x5a9554);
            case "latin1":
            case "binary":
              return _0xd27616(this, _0x2bec2b, _0x5a9554);
            case "base64":
              return _0x572b7e(this, _0x2bec2b, _0x5a9554);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return _0x2b6f06(this, _0x2bec2b, _0x5a9554);
            default:
              if (_0x274e7c) {
                throw new TypeError("Unknown encoding: " + _0x483b73);
              }
              _0x483b73 = (_0x483b73 + "").toLowerCase();
              _0x274e7c = true;
          }
        }
      }
      _0x2d4f7a.prototype._isBuffer = true;
      function _0x2db4fa(_0x5c306b, _0x39f41d, _0x5473b0) {
        const _0x33358c = _0x5c306b[_0x39f41d];
        _0x5c306b[_0x39f41d] = _0x5c306b[_0x5473b0];
        _0x5c306b[_0x5473b0] = _0x33358c;
      }
      _0x2d4f7a.prototype.swap16 = function _0x3088ee() {
        const _0x22e400 = this.length;
        if (_0x22e400 % 2 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for (let _0x39f547 = 0; _0x39f547 < _0x22e400; _0x39f547 += 2) {
          _0x2db4fa(this, _0x39f547, _0x39f547 + 1);
        }
        return this;
      };
      _0x2d4f7a.prototype.swap32 = function _0xcd7c7c() {
        const _0x3456ca = this.length;
        if (_0x3456ca % 4 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for (let _0x43ad61 = 0; _0x43ad61 < _0x3456ca; _0x43ad61 += 4) {
          _0x2db4fa(this, _0x43ad61, _0x43ad61 + 3);
          _0x2db4fa(this, _0x43ad61 + 1, _0x43ad61 + 2);
        }
        return this;
      };
      _0x2d4f7a.prototype.swap64 = function _0x3dc090() {
        const _0x29a13a = this.length;
        if (_0x29a13a % 8 !== 0) {
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for (let _0x43ecbf = 0; _0x43ecbf < _0x29a13a; _0x43ecbf += 8) {
          _0x2db4fa(this, _0x43ecbf, _0x43ecbf + 7);
          _0x2db4fa(this, _0x43ecbf + 1, _0x43ecbf + 6);
          _0x2db4fa(this, _0x43ecbf + 2, _0x43ecbf + 5);
          _0x2db4fa(this, _0x43ecbf + 3, _0x43ecbf + 4);
        }
        return this;
      };
      _0x2d4f7a.prototype.toString = function _0x57734d() {
        const _0x23500b = this.length;
        if (_0x23500b === 0) {
          return "";
        }
        if (arguments.length === 0) {
          return _0x5eb087(this, 0, _0x23500b);
        }
        return _0x926dce.apply(this, arguments);
      };
      _0x2d4f7a.prototype.toLocaleString = _0x2d4f7a.prototype.toString;
      _0x2d4f7a.prototype.equals = function _0x20d8bd(_0x1b19f6) {
        if (!_0x2d4f7a.isBuffer(_0x1b19f6)) {
          throw new TypeError("Argument must be a Buffer");
        }
        if (this === _0x1b19f6) {
          return true;
        }
        return _0x2d4f7a.compare(this, _0x1b19f6) === 0;
      };
      _0x2d4f7a.prototype.inspect = function _0x25aada() {
        let _0x217393 = "";
        const _0x1528c8 = _0x5b88dd.h2;
        _0x217393 = this.toString("hex", 0, _0x1528c8).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > _0x1528c8) {
          _0x217393 += " ... ";
        }
        return "<Buffer " + _0x217393 + ">";
      };
      if (_0x368d61) {
        _0x2d4f7a.prototype[_0x368d61] = _0x2d4f7a.prototype.inspect;
      }
      _0x2d4f7a.prototype.compare = function _0x59b78e(_0x412411, _0x13b9ee, _0x53e01d, _0x5632dd, _0x5db1b3) {
        if (_0x1fffa2(_0x412411, Uint8Array)) {
          _0x412411 = _0x2d4f7a.from(_0x412411, _0x412411.offset, _0x412411.byteLength);
        }
        if (!_0x2d4f7a.isBuffer(_0x412411)) {
          throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof _0x412411);
        }
        if (_0x13b9ee === undefined) {
          _0x13b9ee = 0;
        }
        if (_0x53e01d === undefined) {
          _0x53e01d = _0x412411 ? _0x412411.length : 0;
        }
        if (_0x5632dd === undefined) {
          _0x5632dd = 0;
        }
        if (_0x5db1b3 === undefined) {
          _0x5db1b3 = this.length;
        }
        if (_0x13b9ee < 0 || _0x53e01d > _0x412411.length || _0x5632dd < 0 || _0x5db1b3 > this.length) {
          throw new RangeError("out of range index");
        }
        if (_0x5632dd >= _0x5db1b3 && _0x13b9ee >= _0x53e01d) {
          return 0;
        }
        if (_0x5632dd >= _0x5db1b3) {
          return -1;
        }
        if (_0x13b9ee >= _0x53e01d) {
          return 1;
        }
        _0x13b9ee >>>= 0;
        _0x53e01d >>>= 0;
        _0x5632dd >>>= 0;
        _0x5db1b3 >>>= 0;
        if (this === _0x412411) {
          return 0;
        }
        let _0x40370b = _0x5db1b3 - _0x5632dd;
        let _0x407cc2 = _0x53e01d - _0x13b9ee;
        const _0xa679ec = Math.min(_0x40370b, _0x407cc2);
        const _0x4c7163 = this.slice(_0x5632dd, _0x5db1b3);
        const _0x28bad6 = _0x412411.slice(_0x13b9ee, _0x53e01d);
        for (let _0x334eb2 = 0; _0x334eb2 < _0xa679ec; ++_0x334eb2) {
          if (_0x4c7163[_0x334eb2] !== _0x28bad6[_0x334eb2]) {
            _0x40370b = _0x4c7163[_0x334eb2];
            _0x407cc2 = _0x28bad6[_0x334eb2];
            break;
          }
        }
        if (_0x40370b < _0x407cc2) {
          return -1;
        }
        if (_0x407cc2 < _0x40370b) {
          return 1;
        }
        return 0;
      };
      function _0x9ed383(_0x3a5724, _0x32ade1, _0x41e03b, _0x459008, _0x345173) {
        if (_0x3a5724.length === 0) {
          return -1;
        }
        if (typeof _0x41e03b === "string") {
          _0x459008 = _0x41e03b;
          _0x41e03b = 0;
        } else if (_0x41e03b > 2147483647) {
          _0x41e03b = 2147483647;
        } else if (_0x41e03b < -2147483648) {
          _0x41e03b = -2147483648;
        }
        _0x41e03b = +_0x41e03b;
        if (_0x4af45b(_0x41e03b)) {
          _0x41e03b = _0x345173 ? 0 : _0x3a5724.length - 1;
        }
        if (_0x41e03b < 0) {
          _0x41e03b = _0x3a5724.length + _0x41e03b;
        }
        if (_0x41e03b >= _0x3a5724.length) {
          if (_0x345173) {
            return -1;
          } else {
            _0x41e03b = _0x3a5724.length - 1;
          }
        } else if (_0x41e03b < 0) {
          if (_0x345173) {
            _0x41e03b = 0;
          } else {
            return -1;
          }
        }
        if (typeof _0x32ade1 === "string") {
          _0x32ade1 = _0x2d4f7a.from(_0x32ade1, _0x459008);
        }
        if (_0x2d4f7a.isBuffer(_0x32ade1)) {
          if (_0x32ade1.length === 0) {
            return -1;
          }
          return _0x34c042(_0x3a5724, _0x32ade1, _0x41e03b, _0x459008, _0x345173);
        } else if (typeof _0x32ade1 === "number") {
          _0x32ade1 = _0x32ade1 & 255;
          if (typeof Uint8Array.prototype.indexOf === "function") {
            if (_0x345173) {
              return Uint8Array.prototype.indexOf.call(_0x3a5724, _0x32ade1, _0x41e03b);
            } else {
              return Uint8Array.prototype.lastIndexOf.call(_0x3a5724, _0x32ade1, _0x41e03b);
            }
          }
          return _0x34c042(_0x3a5724, [_0x32ade1], _0x41e03b, _0x459008, _0x345173);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function _0x34c042(_0x20c4e4, _0x5def2a, _0x13a5e6, _0x550195, _0x32859f) {
        let _0x514936 = 1;
        let _0x324532 = _0x20c4e4.length;
        let _0x9f036c = _0x5def2a.length;
        if (_0x550195 !== undefined) {
          _0x550195 = String(_0x550195).toLowerCase();
          if (_0x550195 === "ucs2" || _0x550195 === "ucs-2" || _0x550195 === "utf16le" || _0x550195 === "utf-16le") {
            if (_0x20c4e4.length < 2 || _0x5def2a.length < 2) {
              return -1;
            }
            _0x514936 = 2;
            _0x324532 /= 2;
            _0x9f036c /= 2;
            _0x13a5e6 /= 2;
          }
        }
        function _0x57617c(_0x35f0ba, _0x230908) {
          if (_0x514936 === 1) {
            return _0x35f0ba[_0x230908];
          } else {
            return _0x35f0ba.readUInt16BE(_0x230908 * _0x514936);
          }
        }
        let _0x4c3da5;
        if (_0x32859f) {
          let _0x24ad1d = -1;
          for (_0x4c3da5 = _0x13a5e6; _0x4c3da5 < _0x324532; _0x4c3da5++) {
            if (_0x57617c(_0x20c4e4, _0x4c3da5) === _0x57617c(_0x5def2a, _0x24ad1d === -1 ? 0 : _0x4c3da5 - _0x24ad1d)) {
              if (_0x24ad1d === -1) {
                _0x24ad1d = _0x4c3da5;
              }
              if (_0x4c3da5 - _0x24ad1d + 1 === _0x9f036c) {
                return _0x24ad1d * _0x514936;
              }
            } else {
              if (_0x24ad1d !== -1) {
                _0x4c3da5 -= _0x4c3da5 - _0x24ad1d;
              }
              _0x24ad1d = -1;
            }
          }
        } else {
          if (_0x13a5e6 + _0x9f036c > _0x324532) {
            _0x13a5e6 = _0x324532 - _0x9f036c;
          }
          for (_0x4c3da5 = _0x13a5e6; _0x4c3da5 >= 0; _0x4c3da5--) {
            let _0x57686f = true;
            for (let _0x2fbddf = 0; _0x2fbddf < _0x9f036c; _0x2fbddf++) {
              if (_0x57617c(_0x20c4e4, _0x4c3da5 + _0x2fbddf) !== _0x57617c(_0x5def2a, _0x2fbddf)) {
                _0x57686f = false;
                break;
              }
            }
            if (_0x57686f) {
              return _0x4c3da5;
            }
          }
        }
        return -1;
      }
      _0x2d4f7a.prototype.includes = function _0xdc97bd(_0x20f637, _0x146eb2, _0x251376) {
        return this.indexOf(_0x20f637, _0x146eb2, _0x251376) !== -1;
      };
      _0x2d4f7a.prototype.indexOf = function _0x11a4fd(_0x5e7f73, _0x59214d, _0x1bb795) {
        return _0x9ed383(this, _0x5e7f73, _0x59214d, _0x1bb795, true);
      };
      _0x2d4f7a.prototype.lastIndexOf = function _0x90843b(_0xcbbe, _0x21f987, _0x508616) {
        return _0x9ed383(this, _0xcbbe, _0x21f987, _0x508616, false);
      };
      function _0x5860e8(_0x500180, _0x17b9e6, _0x499f88, _0x12c0dc) {
        _0x499f88 = Number(_0x499f88) || 0;
        const _0x3f15fa = _0x500180.length - _0x499f88;
        if (!_0x12c0dc) {
          _0x12c0dc = _0x3f15fa;
        } else {
          _0x12c0dc = Number(_0x12c0dc);
          if (_0x12c0dc > _0x3f15fa) {
            _0x12c0dc = _0x3f15fa;
          }
        }
        const _0x588d24 = _0x17b9e6.length;
        if (_0x12c0dc > _0x588d24 / 2) {
          _0x12c0dc = _0x588d24 / 2;
        }
        let _0x54085f;
        for (_0x54085f = 0; _0x54085f < _0x12c0dc; ++_0x54085f) {
          const _0x1dfe72 = parseInt(_0x17b9e6.substr(_0x54085f * 2, 2), 16);
          if (_0x4af45b(_0x1dfe72)) {
            return _0x54085f;
          }
          _0x500180[_0x499f88 + _0x54085f] = _0x1dfe72;
        }
        return _0x54085f;
      }
      function _0xdccacf(_0x30181d, _0x428266, _0x542937, _0x396396) {
        return _0xf90a91(_0x1eaf58(_0x428266, _0x30181d.length - _0x542937), _0x30181d, _0x542937, _0x396396);
      }
      function _0x80f7d4(_0x26c39c, _0x2b8e4a, _0x28c77f, _0xf4d9cd) {
        return _0xf90a91(_0x1c8b71(_0x2b8e4a), _0x26c39c, _0x28c77f, _0xf4d9cd);
      }
      function _0x53f9b0(_0x320bb1, _0x2caa70, _0x2182bb, _0x1fb5ad) {
        return _0xf90a91(_0x334829(_0x2caa70), _0x320bb1, _0x2182bb, _0x1fb5ad);
      }
      function _0x46f5ca(_0x340133, _0x14ee5c, _0x19135e, _0x3de857) {
        return _0xf90a91(_0x19354a(_0x14ee5c, _0x340133.length - _0x19135e), _0x340133, _0x19135e, _0x3de857);
      }
      _0x2d4f7a.prototype.write = function _0x1108a6(_0x5afac7, _0xa76559, _0x131b95, _0x677d53) {
        if (_0xa76559 === undefined) {
          _0x677d53 = "utf8";
          _0x131b95 = this.length;
          _0xa76559 = 0;
        } else if (_0x131b95 === undefined && typeof _0xa76559 === "string") {
          _0x677d53 = _0xa76559;
          _0x131b95 = this.length;
          _0xa76559 = 0;
        } else if (isFinite(_0xa76559)) {
          _0xa76559 = _0xa76559 >>> 0;
          if (isFinite(_0x131b95)) {
            _0x131b95 = _0x131b95 >>> 0;
            if (_0x677d53 === undefined) {
              _0x677d53 = "utf8";
            }
          } else {
            _0x677d53 = _0x131b95;
            _0x131b95 = undefined;
          }
        } else {
          throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        }
        const _0x40c89d = this.length - _0xa76559;
        if (_0x131b95 === undefined || _0x131b95 > _0x40c89d) {
          _0x131b95 = _0x40c89d;
        }
        if (_0x5afac7.length > 0 && (_0x131b95 < 0 || _0xa76559 < 0) || _0xa76559 > this.length) {
          throw new RangeError("Attempt to write outside buffer bounds");
        }
        if (!_0x677d53) {
          _0x677d53 = "utf8";
        }
        let _0x5b399b = false;
        for (;;) {
          switch (_0x677d53) {
            case "hex":
              return _0x5860e8(this, _0x5afac7, _0xa76559, _0x131b95);
            case "utf8":
            case "utf-8":
              return _0xdccacf(this, _0x5afac7, _0xa76559, _0x131b95);
            case "ascii":
            case "latin1":
            case "binary":
              return _0x80f7d4(this, _0x5afac7, _0xa76559, _0x131b95);
            case "base64":
              return _0x53f9b0(this, _0x5afac7, _0xa76559, _0x131b95);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return _0x46f5ca(this, _0x5afac7, _0xa76559, _0x131b95);
            default:
              if (_0x5b399b) {
                throw new TypeError("Unknown encoding: " + _0x677d53);
              }
              _0x677d53 = ("" + _0x677d53).toLowerCase();
              _0x5b399b = true;
          }
        }
      };
      _0x2d4f7a.prototype.toJSON = function _0x3ccaf2() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function _0x572b7e(_0x5cc767, _0x1b1752, _0x20ef0c) {
        if (_0x1b1752 === 0 && _0x20ef0c === _0x5cc767.length) {
          return _0x3d0df3.fromByteArray(_0x5cc767);
        } else {
          return _0x3d0df3.fromByteArray(_0x5cc767.slice(_0x1b1752, _0x20ef0c));
        }
      }
      function _0x5eb087(_0x52881f, _0x9e25e3, _0x3c12bd) {
        _0x3c12bd = Math.min(_0x52881f.length, _0x3c12bd);
        const _0x342b9a = [];
        let _0x12c4bd = _0x9e25e3;
        while (_0x12c4bd < _0x3c12bd) {
          const _0x3c61b6 = _0x52881f[_0x12c4bd];
          let _0x552f90 = null;
          let _0x4ac2ea = _0x3c61b6 > 239 ? 4 : _0x3c61b6 > 223 ? 3 : _0x3c61b6 > 191 ? 2 : 1;
          if (_0x12c4bd + _0x4ac2ea <= _0x3c12bd) {
            let _0x4ba09b;
            let _0x30c240;
            let _0x2b1625;
            let _0x3fa14c;
            switch (_0x4ac2ea) {
              case 1:
                if (_0x3c61b6 < 128) {
                  _0x552f90 = _0x3c61b6;
                }
                break;
              case 2:
                _0x4ba09b = _0x52881f[_0x12c4bd + 1];
                if ((_0x4ba09b & 192) === 128) {
                  _0x3fa14c = (_0x3c61b6 & 31) << 6 | _0x4ba09b & 63;
                  if (_0x3fa14c > 127) {
                    _0x552f90 = _0x3fa14c;
                  }
                }
                break;
              case 3:
                _0x4ba09b = _0x52881f[_0x12c4bd + 1];
                _0x30c240 = _0x52881f[_0x12c4bd + 2];
                if ((_0x4ba09b & 192) === 128 && (_0x30c240 & 192) === 128) {
                  _0x3fa14c = (_0x3c61b6 & 15) << 12 | (_0x4ba09b & 63) << 6 | _0x30c240 & 63;
                  if (_0x3fa14c > 2047 && (_0x3fa14c < 55296 || _0x3fa14c > 57343)) {
                    _0x552f90 = _0x3fa14c;
                  }
                }
                break;
              case 4:
                _0x4ba09b = _0x52881f[_0x12c4bd + 1];
                _0x30c240 = _0x52881f[_0x12c4bd + 2];
                _0x2b1625 = _0x52881f[_0x12c4bd + 3];
                if ((_0x4ba09b & 192) === 128 && (_0x30c240 & 192) === 128 && (_0x2b1625 & 192) === 128) {
                  _0x3fa14c = (_0x3c61b6 & 15) << 18 | (_0x4ba09b & 63) << 12 | (_0x30c240 & 63) << 6 | _0x2b1625 & 63;
                  if (_0x3fa14c > 65535 && _0x3fa14c < 1114112) {
                    _0x552f90 = _0x3fa14c;
                  }
                }
            }
          }
          if (_0x552f90 === null) {
            _0x552f90 = 65533;
            _0x4ac2ea = 1;
          } else if (_0x552f90 > 65535) {
            _0x552f90 -= 65536;
            _0x342b9a.push(_0x552f90 >>> 10 & 1023 | 55296);
            _0x552f90 = _0x552f90 & 1023 | 56320;
          }
          _0x342b9a.push(_0x552f90);
          _0x12c4bd += _0x4ac2ea;
        }
        return _0x4682f1(_0x342b9a);
      }
      const _0x124cbe = 4096;
      function _0x4682f1(_0x50a89c) {
        const _0x27c90b = _0x50a89c.length;
        if (_0x27c90b <= _0x124cbe) {
          return String.fromCharCode.apply(String, _0x50a89c);
        }
        let _0x1ee1d5 = "";
        let _0x3a36b5 = 0;
        while (_0x3a36b5 < _0x27c90b) {
          _0x1ee1d5 += String.fromCharCode.apply(String, _0x50a89c.slice(_0x3a36b5, _0x3a36b5 += _0x124cbe));
        }
        return _0x1ee1d5;
      }
      function _0x206813(_0x1d0216, _0x4ae237, _0x2a9491) {
        let _0x205fa7 = "";
        _0x2a9491 = Math.min(_0x1d0216.length, _0x2a9491);
        for (let _0x358ede = _0x4ae237; _0x358ede < _0x2a9491; ++_0x358ede) {
          _0x205fa7 += String.fromCharCode(_0x1d0216[_0x358ede] & 127);
        }
        return _0x205fa7;
      }
      function _0xd27616(_0x55c710, _0x319308, _0x44b0c2) {
        let _0x432258 = "";
        _0x44b0c2 = Math.min(_0x55c710.length, _0x44b0c2);
        for (let _0x1920a2 = _0x319308; _0x1920a2 < _0x44b0c2; ++_0x1920a2) {
          _0x432258 += String.fromCharCode(_0x55c710[_0x1920a2]);
        }
        return _0x432258;
      }
      function _0x34d0c2(_0x55cae3, _0x59f158, _0x4f2a0a) {
        const _0x3e84c6 = _0x55cae3.length;
        if (!_0x59f158 || _0x59f158 < 0) {
          _0x59f158 = 0;
        }
        if (!_0x4f2a0a || _0x4f2a0a < 0 || _0x4f2a0a > _0x3e84c6) {
          _0x4f2a0a = _0x3e84c6;
        }
        let _0x1955f3 = "";
        for (let _0x48d36c = _0x59f158; _0x48d36c < _0x4f2a0a; ++_0x48d36c) {
          _0x1955f3 += _0x35460d[_0x55cae3[_0x48d36c]];
        }
        return _0x1955f3;
      }
      function _0x2b6f06(_0x6dc9be, _0x5148aa, _0x29cb02) {
        const _0x4d2338 = _0x6dc9be.slice(_0x5148aa, _0x29cb02);
        let _0x2dadb4 = "";
        for (let _0x316da5 = 0; _0x316da5 < _0x4d2338.length - 1; _0x316da5 += 2) {
          _0x2dadb4 += String.fromCharCode(_0x4d2338[_0x316da5] + _0x4d2338[_0x316da5 + 1] * 256);
        }
        return _0x2dadb4;
      }
      _0x2d4f7a.prototype.slice = function _0x526ba5(_0x524cce, _0x3e0514) {
        const _0x3c36f6 = this.length;
        _0x524cce = ~~_0x524cce;
        _0x3e0514 = _0x3e0514 === undefined ? _0x3c36f6 : ~~_0x3e0514;
        if (_0x524cce < 0) {
          _0x524cce += _0x3c36f6;
          if (_0x524cce < 0) {
            _0x524cce = 0;
          }
        } else if (_0x524cce > _0x3c36f6) {
          _0x524cce = _0x3c36f6;
        }
        if (_0x3e0514 < 0) {
          _0x3e0514 += _0x3c36f6;
          if (_0x3e0514 < 0) {
            _0x3e0514 = 0;
          }
        } else if (_0x3e0514 > _0x3c36f6) {
          _0x3e0514 = _0x3c36f6;
        }
        if (_0x3e0514 < _0x524cce) {
          _0x3e0514 = _0x524cce;
        }
        const _0x1b99d4 = this.subarray(_0x524cce, _0x3e0514);
        Object.setPrototypeOf(_0x1b99d4, _0x2d4f7a.prototype);
        return _0x1b99d4;
      };
      function _0x57707b(_0x2a1bac, _0x48bc9f, _0x4482bb) {
        if (_0x2a1bac % 1 !== 0 || _0x2a1bac < 0) {
          throw new RangeError("offset is not uint");
        }
        if (_0x2a1bac + _0x48bc9f > _0x4482bb) {
          throw new RangeError("Trying to access beyond buffer length");
        }
      }
      _0x2d4f7a.prototype.readUintLE = _0x2d4f7a.prototype.readUIntLE = function _0x10a5a2(_0x364499, _0x12e763, _0xba3cc8) {
        _0x364499 = _0x364499 >>> 0;
        _0x12e763 = _0x12e763 >>> 0;
        if (!_0xba3cc8) {
          _0x57707b(_0x364499, _0x12e763, this.length);
        }
        let _0x1bbabc = this[_0x364499];
        let _0x39efd5 = 1;
        let _0x5b9630 = 0;
        while (++_0x5b9630 < _0x12e763 && (_0x39efd5 *= 256)) {
          _0x1bbabc += this[_0x364499 + _0x5b9630] * _0x39efd5;
        }
        return _0x1bbabc;
      };
      _0x2d4f7a.prototype.readUintBE = _0x2d4f7a.prototype.readUIntBE = function _0x59c3dc(_0x30cbff, _0x3be133, _0x295f65) {
        _0x30cbff = _0x30cbff >>> 0;
        _0x3be133 = _0x3be133 >>> 0;
        if (!_0x295f65) {
          _0x57707b(_0x30cbff, _0x3be133, this.length);
        }
        let _0x1078ad = this[_0x30cbff + --_0x3be133];
        let _0x25d960 = 1;
        while (_0x3be133 > 0 && (_0x25d960 *= 256)) {
          _0x1078ad += this[_0x30cbff + --_0x3be133] * _0x25d960;
        }
        return _0x1078ad;
      };
      _0x2d4f7a.prototype.readUint8 = _0x2d4f7a.prototype.readUInt8 = function _0x7d4b27(_0x3f041b, _0x37db7a) {
        _0x3f041b = _0x3f041b >>> 0;
        if (!_0x37db7a) {
          _0x57707b(_0x3f041b, 1, this.length);
        }
        return this[_0x3f041b];
      };
      _0x2d4f7a.prototype.readUint16LE = _0x2d4f7a.prototype.readUInt16LE = function _0x1cd086(_0x25f0a4, _0x184449) {
        _0x25f0a4 = _0x25f0a4 >>> 0;
        if (!_0x184449) {
          _0x57707b(_0x25f0a4, 2, this.length);
        }
        return this[_0x25f0a4] | this[_0x25f0a4 + 1] << 8;
      };
      _0x2d4f7a.prototype.readUint16BE = _0x2d4f7a.prototype.readUInt16BE = function _0x4d08a3(_0x52f80d, _0x5d1eec) {
        _0x52f80d = _0x52f80d >>> 0;
        if (!_0x5d1eec) {
          _0x57707b(_0x52f80d, 2, this.length);
        }
        return this[_0x52f80d] << 8 | this[_0x52f80d + 1];
      };
      _0x2d4f7a.prototype.readUint32LE = _0x2d4f7a.prototype.readUInt32LE = function _0x59f81e(_0x2f3e29, _0x431f4f) {
        _0x2f3e29 = _0x2f3e29 >>> 0;
        if (!_0x431f4f) {
          _0x57707b(_0x2f3e29, 4, this.length);
        }
        return (this[_0x2f3e29] | this[_0x2f3e29 + 1] << 8 | this[_0x2f3e29 + 2] << 16) + this[_0x2f3e29 + 3] * 16777216;
      };
      _0x2d4f7a.prototype.readUint32BE = _0x2d4f7a.prototype.readUInt32BE = function _0x956022(_0x19a62f, _0x403a8c) {
        _0x19a62f = _0x19a62f >>> 0;
        if (!_0x403a8c) {
          _0x57707b(_0x19a62f, 4, this.length);
        }
        return this[_0x19a62f] * 16777216 + (this[_0x19a62f + 1] << 16 | this[_0x19a62f + 2] << 8 | this[_0x19a62f + 3]);
      };
      _0x2d4f7a.prototype.readBigUInt64LE = _0x7a34e3(function _0x15d246(_0x367a7b) {
        _0x367a7b = _0x367a7b >>> 0;
        _0x5c67e7(_0x367a7b, "offset");
        const _0x17d8f7 = this[_0x367a7b];
        const _0x4659da = this[_0x367a7b + 7];
        if (_0x17d8f7 === undefined || _0x4659da === undefined) {
          _0x250f59(_0x367a7b, this.length - 8);
        }
        const _0x353b5f = _0x17d8f7 + this[++_0x367a7b] * 2 ** 8 + this[++_0x367a7b] * 2 ** 16 + this[++_0x367a7b] * 2 ** 24;
        const _0x3b4102 = this[++_0x367a7b] + this[++_0x367a7b] * 2 ** 8 + this[++_0x367a7b] * 2 ** 16 + _0x4659da * 2 ** 24;
        return BigInt(_0x353b5f) + (BigInt(_0x3b4102) << BigInt(32));
      });
      _0x2d4f7a.prototype.readBigUInt64BE = _0x7a34e3(function _0x3aae4f(_0x2d0e55) {
        _0x2d0e55 = _0x2d0e55 >>> 0;
        _0x5c67e7(_0x2d0e55, "offset");
        const _0x9c0e76 = this[_0x2d0e55];
        const _0x4160f9 = this[_0x2d0e55 + 7];
        if (_0x9c0e76 === undefined || _0x4160f9 === undefined) {
          _0x250f59(_0x2d0e55, this.length - 8);
        }
        const _0x4447d8 = _0x9c0e76 * 2 ** 24 + this[++_0x2d0e55] * 2 ** 16 + this[++_0x2d0e55] * 2 ** 8 + this[++_0x2d0e55];
        const _0x487397 = this[++_0x2d0e55] * 2 ** 24 + this[++_0x2d0e55] * 2 ** 16 + this[++_0x2d0e55] * 2 ** 8 + _0x4160f9;
        return (BigInt(_0x4447d8) << BigInt(32)) + BigInt(_0x487397);
      });
      _0x2d4f7a.prototype.readIntLE = function _0x38f9e1(_0x4b5f5b, _0x5e8e28, _0x1d1af6) {
        _0x4b5f5b = _0x4b5f5b >>> 0;
        _0x5e8e28 = _0x5e8e28 >>> 0;
        if (!_0x1d1af6) {
          _0x57707b(_0x4b5f5b, _0x5e8e28, this.length);
        }
        let _0x5bbb91 = this[_0x4b5f5b];
        let _0x115059 = 1;
        let _0x192877 = 0;
        while (++_0x192877 < _0x5e8e28 && (_0x115059 *= 256)) {
          _0x5bbb91 += this[_0x4b5f5b + _0x192877] * _0x115059;
        }
        _0x115059 *= 128;
        if (_0x5bbb91 >= _0x115059) {
          _0x5bbb91 -= Math.pow(2, _0x5e8e28 * 8);
        }
        return _0x5bbb91;
      };
      _0x2d4f7a.prototype.readIntBE = function _0x581d6f(_0x12c9bd, _0x247f9a, _0x45ab24) {
        _0x12c9bd = _0x12c9bd >>> 0;
        _0x247f9a = _0x247f9a >>> 0;
        if (!_0x45ab24) {
          _0x57707b(_0x12c9bd, _0x247f9a, this.length);
        }
        let _0x1146bd = _0x247f9a;
        let _0x280edd = 1;
        let _0x2fe26e = this[_0x12c9bd + --_0x1146bd];
        while (_0x1146bd > 0 && (_0x280edd *= 256)) {
          _0x2fe26e += this[_0x12c9bd + --_0x1146bd] * _0x280edd;
        }
        _0x280edd *= 128;
        if (_0x2fe26e >= _0x280edd) {
          _0x2fe26e -= Math.pow(2, _0x247f9a * 8);
        }
        return _0x2fe26e;
      };
      _0x2d4f7a.prototype.readInt8 = function _0x387035(_0x4c2a69, _0x95a76c) {
        _0x4c2a69 = _0x4c2a69 >>> 0;
        if (!_0x95a76c) {
          _0x57707b(_0x4c2a69, 1, this.length);
        }
        if (!(this[_0x4c2a69] & 128)) {
          return this[_0x4c2a69];
        }
        return (255 - this[_0x4c2a69] + 1) * -1;
      };
      _0x2d4f7a.prototype.readInt16LE = function _0x4ce87a(_0x447056, _0x35f30f) {
        _0x447056 = _0x447056 >>> 0;
        if (!_0x35f30f) {
          _0x57707b(_0x447056, 2, this.length);
        }
        const _0x715add = this[_0x447056] | this[_0x447056 + 1] << 8;
        if (_0x715add & 32768) {
          return _0x715add | 4294901760;
        } else {
          return _0x715add;
        }
      };
      _0x2d4f7a.prototype.readInt16BE = function _0x15f557(_0x543325, _0x32187d) {
        _0x543325 = _0x543325 >>> 0;
        if (!_0x32187d) {
          _0x57707b(_0x543325, 2, this.length);
        }
        const _0x6ce77c = this[_0x543325 + 1] | this[_0x543325] << 8;
        if (_0x6ce77c & 32768) {
          return _0x6ce77c | 4294901760;
        } else {
          return _0x6ce77c;
        }
      };
      _0x2d4f7a.prototype.readInt32LE = function _0x94ff08(_0xffe048, _0x1558fc) {
        _0xffe048 = _0xffe048 >>> 0;
        if (!_0x1558fc) {
          _0x57707b(_0xffe048, 4, this.length);
        }
        return this[_0xffe048] | this[_0xffe048 + 1] << 8 | this[_0xffe048 + 2] << 16 | this[_0xffe048 + 3] << 24;
      };
      _0x2d4f7a.prototype.readInt32BE = function _0x1fc4e3(_0x48764e, _0x4bcdd9) {
        _0x48764e = _0x48764e >>> 0;
        if (!_0x4bcdd9) {
          _0x57707b(_0x48764e, 4, this.length);
        }
        return this[_0x48764e] << 24 | this[_0x48764e + 1] << 16 | this[_0x48764e + 2] << 8 | this[_0x48764e + 3];
      };
      _0x2d4f7a.prototype.readBigInt64LE = _0x7a34e3(function _0x3bb28d(_0x17dc8b) {
        _0x17dc8b = _0x17dc8b >>> 0;
        _0x5c67e7(_0x17dc8b, "offset");
        const _0x954938 = this[_0x17dc8b];
        const _0x2c2e43 = this[_0x17dc8b + 7];
        if (_0x954938 === undefined || _0x2c2e43 === undefined) {
          _0x250f59(_0x17dc8b, this.length - 8);
        }
        const _0x16bb9c = this[_0x17dc8b + 4] + this[_0x17dc8b + 5] * 2 ** 8 + this[_0x17dc8b + 6] * 2 ** 16 + (_0x2c2e43 << 24);
        return (BigInt(_0x16bb9c) << BigInt(32)) + BigInt(_0x954938 + this[++_0x17dc8b] * 2 ** 8 + this[++_0x17dc8b] * 2 ** 16 + this[++_0x17dc8b] * 2 ** 24);
      });
      _0x2d4f7a.prototype.readBigInt64BE = _0x7a34e3(function _0x24c825(_0x25ff06) {
        _0x25ff06 = _0x25ff06 >>> 0;
        _0x5c67e7(_0x25ff06, "offset");
        const _0x4dbe74 = this[_0x25ff06];
        const _0x5a5d29 = this[_0x25ff06 + 7];
        if (_0x4dbe74 === undefined || _0x5a5d29 === undefined) {
          _0x250f59(_0x25ff06, this.length - 8);
        }
        const _0x86d17c = (_0x4dbe74 << 24) + this[++_0x25ff06] * 2 ** 16 + this[++_0x25ff06] * 2 ** 8 + this[++_0x25ff06];
        return (BigInt(_0x86d17c) << BigInt(32)) + BigInt(this[++_0x25ff06] * 2 ** 24 + this[++_0x25ff06] * 2 ** 16 + this[++_0x25ff06] * 2 ** 8 + _0x5a5d29);
      });
      _0x2d4f7a.prototype.readFloatLE = function _0x3f27c0(_0x1ce487, _0x1c039f) {
        _0x1ce487 = _0x1ce487 >>> 0;
        if (!_0x1c039f) {
          _0x57707b(_0x1ce487, 4, this.length);
        }
        return _0x264ecc.read(this, _0x1ce487, true, 23, 4);
      };
      _0x2d4f7a.prototype.readFloatBE = function _0x3903a7(_0x40a379, _0x1f1197) {
        _0x40a379 = _0x40a379 >>> 0;
        if (!_0x1f1197) {
          _0x57707b(_0x40a379, 4, this.length);
        }
        return _0x264ecc.read(this, _0x40a379, false, 23, 4);
      };
      _0x2d4f7a.prototype.readDoubleLE = function _0x502426(_0x585572, _0xebdf87) {
        _0x585572 = _0x585572 >>> 0;
        if (!_0xebdf87) {
          _0x57707b(_0x585572, 8, this.length);
        }
        return _0x264ecc.read(this, _0x585572, true, 52, 8);
      };
      _0x2d4f7a.prototype.readDoubleBE = function _0x3116a0(_0xee8189, _0x4e7b4e) {
        _0xee8189 = _0xee8189 >>> 0;
        if (!_0x4e7b4e) {
          _0x57707b(_0xee8189, 8, this.length);
        }
        return _0x264ecc.read(this, _0xee8189, false, 52, 8);
      };
      function _0x1ff3ca(_0x2f1743, _0xa6dd1f, _0x1d17c9, _0x1f261f, _0x1154bb, _0x620139) {
        if (!_0x2d4f7a.isBuffer(_0x2f1743)) {
          throw new TypeError("\"buffer\" argument must be a Buffer instance");
        }
        if (_0xa6dd1f > _0x1154bb || _0xa6dd1f < _0x620139) {
          throw new RangeError("\"value\" argument is out of bounds");
        }
        if (_0x1d17c9 + _0x1f261f > _0x2f1743.length) {
          throw new RangeError("Index out of range");
        }
      }
      _0x2d4f7a.prototype.writeUintLE = _0x2d4f7a.prototype.writeUIntLE = function _0x14dfd2(_0x564d09, _0x5e6c94, _0x14a365, _0xcbfc7c) {
        _0x564d09 = +_0x564d09;
        _0x5e6c94 = _0x5e6c94 >>> 0;
        _0x14a365 = _0x14a365 >>> 0;
        if (!_0xcbfc7c) {
          const _0x433091 = Math.pow(2, _0x14a365 * 8) - 1;
          _0x1ff3ca(this, _0x564d09, _0x5e6c94, _0x14a365, _0x433091, 0);
        }
        let _0x2d56ab = 1;
        let _0x5bd56d = 0;
        this[_0x5e6c94] = _0x564d09 & 255;
        while (++_0x5bd56d < _0x14a365 && (_0x2d56ab *= 256)) {
          this[_0x5e6c94 + _0x5bd56d] = _0x564d09 / _0x2d56ab & 255;
        }
        return _0x5e6c94 + _0x14a365;
      };
      _0x2d4f7a.prototype.writeUintBE = _0x2d4f7a.prototype.writeUIntBE = function _0x16dd8b(_0x5a43e9, _0x339bcd, _0x29c458, _0x4991d5) {
        _0x5a43e9 = +_0x5a43e9;
        _0x339bcd = _0x339bcd >>> 0;
        _0x29c458 = _0x29c458 >>> 0;
        if (!_0x4991d5) {
          const _0x506522 = Math.pow(2, _0x29c458 * 8) - 1;
          _0x1ff3ca(this, _0x5a43e9, _0x339bcd, _0x29c458, _0x506522, 0);
        }
        let _0x50c4da = _0x29c458 - 1;
        let _0x3de87c = 1;
        this[_0x339bcd + _0x50c4da] = _0x5a43e9 & 255;
        while (--_0x50c4da >= 0 && (_0x3de87c *= 256)) {
          this[_0x339bcd + _0x50c4da] = _0x5a43e9 / _0x3de87c & 255;
        }
        return _0x339bcd + _0x29c458;
      };
      _0x2d4f7a.prototype.writeUint8 = _0x2d4f7a.prototype.writeUInt8 = function _0x8e3911(_0x4a1620, _0x49a0b5, _0x5cf572) {
        _0x4a1620 = +_0x4a1620;
        _0x49a0b5 = _0x49a0b5 >>> 0;
        if (!_0x5cf572) {
          _0x1ff3ca(this, _0x4a1620, _0x49a0b5, 1, 255, 0);
        }
        this[_0x49a0b5] = _0x4a1620 & 255;
        return _0x49a0b5 + 1;
      };
      _0x2d4f7a.prototype.writeUint16LE = _0x2d4f7a.prototype.writeUInt16LE = function _0x479664(_0x387e58, _0x3f7683, _0x15051f) {
        _0x387e58 = +_0x387e58;
        _0x3f7683 = _0x3f7683 >>> 0;
        if (!_0x15051f) {
          _0x1ff3ca(this, _0x387e58, _0x3f7683, 2, 65535, 0);
        }
        this[_0x3f7683] = _0x387e58 & 255;
        this[_0x3f7683 + 1] = _0x387e58 >>> 8;
        return _0x3f7683 + 2;
      };
      _0x2d4f7a.prototype.writeUint16BE = _0x2d4f7a.prototype.writeUInt16BE = function _0x26538a(_0x585ca6, _0x474c4f, _0x1f19d4) {
        _0x585ca6 = +_0x585ca6;
        _0x474c4f = _0x474c4f >>> 0;
        if (!_0x1f19d4) {
          _0x1ff3ca(this, _0x585ca6, _0x474c4f, 2, 65535, 0);
        }
        this[_0x474c4f] = _0x585ca6 >>> 8;
        this[_0x474c4f + 1] = _0x585ca6 & 255;
        return _0x474c4f + 2;
      };
      _0x2d4f7a.prototype.writeUint32LE = _0x2d4f7a.prototype.writeUInt32LE = function _0x2fe467(_0x1822c2, _0x58f106, _0x2727c2) {
        _0x1822c2 = +_0x1822c2;
        _0x58f106 = _0x58f106 >>> 0;
        if (!_0x2727c2) {
          _0x1ff3ca(this, _0x1822c2, _0x58f106, 4, 4294967295, 0);
        }
        this[_0x58f106 + 3] = _0x1822c2 >>> 24;
        this[_0x58f106 + 2] = _0x1822c2 >>> 16;
        this[_0x58f106 + 1] = _0x1822c2 >>> 8;
        this[_0x58f106] = _0x1822c2 & 255;
        return _0x58f106 + 4;
      };
      _0x2d4f7a.prototype.writeUint32BE = _0x2d4f7a.prototype.writeUInt32BE = function _0x3c2e0b(_0x4625f7, _0x32e126, _0x51338b) {
        _0x4625f7 = +_0x4625f7;
        _0x32e126 = _0x32e126 >>> 0;
        if (!_0x51338b) {
          _0x1ff3ca(this, _0x4625f7, _0x32e126, 4, 4294967295, 0);
        }
        this[_0x32e126] = _0x4625f7 >>> 24;
        this[_0x32e126 + 1] = _0x4625f7 >>> 16;
        this[_0x32e126 + 2] = _0x4625f7 >>> 8;
        this[_0x32e126 + 3] = _0x4625f7 & 255;
        return _0x32e126 + 4;
      };
      function _0x409ac6(_0x2cea65, _0xfe9c7e, _0x3d59d9, _0x299b16, _0x40e8ea) {
        _0x4eb865(_0xfe9c7e, _0x299b16, _0x40e8ea, _0x2cea65, _0x3d59d9, 7);
        let _0xea291c = Number(_0xfe9c7e & BigInt(4294967295));
        _0x2cea65[_0x3d59d9++] = _0xea291c;
        _0xea291c = _0xea291c >> 8;
        _0x2cea65[_0x3d59d9++] = _0xea291c;
        _0xea291c = _0xea291c >> 8;
        _0x2cea65[_0x3d59d9++] = _0xea291c;
        _0xea291c = _0xea291c >> 8;
        _0x2cea65[_0x3d59d9++] = _0xea291c;
        let _0x7f5ebe = Number(_0xfe9c7e >> BigInt(32) & BigInt(4294967295));
        _0x2cea65[_0x3d59d9++] = _0x7f5ebe;
        _0x7f5ebe = _0x7f5ebe >> 8;
        _0x2cea65[_0x3d59d9++] = _0x7f5ebe;
        _0x7f5ebe = _0x7f5ebe >> 8;
        _0x2cea65[_0x3d59d9++] = _0x7f5ebe;
        _0x7f5ebe = _0x7f5ebe >> 8;
        _0x2cea65[_0x3d59d9++] = _0x7f5ebe;
        return _0x3d59d9;
      }
      function _0x364ccb(_0x50319b, _0x48885a, _0x34f3e2, _0x28f0e6, _0x52f742) {
        _0x4eb865(_0x48885a, _0x28f0e6, _0x52f742, _0x50319b, _0x34f3e2, 7);
        let _0xccf906 = Number(_0x48885a & BigInt(4294967295));
        _0x50319b[_0x34f3e2 + 7] = _0xccf906;
        _0xccf906 = _0xccf906 >> 8;
        _0x50319b[_0x34f3e2 + 6] = _0xccf906;
        _0xccf906 = _0xccf906 >> 8;
        _0x50319b[_0x34f3e2 + 5] = _0xccf906;
        _0xccf906 = _0xccf906 >> 8;
        _0x50319b[_0x34f3e2 + 4] = _0xccf906;
        let _0x51d63f = Number(_0x48885a >> BigInt(32) & BigInt(4294967295));
        _0x50319b[_0x34f3e2 + 3] = _0x51d63f;
        _0x51d63f = _0x51d63f >> 8;
        _0x50319b[_0x34f3e2 + 2] = _0x51d63f;
        _0x51d63f = _0x51d63f >> 8;
        _0x50319b[_0x34f3e2 + 1] = _0x51d63f;
        _0x51d63f = _0x51d63f >> 8;
        _0x50319b[_0x34f3e2] = _0x51d63f;
        return _0x34f3e2 + 8;
      }
      _0x2d4f7a.prototype.writeBigUInt64LE = _0x7a34e3(function _0x4dd17d(_0x3f1d94, _0x3a205c = 0) {
        return _0x409ac6(this, _0x3f1d94, _0x3a205c, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      _0x2d4f7a.prototype.writeBigUInt64BE = _0x7a34e3(function _0x383b86(_0x291e90, _0x5dfc65 = 0) {
        return _0x364ccb(this, _0x291e90, _0x5dfc65, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      _0x2d4f7a.prototype.writeIntLE = function _0x399041(_0x4cfdb6, _0x482a92, _0x3222a8, _0x5dbf34) {
        _0x4cfdb6 = +_0x4cfdb6;
        _0x482a92 = _0x482a92 >>> 0;
        if (!_0x5dbf34) {
          const _0x484a8a = Math.pow(2, _0x3222a8 * 8 - 1);
          _0x1ff3ca(this, _0x4cfdb6, _0x482a92, _0x3222a8, _0x484a8a - 1, -_0x484a8a);
        }
        let _0x2b3f3f = 0;
        let _0x5e7c7d = 1;
        let _0x1163c9 = 0;
        this[_0x482a92] = _0x4cfdb6 & 255;
        while (++_0x2b3f3f < _0x3222a8 && (_0x5e7c7d *= 256)) {
          if (_0x4cfdb6 < 0 && _0x1163c9 === 0 && this[_0x482a92 + _0x2b3f3f - 1] !== 0) {
            _0x1163c9 = 1;
          }
          this[_0x482a92 + _0x2b3f3f] = (_0x4cfdb6 / _0x5e7c7d >> 0) - _0x1163c9 & 255;
        }
        return _0x482a92 + _0x3222a8;
      };
      _0x2d4f7a.prototype.writeIntBE = function _0x57b383(_0x406eaf, _0x3591ac, _0x9b857b, _0x1603ac) {
        _0x406eaf = +_0x406eaf;
        _0x3591ac = _0x3591ac >>> 0;
        if (!_0x1603ac) {
          const _0x2a7f7c = Math.pow(2, _0x9b857b * 8 - 1);
          _0x1ff3ca(this, _0x406eaf, _0x3591ac, _0x9b857b, _0x2a7f7c - 1, -_0x2a7f7c);
        }
        let _0x2d3051 = _0x9b857b - 1;
        let _0x12f2d6 = 1;
        let _0x3856a2 = 0;
        this[_0x3591ac + _0x2d3051] = _0x406eaf & 255;
        while (--_0x2d3051 >= 0 && (_0x12f2d6 *= 256)) {
          if (_0x406eaf < 0 && _0x3856a2 === 0 && this[_0x3591ac + _0x2d3051 + 1] !== 0) {
            _0x3856a2 = 1;
          }
          this[_0x3591ac + _0x2d3051] = (_0x406eaf / _0x12f2d6 >> 0) - _0x3856a2 & 255;
        }
        return _0x3591ac + _0x9b857b;
      };
      _0x2d4f7a.prototype.writeInt8 = function _0x55ca48(_0x5ec7eb, _0x2ead44, _0x3bdd1b) {
        _0x5ec7eb = +_0x5ec7eb;
        _0x2ead44 = _0x2ead44 >>> 0;
        if (!_0x3bdd1b) {
          _0x1ff3ca(this, _0x5ec7eb, _0x2ead44, 1, 127, -128);
        }
        if (_0x5ec7eb < 0) {
          _0x5ec7eb = 255 + _0x5ec7eb + 1;
        }
        this[_0x2ead44] = _0x5ec7eb & 255;
        return _0x2ead44 + 1;
      };
      _0x2d4f7a.prototype.writeInt16LE = function _0x75630f(_0x4f18db, _0x106af7, _0xf54c67) {
        _0x4f18db = +_0x4f18db;
        _0x106af7 = _0x106af7 >>> 0;
        if (!_0xf54c67) {
          _0x1ff3ca(this, _0x4f18db, _0x106af7, 2, 32767, -32768);
        }
        this[_0x106af7] = _0x4f18db & 255;
        this[_0x106af7 + 1] = _0x4f18db >>> 8;
        return _0x106af7 + 2;
      };
      _0x2d4f7a.prototype.writeInt16BE = function _0x3d0f1b(_0x25b804, _0x19e201, _0x1654eb) {
        _0x25b804 = +_0x25b804;
        _0x19e201 = _0x19e201 >>> 0;
        if (!_0x1654eb) {
          _0x1ff3ca(this, _0x25b804, _0x19e201, 2, 32767, -32768);
        }
        this[_0x19e201] = _0x25b804 >>> 8;
        this[_0x19e201 + 1] = _0x25b804 & 255;
        return _0x19e201 + 2;
      };
      _0x2d4f7a.prototype.writeInt32LE = function _0x39f0a3(_0x80e095, _0x2a325e, _0x24299f) {
        _0x80e095 = +_0x80e095;
        _0x2a325e = _0x2a325e >>> 0;
        if (!_0x24299f) {
          _0x1ff3ca(this, _0x80e095, _0x2a325e, 4, 2147483647, -2147483648);
        }
        this[_0x2a325e] = _0x80e095 & 255;
        this[_0x2a325e + 1] = _0x80e095 >>> 8;
        this[_0x2a325e + 2] = _0x80e095 >>> 16;
        this[_0x2a325e + 3] = _0x80e095 >>> 24;
        return _0x2a325e + 4;
      };
      _0x2d4f7a.prototype.writeInt32BE = function _0x58999d(_0x11c5a2, _0x2963dd, _0x1638d6) {
        _0x11c5a2 = +_0x11c5a2;
        _0x2963dd = _0x2963dd >>> 0;
        if (!_0x1638d6) {
          _0x1ff3ca(this, _0x11c5a2, _0x2963dd, 4, 2147483647, -2147483648);
        }
        if (_0x11c5a2 < 0) {
          _0x11c5a2 = 4294967295 + _0x11c5a2 + 1;
        }
        this[_0x2963dd] = _0x11c5a2 >>> 24;
        this[_0x2963dd + 1] = _0x11c5a2 >>> 16;
        this[_0x2963dd + 2] = _0x11c5a2 >>> 8;
        this[_0x2963dd + 3] = _0x11c5a2 & 255;
        return _0x2963dd + 4;
      };
      _0x2d4f7a.prototype.writeBigInt64LE = _0x7a34e3(function _0x1fb24c(_0x19f948, _0x2c4196 = 0) {
        return _0x409ac6(this, _0x19f948, _0x2c4196, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      _0x2d4f7a.prototype.writeBigInt64BE = _0x7a34e3(function _0x56e5bb(_0x163933, _0xb09440 = 0) {
        return _0x364ccb(this, _0x163933, _0xb09440, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function _0x493c87(_0x389935, _0x4e2aee, _0x534309, _0x43b713, _0x5e36d0, _0x1d2bee) {
        if (_0x534309 + _0x43b713 > _0x389935.length) {
          throw new RangeError("Index out of range");
        }
        if (_0x534309 < 0) {
          throw new RangeError("Index out of range");
        }
      }
      function _0x1d6887(_0x554a96, _0x4e4d24, _0xb6d81f, _0x290935, _0x36fe64) {
        _0x4e4d24 = +_0x4e4d24;
        _0xb6d81f = _0xb6d81f >>> 0;
        if (!_0x36fe64) {
          _0x493c87(_0x554a96, _0x4e4d24, _0xb6d81f, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
        }
        _0x264ecc.write(_0x554a96, _0x4e4d24, _0xb6d81f, _0x290935, 23, 4);
        return _0xb6d81f + 4;
      }
      _0x2d4f7a.prototype.writeFloatLE = function _0x268016(_0x2289ea, _0x3ae0b7, _0x496410) {
        return _0x1d6887(this, _0x2289ea, _0x3ae0b7, true, _0x496410);
      };
      _0x2d4f7a.prototype.writeFloatBE = function _0x206921(_0x25a6ab, _0x2f24c7, _0x2a66b5) {
        return _0x1d6887(this, _0x25a6ab, _0x2f24c7, false, _0x2a66b5);
      };
      function _0x15738d(_0x335154, _0x318c88, _0x256044, _0x4f281d, _0x48c013) {
        _0x318c88 = +_0x318c88;
        _0x256044 = _0x256044 >>> 0;
        if (!_0x48c013) {
          _0x493c87(_0x335154, _0x318c88, _0x256044, 8, 1.7976931348623157e+308, -1.7976931348623157e+308);
        }
        _0x264ecc.write(_0x335154, _0x318c88, _0x256044, _0x4f281d, 52, 8);
        return _0x256044 + 8;
      }
      _0x2d4f7a.prototype.writeDoubleLE = function _0x17118c(_0x2acfeb, _0x36eb48, _0x1c231a) {
        return _0x15738d(this, _0x2acfeb, _0x36eb48, true, _0x1c231a);
      };
      _0x2d4f7a.prototype.writeDoubleBE = function _0x28b7a7(_0x5b2960, _0x7a088d, _0x23ec4d) {
        return _0x15738d(this, _0x5b2960, _0x7a088d, false, _0x23ec4d);
      };
      _0x2d4f7a.prototype.copy = function _0x43c06c(_0x5d9703, _0x575f47, _0x362bdc, _0x2553b4) {
        if (!_0x2d4f7a.isBuffer(_0x5d9703)) {
          throw new TypeError("argument should be a Buffer");
        }
        if (!_0x362bdc) {
          _0x362bdc = 0;
        }
        if (!_0x2553b4 && _0x2553b4 !== 0) {
          _0x2553b4 = this.length;
        }
        if (_0x575f47 >= _0x5d9703.length) {
          _0x575f47 = _0x5d9703.length;
        }
        if (!_0x575f47) {
          _0x575f47 = 0;
        }
        if (_0x2553b4 > 0 && _0x2553b4 < _0x362bdc) {
          _0x2553b4 = _0x362bdc;
        }
        if (_0x2553b4 === _0x362bdc) {
          return 0;
        }
        if (_0x5d9703.length === 0 || this.length === 0) {
          return 0;
        }
        if (_0x575f47 < 0) {
          throw new RangeError("targetStart out of bounds");
        }
        if (_0x362bdc < 0 || _0x362bdc >= this.length) {
          throw new RangeError("Index out of range");
        }
        if (_0x2553b4 < 0) {
          throw new RangeError("sourceEnd out of bounds");
        }
        if (_0x2553b4 > this.length) {
          _0x2553b4 = this.length;
        }
        if (_0x5d9703.length - _0x575f47 < _0x2553b4 - _0x362bdc) {
          _0x2553b4 = _0x5d9703.length - _0x575f47 + _0x362bdc;
        }
        const _0x49f626 = _0x2553b4 - _0x362bdc;
        if (this === _0x5d9703 && typeof Uint8Array.prototype.copyWithin === "function") {
          this.copyWithin(_0x575f47, _0x362bdc, _0x2553b4);
        } else {
          Uint8Array.prototype.set.call(_0x5d9703, this.subarray(_0x362bdc, _0x2553b4), _0x575f47);
        }
        return _0x49f626;
      };
      _0x2d4f7a.prototype.fill = function _0x1e9f55(_0x3d7ca0, _0x404eb2, _0xc008f0, _0x424d6b) {
        if (typeof _0x3d7ca0 === "string") {
          if (typeof _0x404eb2 === "string") {
            _0x424d6b = _0x404eb2;
            _0x404eb2 = 0;
            _0xc008f0 = this.length;
          } else if (typeof _0xc008f0 === "string") {
            _0x424d6b = _0xc008f0;
            _0xc008f0 = this.length;
          }
          if (_0x424d6b !== undefined && typeof _0x424d6b !== "string") {
            throw new TypeError("encoding must be a string");
          }
          if (typeof _0x424d6b === "string" && !_0x2d4f7a.isEncoding(_0x424d6b)) {
            throw new TypeError("Unknown encoding: " + _0x424d6b);
          }
          if (_0x3d7ca0.length === 1) {
            const _0x3da185 = _0x3d7ca0.charCodeAt(0);
            if (_0x424d6b === "utf8" && _0x3da185 < 128 || _0x424d6b === "latin1") {
              _0x3d7ca0 = _0x3da185;
            }
          }
        } else if (typeof _0x3d7ca0 === "number") {
          _0x3d7ca0 = _0x3d7ca0 & 255;
        } else if (typeof _0x3d7ca0 === "boolean") {
          _0x3d7ca0 = Number(_0x3d7ca0);
        }
        if (_0x404eb2 < 0 || this.length < _0x404eb2 || this.length < _0xc008f0) {
          throw new RangeError("Out of range index");
        }
        if (_0xc008f0 <= _0x404eb2) {
          return this;
        }
        _0x404eb2 = _0x404eb2 >>> 0;
        _0xc008f0 = _0xc008f0 === undefined ? this.length : _0xc008f0 >>> 0;
        if (!_0x3d7ca0) {
          _0x3d7ca0 = 0;
        }
        let _0x2eb6b6;
        if (typeof _0x3d7ca0 === "number") {
          for (_0x2eb6b6 = _0x404eb2; _0x2eb6b6 < _0xc008f0; ++_0x2eb6b6) {
            this[_0x2eb6b6] = _0x3d7ca0;
          }
        } else {
          const _0x3192bb = _0x2d4f7a.isBuffer(_0x3d7ca0) ? _0x3d7ca0 : _0x2d4f7a.from(_0x3d7ca0, _0x424d6b);
          const _0x41ffe4 = _0x3192bb.length;
          if (_0x41ffe4 === 0) {
            throw new TypeError("The value \"" + _0x3d7ca0 + "\" is invalid for argument \"value\"");
          }
          for (_0x2eb6b6 = 0; _0x2eb6b6 < _0xc008f0 - _0x404eb2; ++_0x2eb6b6) {
            this[_0x2eb6b6 + _0x404eb2] = _0x3192bb[_0x2eb6b6 % _0x41ffe4];
          }
        }
        return this;
      };
      const _0x43d103 = {};
      function _0x31b6d0(_0x396d1a, _0x4aafb6, _0x200994) {
        _0x43d103[_0x396d1a] = class _0x653d68 extends _0x200994 {
          constructor() {
            super();
            Object.defineProperty(this, "message", {
              value: _0x4aafb6.apply(this, arguments),
              writable: true,
              configurable: true
            });
            this.name = this.name + " [" + _0x396d1a + "]";
            this.stack;
            delete this.name;
          }
          get code() {
            return _0x396d1a;
          }
          set code(_0x51ebb7) {
            var _0x21a484 = {
              configurable: true,
              enumerable: true,
              value: _0x51ebb7,
              writable: true
            };
            Object.defineProperty(this, "code", _0x21a484);
          }
          toString() {
            return this.name + " [" + _0x396d1a + "]: " + this.message;
          }
        };
      }
      _0x31b6d0("ERR_BUFFER_OUT_OF_BOUNDS", function (_0x2fa30e) {
        if (_0x2fa30e) {
          return _0x2fa30e + " is outside of buffer bounds";
        }
        return "Attempt to access memory outside buffer bounds";
      }, RangeError);
      _0x31b6d0("ERR_INVALID_ARG_TYPE", function (_0x50998a, _0x12ec7e) {
        return "The \"" + _0x50998a + "\" argument must be of type number. Received type " + typeof _0x12ec7e;
      }, TypeError);
      _0x31b6d0("ERR_OUT_OF_RANGE", function (_0x2d20bc, _0x3145cb, _0x13f4e1) {
        let _0x5c6fd7 = "The value of \"" + _0x2d20bc + "\" is out of range.";
        let _0x1cee9e = _0x13f4e1;
        if (Number.isInteger(_0x13f4e1) && Math.abs(_0x13f4e1) > 2 ** 32) {
          _0x1cee9e = _0x1c67b3(String(_0x13f4e1));
        } else if (typeof _0x13f4e1 === "bigint") {
          _0x1cee9e = String(_0x13f4e1);
          if (_0x13f4e1 > BigInt(2) ** BigInt(32) || _0x13f4e1 < -(BigInt(2) ** BigInt(32))) {
            _0x1cee9e = _0x1c67b3(_0x1cee9e);
          }
          _0x1cee9e += "n";
        }
        _0x5c6fd7 += " It must be " + _0x3145cb + ". Received " + _0x1cee9e;
        return _0x5c6fd7;
      }, RangeError);
      function _0x1c67b3(_0x30c08b) {
        let _0x3e3d79 = "";
        let _0x5f3e42 = _0x30c08b.length;
        const _0x4ac751 = _0x30c08b[0] === "-" ? 1 : 0;
        for (; _0x5f3e42 >= _0x4ac751 + 4; _0x5f3e42 -= 3) {
          _0x3e3d79 = "_" + _0x30c08b.slice(_0x5f3e42 - 3, _0x5f3e42) + _0x3e3d79;
        }
        return "" + _0x30c08b.slice(0, _0x5f3e42) + _0x3e3d79;
      }
      function _0x355619(_0x5a3079, _0x25046e, _0x3cb2ae) {
        _0x5c67e7(_0x25046e, "offset");
        if (_0x5a3079[_0x25046e] === undefined || _0x5a3079[_0x25046e + _0x3cb2ae] === undefined) {
          _0x250f59(_0x25046e, _0x5a3079.length - (_0x3cb2ae + 1));
        }
      }
      function _0x4eb865(_0x2bce3e, _0x1e3d25, _0x58e3d5, _0x2208b5, _0x37da38, _0x5dc7cb) {
        if (_0x2bce3e > _0x58e3d5 || _0x2bce3e < _0x1e3d25) {
          const _0x5063b8 = typeof _0x1e3d25 === "bigint" ? "n" : "";
          let _0x4e542f;
          if (_0x5dc7cb > 3) {
            if (_0x1e3d25 === 0 || _0x1e3d25 === BigInt(0)) {
              _0x4e542f = ">= 0" + _0x5063b8 + " and < 2" + _0x5063b8 + " ** " + (_0x5dc7cb + 1) * 8 + _0x5063b8;
            } else {
              _0x4e542f = ">= -(2" + _0x5063b8 + " ** " + ((_0x5dc7cb + 1) * 8 - 1) + _0x5063b8 + ") and < 2 ** " + ("" + ((_0x5dc7cb + 1) * 8 - 1) + _0x5063b8);
            }
          } else {
            _0x4e542f = ">= " + _0x1e3d25 + _0x5063b8 + " and <= " + _0x58e3d5 + _0x5063b8;
          }
          throw new _0x43d103.ERR_OUT_OF_RANGE("value", _0x4e542f, _0x2bce3e);
        }
        _0x355619(_0x2208b5, _0x37da38, _0x5dc7cb);
      }
      function _0x5c67e7(_0x5ba769, _0x508caf) {
        if (typeof _0x5ba769 !== "number") {
          throw new _0x43d103.ERR_INVALID_ARG_TYPE(_0x508caf, "number", _0x5ba769);
        }
      }
      function _0x250f59(_0x14fd5a, _0x176a26, _0x40c466) {
        if (Math.floor(_0x14fd5a) !== _0x14fd5a) {
          _0x5c67e7(_0x14fd5a, _0x40c466);
          throw new _0x43d103.ERR_OUT_OF_RANGE(_0x40c466 || "offset", "an integer", _0x14fd5a);
        }
        if (_0x176a26 < 0) {
          throw new _0x43d103.ERR_BUFFER_OUT_OF_BOUNDS();
        }
        throw new _0x43d103.ERR_OUT_OF_RANGE(_0x40c466 || "offset", ">= " + (_0x40c466 ? 1 : 0) + " and <= " + _0x176a26, _0x14fd5a);
      }
      const _0x32a7ac = /[^+/0-9A-Za-z-_]/g;
      function _0x26e50c(_0x37b333) {
        _0x37b333 = _0x37b333.split("=")[0];
        _0x37b333 = _0x37b333.trim().replace(_0x32a7ac, "");
        if (_0x37b333.length < 2) {
          return "";
        }
        while (_0x37b333.length % 4 !== 0) {
          _0x37b333 = _0x37b333 + "=";
        }
        return _0x37b333;
      }
      function _0x1eaf58(_0x5b3bed, _0x23651a) {
        _0x23651a = _0x23651a || Infinity;
        let _0x5e8dd6;
        const _0x3a75f3 = _0x5b3bed.length;
        let _0x402284 = null;
        const _0x53eeb1 = [];
        for (let _0x2fd1c7 = 0; _0x2fd1c7 < _0x3a75f3; ++_0x2fd1c7) {
          _0x5e8dd6 = _0x5b3bed.charCodeAt(_0x2fd1c7);
          if (_0x5e8dd6 > 55295 && _0x5e8dd6 < 57344) {
            if (!_0x402284) {
              if (_0x5e8dd6 > 56319) {
                if ((_0x23651a -= 3) > -1) {
                  _0x53eeb1.push(239, 191, 189);
                }
                continue;
              } else if (_0x2fd1c7 + 1 === _0x3a75f3) {
                if ((_0x23651a -= 3) > -1) {
                  _0x53eeb1.push(239, 191, 189);
                }
                continue;
              }
              _0x402284 = _0x5e8dd6;
              continue;
            }
            if (_0x5e8dd6 < 56320) {
              if ((_0x23651a -= 3) > -1) {
                _0x53eeb1.push(239, 191, 189);
              }
              _0x402284 = _0x5e8dd6;
              continue;
            }
            _0x5e8dd6 = (_0x402284 - 55296 << 10 | _0x5e8dd6 - 56320) + 65536;
          } else if (_0x402284) {
            if ((_0x23651a -= 3) > -1) {
              _0x53eeb1.push(239, 191, 189);
            }
          }
          _0x402284 = null;
          if (_0x5e8dd6 < 128) {
            if ((_0x23651a -= 1) < 0) {
              break;
            }
            _0x53eeb1.push(_0x5e8dd6);
          } else if (_0x5e8dd6 < 2048) {
            if ((_0x23651a -= 2) < 0) {
              break;
            }
            _0x53eeb1.push(_0x5e8dd6 >> 6 | 192, _0x5e8dd6 & 63 | 128);
          } else if (_0x5e8dd6 < 65536) {
            if ((_0x23651a -= 3) < 0) {
              break;
            }
            _0x53eeb1.push(_0x5e8dd6 >> 12 | 224, _0x5e8dd6 >> 6 & 63 | 128, _0x5e8dd6 & 63 | 128);
          } else if (_0x5e8dd6 < 1114112) {
            if ((_0x23651a -= 4) < 0) {
              break;
            }
            _0x53eeb1.push(_0x5e8dd6 >> 18 | 240, _0x5e8dd6 >> 12 & 63 | 128, _0x5e8dd6 >> 6 & 63 | 128, _0x5e8dd6 & 63 | 128);
          } else {
            throw new Error("Invalid code point");
          }
        }
        return _0x53eeb1;
      }
      function _0x1c8b71(_0x2ab7ac) {
        const _0x1fe21a = [];
        for (let _0x5e551a = 0; _0x5e551a < _0x2ab7ac.length; ++_0x5e551a) {
          _0x1fe21a.push(_0x2ab7ac.charCodeAt(_0x5e551a) & 255);
        }
        return _0x1fe21a;
      }
      function _0x19354a(_0x23c8cc, _0x4f5451) {
        let _0x5162be;
        let _0x4a3ab6;
        let _0x38c101;
        const _0x431117 = [];
        for (let _0x28bdaf = 0; _0x28bdaf < _0x23c8cc.length; ++_0x28bdaf) {
          if ((_0x4f5451 -= 2) < 0) {
            break;
          }
          _0x5162be = _0x23c8cc.charCodeAt(_0x28bdaf);
          _0x4a3ab6 = _0x5162be >> 8;
          _0x38c101 = _0x5162be % 256;
          _0x431117.push(_0x38c101);
          _0x431117.push(_0x4a3ab6);
        }
        return _0x431117;
      }
      function _0x334829(_0xc5c58e) {
        return _0x3d0df3.toByteArray(_0x26e50c(_0xc5c58e));
      }
      function _0xf90a91(_0x5cf8cf, _0x425b61, _0x1edadf, _0xcd3fae) {
        let _0x4092db;
        for (_0x4092db = 0; _0x4092db < _0xcd3fae; ++_0x4092db) {
          if (_0x4092db + _0x1edadf >= _0x425b61.length || _0x4092db >= _0x5cf8cf.length) {
            break;
          }
          _0x425b61[_0x4092db + _0x1edadf] = _0x5cf8cf[_0x4092db];
        }
        return _0x4092db;
      }
      function _0x1fffa2(_0x5a9874, _0x542567) {
        return _0x5a9874 instanceof _0x542567 || _0x5a9874 != null && _0x5a9874.constructor != null && _0x5a9874.constructor.name != null && _0x5a9874.constructor.name === _0x542567.name;
      }
      function _0x4af45b(_0x3026d6) {
        return _0x3026d6 !== _0x3026d6;
      }
      const _0x35460d = function () {
        const _0x226251 = "0123456789abcdef";
        const _0x500835 = new Array(256);
        for (let _0x5b1f13 = 0; _0x5b1f13 < 16; ++_0x5b1f13) {
          const _0x3b4db0 = _0x5b1f13 * 16;
          for (let _0x256c4f = 0; _0x256c4f < 16; ++_0x256c4f) {
            _0x500835[_0x3b4db0 + _0x256c4f] = _0x226251[_0x5b1f13] + _0x226251[_0x256c4f];
          }
        }
        return _0x500835;
      }();
      function _0x7a34e3(_0x2d101b) {
        if (typeof BigInt === "undefined") {
          return _0x44f122;
        } else {
          return _0x2d101b;
        }
      }
      function _0x44f122() {
        throw new Error("BigInt not supported");
      }
    },
    630: (_0x122233, _0x1a8d52, _0x340cb9) => {
      'use strict';

      var _0x3bda5f = _0x340cb9(886);
      var _0x38630d = _0x340cb9(432);
      var _0x204bf7 = _0x38630d(_0x3bda5f("String.prototype.indexOf"));
      _0x122233.exports = function _0xe36065(_0x3e154a, _0x77289f) {
        var _0x5bd875 = _0x3bda5f(_0x3e154a, !!_0x77289f);
        if (typeof _0x5bd875 === "function" && _0x204bf7(_0x3e154a, ".prototype.") > -1) {
          return _0x38630d(_0x5bd875);
        }
        return _0x5bd875;
      };
    },
    432: (_0x3466ab, _0x42c461, _0x56ea44) => {
      'use strict';

      var _0x4ca258 = _0x56ea44(611);
      var _0x5cd16a = _0x56ea44(886);
      var _0xb45786 = _0x5cd16a("%Function.prototype.apply%");
      var _0x2672d4 = _0x5cd16a("%Function.prototype.call%");
      var _0x47beb2 = _0x5cd16a("%Reflect.apply%", true) || _0x4ca258.call(_0x2672d4, _0xb45786);
      var _0x32af70 = _0x5cd16a("%Object.getOwnPropertyDescriptor%", true);
      var _0x43ec8c = _0x5cd16a("%Object.defineProperty%", true);
      var _0x3de96f = _0x5cd16a("%Math.max%");
      if (_0x43ec8c) {
        try {
          _0x43ec8c({}, "a", {
            value: 1
          });
        } catch (_0x14b10e) {
          _0x43ec8c = null;
        }
      }
      _0x3466ab.exports = function _0x35374c(_0xf820ba) {
        var _0x28f9b2 = _0x47beb2(_0x4ca258, _0x2672d4, arguments);
        if (_0x32af70 && _0x43ec8c) {
          var _0x262528 = _0x32af70(_0x28f9b2, "length");
          if (_0x262528.configurable) {
            _0x43ec8c(_0x28f9b2, "length", {
              value: 1 + _0x3de96f(0, _0xf820ba.length - (arguments.length - 1))
            });
          }
        }
        return _0x28f9b2;
      };
      var _0x123e5f = function _0x40add4() {
        return _0x47beb2(_0x4ca258, _0xb45786, arguments);
      };
      if (_0x43ec8c) {
        var _0x5c88fd = {
          value: _0x123e5f
        };
        _0x43ec8c(_0x3466ab.exports, "apply", _0x5c88fd);
      } else {
        _0x3466ab.exports.apply = _0x123e5f;
      }
    },
    480: (_0x381c45, _0xa86f5d, _0x95998c) => {
      var _0x5ebbe8 = _0x95998c(385);
      var _0x37c406 = _0x95998c(318);
      function _0x46b8ab() {
        return new Date().getTime();
      }
      var _0x24b7cd = Array.prototype.slice;
      var _0x55a23e;
      var _0x248f3c = {};
      if (typeof _0x95998c.g !== "undefined" && _0x95998c.g.console) {
        _0x55a23e = _0x95998c.g.console;
      } else if (typeof window !== "undefined" && window.console) {
        _0x55a23e = window.console;
      } else {
        _0x55a23e = {};
      }
      var _0x4b3b47 = [[_0x31e446, "log"], [_0xa6c26f, "info"], [_0xe54915, "warn"], [_0x505b2e, "error"], [_0xa713c3, "time"], [_0x460250, "timeEnd"], [_0x48dcb4, "trace"], [_0x5bab3a, "dir"], [_0x39a8ba, "assert"]];
      for (var _0x51d95b = 0; _0x51d95b < _0x4b3b47.length; _0x51d95b++) {
        var _0x58317f = _0x4b3b47[_0x51d95b];
        var _0x25e57c = _0x58317f[0];
        var _0x1d6f77 = _0x58317f[1];
        if (!_0x55a23e[_0x1d6f77]) {
          _0x55a23e[_0x1d6f77] = _0x25e57c;
        }
      }
      _0x381c45.exports = _0x55a23e;
      function _0x31e446() {}
      function _0xa6c26f() {
        _0x55a23e.log.apply(_0x55a23e, arguments);
      }
      function _0xe54915() {
        _0x55a23e.log.apply(_0x55a23e, arguments);
      }
      function _0x505b2e() {
        _0x55a23e.warn.apply(_0x55a23e, arguments);
      }
      function _0xa713c3(_0x2d0d5c) {
        _0x248f3c[_0x2d0d5c] = _0x46b8ab();
      }
      function _0x460250(_0x12a269) {
        var _0x558b33 = _0x248f3c[_0x12a269];
        if (!_0x558b33) {
          throw new Error("No such label: " + _0x12a269);
        }
        delete _0x248f3c[_0x12a269];
        var _0x580d79 = _0x46b8ab() - _0x558b33;
        _0x55a23e.log(_0x12a269 + ": " + _0x580d79 + "ms");
      }
      function _0x48dcb4() {
        var _0x3b02b0 = new Error();
        _0x3b02b0.name = "Trace";
        _0x3b02b0.message = _0x5ebbe8.format.apply(null, arguments);
        _0x55a23e.error(_0x3b02b0.stack);
      }
      function _0x5bab3a(_0xe87a05) {
        _0x55a23e.log(_0x5ebbe8.inspect(_0xe87a05) + "\n");
      }
      function _0x39a8ba(_0x10a443) {
        if (!_0x10a443) {
          var _0x5af44d = _0x24b7cd.call(arguments, 1);
          _0x37c406.ok(false, _0x5ebbe8.format.apply(null, _0x5af44d));
        }
      }
    },
    373: (_0x465ab1, _0x2a1463, _0x48c318) => {
      'use strict';

      var _0x519327 = _0x48c318(402)();
      var _0x33d419 = _0x48c318(886);
      var _0x835399 = _0x519327 && _0x33d419("%Object.defineProperty%", true);
      var _0xf1ba66 = _0x33d419("%SyntaxError%");
      var _0x25832a = _0x33d419("%TypeError%");
      var _0x88462e = _0x48c318(520);
      _0x465ab1.exports = function _0x44f1cc(_0x16ffb1, _0xfb4bc2, _0x568f2c) {
        if (!_0x16ffb1 || typeof _0x16ffb1 !== "object" && typeof _0x16ffb1 !== "function") {
          throw new _0x25832a("`obj` must be an object or a function`");
        }
        if (typeof _0xfb4bc2 !== "string" && typeof _0xfb4bc2 !== "symbol") {
          throw new _0x25832a("`property` must be a string or a symbol`");
        }
        if (arguments.length > 3 && typeof arguments[3] !== "boolean" && arguments[3] !== null) {
          throw new _0x25832a("`nonEnumerable`, if provided, must be a boolean or null");
        }
        if (arguments.length > 4 && typeof arguments[4] !== "boolean" && arguments[4] !== null) {
          throw new _0x25832a("`nonWritable`, if provided, must be a boolean or null");
        }
        if (arguments.length > 5 && typeof arguments[5] !== "boolean" && arguments[5] !== null) {
          throw new _0x25832a("`nonConfigurable`, if provided, must be a boolean or null");
        }
        if (arguments.length > 6 && typeof arguments[6] !== "boolean") {
          throw new _0x25832a("`loose`, if provided, must be a boolean");
        }
        var _0x290a00 = arguments.length > 3 ? arguments[3] : null;
        var _0x5dc5c4 = arguments.length > 4 ? arguments[4] : null;
        var _0x521150 = arguments.length > 5 ? arguments[5] : null;
        var _0x34d071 = arguments.length > 6 ? arguments[6] : false;
        var _0x318a05 = !!_0x88462e && _0x88462e(_0x16ffb1, _0xfb4bc2);
        if (_0x835399) {
          var _0x37c34b = {
            configurable: _0x521150 === null && _0x318a05 ? _0x318a05.configurable : !_0x521150,
            enumerable: _0x290a00 === null && _0x318a05 ? _0x318a05.enumerable : !_0x290a00,
            value: _0x568f2c,
            writable: _0x5dc5c4 === null && _0x318a05 ? _0x318a05.writable : !_0x5dc5c4
          };
          _0x835399(_0x16ffb1, _0xfb4bc2, _0x37c34b);
        } else if (_0x34d071 || !_0x290a00 && !_0x5dc5c4 && !_0x521150) {
          _0x16ffb1[_0xfb4bc2] = _0x568f2c;
        } else {
          throw new _0xf1ba66("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
        }
      };
    },
    680: (_0x2a76b1, _0xf4bf3c, _0x4aa6a9) => {
      'use strict';

      var _0x3d47f7 = _0x4aa6a9(277);
      var _0x247300 = typeof Symbol === "function" && typeof Symbol("foo") === "symbol";
      var _0x59de00 = Object.prototype.toString;
      var _0x185af1 = Array.prototype.concat;
      var _0x1af0ea = _0x4aa6a9(373);
      function _0x4f6b87(_0x44b298) {
        return typeof _0x44b298 === "function" && _0x59de00.call(_0x44b298) === "[object Function]";
      }
      var _0x3470bc = _0x4aa6a9(402)();
      function _0x7bc36d(_0x155882, _0x3c32f9, _0x2d1fae, _0x5c366a) {
        if (_0x3c32f9 in _0x155882) {
          if (_0x5c366a === true) {
            if (_0x155882[_0x3c32f9] === _0x2d1fae) {
              return;
            }
          } else if (!_0x4f6b87(_0x5c366a) || !_0x5c366a()) {
            return;
          }
        }
        if (_0x3470bc) {
          _0x1af0ea(_0x155882, _0x3c32f9, _0x2d1fae, true);
        } else {
          _0x1af0ea(_0x155882, _0x3c32f9, _0x2d1fae);
        }
      }
      function _0x2146f2(_0xe0f909, _0x4dce94) {
        var _0x1877a9 = arguments.length > 2 ? arguments[2] : {};
        var _0x58e67d = _0x3d47f7(_0x4dce94);
        if (_0x247300) {
          _0x58e67d = _0x185af1.call(_0x58e67d, Object.getOwnPropertySymbols(_0x4dce94));
        }
        for (var _0x195782 = 0; _0x195782 < _0x58e67d.length; _0x195782 += 1) {
          _0x7bc36d(_0xe0f909, _0x58e67d[_0x195782], _0x4dce94[_0x58e67d[_0x195782]], _0x1877a9[_0x58e67d[_0x195782]]);
        }
      }
      _0x2146f2.supportsDescriptors = !!_0x3470bc;
      _0x2a76b1.exports = _0x2146f2;
    },
    93: _0xe782f3 => {
      'use strict';

      function _0x2ee252(_0x443e10, _0x454163) {
        if (_0x443e10 === undefined || _0x443e10 === null) {
          throw new TypeError("Cannot convert first argument to object");
        }
        var _0x4c914a = Object(_0x443e10);
        for (var _0x12fc0c = 1; _0x12fc0c < arguments.length; _0x12fc0c++) {
          var _0x198152 = arguments[_0x12fc0c];
          if (_0x198152 === undefined || _0x198152 === null) {
            continue;
          }
          var _0xb4a850 = Object.keys(Object(_0x198152));
          for (var _0x500e16 = 0, _0x18f12f = _0xb4a850.length; _0x500e16 < _0x18f12f; _0x500e16++) {
            var _0x2015bb = _0xb4a850[_0x500e16];
            var _0x5a0a7f = Object.getOwnPropertyDescriptor(_0x198152, _0x2015bb);
            if (_0x5a0a7f !== undefined && _0x5a0a7f.enumerable) {
              _0x4c914a[_0x2015bb] = _0x198152[_0x2015bb];
            }
          }
        }
        return _0x4c914a;
      }
      function _0x552f4d() {
        if (!Object.assign) {
          var _0x25a9e5 = {
            enumerable: false,
            configurable: true,
            writable: true,
            value: _0x2ee252
          };
          Object.defineProperty(Object, "assign", _0x25a9e5);
        }
      }
      var _0xd527e5 = {
        assign: _0x2ee252,
        polyfill: _0x552f4d
      };
      _0xe782f3.exports = _0xd527e5;
    },
    670: (_0x212d08, _0x1c3c1c, _0x533460) => {
      'use strict';

      var _0x4a6f34 = _0x533460(480);
      var _0x36c1a9 = typeof Reflect === "object" ? Reflect : null;
      var _0x2579ef = _0x36c1a9 && typeof _0x36c1a9.apply === "function" ? _0x36c1a9.apply : function _0x592764(_0x28ac12, _0x1ce35b, _0x85b1a7) {
        return Function.prototype.apply.call(_0x28ac12, _0x1ce35b, _0x85b1a7);
      };
      var _0x61aa00;
      if (_0x36c1a9 && typeof _0x36c1a9.ownKeys === "function") {
        _0x61aa00 = _0x36c1a9.ownKeys;
      } else if (Object.getOwnPropertySymbols) {
        _0x61aa00 = function _0x34044b(_0x5126a7) {
          return Object.getOwnPropertyNames(_0x5126a7).concat(Object.getOwnPropertySymbols(_0x5126a7));
        };
      } else {
        _0x61aa00 = function _0xa8546d(_0x4c259a) {
          return Object.getOwnPropertyNames(_0x4c259a);
        };
      }
      function _0x5ca3d6(_0x3f5ed1) {
        if (_0x4a6f34 && _0x4a6f34.warn) {
          _0x4a6f34.warn(_0x3f5ed1);
        }
      }
      var _0x280ea1 = Number.isNaN || function _0x5ab171(_0x47f3cd) {
        return _0x47f3cd !== _0x47f3cd;
      };
      function _0x137c8b() {
        _0x137c8b.init.call(this);
      }
      _0x212d08.exports = _0x137c8b;
      _0x212d08.exports.once = _0x3869c9;
      _0x137c8b.EventEmitter = _0x137c8b;
      _0x137c8b.prototype._events = undefined;
      _0x137c8b.prototype._eventsCount = 0;
      _0x137c8b.prototype._maxListeners = undefined;
      var _0x2d754b = 10;
      function _0x3c23fc(_0x377ebc) {
        if (typeof _0x377ebc !== "function") {
          throw new TypeError("The \"listener\" argument must be of type Function. Received type " + typeof _0x377ebc);
        }
      }
      Object.defineProperty(_0x137c8b, "defaultMaxListeners", {
        enumerable: true,
        get: function () {
          return _0x2d754b;
        },
        set: function (_0xcf90bf) {
          if (typeof _0xcf90bf !== "number" || _0xcf90bf < 0 || _0x280ea1(_0xcf90bf)) {
            throw new RangeError("The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received " + _0xcf90bf + ".");
          }
          _0x2d754b = _0xcf90bf;
        }
      });
      _0x137c8b.init = function () {
        if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        }
        this._maxListeners = this._maxListeners || undefined;
      };
      _0x137c8b.prototype.setMaxListeners = function _0x308569(_0x42efeb) {
        if (typeof _0x42efeb !== "number" || _0x42efeb < 0 || _0x280ea1(_0x42efeb)) {
          throw new RangeError("The value of \"n\" is out of range. It must be a non-negative number. Received " + _0x42efeb + ".");
        }
        this._maxListeners = _0x42efeb;
        return this;
      };
      function _0x5212bc(_0x5f58d9) {
        if (_0x5f58d9._maxListeners === undefined) {
          return _0x137c8b.defaultMaxListeners;
        }
        return _0x5f58d9._maxListeners;
      }
      _0x137c8b.prototype.getMaxListeners = function _0x4aa277() {
        return _0x5212bc(this);
      };
      _0x137c8b.prototype.emit = function _0x10b4ef(_0x3cc7f9) {
        var _0x27ca74 = [];
        for (var _0x1ad237 = 1; _0x1ad237 < arguments.length; _0x1ad237++) {
          _0x27ca74.push(arguments[_0x1ad237]);
        }
        var _0x11d0c5 = _0x3cc7f9 === "error";
        var _0x3abaec = this._events;
        if (_0x3abaec !== undefined) {
          _0x11d0c5 = _0x11d0c5 && _0x3abaec.error === undefined;
        } else if (!_0x11d0c5) {
          return false;
        }
        if (_0x11d0c5) {
          var _0x7df8a5;
          if (_0x27ca74.length > 0) {
            _0x7df8a5 = _0x27ca74[0];
          }
          if (_0x7df8a5 instanceof Error) {
            throw _0x7df8a5;
          }
          var _0x344c89 = new Error("Unhandled error." + (_0x7df8a5 ? " (" + _0x7df8a5.message + ")" : ""));
          _0x344c89.context = _0x7df8a5;
          throw _0x344c89;
        }
        var _0x4b0f43 = _0x3abaec[_0x3cc7f9];
        if (_0x4b0f43 === undefined) {
          return false;
        }
        if (typeof _0x4b0f43 === "function") {
          _0x2579ef(_0x4b0f43, this, _0x27ca74);
        } else {
          var _0x11e009 = _0x4b0f43.length;
          var _0x36df1d = _0x317565(_0x4b0f43, _0x11e009);
          for (var _0x1ad237 = 0; _0x1ad237 < _0x11e009; ++_0x1ad237) {
            _0x2579ef(_0x36df1d[_0x1ad237], this, _0x27ca74);
          }
        }
        return true;
      };
      function _0x50d01c(_0x562494, _0x403ffa, _0x72fe8e, _0x11b1e3) {
        var _0x319829;
        var _0x3cbd69;
        var _0x597c5d;
        _0x3c23fc(_0x72fe8e);
        _0x3cbd69 = _0x562494._events;
        if (_0x3cbd69 === undefined) {
          _0x3cbd69 = _0x562494._events = Object.create(null);
          _0x562494._eventsCount = 0;
        } else {
          if (_0x3cbd69.newListener !== undefined) {
            _0x562494.emit("newListener", _0x403ffa, _0x72fe8e.listener ? _0x72fe8e.listener : _0x72fe8e);
            _0x3cbd69 = _0x562494._events;
          }
          _0x597c5d = _0x3cbd69[_0x403ffa];
        }
        if (_0x597c5d === undefined) {
          _0x597c5d = _0x3cbd69[_0x403ffa] = _0x72fe8e;
          ++_0x562494._eventsCount;
        } else {
          if (typeof _0x597c5d === "function") {
            _0x597c5d = _0x3cbd69[_0x403ffa] = _0x11b1e3 ? [_0x72fe8e, _0x597c5d] : [_0x597c5d, _0x72fe8e];
          } else if (_0x11b1e3) {
            _0x597c5d.unshift(_0x72fe8e);
          } else {
            _0x597c5d.push(_0x72fe8e);
          }
          _0x319829 = _0x5212bc(_0x562494);
          if (_0x319829 > 0 && _0x597c5d.length > _0x319829 && !_0x597c5d.warned) {
            _0x597c5d.warned = true;
            var _0x4ee5c4 = new Error("Possible EventEmitter memory leak detected. " + _0x597c5d.length + " " + String(_0x403ffa) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            _0x4ee5c4.name = "MaxListenersExceededWarning";
            _0x4ee5c4.emitter = _0x562494;
            _0x4ee5c4.type = _0x403ffa;
            _0x4ee5c4.count = _0x597c5d.length;
            _0x5ca3d6(_0x4ee5c4);
          }
        }
        return _0x562494;
      }
      _0x137c8b.prototype.addListener = function _0x3de736(_0x4d0fb6, _0x32923b) {
        return _0x50d01c(this, _0x4d0fb6, _0x32923b, false);
      };
      _0x137c8b.prototype.on = _0x137c8b.prototype.addListener;
      _0x137c8b.prototype.prependListener = function _0x1e15e1(_0x4445cf, _0x563cf0) {
        return _0x50d01c(this, _0x4445cf, _0x563cf0, true);
      };
      function _0x18e626() {
        if (!this.fired) {
          this.target.removeListener(this.type, this.wrapFn);
          this.fired = true;
          if (arguments.length === 0) {
            return this.listener.call(this.target);
          }
          return this.listener.apply(this.target, arguments);
        }
      }
      function _0x1708a5(_0x254b48, _0x435b53, _0x18637b) {
        var _0x27867b = {
          fired: false,
          wrapFn: undefined,
          target: _0x254b48,
          type: _0x435b53,
          listener: _0x18637b
        };
        var _0x2bf91d = _0x27867b;
        var _0x4bc5b5 = _0x18e626.bind(_0x2bf91d);
        _0x4bc5b5.listener = _0x18637b;
        _0x2bf91d.wrapFn = _0x4bc5b5;
        return _0x4bc5b5;
      }
      _0x137c8b.prototype.once = function _0x27e47a(_0x4b3066, _0x4e2f24) {
        _0x3c23fc(_0x4e2f24);
        this.on(_0x4b3066, _0x1708a5(this, _0x4b3066, _0x4e2f24));
        return this;
      };
      _0x137c8b.prototype.prependOnceListener = function _0x26a50f(_0x54ca56, _0x34e21a) {
        _0x3c23fc(_0x34e21a);
        this.prependListener(_0x54ca56, _0x1708a5(this, _0x54ca56, _0x34e21a));
        return this;
      };
      _0x137c8b.prototype.removeListener = function _0x5e3706(_0x2472a2, _0x40f5a3) {
        var _0x369e7d;
        var _0x42fef1;
        var _0x308b20;
        var _0x55b23b;
        var _0x2c4cb;
        _0x3c23fc(_0x40f5a3);
        _0x42fef1 = this._events;
        if (_0x42fef1 === undefined) {
          return this;
        }
        _0x369e7d = _0x42fef1[_0x2472a2];
        if (_0x369e7d === undefined) {
          return this;
        }
        if (_0x369e7d === _0x40f5a3 || _0x369e7d.listener === _0x40f5a3) {
          if (--this._eventsCount === 0) {
            this._events = Object.create(null);
          } else {
            delete _0x42fef1[_0x2472a2];
            if (_0x42fef1.removeListener) {
              this.emit("removeListener", _0x2472a2, _0x369e7d.listener || _0x40f5a3);
            }
          }
        } else if (typeof _0x369e7d !== "function") {
          _0x308b20 = -1;
          for (_0x55b23b = _0x369e7d.length - 1; _0x55b23b >= 0; _0x55b23b--) {
            if (_0x369e7d[_0x55b23b] === _0x40f5a3 || _0x369e7d[_0x55b23b].listener === _0x40f5a3) {
              _0x2c4cb = _0x369e7d[_0x55b23b].listener;
              _0x308b20 = _0x55b23b;
              break;
            }
          }
          if (_0x308b20 < 0) {
            return this;
          }
          if (_0x308b20 === 0) {
            _0x369e7d.shift();
          } else {
            _0x4b0b41(_0x369e7d, _0x308b20);
          }
          if (_0x369e7d.length === 1) {
            _0x42fef1[_0x2472a2] = _0x369e7d[0];
          }
          if (_0x42fef1.removeListener !== undefined) {
            this.emit("removeListener", _0x2472a2, _0x2c4cb || _0x40f5a3);
          }
        }
        return this;
      };
      _0x137c8b.prototype.off = _0x137c8b.prototype.removeListener;
      _0x137c8b.prototype.removeAllListeners = function _0x1b887a(_0x3f93a2) {
        var _0x42a0ce;
        var _0x4c9bbb;
        var _0x244e7c;
        _0x4c9bbb = this._events;
        if (_0x4c9bbb === undefined) {
          return this;
        }
        if (_0x4c9bbb.removeListener === undefined) {
          if (arguments.length === 0) {
            this._events = Object.create(null);
            this._eventsCount = 0;
          } else if (_0x4c9bbb[_0x3f93a2] !== undefined) {
            if (--this._eventsCount === 0) {
              this._events = Object.create(null);
            } else {
              delete _0x4c9bbb[_0x3f93a2];
            }
          }
          return this;
        }
        if (arguments.length === 0) {
          var _0x547151 = Object.keys(_0x4c9bbb);
          var _0x237650;
          for (_0x244e7c = 0; _0x244e7c < _0x547151.length; ++_0x244e7c) {
            _0x237650 = _0x547151[_0x244e7c];
            if (_0x237650 === "removeListener") {
              continue;
            }
            this.removeAllListeners(_0x237650);
          }
          this.removeAllListeners("removeListener");
          this._events = Object.create(null);
          this._eventsCount = 0;
          return this;
        }
        _0x42a0ce = _0x4c9bbb[_0x3f93a2];
        if (typeof _0x42a0ce === "function") {
          this.removeListener(_0x3f93a2, _0x42a0ce);
        } else if (_0x42a0ce !== undefined) {
          for (_0x244e7c = _0x42a0ce.length - 1; _0x244e7c >= 0; _0x244e7c--) {
            this.removeListener(_0x3f93a2, _0x42a0ce[_0x244e7c]);
          }
        }
        return this;
      };
      function _0x1200e5(_0x1b1177, _0xd1498f, _0x58d6dc) {
        var _0x232136 = _0x1b1177._events;
        if (_0x232136 === undefined) {
          return [];
        }
        var _0x383b98 = _0x232136[_0xd1498f];
        if (_0x383b98 === undefined) {
          return [];
        }
        if (typeof _0x383b98 === "function") {
          if (_0x58d6dc) {
            return [_0x383b98.listener || _0x383b98];
          } else {
            return [_0x383b98];
          }
        }
        if (_0x58d6dc) {
          return _0x21279b(_0x383b98);
        } else {
          return _0x317565(_0x383b98, _0x383b98.length);
        }
      }
      _0x137c8b.prototype.listeners = function _0x3736a9(_0x174d10) {
        return _0x1200e5(this, _0x174d10, true);
      };
      _0x137c8b.prototype.rawListeners = function _0x428d03(_0x22dcde) {
        return _0x1200e5(this, _0x22dcde, false);
      };
      _0x137c8b.listenerCount = function (_0x109af4, _0x2c040d) {
        if (typeof _0x109af4.listenerCount === "function") {
          return _0x109af4.listenerCount(_0x2c040d);
        } else {
          return _0x59f2c2.call(_0x109af4, _0x2c040d);
        }
      };
      _0x137c8b.prototype.listenerCount = _0x59f2c2;
      function _0x59f2c2(_0x1a5822) {
        var _0x15d9e0 = this._events;
        if (_0x15d9e0 !== undefined) {
          var _0x1a348e = _0x15d9e0[_0x1a5822];
          if (typeof _0x1a348e === "function") {
            return 1;
          } else if (_0x1a348e !== undefined) {
            return _0x1a348e.length;
          }
        }
        return 0;
      }
      _0x137c8b.prototype.eventNames = function _0x5e00a5() {
        if (this._eventsCount > 0) {
          return _0x61aa00(this._events);
        } else {
          return [];
        }
      };
      function _0x317565(_0xefbde0, _0x243d49) {
        var _0x53b139 = new Array(_0x243d49);
        for (var _0x5b66cb = 0; _0x5b66cb < _0x243d49; ++_0x5b66cb) {
          _0x53b139[_0x5b66cb] = _0xefbde0[_0x5b66cb];
        }
        return _0x53b139;
      }
      function _0x4b0b41(_0x1750ec, _0x416351) {
        for (; _0x416351 + 1 < _0x1750ec.length; _0x416351++) {
          _0x1750ec[_0x416351] = _0x1750ec[_0x416351 + 1];
        }
        _0x1750ec.pop();
      }
      function _0x21279b(_0x3761fb) {
        var _0x183daa = new Array(_0x3761fb.length);
        for (var _0x134586 = 0; _0x134586 < _0x183daa.length; ++_0x134586) {
          _0x183daa[_0x134586] = _0x3761fb[_0x134586].listener || _0x3761fb[_0x134586];
        }
        return _0x183daa;
      }
      function _0x3869c9(_0x5c5cc3, _0x55f2c8) {
        return new Promise(function (_0x20415a, _0x4e8a59) {
          function _0x143b25(_0x5d5b14) {
            _0x5c5cc3.removeListener(_0x55f2c8, _0x29af26);
            _0x4e8a59(_0x5d5b14);
          }
          function _0x29af26() {
            if (typeof _0x5c5cc3.removeListener === "function") {
              _0x5c5cc3.removeListener("error", _0x143b25);
            }
            _0x20415a([].slice.call(arguments));
          }
          ;
          _0x5d9a48(_0x5c5cc3, _0x55f2c8, _0x29af26, {
            once: true
          });
          if (_0x55f2c8 !== "error") {
            _0x3f2fb2(_0x5c5cc3, _0x143b25, {
              once: true
            });
          }
        });
      }
      function _0x3f2fb2(_0x458521, _0x32db8b, _0x3ce2fd) {
        if (typeof _0x458521.on === "function") {
          _0x5d9a48(_0x458521, "error", _0x32db8b, _0x3ce2fd);
        }
      }
      function _0x5d9a48(_0x2a8ee0, _0x1f91fb, _0x4b1778, _0x5c6590) {
        if (typeof _0x2a8ee0.on === "function") {
          if (_0x5c6590.once) {
            _0x2a8ee0.once(_0x1f91fb, _0x4b1778);
          } else {
            _0x2a8ee0.on(_0x1f91fb, _0x4b1778);
          }
        } else if (typeof _0x2a8ee0.addEventListener === "function") {
          _0x2a8ee0.addEventListener(_0x1f91fb, function _0x1e58ba(_0x5e729b) {
            if (_0x5c6590.once) {
              _0x2a8ee0.removeEventListener(_0x1f91fb, _0x1e58ba);
            }
            _0x4b1778(_0x5e729b);
          });
        } else {
          throw new TypeError("The \"emitter\" argument must be of type EventEmitter. Received type " + typeof _0x2a8ee0);
        }
      }
    },
    949: (_0x255128, _0x2c7b09, _0x3f3eac) => {
      'use strict';

      var _0x3ab184 = _0x3f3eac(842);
      var _0x2bfa59 = Object.prototype.toString;
      var _0x2ee233 = Object.prototype.hasOwnProperty;
      var _0x4b7587 = function _0xde31b7(_0x13ae96, _0xd87494, _0x105dd6) {
        for (var _0x2a2517 = 0, _0x3e1fdf = _0x13ae96.length; _0x2a2517 < _0x3e1fdf; _0x2a2517++) {
          if (_0x2ee233.call(_0x13ae96, _0x2a2517)) {
            if (_0x105dd6 == null) {
              _0xd87494(_0x13ae96[_0x2a2517], _0x2a2517, _0x13ae96);
            } else {
              _0xd87494.call(_0x105dd6, _0x13ae96[_0x2a2517], _0x2a2517, _0x13ae96);
            }
          }
        }
      };
      var _0x19dd8d = function _0x3dee57(_0x5ae8fe, _0x4c098d, _0xdbd378) {
        for (var _0x545fb9 = 0, _0x1fd07d = _0x5ae8fe.length; _0x545fb9 < _0x1fd07d; _0x545fb9++) {
          if (_0xdbd378 == null) {
            _0x4c098d(_0x5ae8fe.charAt(_0x545fb9), _0x545fb9, _0x5ae8fe);
          } else {
            _0x4c098d.call(_0xdbd378, _0x5ae8fe.charAt(_0x545fb9), _0x545fb9, _0x5ae8fe);
          }
        }
      };
      var _0x4914a0 = function _0x327f07(_0x527e3a, _0x193562, _0x3cb5e3) {
        for (var _0x5e10b9 in _0x527e3a) {
          if (_0x2ee233.call(_0x527e3a, _0x5e10b9)) {
            if (_0x3cb5e3 == null) {
              _0x193562(_0x527e3a[_0x5e10b9], _0x5e10b9, _0x527e3a);
            } else {
              _0x193562.call(_0x3cb5e3, _0x527e3a[_0x5e10b9], _0x5e10b9, _0x527e3a);
            }
          }
        }
      };
      var _0x3b758b = function _0x162cac(_0x25b119, _0x389864, _0x561973) {
        if (!_0x3ab184(_0x389864)) {
          throw new TypeError("iterator must be a function");
        }
        var _0x1e33a1;
        if (arguments.length >= 3) {
          _0x1e33a1 = _0x561973;
        }
        if (_0x2bfa59.call(_0x25b119) === "[object Array]") {
          _0x4b7587(_0x25b119, _0x389864, _0x1e33a1);
        } else if (typeof _0x25b119 === "string") {
          _0x19dd8d(_0x25b119, _0x389864, _0x1e33a1);
        } else {
          _0x4914a0(_0x25b119, _0x389864, _0x1e33a1);
        }
      };
      _0x255128.exports = _0x3b758b;
    },
    344: _0x5d7ac2 => {
      'use strict';

      var _0xb3e57f = "Function.prototype.bind called on incompatible ";
      var _0x58679a = Array.prototype.slice;
      var _0x4dc804 = Object.prototype.toString;
      var _0x1444c6 = "[object Function]";
      _0x5d7ac2.exports = function _0x21c966(_0x562b29) {
        var _0x550193 = this;
        if (typeof _0x550193 !== "function" || _0x4dc804.call(_0x550193) !== _0x1444c6) {
          throw new TypeError(_0xb3e57f + _0x550193);
        }
        var _0x54e9b7 = _0x58679a.call(arguments, 1);
        var _0x59bce2;
        function _0x2b9322() {
          if (this instanceof _0x59bce2) {
            var _0x16806f = _0x550193.apply(this, _0x54e9b7.concat(_0x58679a.call(arguments)));
            if (Object(_0x16806f) === _0x16806f) {
              return _0x16806f;
            }
            return this;
          } else {
            return _0x550193.apply(_0x562b29, _0x54e9b7.concat(_0x58679a.call(arguments)));
          }
        }
        var _0x303a4c = Math.max(0, _0x550193.length - _0x54e9b7.length);
        var _0x2ba42a = [];
        for (var _0x19d90f = 0; _0x19d90f < _0x303a4c; _0x19d90f++) {
          _0x2ba42a.push("$" + _0x19d90f);
        }
        _0x59bce2 = Function("binder", "return function (" + _0x2ba42a.join(",") + "){ return binder.apply(this,arguments); }")(_0x2b9322);
        if (_0x550193.prototype) {
          var _0x186e6c = function _0x49d773() {};
          _0x186e6c.prototype = _0x550193.prototype;
          _0x59bce2.prototype = new _0x186e6c();
          _0x186e6c.prototype = null;
        }
        return _0x59bce2;
      };
    },
    611: (_0xbce2e0, _0x1b8766, _0x23b923) => {
      'use strict';

      var _0x42dc73 = _0x23b923(344);
      _0xbce2e0.exports = Function.prototype.bind || _0x42dc73;
    },
    886: (_0x12bca2, _0x454d4d, _0x1df3f5) => {
      'use strict';

      var _0xdd1fb5;
      var _0x368b38 = SyntaxError;
      var _0xf55c99 = Function;
      var _0x48cc96 = TypeError;
      function _0x52870a(_0x5c7412) {
        try {
          return _0xf55c99("\"use strict\"; return (" + _0x5c7412 + ").constructor;")();
        } catch (_0x58c8f7) {}
      }
      var _0x30cc20 = Object.getOwnPropertyDescriptor;
      if (_0x30cc20) {
        try {
          _0x30cc20({}, "");
        } catch (_0x2b7c67) {
          _0x30cc20 = null;
        }
      }
      function _0x274a9f() {
        throw new _0x48cc96();
      }
      var _0x1769d6 = _0x30cc20 ? function () {
        try {
          arguments.callee;
          return _0x274a9f;
        } catch (_0x1a3362) {
          try {
            return _0x30cc20(arguments, "callee").get;
          } catch (_0x2b9487) {
            return _0x274a9f;
          }
        }
      }() : _0x274a9f;
      var _0x3be49d = _0x1df3f5(636)();
      var _0x4788b2 = _0x1df3f5(127)();
      var _0x68ffbf = Object.getPrototypeOf || (_0x4788b2 ? function (_0x409837) {
        return _0x409837.__proto__;
      } : null);
      var _0x317fda = {};
      var _0xcd9728 = typeof Uint8Array === "undefined" || !_0x68ffbf ? _0xdd1fb5 : _0x68ffbf(Uint8Array);
      var _0x56548f = {
        "%AggregateError%": typeof AggregateError === "undefined" ? _0xdd1fb5 : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? _0xdd1fb5 : ArrayBuffer,
        "%ArrayIteratorPrototype%": _0x3be49d && _0x68ffbf ? _0x68ffbf([][Symbol.iterator]()) : _0xdd1fb5,
        "%AsyncFromSyncIteratorPrototype%": _0xdd1fb5,
        "%AsyncFunction%": _0x317fda,
        "%AsyncGenerator%": _0x317fda,
        "%AsyncGeneratorFunction%": _0x317fda,
        "%AsyncIteratorPrototype%": _0x317fda,
        "%Atomics%": typeof Atomics === "undefined" ? _0xdd1fb5 : Atomics,
        "%BigInt%": typeof BigInt === "undefined" ? _0xdd1fb5 : BigInt,
        "%BigInt64Array%": typeof BigInt64Array === "undefined" ? _0xdd1fb5 : BigInt64Array,
        "%BigUint64Array%": typeof BigUint64Array === "undefined" ? _0xdd1fb5 : BigUint64Array,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView === "undefined" ? _0xdd1fb5 : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": Error,
        "%eval%": eval,
        "%EvalError%": EvalError,
        "%Float32Array%": typeof Float32Array === "undefined" ? _0xdd1fb5 : Float32Array,
        "%Float64Array%": typeof Float64Array === "undefined" ? _0xdd1fb5 : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? _0xdd1fb5 : FinalizationRegistry,
        "%Function%": _0xf55c99,
        "%GeneratorFunction%": _0x317fda,
        "%Int8Array%": typeof Int8Array === "undefined" ? _0xdd1fb5 : Int8Array,
        "%Int16Array%": typeof Int16Array === "undefined" ? _0xdd1fb5 : Int16Array,
        "%Int32Array%": typeof Int32Array === "undefined" ? _0xdd1fb5 : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": _0x3be49d && _0x68ffbf ? _0x68ffbf(_0x68ffbf([][Symbol.iterator]())) : _0xdd1fb5,
        "%JSON%": typeof JSON === "object" ? JSON : _0xdd1fb5,
        "%Map%": typeof Map === "undefined" ? _0xdd1fb5 : Map,
        "%MapIteratorPrototype%": typeof Map === "undefined" || !_0x3be49d || !_0x68ffbf ? _0xdd1fb5 : _0x68ffbf(new Map()[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": Object,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise === "undefined" ? _0xdd1fb5 : Promise,
        "%Proxy%": typeof Proxy === "undefined" ? _0xdd1fb5 : Proxy,
        "%RangeError%": RangeError,
        "%ReferenceError%": ReferenceError,
        "%Reflect%": typeof Reflect === "undefined" ? _0xdd1fb5 : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set === "undefined" ? _0xdd1fb5 : Set,
        "%SetIteratorPrototype%": typeof Set === "undefined" || !_0x3be49d || !_0x68ffbf ? _0xdd1fb5 : _0x68ffbf(new Set()[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? _0xdd1fb5 : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": _0x3be49d && _0x68ffbf ? _0x68ffbf(""[Symbol.iterator]()) : _0xdd1fb5,
        "%Symbol%": _0x3be49d ? Symbol : _0xdd1fb5,
        "%SyntaxError%": _0x368b38,
        "%ThrowTypeError%": _0x1769d6,
        "%TypedArray%": _0xcd9728,
        "%TypeError%": _0x48cc96,
        "%Uint8Array%": typeof Uint8Array === "undefined" ? _0xdd1fb5 : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? _0xdd1fb5 : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array === "undefined" ? _0xdd1fb5 : Uint16Array,
        "%Uint32Array%": typeof Uint32Array === "undefined" ? _0xdd1fb5 : Uint32Array,
        "%URIError%": URIError,
        "%WeakMap%": typeof WeakMap === "undefined" ? _0xdd1fb5 : WeakMap,
        "%WeakRef%": typeof WeakRef === "undefined" ? _0xdd1fb5 : WeakRef,
        "%WeakSet%": typeof WeakSet === "undefined" ? _0xdd1fb5 : WeakSet
      };
      if (_0x68ffbf) {
        try {
          null.error;
        } catch (_0x1c0308) {
          var _0x4e9240 = _0x68ffbf(_0x68ffbf(_0x1c0308));
          _0x56548f["%Error.prototype%"] = _0x4e9240;
        }
      }
      var _0x2eace1 = function _0x283fb1(_0x3b9669) {
        var _0x28759f;
        if (_0x3b9669 === "%AsyncFunction%") {
          _0x28759f = _0x52870a("async function () {}");
        } else if (_0x3b9669 === "%GeneratorFunction%") {
          _0x28759f = _0x52870a("function* () {}");
        } else if (_0x3b9669 === "%AsyncGeneratorFunction%") {
          _0x28759f = _0x52870a("async function* () {}");
        } else if (_0x3b9669 === "%AsyncGenerator%") {
          var _0x314899 = _0x283fb1("%AsyncGeneratorFunction%");
          if (_0x314899) {
            _0x28759f = _0x314899.prototype;
          }
        } else if (_0x3b9669 === "%AsyncIteratorPrototype%") {
          var _0x552b8b = _0x283fb1("%AsyncGenerator%");
          if (_0x552b8b && _0x68ffbf) {
            _0x28759f = _0x68ffbf(_0x552b8b.prototype);
          }
        }
        _0x56548f[_0x3b9669] = _0x28759f;
        return _0x28759f;
      };
      var _0x1160cf = {
        "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
        "%ArrayPrototype%": ["Array", "prototype"],
        "%ArrayProto_entries%": ["Array", "prototype", "entries"],
        "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
        "%ArrayProto_keys%": ["Array", "prototype", "keys"],
        "%ArrayProto_values%": ["Array", "prototype", "values"],
        "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
        "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
        "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
        "%BooleanPrototype%": ["Boolean", "prototype"],
        "%DataViewPrototype%": ["DataView", "prototype"],
        "%DatePrototype%": ["Date", "prototype"],
        "%ErrorPrototype%": ["Error", "prototype"],
        "%EvalErrorPrototype%": ["EvalError", "prototype"],
        "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
        "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
        "%FunctionPrototype%": ["Function", "prototype"],
        "%Generator%": ["GeneratorFunction", "prototype"],
        "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
        "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
        "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
        "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
        "%JSONParse%": ["JSON", "parse"],
        "%JSONStringify%": ["JSON", "stringify"],
        "%MapPrototype%": ["Map", "prototype"],
        "%NumberPrototype%": ["Number", "prototype"],
        "%ObjectPrototype%": ["Object", "prototype"],
        "%ObjProto_toString%": ["Object", "prototype", "toString"],
        "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
        "%PromisePrototype%": ["Promise", "prototype"],
        "%PromiseProto_then%": ["Promise", "prototype", "then"],
        "%Promise_all%": ["Promise", "all"],
        "%Promise_reject%": ["Promise", "reject"],
        "%Promise_resolve%": ["Promise", "resolve"],
        "%RangeErrorPrototype%": ["RangeError", "prototype"],
        "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
        "%RegExpPrototype%": ["RegExp", "prototype"],
        "%SetPrototype%": ["Set", "prototype"],
        "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
        "%StringPrototype%": ["String", "prototype"],
        "%SymbolPrototype%": ["Symbol", "prototype"],
        "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
        "%TypedArrayPrototype%": ["TypedArray", "prototype"],
        "%TypeErrorPrototype%": ["TypeError", "prototype"],
        "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
        "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
        "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
        "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
        "%URIErrorPrototype%": ["URIError", "prototype"],
        "%WeakMapPrototype%": ["WeakMap", "prototype"],
        "%WeakSetPrototype%": ["WeakSet", "prototype"]
      };
      var _0x1d9295 = _0x1df3f5(611);
      var _0x1f7d13 = _0x1df3f5(123);
      var _0x483961 = _0x1d9295.call(Function.call, Array.prototype.concat);
      var _0x5d2281 = _0x1d9295.call(Function.apply, Array.prototype.splice);
      var _0x197462 = _0x1d9295.call(Function.call, String.prototype.replace);
      var _0x58efd6 = _0x1d9295.call(Function.call, String.prototype.slice);
      var _0x2ed4a5 = _0x1d9295.call(Function.call, RegExp.prototype.exec);
      var _0xa5c87f = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
      var _0x334ce1 = /\\(\\)?/g;
      var _0x1c4da3 = function _0xd8067e(_0x4d9dbb) {
        var _0x334fe4 = _0x58efd6(_0x4d9dbb, 0, 1);
        var _0x247029 = _0x58efd6(_0x4d9dbb, -1);
        if (_0x334fe4 === "%" && _0x247029 !== "%") {
          throw new _0x368b38("invalid intrinsic syntax, expected closing `%`");
        } else if (_0x247029 === "%" && _0x334fe4 !== "%") {
          throw new _0x368b38("invalid intrinsic syntax, expected opening `%`");
        }
        var _0x5d8185 = [];
        _0x197462(_0x4d9dbb, _0xa5c87f, function (_0x2f9453, _0x492c2b, _0x5a7812, _0x3c601a) {
          _0x5d8185[_0x5d8185.length] = _0x5a7812 ? _0x197462(_0x3c601a, _0x334ce1, "$1") : _0x492c2b || _0x2f9453;
        });
        return _0x5d8185;
      };
      var _0x235054 = function _0x109e6d(_0x561631, _0x3db100) {
        var _0x3c5044 = _0x561631;
        var _0x14a472;
        if (_0x1f7d13(_0x1160cf, _0x3c5044)) {
          _0x14a472 = _0x1160cf[_0x3c5044];
          _0x3c5044 = "%" + _0x14a472[0] + "%";
        }
        if (_0x1f7d13(_0x56548f, _0x3c5044)) {
          var _0x2d7b20 = _0x56548f[_0x3c5044];
          if (_0x2d7b20 === _0x317fda) {
            _0x2d7b20 = _0x2eace1(_0x3c5044);
          }
          if (typeof _0x2d7b20 === "undefined" && !_0x3db100) {
            throw new _0x48cc96("intrinsic " + _0x561631 + " exists, but is not available. Please file an issue!");
          }
          var _0x1ee6f4 = {
            alias: _0x14a472,
            name: _0x3c5044,
            value: _0x2d7b20
          };
          return _0x1ee6f4;
        }
        throw new _0x368b38("intrinsic " + _0x561631 + " does not exist!");
      };
      _0x12bca2.exports = function _0xa8acff(_0x178dfa, _0x21105c) {
        if (typeof _0x178dfa !== "string" || _0x178dfa.length === 0) {
          throw new _0x48cc96("intrinsic name must be a non-empty string");
        }
        if (arguments.length > 1 && typeof _0x21105c !== "boolean") {
          throw new _0x48cc96("\"allowMissing\" argument must be a boolean");
        }
        if (_0x2ed4a5(/^%?[^%]*%?$/, _0x178dfa) === null) {
          throw new _0x368b38("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        }
        var _0x4c008b = _0x1c4da3(_0x178dfa);
        var _0x3223b3 = _0x4c008b.length > 0 ? _0x4c008b[0] : "";
        var _0x4fe752 = _0x235054("%" + _0x3223b3 + "%", _0x21105c);
        var _0x16ee17 = _0x4fe752.name;
        var _0x1a940a = _0x4fe752.value;
        var _0x167dc0 = false;
        var _0x5d78f8 = _0x4fe752.alias;
        if (_0x5d78f8) {
          _0x3223b3 = _0x5d78f8[0];
          _0x5d2281(_0x4c008b, _0x483961([0, 1], _0x5d78f8));
        }
        for (var _0x397c6e = 1, _0x12f367 = true; _0x397c6e < _0x4c008b.length; _0x397c6e += 1) {
          var _0x4a3ec9 = _0x4c008b[_0x397c6e];
          var _0xd162f = _0x58efd6(_0x4a3ec9, 0, 1);
          var _0x6394cf = _0x58efd6(_0x4a3ec9, -1);
          if ((_0xd162f === "\"" || _0xd162f === "'" || _0xd162f === "`" || _0x6394cf === "\"" || _0x6394cf === "'" || _0x6394cf === "`") && _0xd162f !== _0x6394cf) {
            throw new _0x368b38("property names with quotes must have matching quotes");
          }
          if (_0x4a3ec9 === "constructor" || !_0x12f367) {
            _0x167dc0 = true;
          }
          _0x3223b3 += "." + _0x4a3ec9;
          _0x16ee17 = "%" + _0x3223b3 + "%";
          if (_0x1f7d13(_0x56548f, _0x16ee17)) {
            _0x1a940a = _0x56548f[_0x16ee17];
          } else if (_0x1a940a != null) {
            if (!(_0x4a3ec9 in _0x1a940a)) {
              if (!_0x21105c) {
                throw new _0x48cc96("base intrinsic for " + _0x178dfa + " exists, but the property is not available.");
              }
              _0xdd1fb5;
              return;
            }
            if (_0x30cc20 && _0x397c6e + 1 >= _0x4c008b.length) {
              var _0x3ee365 = _0x30cc20(_0x1a940a, _0x4a3ec9);
              _0x12f367 = !!_0x3ee365;
              if (_0x12f367 && "get" in _0x3ee365 && !("originalValue" in _0x3ee365.get)) {
                _0x1a940a = _0x3ee365.get;
              } else {
                _0x1a940a = _0x1a940a[_0x4a3ec9];
              }
            } else {
              _0x12f367 = _0x1f7d13(_0x1a940a, _0x4a3ec9);
              _0x1a940a = _0x1a940a[_0x4a3ec9];
            }
            if (_0x12f367 && !_0x167dc0) {
              _0x56548f[_0x16ee17] = _0x1a940a;
            }
          }
        }
        return _0x1a940a;
      };
    },
    520: (_0x323b43, _0x106225, _0x413ec8) => {
      'use strict';

      var _0x1bf493 = _0x413ec8(886);
      var _0x135a57 = _0x1bf493("%Object.getOwnPropertyDescriptor%", true);
      if (_0x135a57) {
        try {
          _0x135a57([], "length");
        } catch (_0x46e23c) {
          _0x135a57 = null;
        }
      }
      _0x323b43.exports = _0x135a57;
    },
    402: (_0x2e394f, _0x5ac972, _0xf7e7ed) => {
      'use strict';

      var _0x416443 = _0xf7e7ed(886);
      var _0x43a729 = _0x416443("%Object.defineProperty%", true);
      var _0x5f4785 = function _0x310814() {
        if (_0x43a729) {
          try {
            _0x43a729({}, "a", {
              value: 1
            });
            return true;
          } catch (_0x50568f) {
            return false;
          }
        }
        return false;
      };
      _0x5f4785.hasArrayLengthDefineBug = function _0x5acb77() {
        if (!_0x5f4785()) {
          return null;
        }
        try {
          return _0x43a729([], "length", {
            value: 1
          }).length !== 1;
        } catch (_0x258acb) {
          return true;
        }
      };
      _0x2e394f.exports = _0x5f4785;
    },
    127: _0x1ce6cf => {
      'use strict';

      var _0x11b43a = {
        foo: {}
      };
      var _0x5cf957 = Object;
      _0x1ce6cf.exports = function _0x4b4bb8() {
        var _0x1fa269 = {
          __proto__: _0x11b43a
        };
        return _0x1fa269.foo === _0x11b43a.foo && !({
          __proto__: null
        } instanceof _0x5cf957);
      };
    },
    636: (_0x4b47a8, _0x473a5e, _0x3518f4) => {
      'use strict';

      var _0x2f8e04 = typeof Symbol !== "undefined" && Symbol;
      var _0x2cca6e = _0x3518f4(734);
      _0x4b47a8.exports = function _0x3e6cb0() {
        if (typeof _0x2f8e04 !== "function") {
          return false;
        }
        if (typeof Symbol !== "function") {
          return false;
        }
        if (typeof _0x2f8e04("foo") !== "symbol") {
          return false;
        }
        if (typeof Symbol("bar") !== "symbol") {
          return false;
        }
        return _0x2cca6e();
      };
    },
    734: _0x32681c => {
      'use strict';

      _0x32681c.exports = function _0x29c999() {
        if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
          return false;
        }
        if (typeof Symbol.iterator === "symbol") {
          return true;
        }
        var _0x57fb4a = {};
        var _0x2120fa = Symbol("test");
        var _0x5b0fb0 = Object(_0x2120fa);
        if (typeof _0x2120fa === "string") {
          return false;
        }
        if (Object.prototype.toString.call(_0x2120fa) !== "[object Symbol]") {
          return false;
        }
        if (Object.prototype.toString.call(_0x5b0fb0) !== "[object Symbol]") {
          return false;
        }
        var _0x40de7c = 42;
        _0x57fb4a[_0x2120fa] = _0x40de7c;
        for (_0x2120fa in _0x57fb4a) {
          return false;
        }
        if (typeof Object.keys === "function" && Object.keys(_0x57fb4a).length !== 0) {
          return false;
        }
        if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(_0x57fb4a).length !== 0) {
          return false;
        }
        var _0x1bef91 = Object.getOwnPropertySymbols(_0x57fb4a);
        if (_0x1bef91.length !== 1 || _0x1bef91[0] !== _0x2120fa) {
          return false;
        }
        if (!Object.prototype.propertyIsEnumerable.call(_0x57fb4a, _0x2120fa)) {
          return false;
        }
        if (typeof Object.getOwnPropertyDescriptor === "function") {
          var _0xe52968 = Object.getOwnPropertyDescriptor(_0x57fb4a, _0x2120fa);
          if (_0xe52968.value !== _0x40de7c || _0xe52968.enumerable !== true) {
            return false;
          }
        }
        return true;
      };
    },
    576: (_0x5a6bb3, _0x1f4460, _0x1cd09b) => {
      'use strict';

      var _0x4ba9bd = _0x1cd09b(734);
      _0x5a6bb3.exports = function _0x5be2ad() {
        return _0x4ba9bd() && !!Symbol.toStringTag;
      };
    },
    123: (_0x3273cc, _0x41bac8, _0x17590f) => {
      'use strict';

      var _0x6f005 = _0x17590f(611);
      _0x3273cc.exports = _0x6f005.call(Function.call, Object.prototype.hasOwnProperty);
    },
    503: (_0xa1fde, _0x53d9c7) => {
      _0x53d9c7.read = function (_0x14cb9b, _0x444b58, _0x168c10, _0x361b58, _0x171e9b) {
        var _0x2b8362;
        var _0x2b6715;
        var _0xc502b2 = _0x171e9b * 8 - _0x361b58 - 1;
        var _0x23814a = (1 << _0xc502b2) - 1;
        var _0x3c6dbd = _0x23814a >> 1;
        var _0x47d66d = -7;
        var _0x462b90 = _0x168c10 ? _0x171e9b - 1 : 0;
        var _0x1c9862 = _0x168c10 ? -1 : 1;
        var _0x71e93f = _0x14cb9b[_0x444b58 + _0x462b90];
        _0x462b90 += _0x1c9862;
        _0x2b8362 = _0x71e93f & (1 << -_0x47d66d) - 1;
        _0x71e93f >>= -_0x47d66d;
        _0x47d66d += _0xc502b2;
        for (; _0x47d66d > 0; _0x2b8362 = _0x2b8362 * 256 + _0x14cb9b[_0x444b58 + _0x462b90], _0x462b90 += _0x1c9862, _0x47d66d -= 8) {}
        _0x2b6715 = _0x2b8362 & (1 << -_0x47d66d) - 1;
        _0x2b8362 >>= -_0x47d66d;
        _0x47d66d += _0x361b58;
        for (; _0x47d66d > 0; _0x2b6715 = _0x2b6715 * 256 + _0x14cb9b[_0x444b58 + _0x462b90], _0x462b90 += _0x1c9862, _0x47d66d -= 8) {}
        if (_0x2b8362 === 0) {
          _0x2b8362 = 1 - _0x3c6dbd;
        } else if (_0x2b8362 === _0x23814a) {
          if (_0x2b6715) {
            return NaN;
          } else {
            return (_0x71e93f ? -1 : 1) * Infinity;
          }
        } else {
          _0x2b6715 = _0x2b6715 + Math.pow(2, _0x361b58);
          _0x2b8362 = _0x2b8362 - _0x3c6dbd;
        }
        return (_0x71e93f ? -1 : 1) * _0x2b6715 * Math.pow(2, _0x2b8362 - _0x361b58);
      };
      _0x53d9c7.write = function (_0x3614c2, _0x22e8de, _0x238951, _0x339bc3, _0xc7ed0d, _0x1e9643) {
        var _0x63fb7f;
        var _0x13f66d;
        var _0x401170;
        var _0x5077fb = _0x1e9643 * 8 - _0xc7ed0d - 1;
        var _0x41e2da = (1 << _0x5077fb) - 1;
        var _0x295e49 = _0x41e2da >> 1;
        var _0x5f4844 = _0xc7ed0d === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
        var _0x2ab0e4 = _0x339bc3 ? 0 : _0x1e9643 - 1;
        var _0x32488c = _0x339bc3 ? 1 : -1;
        var _0x582163 = _0x22e8de < 0 || _0x22e8de === 0 && 1 / _0x22e8de < 0 ? 1 : 0;
        _0x22e8de = Math.abs(_0x22e8de);
        if (isNaN(_0x22e8de) || _0x22e8de === Infinity) {
          _0x13f66d = isNaN(_0x22e8de) ? 1 : 0;
          _0x63fb7f = _0x41e2da;
        } else {
          _0x63fb7f = Math.floor(Math.log(_0x22e8de) / Math.LN2);
          if (_0x22e8de * (_0x401170 = Math.pow(2, -_0x63fb7f)) < 1) {
            _0x63fb7f--;
            _0x401170 *= 2;
          }
          if (_0x63fb7f + _0x295e49 >= 1) {
            _0x22e8de += _0x5f4844 / _0x401170;
          } else {
            _0x22e8de += _0x5f4844 * Math.pow(2, 1 - _0x295e49);
          }
          if (_0x22e8de * _0x401170 >= 2) {
            _0x63fb7f++;
            _0x401170 /= 2;
          }
          if (_0x63fb7f + _0x295e49 >= _0x41e2da) {
            _0x13f66d = 0;
            _0x63fb7f = _0x41e2da;
          } else if (_0x63fb7f + _0x295e49 >= 1) {
            _0x13f66d = (_0x22e8de * _0x401170 - 1) * Math.pow(2, _0xc7ed0d);
            _0x63fb7f = _0x63fb7f + _0x295e49;
          } else {
            _0x13f66d = _0x22e8de * Math.pow(2, _0x295e49 - 1) * Math.pow(2, _0xc7ed0d);
            _0x63fb7f = 0;
          }
        }
        for (; _0xc7ed0d >= 8; _0x3614c2[_0x238951 + _0x2ab0e4] = _0x13f66d & 255, _0x2ab0e4 += _0x32488c, _0x13f66d /= 256, _0xc7ed0d -= 8) {}
        _0x63fb7f = _0x63fb7f << _0xc7ed0d | _0x13f66d;
        _0x5077fb += _0xc7ed0d;
        for (; _0x5077fb > 0; _0x3614c2[_0x238951 + _0x2ab0e4] = _0x63fb7f & 255, _0x2ab0e4 += _0x32488c, _0x63fb7f /= 256, _0x5077fb -= 8) {}
        _0x3614c2[_0x238951 + _0x2ab0e4 - _0x32488c] |= _0x582163 * 128;
      };
    },
    797: _0x4ae30b => {
      if (typeof Object.create === "function") {
        _0x4ae30b.exports = function _0x42026(_0x4a4740, _0xbacc61) {
          if (_0xbacc61) {
            _0x4a4740.super_ = _0xbacc61;
            _0x4a4740.prototype = Object.create(_0xbacc61.prototype, {
              constructor: {
                value: _0x4a4740,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
          }
        };
      } else {
        _0x4ae30b.exports = function _0x546ce8(_0x149668, _0x5535a9) {
          if (_0x5535a9) {
            _0x149668.super_ = _0x5535a9;
            function _0x3d6ef8() {}
            _0x3d6ef8.prototype = _0x5535a9.prototype;
            _0x149668.prototype = new _0x3d6ef8();
            _0x149668.prototype.constructor = _0x149668;
          }
        };
      }
    },
    529: (_0x8d67df, _0x1a44ef, _0x3ff25f) => {
      'use strict';

      var _0x58f578 = _0x3ff25f(576)();
      var _0x3add16 = _0x3ff25f(630);
      var _0x234c76 = _0x3add16("Object.prototype.toString");
      var _0x42efb0 = function _0x12ec44(_0x4b3c98) {
        if (_0x58f578 && _0x4b3c98 && typeof _0x4b3c98 === "object" && Symbol.toStringTag in _0x4b3c98) {
          return false;
        }
        return _0x234c76(_0x4b3c98) === "[object Arguments]";
      };
      var _0x569383 = function _0x278083(_0x2c2b21) {
        if (_0x42efb0(_0x2c2b21)) {
          return true;
        }
        return _0x2c2b21 !== null && typeof _0x2c2b21 === "object" && typeof _0x2c2b21.length === "number" && _0x2c2b21.length >= 0 && _0x234c76(_0x2c2b21) !== "[object Array]" && _0x234c76(_0x2c2b21.callee) === "[object Function]";
      };
      var _0x14bcb6 = function () {
        return _0x42efb0(arguments);
      }();
      _0x42efb0.isLegacyArguments = _0x569383;
      _0x8d67df.exports = _0x14bcb6 ? _0x42efb0 : _0x569383;
    },
    842: _0x3a7be9 => {
      'use strict';

      var _0x28b168 = Function.prototype.toString;
      var _0x4819e7 = typeof Reflect === "object" && Reflect !== null && Reflect.apply;
      var _0x104bb1;
      var _0x5be371;
      if (typeof _0x4819e7 === "function" && typeof Object.defineProperty === "function") {
        try {
          var _0x554478 = {
            get: function () {
              throw _0x5be371;
            }
          };
          _0x104bb1 = Object.defineProperty({}, "length", _0x554478);
          _0x5be371 = {};
          _0x4819e7(function () {
            throw 42;
          }, null, _0x104bb1);
        } catch (_0x182c70) {
          if (_0x182c70 !== _0x5be371) {
            _0x4819e7 = null;
          }
        }
      } else {
        _0x4819e7 = null;
      }
      var _0x40b087 = /^\s*class\b/;
      var _0x15cf59 = function _0x317e7a(_0x369cfb) {
        try {
          var _0x2e6e4f = _0x28b168.call(_0x369cfb);
          return _0x40b087.test(_0x2e6e4f);
        } catch (_0x588d23) {
          return false;
        }
      };
      var _0x6ef836 = function _0x143a09(_0x1fdfbe) {
        try {
          if (_0x15cf59(_0x1fdfbe)) {
            return false;
          }
          _0x28b168.call(_0x1fdfbe);
          return true;
        } catch (_0x3a33c1) {
          return false;
        }
      };
      var _0x209c9f = Object.prototype.toString;
      var _0x51b85c = "[object Object]";
      var _0x57b69d = "[object Function]";
      var _0x1f785b = "[object GeneratorFunction]";
      var _0x24ca11 = "[object HTMLAllCollection]";
      var _0x36f53b = "[object HTML document.all class]";
      var _0x5218b9 = "[object HTMLCollection]";
      var _0x5ae1b2 = typeof Symbol === "function" && !!Symbol.toStringTag;
      var _0x5467ff = !(0 in [,]);
      var _0x2ca447 = function _0x556ffd() {
        return false;
      };
      if (typeof document === "object") {
        var _0x58c9ac = document.all;
        if (_0x209c9f.call(_0x58c9ac) === _0x209c9f.call(document.all)) {
          _0x2ca447 = function _0x54347b(_0x275398) {
            if ((_0x5467ff || !_0x275398) && (typeof _0x275398 === "undefined" || typeof _0x275398 === "object")) {
              try {
                var _0x1772a9 = _0x209c9f.call(_0x275398);
                return (_0x1772a9 === _0x24ca11 || _0x1772a9 === _0x36f53b || _0x1772a9 === _0x5218b9 || _0x1772a9 === _0x51b85c) && _0x275398("") == null;
              } catch (_0x1b6396) {}
            }
            return false;
          };
        }
      }
      _0x3a7be9.exports = _0x4819e7 ? function _0x52ca7(_0x2cae6a) {
        if (_0x2ca447(_0x2cae6a)) {
          return true;
        }
        if (!_0x2cae6a) {
          return false;
        }
        if (typeof _0x2cae6a !== "function" && typeof _0x2cae6a !== "object") {
          return false;
        }
        try {
          _0x4819e7(_0x2cae6a, null, _0x104bb1);
        } catch (_0x1eb48d) {
          if (_0x1eb48d !== _0x5be371) {
            return false;
          }
        }
        return !_0x15cf59(_0x2cae6a) && _0x6ef836(_0x2cae6a);
      } : function _0x56f47f(_0x2af307) {
        if (_0x2ca447(_0x2af307)) {
          return true;
        }
        if (!_0x2af307) {
          return false;
        }
        if (typeof _0x2af307 !== "function" && typeof _0x2af307 !== "object") {
          return false;
        }
        if (_0x5ae1b2) {
          return _0x6ef836(_0x2af307);
        }
        if (_0x15cf59(_0x2af307)) {
          return false;
        }
        var _0x319507 = _0x209c9f.call(_0x2af307);
        if (_0x319507 !== _0x57b69d && _0x319507 !== _0x1f785b && !/^\[object HTML/.test(_0x319507)) {
          return false;
        }
        return _0x6ef836(_0x2af307);
      };
    },
    806: (_0x13cef7, _0x107d5a, _0xc520a0) => {
      'use strict';

      var _0x9f5e8b = Object.prototype.toString;
      var _0x1a17ef = Function.prototype.toString;
      var _0x1cc657 = /^\s*(?:function)?\*/;
      var _0x780db8 = _0xc520a0(576)();
      var _0x29ea28 = Object.getPrototypeOf;
      function _0x5539f5() {
        if (!_0x780db8) {
          return false;
        }
        try {
          return Function("return function*() {}")();
        } catch (_0x15b07a) {}
      }
      var _0x26000a;
      _0x13cef7.exports = function _0x19fadc(_0x59092e) {
        if (typeof _0x59092e !== "function") {
          return false;
        }
        if (_0x1cc657.test(_0x1a17ef.call(_0x59092e))) {
          return true;
        }
        if (!_0x780db8) {
          var _0x2f2e54 = _0x9f5e8b.call(_0x59092e);
          return _0x2f2e54 === "[object GeneratorFunction]";
        }
        if (!_0x29ea28) {
          return false;
        }
        if (typeof _0x26000a === "undefined") {
          var _0x301c92 = _0x5539f5();
          _0x26000a = _0x301c92 ? _0x29ea28(_0x301c92) : false;
        }
        return _0x29ea28(_0x59092e) === _0x26000a;
      };
    },
    148: _0x1b2f90 => {
      'use strict';

      _0x1b2f90.exports = function _0x5768c0(_0x26285a) {
        return _0x26285a !== _0x26285a;
      };
    },
    699: (_0x313919, _0x36a418, _0x31ee33) => {
      'use strict';

      var _0x29b8b4 = _0x31ee33(432);
      var _0x3190f6 = _0x31ee33(680);
      var _0x350399 = _0x31ee33(148);
      var _0x2fbf91 = _0x31ee33(967);
      var _0xf99a2e = _0x31ee33(371);
      var _0x4e58a7 = _0x29b8b4(_0x2fbf91(), Number);
      var _0x26a72b = {
        getPolyfill: _0x2fbf91,
        implementation: _0x350399,
        shim: _0xf99a2e
      };
      _0x3190f6(_0x4e58a7, _0x26a72b);
      _0x313919.exports = _0x4e58a7;
    },
    967: (_0x2badab, _0x5ed5b5, _0x5f1b69) => {
      'use strict';

      var _0x7297ee = _0x5f1b69(148);
      _0x2badab.exports = function _0x26460e() {
        if (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a")) {
          return Number.isNaN;
        }
        return _0x7297ee;
      };
    },
    371: (_0x13aadd, _0x39aed6, _0xe84297) => {
      'use strict';

      var _0x427726 = _0xe84297(680);
      var _0x503c2c = _0xe84297(967);
      _0x13aadd.exports = function _0xc255a() {
        var _0x22decf = _0x503c2c();
        var _0x92d24e = {
          isNaN: _0x22decf
        };
        _0x427726(Number, _0x92d24e, {
          isNaN: function _0x4d540d() {
            return Number.isNaN !== _0x22decf;
          }
        });
        return _0x22decf;
      };
    },
    125: (_0x5c8853, _0x383807, _0x41dbf8) => {
      'use strict';

      var _0x3f1794 = _0x41dbf8(167);
      _0x5c8853.exports = function _0x2f3910(_0x3a7148) {
        return !!_0x3f1794(_0x3a7148);
      };
    },
    506: _0x279a56 => {
      'use strict';

      function _0x467c69(_0x1480eb) {
        return _0x1480eb !== _0x1480eb;
      }
      _0x279a56.exports = function _0x6f85d(_0x5f1011, _0x5874d5) {
        if (_0x5f1011 === 0 && _0x5874d5 === 0) {
          return 1 / _0x5f1011 === 1 / _0x5874d5;
        }
        if (_0x5f1011 === _0x5874d5) {
          return true;
        }
        if (_0x467c69(_0x5f1011) && _0x467c69(_0x5874d5)) {
          return true;
        }
        return false;
      };
    },
    338: (_0x496a99, _0x1babc0, _0xbbbae8) => {
      'use strict';

      var _0x563780 = _0xbbbae8(680);
      var _0xd64a50 = _0xbbbae8(432);
      var _0x37e209 = _0xbbbae8(506);
      var _0x5be1fd = _0xbbbae8(182);
      var _0x55d631 = _0xbbbae8(662);
      var _0x37541f = _0xd64a50(_0x5be1fd(), Object);
      var _0x4fa2f4 = {
        getPolyfill: _0x5be1fd,
        implementation: _0x37e209,
        shim: _0x55d631
      };
      _0x563780(_0x37541f, _0x4fa2f4);
      _0x496a99.exports = _0x37541f;
    },
    182: (_0x4ec3ae, _0x39bbb9, _0x4d10d0) => {
      'use strict';

      var _0x3ed85d = _0x4d10d0(506);
      _0x4ec3ae.exports = function _0x4291a9() {
        if (typeof Object.is === "function") {
          return Object.is;
        } else {
          return _0x3ed85d;
        }
      };
    },
    662: (_0x40b717, _0x417dbc, _0x55ec62) => {
      'use strict';

      var _0x504ea0 = _0x55ec62(182);
      var _0xb7a8d1 = _0x55ec62(680);
      _0x40b717.exports = function _0x2b95a8() {
        var _0x3fd2d7 = _0x504ea0();
        var _0x2fd7e9 = {
          is: _0x3fd2d7
        };
        _0xb7a8d1(Object, _0x2fd7e9, {
          is: function _0x57cc23() {
            return Object.is !== _0x3fd2d7;
          }
        });
        return _0x3fd2d7;
      };
    },
    378: (_0x3d229b, _0x41ba1c, _0x550a3e) => {
      'use strict';

      var _0x1fc69a;
      if (!Object.keys) {
        var _0x2026b3 = Object.prototype.hasOwnProperty;
        var _0x4018bf = Object.prototype.toString;
        var _0x49038a = _0x550a3e(416);
        var _0x27a22a = Object.prototype.propertyIsEnumerable;
        var _0x269a95 = !_0x27a22a.call({
          toString: null
        }, "toString");
        var _0x6389a9 = _0x27a22a.call(function () {}, "prototype");
        var _0x5b186b = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"];
        function _0x376404(_0x4ab635) {
          var _0x4878c3 = _0x4ab635.constructor;
          return _0x4878c3 && _0x4878c3.prototype === _0x4ab635;
        }
        var _0x5eb352 = {
          $applicationCache: true,
          $console: true,
          $external: true,
          $frame: true,
          $frameElement: true,
          $frames: true,
          $innerHeight: true,
          $innerWidth: true,
          $onmozfullscreenchange: true,
          $onmozfullscreenerror: true,
          $outerHeight: true,
          $outerWidth: true,
          $pageXOffset: true,
          $pageYOffset: true,
          $parent: true,
          $scrollLeft: true,
          $scrollTop: true,
          $scrollX: true,
          $scrollY: true,
          $self: true,
          $webkitIndexedDB: true,
          $webkitStorageInfo: true,
          $window: true
        };
        var _0x94f7f4 = function () {
          if (typeof window === "undefined") {
            return false;
          }
          for (var _0x81c580 in window) {
            try {
              if (!_0x5eb352["$" + _0x81c580] && _0x2026b3.call(window, _0x81c580) && window[_0x81c580] !== null && typeof window[_0x81c580] === "object") {
                try {
                  _0x376404(window[_0x81c580]);
                } catch (_0x531c2c) {
                  return true;
                }
              }
            } catch (_0x3d248a) {
              return true;
            }
          }
          return false;
        }();
        function _0x4af3b9(_0x32cb52) {
          if (typeof window === "undefined" || !_0x94f7f4) {
            return _0x376404(_0x32cb52);
          }
          try {
            return _0x376404(_0x32cb52);
          } catch (_0x4068ef) {
            return false;
          }
        }
        _0x1fc69a = function _0x200dfc(_0x39bcfe) {
          var _0x42e8fd = _0x39bcfe !== null && typeof _0x39bcfe === "object";
          var _0x1be695 = _0x4018bf.call(_0x39bcfe) === "[object Function]";
          var _0x3e6329 = _0x49038a(_0x39bcfe);
          var _0x1c41d9 = _0x42e8fd && _0x4018bf.call(_0x39bcfe) === "[object String]";
          var _0x23a588 = [];
          if (!_0x42e8fd && !_0x1be695 && !_0x3e6329) {
            throw new TypeError("Object.keys called on a non-object");
          }
          var _0x22e354 = _0x6389a9 && _0x1be695;
          if (_0x1c41d9 && _0x39bcfe.length > 0 && !_0x2026b3.call(_0x39bcfe, 0)) {
            for (var _0x151129 = 0; _0x151129 < _0x39bcfe.length; ++_0x151129) {
              _0x23a588.push(String(_0x151129));
            }
          }
          if (_0x3e6329 && _0x39bcfe.length > 0) {
            for (var _0x47871c = 0; _0x47871c < _0x39bcfe.length; ++_0x47871c) {
              _0x23a588.push(String(_0x47871c));
            }
          } else {
            for (var _0x1fe50f in _0x39bcfe) {
              if ((!_0x22e354 || _0x1fe50f !== "prototype") && _0x2026b3.call(_0x39bcfe, _0x1fe50f)) {
                _0x23a588.push(String(_0x1fe50f));
              }
            }
          }
          if (_0x269a95) {
            var _0x3f6c22 = _0x4af3b9(_0x39bcfe);
            for (var _0x48a486 = 0; _0x48a486 < _0x5b186b.length; ++_0x48a486) {
              if ((!_0x3f6c22 || _0x5b186b[_0x48a486] !== "constructor") && _0x2026b3.call(_0x39bcfe, _0x5b186b[_0x48a486])) {
                _0x23a588.push(_0x5b186b[_0x48a486]);
              }
            }
          }
          return _0x23a588;
        };
      }
      _0x3d229b.exports = _0x1fc69a;
    },
    277: (_0x304cc7, _0xbc1992, _0x8f04e2) => {
      'use strict';

      var _0x537c3e = Array.prototype.slice;
      var _0x13a4e8 = _0x8f04e2(416);
      var _0x4a8059 = Object.keys;
      var _0x4077c0 = _0x4a8059 ? function _0x9fd36a(_0x1d8d46) {
        return _0x4a8059(_0x1d8d46);
      } : _0x8f04e2(378);
      var _0x5723d9 = Object.keys;
      _0x4077c0.shim = function _0x344e0b() {
        if (Object.keys) {
          var _0x1220af = function () {
            var _0x5ade7b = Object.keys(arguments);
            return _0x5ade7b && _0x5ade7b.length === arguments.length;
          }(1, 2);
          if (!_0x1220af) {
            Object.keys = function _0x50fd33(_0x23c624) {
              if (_0x13a4e8(_0x23c624)) {
                return _0x5723d9(_0x537c3e.call(_0x23c624));
              }
              return _0x5723d9(_0x23c624);
            };
          }
        } else {
          Object.keys = _0x4077c0;
        }
        return Object.keys || _0x4077c0;
      };
      _0x304cc7.exports = _0x4077c0;
    },
    416: _0x5e5011 => {
      'use strict';

      var _0x5cb6f9 = Object.prototype.toString;
      _0x5e5011.exports = function _0x1179dc(_0x577e2d) {
        var _0x1f8578 = _0x5cb6f9.call(_0x577e2d);
        var _0x3e7989 = _0x1f8578 === "[object Arguments]";
        if (!_0x3e7989) {
          _0x3e7989 = _0x1f8578 !== "[object Array]" && _0x577e2d !== null && typeof _0x577e2d === "object" && typeof _0x577e2d.length === "number" && _0x577e2d.length >= 0 && _0x5cb6f9.call(_0x577e2d.callee) === "[object Function]";
        }
        return _0x3e7989;
      };
    },
    13: _0xd677c8 => {
      var _0x346926 = _0xd677c8.exports = {};
      var _0x5256d9;
      var _0x89fac4;
      function _0x48a0f6() {
        throw new Error("setTimeout has not been defined");
      }
      function _0x393b6d() {
        throw new Error("clearTimeout has not been defined");
      }
      (function () {
        try {
          if (typeof setTimeout === "function") {
            _0x5256d9 = setTimeout;
          } else {
            _0x5256d9 = _0x48a0f6;
          }
        } catch (_0x2ffef7) {
          _0x5256d9 = _0x48a0f6;
        }
        try {
          if (typeof clearTimeout === "function") {
            _0x89fac4 = clearTimeout;
          } else {
            _0x89fac4 = _0x393b6d;
          }
        } catch (_0x819714) {
          _0x89fac4 = _0x393b6d;
        }
      })();
      function _0x25da1f(_0x137016) {
        if (_0x5256d9 === setTimeout) {
          return setTimeout(_0x137016, 0);
        }
        if ((_0x5256d9 === _0x48a0f6 || !_0x5256d9) && setTimeout) {
          _0x5256d9 = setTimeout;
          return setTimeout(_0x137016, 0);
        }
        try {
          return _0x5256d9(_0x137016, 0);
        } catch (_0x3a2a52) {
          try {
            return _0x5256d9.call(null, _0x137016, 0);
          } catch (_0x58bc26) {
            return _0x5256d9.call(this, _0x137016, 0);
          }
        }
      }
      function _0x342bc4(_0x39d28d) {
        if (_0x89fac4 === clearTimeout) {
          return clearTimeout(_0x39d28d);
        }
        if ((_0x89fac4 === _0x393b6d || !_0x89fac4) && clearTimeout) {
          _0x89fac4 = clearTimeout;
          return clearTimeout(_0x39d28d);
        }
        try {
          return _0x89fac4(_0x39d28d);
        } catch (_0x4d6591) {
          try {
            return _0x89fac4.call(null, _0x39d28d);
          } catch (_0x2e7366) {
            return _0x89fac4.call(this, _0x39d28d);
          }
        }
      }
      var _0x4eba90 = [];
      var _0x5ae647 = false;
      var _0x5d0482;
      var _0x37ed02 = -1;
      function _0x54deb8() {
        if (!_0x5ae647 || !_0x5d0482) {
          return;
        }
        _0x5ae647 = false;
        if (_0x5d0482.length) {
          _0x4eba90 = _0x5d0482.concat(_0x4eba90);
        } else {
          _0x37ed02 = -1;
        }
        if (_0x4eba90.length) {
          _0x4b2d07();
        }
      }
      function _0x4b2d07() {
        if (_0x5ae647) {
          return;
        }
        var _0x1d0e0b = _0x25da1f(_0x54deb8);
        _0x5ae647 = true;
        var _0x224203 = _0x4eba90.length;
        while (_0x224203) {
          _0x5d0482 = _0x4eba90;
          _0x4eba90 = [];
          while (++_0x37ed02 < _0x224203) {
            if (_0x5d0482) {
              _0x5d0482[_0x37ed02].run();
            }
          }
          _0x37ed02 = -1;
          _0x224203 = _0x4eba90.length;
        }
        _0x5d0482 = null;
        _0x5ae647 = false;
        _0x342bc4(_0x1d0e0b);
      }
      _0x346926.nextTick = function (_0x2252e6) {
        var _0xe4145e = new Array(arguments.length - 1);
        if (arguments.length > 1) {
          for (var _0x1d1219 = 1; _0x1d1219 < arguments.length; _0x1d1219++) {
            _0xe4145e[_0x1d1219 - 1] = arguments[_0x1d1219];
          }
        }
        _0x4eba90.push(new _0x353ffc(_0x2252e6, _0xe4145e));
        if (_0x4eba90.length === 1 && !_0x5ae647) {
          _0x25da1f(_0x4b2d07);
        }
      };
      function _0x353ffc(_0x4098b4, _0x5da569) {
        this.fun = _0x4098b4;
        this.array = _0x5da569;
      }
      _0x353ffc.prototype.run = function () {
        this.fun.apply(null, this.array);
      };
      _0x346926.title = "browser";
      _0x346926.browser = true;
      _0x346926.env = {};
      _0x346926.argv = [];
      _0x346926.version = "";
      _0x346926.versions = {};
      function _0x362bf5() {}
      _0x346926.on = _0x362bf5;
      _0x346926.addListener = _0x362bf5;
      _0x346926.once = _0x362bf5;
      _0x346926.off = _0x362bf5;
      _0x346926.removeListener = _0x362bf5;
      _0x346926.removeAllListeners = _0x362bf5;
      _0x346926.emit = _0x362bf5;
      _0x346926.prependListener = _0x362bf5;
      _0x346926.prependOnceListener = _0x362bf5;
      _0x346926.listeners = function (_0x429c6a) {
        return [];
      };
      _0x346926.binding = function (_0x1d05d5) {
        throw new Error("process.binding is not supported");
      };
      _0x346926.cwd = function () {
        return "/";
      };
      _0x346926.chdir = function (_0x5322d3) {
        throw new Error("process.chdir is not supported");
      };
      _0x346926.umask = function () {
        return 0;
      };
    },
    821: _0x43ac10 => {
      _0x43ac10.exports = function _0x2f75d3(_0x2069a0) {
        return _0x2069a0 && typeof _0x2069a0 === "object" && typeof _0x2069a0.copy === "function" && typeof _0x2069a0.fill === "function" && typeof _0x2069a0.readUInt8 === "function";
      };
    },
    451: (_0x7413bc, _0x178cdf, _0x3a72ce) => {
      'use strict';

      var _0xa03e91 = _0x3a72ce(529);
      var _0x5221a8 = _0x3a72ce(806);
      var _0x5dea2e = _0x3a72ce(167);
      var _0x4ba998 = _0x3a72ce(125);
      function _0x4704bf(_0xb7ddb7) {
        return _0xb7ddb7.call.bind(_0xb7ddb7);
      }
      var _0x488d0a = typeof BigInt !== "undefined";
      var _0xb4a9cc = typeof Symbol !== "undefined";
      var _0x478bed = _0x4704bf(Object.prototype.toString);
      var _0x39bab3 = _0x4704bf(Number.prototype.valueOf);
      var _0x502ec9 = _0x4704bf(String.prototype.valueOf);
      var _0x1208b0 = _0x4704bf(Boolean.prototype.valueOf);
      if (_0x488d0a) {
        var _0x593d24 = _0x4704bf(BigInt.prototype.valueOf);
      }
      if (_0xb4a9cc) {
        var _0x32817b = _0x4704bf(Symbol.prototype.valueOf);
      }
      function _0x271c71(_0x1cdec4, _0x1fd0ed) {
        if (typeof _0x1cdec4 !== "object") {
          return false;
        }
        try {
          _0x1fd0ed(_0x1cdec4);
          return true;
        } catch (_0x46e2db) {
          return false;
        }
      }
      _0x178cdf.isArgumentsObject = _0xa03e91;
      _0x178cdf.isGeneratorFunction = _0x5221a8;
      _0x178cdf.isTypedArray = _0x4ba998;
      function _0x31e4b6(_0x25c74a) {
        return typeof Promise !== "undefined" && _0x25c74a instanceof Promise || _0x25c74a !== null && typeof _0x25c74a === "object" && typeof _0x25c74a.then === "function" && typeof _0x25c74a.catch === "function";
      }
      _0x178cdf.isPromise = _0x31e4b6;
      function _0x37620f(_0x8986e7) {
        if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
          return ArrayBuffer.isView(_0x8986e7);
        }
        return _0x4ba998(_0x8986e7) || _0x4a5eaa(_0x8986e7);
      }
      _0x178cdf.isArrayBufferView = _0x37620f;
      function _0x5bf4b0(_0x8aec8a) {
        return _0x5dea2e(_0x8aec8a) === "Uint8Array";
      }
      _0x178cdf.isUint8Array = _0x5bf4b0;
      function _0x178416(_0x23adef) {
        return _0x5dea2e(_0x23adef) === "Uint8ClampedArray";
      }
      _0x178cdf.isUint8ClampedArray = _0x178416;
      function _0x56cc22(_0x487580) {
        return _0x5dea2e(_0x487580) === "Uint16Array";
      }
      _0x178cdf.isUint16Array = _0x56cc22;
      function _0x1733e2(_0x454aa2) {
        return _0x5dea2e(_0x454aa2) === "Uint32Array";
      }
      _0x178cdf.isUint32Array = _0x1733e2;
      function _0x2e2e17(_0x37104d) {
        return _0x5dea2e(_0x37104d) === "Int8Array";
      }
      _0x178cdf.isInt8Array = _0x2e2e17;
      function _0x4bd097(_0x357422) {
        return _0x5dea2e(_0x357422) === "Int16Array";
      }
      _0x178cdf.isInt16Array = _0x4bd097;
      function _0x39322b(_0x289064) {
        return _0x5dea2e(_0x289064) === "Int32Array";
      }
      _0x178cdf.isInt32Array = _0x39322b;
      function _0x3e5ffa(_0x1a060e) {
        return _0x5dea2e(_0x1a060e) === "Float32Array";
      }
      _0x178cdf.isFloat32Array = _0x3e5ffa;
      function _0x2129f9(_0x2c913b) {
        return _0x5dea2e(_0x2c913b) === "Float64Array";
      }
      _0x178cdf.isFloat64Array = _0x2129f9;
      function _0x5f54ce(_0x1d4cd0) {
        return _0x5dea2e(_0x1d4cd0) === "BigInt64Array";
      }
      _0x178cdf.isBigInt64Array = _0x5f54ce;
      function _0x190577(_0x141ba6) {
        return _0x5dea2e(_0x141ba6) === "BigUint64Array";
      }
      _0x178cdf.isBigUint64Array = _0x190577;
      function _0xbc4555(_0x47fa14) {
        return _0x478bed(_0x47fa14) === "[object Map]";
      }
      _0xbc4555.working = typeof Map !== "undefined" && _0xbc4555(new Map());
      function _0x418e81(_0x2c8828) {
        if (typeof Map === "undefined") {
          return false;
        }
        if (_0xbc4555.working) {
          return _0xbc4555(_0x2c8828);
        } else {
          return _0x2c8828 instanceof Map;
        }
      }
      _0x178cdf.isMap = _0x418e81;
      function _0x3119ca(_0x5d35a7) {
        return _0x478bed(_0x5d35a7) === "[object Set]";
      }
      _0x3119ca.working = typeof Set !== "undefined" && _0x3119ca(new Set());
      function _0x58c98d(_0x199429) {
        if (typeof Set === "undefined") {
          return false;
        }
        if (_0x3119ca.working) {
          return _0x3119ca(_0x199429);
        } else {
          return _0x199429 instanceof Set;
        }
      }
      _0x178cdf.isSet = _0x58c98d;
      function _0x58a015(_0x51d055) {
        return _0x478bed(_0x51d055) === "[object WeakMap]";
      }
      _0x58a015.working = typeof WeakMap !== "undefined" && _0x58a015(new WeakMap());
      function _0x12f792(_0x490a7f) {
        if (typeof WeakMap === "undefined") {
          return false;
        }
        if (_0x58a015.working) {
          return _0x58a015(_0x490a7f);
        } else {
          return _0x490a7f instanceof WeakMap;
        }
      }
      _0x178cdf.isWeakMap = _0x12f792;
      function _0x508957(_0x56567b) {
        return _0x478bed(_0x56567b) === "[object WeakSet]";
      }
      _0x508957.working = typeof WeakSet !== "undefined" && _0x508957(new WeakSet());
      function _0xfdca9e(_0x29b24f) {
        return _0x508957(_0x29b24f);
      }
      _0x178cdf.isWeakSet = _0xfdca9e;
      function _0x236cf1(_0xcedad) {
        return _0x478bed(_0xcedad) === "[object ArrayBuffer]";
      }
      _0x236cf1.working = typeof ArrayBuffer !== "undefined" && _0x236cf1(new ArrayBuffer());
      function _0x23fd5d(_0x571ee6) {
        if (typeof ArrayBuffer === "undefined") {
          return false;
        }
        if (_0x236cf1.working) {
          return _0x236cf1(_0x571ee6);
        } else {
          return _0x571ee6 instanceof ArrayBuffer;
        }
      }
      _0x178cdf.isArrayBuffer = _0x23fd5d;
      function _0x2090c2(_0x2eb174) {
        return _0x478bed(_0x2eb174) === "[object DataView]";
      }
      _0x2090c2.working = typeof ArrayBuffer !== "undefined" && typeof DataView !== "undefined" && _0x2090c2(new DataView(new ArrayBuffer(1), 0, 1));
      function _0x4a5eaa(_0x3b8627) {
        if (typeof DataView === "undefined") {
          return false;
        }
        if (_0x2090c2.working) {
          return _0x2090c2(_0x3b8627);
        } else {
          return _0x3b8627 instanceof DataView;
        }
      }
      _0x178cdf.isDataView = _0x4a5eaa;
      var _0x480e68 = typeof SharedArrayBuffer !== "undefined" ? SharedArrayBuffer : undefined;
      function _0x3a183d(_0x17eb48) {
        return _0x478bed(_0x17eb48) === "[object SharedArrayBuffer]";
      }
      function _0x1e5031(_0x548779) {
        if (typeof _0x480e68 === "undefined") {
          return false;
        }
        if (typeof _0x3a183d.working === "undefined") {
          _0x3a183d.working = _0x3a183d(new _0x480e68());
        }
        if (_0x3a183d.working) {
          return _0x3a183d(_0x548779);
        } else {
          return _0x548779 instanceof _0x480e68;
        }
      }
      _0x178cdf.isSharedArrayBuffer = _0x1e5031;
      function _0xae564(_0x2806b4) {
        return _0x478bed(_0x2806b4) === "[object AsyncFunction]";
      }
      _0x178cdf.isAsyncFunction = _0xae564;
      function _0x4c4120(_0x2bf86b) {
        return _0x478bed(_0x2bf86b) === "[object Map Iterator]";
      }
      _0x178cdf.isMapIterator = _0x4c4120;
      function _0x5625d5(_0x79987e) {
        return _0x478bed(_0x79987e) === "[object Set Iterator]";
      }
      _0x178cdf.isSetIterator = _0x5625d5;
      function _0x2d1777(_0x237e23) {
        return _0x478bed(_0x237e23) === "[object Generator]";
      }
      _0x178cdf.isGeneratorObject = _0x2d1777;
      function _0x5cdc26(_0x5ae590) {
        return _0x478bed(_0x5ae590) === "[object WebAssembly.Module]";
      }
      _0x178cdf.isWebAssemblyCompiledModule = _0x5cdc26;
      function _0x380dce(_0x3eda37) {
        return _0x271c71(_0x3eda37, _0x39bab3);
      }
      _0x178cdf.isNumberObject = _0x380dce;
      function _0x2666d7(_0x4e895f) {
        return _0x271c71(_0x4e895f, _0x502ec9);
      }
      _0x178cdf.isStringObject = _0x2666d7;
      function _0x37912b(_0x8db10c) {
        return _0x271c71(_0x8db10c, _0x1208b0);
      }
      _0x178cdf.isBooleanObject = _0x37912b;
      function _0x2e43d1(_0xf67369) {
        return _0x488d0a && _0x271c71(_0xf67369, _0x593d24);
      }
      _0x178cdf.isBigIntObject = _0x2e43d1;
      function _0xb58c4c(_0x1ba5e1) {
        return _0xb4a9cc && _0x271c71(_0x1ba5e1, _0x32817b);
      }
      _0x178cdf.isSymbolObject = _0xb58c4c;
      function _0x2c0bea(_0x1a46e4) {
        return _0x380dce(_0x1a46e4) || _0x2666d7(_0x1a46e4) || _0x37912b(_0x1a46e4) || _0x2e43d1(_0x1a46e4) || _0xb58c4c(_0x1a46e4);
      }
      _0x178cdf.isBoxedPrimitive = _0x2c0bea;
      function _0x1859ba(_0x105180) {
        return typeof Uint8Array !== "undefined" && (_0x23fd5d(_0x105180) || _0x1e5031(_0x105180));
      }
      _0x178cdf.isAnyArrayBuffer = _0x1859ba;
      ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function (_0x5bed79) {
        Object.defineProperty(_0x178cdf, _0x5bed79, {
          enumerable: false,
          value: function () {
            throw new Error(_0x5bed79 + " is not supported in userland");
          }
        });
      });
    },
    385: (_0x4e68c1, _0x398519, _0x2c8297) => {
      var _0x1e44b3 = _0x2c8297(13);
      var _0x27ad66 = _0x2c8297(480);
      var _0xe6059 = Object.getOwnPropertyDescriptors || function _0x431062(_0xb18bf7) {
        var _0x44630b = Object.keys(_0xb18bf7);
        var _0x4b52ba = {};
        for (var _0x437bb7 = 0; _0x437bb7 < _0x44630b.length; _0x437bb7++) {
          _0x4b52ba[_0x44630b[_0x437bb7]] = Object.getOwnPropertyDescriptor(_0xb18bf7, _0x44630b[_0x437bb7]);
        }
        return _0x4b52ba;
      };
      var _0xcd6005 = /%[sdj%]/g;
      _0x398519.format = function (_0x272b1d) {
        if (!_0x5b3d3a(_0x272b1d)) {
          var _0x55d5b5 = [];
          for (var _0x41b367 = 0; _0x41b367 < arguments.length; _0x41b367++) {
            _0x55d5b5.push(_0x1e7b38(arguments[_0x41b367]));
          }
          return _0x55d5b5.join(" ");
        }
        var _0x41b367 = 1;
        var _0x3918be = arguments;
        var _0x5b0c9d = _0x3918be.length;
        var _0x54a09d = String(_0x272b1d).replace(_0xcd6005, function (_0x204e8b) {
          if (_0x204e8b === "%%") {
            return "%";
          }
          if (_0x41b367 >= _0x5b0c9d) {
            return _0x204e8b;
          }
          switch (_0x204e8b) {
            case "%s":
              return String(_0x3918be[_0x41b367++]);
            case "%d":
              return Number(_0x3918be[_0x41b367++]);
            case "%j":
              try {
                return JSON.stringify(_0x3918be[_0x41b367++]);
              } catch (_0x55e7b2) {
                return "[Circular]";
              }
            default:
              return _0x204e8b;
          }
        });
        for (var _0x285270 = _0x3918be[_0x41b367]; _0x41b367 < _0x5b0c9d; _0x285270 = _0x3918be[++_0x41b367]) {
          if (_0x28bca2(_0x285270) || !_0xc1a67d(_0x285270)) {
            _0x54a09d += " " + _0x285270;
          } else {
            _0x54a09d += " " + _0x1e7b38(_0x285270);
          }
        }
        return _0x54a09d;
      };
      _0x398519.deprecate = function (_0x2bd0ed, _0x2c3443) {
        if (typeof _0x1e44b3 !== "undefined" && _0x1e44b3.noDeprecation === true) {
          return _0x2bd0ed;
        }
        if (typeof _0x1e44b3 === "undefined") {
          return function () {
            return _0x398519.deprecate(_0x2bd0ed, _0x2c3443).apply(this, arguments);
          };
        }
        var _0x5dd631 = false;
        function _0x45b0a1() {
          if (!_0x5dd631) {
            if (_0x1e44b3.throwDeprecation) {
              throw new Error(_0x2c3443);
            } else if (_0x1e44b3.traceDeprecation) {
              _0x27ad66.trace(_0x2c3443);
            } else {
              _0x27ad66.error(_0x2c3443);
            }
            _0x5dd631 = true;
          }
          return _0x2bd0ed.apply(this, arguments);
        }
        return _0x45b0a1;
      };
      var _0x34831e = {};
      var _0xf4bcf9 = /^$/;
      if (_0x1e44b3.env.NODE_DEBUG) {
        var _0x28aa75 = _0x1e44b3.env.NODE_DEBUG;
        _0x28aa75 = _0x28aa75.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase();
        _0xf4bcf9 = new RegExp("^" + _0x28aa75 + "$", "i");
      }
      _0x398519.debuglog = function (_0x223693) {
        _0x223693 = _0x223693.toUpperCase();
        if (!_0x34831e[_0x223693]) {
          if (_0xf4bcf9.test(_0x223693)) {
            var _0x1b79c5 = _0x1e44b3.pid;
            _0x34831e[_0x223693] = function () {
              var _0x3fb6aa = _0x398519.format.apply(_0x398519, arguments);
              _0x27ad66.error("%s %d: %s", _0x223693, _0x1b79c5, _0x3fb6aa);
            };
          } else {
            _0x34831e[_0x223693] = function () {};
          }
        }
        return _0x34831e[_0x223693];
      };
      function _0x1e7b38(_0x162abf, _0x28c4a5) {
        var _0x3aa066 = {
          seen: [],
          stylize: _0x5e9019
        };
        var _0x4c48b9 = _0x3aa066;
        if (arguments.length >= 3) {
          _0x4c48b9.depth = arguments[2];
        }
        if (arguments.length >= 4) {
          _0x4c48b9.colors = arguments[3];
        }
        if (_0x1c5997(_0x28c4a5)) {
          _0x4c48b9.showHidden = _0x28c4a5;
        } else if (_0x28c4a5) {
          _0x398519._extend(_0x4c48b9, _0x28c4a5);
        }
        if (_0x19734f(_0x4c48b9.showHidden)) {
          _0x4c48b9.showHidden = false;
        }
        if (_0x19734f(_0x4c48b9.depth)) {
          _0x4c48b9.depth = 2;
        }
        if (_0x19734f(_0x4c48b9.colors)) {
          _0x4c48b9.colors = false;
        }
        if (_0x19734f(_0x4c48b9.customInspect)) {
          _0x4c48b9.customInspect = true;
        }
        if (_0x4c48b9.colors) {
          _0x4c48b9.stylize = _0x384302;
        }
        return _0x578db1(_0x4c48b9, _0x162abf, _0x4c48b9.depth);
      }
      _0x398519.inspect = _0x1e7b38;
      _0x1e7b38.colors = {
        bold: [1, 22],
        italic: [3, 23],
        underline: [4, 24],
        inverse: [7, 27],
        white: [37, 39],
        grey: [90, 39],
        black: [30, 39],
        blue: [34, 39],
        cyan: [36, 39],
        green: [32, 39],
        magenta: [35, 39],
        red: [31, 39],
        yellow: [33, 39]
      };
      _0x1e7b38.styles = {
        special: "cyan",
        number: "yellow",
        boolean: "yellow",
        undefined: "grey",
        null: "bold",
        string: "green",
        date: "magenta",
        regexp: "red"
      };
      function _0x384302(_0x3b03b4, _0x53067b) {
        var _0x3fc529 = _0x1e7b38.styles[_0x53067b];
        if (_0x3fc529) {
          return "[" + _0x1e7b38.colors[_0x3fc529][0] + "m" + _0x3b03b4 + "[" + _0x1e7b38.colors[_0x3fc529][1] + "m";
        } else {
          return _0x3b03b4;
        }
      }
      function _0x5e9019(_0x533b7b, _0x28b0bd) {
        return _0x533b7b;
      }
      function _0x51c762(_0x2cfdd3) {
        var _0x1de642 = {};
        _0x2cfdd3.forEach(function (_0x27e03e, _0x561108) {
          _0x1de642[_0x27e03e] = true;
        });
        return _0x1de642;
      }
      function _0x578db1(_0x476de, _0x4044bd, _0x31a3da) {
        if (_0x476de.customInspect && _0x4044bd && _0x2678e5(_0x4044bd.inspect) && _0x4044bd.inspect !== _0x398519.inspect && (!_0x4044bd.constructor || _0x4044bd.constructor.prototype !== _0x4044bd)) {
          var _0x557f8b = _0x4044bd.inspect(_0x31a3da, _0x476de);
          if (!_0x5b3d3a(_0x557f8b)) {
            _0x557f8b = _0x578db1(_0x476de, _0x557f8b, _0x31a3da);
          }
          return _0x557f8b;
        }
        var _0xa11aa8 = _0x43af9e(_0x476de, _0x4044bd);
        if (_0xa11aa8) {
          return _0xa11aa8;
        }
        var _0x9d172b = Object.keys(_0x4044bd);
        var _0x30de13 = _0x51c762(_0x9d172b);
        if (_0x476de.showHidden) {
          _0x9d172b = Object.getOwnPropertyNames(_0x4044bd);
        }
        if (_0x416bc7(_0x4044bd) && (_0x9d172b.indexOf("message") >= 0 || _0x9d172b.indexOf("description") >= 0)) {
          return _0x187ef7(_0x4044bd);
        }
        if (_0x9d172b.length === 0) {
          if (_0x2678e5(_0x4044bd)) {
            var _0x1b004e = _0x4044bd.name ? ": " + _0x4044bd.name : "";
            return _0x476de.stylize("[Function" + _0x1b004e + "]", "special");
          }
          if (_0x434482(_0x4044bd)) {
            return _0x476de.stylize(RegExp.prototype.toString.call(_0x4044bd), "regexp");
          }
          if (_0x5456bf(_0x4044bd)) {
            return _0x476de.stylize(Date.prototype.toString.call(_0x4044bd), "date");
          }
          if (_0x416bc7(_0x4044bd)) {
            return _0x187ef7(_0x4044bd);
          }
        }
        var _0x451656 = "";
        var _0x3298f7 = false;
        var _0x5d38f8 = ["{", "}"];
        if (_0x11c3a1(_0x4044bd)) {
          _0x3298f7 = true;
          _0x5d38f8 = ["[", "]"];
        }
        if (_0x2678e5(_0x4044bd)) {
          var _0x5927aa = _0x4044bd.name ? ": " + _0x4044bd.name : "";
          _0x451656 = " [Function" + _0x5927aa + "]";
        }
        if (_0x434482(_0x4044bd)) {
          _0x451656 = " " + RegExp.prototype.toString.call(_0x4044bd);
        }
        if (_0x5456bf(_0x4044bd)) {
          _0x451656 = " " + Date.prototype.toUTCString.call(_0x4044bd);
        }
        if (_0x416bc7(_0x4044bd)) {
          _0x451656 = " " + _0x187ef7(_0x4044bd);
        }
        if (_0x9d172b.length === 0 && (!_0x3298f7 || _0x4044bd.length == 0)) {
          return _0x5d38f8[0] + _0x451656 + _0x5d38f8[1];
        }
        if (_0x31a3da < 0) {
          if (_0x434482(_0x4044bd)) {
            return _0x476de.stylize(RegExp.prototype.toString.call(_0x4044bd), "regexp");
          } else {
            return _0x476de.stylize("[Object]", "special");
          }
        }
        _0x476de.seen.push(_0x4044bd);
        var _0xcd0db3;
        if (_0x3298f7) {
          _0xcd0db3 = _0x445e81(_0x476de, _0x4044bd, _0x31a3da, _0x30de13, _0x9d172b);
        } else {
          _0xcd0db3 = _0x9d172b.map(function (_0x2045db) {
            return _0x4887d8(_0x476de, _0x4044bd, _0x31a3da, _0x30de13, _0x2045db, _0x3298f7);
          });
        }
        _0x476de.seen.pop();
        return _0x451f2c(_0xcd0db3, _0x451656, _0x5d38f8);
      }
      function _0x43af9e(_0x514705, _0x12aa85) {
        if (_0x19734f(_0x12aa85)) {
          return _0x514705.stylize("undefined", "undefined");
        }
        if (_0x5b3d3a(_0x12aa85)) {
          var _0x16f6e6 = "'" + JSON.stringify(_0x12aa85).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, "\"") + "'";
          return _0x514705.stylize(_0x16f6e6, "string");
        }
        if (_0x1d7a49(_0x12aa85)) {
          return _0x514705.stylize("" + _0x12aa85, "number");
        }
        if (_0x1c5997(_0x12aa85)) {
          return _0x514705.stylize("" + _0x12aa85, "boolean");
        }
        if (_0x28bca2(_0x12aa85)) {
          return _0x514705.stylize("null", "null");
        }
      }
      function _0x187ef7(_0x241b45) {
        return "[" + Error.prototype.toString.call(_0x241b45) + "]";
      }
      function _0x445e81(_0x45a694, _0x2a434c, _0x666eed, _0x253ae3, _0x309ef2) {
        var _0x561240 = [];
        for (var _0x4771c = 0, _0x449ae6 = _0x2a434c.length; _0x4771c < _0x449ae6; ++_0x4771c) {
          if (_0x46056e(_0x2a434c, String(_0x4771c))) {
            _0x561240.push(_0x4887d8(_0x45a694, _0x2a434c, _0x666eed, _0x253ae3, String(_0x4771c), true));
          } else {
            _0x561240.push("");
          }
        }
        _0x309ef2.forEach(function (_0x5fd7e5) {
          if (!_0x5fd7e5.match(/^\d+$/)) {
            _0x561240.push(_0x4887d8(_0x45a694, _0x2a434c, _0x666eed, _0x253ae3, _0x5fd7e5, true));
          }
        });
        return _0x561240;
      }
      function _0x4887d8(_0x22b68a, _0xa62133, _0x42b262, _0x58b1d6, _0x1e59c0, _0x2f4f11) {
        var _0x411e48;
        var _0x884349;
        var _0x257134;
        _0x257134 = Object.getOwnPropertyDescriptor(_0xa62133, _0x1e59c0) || {
          value: _0xa62133[_0x1e59c0]
        };
        if (_0x257134.get) {
          if (_0x257134.set) {
            _0x884349 = _0x22b68a.stylize("[Getter/Setter]", "special");
          } else {
            _0x884349 = _0x22b68a.stylize("[Getter]", "special");
          }
        } else if (_0x257134.set) {
          _0x884349 = _0x22b68a.stylize("[Setter]", "special");
        }
        if (!_0x46056e(_0x58b1d6, _0x1e59c0)) {
          _0x411e48 = "[" + _0x1e59c0 + "]";
        }
        if (!_0x884349) {
          if (_0x22b68a.seen.indexOf(_0x257134.value) < 0) {
            if (_0x28bca2(_0x42b262)) {
              _0x884349 = _0x578db1(_0x22b68a, _0x257134.value, null);
            } else {
              _0x884349 = _0x578db1(_0x22b68a, _0x257134.value, _0x42b262 - 1);
            }
            if (_0x884349.indexOf("\n") > -1) {
              if (_0x2f4f11) {
                _0x884349 = _0x884349.split("\n").map(function (_0x26b7cd) {
                  return "  " + _0x26b7cd;
                }).join("\n").slice(2);
              } else {
                _0x884349 = "\n" + _0x884349.split("\n").map(function (_0xf14a47) {
                  return "   " + _0xf14a47;
                }).join("\n");
              }
            }
          } else {
            _0x884349 = _0x22b68a.stylize("[Circular]", "special");
          }
        }
        if (_0x19734f(_0x411e48)) {
          if (_0x2f4f11 && _0x1e59c0.match(/^\d+$/)) {
            return _0x884349;
          }
          _0x411e48 = JSON.stringify("" + _0x1e59c0);
          if (_0x411e48.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
            _0x411e48 = _0x411e48.slice(1, -1);
            _0x411e48 = _0x22b68a.stylize(_0x411e48, "name");
          } else {
            _0x411e48 = _0x411e48.replace(/'/g, "\\'").replace(/\\"/g, "\"").replace(/(^"|"$)/g, "'");
            _0x411e48 = _0x22b68a.stylize(_0x411e48, "string");
          }
        }
        return _0x411e48 + ": " + _0x884349;
      }
      function _0x451f2c(_0x542eea, _0x17d00e, _0x139a5b) {
        var _0x4a6086 = 0;
        var _0x324ffb = _0x542eea.reduce(function (_0x541bc8, _0x1e6e28) {
          _0x4a6086++;
          if (_0x1e6e28.indexOf("\n") >= 0) {
            _0x4a6086++;
          }
          return _0x541bc8 + _0x1e6e28.replace(/\u001b\[\d\d?m/g, "").length + 1;
        }, 0);
        if (_0x324ffb > 60) {
          return _0x139a5b[0] + (_0x17d00e === "" ? "" : _0x17d00e + "\n ") + " " + _0x542eea.join(",\n  ") + " " + _0x139a5b[1];
        }
        return _0x139a5b[0] + _0x17d00e + " " + _0x542eea.join(", ") + " " + _0x139a5b[1];
      }
      _0x398519.types = _0x2c8297(451);
      function _0x11c3a1(_0x151d5b) {
        return Array.isArray(_0x151d5b);
      }
      _0x398519.isArray = _0x11c3a1;
      function _0x1c5997(_0xee0b99) {
        return typeof _0xee0b99 === "boolean";
      }
      _0x398519.isBoolean = _0x1c5997;
      function _0x28bca2(_0x2620eb) {
        return _0x2620eb === null;
      }
      _0x398519.isNull = _0x28bca2;
      function _0x439168(_0x21c526) {
        return _0x21c526 == null;
      }
      _0x398519.isNullOrUndefined = _0x439168;
      function _0x1d7a49(_0x1ca031) {
        return typeof _0x1ca031 === "number";
      }
      _0x398519.isNumber = _0x1d7a49;
      function _0x5b3d3a(_0x3fdaf7) {
        return typeof _0x3fdaf7 === "string";
      }
      _0x398519.isString = _0x5b3d3a;
      function _0x211b89(_0x636e65) {
        return typeof _0x636e65 === "symbol";
      }
      _0x398519.isSymbol = _0x211b89;
      function _0x19734f(_0x276861) {
        return _0x276861 === undefined;
      }
      _0x398519.isUndefined = _0x19734f;
      function _0x434482(_0x19073c) {
        return _0xc1a67d(_0x19073c) && _0x43d48f(_0x19073c) === "[object RegExp]";
      }
      _0x398519.isRegExp = _0x434482;
      _0x398519.types.isRegExp = _0x434482;
      function _0xc1a67d(_0x14f917) {
        return typeof _0x14f917 === "object" && _0x14f917 !== null;
      }
      _0x398519.isObject = _0xc1a67d;
      function _0x5456bf(_0xff5170) {
        return _0xc1a67d(_0xff5170) && _0x43d48f(_0xff5170) === "[object Date]";
      }
      _0x398519.isDate = _0x5456bf;
      _0x398519.types.isDate = _0x5456bf;
      function _0x416bc7(_0x130a35) {
        return _0xc1a67d(_0x130a35) && (_0x43d48f(_0x130a35) === "[object Error]" || _0x130a35 instanceof Error);
      }
      _0x398519.isError = _0x416bc7;
      _0x398519.types.isNativeError = _0x416bc7;
      function _0x2678e5(_0x380792) {
        return typeof _0x380792 === "function";
      }
      _0x398519.isFunction = _0x2678e5;
      function _0x2d39d9(_0x33386e) {
        return _0x33386e === null || typeof _0x33386e === "boolean" || typeof _0x33386e === "number" || typeof _0x33386e === "string" || typeof _0x33386e === "symbol" || typeof _0x33386e === "undefined";
      }
      _0x398519.isPrimitive = _0x2d39d9;
      _0x398519.isBuffer = _0x2c8297(821);
      function _0x43d48f(_0x5a08df) {
        return Object.prototype.toString.call(_0x5a08df);
      }
      function _0x29fbe7(_0x48f7ee) {
        if (_0x48f7ee < 10) {
          return "0" + _0x48f7ee.toString(10);
        } else {
          return _0x48f7ee.toString(10);
        }
      }
      var _0x5aac15 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
      function _0x515896() {
        var _0x4e7e93 = new Date();
        var _0x3375cf = [_0x29fbe7(_0x4e7e93.getHours()), _0x29fbe7(_0x4e7e93.getMinutes()), _0x29fbe7(_0x4e7e93.getSeconds())].join(":");
        return [_0x4e7e93.getDate(), _0x5aac15[_0x4e7e93.getMonth()], _0x3375cf].join(" ");
      }
      _0x398519.log = function () {
        _0x27ad66.log("%s - %s", _0x515896(), _0x398519.format.apply(_0x398519, arguments));
      };
      _0x398519.inherits = _0x2c8297(797);
      _0x398519._extend = function (_0x4a9f65, _0x36c08f) {
        if (!_0x36c08f || !_0xc1a67d(_0x36c08f)) {
          return _0x4a9f65;
        }
        var _0x34a1df = Object.keys(_0x36c08f);
        var _0x523093 = _0x34a1df.length;
        while (_0x523093--) {
          _0x4a9f65[_0x34a1df[_0x523093]] = _0x36c08f[_0x34a1df[_0x523093]];
        }
        return _0x4a9f65;
      };
      function _0x46056e(_0x494098, _0x5a1f08) {
        return Object.prototype.hasOwnProperty.call(_0x494098, _0x5a1f08);
      }
      var _0x3e73c0 = typeof Symbol !== "undefined" ? Symbol("util.promisify.custom") : undefined;
      _0x398519.promisify = function _0x151e16(_0x26784f) {
        if (typeof _0x26784f !== "function") {
          throw new TypeError("The \"original\" argument must be of type Function");
        }
        if (_0x3e73c0 && _0x26784f[_0x3e73c0]) {
          var _0x497362 = _0x26784f[_0x3e73c0];
          if (typeof _0x497362 !== "function") {
            throw new TypeError("The \"util.promisify.custom\" argument must be of type Function");
          }
          Object.defineProperty(_0x497362, _0x3e73c0, {
            value: _0x497362,
            enumerable: false,
            writable: false,
            configurable: true
          });
          return _0x497362;
        }
        function _0x497362() {
          var _0x18aa29;
          var _0x44e4cd;
          var _0x4ca713 = new Promise(function (_0x31932c, _0x5ceb0d) {
            _0x18aa29 = _0x31932c;
            _0x44e4cd = _0x5ceb0d;
          });
          var _0x400239 = [];
          for (var _0x221c59 = 0; _0x221c59 < arguments.length; _0x221c59++) {
            _0x400239.push(arguments[_0x221c59]);
          }
          _0x400239.push(function (_0x44019f, _0x2f7781) {
            if (_0x44019f) {
              _0x44e4cd(_0x44019f);
            } else {
              _0x18aa29(_0x2f7781);
            }
          });
          try {
            _0x26784f.apply(this, _0x400239);
          } catch (_0x3bebae) {
            _0x44e4cd(_0x3bebae);
          }
          return _0x4ca713;
        }
        Object.setPrototypeOf(_0x497362, Object.getPrototypeOf(_0x26784f));
        if (_0x3e73c0) {
          Object.defineProperty(_0x497362, _0x3e73c0, {
            value: _0x497362,
            enumerable: false,
            writable: false,
            configurable: true
          });
        }
        return Object.defineProperties(_0x497362, _0xe6059(_0x26784f));
      };
      _0x398519.promisify.custom = _0x3e73c0;
      function _0x526c45(_0x2bb047, _0x309375) {
        if (!_0x2bb047) {
          var _0x530861 = new Error("Promise was rejected with a falsy value");
          _0x530861.reason = _0x2bb047;
          _0x2bb047 = _0x530861;
        }
        return _0x309375(_0x2bb047);
      }
      function _0x1b0aa4(_0x1dd6f0) {
        if (typeof _0x1dd6f0 !== "function") {
          throw new TypeError("The \"original\" argument must be of type Function");
        }
        function _0x5281e4() {
          var _0x12e19f = [];
          for (var _0x510728 = 0; _0x510728 < arguments.length; _0x510728++) {
            _0x12e19f.push(arguments[_0x510728]);
          }
          var _0x250535 = _0x12e19f.pop();
          if (typeof _0x250535 !== "function") {
            throw new TypeError("The last argument must be of type Function");
          }
          var _0x249721 = this;
          function _0x227d00() {
            return _0x250535.apply(_0x249721, arguments);
          }
          _0x1dd6f0.apply(this, _0x12e19f).then(function (_0x28237a) {
            _0x1e44b3.nextTick(_0x227d00.bind(null, null, _0x28237a));
          }, function (_0x122b49) {
            _0x1e44b3.nextTick(_0x526c45.bind(null, _0x122b49, _0x227d00));
          });
        }
        Object.setPrototypeOf(_0x5281e4, Object.getPrototypeOf(_0x1dd6f0));
        Object.defineProperties(_0x5281e4, _0xe6059(_0x1dd6f0));
        return _0x5281e4;
      }
      _0x398519.callbackify = _0x1b0aa4;
    },
    167: (_0x282c6a, _0x15bcd1, _0x201c20) => {
      'use strict';

      var _0x71ef90 = _0x201c20(949);
      var _0x291702 = _0x201c20(816);
      var _0x569f3b = _0x201c20(432);
      var _0x10635a = _0x201c20(630);
      var _0x1d807f = _0x201c20(520);
      var _0x34c323 = _0x10635a("Object.prototype.toString");
      var _0x7bb625 = _0x201c20(576)();
      var _0x43d198 = typeof globalThis === "undefined" ? _0x201c20.g : globalThis;
      var _0xa1237 = _0x291702();
      var _0x365523 = _0x10635a("String.prototype.slice");
      var _0x39f75d = Object.getPrototypeOf;
      var _0x4267dd = _0x10635a("Array.prototype.indexOf", true) || function _0x237038(_0x348507, _0xdff84e) {
        for (var _0x7a9095 = 0; _0x7a9095 < _0x348507.length; _0x7a9095 += 1) {
          if (_0x348507[_0x7a9095] === _0xdff84e) {
            return _0x7a9095;
          }
        }
        return -1;
      };
      var _0x35031e = {
        __proto__: null
      };
      if (_0x7bb625 && _0x1d807f && _0x39f75d) {
        _0x71ef90(_0xa1237, function (_0x1dc77d) {
          var _0x4eabb8 = new _0x43d198[_0x1dc77d]();
          if (Symbol.toStringTag in _0x4eabb8) {
            var _0x14d34b = _0x39f75d(_0x4eabb8);
            var _0x532506 = _0x1d807f(_0x14d34b, Symbol.toStringTag);
            if (!_0x532506) {
              var _0x6a4046 = _0x39f75d(_0x14d34b);
              _0x532506 = _0x1d807f(_0x6a4046, Symbol.toStringTag);
            }
            _0x35031e["$" + _0x1dc77d] = _0x569f3b(_0x532506.get);
          }
        });
      } else {
        _0x71ef90(_0xa1237, function (_0x3dec0f) {
          var _0x35f585 = new _0x43d198[_0x3dec0f]();
          _0x35031e["$" + _0x3dec0f] = _0x569f3b(_0x35f585.slice);
        });
      }
      var _0x47cef2 = function _0x1ce7ed(_0x2f1338) {
        var _0x1bcf18 = false;
        _0x71ef90(_0x35031e, function (_0x20b913, _0x4f11d2) {
          if (!_0x1bcf18) {
            try {
              if ("$" + _0x20b913(_0x2f1338) === _0x4f11d2) {
                _0x1bcf18 = _0x365523(_0x4f11d2, 1);
              }
            } catch (_0x1c07f8) {}
          }
        });
        return _0x1bcf18;
      };
      var _0x316bb3 = function _0x4e3ad9(_0x5ad8a1) {
        var _0x5dd7de = false;
        _0x71ef90(_0x35031e, function (_0x22f123, _0x1ccea1) {
          if (!_0x5dd7de) {
            try {
              _0x22f123(_0x5ad8a1);
              _0x5dd7de = _0x365523(_0x1ccea1, 1);
            } catch (_0xb4ad18) {}
          }
        });
        return _0x5dd7de;
      };
      _0x282c6a.exports = function _0x5b8da2(_0x577992) {
        if (!_0x577992 || typeof _0x577992 !== "object") {
          return false;
        }
        if (!_0x7bb625) {
          var _0x308e40 = _0x365523(_0x34c323(_0x577992), 8, -1);
          if (_0x4267dd(_0xa1237, _0x308e40) > -1) {
            return _0x308e40;
          }
          if (_0x308e40 !== "Object") {
            return false;
          }
          return _0x316bb3(_0x577992);
        }
        if (!_0x1d807f) {
          return null;
        }
        return _0x47cef2(_0x577992);
      };
    },
    577: function (_0x2ceadf, _0x38b62e, _0x507ba0) {
      var _0x321807 = _0x507ba0(449).lW;
      var _0x368967;
      (function (_0x32b371, _0x28c533, _0x1a4396) {
        if (true) {
          _0x368967 = function () {
            return _0x1a4396(_0x32b371);
          }.call(_0x38b62e, _0x507ba0, _0x38b62e, _0x2ceadf);
          if (_0x368967 !== undefined) {
            _0x2ceadf.exports = _0x368967;
          }
        } else {}
      })(this, "UUID", function () {
        function _0x5de0c0(_0x33e1a5, _0x396857, _0x24262c, _0x35f9a2, _0x51f2c7, _0x23f3e6) {
          function _0x3aec71(_0x4bba3d, _0x442526) {
            var _0x374dd8 = _0x4bba3d.toString(16);
            if (_0x374dd8.length < 2) {
              _0x374dd8 = "0" + _0x374dd8;
            }
            if (_0x442526) {
              _0x374dd8 = _0x374dd8.toUpperCase();
            }
            return _0x374dd8;
          }
          for (var _0x160434 = _0x396857; _0x160434 <= _0x24262c; _0x160434++) {
            _0x51f2c7[_0x23f3e6++] = _0x3aec71(_0x33e1a5[_0x160434], _0x35f9a2);
          }
          return _0x51f2c7;
        }
        function _0x1742a3(_0x39f801, _0x143869, _0x2b89dc, _0x36136c, _0x2f9bf4) {
          for (var _0x4a10df = _0x143869; _0x4a10df <= _0x2b89dc; _0x4a10df += 2) {
            _0x36136c[_0x2f9bf4++] = parseInt(_0x39f801.substr(_0x4a10df, 2), 16);
          }
        }
        var _0x2b01e1 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#".split("");
        var _0x39404c = [0, 68, 0, 84, 83, 82, 72, 0, 75, 76, 70, 65, 0, 63, 62, 69, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 64, 0, 73, 66, 74, 71, 81, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 0, 78, 67, 0, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 79, 0, 80, 0, 0];
        function _0x466e70(_0x4c8c58, _0x221e81) {
          if (_0x221e81 % 4 !== 0) {
            throw new Error("z85_encode: invalid input length (multiple of 4 expected)");
          }
          var _0x5b264f = "";
          var _0x1cdb55 = 0;
          var _0x301b6a = 0;
          while (_0x1cdb55 < _0x221e81) {
            _0x301b6a = _0x301b6a * 256 + _0x4c8c58[_0x1cdb55++];
            if (_0x1cdb55 % 4 === 0) {
              var _0x2c5cee = 52200625;
              while (_0x2c5cee >= 1) {
                var _0x32c16f = Math.floor(_0x301b6a / _0x2c5cee) % 85;
                _0x5b264f += _0x2b01e1[_0x32c16f];
                _0x2c5cee /= 85;
              }
              _0x301b6a = 0;
            }
          }
          return _0x5b264f;
        }
        function _0x4d56cf(_0x3a3621, _0xc358db) {
          var _0x34a552 = _0x3a3621.length;
          if (_0x34a552 % 5 !== 0) {
            throw new Error("z85_decode: invalid input length (multiple of 5 expected)");
          }
          if (typeof _0xc358db === "undefined") {
            _0xc358db = new Array(_0x34a552 * 4 / 5);
          }
          var _0x525d49 = 0;
          var _0x4e9354 = 0;
          var _0x29aef3 = 0;
          while (_0x525d49 < _0x34a552) {
            var _0x28fb69 = _0x3a3621.charCodeAt(_0x525d49++) - 32;
            if (_0x28fb69 < 0 || _0x28fb69 >= _0x39404c.length) {
              break;
            }
            _0x29aef3 = _0x29aef3 * 85 + _0x39404c[_0x28fb69];
            if (_0x525d49 % 5 === 0) {
              var _0x1bbb7d = 16777216;
              while (_0x1bbb7d >= 1) {
                _0xc358db[_0x4e9354++] = Math.trunc(_0x29aef3 / _0x1bbb7d % 256);
                _0x1bbb7d /= 256;
              }
              _0x29aef3 = 0;
            }
          }
          return _0xc358db;
        }
        function _0x2f7b52(_0x4a6210, _0x234a11) {
          var _0x3e33b9 = {
            ibits: 8,
            obits: 8,
            obigendian: true
          };
          for (var _0x3080e9 in _0x234a11) {
            if (typeof _0x3e33b9[_0x3080e9] !== "undefined") {
              _0x3e33b9[_0x3080e9] = _0x234a11[_0x3080e9];
            }
          }
          var _0x2d7b8a = [];
          var _0x400675 = 0;
          var _0x507d90;
          var _0x35fe4e;
          var _0x41dfe5 = 0;
          var _0x2310af;
          var _0x4eaf27 = 0;
          var _0x473c39 = _0x4a6210.length;
          for (;;) {
            if (_0x41dfe5 === 0) {
              _0x35fe4e = _0x4a6210.charCodeAt(_0x400675++);
            }
            _0x507d90 = _0x35fe4e >> _0x3e33b9.ibits - (_0x41dfe5 + 8) & 255;
            _0x41dfe5 = (_0x41dfe5 + 8) % _0x3e33b9.ibits;
            if (_0x3e33b9.obigendian) {
              if (_0x4eaf27 === 0) {
                _0x2310af = _0x507d90 << _0x3e33b9.obits - 8;
              } else {
                _0x2310af |= _0x507d90 << _0x3e33b9.obits - 8 - _0x4eaf27;
              }
            } else if (_0x4eaf27 === 0) {
              _0x2310af = _0x507d90;
            } else {
              _0x2310af |= _0x507d90 << _0x4eaf27;
            }
            _0x4eaf27 = (_0x4eaf27 + 8) % _0x3e33b9.obits;
            if (_0x4eaf27 === 0) {
              _0x2d7b8a.push(_0x2310af);
              if (_0x400675 >= _0x473c39) {
                break;
              }
            }
          }
          return _0x2d7b8a;
        }
        function _0x5198b6(_0xa60a5c, _0x1828f5) {
          var _0x129c7b = {
            ibits: 32,
            ibigendian: true
          };
          for (var _0x3ea621 in _0x1828f5) {
            if (typeof _0x129c7b[_0x3ea621] !== "undefined") {
              _0x129c7b[_0x3ea621] = _0x1828f5[_0x3ea621];
            }
          }
          var _0x1c4d22 = "";
          var _0x3c345c = 4294967295;
          if (_0x129c7b.ibits < 32) {
            _0x3c345c = (1 << _0x129c7b.ibits) - 1;
          }
          var _0x43bd27 = _0xa60a5c.length;
          for (var _0x48a25e = 0; _0x48a25e < _0x43bd27; _0x48a25e++) {
            var _0x489127 = _0xa60a5c[_0x48a25e] & _0x3c345c;
            for (var _0x2e0680 = 0; _0x2e0680 < _0x129c7b.ibits; _0x2e0680 += 8) {
              if (_0x129c7b.ibigendian) {
                _0x1c4d22 += String.fromCharCode(_0x489127 >> _0x129c7b.ibits - 8 - _0x2e0680 & 255);
              } else {
                _0x1c4d22 += String.fromCharCode(_0x489127 >> _0x2e0680 & 255);
              }
            }
          }
          return _0x1c4d22;
        }
        var _0xa70a2 = 8;
        var _0x80d7bd = 8;
        var _0x21ada1 = 256;
        function _0x47945d(_0x19fca2, _0x17cbb3, _0xd4628c, _0x308017, _0x1f0ce8, _0x324a14, _0x300d60, _0x1b094e) {
          return [_0x1b094e, _0x300d60, _0x324a14, _0x1f0ce8, _0x308017, _0xd4628c, _0x17cbb3, _0x19fca2];
        }
        function _0x5c401c() {
          return _0x47945d(0, 0, 0, 0, 0, 0, 0, 0);
        }
        function _0x31659b(_0x34aeeb) {
          return _0x34aeeb.slice(0);
        }
        function _0x3116a6(_0x87792e) {
          var _0x3463c5 = _0x5c401c();
          for (var _0x30a6cf = 0; _0x30a6cf < _0xa70a2; _0x30a6cf++) {
            _0x3463c5[_0x30a6cf] = Math.floor(_0x87792e % _0x21ada1);
            _0x87792e /= _0x21ada1;
          }
          return _0x3463c5;
        }
        function _0x5351a7(_0x21f5ab) {
          var _0x25988c = 0;
          for (var _0x2e9a1c = _0xa70a2 - 1; _0x2e9a1c >= 0; _0x2e9a1c--) {
            _0x25988c *= _0x21ada1;
            _0x25988c += _0x21f5ab[_0x2e9a1c];
          }
          return Math.floor(_0x25988c);
        }
        function _0x3d4a3e(_0x5e9fc1, _0x464351) {
          var _0x318b1c = 0;
          for (var _0x561dad = 0; _0x561dad < _0xa70a2; _0x561dad++) {
            _0x318b1c += _0x5e9fc1[_0x561dad] + _0x464351[_0x561dad];
            _0x5e9fc1[_0x561dad] = Math.floor(_0x318b1c % _0x21ada1);
            _0x318b1c = Math.floor(_0x318b1c / _0x21ada1);
          }
          return _0x318b1c;
        }
        function _0x5c9598(_0x36ccbf, _0x14c5ba) {
          var _0x34cba1 = 0;
          for (var _0x3ca145 = 0; _0x3ca145 < _0xa70a2; _0x3ca145++) {
            _0x34cba1 += _0x36ccbf[_0x3ca145] * _0x14c5ba;
            _0x36ccbf[_0x3ca145] = Math.floor(_0x34cba1 % _0x21ada1);
            _0x34cba1 = Math.floor(_0x34cba1 / _0x21ada1);
          }
          return _0x34cba1;
        }
        function _0x489b1a(_0x3e6b54, _0x24d3ca) {
          var _0x860550;
          var _0x2d1cdf;
          var _0x1133cc = new Array(_0xa70a2 + _0xa70a2);
          for (_0x860550 = 0; _0x860550 < _0xa70a2 + _0xa70a2; _0x860550++) {
            _0x1133cc[_0x860550] = 0;
          }
          var _0x57c7dc;
          for (_0x860550 = 0; _0x860550 < _0xa70a2; _0x860550++) {
            _0x57c7dc = 0;
            for (_0x2d1cdf = 0; _0x2d1cdf < _0xa70a2; _0x2d1cdf++) {
              _0x57c7dc += _0x3e6b54[_0x860550] * _0x24d3ca[_0x2d1cdf] + _0x1133cc[_0x860550 + _0x2d1cdf];
              _0x1133cc[_0x860550 + _0x2d1cdf] = _0x57c7dc % _0x21ada1;
              _0x57c7dc /= _0x21ada1;
            }
            for (; _0x2d1cdf < _0xa70a2 + _0xa70a2 - _0x860550; _0x2d1cdf++) {
              _0x57c7dc += _0x1133cc[_0x860550 + _0x2d1cdf];
              _0x1133cc[_0x860550 + _0x2d1cdf] = _0x57c7dc % _0x21ada1;
              _0x57c7dc /= _0x21ada1;
            }
          }
          for (_0x860550 = 0; _0x860550 < _0xa70a2; _0x860550++) {
            _0x3e6b54[_0x860550] = _0x1133cc[_0x860550];
          }
          return _0x1133cc.slice(_0xa70a2, _0xa70a2);
        }
        function _0x4b7cd5(_0x524728, _0x5634a7) {
          for (var _0x42c7cd = 0; _0x42c7cd < _0xa70a2; _0x42c7cd++) {
            _0x524728[_0x42c7cd] &= _0x5634a7[_0x42c7cd];
          }
          return _0x524728;
        }
        function _0x4e4bab(_0x441979, _0x25a6a3) {
          for (var _0x2f932f = 0; _0x2f932f < _0xa70a2; _0x2f932f++) {
            _0x441979[_0x2f932f] |= _0x25a6a3[_0x2f932f];
          }
          return _0x441979;
        }
        function _0x313fd3(_0x5bba55, _0x220058) {
          var _0x1c3657 = _0x5c401c();
          if (_0x220058 % _0x80d7bd !== 0) {
            throw new Error("ui64_rorn: only bit rotations supported with a multiple of digit bits");
          }
          var _0x5b3bcc = Math.floor(_0x220058 / _0x80d7bd);
          for (var _0x25d45c = 0; _0x25d45c < _0x5b3bcc; _0x25d45c++) {
            for (var _0x148bc3 = _0xa70a2 - 1 - 1; _0x148bc3 >= 0; _0x148bc3--) {
              _0x1c3657[_0x148bc3 + 1] = _0x1c3657[_0x148bc3];
            }
            _0x1c3657[0] = _0x5bba55[0];
            for (_0x148bc3 = 0; _0x148bc3 < _0xa70a2 - 1; _0x148bc3++) {
              _0x5bba55[_0x148bc3] = _0x5bba55[_0x148bc3 + 1];
            }
            _0x5bba55[_0x148bc3] = 0;
          }
          return _0x5351a7(_0x1c3657);
        }
        function _0x2b69ab(_0x7192cb, _0x578a4a) {
          if (_0x578a4a > _0xa70a2 * _0x80d7bd) {
            throw new Error("ui64_ror: invalid number of bits to shift");
          }
          var _0x43d666 = new Array(_0xa70a2 + _0xa70a2);
          var _0x294aed;
          for (_0x294aed = 0; _0x294aed < _0xa70a2; _0x294aed++) {
            _0x43d666[_0x294aed + _0xa70a2] = _0x7192cb[_0x294aed];
            _0x43d666[_0x294aed] = 0;
          }
          var _0x52db11 = Math.floor(_0x578a4a / _0x80d7bd);
          var _0x59fb02 = _0x578a4a % _0x80d7bd;
          for (_0x294aed = _0x52db11; _0x294aed < _0xa70a2 + _0xa70a2 - 1; _0x294aed++) {
            _0x43d666[_0x294aed - _0x52db11] = (_0x43d666[_0x294aed] >>> _0x59fb02 | _0x43d666[_0x294aed + 1] << _0x80d7bd - _0x59fb02) & (1 << _0x80d7bd) - 1;
          }
          _0x43d666[_0xa70a2 + _0xa70a2 - 1 - _0x52db11] = _0x43d666[_0xa70a2 + _0xa70a2 - 1] >>> _0x59fb02 & (1 << _0x80d7bd) - 1;
          for (_0x294aed = _0xa70a2 + _0xa70a2 - 1 - _0x52db11 + 1; _0x294aed < _0xa70a2 + _0xa70a2; _0x294aed++) {
            _0x43d666[_0x294aed] = 0;
          }
          for (_0x294aed = 0; _0x294aed < _0xa70a2; _0x294aed++) {
            _0x7192cb[_0x294aed] = _0x43d666[_0x294aed + _0xa70a2];
          }
          return _0x43d666.slice(0, _0xa70a2);
        }
        function _0x5e23b5(_0x20d09c, _0x4d793b) {
          if (_0x4d793b > _0xa70a2 * _0x80d7bd) {
            throw new Error("ui64_rol: invalid number of bits to shift");
          }
          var _0x5b2042 = new Array(_0xa70a2 + _0xa70a2);
          var _0x300d22;
          for (_0x300d22 = 0; _0x300d22 < _0xa70a2; _0x300d22++) {
            _0x5b2042[_0x300d22 + _0xa70a2] = 0;
            _0x5b2042[_0x300d22] = _0x20d09c[_0x300d22];
          }
          var _0x1923bb = Math.floor(_0x4d793b / _0x80d7bd);
          var _0x3e34d1 = _0x4d793b % _0x80d7bd;
          for (_0x300d22 = _0xa70a2 - 1 - _0x1923bb; _0x300d22 > 0; _0x300d22--) {
            _0x5b2042[_0x300d22 + _0x1923bb] = (_0x5b2042[_0x300d22] << _0x3e34d1 | _0x5b2042[_0x300d22 - 1] >>> _0x80d7bd - _0x3e34d1) & (1 << _0x80d7bd) - 1;
          }
          _0x5b2042[0 + _0x1923bb] = _0x5b2042[0] << _0x3e34d1 & (1 << _0x80d7bd) - 1;
          for (_0x300d22 = 0 + _0x1923bb - 1; _0x300d22 >= 0; _0x300d22--) {
            _0x5b2042[_0x300d22] = 0;
          }
          for (_0x300d22 = 0; _0x300d22 < _0xa70a2; _0x300d22++) {
            _0x20d09c[_0x300d22] = _0x5b2042[_0x300d22];
          }
          return _0x5b2042.slice(_0xa70a2, _0xa70a2);
        }
        function _0xe03b31(_0x5a131b, _0x6af847) {
          for (var _0x152694 = 0; _0x152694 < _0xa70a2; _0x152694++) {
            _0x5a131b[_0x152694] ^= _0x6af847[_0x152694];
          }
        }
        function _0x575d18(_0x5a3e5d, _0x303c0e) {
          var _0x217e93 = (_0x5a3e5d & 65535) + (_0x303c0e & 65535);
          var _0x2b19d0 = (_0x5a3e5d >> 16) + (_0x303c0e >> 16) + (_0x217e93 >> 16);
          return _0x2b19d0 << 16 | _0x217e93 & 65535;
        }
        function _0x4247dc(_0x36088d, _0x4f0a8c) {
          return _0x36088d << _0x4f0a8c & 4294967295 | _0x36088d >>> 32 - _0x4f0a8c & 4294967295;
        }
        function _0x370625(_0x2ff4ab, _0xbcc12c) {
          function _0x4fc878(_0x468118, _0x418387, _0x21baa7, _0x176920) {
            if (_0x468118 < 20) {
              return _0x418387 & _0x21baa7 | ~_0x418387 & _0x176920;
            }
            if (_0x468118 < 40) {
              return _0x418387 ^ _0x21baa7 ^ _0x176920;
            }
            if (_0x468118 < 60) {
              return _0x418387 & _0x21baa7 | _0x418387 & _0x176920 | _0x21baa7 & _0x176920;
            }
            return _0x418387 ^ _0x21baa7 ^ _0x176920;
          }
          function _0x743546(_0x150d1f) {
            if (_0x150d1f < 20) {
              return 1518500249;
            } else if (_0x150d1f < 40) {
              return 1859775393;
            } else if (_0x150d1f < 60) {
              return -1894007588;
            } else {
              return -899497514;
            }
          }
          _0x2ff4ab[_0xbcc12c >> 5] |= 128 << 24 - _0xbcc12c % 32;
          _0x2ff4ab[(_0xbcc12c + 64 >> 9 << 4) + 15] = _0xbcc12c;
          var _0x74fbd1 = Array(80);
          var _0x49d9ea = 1732584193;
          var _0xcd8b48 = -271733879;
          var _0x505362 = -1732584194;
          var _0x107a97 = 271733878;
          var _0xde9e6f = -1009589776;
          for (var _0x1fe8a8 = 0; _0x1fe8a8 < _0x2ff4ab.length; _0x1fe8a8 += 16) {
            var _0x2f8549 = _0x49d9ea;
            var _0x305189 = _0xcd8b48;
            var _0x30815b = _0x505362;
            var _0x542f66 = _0x107a97;
            var _0x10682b = _0xde9e6f;
            for (var _0x41a4b3 = 0; _0x41a4b3 < 80; _0x41a4b3++) {
              if (_0x41a4b3 < 16) {
                _0x74fbd1[_0x41a4b3] = _0x2ff4ab[_0x1fe8a8 + _0x41a4b3];
              } else {
                _0x74fbd1[_0x41a4b3] = _0x4247dc(_0x74fbd1[_0x41a4b3 - 3] ^ _0x74fbd1[_0x41a4b3 - 8] ^ _0x74fbd1[_0x41a4b3 - 14] ^ _0x74fbd1[_0x41a4b3 - 16], 1);
              }
              var _0x4d3f20 = _0x575d18(_0x575d18(_0x4247dc(_0x49d9ea, 5), _0x4fc878(_0x41a4b3, _0xcd8b48, _0x505362, _0x107a97)), _0x575d18(_0x575d18(_0xde9e6f, _0x74fbd1[_0x41a4b3]), _0x743546(_0x41a4b3)));
              _0xde9e6f = _0x107a97;
              _0x107a97 = _0x505362;
              _0x505362 = _0x4247dc(_0xcd8b48, 30);
              _0xcd8b48 = _0x49d9ea;
              _0x49d9ea = _0x4d3f20;
            }
            _0x49d9ea = _0x575d18(_0x49d9ea, _0x2f8549);
            _0xcd8b48 = _0x575d18(_0xcd8b48, _0x305189);
            _0x505362 = _0x575d18(_0x505362, _0x30815b);
            _0x107a97 = _0x575d18(_0x107a97, _0x542f66);
            _0xde9e6f = _0x575d18(_0xde9e6f, _0x10682b);
          }
          return [_0x49d9ea, _0xcd8b48, _0x505362, _0x107a97, _0xde9e6f];
        }
        function _0x2b5543(_0x405c1c) {
          return _0x5198b6(_0x370625(_0x2f7b52(_0x405c1c, {
            ibits: 8,
            obits: 32,
            obigendian: true
          }), _0x405c1c.length * 8), {
            ibits: 32,
            ibigendian: true
          });
        }
        function _0x29c954(_0x4c8d6d, _0x57f6c2) {
          function _0x23f440(_0x499834, _0x19e0a3, _0x284c13, _0x252ec1, _0x48758d, _0xe7a3be) {
            return _0x575d18(_0x4247dc(_0x575d18(_0x575d18(_0x19e0a3, _0x499834), _0x575d18(_0x252ec1, _0xe7a3be)), _0x48758d), _0x284c13);
          }
          function _0x2bbc09(_0x326be7, _0x5ed0d9, _0x32cbba, _0x50c3cb, _0x56afa0, _0x3bf9bd, _0x49d20e) {
            return _0x23f440(_0x5ed0d9 & _0x32cbba | ~_0x5ed0d9 & _0x50c3cb, _0x326be7, _0x5ed0d9, _0x56afa0, _0x3bf9bd, _0x49d20e);
          }
          function _0x3caa8e(_0x7a4c1c, _0x50a5fa, _0xe7faa5, _0x4cffce, _0x1c39d9, _0x1a7cfa, _0x15c5a8) {
            return _0x23f440(_0x50a5fa & _0x4cffce | _0xe7faa5 & ~_0x4cffce, _0x7a4c1c, _0x50a5fa, _0x1c39d9, _0x1a7cfa, _0x15c5a8);
          }
          function _0x2fa9cc(_0x479662, _0x52d121, _0x28f8f2, _0x290319, _0x54f13e, _0x72ef79, _0x814e98) {
            return _0x23f440(_0x52d121 ^ _0x28f8f2 ^ _0x290319, _0x479662, _0x52d121, _0x54f13e, _0x72ef79, _0x814e98);
          }
          function _0x128f8d(_0x57b528, _0x386af3, _0x23c127, _0x370df8, _0x7f9f14, _0x523c70, _0x343182) {
            return _0x23f440(_0x23c127 ^ (_0x386af3 | ~_0x370df8), _0x57b528, _0x386af3, _0x7f9f14, _0x523c70, _0x343182);
          }
          _0x4c8d6d[_0x57f6c2 >> 5] |= 128 << _0x57f6c2 % 32;
          _0x4c8d6d[(_0x57f6c2 + 64 >>> 9 << 4) + 14] = _0x57f6c2;
          var _0x2f77d4 = 1732584193;
          var _0x2c0c13 = -271733879;
          var _0x29648a = -1732584194;
          var _0x49d85b = 271733878;
          for (var _0x1bd86b = 0; _0x1bd86b < _0x4c8d6d.length; _0x1bd86b += 16) {
            var _0x2f0235 = _0x2f77d4;
            var _0x480ce2 = _0x2c0c13;
            var _0x3a7b8b = _0x29648a;
            var _0x3698c0 = _0x49d85b;
            _0x2f77d4 = _0x2bbc09(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 0], 7, -680876936);
            _0x49d85b = _0x2bbc09(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 1], 12, -389564586);
            _0x29648a = _0x2bbc09(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 2], 17, 606105819);
            _0x2c0c13 = _0x2bbc09(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 3], 22, -1044525330);
            _0x2f77d4 = _0x2bbc09(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 4], 7, -176418897);
            _0x49d85b = _0x2bbc09(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 5], 12, 1200080426);
            _0x29648a = _0x2bbc09(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 6], 17, -1473231341);
            _0x2c0c13 = _0x2bbc09(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 7], 22, -45705983);
            _0x2f77d4 = _0x2bbc09(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 8], 7, 1770035416);
            _0x49d85b = _0x2bbc09(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 9], 12, -1958414417);
            _0x29648a = _0x2bbc09(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 10], 17, -42063);
            _0x2c0c13 = _0x2bbc09(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 11], 22, -1990404162);
            _0x2f77d4 = _0x2bbc09(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 12], 7, 1804603682);
            _0x49d85b = _0x2bbc09(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 13], 12, -40341101);
            _0x29648a = _0x2bbc09(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 14], 17, -1502002290);
            _0x2c0c13 = _0x2bbc09(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 15], 22, 1236535329);
            _0x2f77d4 = _0x3caa8e(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 1], 5, -165796510);
            _0x49d85b = _0x3caa8e(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 6], 9, -1069501632);
            _0x29648a = _0x3caa8e(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 11], 14, 643717713);
            _0x2c0c13 = _0x3caa8e(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 0], 20, -373897302);
            _0x2f77d4 = _0x3caa8e(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 5], 5, -701558691);
            _0x49d85b = _0x3caa8e(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 10], 9, 38016083);
            _0x29648a = _0x3caa8e(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 15], 14, -660478335);
            _0x2c0c13 = _0x3caa8e(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 4], 20, -405537848);
            _0x2f77d4 = _0x3caa8e(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 9], 5, 568446438);
            _0x49d85b = _0x3caa8e(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 14], 9, -1019803690);
            _0x29648a = _0x3caa8e(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 3], 14, -187363961);
            _0x2c0c13 = _0x3caa8e(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 8], 20, 1163531501);
            _0x2f77d4 = _0x3caa8e(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 13], 5, -1444681467);
            _0x49d85b = _0x3caa8e(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 2], 9, -51403784);
            _0x29648a = _0x3caa8e(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 7], 14, 1735328473);
            _0x2c0c13 = _0x3caa8e(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 12], 20, -1926607734);
            _0x2f77d4 = _0x2fa9cc(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 5], 4, -378558);
            _0x49d85b = _0x2fa9cc(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 8], 11, -2022574463);
            _0x29648a = _0x2fa9cc(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 11], 16, 1839030562);
            _0x2c0c13 = _0x2fa9cc(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 14], 23, -35309556);
            _0x2f77d4 = _0x2fa9cc(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 1], 4, -1530992060);
            _0x49d85b = _0x2fa9cc(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 4], 11, 1272893353);
            _0x29648a = _0x2fa9cc(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 7], 16, -155497632);
            _0x2c0c13 = _0x2fa9cc(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 10], 23, -1094730640);
            _0x2f77d4 = _0x2fa9cc(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 13], 4, 681279174);
            _0x49d85b = _0x2fa9cc(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 0], 11, -358537222);
            _0x29648a = _0x2fa9cc(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 3], 16, -722521979);
            _0x2c0c13 = _0x2fa9cc(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 6], 23, 76029189);
            _0x2f77d4 = _0x2fa9cc(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 9], 4, -640364487);
            _0x49d85b = _0x2fa9cc(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 12], 11, -421815835);
            _0x29648a = _0x2fa9cc(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 15], 16, 530742520);
            _0x2c0c13 = _0x2fa9cc(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 2], 23, -995338651);
            _0x2f77d4 = _0x128f8d(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 0], 6, -198630844);
            _0x49d85b = _0x128f8d(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 7], 10, 1126891415);
            _0x29648a = _0x128f8d(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 14], 15, -1416354905);
            _0x2c0c13 = _0x128f8d(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 5], 21, -57434055);
            _0x2f77d4 = _0x128f8d(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 12], 6, 1700485571);
            _0x49d85b = _0x128f8d(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 3], 10, -1894986606);
            _0x29648a = _0x128f8d(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 10], 15, -1051523);
            _0x2c0c13 = _0x128f8d(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 1], 21, -2054922799);
            _0x2f77d4 = _0x128f8d(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 8], 6, 1873313359);
            _0x49d85b = _0x128f8d(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 15], 10, -30611744);
            _0x29648a = _0x128f8d(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 6], 15, -1560198380);
            _0x2c0c13 = _0x128f8d(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 13], 21, 1309151649);
            _0x2f77d4 = _0x128f8d(_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b, _0x4c8d6d[_0x1bd86b + 4], 6, -145523070);
            _0x49d85b = _0x128f8d(_0x49d85b, _0x2f77d4, _0x2c0c13, _0x29648a, _0x4c8d6d[_0x1bd86b + 11], 10, -1120210379);
            _0x29648a = _0x128f8d(_0x29648a, _0x49d85b, _0x2f77d4, _0x2c0c13, _0x4c8d6d[_0x1bd86b + 2], 15, 718787259);
            _0x2c0c13 = _0x128f8d(_0x2c0c13, _0x29648a, _0x49d85b, _0x2f77d4, _0x4c8d6d[_0x1bd86b + 9], 21, -343485551);
            _0x2f77d4 = _0x575d18(_0x2f77d4, _0x2f0235);
            _0x2c0c13 = _0x575d18(_0x2c0c13, _0x480ce2);
            _0x29648a = _0x575d18(_0x29648a, _0x3a7b8b);
            _0x49d85b = _0x575d18(_0x49d85b, _0x3698c0);
          }
          return [_0x2f77d4, _0x2c0c13, _0x29648a, _0x49d85b];
        }
        function _0x12198d(_0x188dca) {
          return _0x5198b6(_0x29c954(_0x2f7b52(_0x188dca, {
            ibits: 8,
            obits: 32,
            obigendian: false
          }), _0x188dca.length * 8), {
            ibits: 32,
            ibigendian: false
          });
        }
        function _0x388a0c(_0x3b8aea) {
          this.mul = _0x47945d(88, 81, 244, 45, 76, 149, 127, 45);
          this.inc = _0x47945d(20, 5, 123, 126, 247, 103, 129, 79);
          this.mask = _0x47945d(0, 0, 0, 0, 255, 255, 255, 255);
          this.state = _0x31659b(this.inc);
          this.next();
          _0x4b7cd5(this.state, this.mask);
          var _0x14fcda;
          if (_0x3b8aea !== undefined) {
            _0x3b8aea = _0x3116a6(_0x3b8aea >>> 0);
          } else if (typeof window === "object" && typeof window.crypto === "object" && typeof window.crypto.getRandomValues === "function") {
            _0x14fcda = new Uint32Array(2);
            window.crypto.getRandomValues(_0x14fcda);
            _0x3b8aea = _0x4e4bab(_0x3116a6(_0x14fcda[0] >>> 0), _0x2b69ab(_0x3116a6(_0x14fcda[1] >>> 0), 32));
          } else if (typeof globalThis === "object" && typeof globalThis.crypto === "object" && typeof globalThis.crypto.getRandomValues === "function") {
            _0x14fcda = new Uint32Array(2);
            globalThis.crypto.getRandomValues(_0x14fcda);
            _0x3b8aea = _0x4e4bab(_0x3116a6(_0x14fcda[0] >>> 0), _0x2b69ab(_0x3116a6(_0x14fcda[1] >>> 0), 32));
          } else {
            _0x3b8aea = _0x3116a6(Math.random() * 4294967295 >>> 0);
            _0x4e4bab(_0x3b8aea, _0x2b69ab(_0x3116a6(new Date().getTime()), 32));
          }
          _0x4e4bab(this.state, _0x3b8aea);
          this.next();
        }
        _0x388a0c.prototype.next = function () {
          var _0xb31900 = _0x31659b(this.state);
          _0x489b1a(this.state, this.mul);
          _0x3d4a3e(this.state, this.inc);
          var _0x3b566f = _0x31659b(_0xb31900);
          _0x2b69ab(_0x3b566f, 18);
          _0xe03b31(_0x3b566f, _0xb31900);
          _0x2b69ab(_0x3b566f, 27);
          var _0x4497b2 = _0x31659b(_0xb31900);
          _0x2b69ab(_0x4497b2, 59);
          _0x4b7cd5(_0x3b566f, this.mask);
          var _0x67e8f5 = _0x5351a7(_0x4497b2);
          var _0x5685c3 = _0x31659b(_0x3b566f);
          _0x5e23b5(_0x5685c3, 32 - _0x67e8f5);
          _0x2b69ab(_0x3b566f, _0x67e8f5);
          _0xe03b31(_0x3b566f, _0x5685c3);
          return _0x5351a7(_0x3b566f);
        };
        _0x388a0c.prototype.reseed = function (_0x578654) {
          if (typeof _0x578654 !== "string") {
            throw new Error("UUID: PCG: seed: invalid argument (string expected)");
          }
          var _0x52d7e2 = _0x370625(_0x2f7b52(_0x578654, {
            ibits: 8,
            obits: 32,
            obigendian: true
          }), _0x578654.length * 8);
          for (var _0x4dabe1 = 0; _0x4dabe1 < _0x52d7e2.length; _0x4dabe1++) {
            _0xe03b31(_0x146743.state, _0x3116a6(_0x52d7e2[_0x4dabe1] >>> 0));
          }
        };
        var _0x146743 = new _0x388a0c();
        _0x388a0c.reseed = function (_0xf45e8f) {
          _0x146743.reseed(_0xf45e8f);
        };
        function _0x458e09(_0x21ed13, _0x1fa2ff) {
          var _0x3073a4 = [];
          for (var _0x37dce7 = 0; _0x37dce7 < _0x21ed13; _0x37dce7++) {
            _0x3073a4[_0x37dce7] = _0x146743.next() % _0x1fa2ff;
          }
          return _0x3073a4;
        }
        var _0x39fd0c = 0;
        var _0x2143b8 = 0;
        function _0x4b416a() {
          if (arguments.length === 1 && typeof arguments[0] === "string") {
            this.parse.apply(this, arguments);
          } else if (arguments.length >= 1 && typeof arguments[0] === "number") {
            this.make.apply(this, arguments);
          } else if (arguments.length >= 1) {
            throw new Error("UUID: constructor: invalid arguments");
          } else {
            for (var _0xd0ab82 = 0; _0xd0ab82 < 16; _0xd0ab82++) {
              this[_0xd0ab82] = 0;
            }
          }
        }
        if (typeof Uint8Array !== "undefined") {
          _0x4b416a.prototype = new Uint8Array(16);
        } else if (_0x321807) {
          _0x4b416a.prototype = _0x321807.alloc(16);
        } else {
          _0x4b416a.prototype = new Array(16);
        }
        _0x4b416a.prototype.constructor = _0x4b416a;
        _0x4b416a.prototype.make = function (_0x329965) {
          var _0x275706;
          var _0x402598 = this;
          if (_0x329965 === 1) {
            var _0x2737db = new Date();
            var _0x558ddc = _0x2737db.getTime();
            if (_0x558ddc !== _0x39fd0c) {
              _0x2143b8 = 0;
            } else {
              _0x2143b8++;
            }
            _0x39fd0c = _0x558ddc;
            var _0x1fbd96 = _0x3116a6(_0x558ddc);
            _0x5c9598(_0x1fbd96, 10000);
            _0x3d4a3e(_0x1fbd96, _0x47945d(1, 178, 29, 210, 19, 129, 64, 0));
            if (_0x2143b8 > 0) {
              _0x3d4a3e(_0x1fbd96, _0x3116a6(_0x2143b8));
            }
            var _0xc26c66;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[3] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[2] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[1] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[0] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[5] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[4] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[7] = _0xc26c66 & 255;
            _0xc26c66 = _0x313fd3(_0x1fbd96, 8);
            _0x402598[6] = _0xc26c66 & 15;
            var _0x3b0e83 = _0x458e09(2, 255);
            _0x402598[8] = _0x3b0e83[0];
            _0x402598[9] = _0x3b0e83[1];
            var _0x497361 = _0x458e09(6, 255);
            _0x497361[0] |= 1;
            _0x497361[0] |= 2;
            for (_0x275706 = 0; _0x275706 < 6; _0x275706++) {
              _0x402598[10 + _0x275706] = _0x497361[_0x275706];
            }
          } else if (_0x329965 === 4) {
            var _0x4809b2 = _0x458e09(16, 255);
            for (_0x275706 = 0; _0x275706 < 16; _0x275706++) {
              this[_0x275706] = _0x4809b2[_0x275706];
            }
          } else if (_0x329965 === 3 || _0x329965 === 5) {
            var _0x1ca072 = "";
            var _0x3b7ace = typeof arguments[1] === "object" && arguments[1] instanceof _0x4b416a ? arguments[1] : new _0x4b416a().parse(arguments[1]);
            for (_0x275706 = 0; _0x275706 < 16; _0x275706++) {
              _0x1ca072 += String.fromCharCode(_0x3b7ace[_0x275706]);
            }
            _0x1ca072 += arguments[2];
            var _0x13aad3 = _0x329965 === 3 ? _0x12198d(_0x1ca072) : _0x2b5543(_0x1ca072);
            for (_0x275706 = 0; _0x275706 < 16; _0x275706++) {
              _0x402598[_0x275706] = _0x13aad3.charCodeAt(_0x275706);
            }
          } else {
            throw new Error("UUID: make: invalid version");
          }
          _0x402598[6] &= 15;
          _0x402598[6] |= _0x329965 << 4;
          _0x402598[8] &= 63;
          _0x402598[8] |= 2 << 6;
          return _0x402598;
        };
        _0x4b416a.prototype.format = function (_0x4b4d68) {
          var _0x3b946d;
          var _0x1943b2;
          if (_0x4b4d68 === "z85") {
            _0x3b946d = _0x466e70(this, 16);
          } else if (_0x4b4d68 === "b16") {
            _0x1943b2 = Array(32);
            _0x5de0c0(this, 0, 15, true, _0x1943b2, 0);
            _0x3b946d = _0x1943b2.join("");
          } else if (_0x4b4d68 === undefined || _0x4b4d68 === "std") {
            _0x1943b2 = new Array(36);
            _0x5de0c0(this, 0, 3, false, _0x1943b2, 0);
            _0x1943b2[8] = "-";
            _0x5de0c0(this, 4, 5, false, _0x1943b2, 9);
            _0x1943b2[13] = "-";
            _0x5de0c0(this, 6, 7, false, _0x1943b2, 14);
            _0x1943b2[18] = "-";
            _0x5de0c0(this, 8, 9, false, _0x1943b2, 19);
            _0x1943b2[23] = "-";
            _0x5de0c0(this, 10, 15, false, _0x1943b2, 24);
            _0x3b946d = _0x1943b2.join("");
          }
          return _0x3b946d;
        };
        _0x4b416a.prototype.toString = function (_0x4d1a78) {
          return this.format(_0x4d1a78);
        };
        _0x4b416a.prototype.toJSON = function () {
          return this.format("std");
        };
        _0x4b416a.prototype.parse = function (_0x277849, _0x526899) {
          if (typeof _0x277849 !== "string") {
            throw new Error("UUID: parse: invalid argument (type string expected)");
          }
          if (_0x526899 === "z85") {
            _0x4d56cf(_0x277849, this);
          } else if (_0x526899 === "b16") {
            _0x1742a3(_0x277849, 0, 35, this, 0);
          } else if (_0x526899 === undefined || _0x526899 === "std") {
            var _0x23c01b = {
              nil: "00000000-0000-0000-0000-000000000000",
              "ns:DNS": "6ba7b810-9dad-11d1-80b4-00c04fd430c8",
              "ns:URL": "6ba7b811-9dad-11d1-80b4-00c04fd430c8",
              "ns:OID": "6ba7b812-9dad-11d1-80b4-00c04fd430c8",
              "ns:X500": "6ba7b814-9dad-11d1-80b4-00c04fd430c8"
            };
            if (_0x23c01b[_0x277849] !== undefined) {
              _0x277849 = _0x23c01b[_0x277849];
            } else if (!_0x277849.match(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/)) {
              throw new Error("UUID: parse: invalid string representation (expected \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")");
            }
            _0x1742a3(_0x277849, 0, 7, this, 0);
            _0x1742a3(_0x277849, 9, 12, this, 4);
            _0x1742a3(_0x277849, 14, 17, this, 6);
            _0x1742a3(_0x277849, 19, 22, this, 8);
            _0x1742a3(_0x277849, 24, 35, this, 10);
          }
          return this;
        };
        _0x4b416a.prototype.export = function () {
          var _0x3f55c3 = Array(16);
          for (var _0x375016 = 0; _0x375016 < 16; _0x375016++) {
            _0x3f55c3[_0x375016] = this[_0x375016];
          }
          return _0x3f55c3;
        };
        _0x4b416a.prototype.import = function (_0x34bb1b) {
          if (typeof _0x34bb1b !== "object" || !(_0x34bb1b instanceof Array)) {
            throw new Error("UUID: import: invalid argument (type Array expected)");
          }
          if (_0x34bb1b.length !== 16) {
            throw new Error("UUID: import: invalid argument (Array of length 16 expected)");
          }
          for (var _0x30fcc0 = 0; _0x30fcc0 < 16; _0x30fcc0++) {
            if (typeof _0x34bb1b[_0x30fcc0] !== "number") {
              throw new Error("UUID: import: invalid array element #" + _0x30fcc0 + " (type Number expected)");
            }
            if (!isFinite(_0x34bb1b[_0x30fcc0]) || Math.floor(_0x34bb1b[_0x30fcc0]) !== _0x34bb1b[_0x30fcc0]) {
              throw new Error("UUID: import: invalid array element #" + _0x30fcc0 + " (Number with integer value expected)");
            }
            if (_0x34bb1b[_0x30fcc0] < 0 || _0x34bb1b[_0x30fcc0] > 255) {
              throw new Error("UUID: import: invalid array element #" + _0x30fcc0 + " (Number with integer value in range 0...255 expected)");
            }
            this[_0x30fcc0] = _0x34bb1b[_0x30fcc0];
          }
          return this;
        };
        _0x4b416a.prototype.compare = function (_0x3cfaa5) {
          if (typeof _0x3cfaa5 !== "object") {
            throw new Error("UUID: compare: invalid argument (type UUID expected)");
          }
          if (!(_0x3cfaa5 instanceof _0x4b416a)) {
            throw new Error("UUID: compare: invalid argument (type UUID expected)");
          }
          for (var _0x3a392a = 0; _0x3a392a < 16; _0x3a392a++) {
            if (this[_0x3a392a] < _0x3cfaa5[_0x3a392a]) {
              return -1;
            } else if (this[_0x3a392a] > _0x3cfaa5[_0x3a392a]) {
              return +1;
            }
          }
          return 0;
        };
        _0x4b416a.prototype.equal = function (_0x3a4c72) {
          return this.compare(_0x3a4c72) === 0;
        };
        _0x4b416a.prototype.fold = function (_0x5b7ba1) {
          if (typeof _0x5b7ba1 === "undefined") {
            throw new Error("UUID: fold: invalid argument (number of fold operations expected)");
          }
          if (_0x5b7ba1 < 1 || _0x5b7ba1 > 4) {
            throw new Error("UUID: fold: invalid argument (1-4 fold operations expected)");
          }
          var _0x4cf69f = 16 / Math.pow(2, _0x5b7ba1);
          var _0x4595fb = new Array(_0x4cf69f);
          for (var _0x156540 = 0; _0x156540 < _0x4cf69f; _0x156540++) {
            var _0x180c9f = 0;
            for (var _0x164033 = 0; _0x156540 + _0x164033 < 16; _0x164033 += _0x4cf69f) {
              _0x180c9f ^= this[_0x156540 + _0x164033];
            }
            _0x4595fb[_0x156540] = _0x180c9f;
          }
          return _0x4595fb;
        };
        _0x4b416a.PCG = _0x388a0c;
        return _0x4b416a;
      });
    },
    816: (_0x14c6f8, _0x483545, _0x2802fc) => {
      'use strict';

      var _0x11d664 = ["BigInt64Array", "BigUint64Array", "Float32Array", "Float64Array", "Int16Array", "Int32Array", "Int8Array", "Uint16Array", "Uint32Array", "Uint8Array", "Uint8ClampedArray"];
      var _0x49df8e = typeof globalThis === "undefined" ? _0x2802fc.g : globalThis;
      _0x14c6f8.exports = function _0x592a7e() {
        var _0x5bc4e2 = [];
        for (var _0x3bd7c8 = 0; _0x3bd7c8 < _0x11d664.length; _0x3bd7c8++) {
          if (typeof _0x49df8e[_0x11d664[_0x3bd7c8]] === "function") {
            _0x5bc4e2[_0x5bc4e2.length] = _0x11d664[_0x3bd7c8];
          }
        }
        return _0x5bc4e2;
      };
    }
  };
  var _0x6a17bc = {};
  function _0x5f5650(_0x330149) {
    var _0x3634f2 = _0x6a17bc[_0x330149];
    if (_0x3634f2 !== undefined) {
      return _0x3634f2.exports;
    }
    var _0x1f5afb = _0x6a17bc[_0x330149] = {
      exports: {}
    };
    _0x2ee923[_0x330149].call(_0x1f5afb.exports, _0x1f5afb, _0x1f5afb.exports, _0x5f5650);
    return _0x1f5afb.exports;
  }
  (() => {
    _0x5f5650.d = (_0x181b6a, _0x3837e4) => {
      for (var _0x40619b in _0x3837e4) {
        if (_0x5f5650.o(_0x3837e4, _0x40619b) && !_0x5f5650.o(_0x181b6a, _0x40619b)) {
          Object.defineProperty(_0x181b6a, _0x40619b, {
            enumerable: true,
            get: _0x3837e4[_0x40619b]
          });
        }
      }
    };
  })();
  (() => {
    _0x5f5650.g = function () {
      if (typeof globalThis === "object") {
        return globalThis;
      }
      try {
        return this || new Function("return this")();
      } catch (_0x32ff7d) {
        if (typeof window === "object") {
          return window;
        }
      }
    }();
  })();
  (() => {
    _0x5f5650.o = (_0x2cc62d, _0x23600f) => Object.prototype.hasOwnProperty.call(_0x2cc62d, _0x23600f);
  })();
  (() => {
    _0x5f5650.r = _0x187e40 => {
      if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
        Object.defineProperty(_0x187e40, Symbol.toStringTag, {
          value: "Module"
        });
      }
      Object.defineProperty(_0x187e40, "__esModule", {
        value: true
      });
    };
  })();
  var _0x583202 = {};
  (() => {
    'use strict';

    var _0x4dc751 = {};
    _0x5f5650.r(_0x4dc751);
    var _0x48144a = {
      light: () => _0xcaa6e0,
      room: () => _0x18729a
    };
    _0x5f5650.d(_0x4dc751, _0x48144a);
    ;
    const _0x255055 = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
    var _0x18e485 = {
      randomUUID: _0x255055
    };
    const _0x207189 = _0x18e485;
    ;
    let _0x4c64ba;
    const _0x4e47d4 = new Uint8Array(16);
    function _0x10b71d() {
      if (!_0x4c64ba) {
        _0x4c64ba = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
        if (!_0x4c64ba) {
          throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
        }
      }
      return _0x4c64ba(_0x4e47d4);
    }
    ;
    const _0x44e439 = [];
    for (let _0x15497c = 0; _0x15497c < 256; ++_0x15497c) {
      _0x44e439.push((_0x15497c + 256).toString(16).slice(1));
    }
    function _0x4e8b93(_0x56561a, _0x426b55 = 0) {
      return (_0x44e439[_0x56561a[_0x426b55 + 0]] + _0x44e439[_0x56561a[_0x426b55 + 1]] + _0x44e439[_0x56561a[_0x426b55 + 2]] + _0x44e439[_0x56561a[_0x426b55 + 3]] + "-" + _0x44e439[_0x56561a[_0x426b55 + 4]] + _0x44e439[_0x56561a[_0x426b55 + 5]] + "-" + _0x44e439[_0x56561a[_0x426b55 + 6]] + _0x44e439[_0x56561a[_0x426b55 + 7]] + "-" + _0x44e439[_0x56561a[_0x426b55 + 8]] + _0x44e439[_0x56561a[_0x426b55 + 9]] + "-" + _0x44e439[_0x56561a[_0x426b55 + 10]] + _0x44e439[_0x56561a[_0x426b55 + 11]] + _0x44e439[_0x56561a[_0x426b55 + 12]] + _0x44e439[_0x56561a[_0x426b55 + 13]] + _0x44e439[_0x56561a[_0x426b55 + 14]] + _0x44e439[_0x56561a[_0x426b55 + 15]]).toLowerCase();
    }
    function _0x3a997b(_0xfd542b, _0x5a261b = 0) {
      const _0x28bbcc = _0x4e8b93(_0xfd542b, _0x5a261b);
      if (!validate(_0x28bbcc)) {
        throw TypeError("Stringified UUID is invalid");
      }
      return _0x28bbcc;
    }
    const _0x3b0c09 = null && _0x3a997b;
    ;
    function _0x1b6741(_0x2f170b, _0x42dab5, _0x1e108a) {
      if (_0x207189.randomUUID && !_0x42dab5 && !_0x2f170b) {
        return _0x207189.randomUUID();
      }
      _0x2f170b = _0x2f170b || {};
      const _0x50201c = _0x2f170b.random || (_0x2f170b.rng || _0x10b71d)();
      _0x50201c[6] = _0x50201c[6] & 15 | 64;
      _0x50201c[8] = _0x50201c[8] & 63 | 128;
      if (_0x42dab5) {
        _0x1e108a = _0x1e108a || 0;
        for (let _0x5e0965 = 0; _0x5e0965 < 16; ++_0x5e0965) {
          _0x42dab5[_0x1e108a + _0x5e0965] = _0x50201c[_0x5e0965];
        }
        return _0x42dab5;
      }
      return _0x4e8b93(_0x50201c);
    }
    const _0x247fca = _0x1b6741;
    ;
    const _0x5276c6 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    ;
    function _0x15dd8e(_0x41eb05) {
      return typeof _0x41eb05 === "string" && _0x5276c6.test(_0x41eb05);
    }
    const _0x538d3f = _0x15dd8e;
    ;
    function _0x2fe1bb(_0x342d5a) {
      if (!_0x538d3f(_0x342d5a)) {
        throw TypeError("Invalid UUID");
      }
      let _0x328171;
      const _0x94e814 = new Uint8Array(16);
      _0x94e814[0] = (_0x328171 = parseInt(_0x342d5a.slice(0, 8), 16)) >>> 24;
      _0x94e814[1] = _0x328171 >>> 16 & 255;
      _0x94e814[2] = _0x328171 >>> 8 & 255;
      _0x94e814[3] = _0x328171 & 255;
      _0x94e814[4] = (_0x328171 = parseInt(_0x342d5a.slice(9, 13), 16)) >>> 8;
      _0x94e814[5] = _0x328171 & 255;
      _0x94e814[6] = (_0x328171 = parseInt(_0x342d5a.slice(14, 18), 16)) >>> 8;
      _0x94e814[7] = _0x328171 & 255;
      _0x94e814[8] = (_0x328171 = parseInt(_0x342d5a.slice(19, 23), 16)) >>> 8;
      _0x94e814[9] = _0x328171 & 255;
      _0x94e814[10] = (_0x328171 = parseInt(_0x342d5a.slice(24, 36), 16)) / 1099511627776 & 255;
      _0x94e814[11] = _0x328171 / 4294967296 & 255;
      _0x94e814[12] = _0x328171 >>> 24 & 255;
      _0x94e814[13] = _0x328171 >>> 16 & 255;
      _0x94e814[14] = _0x328171 >>> 8 & 255;
      _0x94e814[15] = _0x328171 & 255;
      return _0x94e814;
    }
    const _0x536d75 = _0x2fe1bb;
    ;
    function _0xbc833e(_0xb749e1) {
      _0xb749e1 = unescape(encodeURIComponent(_0xb749e1));
      const _0x95528 = [];
      for (let _0x91337a = 0; _0x91337a < _0xb749e1.length; ++_0x91337a) {
        _0x95528.push(_0xb749e1.charCodeAt(_0x91337a));
      }
      return _0x95528;
    }
    const _0x14df44 = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    const _0x413c86 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
    function _0x54cc62(_0x3f755f, _0x25dd15, _0x45ca24) {
      function _0x529b48(_0x50cd2a, _0x589807, _0x229937, _0x75a573) {
        if (typeof _0x50cd2a === "string") {
          _0x50cd2a = _0xbc833e(_0x50cd2a);
        }
        if (typeof _0x589807 === "string") {
          _0x589807 = _0x536d75(_0x589807);
        }
        if (_0x589807?.length !== 16) {
          throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
        }
        let _0x4ca774 = new Uint8Array(16 + _0x50cd2a.length);
        _0x4ca774.set(_0x589807);
        _0x4ca774.set(_0x50cd2a, _0x589807.length);
        _0x4ca774 = _0x45ca24(_0x4ca774);
        _0x4ca774[6] = _0x4ca774[6] & 15 | _0x25dd15;
        _0x4ca774[8] = _0x4ca774[8] & 63 | 128;
        if (_0x229937) {
          _0x75a573 = _0x75a573 || 0;
          for (let _0x8364fd = 0; _0x8364fd < 16; ++_0x8364fd) {
            _0x229937[_0x75a573 + _0x8364fd] = _0x4ca774[_0x8364fd];
          }
          return _0x229937;
        }
        return _0x4e8b93(_0x4ca774);
      }
      try {
        _0x529b48.name = _0x3f755f;
      } catch (_0x4a00a7) {}
      _0x529b48.DNS = _0x14df44;
      _0x529b48.URL = _0x413c86;
      return _0x529b48;
    }
    ;
    function _0x45592d(_0x468267, _0x350f5f, _0x63c621, _0x71826e) {
      switch (_0x468267) {
        case 0:
          return _0x350f5f & _0x63c621 ^ ~_0x350f5f & _0x71826e;
        case 1:
          return _0x350f5f ^ _0x63c621 ^ _0x71826e;
        case 2:
          return _0x350f5f & _0x63c621 ^ _0x350f5f & _0x71826e ^ _0x63c621 & _0x71826e;
        case 3:
          return _0x350f5f ^ _0x63c621 ^ _0x71826e;
      }
    }
    function _0x4fe8ea(_0x2014ac, _0xd20829) {
      return _0x2014ac << _0xd20829 | _0x2014ac >>> 32 - _0xd20829;
    }
    function _0x57d738(_0x4cf99c) {
      const _0x44319 = [1518500249, 1859775393, 2400959708, 3395469782];
      const _0x34e761 = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
      if (typeof _0x4cf99c === "string") {
        const _0x11f3ec = unescape(encodeURIComponent(_0x4cf99c));
        _0x4cf99c = [];
        for (let _0x39c70c = 0; _0x39c70c < _0x11f3ec.length; ++_0x39c70c) {
          _0x4cf99c.push(_0x11f3ec.charCodeAt(_0x39c70c));
        }
      } else if (!Array.isArray(_0x4cf99c)) {
        _0x4cf99c = Array.prototype.slice.call(_0x4cf99c);
      }
      _0x4cf99c.push(128);
      const _0x43a7ce = _0x4cf99c.length / 4 + 2;
      const _0x3937a2 = Math.ceil(_0x43a7ce / 16);
      const _0x56bf09 = new Array(_0x3937a2);
      for (let _0x388438 = 0; _0x388438 < _0x3937a2; ++_0x388438) {
        const _0x42fd19 = new Uint32Array(16);
        for (let _0x5ee9b9 = 0; _0x5ee9b9 < 16; ++_0x5ee9b9) {
          _0x42fd19[_0x5ee9b9] = _0x4cf99c[_0x388438 * 64 + _0x5ee9b9 * 4] << 24 | _0x4cf99c[_0x388438 * 64 + _0x5ee9b9 * 4 + 1] << 16 | _0x4cf99c[_0x388438 * 64 + _0x5ee9b9 * 4 + 2] << 8 | _0x4cf99c[_0x388438 * 64 + _0x5ee9b9 * 4 + 3];
        }
        _0x56bf09[_0x388438] = _0x42fd19;
      }
      _0x56bf09[_0x3937a2 - 1][14] = (_0x4cf99c.length - 1) * 8 / Math.pow(2, 32);
      _0x56bf09[_0x3937a2 - 1][14] = Math.floor(_0x56bf09[_0x3937a2 - 1][14]);
      _0x56bf09[_0x3937a2 - 1][15] = (_0x4cf99c.length - 1) * 8 & 4294967295;
      for (let _0x2c51c7 = 0; _0x2c51c7 < _0x3937a2; ++_0x2c51c7) {
        const _0x74c420 = new Uint32Array(80);
        for (let _0x2bc812 = 0; _0x2bc812 < 16; ++_0x2bc812) {
          _0x74c420[_0x2bc812] = _0x56bf09[_0x2c51c7][_0x2bc812];
        }
        for (let _0x3e4b7e = 16; _0x3e4b7e < 80; ++_0x3e4b7e) {
          _0x74c420[_0x3e4b7e] = _0x4fe8ea(_0x74c420[_0x3e4b7e - 3] ^ _0x74c420[_0x3e4b7e - 8] ^ _0x74c420[_0x3e4b7e - 14] ^ _0x74c420[_0x3e4b7e - 16], 1);
        }
        let _0x174a08 = _0x34e761[0];
        let _0x523c86 = _0x34e761[1];
        let _0xe03c7f = _0x34e761[2];
        let _0xce1db2 = _0x34e761[3];
        let _0x560190 = _0x34e761[4];
        for (let _0x1b6c75 = 0; _0x1b6c75 < 80; ++_0x1b6c75) {
          const _0x1c87c6 = Math.floor(_0x1b6c75 / 20);
          const _0x52e727 = _0x4fe8ea(_0x174a08, 5) + _0x45592d(_0x1c87c6, _0x523c86, _0xe03c7f, _0xce1db2) + _0x560190 + _0x44319[_0x1c87c6] + _0x74c420[_0x1b6c75] >>> 0;
          _0x560190 = _0xce1db2;
          _0xce1db2 = _0xe03c7f;
          _0xe03c7f = _0x4fe8ea(_0x523c86, 30) >>> 0;
          _0x523c86 = _0x174a08;
          _0x174a08 = _0x52e727;
        }
        _0x34e761[0] = _0x34e761[0] + _0x174a08 >>> 0;
        _0x34e761[1] = _0x34e761[1] + _0x523c86 >>> 0;
        _0x34e761[2] = _0x34e761[2] + _0xe03c7f >>> 0;
        _0x34e761[3] = _0x34e761[3] + _0xce1db2 >>> 0;
        _0x34e761[4] = _0x34e761[4] + _0x560190 >>> 0;
      }
      return [_0x34e761[0] >> 24 & 255, _0x34e761[0] >> 16 & 255, _0x34e761[0] >> 8 & 255, _0x34e761[0] & 255, _0x34e761[1] >> 24 & 255, _0x34e761[1] >> 16 & 255, _0x34e761[1] >> 8 & 255, _0x34e761[1] & 255, _0x34e761[2] >> 24 & 255, _0x34e761[2] >> 16 & 255, _0x34e761[2] >> 8 & 255, _0x34e761[2] & 255, _0x34e761[3] >> 24 & 255, _0x34e761[3] >> 16 & 255, _0x34e761[3] >> 8 & 255, _0x34e761[3] & 255, _0x34e761[4] >> 24 & 255, _0x34e761[4] >> 16 & 255, _0x34e761[4] >> 8 & 255, _0x34e761[4] & 255];
    }
    const _0x11c795 = _0x57d738;
    ;
    const _0x9f4cfd = _0x54cc62("v5", 80, _0x11c795);
    const _0x5a4288 = _0x9f4cfd;
    ; /*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */
    const _0x5020b4 = 4;
    const _0x57bb4f = 0;
    const _0x500020 = 1;
    const _0x46d8e3 = 2;
    function _0x2dbce3(_0x227a00) {
      let _0xc9154f = _0x227a00.length;
      while (--_0xc9154f >= 0) {
        _0x227a00[_0xc9154f] = 0;
      }
    }
    const _0x2dcaeb = 0;
    const _0x4cb460 = 1;
    const _0x4c4805 = 2;
    const _0x1ad779 = 3;
    const _0xe73163 = 258;
    const _0x3e4ac8 = 29;
    const _0x329470 = 256;
    const _0x9b3a42 = _0x329470 + 1 + _0x3e4ac8;
    const _0x5f26be = 30;
    const _0x4dbe45 = 19;
    const _0x535111 = _0x9b3a42 * 2 + 1;
    const _0x227073 = 15;
    const _0xd06dca = 16;
    const _0x296374 = 7;
    const _0x51a082 = 256;
    const _0x4b1706 = 16;
    const _0x3bdf12 = 17;
    const _0x596f5a = 18;
    const _0x20068e = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]);
    const _0x580324 = new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]);
    const _0x607f4d = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]);
    const _0x113714 = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
    const _0x187094 = 512;
    const _0x70e6b0 = new Array((_0x9b3a42 + 2) * 2);
    _0x2dbce3(_0x70e6b0);
    const _0x51fadb = new Array(_0x5f26be * 2);
    _0x2dbce3(_0x51fadb);
    const _0x4ae9a1 = new Array(_0x187094);
    _0x2dbce3(_0x4ae9a1);
    const _0x298a6c = new Array(_0xe73163 - _0x1ad779 + 1);
    _0x2dbce3(_0x298a6c);
    const _0x3cad67 = new Array(_0x3e4ac8);
    _0x2dbce3(_0x3cad67);
    const _0x53fd39 = new Array(_0x5f26be);
    _0x2dbce3(_0x53fd39);
    function _0x212a13(_0x3aec9c, _0x1d370e, _0x2acbf3, _0x2c6a05, _0x16445a) {
      this.static_tree = _0x3aec9c;
      this.extra_bits = _0x1d370e;
      this.extra_base = _0x2acbf3;
      this.elems = _0x2c6a05;
      this.max_length = _0x16445a;
      this.has_stree = _0x3aec9c && _0x3aec9c.length;
    }
    let _0x286996;
    let _0x5b5943;
    let _0x3cbeb6;
    function _0x3fe7ee(_0xa52907, _0x133be7) {
      this.dyn_tree = _0xa52907;
      this.max_code = 0;
      this.stat_desc = _0x133be7;
    }
    const _0x2df4ee = _0x287af5 => {
      if (_0x287af5 < 256) {
        return _0x4ae9a1[_0x287af5];
      } else {
        return _0x4ae9a1[256 + (_0x287af5 >>> 7)];
      }
    };
    const _0xe92b55 = (_0x4674e5, _0x5006c2) => {
      _0x4674e5.pending_buf[_0x4674e5.pending++] = _0x5006c2 & 255;
      _0x4674e5.pending_buf[_0x4674e5.pending++] = _0x5006c2 >>> 8 & 255;
    };
    const _0x2616c7 = (_0x2cbcdd, _0x382d89, _0x5dac54) => {
      if (_0x2cbcdd.bi_valid > _0xd06dca - _0x5dac54) {
        _0x2cbcdd.bi_buf |= _0x382d89 << _0x2cbcdd.bi_valid & 65535;
        _0xe92b55(_0x2cbcdd, _0x2cbcdd.bi_buf);
        _0x2cbcdd.bi_buf = _0x382d89 >> _0xd06dca - _0x2cbcdd.bi_valid;
        _0x2cbcdd.bi_valid += _0x5dac54 - _0xd06dca;
      } else {
        _0x2cbcdd.bi_buf |= _0x382d89 << _0x2cbcdd.bi_valid & 65535;
        _0x2cbcdd.bi_valid += _0x5dac54;
      }
    };
    const _0x3371dc = (_0x5278b4, _0x359010, _0x3dd4bf) => {
      _0x2616c7(_0x5278b4, _0x3dd4bf[_0x359010 * 2], _0x3dd4bf[_0x359010 * 2 + 1]);
    };
    const _0x3fc00e = (_0x2a04f0, _0x3c99a8) => {
      let _0xa9891d = 0;
      do {
        _0xa9891d |= _0x2a04f0 & 1;
        _0x2a04f0 >>>= 1;
        _0xa9891d <<= 1;
      } while (--_0x3c99a8 > 0);
      return _0xa9891d >>> 1;
    };
    const _0x4936d7 = _0x54f433 => {
      if (_0x54f433.bi_valid === 16) {
        _0xe92b55(_0x54f433, _0x54f433.bi_buf);
        _0x54f433.bi_buf = 0;
        _0x54f433.bi_valid = 0;
      } else if (_0x54f433.bi_valid >= 8) {
        _0x54f433.pending_buf[_0x54f433.pending++] = _0x54f433.bi_buf & 255;
        _0x54f433.bi_buf >>= 8;
        _0x54f433.bi_valid -= 8;
      }
    };
    const _0xbcf6c0 = (_0x285915, _0x419f34) => {
      const _0x5c83f2 = _0x419f34.dyn_tree;
      const _0x192aad = _0x419f34.max_code;
      const _0x8953de = _0x419f34.stat_desc.static_tree;
      const _0x46fffb = _0x419f34.stat_desc.has_stree;
      const _0x5f2b01 = _0x419f34.stat_desc.extra_bits;
      const _0x54c5ba = _0x419f34.stat_desc.extra_base;
      const _0x585267 = _0x419f34.stat_desc.max_length;
      let _0x58d4b2;
      let _0x27a013;
      let _0x86ca72;
      let _0x354ae0;
      let _0x13f559;
      let _0x53668c;
      let _0x3c24ec = 0;
      for (_0x354ae0 = 0; _0x354ae0 <= _0x227073; _0x354ae0++) {
        _0x285915.bl_count[_0x354ae0] = 0;
      }
      _0x5c83f2[_0x285915.heap[_0x285915.heap_max] * 2 + 1] = 0;
      for (_0x58d4b2 = _0x285915.heap_max + 1; _0x58d4b2 < _0x535111; _0x58d4b2++) {
        _0x27a013 = _0x285915.heap[_0x58d4b2];
        _0x354ae0 = _0x5c83f2[_0x5c83f2[_0x27a013 * 2 + 1] * 2 + 1] + 1;
        if (_0x354ae0 > _0x585267) {
          _0x354ae0 = _0x585267;
          _0x3c24ec++;
        }
        _0x5c83f2[_0x27a013 * 2 + 1] = _0x354ae0;
        if (_0x27a013 > _0x192aad) {
          continue;
        }
        _0x285915.bl_count[_0x354ae0]++;
        _0x13f559 = 0;
        if (_0x27a013 >= _0x54c5ba) {
          _0x13f559 = _0x5f2b01[_0x27a013 - _0x54c5ba];
        }
        _0x53668c = _0x5c83f2[_0x27a013 * 2];
        _0x285915.opt_len += _0x53668c * (_0x354ae0 + _0x13f559);
        if (_0x46fffb) {
          _0x285915.static_len += _0x53668c * (_0x8953de[_0x27a013 * 2 + 1] + _0x13f559);
        }
      }
      if (_0x3c24ec === 0) {
        return;
      }
      do {
        _0x354ae0 = _0x585267 - 1;
        while (_0x285915.bl_count[_0x354ae0] === 0) {
          _0x354ae0--;
        }
        _0x285915.bl_count[_0x354ae0]--;
        _0x285915.bl_count[_0x354ae0 + 1] += 2;
        _0x285915.bl_count[_0x585267]--;
        _0x3c24ec -= 2;
      } while (_0x3c24ec > 0);
      for (_0x354ae0 = _0x585267; _0x354ae0 !== 0; _0x354ae0--) {
        _0x27a013 = _0x285915.bl_count[_0x354ae0];
        while (_0x27a013 !== 0) {
          _0x86ca72 = _0x285915.heap[--_0x58d4b2];
          if (_0x86ca72 > _0x192aad) {
            continue;
          }
          if (_0x5c83f2[_0x86ca72 * 2 + 1] !== _0x354ae0) {
            _0x285915.opt_len += (_0x354ae0 - _0x5c83f2[_0x86ca72 * 2 + 1]) * _0x5c83f2[_0x86ca72 * 2];
            _0x5c83f2[_0x86ca72 * 2 + 1] = _0x354ae0;
          }
          _0x27a013--;
        }
      }
    };
    const _0x1a615e = (_0x15b838, _0x3067a3, _0x45f527) => {
      const _0x521875 = new Array(_0x227073 + 1);
      let _0x51aec7 = 0;
      let _0x403495;
      let _0x2d65e4;
      for (_0x403495 = 1; _0x403495 <= _0x227073; _0x403495++) {
        _0x51aec7 = _0x51aec7 + _0x45f527[_0x403495 - 1] << 1;
        _0x521875[_0x403495] = _0x51aec7;
      }
      for (_0x2d65e4 = 0; _0x2d65e4 <= _0x3067a3; _0x2d65e4++) {
        let _0x54bd6c = _0x15b838[_0x2d65e4 * 2 + 1];
        if (_0x54bd6c === 0) {
          continue;
        }
        _0x15b838[_0x2d65e4 * 2] = _0x3fc00e(_0x521875[_0x54bd6c]++, _0x54bd6c);
      }
    };
    const _0x3460b1 = () => {
      let _0x2ec2d7;
      let _0x5625d7;
      let _0xec3e96;
      let _0x142991;
      let _0x51d3f7;
      const _0x118a82 = new Array(_0x227073 + 1);
      _0xec3e96 = 0;
      for (_0x142991 = 0; _0x142991 < _0x3e4ac8 - 1; _0x142991++) {
        _0x3cad67[_0x142991] = _0xec3e96;
        for (_0x2ec2d7 = 0; _0x2ec2d7 < 1 << _0x20068e[_0x142991]; _0x2ec2d7++) {
          _0x298a6c[_0xec3e96++] = _0x142991;
        }
      }
      _0x298a6c[_0xec3e96 - 1] = _0x142991;
      _0x51d3f7 = 0;
      for (_0x142991 = 0; _0x142991 < 16; _0x142991++) {
        _0x53fd39[_0x142991] = _0x51d3f7;
        for (_0x2ec2d7 = 0; _0x2ec2d7 < 1 << _0x580324[_0x142991]; _0x2ec2d7++) {
          _0x4ae9a1[_0x51d3f7++] = _0x142991;
        }
      }
      _0x51d3f7 >>= 7;
      for (; _0x142991 < _0x5f26be; _0x142991++) {
        _0x53fd39[_0x142991] = _0x51d3f7 << 7;
        for (_0x2ec2d7 = 0; _0x2ec2d7 < 1 << _0x580324[_0x142991] - 7; _0x2ec2d7++) {
          _0x4ae9a1[256 + _0x51d3f7++] = _0x142991;
        }
      }
      for (_0x5625d7 = 0; _0x5625d7 <= _0x227073; _0x5625d7++) {
        _0x118a82[_0x5625d7] = 0;
      }
      _0x2ec2d7 = 0;
      while (_0x2ec2d7 <= 143) {
        _0x70e6b0[_0x2ec2d7 * 2 + 1] = 8;
        _0x2ec2d7++;
        _0x118a82[8]++;
      }
      while (_0x2ec2d7 <= 255) {
        _0x70e6b0[_0x2ec2d7 * 2 + 1] = 9;
        _0x2ec2d7++;
        _0x118a82[9]++;
      }
      while (_0x2ec2d7 <= 279) {
        _0x70e6b0[_0x2ec2d7 * 2 + 1] = 7;
        _0x2ec2d7++;
        _0x118a82[7]++;
      }
      while (_0x2ec2d7 <= 287) {
        _0x70e6b0[_0x2ec2d7 * 2 + 1] = 8;
        _0x2ec2d7++;
        _0x118a82[8]++;
      }
      _0x1a615e(_0x70e6b0, _0x9b3a42 + 1, _0x118a82);
      for (_0x2ec2d7 = 0; _0x2ec2d7 < _0x5f26be; _0x2ec2d7++) {
        _0x51fadb[_0x2ec2d7 * 2 + 1] = 5;
        _0x51fadb[_0x2ec2d7 * 2] = _0x3fc00e(_0x2ec2d7, 5);
      }
      _0x286996 = new _0x212a13(_0x70e6b0, _0x20068e, _0x329470 + 1, _0x9b3a42, _0x227073);
      _0x5b5943 = new _0x212a13(_0x51fadb, _0x580324, 0, _0x5f26be, _0x227073);
      _0x3cbeb6 = new _0x212a13(new Array(0), _0x607f4d, 0, _0x4dbe45, _0x296374);
    };
    const _0x3464da = _0x5130ac => {
      let _0x47fd43;
      for (_0x47fd43 = 0; _0x47fd43 < _0x9b3a42; _0x47fd43++) {
        _0x5130ac.dyn_ltree[_0x47fd43 * 2] = 0;
      }
      for (_0x47fd43 = 0; _0x47fd43 < _0x5f26be; _0x47fd43++) {
        _0x5130ac.dyn_dtree[_0x47fd43 * 2] = 0;
      }
      for (_0x47fd43 = 0; _0x47fd43 < _0x4dbe45; _0x47fd43++) {
        _0x5130ac.bl_tree[_0x47fd43 * 2] = 0;
      }
      _0x5130ac.dyn_ltree[_0x51a082 * 2] = 1;
      _0x5130ac.opt_len = _0x5130ac.static_len = 0;
      _0x5130ac.sym_next = _0x5130ac.matches = 0;
    };
    const _0x412cd0 = _0x5a5949 => {
      if (_0x5a5949.bi_valid > 8) {
        _0xe92b55(_0x5a5949, _0x5a5949.bi_buf);
      } else if (_0x5a5949.bi_valid > 0) {
        _0x5a5949.pending_buf[_0x5a5949.pending++] = _0x5a5949.bi_buf;
      }
      _0x5a5949.bi_buf = 0;
      _0x5a5949.bi_valid = 0;
    };
    const _0x18dbf3 = (_0x8dfbbf, _0x4ca761, _0x3316cf, _0xa8bf01) => {
      const _0x35a377 = _0x4ca761 * 2;
      const _0x58775f = _0x3316cf * 2;
      return _0x8dfbbf[_0x35a377] < _0x8dfbbf[_0x58775f] || _0x8dfbbf[_0x35a377] === _0x8dfbbf[_0x58775f] && _0xa8bf01[_0x4ca761] <= _0xa8bf01[_0x3316cf];
    };
    const _0x1610a4 = (_0x8bba17, _0x598d8f, _0x2b5c00) => {
      const _0x44c333 = _0x8bba17.heap[_0x2b5c00];
      let _0x12f715 = _0x2b5c00 << 1;
      while (_0x12f715 <= _0x8bba17.heap_len) {
        if (_0x12f715 < _0x8bba17.heap_len && _0x18dbf3(_0x598d8f, _0x8bba17.heap[_0x12f715 + 1], _0x8bba17.heap[_0x12f715], _0x8bba17.depth)) {
          _0x12f715++;
        }
        if (_0x18dbf3(_0x598d8f, _0x44c333, _0x8bba17.heap[_0x12f715], _0x8bba17.depth)) {
          break;
        }
        _0x8bba17.heap[_0x2b5c00] = _0x8bba17.heap[_0x12f715];
        _0x2b5c00 = _0x12f715;
        _0x12f715 <<= 1;
      }
      _0x8bba17.heap[_0x2b5c00] = _0x44c333;
    };
    const _0x8972e3 = (_0x3bf6e0, _0x54f84b, _0x27dbf8) => {
      let _0x132de3;
      let _0x58938b;
      let _0x289c60 = 0;
      let _0x14c813;
      let _0x316882;
      if (_0x3bf6e0.sym_next !== 0) {
        do {
          _0x132de3 = _0x3bf6e0.pending_buf[_0x3bf6e0.sym_buf + _0x289c60++] & 255;
          _0x132de3 += (_0x3bf6e0.pending_buf[_0x3bf6e0.sym_buf + _0x289c60++] & 255) << 8;
          _0x58938b = _0x3bf6e0.pending_buf[_0x3bf6e0.sym_buf + _0x289c60++];
          if (_0x132de3 === 0) {
            _0x3371dc(_0x3bf6e0, _0x58938b, _0x54f84b);
          } else {
            _0x14c813 = _0x298a6c[_0x58938b];
            _0x3371dc(_0x3bf6e0, _0x14c813 + _0x329470 + 1, _0x54f84b);
            _0x316882 = _0x20068e[_0x14c813];
            if (_0x316882 !== 0) {
              _0x58938b -= _0x3cad67[_0x14c813];
              _0x2616c7(_0x3bf6e0, _0x58938b, _0x316882);
            }
            _0x132de3--;
            _0x14c813 = _0x2df4ee(_0x132de3);
            _0x3371dc(_0x3bf6e0, _0x14c813, _0x27dbf8);
            _0x316882 = _0x580324[_0x14c813];
            if (_0x316882 !== 0) {
              _0x132de3 -= _0x53fd39[_0x14c813];
              _0x2616c7(_0x3bf6e0, _0x132de3, _0x316882);
            }
          }
        } while (_0x289c60 < _0x3bf6e0.sym_next);
      }
      _0x3371dc(_0x3bf6e0, _0x51a082, _0x54f84b);
    };
    const _0x403db9 = (_0x5786df, _0x313824) => {
      const _0x2a8330 = _0x313824.dyn_tree;
      const _0x765978 = _0x313824.stat_desc.static_tree;
      const _0x119911 = _0x313824.stat_desc.has_stree;
      const _0x172255 = _0x313824.stat_desc.elems;
      let _0x5763f7;
      let _0x2ea574;
      let _0x5a499d = -1;
      let _0x4ad20e;
      _0x5786df.heap_len = 0;
      _0x5786df.heap_max = _0x535111;
      for (_0x5763f7 = 0; _0x5763f7 < _0x172255; _0x5763f7++) {
        if (_0x2a8330[_0x5763f7 * 2] !== 0) {
          _0x5786df.heap[++_0x5786df.heap_len] = _0x5a499d = _0x5763f7;
          _0x5786df.depth[_0x5763f7] = 0;
        } else {
          _0x2a8330[_0x5763f7 * 2 + 1] = 0;
        }
      }
      while (_0x5786df.heap_len < 2) {
        _0x4ad20e = _0x5786df.heap[++_0x5786df.heap_len] = _0x5a499d < 2 ? ++_0x5a499d : 0;
        _0x2a8330[_0x4ad20e * 2] = 1;
        _0x5786df.depth[_0x4ad20e] = 0;
        _0x5786df.opt_len--;
        if (_0x119911) {
          _0x5786df.static_len -= _0x765978[_0x4ad20e * 2 + 1];
        }
      }
      _0x313824.max_code = _0x5a499d;
      for (_0x5763f7 = _0x5786df.heap_len >> 1; _0x5763f7 >= 1; _0x5763f7--) {
        _0x1610a4(_0x5786df, _0x2a8330, _0x5763f7);
      }
      _0x4ad20e = _0x172255;
      do {
        _0x5763f7 = _0x5786df.heap[1];
        _0x5786df.heap[1] = _0x5786df.heap[_0x5786df.heap_len--];
        _0x1610a4(_0x5786df, _0x2a8330, 1);
        _0x2ea574 = _0x5786df.heap[1];
        _0x5786df.heap[--_0x5786df.heap_max] = _0x5763f7;
        _0x5786df.heap[--_0x5786df.heap_max] = _0x2ea574;
        _0x2a8330[_0x4ad20e * 2] = _0x2a8330[_0x5763f7 * 2] + _0x2a8330[_0x2ea574 * 2];
        _0x5786df.depth[_0x4ad20e] = (_0x5786df.depth[_0x5763f7] >= _0x5786df.depth[_0x2ea574] ? _0x5786df.depth[_0x5763f7] : _0x5786df.depth[_0x2ea574]) + 1;
        _0x2a8330[_0x5763f7 * 2 + 1] = _0x2a8330[_0x2ea574 * 2 + 1] = _0x4ad20e;
        _0x5786df.heap[1] = _0x4ad20e++;
        _0x1610a4(_0x5786df, _0x2a8330, 1);
      } while (_0x5786df.heap_len >= 2);
      _0x5786df.heap[--_0x5786df.heap_max] = _0x5786df.heap[1];
      _0xbcf6c0(_0x5786df, _0x313824);
      _0x1a615e(_0x2a8330, _0x5a499d, _0x5786df.bl_count);
    };
    const _0xcf0143 = (_0x558ca8, _0x1028c4, _0x550b02) => {
      let _0x595d4c;
      let _0x25a480 = -1;
      let _0x1bc335;
      let _0x256ff7 = _0x1028c4[1];
      let _0x136dfe = 0;
      let _0x3828da = 7;
      let _0x376790 = 4;
      if (_0x256ff7 === 0) {
        _0x3828da = 138;
        _0x376790 = 3;
      }
      _0x1028c4[(_0x550b02 + 1) * 2 + 1] = 65535;
      for (_0x595d4c = 0; _0x595d4c <= _0x550b02; _0x595d4c++) {
        _0x1bc335 = _0x256ff7;
        _0x256ff7 = _0x1028c4[(_0x595d4c + 1) * 2 + 1];
        if (++_0x136dfe < _0x3828da && _0x1bc335 === _0x256ff7) {
          continue;
        } else if (_0x136dfe < _0x376790) {
          _0x558ca8.bl_tree[_0x1bc335 * 2] += _0x136dfe;
        } else if (_0x1bc335 !== 0) {
          if (_0x1bc335 !== _0x25a480) {
            _0x558ca8.bl_tree[_0x1bc335 * 2]++;
          }
          _0x558ca8.bl_tree[_0x4b1706 * 2]++;
        } else if (_0x136dfe <= 10) {
          _0x558ca8.bl_tree[_0x3bdf12 * 2]++;
        } else {
          _0x558ca8.bl_tree[_0x596f5a * 2]++;
        }
        _0x136dfe = 0;
        _0x25a480 = _0x1bc335;
        if (_0x256ff7 === 0) {
          _0x3828da = 138;
          _0x376790 = 3;
        } else if (_0x1bc335 === _0x256ff7) {
          _0x3828da = 6;
          _0x376790 = 3;
        } else {
          _0x3828da = 7;
          _0x376790 = 4;
        }
      }
    };
    const _0x53e5c6 = (_0x190cb1, _0x157075, _0x5c5b5d) => {
      let _0x578063;
      let _0x5eaf7c = -1;
      let _0x4b60c0;
      let _0x23f21f = _0x157075[1];
      let _0x21c24b = 0;
      let _0x181a7b = 7;
      let _0x2bb17f = 4;
      if (_0x23f21f === 0) {
        _0x181a7b = 138;
        _0x2bb17f = 3;
      }
      for (_0x578063 = 0; _0x578063 <= _0x5c5b5d; _0x578063++) {
        _0x4b60c0 = _0x23f21f;
        _0x23f21f = _0x157075[(_0x578063 + 1) * 2 + 1];
        if (++_0x21c24b < _0x181a7b && _0x4b60c0 === _0x23f21f) {
          continue;
        } else if (_0x21c24b < _0x2bb17f) {
          do {
            _0x3371dc(_0x190cb1, _0x4b60c0, _0x190cb1.bl_tree);
          } while (--_0x21c24b !== 0);
        } else if (_0x4b60c0 !== 0) {
          if (_0x4b60c0 !== _0x5eaf7c) {
            _0x3371dc(_0x190cb1, _0x4b60c0, _0x190cb1.bl_tree);
            _0x21c24b--;
          }
          _0x3371dc(_0x190cb1, _0x4b1706, _0x190cb1.bl_tree);
          _0x2616c7(_0x190cb1, _0x21c24b - 3, 2);
        } else if (_0x21c24b <= 10) {
          _0x3371dc(_0x190cb1, _0x3bdf12, _0x190cb1.bl_tree);
          _0x2616c7(_0x190cb1, _0x21c24b - 3, 3);
        } else {
          _0x3371dc(_0x190cb1, _0x596f5a, _0x190cb1.bl_tree);
          _0x2616c7(_0x190cb1, _0x21c24b - 11, 7);
        }
        _0x21c24b = 0;
        _0x5eaf7c = _0x4b60c0;
        if (_0x23f21f === 0) {
          _0x181a7b = 138;
          _0x2bb17f = 3;
        } else if (_0x4b60c0 === _0x23f21f) {
          _0x181a7b = 6;
          _0x2bb17f = 3;
        } else {
          _0x181a7b = 7;
          _0x2bb17f = 4;
        }
      }
    };
    const _0xd9c397 = _0x1cff39 => {
      let _0x234b1c;
      _0xcf0143(_0x1cff39, _0x1cff39.dyn_ltree, _0x1cff39.l_desc.max_code);
      _0xcf0143(_0x1cff39, _0x1cff39.dyn_dtree, _0x1cff39.d_desc.max_code);
      _0x403db9(_0x1cff39, _0x1cff39.bl_desc);
      for (_0x234b1c = _0x4dbe45 - 1; _0x234b1c >= 3; _0x234b1c--) {
        if (_0x1cff39.bl_tree[_0x113714[_0x234b1c] * 2 + 1] !== 0) {
          break;
        }
      }
      _0x1cff39.opt_len += (_0x234b1c + 1) * 3 + 5 + 5 + 4;
      return _0x234b1c;
    };
    const _0x3d68bb = (_0x4a0308, _0x3779f1, _0x114541, _0x5e1dbf) => {
      let _0x244d55;
      _0x2616c7(_0x4a0308, _0x3779f1 - 257, 5);
      _0x2616c7(_0x4a0308, _0x114541 - 1, 5);
      _0x2616c7(_0x4a0308, _0x5e1dbf - 4, 4);
      for (_0x244d55 = 0; _0x244d55 < _0x5e1dbf; _0x244d55++) {
        _0x2616c7(_0x4a0308, _0x4a0308.bl_tree[_0x113714[_0x244d55] * 2 + 1], 3);
      }
      _0x53e5c6(_0x4a0308, _0x4a0308.dyn_ltree, _0x3779f1 - 1);
      _0x53e5c6(_0x4a0308, _0x4a0308.dyn_dtree, _0x114541 - 1);
    };
    const _0x56586a = _0x5ac952 => {
      let _0x426f42 = 4093624447;
      let _0x11238a;
      for (_0x11238a = 0; _0x11238a <= 31; _0x11238a++, _0x426f42 >>>= 1) {
        if (_0x426f42 & 1 && _0x5ac952.dyn_ltree[_0x11238a * 2] !== 0) {
          return _0x57bb4f;
        }
      }
      if (_0x5ac952.dyn_ltree[18] !== 0 || _0x5ac952.dyn_ltree[20] !== 0 || _0x5ac952.dyn_ltree[26] !== 0) {
        return _0x500020;
      }
      for (_0x11238a = 32; _0x11238a < _0x329470; _0x11238a++) {
        if (_0x5ac952.dyn_ltree[_0x11238a * 2] !== 0) {
          return _0x500020;
        }
      }
      return _0x57bb4f;
    };
    let _0x20f44d = false;
    const _0x209352 = _0x5dedab => {
      if (!_0x20f44d) {
        _0x3460b1();
        _0x20f44d = true;
      }
      _0x5dedab.l_desc = new _0x3fe7ee(_0x5dedab.dyn_ltree, _0x286996);
      _0x5dedab.d_desc = new _0x3fe7ee(_0x5dedab.dyn_dtree, _0x5b5943);
      _0x5dedab.bl_desc = new _0x3fe7ee(_0x5dedab.bl_tree, _0x3cbeb6);
      _0x5dedab.bi_buf = 0;
      _0x5dedab.bi_valid = 0;
      _0x3464da(_0x5dedab);
    };
    const _0x31acde = (_0x5cb61b, _0x1654b8, _0x55ac81, _0x1d41bc) => {
      _0x2616c7(_0x5cb61b, (_0x2dcaeb << 1) + (_0x1d41bc ? 1 : 0), 3);
      _0x412cd0(_0x5cb61b);
      _0xe92b55(_0x5cb61b, _0x55ac81);
      _0xe92b55(_0x5cb61b, ~_0x55ac81);
      if (_0x55ac81) {
        _0x5cb61b.pending_buf.set(_0x5cb61b.window.subarray(_0x1654b8, _0x1654b8 + _0x55ac81), _0x5cb61b.pending);
      }
      _0x5cb61b.pending += _0x55ac81;
    };
    const _0xdcaa19 = _0x1b73a4 => {
      _0x2616c7(_0x1b73a4, _0x4cb460 << 1, 3);
      _0x3371dc(_0x1b73a4, _0x51a082, _0x70e6b0);
      _0x4936d7(_0x1b73a4);
    };
    const _0x29ea21 = (_0x57fd44, _0x9d55cb, _0x518f2f, _0x5fa331) => {
      let _0x4050bf;
      let _0x2f9da9;
      let _0x17a3ea = 0;
      if (_0x57fd44.level > 0) {
        if (_0x57fd44.strm.data_type === _0x46d8e3) {
          _0x57fd44.strm.data_type = _0x56586a(_0x57fd44);
        }
        _0x403db9(_0x57fd44, _0x57fd44.l_desc);
        _0x403db9(_0x57fd44, _0x57fd44.d_desc);
        _0x17a3ea = _0xd9c397(_0x57fd44);
        _0x4050bf = _0x57fd44.opt_len + 3 + 7 >>> 3;
        _0x2f9da9 = _0x57fd44.static_len + 3 + 7 >>> 3;
        if (_0x2f9da9 <= _0x4050bf) {
          _0x4050bf = _0x2f9da9;
        }
      } else {
        _0x4050bf = _0x2f9da9 = _0x518f2f + 5;
      }
      if (_0x518f2f + 4 <= _0x4050bf && _0x9d55cb !== -1) {
        _0x31acde(_0x57fd44, _0x9d55cb, _0x518f2f, _0x5fa331);
      } else if (_0x57fd44.strategy === _0x5020b4 || _0x2f9da9 === _0x4050bf) {
        _0x2616c7(_0x57fd44, (_0x4cb460 << 1) + (_0x5fa331 ? 1 : 0), 3);
        _0x8972e3(_0x57fd44, _0x70e6b0, _0x51fadb);
      } else {
        _0x2616c7(_0x57fd44, (_0x4c4805 << 1) + (_0x5fa331 ? 1 : 0), 3);
        _0x3d68bb(_0x57fd44, _0x57fd44.l_desc.max_code + 1, _0x57fd44.d_desc.max_code + 1, _0x17a3ea + 1);
        _0x8972e3(_0x57fd44, _0x57fd44.dyn_ltree, _0x57fd44.dyn_dtree);
      }
      _0x3464da(_0x57fd44);
      if (_0x5fa331) {
        _0x412cd0(_0x57fd44);
      }
    };
    const _0x322d56 = (_0x2819fb, _0x320ccb, _0x3a39e2) => {
      _0x2819fb.pending_buf[_0x2819fb.sym_buf + _0x2819fb.sym_next++] = _0x320ccb;
      _0x2819fb.pending_buf[_0x2819fb.sym_buf + _0x2819fb.sym_next++] = _0x320ccb >> 8;
      _0x2819fb.pending_buf[_0x2819fb.sym_buf + _0x2819fb.sym_next++] = _0x3a39e2;
      if (_0x320ccb === 0) {
        _0x2819fb.dyn_ltree[_0x3a39e2 * 2]++;
      } else {
        _0x2819fb.matches++;
        _0x320ccb--;
        _0x2819fb.dyn_ltree[(_0x298a6c[_0x3a39e2] + _0x329470 + 1) * 2]++;
        _0x2819fb.dyn_dtree[_0x2df4ee(_0x320ccb) * 2]++;
      }
      return _0x2819fb.sym_next === _0x2819fb.sym_end;
    };
    var _0x442ce9 = _0x209352;
    var _0x4e9aa5 = _0x31acde;
    var _0x276b9 = _0x29ea21;
    var _0x595086 = _0x322d56;
    var _0x5d0518 = _0xdcaa19;
    var _0x2c4d8a = {
      _tr_init: _0x442ce9,
      _tr_stored_block: _0x4e9aa5,
      _tr_flush_block: _0x276b9,
      _tr_tally: _0x595086,
      _tr_align: _0x5d0518
    };
    var _0x4955f7 = _0x2c4d8a;
    const _0x2fb86e = (_0x1d4be5, _0x2110c7, _0x3b01ff, _0x39c181) => {
      let _0x5417fa = _0x1d4be5 & 65535 | 0;
      let _0x2f91ac = _0x1d4be5 >>> 16 & 65535 | 0;
      let _0x52591c = 0;
      while (_0x3b01ff !== 0) {
        _0x52591c = _0x3b01ff > 2000 ? 2000 : _0x3b01ff;
        _0x3b01ff -= _0x52591c;
        do {
          _0x5417fa = _0x5417fa + _0x2110c7[_0x39c181++] | 0;
          _0x2f91ac = _0x2f91ac + _0x5417fa | 0;
        } while (--_0x52591c);
        _0x5417fa %= 65521;
        _0x2f91ac %= 65521;
      }
      return _0x5417fa | _0x2f91ac << 16 | 0;
    };
    var _0x4b4483 = _0x2fb86e;
    const _0x196c04 = () => {
      let _0x37aa7b;
      let _0x471d5d = [];
      for (var _0x4badd4 = 0; _0x4badd4 < 256; _0x4badd4++) {
        _0x37aa7b = _0x4badd4;
        for (var _0x4c24c6 = 0; _0x4c24c6 < 8; _0x4c24c6++) {
          _0x37aa7b = _0x37aa7b & 1 ? _0x37aa7b >>> 1 ^ 3988292384 : _0x37aa7b >>> 1;
        }
        _0x471d5d[_0x4badd4] = _0x37aa7b;
      }
      return _0x471d5d;
    };
    const _0x5b04a = new Uint32Array(_0x196c04());
    const _0x2144c0 = (_0x11cc85, _0x592c43, _0xf175a5, _0x376d07) => {
      const _0x3a6832 = _0x5b04a;
      const _0x348dfc = _0x376d07 + _0xf175a5;
      _0x11cc85 ^= -1;
      for (let _0x559f18 = _0x376d07; _0x559f18 < _0x348dfc; _0x559f18++) {
        _0x11cc85 = _0x11cc85 >>> 8 ^ _0x3a6832[(_0x11cc85 ^ _0x592c43[_0x559f18]) & 255];
      }
      return _0x11cc85 ^ -1;
    };
    var _0x21fadc = _0x2144c0;
    var _0x4bb3a9 = {
      "2": "need dictionary",
      "1": "stream end",
      "0": "",
      "-1": "file error",
      "-2": "stream error",
      "-3": "data error",
      "-4": "insufficient memory",
      "-5": "buffer error",
      "-6": "incompatible version"
    };
    var _0x112664 = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_MEM_ERROR: -4,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8
    };
    var _0xe9a438 = _0x112664;
    const {
      _tr_init: _0x420dd5,
      _tr_stored_block: _0x30857e,
      _tr_flush_block: _0x38a1a1,
      _tr_tally: _0x19db74,
      _tr_align: _0x51324a
    } = _0x4955f7;
    const {
      Z_NO_FLUSH: _0x51f623,
      Z_PARTIAL_FLUSH: _0x55194b,
      Z_FULL_FLUSH: _0xfc9689,
      Z_FINISH: _0x5a2cce,
      Z_BLOCK: _0x2a0d9f,
      Z_OK: _0x33c5a0,
      Z_STREAM_END: _0x4267ac,
      Z_STREAM_ERROR: _0x34b84a,
      Z_DATA_ERROR: _0x3d1037,
      Z_BUF_ERROR: _0x49c864,
      Z_DEFAULT_COMPRESSION: _0x390d79,
      Z_FILTERED: _0x1f6d51,
      Z_HUFFMAN_ONLY: _0x4e2144,
      Z_RLE: _0x2df816,
      Z_FIXED: _0x2a47e6,
      Z_DEFAULT_STRATEGY: _0x34506f,
      Z_UNKNOWN: _0x5c8cbc,
      Z_DEFLATED: _0x4741e8
    } = _0xe9a438;
    const _0x50cc3b = 9;
    const _0x513045 = 15;
    const _0x5361a8 = 8;
    const _0x167cfd = 29;
    const _0x23e256 = 256;
    const _0x4a7e75 = _0x23e256 + 1 + _0x167cfd;
    const _0x4d5ae0 = 30;
    const _0xb3aadd = 19;
    const _0x45e50f = _0x4a7e75 * 2 + 1;
    const _0x3e9a12 = 15;
    const _0x5dbb51 = 3;
    const _0x2dd04c = 258;
    const _0x18d0cd = _0x2dd04c + _0x5dbb51 + 1;
    const _0xfc706a = 32;
    const _0x5cda3b = 42;
    const _0x53cd1f = 57;
    const _0x23b81c = 69;
    const _0x12fcf4 = 73;
    const _0x2fa9cb = 91;
    const _0xaa731b = 103;
    const _0x5aa509 = 113;
    const _0x1831bf = 666;
    const _0x14b46e = 1;
    const _0x2e7982 = 2;
    const _0x4d28ad = 3;
    const _0x5e04ee = 4;
    const _0x1e9d5a = 3;
    const _0x21c914 = (_0x47f785, _0x253903) => {
      _0x47f785.msg = _0x4bb3a9[_0x253903];
      return _0x253903;
    };
    const _0x1229e0 = _0x29e418 => {
      return _0x29e418 * 2 - (_0x29e418 > 4 ? 9 : 0);
    };
    const _0x40b7b5 = _0x25a7df => {
      let _0x4be062 = _0x25a7df.length;
      while (--_0x4be062 >= 0) {
        _0x25a7df[_0x4be062] = 0;
      }
    };
    const _0x13845b = _0x195833 => {
      let _0x507331;
      let _0x2411eb;
      let _0x1ea9d4;
      let _0xb03a01 = _0x195833.w_size;
      _0x507331 = _0x195833.hash_size;
      _0x1ea9d4 = _0x507331;
      do {
        _0x2411eb = _0x195833.head[--_0x1ea9d4];
        _0x195833.head[_0x1ea9d4] = _0x2411eb >= _0xb03a01 ? _0x2411eb - _0xb03a01 : 0;
      } while (--_0x507331);
      _0x507331 = _0xb03a01;
      _0x1ea9d4 = _0x507331;
      do {
        _0x2411eb = _0x195833.prev[--_0x1ea9d4];
        _0x195833.prev[_0x1ea9d4] = _0x2411eb >= _0xb03a01 ? _0x2411eb - _0xb03a01 : 0;
      } while (--_0x507331);
    };
    let _0x28497c = (_0x1ba491, _0x111f22, _0x19f796) => (_0x111f22 << _0x1ba491.hash_shift ^ _0x19f796) & _0x1ba491.hash_mask;
    let _0x30f162 = _0x28497c;
    const _0x3f7a53 = _0x3a447d => {
      const _0x4bbd6b = _0x3a447d.state;
      let _0x5626ee = _0x4bbd6b.pending;
      if (_0x5626ee > _0x3a447d.avail_out) {
        _0x5626ee = _0x3a447d.avail_out;
      }
      if (_0x5626ee === 0) {
        return;
      }
      _0x3a447d.output.set(_0x4bbd6b.pending_buf.subarray(_0x4bbd6b.pending_out, _0x4bbd6b.pending_out + _0x5626ee), _0x3a447d.next_out);
      _0x3a447d.next_out += _0x5626ee;
      _0x4bbd6b.pending_out += _0x5626ee;
      _0x3a447d.total_out += _0x5626ee;
      _0x3a447d.avail_out -= _0x5626ee;
      _0x4bbd6b.pending -= _0x5626ee;
      if (_0x4bbd6b.pending === 0) {
        _0x4bbd6b.pending_out = 0;
      }
    };
    const _0x5b83a9 = (_0x36d80b, _0xd77f81) => {
      _0x38a1a1(_0x36d80b, _0x36d80b.block_start >= 0 ? _0x36d80b.block_start : -1, _0x36d80b.strstart - _0x36d80b.block_start, _0xd77f81);
      _0x36d80b.block_start = _0x36d80b.strstart;
      _0x3f7a53(_0x36d80b.strm);
    };
    const _0x5eb43c = (_0x34c0d9, _0x73e2c9) => {
      _0x34c0d9.pending_buf[_0x34c0d9.pending++] = _0x73e2c9;
    };
    const _0x17c22b = (_0x168581, _0x18c1bc) => {
      _0x168581.pending_buf[_0x168581.pending++] = _0x18c1bc >>> 8 & 255;
      _0x168581.pending_buf[_0x168581.pending++] = _0x18c1bc & 255;
    };
    const _0x1280f1 = (_0x3348be, _0x1fd97d, _0x25175d, _0x3d0d5c) => {
      let _0x128d58 = _0x3348be.avail_in;
      if (_0x128d58 > _0x3d0d5c) {
        _0x128d58 = _0x3d0d5c;
      }
      if (_0x128d58 === 0) {
        return 0;
      }
      _0x3348be.avail_in -= _0x128d58;
      _0x1fd97d.set(_0x3348be.input.subarray(_0x3348be.next_in, _0x3348be.next_in + _0x128d58), _0x25175d);
      if (_0x3348be.state.wrap === 1) {
        _0x3348be.adler = _0x4b4483(_0x3348be.adler, _0x1fd97d, _0x128d58, _0x25175d);
      } else if (_0x3348be.state.wrap === 2) {
        _0x3348be.adler = _0x21fadc(_0x3348be.adler, _0x1fd97d, _0x128d58, _0x25175d);
      }
      _0x3348be.next_in += _0x128d58;
      _0x3348be.total_in += _0x128d58;
      return _0x128d58;
    };
    const _0x152a07 = (_0x1c0a87, _0x5db25e) => {
      let _0x5e5493 = _0x1c0a87.max_chain_length;
      let _0x7a3ba3 = _0x1c0a87.strstart;
      let _0x506bc4;
      let _0x31ac69;
      let _0x39ba37 = _0x1c0a87.prev_length;
      let _0x2810a1 = _0x1c0a87.nice_match;
      const _0x37291a = _0x1c0a87.strstart > _0x1c0a87.w_size - _0x18d0cd ? _0x1c0a87.strstart - (_0x1c0a87.w_size - _0x18d0cd) : 0;
      const _0x195c25 = _0x1c0a87.window;
      const _0x1f5f83 = _0x1c0a87.w_mask;
      const _0x2f5edc = _0x1c0a87.prev;
      const _0x522206 = _0x1c0a87.strstart + _0x2dd04c;
      let _0x58313b = _0x195c25[_0x7a3ba3 + _0x39ba37 - 1];
      let _0x5d480c = _0x195c25[_0x7a3ba3 + _0x39ba37];
      if (_0x1c0a87.prev_length >= _0x1c0a87.good_match) {
        _0x5e5493 >>= 2;
      }
      if (_0x2810a1 > _0x1c0a87.lookahead) {
        _0x2810a1 = _0x1c0a87.lookahead;
      }
      do {
        _0x506bc4 = _0x5db25e;
        if (_0x195c25[_0x506bc4 + _0x39ba37] !== _0x5d480c || _0x195c25[_0x506bc4 + _0x39ba37 - 1] !== _0x58313b || _0x195c25[_0x506bc4] !== _0x195c25[_0x7a3ba3] || _0x195c25[++_0x506bc4] !== _0x195c25[_0x7a3ba3 + 1]) {
          continue;
        }
        _0x7a3ba3 += 2;
        _0x506bc4++;
        do {} while (_0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x195c25[++_0x7a3ba3] === _0x195c25[++_0x506bc4] && _0x7a3ba3 < _0x522206);
        _0x31ac69 = _0x2dd04c - (_0x522206 - _0x7a3ba3);
        _0x7a3ba3 = _0x522206 - _0x2dd04c;
        if (_0x31ac69 > _0x39ba37) {
          _0x1c0a87.match_start = _0x5db25e;
          _0x39ba37 = _0x31ac69;
          if (_0x31ac69 >= _0x2810a1) {
            break;
          }
          _0x58313b = _0x195c25[_0x7a3ba3 + _0x39ba37 - 1];
          _0x5d480c = _0x195c25[_0x7a3ba3 + _0x39ba37];
        }
      } while ((_0x5db25e = _0x2f5edc[_0x5db25e & _0x1f5f83]) > _0x37291a && --_0x5e5493 !== 0);
      if (_0x39ba37 <= _0x1c0a87.lookahead) {
        return _0x39ba37;
      }
      return _0x1c0a87.lookahead;
    };
    const _0x2cc2aa = _0x4703a9 => {
      const _0x983711 = _0x4703a9.w_size;
      let _0x10f6e1;
      let _0x5b1f50;
      let _0x18f156;
      do {
        _0x5b1f50 = _0x4703a9.window_size - _0x4703a9.lookahead - _0x4703a9.strstart;
        if (_0x4703a9.strstart >= _0x983711 + (_0x983711 - _0x18d0cd)) {
          _0x4703a9.window.set(_0x4703a9.window.subarray(_0x983711, _0x983711 + _0x983711 - _0x5b1f50), 0);
          _0x4703a9.match_start -= _0x983711;
          _0x4703a9.strstart -= _0x983711;
          _0x4703a9.block_start -= _0x983711;
          if (_0x4703a9.insert > _0x4703a9.strstart) {
            _0x4703a9.insert = _0x4703a9.strstart;
          }
          _0x13845b(_0x4703a9);
          _0x5b1f50 += _0x983711;
        }
        if (_0x4703a9.strm.avail_in === 0) {
          break;
        }
        _0x10f6e1 = _0x1280f1(_0x4703a9.strm, _0x4703a9.window, _0x4703a9.strstart + _0x4703a9.lookahead, _0x5b1f50);
        _0x4703a9.lookahead += _0x10f6e1;
        if (_0x4703a9.lookahead + _0x4703a9.insert >= _0x5dbb51) {
          _0x18f156 = _0x4703a9.strstart - _0x4703a9.insert;
          _0x4703a9.ins_h = _0x4703a9.window[_0x18f156];
          _0x4703a9.ins_h = _0x30f162(_0x4703a9, _0x4703a9.ins_h, _0x4703a9.window[_0x18f156 + 1]);
          while (_0x4703a9.insert) {
            _0x4703a9.ins_h = _0x30f162(_0x4703a9, _0x4703a9.ins_h, _0x4703a9.window[_0x18f156 + _0x5dbb51 - 1]);
            _0x4703a9.prev[_0x18f156 & _0x4703a9.w_mask] = _0x4703a9.head[_0x4703a9.ins_h];
            _0x4703a9.head[_0x4703a9.ins_h] = _0x18f156;
            _0x18f156++;
            _0x4703a9.insert--;
            if (_0x4703a9.lookahead + _0x4703a9.insert < _0x5dbb51) {
              break;
            }
          }
        }
      } while (_0x4703a9.lookahead < _0x18d0cd && _0x4703a9.strm.avail_in !== 0);
    };
    const _0x28adaf = (_0x15fd71, _0x348f7c) => {
      let _0x150b45 = _0x15fd71.pending_buf_size - 5 > _0x15fd71.w_size ? _0x15fd71.w_size : _0x15fd71.pending_buf_size - 5;
      let _0x2954f9;
      let _0x2dc892;
      let _0x942829;
      let _0x238b4e = 0;
      let _0x5d9e8d = _0x15fd71.strm.avail_in;
      do {
        _0x2954f9 = 65535;
        _0x942829 = _0x15fd71.bi_valid + 42 >> 3;
        if (_0x15fd71.strm.avail_out < _0x942829) {
          break;
        }
        _0x942829 = _0x15fd71.strm.avail_out - _0x942829;
        _0x2dc892 = _0x15fd71.strstart - _0x15fd71.block_start;
        if (_0x2954f9 > _0x2dc892 + _0x15fd71.strm.avail_in) {
          _0x2954f9 = _0x2dc892 + _0x15fd71.strm.avail_in;
        }
        if (_0x2954f9 > _0x942829) {
          _0x2954f9 = _0x942829;
        }
        if (_0x2954f9 < _0x150b45 && (_0x2954f9 === 0 && _0x348f7c !== _0x5a2cce || _0x348f7c === _0x51f623 || _0x2954f9 !== _0x2dc892 + _0x15fd71.strm.avail_in)) {
          break;
        }
        _0x238b4e = _0x348f7c === _0x5a2cce && _0x2954f9 === _0x2dc892 + _0x15fd71.strm.avail_in ? 1 : 0;
        _0x30857e(_0x15fd71, 0, 0, _0x238b4e);
        _0x15fd71.pending_buf[_0x15fd71.pending - 4] = _0x2954f9;
        _0x15fd71.pending_buf[_0x15fd71.pending - 3] = _0x2954f9 >> 8;
        _0x15fd71.pending_buf[_0x15fd71.pending - 2] = ~_0x2954f9;
        _0x15fd71.pending_buf[_0x15fd71.pending - 1] = ~_0x2954f9 >> 8;
        _0x3f7a53(_0x15fd71.strm);
        if (_0x2dc892) {
          if (_0x2dc892 > _0x2954f9) {
            _0x2dc892 = _0x2954f9;
          }
          _0x15fd71.strm.output.set(_0x15fd71.window.subarray(_0x15fd71.block_start, _0x15fd71.block_start + _0x2dc892), _0x15fd71.strm.next_out);
          _0x15fd71.strm.next_out += _0x2dc892;
          _0x15fd71.strm.avail_out -= _0x2dc892;
          _0x15fd71.strm.total_out += _0x2dc892;
          _0x15fd71.block_start += _0x2dc892;
          _0x2954f9 -= _0x2dc892;
        }
        if (_0x2954f9) {
          _0x1280f1(_0x15fd71.strm, _0x15fd71.strm.output, _0x15fd71.strm.next_out, _0x2954f9);
          _0x15fd71.strm.next_out += _0x2954f9;
          _0x15fd71.strm.avail_out -= _0x2954f9;
          _0x15fd71.strm.total_out += _0x2954f9;
        }
      } while (_0x238b4e === 0);
      _0x5d9e8d -= _0x15fd71.strm.avail_in;
      if (_0x5d9e8d) {
        if (_0x5d9e8d >= _0x15fd71.w_size) {
          _0x15fd71.matches = 2;
          _0x15fd71.window.set(_0x15fd71.strm.input.subarray(_0x15fd71.strm.next_in - _0x15fd71.w_size, _0x15fd71.strm.next_in), 0);
          _0x15fd71.strstart = _0x15fd71.w_size;
          _0x15fd71.insert = _0x15fd71.strstart;
        } else {
          if (_0x15fd71.window_size - _0x15fd71.strstart <= _0x5d9e8d) {
            _0x15fd71.strstart -= _0x15fd71.w_size;
            _0x15fd71.window.set(_0x15fd71.window.subarray(_0x15fd71.w_size, _0x15fd71.w_size + _0x15fd71.strstart), 0);
            if (_0x15fd71.matches < 2) {
              _0x15fd71.matches++;
            }
            if (_0x15fd71.insert > _0x15fd71.strstart) {
              _0x15fd71.insert = _0x15fd71.strstart;
            }
          }
          _0x15fd71.window.set(_0x15fd71.strm.input.subarray(_0x15fd71.strm.next_in - _0x5d9e8d, _0x15fd71.strm.next_in), _0x15fd71.strstart);
          _0x15fd71.strstart += _0x5d9e8d;
          _0x15fd71.insert += _0x5d9e8d > _0x15fd71.w_size - _0x15fd71.insert ? _0x15fd71.w_size - _0x15fd71.insert : _0x5d9e8d;
        }
        _0x15fd71.block_start = _0x15fd71.strstart;
      }
      if (_0x15fd71.high_water < _0x15fd71.strstart) {
        _0x15fd71.high_water = _0x15fd71.strstart;
      }
      if (_0x238b4e) {
        return _0x5e04ee;
      }
      if (_0x348f7c !== _0x51f623 && _0x348f7c !== _0x5a2cce && _0x15fd71.strm.avail_in === 0 && _0x15fd71.strstart === _0x15fd71.block_start) {
        return _0x2e7982;
      }
      _0x942829 = _0x15fd71.window_size - _0x15fd71.strstart;
      if (_0x15fd71.strm.avail_in > _0x942829 && _0x15fd71.block_start >= _0x15fd71.w_size) {
        _0x15fd71.block_start -= _0x15fd71.w_size;
        _0x15fd71.strstart -= _0x15fd71.w_size;
        _0x15fd71.window.set(_0x15fd71.window.subarray(_0x15fd71.w_size, _0x15fd71.w_size + _0x15fd71.strstart), 0);
        if (_0x15fd71.matches < 2) {
          _0x15fd71.matches++;
        }
        _0x942829 += _0x15fd71.w_size;
        if (_0x15fd71.insert > _0x15fd71.strstart) {
          _0x15fd71.insert = _0x15fd71.strstart;
        }
      }
      if (_0x942829 > _0x15fd71.strm.avail_in) {
        _0x942829 = _0x15fd71.strm.avail_in;
      }
      if (_0x942829) {
        _0x1280f1(_0x15fd71.strm, _0x15fd71.window, _0x15fd71.strstart, _0x942829);
        _0x15fd71.strstart += _0x942829;
        _0x15fd71.insert += _0x942829 > _0x15fd71.w_size - _0x15fd71.insert ? _0x15fd71.w_size - _0x15fd71.insert : _0x942829;
      }
      if (_0x15fd71.high_water < _0x15fd71.strstart) {
        _0x15fd71.high_water = _0x15fd71.strstart;
      }
      _0x942829 = _0x15fd71.bi_valid + 42 >> 3;
      _0x942829 = _0x15fd71.pending_buf_size - _0x942829 > 65535 ? 65535 : _0x15fd71.pending_buf_size - _0x942829;
      _0x150b45 = _0x942829 > _0x15fd71.w_size ? _0x15fd71.w_size : _0x942829;
      _0x2dc892 = _0x15fd71.strstart - _0x15fd71.block_start;
      if (_0x2dc892 >= _0x150b45 || (_0x2dc892 || _0x348f7c === _0x5a2cce) && _0x348f7c !== _0x51f623 && _0x15fd71.strm.avail_in === 0 && _0x2dc892 <= _0x942829) {
        _0x2954f9 = _0x2dc892 > _0x942829 ? _0x942829 : _0x2dc892;
        _0x238b4e = _0x348f7c === _0x5a2cce && _0x15fd71.strm.avail_in === 0 && _0x2954f9 === _0x2dc892 ? 1 : 0;
        _0x30857e(_0x15fd71, _0x15fd71.block_start, _0x2954f9, _0x238b4e);
        _0x15fd71.block_start += _0x2954f9;
        _0x3f7a53(_0x15fd71.strm);
      }
      if (_0x238b4e) {
        return _0x4d28ad;
      } else {
        return _0x14b46e;
      }
    };
    const _0x3045b4 = (_0x35a9ab, _0x3b1ef8) => {
      let _0x36e9cc;
      let _0x5b00ee;
      for (;;) {
        if (_0x35a9ab.lookahead < _0x18d0cd) {
          _0x2cc2aa(_0x35a9ab);
          if (_0x35a9ab.lookahead < _0x18d0cd && _0x3b1ef8 === _0x51f623) {
            return _0x14b46e;
          }
          if (_0x35a9ab.lookahead === 0) {
            break;
          }
        }
        _0x36e9cc = 0;
        if (_0x35a9ab.lookahead >= _0x5dbb51) {
          _0x35a9ab.ins_h = _0x30f162(_0x35a9ab, _0x35a9ab.ins_h, _0x35a9ab.window[_0x35a9ab.strstart + _0x5dbb51 - 1]);
          _0x36e9cc = _0x35a9ab.prev[_0x35a9ab.strstart & _0x35a9ab.w_mask] = _0x35a9ab.head[_0x35a9ab.ins_h];
          _0x35a9ab.head[_0x35a9ab.ins_h] = _0x35a9ab.strstart;
        }
        if (_0x36e9cc !== 0 && _0x35a9ab.strstart - _0x36e9cc <= _0x35a9ab.w_size - _0x18d0cd) {
          _0x35a9ab.match_length = _0x152a07(_0x35a9ab, _0x36e9cc);
        }
        if (_0x35a9ab.match_length >= _0x5dbb51) {
          _0x5b00ee = _0x19db74(_0x35a9ab, _0x35a9ab.strstart - _0x35a9ab.match_start, _0x35a9ab.match_length - _0x5dbb51);
          _0x35a9ab.lookahead -= _0x35a9ab.match_length;
          if (_0x35a9ab.match_length <= _0x35a9ab.max_lazy_match && _0x35a9ab.lookahead >= _0x5dbb51) {
            _0x35a9ab.match_length--;
            do {
              _0x35a9ab.strstart++;
              _0x35a9ab.ins_h = _0x30f162(_0x35a9ab, _0x35a9ab.ins_h, _0x35a9ab.window[_0x35a9ab.strstart + _0x5dbb51 - 1]);
              _0x36e9cc = _0x35a9ab.prev[_0x35a9ab.strstart & _0x35a9ab.w_mask] = _0x35a9ab.head[_0x35a9ab.ins_h];
              _0x35a9ab.head[_0x35a9ab.ins_h] = _0x35a9ab.strstart;
            } while (--_0x35a9ab.match_length !== 0);
            _0x35a9ab.strstart++;
          } else {
            _0x35a9ab.strstart += _0x35a9ab.match_length;
            _0x35a9ab.match_length = 0;
            _0x35a9ab.ins_h = _0x35a9ab.window[_0x35a9ab.strstart];
            _0x35a9ab.ins_h = _0x30f162(_0x35a9ab, _0x35a9ab.ins_h, _0x35a9ab.window[_0x35a9ab.strstart + 1]);
          }
        } else {
          _0x5b00ee = _0x19db74(_0x35a9ab, 0, _0x35a9ab.window[_0x35a9ab.strstart]);
          _0x35a9ab.lookahead--;
          _0x35a9ab.strstart++;
        }
        if (_0x5b00ee) {
          _0x5b83a9(_0x35a9ab, false);
          if (_0x35a9ab.strm.avail_out === 0) {
            return _0x14b46e;
          }
        }
      }
      _0x35a9ab.insert = _0x35a9ab.strstart < _0x5dbb51 - 1 ? _0x35a9ab.strstart : _0x5dbb51 - 1;
      if (_0x3b1ef8 === _0x5a2cce) {
        _0x5b83a9(_0x35a9ab, true);
        if (_0x35a9ab.strm.avail_out === 0) {
          return _0x4d28ad;
        }
        return _0x5e04ee;
      }
      if (_0x35a9ab.sym_next) {
        _0x5b83a9(_0x35a9ab, false);
        if (_0x35a9ab.strm.avail_out === 0) {
          return _0x14b46e;
        }
      }
      return _0x2e7982;
    };
    const _0xa95975 = (_0x1ae63b, _0x33d2af) => {
      let _0x1ea4ce;
      let _0x29d674;
      let _0xe55713;
      for (;;) {
        if (_0x1ae63b.lookahead < _0x18d0cd) {
          _0x2cc2aa(_0x1ae63b);
          if (_0x1ae63b.lookahead < _0x18d0cd && _0x33d2af === _0x51f623) {
            return _0x14b46e;
          }
          if (_0x1ae63b.lookahead === 0) {
            break;
          }
        }
        _0x1ea4ce = 0;
        if (_0x1ae63b.lookahead >= _0x5dbb51) {
          _0x1ae63b.ins_h = _0x30f162(_0x1ae63b, _0x1ae63b.ins_h, _0x1ae63b.window[_0x1ae63b.strstart + _0x5dbb51 - 1]);
          _0x1ea4ce = _0x1ae63b.prev[_0x1ae63b.strstart & _0x1ae63b.w_mask] = _0x1ae63b.head[_0x1ae63b.ins_h];
          _0x1ae63b.head[_0x1ae63b.ins_h] = _0x1ae63b.strstart;
        }
        _0x1ae63b.prev_length = _0x1ae63b.match_length;
        _0x1ae63b.prev_match = _0x1ae63b.match_start;
        _0x1ae63b.match_length = _0x5dbb51 - 1;
        if (_0x1ea4ce !== 0 && _0x1ae63b.prev_length < _0x1ae63b.max_lazy_match && _0x1ae63b.strstart - _0x1ea4ce <= _0x1ae63b.w_size - _0x18d0cd) {
          _0x1ae63b.match_length = _0x152a07(_0x1ae63b, _0x1ea4ce);
          if (_0x1ae63b.match_length <= 5 && (_0x1ae63b.strategy === _0x1f6d51 || _0x1ae63b.match_length === _0x5dbb51 && _0x1ae63b.strstart - _0x1ae63b.match_start > 4096)) {
            _0x1ae63b.match_length = _0x5dbb51 - 1;
          }
        }
        if (_0x1ae63b.prev_length >= _0x5dbb51 && _0x1ae63b.match_length <= _0x1ae63b.prev_length) {
          _0xe55713 = _0x1ae63b.strstart + _0x1ae63b.lookahead - _0x5dbb51;
          _0x29d674 = _0x19db74(_0x1ae63b, _0x1ae63b.strstart - 1 - _0x1ae63b.prev_match, _0x1ae63b.prev_length - _0x5dbb51);
          _0x1ae63b.lookahead -= _0x1ae63b.prev_length - 1;
          _0x1ae63b.prev_length -= 2;
          do {
            if (++_0x1ae63b.strstart <= _0xe55713) {
              _0x1ae63b.ins_h = _0x30f162(_0x1ae63b, _0x1ae63b.ins_h, _0x1ae63b.window[_0x1ae63b.strstart + _0x5dbb51 - 1]);
              _0x1ea4ce = _0x1ae63b.prev[_0x1ae63b.strstart & _0x1ae63b.w_mask] = _0x1ae63b.head[_0x1ae63b.ins_h];
              _0x1ae63b.head[_0x1ae63b.ins_h] = _0x1ae63b.strstart;
            }
          } while (--_0x1ae63b.prev_length !== 0);
          _0x1ae63b.match_available = 0;
          _0x1ae63b.match_length = _0x5dbb51 - 1;
          _0x1ae63b.strstart++;
          if (_0x29d674) {
            _0x5b83a9(_0x1ae63b, false);
            if (_0x1ae63b.strm.avail_out === 0) {
              return _0x14b46e;
            }
          }
        } else if (_0x1ae63b.match_available) {
          _0x29d674 = _0x19db74(_0x1ae63b, 0, _0x1ae63b.window[_0x1ae63b.strstart - 1]);
          if (_0x29d674) {
            _0x5b83a9(_0x1ae63b, false);
          }
          _0x1ae63b.strstart++;
          _0x1ae63b.lookahead--;
          if (_0x1ae63b.strm.avail_out === 0) {
            return _0x14b46e;
          }
        } else {
          _0x1ae63b.match_available = 1;
          _0x1ae63b.strstart++;
          _0x1ae63b.lookahead--;
        }
      }
      if (_0x1ae63b.match_available) {
        _0x29d674 = _0x19db74(_0x1ae63b, 0, _0x1ae63b.window[_0x1ae63b.strstart - 1]);
        _0x1ae63b.match_available = 0;
      }
      _0x1ae63b.insert = _0x1ae63b.strstart < _0x5dbb51 - 1 ? _0x1ae63b.strstart : _0x5dbb51 - 1;
      if (_0x33d2af === _0x5a2cce) {
        _0x5b83a9(_0x1ae63b, true);
        if (_0x1ae63b.strm.avail_out === 0) {
          return _0x4d28ad;
        }
        return _0x5e04ee;
      }
      if (_0x1ae63b.sym_next) {
        _0x5b83a9(_0x1ae63b, false);
        if (_0x1ae63b.strm.avail_out === 0) {
          return _0x14b46e;
        }
      }
      return _0x2e7982;
    };
    const _0x3c3e6b = (_0x1f8912, _0x231cb0) => {
      let _0x546d22;
      let _0x52a39b;
      let _0x4c7f4e;
      let _0x4f3ef0;
      const _0x5288bf = _0x1f8912.window;
      for (;;) {
        if (_0x1f8912.lookahead <= _0x2dd04c) {
          _0x2cc2aa(_0x1f8912);
          if (_0x1f8912.lookahead <= _0x2dd04c && _0x231cb0 === _0x51f623) {
            return _0x14b46e;
          }
          if (_0x1f8912.lookahead === 0) {
            break;
          }
        }
        _0x1f8912.match_length = 0;
        if (_0x1f8912.lookahead >= _0x5dbb51 && _0x1f8912.strstart > 0) {
          _0x4c7f4e = _0x1f8912.strstart - 1;
          _0x52a39b = _0x5288bf[_0x4c7f4e];
          if (_0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e]) {
            _0x4f3ef0 = _0x1f8912.strstart + _0x2dd04c;
            do {} while (_0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x52a39b === _0x5288bf[++_0x4c7f4e] && _0x4c7f4e < _0x4f3ef0);
            _0x1f8912.match_length = _0x2dd04c - (_0x4f3ef0 - _0x4c7f4e);
            if (_0x1f8912.match_length > _0x1f8912.lookahead) {
              _0x1f8912.match_length = _0x1f8912.lookahead;
            }
          }
        }
        if (_0x1f8912.match_length >= _0x5dbb51) {
          _0x546d22 = _0x19db74(_0x1f8912, 1, _0x1f8912.match_length - _0x5dbb51);
          _0x1f8912.lookahead -= _0x1f8912.match_length;
          _0x1f8912.strstart += _0x1f8912.match_length;
          _0x1f8912.match_length = 0;
        } else {
          _0x546d22 = _0x19db74(_0x1f8912, 0, _0x1f8912.window[_0x1f8912.strstart]);
          _0x1f8912.lookahead--;
          _0x1f8912.strstart++;
        }
        if (_0x546d22) {
          _0x5b83a9(_0x1f8912, false);
          if (_0x1f8912.strm.avail_out === 0) {
            return _0x14b46e;
          }
        }
      }
      _0x1f8912.insert = 0;
      if (_0x231cb0 === _0x5a2cce) {
        _0x5b83a9(_0x1f8912, true);
        if (_0x1f8912.strm.avail_out === 0) {
          return _0x4d28ad;
        }
        return _0x5e04ee;
      }
      if (_0x1f8912.sym_next) {
        _0x5b83a9(_0x1f8912, false);
        if (_0x1f8912.strm.avail_out === 0) {
          return _0x14b46e;
        }
      }
      return _0x2e7982;
    };
    const _0x581110 = (_0x139b78, _0x548a94) => {
      let _0x675130;
      for (;;) {
        if (_0x139b78.lookahead === 0) {
          _0x2cc2aa(_0x139b78);
          if (_0x139b78.lookahead === 0) {
            if (_0x548a94 === _0x51f623) {
              return _0x14b46e;
            }
            break;
          }
        }
        _0x139b78.match_length = 0;
        _0x675130 = _0x19db74(_0x139b78, 0, _0x139b78.window[_0x139b78.strstart]);
        _0x139b78.lookahead--;
        _0x139b78.strstart++;
        if (_0x675130) {
          _0x5b83a9(_0x139b78, false);
          if (_0x139b78.strm.avail_out === 0) {
            return _0x14b46e;
          }
        }
      }
      _0x139b78.insert = 0;
      if (_0x548a94 === _0x5a2cce) {
        _0x5b83a9(_0x139b78, true);
        if (_0x139b78.strm.avail_out === 0) {
          return _0x4d28ad;
        }
        return _0x5e04ee;
      }
      if (_0x139b78.sym_next) {
        _0x5b83a9(_0x139b78, false);
        if (_0x139b78.strm.avail_out === 0) {
          return _0x14b46e;
        }
      }
      return _0x2e7982;
    };
    function _0x4be73c(_0x217a9c, _0x280fcb, _0xa9e9be, _0xb9e247, _0x34eb31) {
      this.good_length = _0x217a9c;
      this.max_lazy = _0x280fcb;
      this.nice_length = _0xa9e9be;
      this.max_chain = _0xb9e247;
      this.func = _0x34eb31;
    }
    const _0x33d509 = [new _0x4be73c(0, 0, 0, 0, _0x28adaf), new _0x4be73c(4, 4, 8, 4, _0x3045b4), new _0x4be73c(4, 5, 16, 8, _0x3045b4), new _0x4be73c(4, 6, 32, 32, _0x3045b4), new _0x4be73c(4, 4, 16, 16, _0xa95975), new _0x4be73c(8, 16, 32, 32, _0xa95975), new _0x4be73c(8, 16, 128, 128, _0xa95975), new _0x4be73c(8, 32, 128, 256, _0xa95975), new _0x4be73c(32, 128, 258, 1024, _0xa95975), new _0x4be73c(32, 258, 258, 4096, _0xa95975)];
    const _0x4678e2 = _0x3c2649 => {
      _0x3c2649.window_size = _0x3c2649.w_size * 2;
      _0x40b7b5(_0x3c2649.head);
      _0x3c2649.max_lazy_match = _0x33d509[_0x3c2649.level].max_lazy;
      _0x3c2649.good_match = _0x33d509[_0x3c2649.level].good_length;
      _0x3c2649.nice_match = _0x33d509[_0x3c2649.level].nice_length;
      _0x3c2649.max_chain_length = _0x33d509[_0x3c2649.level].max_chain;
      _0x3c2649.strstart = 0;
      _0x3c2649.block_start = 0;
      _0x3c2649.lookahead = 0;
      _0x3c2649.insert = 0;
      _0x3c2649.match_length = _0x3c2649.prev_length = _0x5dbb51 - 1;
      _0x3c2649.match_available = 0;
      _0x3c2649.ins_h = 0;
    };
    function _0x7d6ccb() {
      this.strm = null;
      this.status = 0;
      this.pending_buf = null;
      this.pending_buf_size = 0;
      this.pending_out = 0;
      this.pending = 0;
      this.wrap = 0;
      this.gzhead = null;
      this.gzindex = 0;
      this.method = _0x4741e8;
      this.last_flush = -1;
      this.w_size = 0;
      this.w_bits = 0;
      this.w_mask = 0;
      this.window = null;
      this.window_size = 0;
      this.prev = null;
      this.head = null;
      this.ins_h = 0;
      this.hash_size = 0;
      this.hash_bits = 0;
      this.hash_mask = 0;
      this.hash_shift = 0;
      this.block_start = 0;
      this.match_length = 0;
      this.prev_match = 0;
      this.match_available = 0;
      this.strstart = 0;
      this.match_start = 0;
      this.lookahead = 0;
      this.prev_length = 0;
      this.max_chain_length = 0;
      this.max_lazy_match = 0;
      this.level = 0;
      this.strategy = 0;
      this.good_match = 0;
      this.nice_match = 0;
      this.dyn_ltree = new Uint16Array(_0x45e50f * 2);
      this.dyn_dtree = new Uint16Array((_0x4d5ae0 * 2 + 1) * 2);
      this.bl_tree = new Uint16Array((_0xb3aadd * 2 + 1) * 2);
      _0x40b7b5(this.dyn_ltree);
      _0x40b7b5(this.dyn_dtree);
      _0x40b7b5(this.bl_tree);
      this.l_desc = null;
      this.d_desc = null;
      this.bl_desc = null;
      this.bl_count = new Uint16Array(_0x3e9a12 + 1);
      this.heap = new Uint16Array(_0x4a7e75 * 2 + 1);
      _0x40b7b5(this.heap);
      this.heap_len = 0;
      this.heap_max = 0;
      this.depth = new Uint16Array(_0x4a7e75 * 2 + 1);
      _0x40b7b5(this.depth);
      this.sym_buf = 0;
      this.lit_bufsize = 0;
      this.sym_next = 0;
      this.sym_end = 0;
      this.opt_len = 0;
      this.static_len = 0;
      this.matches = 0;
      this.insert = 0;
      this.bi_buf = 0;
      this.bi_valid = 0;
    }
    const _0x233799 = _0x46f062 => {
      if (!_0x46f062) {
        return 1;
      }
      const _0x47ab38 = _0x46f062.state;
      if (!_0x47ab38 || _0x47ab38.strm !== _0x46f062 || _0x47ab38.status !== _0x5cda3b && _0x47ab38.status !== _0x53cd1f && _0x47ab38.status !== _0x23b81c && _0x47ab38.status !== _0x12fcf4 && _0x47ab38.status !== _0x2fa9cb && _0x47ab38.status !== _0xaa731b && _0x47ab38.status !== _0x5aa509 && _0x47ab38.status !== _0x1831bf) {
        return 1;
      }
      return 0;
    };
    const _0xb00e5f = _0x441d1a => {
      if (_0x233799(_0x441d1a)) {
        return _0x21c914(_0x441d1a, _0x34b84a);
      }
      _0x441d1a.total_in = _0x441d1a.total_out = 0;
      _0x441d1a.data_type = _0x5c8cbc;
      const _0x4d64fc = _0x441d1a.state;
      _0x4d64fc.pending = 0;
      _0x4d64fc.pending_out = 0;
      if (_0x4d64fc.wrap < 0) {
        _0x4d64fc.wrap = -_0x4d64fc.wrap;
      }
      _0x4d64fc.status = _0x4d64fc.wrap === 2 ? _0x53cd1f : _0x4d64fc.wrap ? _0x5cda3b : _0x5aa509;
      _0x441d1a.adler = _0x4d64fc.wrap === 2 ? 0 : 1;
      _0x4d64fc.last_flush = -2;
      _0x420dd5(_0x4d64fc);
      return _0x33c5a0;
    };
    const _0x471140 = _0x1d6e3e => {
      const _0x803a6a = _0xb00e5f(_0x1d6e3e);
      if (_0x803a6a === _0x33c5a0) {
        _0x4678e2(_0x1d6e3e.state);
      }
      return _0x803a6a;
    };
    const _0x3035b7 = (_0x7c5ced, _0x1da768) => {
      if (_0x233799(_0x7c5ced) || _0x7c5ced.state.wrap !== 2) {
        return _0x34b84a;
      }
      _0x7c5ced.state.gzhead = _0x1da768;
      return _0x33c5a0;
    };
    const _0x584a59 = (_0x43beec, _0x652c1, _0x4a3324, _0x26df9a, _0xec81b4, _0x6d90cb) => {
      if (!_0x43beec) {
        return _0x34b84a;
      }
      let _0x259c27 = 1;
      if (_0x652c1 === _0x390d79) {
        _0x652c1 = 6;
      }
      if (_0x26df9a < 0) {
        _0x259c27 = 0;
        _0x26df9a = -_0x26df9a;
      } else if (_0x26df9a > 15) {
        _0x259c27 = 2;
        _0x26df9a -= 16;
      }
      if (_0xec81b4 < 1 || _0xec81b4 > _0x50cc3b || _0x4a3324 !== _0x4741e8 || _0x26df9a < 8 || _0x26df9a > 15 || _0x652c1 < 0 || _0x652c1 > 9 || _0x6d90cb < 0 || _0x6d90cb > _0x2a47e6 || _0x26df9a === 8 && _0x259c27 !== 1) {
        return _0x21c914(_0x43beec, _0x34b84a);
      }
      if (_0x26df9a === 8) {
        _0x26df9a = 9;
      }
      const _0x373008 = new _0x7d6ccb();
      _0x43beec.state = _0x373008;
      _0x373008.strm = _0x43beec;
      _0x373008.status = _0x5cda3b;
      _0x373008.wrap = _0x259c27;
      _0x373008.gzhead = null;
      _0x373008.w_bits = _0x26df9a;
      _0x373008.w_size = 1 << _0x373008.w_bits;
      _0x373008.w_mask = _0x373008.w_size - 1;
      _0x373008.hash_bits = _0xec81b4 + 7;
      _0x373008.hash_size = 1 << _0x373008.hash_bits;
      _0x373008.hash_mask = _0x373008.hash_size - 1;
      _0x373008.hash_shift = ~~((_0x373008.hash_bits + _0x5dbb51 - 1) / _0x5dbb51);
      _0x373008.window = new Uint8Array(_0x373008.w_size * 2);
      _0x373008.head = new Uint16Array(_0x373008.hash_size);
      _0x373008.prev = new Uint16Array(_0x373008.w_size);
      _0x373008.lit_bufsize = 1 << _0xec81b4 + 6;
      _0x373008.pending_buf_size = _0x373008.lit_bufsize * 4;
      _0x373008.pending_buf = new Uint8Array(_0x373008.pending_buf_size);
      _0x373008.sym_buf = _0x373008.lit_bufsize;
      _0x373008.sym_end = (_0x373008.lit_bufsize - 1) * 3;
      _0x373008.level = _0x652c1;
      _0x373008.strategy = _0x6d90cb;
      _0x373008.method = _0x4a3324;
      return _0x471140(_0x43beec);
    };
    const _0x53b477 = (_0x27119f, _0x29b585) => {
      return _0x584a59(_0x27119f, _0x29b585, _0x4741e8, _0x513045, _0x5361a8, _0x34506f);
    };
    const _0x3d42cd = (_0x112646, _0x583fcd) => {
      if (_0x233799(_0x112646) || _0x583fcd > _0x2a0d9f || _0x583fcd < 0) {
        if (_0x112646) {
          return _0x21c914(_0x112646, _0x34b84a);
        } else {
          return _0x34b84a;
        }
      }
      const _0x447601 = _0x112646.state;
      if (!_0x112646.output || _0x112646.avail_in !== 0 && !_0x112646.input || _0x447601.status === _0x1831bf && _0x583fcd !== _0x5a2cce) {
        return _0x21c914(_0x112646, _0x112646.avail_out === 0 ? _0x49c864 : _0x34b84a);
      }
      const _0x3fe483 = _0x447601.last_flush;
      _0x447601.last_flush = _0x583fcd;
      if (_0x447601.pending !== 0) {
        _0x3f7a53(_0x112646);
        if (_0x112646.avail_out === 0) {
          _0x447601.last_flush = -1;
          return _0x33c5a0;
        }
      } else if (_0x112646.avail_in === 0 && _0x1229e0(_0x583fcd) <= _0x1229e0(_0x3fe483) && _0x583fcd !== _0x5a2cce) {
        return _0x21c914(_0x112646, _0x49c864);
      }
      if (_0x447601.status === _0x1831bf && _0x112646.avail_in !== 0) {
        return _0x21c914(_0x112646, _0x49c864);
      }
      if (_0x447601.status === _0x5cda3b && _0x447601.wrap === 0) {
        _0x447601.status = _0x5aa509;
      }
      if (_0x447601.status === _0x5cda3b) {
        let _0x422c4a = _0x4741e8 + (_0x447601.w_bits - 8 << 4) << 8;
        let _0x2bedba = -1;
        if (_0x447601.strategy >= _0x4e2144 || _0x447601.level < 2) {
          _0x2bedba = 0;
        } else if (_0x447601.level < 6) {
          _0x2bedba = 1;
        } else if (_0x447601.level === 6) {
          _0x2bedba = 2;
        } else {
          _0x2bedba = 3;
        }
        _0x422c4a |= _0x2bedba << 6;
        if (_0x447601.strstart !== 0) {
          _0x422c4a |= _0xfc706a;
        }
        _0x422c4a += 31 - _0x422c4a % 31;
        _0x17c22b(_0x447601, _0x422c4a);
        if (_0x447601.strstart !== 0) {
          _0x17c22b(_0x447601, _0x112646.adler >>> 16);
          _0x17c22b(_0x447601, _0x112646.adler & 65535);
        }
        _0x112646.adler = 1;
        _0x447601.status = _0x5aa509;
        _0x3f7a53(_0x112646);
        if (_0x447601.pending !== 0) {
          _0x447601.last_flush = -1;
          return _0x33c5a0;
        }
      }
      if (_0x447601.status === _0x53cd1f) {
        _0x112646.adler = 0;
        _0x5eb43c(_0x447601, 31);
        _0x5eb43c(_0x447601, 139);
        _0x5eb43c(_0x447601, 8);
        if (!_0x447601.gzhead) {
          _0x5eb43c(_0x447601, 0);
          _0x5eb43c(_0x447601, 0);
          _0x5eb43c(_0x447601, 0);
          _0x5eb43c(_0x447601, 0);
          _0x5eb43c(_0x447601, 0);
          _0x5eb43c(_0x447601, _0x447601.level === 9 ? 2 : _0x447601.strategy >= _0x4e2144 || _0x447601.level < 2 ? 4 : 0);
          _0x5eb43c(_0x447601, _0x1e9d5a);
          _0x447601.status = _0x5aa509;
          _0x3f7a53(_0x112646);
          if (_0x447601.pending !== 0) {
            _0x447601.last_flush = -1;
            return _0x33c5a0;
          }
        } else {
          _0x5eb43c(_0x447601, (_0x447601.gzhead.text ? 1 : 0) + (_0x447601.gzhead.hcrc ? 2 : 0) + (!_0x447601.gzhead.extra ? 0 : 4) + (!_0x447601.gzhead.name ? 0 : 8) + (!_0x447601.gzhead.comment ? 0 : 16));
          _0x5eb43c(_0x447601, _0x447601.gzhead.time & 255);
          _0x5eb43c(_0x447601, _0x447601.gzhead.time >> 8 & 255);
          _0x5eb43c(_0x447601, _0x447601.gzhead.time >> 16 & 255);
          _0x5eb43c(_0x447601, _0x447601.gzhead.time >> 24 & 255);
          _0x5eb43c(_0x447601, _0x447601.level === 9 ? 2 : _0x447601.strategy >= _0x4e2144 || _0x447601.level < 2 ? 4 : 0);
          _0x5eb43c(_0x447601, _0x447601.gzhead.os & 255);
          if (_0x447601.gzhead.extra && _0x447601.gzhead.extra.length) {
            _0x5eb43c(_0x447601, _0x447601.gzhead.extra.length & 255);
            _0x5eb43c(_0x447601, _0x447601.gzhead.extra.length >> 8 & 255);
          }
          if (_0x447601.gzhead.hcrc) {
            _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending, 0);
          }
          _0x447601.gzindex = 0;
          _0x447601.status = _0x23b81c;
        }
      }
      if (_0x447601.status === _0x23b81c) {
        if (_0x447601.gzhead.extra) {
          let _0xa680c8 = _0x447601.pending;
          let _0x338b49 = (_0x447601.gzhead.extra.length & 65535) - _0x447601.gzindex;
          while (_0x447601.pending + _0x338b49 > _0x447601.pending_buf_size) {
            let _0x3e92de = _0x447601.pending_buf_size - _0x447601.pending;
            _0x447601.pending_buf.set(_0x447601.gzhead.extra.subarray(_0x447601.gzindex, _0x447601.gzindex + _0x3e92de), _0x447601.pending);
            _0x447601.pending = _0x447601.pending_buf_size;
            if (_0x447601.gzhead.hcrc && _0x447601.pending > _0xa680c8) {
              _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending - _0xa680c8, _0xa680c8);
            }
            _0x447601.gzindex += _0x3e92de;
            _0x3f7a53(_0x112646);
            if (_0x447601.pending !== 0) {
              _0x447601.last_flush = -1;
              return _0x33c5a0;
            }
            _0xa680c8 = 0;
            _0x338b49 -= _0x3e92de;
          }
          let _0x26dff7 = new Uint8Array(_0x447601.gzhead.extra);
          _0x447601.pending_buf.set(_0x26dff7.subarray(_0x447601.gzindex, _0x447601.gzindex + _0x338b49), _0x447601.pending);
          _0x447601.pending += _0x338b49;
          if (_0x447601.gzhead.hcrc && _0x447601.pending > _0xa680c8) {
            _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending - _0xa680c8, _0xa680c8);
          }
          _0x447601.gzindex = 0;
        }
        _0x447601.status = _0x12fcf4;
      }
      if (_0x447601.status === _0x12fcf4) {
        if (_0x447601.gzhead.name) {
          let _0x4a0e38 = _0x447601.pending;
          let _0x776958;
          do {
            if (_0x447601.pending === _0x447601.pending_buf_size) {
              if (_0x447601.gzhead.hcrc && _0x447601.pending > _0x4a0e38) {
                _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending - _0x4a0e38, _0x4a0e38);
              }
              _0x3f7a53(_0x112646);
              if (_0x447601.pending !== 0) {
                _0x447601.last_flush = -1;
                return _0x33c5a0;
              }
              _0x4a0e38 = 0;
            }
            if (_0x447601.gzindex < _0x447601.gzhead.name.length) {
              _0x776958 = _0x447601.gzhead.name.charCodeAt(_0x447601.gzindex++) & 255;
            } else {
              _0x776958 = 0;
            }
            _0x5eb43c(_0x447601, _0x776958);
          } while (_0x776958 !== 0);
          if (_0x447601.gzhead.hcrc && _0x447601.pending > _0x4a0e38) {
            _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending - _0x4a0e38, _0x4a0e38);
          }
          _0x447601.gzindex = 0;
        }
        _0x447601.status = _0x2fa9cb;
      }
      if (_0x447601.status === _0x2fa9cb) {
        if (_0x447601.gzhead.comment) {
          let _0x1c308c = _0x447601.pending;
          let _0x5eead2;
          do {
            if (_0x447601.pending === _0x447601.pending_buf_size) {
              if (_0x447601.gzhead.hcrc && _0x447601.pending > _0x1c308c) {
                _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending - _0x1c308c, _0x1c308c);
              }
              _0x3f7a53(_0x112646);
              if (_0x447601.pending !== 0) {
                _0x447601.last_flush = -1;
                return _0x33c5a0;
              }
              _0x1c308c = 0;
            }
            if (_0x447601.gzindex < _0x447601.gzhead.comment.length) {
              _0x5eead2 = _0x447601.gzhead.comment.charCodeAt(_0x447601.gzindex++) & 255;
            } else {
              _0x5eead2 = 0;
            }
            _0x5eb43c(_0x447601, _0x5eead2);
          } while (_0x5eead2 !== 0);
          if (_0x447601.gzhead.hcrc && _0x447601.pending > _0x1c308c) {
            _0x112646.adler = _0x21fadc(_0x112646.adler, _0x447601.pending_buf, _0x447601.pending - _0x1c308c, _0x1c308c);
          }
        }
        _0x447601.status = _0xaa731b;
      }
      if (_0x447601.status === _0xaa731b) {
        if (_0x447601.gzhead.hcrc) {
          if (_0x447601.pending + 2 > _0x447601.pending_buf_size) {
            _0x3f7a53(_0x112646);
            if (_0x447601.pending !== 0) {
              _0x447601.last_flush = -1;
              return _0x33c5a0;
            }
          }
          _0x5eb43c(_0x447601, _0x112646.adler & 255);
          _0x5eb43c(_0x447601, _0x112646.adler >> 8 & 255);
          _0x112646.adler = 0;
        }
        _0x447601.status = _0x5aa509;
        _0x3f7a53(_0x112646);
        if (_0x447601.pending !== 0) {
          _0x447601.last_flush = -1;
          return _0x33c5a0;
        }
      }
      if (_0x112646.avail_in !== 0 || _0x447601.lookahead !== 0 || _0x583fcd !== _0x51f623 && _0x447601.status !== _0x1831bf) {
        let _0x29b01a = _0x447601.level === 0 ? _0x28adaf(_0x447601, _0x583fcd) : _0x447601.strategy === _0x4e2144 ? _0x581110(_0x447601, _0x583fcd) : _0x447601.strategy === _0x2df816 ? _0x3c3e6b(_0x447601, _0x583fcd) : _0x33d509[_0x447601.level].func(_0x447601, _0x583fcd);
        if (_0x29b01a === _0x4d28ad || _0x29b01a === _0x5e04ee) {
          _0x447601.status = _0x1831bf;
        }
        if (_0x29b01a === _0x14b46e || _0x29b01a === _0x4d28ad) {
          if (_0x112646.avail_out === 0) {
            _0x447601.last_flush = -1;
          }
          return _0x33c5a0;
        }
        if (_0x29b01a === _0x2e7982) {
          if (_0x583fcd === _0x55194b) {
            _0x51324a(_0x447601);
          } else if (_0x583fcd !== _0x2a0d9f) {
            _0x30857e(_0x447601, 0, 0, false);
            if (_0x583fcd === _0xfc9689) {
              _0x40b7b5(_0x447601.head);
              if (_0x447601.lookahead === 0) {
                _0x447601.strstart = 0;
                _0x447601.block_start = 0;
                _0x447601.insert = 0;
              }
            }
          }
          _0x3f7a53(_0x112646);
          if (_0x112646.avail_out === 0) {
            _0x447601.last_flush = -1;
            return _0x33c5a0;
          }
        }
      }
      if (_0x583fcd !== _0x5a2cce) {
        return _0x33c5a0;
      }
      if (_0x447601.wrap <= 0) {
        return _0x4267ac;
      }
      if (_0x447601.wrap === 2) {
        _0x5eb43c(_0x447601, _0x112646.adler & 255);
        _0x5eb43c(_0x447601, _0x112646.adler >> 8 & 255);
        _0x5eb43c(_0x447601, _0x112646.adler >> 16 & 255);
        _0x5eb43c(_0x447601, _0x112646.adler >> 24 & 255);
        _0x5eb43c(_0x447601, _0x112646.total_in & 255);
        _0x5eb43c(_0x447601, _0x112646.total_in >> 8 & 255);
        _0x5eb43c(_0x447601, _0x112646.total_in >> 16 & 255);
        _0x5eb43c(_0x447601, _0x112646.total_in >> 24 & 255);
      } else {
        _0x17c22b(_0x447601, _0x112646.adler >>> 16);
        _0x17c22b(_0x447601, _0x112646.adler & 65535);
      }
      _0x3f7a53(_0x112646);
      if (_0x447601.wrap > 0) {
        _0x447601.wrap = -_0x447601.wrap;
      }
      if (_0x447601.pending !== 0) {
        return _0x33c5a0;
      } else {
        return _0x4267ac;
      }
    };
    const _0x40732e = _0x39be06 => {
      if (_0x233799(_0x39be06)) {
        return _0x34b84a;
      }
      const _0x20fcd2 = _0x39be06.state.status;
      _0x39be06.state = null;
      if (_0x20fcd2 === _0x5aa509) {
        return _0x21c914(_0x39be06, _0x3d1037);
      } else {
        return _0x33c5a0;
      }
    };
    const _0x29e39a = (_0x4566e0, _0x7848) => {
      let _0x609a2f = _0x7848.length;
      if (_0x233799(_0x4566e0)) {
        return _0x34b84a;
      }
      const _0x2b7508 = _0x4566e0.state;
      const _0x1a368b = _0x2b7508.wrap;
      if (_0x1a368b === 2 || _0x1a368b === 1 && _0x2b7508.status !== _0x5cda3b || _0x2b7508.lookahead) {
        return _0x34b84a;
      }
      if (_0x1a368b === 1) {
        _0x4566e0.adler = _0x4b4483(_0x4566e0.adler, _0x7848, _0x609a2f, 0);
      }
      _0x2b7508.wrap = 0;
      if (_0x609a2f >= _0x2b7508.w_size) {
        if (_0x1a368b === 0) {
          _0x40b7b5(_0x2b7508.head);
          _0x2b7508.strstart = 0;
          _0x2b7508.block_start = 0;
          _0x2b7508.insert = 0;
        }
        let _0x59bbc1 = new Uint8Array(_0x2b7508.w_size);
        _0x59bbc1.set(_0x7848.subarray(_0x609a2f - _0x2b7508.w_size, _0x609a2f), 0);
        _0x7848 = _0x59bbc1;
        _0x609a2f = _0x2b7508.w_size;
      }
      const _0x340ef9 = _0x4566e0.avail_in;
      const _0x5ee74f = _0x4566e0.next_in;
      const _0x2bf041 = _0x4566e0.input;
      _0x4566e0.avail_in = _0x609a2f;
      _0x4566e0.next_in = 0;
      _0x4566e0.input = _0x7848;
      _0x2cc2aa(_0x2b7508);
      while (_0x2b7508.lookahead >= _0x5dbb51) {
        let _0x4ef632 = _0x2b7508.strstart;
        let _0x38c686 = _0x2b7508.lookahead - (_0x5dbb51 - 1);
        do {
          _0x2b7508.ins_h = _0x30f162(_0x2b7508, _0x2b7508.ins_h, _0x2b7508.window[_0x4ef632 + _0x5dbb51 - 1]);
          _0x2b7508.prev[_0x4ef632 & _0x2b7508.w_mask] = _0x2b7508.head[_0x2b7508.ins_h];
          _0x2b7508.head[_0x2b7508.ins_h] = _0x4ef632;
          _0x4ef632++;
        } while (--_0x38c686);
        _0x2b7508.strstart = _0x4ef632;
        _0x2b7508.lookahead = _0x5dbb51 - 1;
        _0x2cc2aa(_0x2b7508);
      }
      _0x2b7508.strstart += _0x2b7508.lookahead;
      _0x2b7508.block_start = _0x2b7508.strstart;
      _0x2b7508.insert = _0x2b7508.lookahead;
      _0x2b7508.lookahead = 0;
      _0x2b7508.match_length = _0x2b7508.prev_length = _0x5dbb51 - 1;
      _0x2b7508.match_available = 0;
      _0x4566e0.next_in = _0x5ee74f;
      _0x4566e0.input = _0x2bf041;
      _0x4566e0.avail_in = _0x340ef9;
      _0x2b7508.wrap = _0x1a368b;
      return _0x33c5a0;
    };
    var _0x12c94c = _0x53b477;
    var _0x8adc49 = _0x584a59;
    var _0x28a0dd = _0x471140;
    var _0x1a3915 = _0xb00e5f;
    var _0x1df80d = _0x3035b7;
    var _0x1b6a6e = _0x3d42cd;
    var _0x456e6d = _0x40732e;
    var _0x53edae = _0x29e39a;
    var _0x543a02 = "pako deflate (from Nodeca project)";
    var _0x9d2427 = {
      deflateInit: _0x12c94c,
      deflateInit2: _0x8adc49,
      deflateReset: _0x28a0dd,
      deflateResetKeep: _0x1a3915,
      deflateSetHeader: _0x1df80d,
      deflate: _0x1b6a6e,
      deflateEnd: _0x456e6d,
      deflateSetDictionary: _0x53edae,
      deflateInfo: _0x543a02
    };
    var _0x39989d = _0x9d2427;
    const _0x293581 = (_0x5645e6, _0x90a807) => {
      return Object.prototype.hasOwnProperty.call(_0x5645e6, _0x90a807);
    };
    function _0x541c72(_0x3d9522) {
      const _0x586ad2 = Array.prototype.slice.call(arguments, 1);
      while (_0x586ad2.length) {
        const _0x16b65c = _0x586ad2.shift();
        if (!_0x16b65c) {
          continue;
        }
        if (typeof _0x16b65c !== "object") {
          throw new TypeError(_0x16b65c + "must be non-object");
        }
        for (const _0xd0f0c8 in _0x16b65c) {
          if (_0x293581(_0x16b65c, _0xd0f0c8)) {
            _0x3d9522[_0xd0f0c8] = _0x16b65c[_0xd0f0c8];
          }
        }
      }
      return _0x3d9522;
    }
    var _0x52aedb = _0x31c855 => {
      let _0x2c208d = 0;
      for (let _0x4aad32 = 0, _0x19e8be = _0x31c855.length; _0x4aad32 < _0x19e8be; _0x4aad32++) {
        _0x2c208d += _0x31c855[_0x4aad32].length;
      }
      const _0xb6cc4e = new Uint8Array(_0x2c208d);
      for (let _0x21791a = 0, _0x2e5f44 = 0, _0x24f07f = _0x31c855.length; _0x21791a < _0x24f07f; _0x21791a++) {
        let _0x185ca5 = _0x31c855[_0x21791a];
        _0xb6cc4e.set(_0x185ca5, _0x2e5f44);
        _0x2e5f44 += _0x185ca5.length;
      }
      return _0xb6cc4e;
    };
    var _0x146df2 = {
      assign: _0x541c72,
      flattenChunks: _0x52aedb
    };
    var _0x4a091f = _0x146df2;
    let _0x21867a = true;
    try {
      String.fromCharCode.apply(null, new Uint8Array(1));
    } catch (_0x38cc8c) {
      _0x21867a = false;
    }
    const _0x4b5640 = new Uint8Array(256);
    for (let _0x15e6ef = 0; _0x15e6ef < 256; _0x15e6ef++) {
      _0x4b5640[_0x15e6ef] = _0x15e6ef >= 252 ? 6 : _0x15e6ef >= 248 ? 5 : _0x15e6ef >= 240 ? 4 : _0x15e6ef >= 224 ? 3 : _0x15e6ef >= 192 ? 2 : 1;
    }
    _0x4b5640[254] = _0x4b5640[254] = 1;
    var _0x3efac2 = _0x3ef40e => {
      if (typeof TextEncoder === "function" && TextEncoder.prototype.encode) {
        return new TextEncoder().encode(_0x3ef40e);
      }
      let _0x254af9;
      let _0x4191fc;
      let _0x21c0ef;
      let _0x37a494;
      let _0x5ceaa4;
      let _0x491578 = _0x3ef40e.length;
      let _0x1b469b = 0;
      for (_0x37a494 = 0; _0x37a494 < _0x491578; _0x37a494++) {
        _0x4191fc = _0x3ef40e.charCodeAt(_0x37a494);
        if ((_0x4191fc & 64512) === 55296 && _0x37a494 + 1 < _0x491578) {
          _0x21c0ef = _0x3ef40e.charCodeAt(_0x37a494 + 1);
          if ((_0x21c0ef & 64512) === 56320) {
            _0x4191fc = 65536 + (_0x4191fc - 55296 << 10) + (_0x21c0ef - 56320);
            _0x37a494++;
          }
        }
        _0x1b469b += _0x4191fc < 128 ? 1 : _0x4191fc < 2048 ? 2 : _0x4191fc < 65536 ? 3 : 4;
      }
      _0x254af9 = new Uint8Array(_0x1b469b);
      _0x5ceaa4 = 0;
      _0x37a494 = 0;
      for (; _0x5ceaa4 < _0x1b469b; _0x37a494++) {
        _0x4191fc = _0x3ef40e.charCodeAt(_0x37a494);
        if ((_0x4191fc & 64512) === 55296 && _0x37a494 + 1 < _0x491578) {
          _0x21c0ef = _0x3ef40e.charCodeAt(_0x37a494 + 1);
          if ((_0x21c0ef & 64512) === 56320) {
            _0x4191fc = 65536 + (_0x4191fc - 55296 << 10) + (_0x21c0ef - 56320);
            _0x37a494++;
          }
        }
        if (_0x4191fc < 128) {
          _0x254af9[_0x5ceaa4++] = _0x4191fc;
        } else if (_0x4191fc < 2048) {
          _0x254af9[_0x5ceaa4++] = _0x4191fc >>> 6 | 192;
          _0x254af9[_0x5ceaa4++] = _0x4191fc & 63 | 128;
        } else if (_0x4191fc < 65536) {
          _0x254af9[_0x5ceaa4++] = _0x4191fc >>> 12 | 224;
          _0x254af9[_0x5ceaa4++] = _0x4191fc >>> 6 & 63 | 128;
          _0x254af9[_0x5ceaa4++] = _0x4191fc & 63 | 128;
        } else {
          _0x254af9[_0x5ceaa4++] = _0x4191fc >>> 18 | 240;
          _0x254af9[_0x5ceaa4++] = _0x4191fc >>> 12 & 63 | 128;
          _0x254af9[_0x5ceaa4++] = _0x4191fc >>> 6 & 63 | 128;
          _0x254af9[_0x5ceaa4++] = _0x4191fc & 63 | 128;
        }
      }
      return _0x254af9;
    };
    const _0x44c904 = (_0x3630b1, _0x13d362) => {
      if (_0x13d362 < 65534) {
        if (_0x3630b1.subarray && _0x21867a) {
          return String.fromCharCode.apply(null, _0x3630b1.length === _0x13d362 ? _0x3630b1 : _0x3630b1.subarray(0, _0x13d362));
        }
      }
      let _0x54291e = "";
      for (let _0x2474b6 = 0; _0x2474b6 < _0x13d362; _0x2474b6++) {
        _0x54291e += String.fromCharCode(_0x3630b1[_0x2474b6]);
      }
      return _0x54291e;
    };
    var _0xc579f = (_0x393549, _0x3576b5) => {
      const _0x5ee045 = _0x3576b5 || _0x393549.length;
      if (typeof TextDecoder === "function" && TextDecoder.prototype.decode) {
        return new TextDecoder().decode(_0x393549.subarray(0, _0x3576b5));
      }
      let _0x404e97;
      let _0x19fb3f;
      const _0x544c1e = new Array(_0x5ee045 * 2);
      _0x19fb3f = 0;
      _0x404e97 = 0;
      for (; _0x404e97 < _0x5ee045;) {
        let _0x4e99f5 = _0x393549[_0x404e97++];
        if (_0x4e99f5 < 128) {
          _0x544c1e[_0x19fb3f++] = _0x4e99f5;
          continue;
        }
        let _0x1e2edc = _0x4b5640[_0x4e99f5];
        if (_0x1e2edc > 4) {
          _0x544c1e[_0x19fb3f++] = 65533;
          _0x404e97 += _0x1e2edc - 1;
          continue;
        }
        _0x4e99f5 &= _0x1e2edc === 2 ? 31 : _0x1e2edc === 3 ? 15 : 7;
        while (_0x1e2edc > 1 && _0x404e97 < _0x5ee045) {
          _0x4e99f5 = _0x4e99f5 << 6 | _0x393549[_0x404e97++] & 63;
          _0x1e2edc--;
        }
        if (_0x1e2edc > 1) {
          _0x544c1e[_0x19fb3f++] = 65533;
          continue;
        }
        if (_0x4e99f5 < 65536) {
          _0x544c1e[_0x19fb3f++] = _0x4e99f5;
        } else {
          _0x4e99f5 -= 65536;
          _0x544c1e[_0x19fb3f++] = _0x4e99f5 >> 10 & 1023 | 55296;
          _0x544c1e[_0x19fb3f++] = _0x4e99f5 & 1023 | 56320;
        }
      }
      return _0x44c904(_0x544c1e, _0x19fb3f);
    };
    var _0x4ad22e = (_0x5dc641, _0x43e8e8) => {
      _0x43e8e8 = _0x43e8e8 || _0x5dc641.length;
      if (_0x43e8e8 > _0x5dc641.length) {
        _0x43e8e8 = _0x5dc641.length;
      }
      let _0x19289e = _0x43e8e8 - 1;
      while (_0x19289e >= 0 && (_0x5dc641[_0x19289e] & 192) === 128) {
        _0x19289e--;
      }
      if (_0x19289e < 0) {
        return _0x43e8e8;
      }
      if (_0x19289e === 0) {
        return _0x43e8e8;
      }
      if (_0x19289e + _0x4b5640[_0x5dc641[_0x19289e]] > _0x43e8e8) {
        return _0x19289e;
      } else {
        return _0x43e8e8;
      }
    };
    var _0x112e0c = {
      string2buf: _0x3efac2,
      buf2string: _0xc579f,
      utf8border: _0x4ad22e
    };
    var _0xef7d93 = _0x112e0c;
    function _0x2d2f1c() {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    }
    var _0x2ccc16 = _0x2d2f1c;
    const _0x194050 = Object.prototype.toString;
    const {
      Z_NO_FLUSH: _0x24843d,
      Z_SYNC_FLUSH: _0x4ff631,
      Z_FULL_FLUSH: _0x2a1573,
      Z_FINISH: _0x561130,
      Z_OK: _0x2a3326,
      Z_STREAM_END: _0x31aad4,
      Z_DEFAULT_COMPRESSION: _0x235721,
      Z_DEFAULT_STRATEGY: _0x24617e,
      Z_DEFLATED: _0x9eb6b9
    } = _0xe9a438;
    function _0x196271(_0x1b353a) {
      var _0x23c9d6 = {
        level: _0x235721,
        method: _0x9eb6b9,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: _0x24617e
      };
      this.options = _0x4a091f.assign(_0x23c9d6, _0x1b353a || {});
      let _0x167f66 = this.options;
      if (_0x167f66.raw && _0x167f66.windowBits > 0) {
        _0x167f66.windowBits = -_0x167f66.windowBits;
      } else if (_0x167f66.gzip && _0x167f66.windowBits > 0 && _0x167f66.windowBits < 16) {
        _0x167f66.windowBits += 16;
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new _0x2ccc16();
      this.strm.avail_out = 0;
      let _0x111113 = _0x39989d.deflateInit2(this.strm, _0x167f66.level, _0x167f66.method, _0x167f66.windowBits, _0x167f66.memLevel, _0x167f66.strategy);
      if (_0x111113 !== _0x2a3326) {
        throw new Error(_0x4bb3a9[_0x111113]);
      }
      if (_0x167f66.header) {
        _0x39989d.deflateSetHeader(this.strm, _0x167f66.header);
      }
      if (_0x167f66.dictionary) {
        let _0x2a4be6;
        if (typeof _0x167f66.dictionary === "string") {
          _0x2a4be6 = _0xef7d93.string2buf(_0x167f66.dictionary);
        } else if (_0x194050.call(_0x167f66.dictionary) === "[object ArrayBuffer]") {
          _0x2a4be6 = new Uint8Array(_0x167f66.dictionary);
        } else {
          _0x2a4be6 = _0x167f66.dictionary;
        }
        _0x111113 = _0x39989d.deflateSetDictionary(this.strm, _0x2a4be6);
        if (_0x111113 !== _0x2a3326) {
          throw new Error(_0x4bb3a9[_0x111113]);
        }
        this._dict_set = true;
      }
    }
    _0x196271.prototype.push = function (_0xcb645e, _0x3dd0e1) {
      const _0xdcec02 = this.strm;
      const _0x1ff0ce = this.options.chunkSize;
      let _0x5be9b4;
      let _0x232423;
      if (this.ended) {
        return false;
      }
      if (_0x3dd0e1 === ~~_0x3dd0e1) {
        _0x232423 = _0x3dd0e1;
      } else {
        _0x232423 = _0x3dd0e1 === true ? _0x561130 : _0x24843d;
      }
      if (typeof _0xcb645e === "string") {
        _0xdcec02.input = _0xef7d93.string2buf(_0xcb645e);
      } else if (_0x194050.call(_0xcb645e) === "[object ArrayBuffer]") {
        _0xdcec02.input = new Uint8Array(_0xcb645e);
      } else {
        _0xdcec02.input = _0xcb645e;
      }
      _0xdcec02.next_in = 0;
      _0xdcec02.avail_in = _0xdcec02.input.length;
      for (;;) {
        if (_0xdcec02.avail_out === 0) {
          _0xdcec02.output = new Uint8Array(_0x1ff0ce);
          _0xdcec02.next_out = 0;
          _0xdcec02.avail_out = _0x1ff0ce;
        }
        if ((_0x232423 === _0x4ff631 || _0x232423 === _0x2a1573) && _0xdcec02.avail_out <= 6) {
          this.onData(_0xdcec02.output.subarray(0, _0xdcec02.next_out));
          _0xdcec02.avail_out = 0;
          continue;
        }
        _0x5be9b4 = _0x39989d.deflate(_0xdcec02, _0x232423);
        if (_0x5be9b4 === _0x31aad4) {
          if (_0xdcec02.next_out > 0) {
            this.onData(_0xdcec02.output.subarray(0, _0xdcec02.next_out));
          }
          _0x5be9b4 = _0x39989d.deflateEnd(this.strm);
          this.onEnd(_0x5be9b4);
          this.ended = true;
          return _0x5be9b4 === _0x2a3326;
        }
        if (_0xdcec02.avail_out === 0) {
          this.onData(_0xdcec02.output);
          continue;
        }
        if (_0x232423 > 0 && _0xdcec02.next_out > 0) {
          this.onData(_0xdcec02.output.subarray(0, _0xdcec02.next_out));
          _0xdcec02.avail_out = 0;
          continue;
        }
        if (_0xdcec02.avail_in === 0) {
          break;
        }
      }
      return true;
    };
    _0x196271.prototype.onData = function (_0x106cbc) {
      this.chunks.push(_0x106cbc);
    };
    _0x196271.prototype.onEnd = function (_0x32e63d) {
      if (_0x32e63d === _0x2a3326) {
        this.result = _0x4a091f.flattenChunks(this.chunks);
      }
      this.chunks = [];
      this.err = _0x32e63d;
      this.msg = this.strm.msg;
    };
    function _0x2be6aa(_0x32ff86, _0x3feab3) {
      const _0xf3e300 = new _0x196271(_0x3feab3);
      _0xf3e300.push(_0x32ff86, true);
      if (_0xf3e300.err) {
        throw _0xf3e300.msg || _0x4bb3a9[_0xf3e300.err];
      }
      return _0xf3e300.result;
    }
    function _0xb8e4d8(_0xf1961d, _0x530785) {
      _0x530785 = _0x530785 || {};
      _0x530785.raw = true;
      return _0x2be6aa(_0xf1961d, _0x530785);
    }
    function _0x2a62e9(_0x1fd87f, _0x2c4810) {
      _0x2c4810 = _0x2c4810 || {};
      _0x2c4810.gzip = true;
      return _0x2be6aa(_0x1fd87f, _0x2c4810);
    }
    var _0xe882fd = _0x196271;
    var _0x18d57e = _0x2be6aa;
    var _0xd4ea5e = _0xb8e4d8;
    var _0x46497d = _0x2a62e9;
    var _0xf2e335 = _0xe9a438;
    var _0x5cccff = {
      Deflate: _0xe882fd,
      deflate: _0x18d57e,
      deflateRaw: _0xd4ea5e,
      gzip: _0x46497d,
      constants: _0xf2e335
    };
    var _0x4bf227 = _0x5cccff;
    const _0x4076f0 = 16209;
    const _0x3a82c2 = 16191;
    var _0x53d595 = function _0x25c07e(_0xc2f3e, _0x12db64) {
      let _0x11ab9f;
      let _0x426058;
      let _0x103721;
      let _0x2e46b2;
      let _0x3416a6;
      let _0x1d024d;
      let _0x2ca397;
      let _0x522ebf;
      let _0x56d087;
      let _0x10b34d;
      let _0x2dfaf8;
      let _0x565eb3;
      let _0x157003;
      let _0xac8def;
      let _0x3542fb;
      let _0x469bd1;
      let _0x2256b4;
      let _0x3639b4;
      let _0x29c2f9;
      let _0x78aae3;
      let _0x3d0281;
      let _0x1c45bf;
      let _0x1397d9;
      let _0x479694;
      const _0x3de908 = _0xc2f3e.state;
      _0x11ab9f = _0xc2f3e.next_in;
      _0x1397d9 = _0xc2f3e.input;
      _0x426058 = _0x11ab9f + (_0xc2f3e.avail_in - 5);
      _0x103721 = _0xc2f3e.next_out;
      _0x479694 = _0xc2f3e.output;
      _0x2e46b2 = _0x103721 - (_0x12db64 - _0xc2f3e.avail_out);
      _0x3416a6 = _0x103721 + (_0xc2f3e.avail_out - 257);
      _0x1d024d = _0x3de908.dmax;
      _0x2ca397 = _0x3de908.wsize;
      _0x522ebf = _0x3de908.whave;
      _0x56d087 = _0x3de908.wnext;
      _0x10b34d = _0x3de908.window;
      _0x2dfaf8 = _0x3de908.hold;
      _0x565eb3 = _0x3de908.bits;
      _0x157003 = _0x3de908.lencode;
      _0xac8def = _0x3de908.distcode;
      _0x3542fb = (1 << _0x3de908.lenbits) - 1;
      _0x469bd1 = (1 << _0x3de908.distbits) - 1;
      _0x4407b0: do {
        if (_0x565eb3 < 15) {
          _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
          _0x565eb3 += 8;
          _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
          _0x565eb3 += 8;
        }
        _0x2256b4 = _0x157003[_0x2dfaf8 & _0x3542fb];
        _0x15de8c: for (;;) {
          _0x3639b4 = _0x2256b4 >>> 24;
          _0x2dfaf8 >>>= _0x3639b4;
          _0x565eb3 -= _0x3639b4;
          _0x3639b4 = _0x2256b4 >>> 16 & 255;
          if (_0x3639b4 === 0) {
            _0x479694[_0x103721++] = _0x2256b4 & 65535;
          } else if (_0x3639b4 & 16) {
            _0x29c2f9 = _0x2256b4 & 65535;
            _0x3639b4 &= 15;
            if (_0x3639b4) {
              if (_0x565eb3 < _0x3639b4) {
                _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
                _0x565eb3 += 8;
              }
              _0x29c2f9 += _0x2dfaf8 & (1 << _0x3639b4) - 1;
              _0x2dfaf8 >>>= _0x3639b4;
              _0x565eb3 -= _0x3639b4;
            }
            if (_0x565eb3 < 15) {
              _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
              _0x565eb3 += 8;
              _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
              _0x565eb3 += 8;
            }
            _0x2256b4 = _0xac8def[_0x2dfaf8 & _0x469bd1];
            _0x59e51a: for (;;) {
              _0x3639b4 = _0x2256b4 >>> 24;
              _0x2dfaf8 >>>= _0x3639b4;
              _0x565eb3 -= _0x3639b4;
              _0x3639b4 = _0x2256b4 >>> 16 & 255;
              if (_0x3639b4 & 16) {
                _0x78aae3 = _0x2256b4 & 65535;
                _0x3639b4 &= 15;
                if (_0x565eb3 < _0x3639b4) {
                  _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
                  _0x565eb3 += 8;
                  if (_0x565eb3 < _0x3639b4) {
                    _0x2dfaf8 += _0x1397d9[_0x11ab9f++] << _0x565eb3;
                    _0x565eb3 += 8;
                  }
                }
                _0x78aae3 += _0x2dfaf8 & (1 << _0x3639b4) - 1;
                if (_0x78aae3 > _0x1d024d) {
                  _0xc2f3e.msg = "invalid distance too far back";
                  _0x3de908.mode = _0x4076f0;
                  break _0x4407b0;
                }
                _0x2dfaf8 >>>= _0x3639b4;
                _0x565eb3 -= _0x3639b4;
                _0x3639b4 = _0x103721 - _0x2e46b2;
                if (_0x78aae3 > _0x3639b4) {
                  _0x3639b4 = _0x78aae3 - _0x3639b4;
                  if (_0x3639b4 > _0x522ebf) {
                    if (_0x3de908.sane) {
                      _0xc2f3e.msg = "invalid distance too far back";
                      _0x3de908.mode = _0x4076f0;
                      break _0x4407b0;
                    }
                  }
                  _0x3d0281 = 0;
                  _0x1c45bf = _0x10b34d;
                  if (_0x56d087 === 0) {
                    _0x3d0281 += _0x2ca397 - _0x3639b4;
                    if (_0x3639b4 < _0x29c2f9) {
                      _0x29c2f9 -= _0x3639b4;
                      do {
                        _0x479694[_0x103721++] = _0x10b34d[_0x3d0281++];
                      } while (--_0x3639b4);
                      _0x3d0281 = _0x103721 - _0x78aae3;
                      _0x1c45bf = _0x479694;
                    }
                  } else if (_0x56d087 < _0x3639b4) {
                    _0x3d0281 += _0x2ca397 + _0x56d087 - _0x3639b4;
                    _0x3639b4 -= _0x56d087;
                    if (_0x3639b4 < _0x29c2f9) {
                      _0x29c2f9 -= _0x3639b4;
                      do {
                        _0x479694[_0x103721++] = _0x10b34d[_0x3d0281++];
                      } while (--_0x3639b4);
                      _0x3d0281 = 0;
                      if (_0x56d087 < _0x29c2f9) {
                        _0x3639b4 = _0x56d087;
                        _0x29c2f9 -= _0x3639b4;
                        do {
                          _0x479694[_0x103721++] = _0x10b34d[_0x3d0281++];
                        } while (--_0x3639b4);
                        _0x3d0281 = _0x103721 - _0x78aae3;
                        _0x1c45bf = _0x479694;
                      }
                    }
                  } else {
                    _0x3d0281 += _0x56d087 - _0x3639b4;
                    if (_0x3639b4 < _0x29c2f9) {
                      _0x29c2f9 -= _0x3639b4;
                      do {
                        _0x479694[_0x103721++] = _0x10b34d[_0x3d0281++];
                      } while (--_0x3639b4);
                      _0x3d0281 = _0x103721 - _0x78aae3;
                      _0x1c45bf = _0x479694;
                    }
                  }
                  while (_0x29c2f9 > 2) {
                    _0x479694[_0x103721++] = _0x1c45bf[_0x3d0281++];
                    _0x479694[_0x103721++] = _0x1c45bf[_0x3d0281++];
                    _0x479694[_0x103721++] = _0x1c45bf[_0x3d0281++];
                    _0x29c2f9 -= 3;
                  }
                  if (_0x29c2f9) {
                    _0x479694[_0x103721++] = _0x1c45bf[_0x3d0281++];
                    if (_0x29c2f9 > 1) {
                      _0x479694[_0x103721++] = _0x1c45bf[_0x3d0281++];
                    }
                  }
                } else {
                  _0x3d0281 = _0x103721 - _0x78aae3;
                  do {
                    _0x479694[_0x103721++] = _0x479694[_0x3d0281++];
                    _0x479694[_0x103721++] = _0x479694[_0x3d0281++];
                    _0x479694[_0x103721++] = _0x479694[_0x3d0281++];
                    _0x29c2f9 -= 3;
                  } while (_0x29c2f9 > 2);
                  if (_0x29c2f9) {
                    _0x479694[_0x103721++] = _0x479694[_0x3d0281++];
                    if (_0x29c2f9 > 1) {
                      _0x479694[_0x103721++] = _0x479694[_0x3d0281++];
                    }
                  }
                }
              } else if ((_0x3639b4 & 64) === 0) {
                _0x2256b4 = _0xac8def[(_0x2256b4 & 65535) + (_0x2dfaf8 & (1 << _0x3639b4) - 1)];
                continue _0x59e51a;
              } else {
                _0xc2f3e.msg = "invalid distance code";
                _0x3de908.mode = _0x4076f0;
                break _0x4407b0;
              }
              break;
            }
          } else if ((_0x3639b4 & 64) === 0) {
            _0x2256b4 = _0x157003[(_0x2256b4 & 65535) + (_0x2dfaf8 & (1 << _0x3639b4) - 1)];
            continue _0x15de8c;
          } else if (_0x3639b4 & 32) {
            _0x3de908.mode = _0x3a82c2;
            break _0x4407b0;
          } else {
            _0xc2f3e.msg = "invalid literal/length code";
            _0x3de908.mode = _0x4076f0;
            break _0x4407b0;
          }
          break;
        }
      } while (_0x11ab9f < _0x426058 && _0x103721 < _0x3416a6);
      _0x29c2f9 = _0x565eb3 >> 3;
      _0x11ab9f -= _0x29c2f9;
      _0x565eb3 -= _0x29c2f9 << 3;
      _0x2dfaf8 &= (1 << _0x565eb3) - 1;
      _0xc2f3e.next_in = _0x11ab9f;
      _0xc2f3e.next_out = _0x103721;
      _0xc2f3e.avail_in = _0x11ab9f < _0x426058 ? 5 + (_0x426058 - _0x11ab9f) : 5 - (_0x11ab9f - _0x426058);
      _0xc2f3e.avail_out = _0x103721 < _0x3416a6 ? 257 + (_0x3416a6 - _0x103721) : 257 - (_0x103721 - _0x3416a6);
      _0x3de908.hold = _0x2dfaf8;
      _0x3de908.bits = _0x565eb3;
      return;
    };
    const _0x191260 = 15;
    const _0x7edae4 = 852;
    const _0x2f05d4 = 592;
    const _0x287a84 = 0;
    const _0x326c95 = 1;
    const _0x3afd3e = 2;
    const _0x5a6a79 = new Uint16Array([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]);
    const _0x3a6032 = new Uint8Array([16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]);
    const _0x4709c1 = new Uint16Array([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]);
    const _0xd5ba85 = new Uint8Array([16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64]);
    const _0x4b256b = (_0x3b3dfa, _0x322a42, _0x3a17fd, _0x5a5e79, _0x4d6bbd, _0x10f7db, _0x559677, _0x4dba7c) => {
      const _0x4da2dd = _0x4dba7c.bits;
      let _0x1dbc9d = 0;
      let _0xda28f4 = 0;
      let _0x2aa7b5 = 0;
      let _0x26d516 = 0;
      let _0x51bc22 = 0;
      let _0x15c83c = 0;
      let _0x52efb3 = 0;
      let _0x4e6a98 = 0;
      let _0x11dba3 = 0;
      let _0x332055 = 0;
      let _0x2454bc;
      let _0x8a5f33;
      let _0x36e99d;
      let _0x2b0162;
      let _0x398046;
      let _0x542039 = null;
      let _0x468807;
      const _0x55c4df = new Uint16Array(_0x191260 + 1);
      const _0x5810c4 = new Uint16Array(_0x191260 + 1);
      let _0x445934 = null;
      let _0x327f37;
      let _0x471746;
      let _0x508484;
      for (_0x1dbc9d = 0; _0x1dbc9d <= _0x191260; _0x1dbc9d++) {
        _0x55c4df[_0x1dbc9d] = 0;
      }
      for (_0xda28f4 = 0; _0xda28f4 < _0x5a5e79; _0xda28f4++) {
        _0x55c4df[_0x322a42[_0x3a17fd + _0xda28f4]]++;
      }
      _0x51bc22 = _0x4da2dd;
      for (_0x26d516 = _0x191260; _0x26d516 >= 1; _0x26d516--) {
        if (_0x55c4df[_0x26d516] !== 0) {
          break;
        }
      }
      if (_0x51bc22 > _0x26d516) {
        _0x51bc22 = _0x26d516;
      }
      if (_0x26d516 === 0) {
        _0x4d6bbd[_0x10f7db++] = 1 << 24 | 64 << 16 | 0;
        _0x4d6bbd[_0x10f7db++] = 1 << 24 | 64 << 16 | 0;
        _0x4dba7c.bits = 1;
        return 0;
      }
      for (_0x2aa7b5 = 1; _0x2aa7b5 < _0x26d516; _0x2aa7b5++) {
        if (_0x55c4df[_0x2aa7b5] !== 0) {
          break;
        }
      }
      if (_0x51bc22 < _0x2aa7b5) {
        _0x51bc22 = _0x2aa7b5;
      }
      _0x4e6a98 = 1;
      for (_0x1dbc9d = 1; _0x1dbc9d <= _0x191260; _0x1dbc9d++) {
        _0x4e6a98 <<= 1;
        _0x4e6a98 -= _0x55c4df[_0x1dbc9d];
        if (_0x4e6a98 < 0) {
          return -1;
        }
      }
      if (_0x4e6a98 > 0 && (_0x3b3dfa === _0x287a84 || _0x26d516 !== 1)) {
        return -1;
      }
      _0x5810c4[1] = 0;
      for (_0x1dbc9d = 1; _0x1dbc9d < _0x191260; _0x1dbc9d++) {
        _0x5810c4[_0x1dbc9d + 1] = _0x5810c4[_0x1dbc9d] + _0x55c4df[_0x1dbc9d];
      }
      for (_0xda28f4 = 0; _0xda28f4 < _0x5a5e79; _0xda28f4++) {
        if (_0x322a42[_0x3a17fd + _0xda28f4] !== 0) {
          _0x559677[_0x5810c4[_0x322a42[_0x3a17fd + _0xda28f4]]++] = _0xda28f4;
        }
      }
      if (_0x3b3dfa === _0x287a84) {
        _0x542039 = _0x445934 = _0x559677;
        _0x468807 = 20;
      } else if (_0x3b3dfa === _0x326c95) {
        _0x542039 = _0x5a6a79;
        _0x445934 = _0x3a6032;
        _0x468807 = 257;
      } else {
        _0x542039 = _0x4709c1;
        _0x445934 = _0xd5ba85;
        _0x468807 = 0;
      }
      _0x332055 = 0;
      _0xda28f4 = 0;
      _0x1dbc9d = _0x2aa7b5;
      _0x398046 = _0x10f7db;
      _0x15c83c = _0x51bc22;
      _0x52efb3 = 0;
      _0x36e99d = -1;
      _0x11dba3 = 1 << _0x51bc22;
      _0x2b0162 = _0x11dba3 - 1;
      if (_0x3b3dfa === _0x326c95 && _0x11dba3 > _0x7edae4 || _0x3b3dfa === _0x3afd3e && _0x11dba3 > _0x2f05d4) {
        return 1;
      }
      for (;;) {
        _0x327f37 = _0x1dbc9d - _0x52efb3;
        if (_0x559677[_0xda28f4] + 1 < _0x468807) {
          _0x471746 = 0;
          _0x508484 = _0x559677[_0xda28f4];
        } else if (_0x559677[_0xda28f4] >= _0x468807) {
          _0x471746 = _0x445934[_0x559677[_0xda28f4] - _0x468807];
          _0x508484 = _0x542039[_0x559677[_0xda28f4] - _0x468807];
        } else {
          _0x471746 = 96;
          _0x508484 = 0;
        }
        _0x2454bc = 1 << _0x1dbc9d - _0x52efb3;
        _0x8a5f33 = 1 << _0x15c83c;
        _0x2aa7b5 = _0x8a5f33;
        do {
          _0x8a5f33 -= _0x2454bc;
          _0x4d6bbd[_0x398046 + (_0x332055 >> _0x52efb3) + _0x8a5f33] = _0x327f37 << 24 | _0x471746 << 16 | _0x508484 | 0;
        } while (_0x8a5f33 !== 0);
        _0x2454bc = 1 << _0x1dbc9d - 1;
        while (_0x332055 & _0x2454bc) {
          _0x2454bc >>= 1;
        }
        if (_0x2454bc !== 0) {
          _0x332055 &= _0x2454bc - 1;
          _0x332055 += _0x2454bc;
        } else {
          _0x332055 = 0;
        }
        _0xda28f4++;
        if (--_0x55c4df[_0x1dbc9d] === 0) {
          if (_0x1dbc9d === _0x26d516) {
            break;
          }
          _0x1dbc9d = _0x322a42[_0x3a17fd + _0x559677[_0xda28f4]];
        }
        if (_0x1dbc9d > _0x51bc22 && (_0x332055 & _0x2b0162) !== _0x36e99d) {
          if (_0x52efb3 === 0) {
            _0x52efb3 = _0x51bc22;
          }
          _0x398046 += _0x2aa7b5;
          _0x15c83c = _0x1dbc9d - _0x52efb3;
          _0x4e6a98 = 1 << _0x15c83c;
          while (_0x15c83c + _0x52efb3 < _0x26d516) {
            _0x4e6a98 -= _0x55c4df[_0x15c83c + _0x52efb3];
            if (_0x4e6a98 <= 0) {
              break;
            }
            _0x15c83c++;
            _0x4e6a98 <<= 1;
          }
          _0x11dba3 += 1 << _0x15c83c;
          if (_0x3b3dfa === _0x326c95 && _0x11dba3 > _0x7edae4 || _0x3b3dfa === _0x3afd3e && _0x11dba3 > _0x2f05d4) {
            return 1;
          }
          _0x36e99d = _0x332055 & _0x2b0162;
          _0x4d6bbd[_0x36e99d] = _0x51bc22 << 24 | _0x15c83c << 16 | _0x398046 - _0x10f7db | 0;
        }
      }
      if (_0x332055 !== 0) {
        _0x4d6bbd[_0x398046 + _0x332055] = _0x1dbc9d - _0x52efb3 << 24 | 64 << 16 | 0;
      }
      _0x4dba7c.bits = _0x51bc22;
      return 0;
    };
    var _0x43d40f = _0x4b256b;
    const _0x501a5a = 0;
    const _0x350835 = 1;
    const _0x550a2d = 2;
    const {
      Z_FINISH: _0x20b7df,
      Z_BLOCK: _0x398c3f,
      Z_TREES: _0x110c11,
      Z_OK: _0x2db431,
      Z_STREAM_END: _0x2bbd84,
      Z_NEED_DICT: _0x13679e,
      Z_STREAM_ERROR: _0x2b61b4,
      Z_DATA_ERROR: _0x8b9f46,
      Z_MEM_ERROR: _0x1e17a7,
      Z_BUF_ERROR: _0x46afbc,
      Z_DEFLATED: _0x54401b
    } = _0xe9a438;
    const _0x54b1a9 = 16180;
    const _0x24a45e = 16181;
    const _0x240771 = 16182;
    const _0x552d45 = 16183;
    const _0x37e653 = 16184;
    const _0x3336b9 = 16185;
    const _0xa2ec68 = 16186;
    const _0x34f880 = 16187;
    const _0x126f78 = 16188;
    const _0x49521b = 16189;
    const _0x114d9a = 16190;
    const _0x4a365b = 16191;
    const _0x39c2c5 = 16192;
    const _0x42a0b4 = 16193;
    const _0x428ab1 = 16194;
    const _0x460a34 = 16195;
    const _0x28facd = 16196;
    const _0x38dbbc = 16197;
    const _0x35a8cf = 16198;
    const _0x437f2a = 16199;
    const _0x2cbbcb = 16200;
    const _0x2ffcbe = 16201;
    const _0xea0a0e = 16202;
    const _0x3cca22 = 16203;
    const _0x2055f1 = 16204;
    const _0x430775 = 16205;
    const _0x4f9da2 = 16206;
    const _0x27a973 = 16207;
    const _0x27c990 = 16208;
    const _0x365705 = 16209;
    const _0x3d7e2a = 16210;
    const _0x34d4c8 = 16211;
    const _0x2cffbd = 852;
    const _0x49f0ad = 592;
    const _0x254511 = 15;
    const _0x269541 = _0x254511;
    const _0x41d181 = _0x2a744c => {
      return (_0x2a744c >>> 24 & 255) + (_0x2a744c >>> 8 & 65280) + ((_0x2a744c & 65280) << 8) + ((_0x2a744c & 255) << 24);
    };
    function _0x47d8d5() {
      this.strm = null;
      this.mode = 0;
      this.last = false;
      this.wrap = 0;
      this.havedict = false;
      this.flags = 0;
      this.dmax = 0;
      this.check = 0;
      this.total = 0;
      this.head = null;
      this.wbits = 0;
      this.wsize = 0;
      this.whave = 0;
      this.wnext = 0;
      this.window = null;
      this.hold = 0;
      this.bits = 0;
      this.length = 0;
      this.offset = 0;
      this.extra = 0;
      this.lencode = null;
      this.distcode = null;
      this.lenbits = 0;
      this.distbits = 0;
      this.ncode = 0;
      this.nlen = 0;
      this.ndist = 0;
      this.have = 0;
      this.next = null;
      this.lens = new Uint16Array(320);
      this.work = new Uint16Array(288);
      this.lendyn = null;
      this.distdyn = null;
      this.sane = 0;
      this.back = 0;
      this.was = 0;
    }
    const _0x5e33b8 = _0x5a60a0 => {
      if (!_0x5a60a0) {
        return 1;
      }
      const _0x2df198 = _0x5a60a0.state;
      if (!_0x2df198 || _0x2df198.strm !== _0x5a60a0 || _0x2df198.mode < _0x54b1a9 || _0x2df198.mode > _0x34d4c8) {
        return 1;
      }
      return 0;
    };
    const _0x2baee5 = _0x10be1c => {
      if (_0x5e33b8(_0x10be1c)) {
        return _0x2b61b4;
      }
      const _0x2c100f = _0x10be1c.state;
      _0x10be1c.total_in = _0x10be1c.total_out = _0x2c100f.total = 0;
      _0x10be1c.msg = "";
      if (_0x2c100f.wrap) {
        _0x10be1c.adler = _0x2c100f.wrap & 1;
      }
      _0x2c100f.mode = _0x54b1a9;
      _0x2c100f.last = 0;
      _0x2c100f.havedict = 0;
      _0x2c100f.flags = -1;
      _0x2c100f.dmax = 32768;
      _0x2c100f.head = null;
      _0x2c100f.hold = 0;
      _0x2c100f.bits = 0;
      _0x2c100f.lencode = _0x2c100f.lendyn = new Int32Array(_0x2cffbd);
      _0x2c100f.distcode = _0x2c100f.distdyn = new Int32Array(_0x49f0ad);
      _0x2c100f.sane = 1;
      _0x2c100f.back = -1;
      return _0x2db431;
    };
    const _0x4af691 = _0x393c56 => {
      if (_0x5e33b8(_0x393c56)) {
        return _0x2b61b4;
      }
      const _0x227268 = _0x393c56.state;
      _0x227268.wsize = 0;
      _0x227268.whave = 0;
      _0x227268.wnext = 0;
      return _0x2baee5(_0x393c56);
    };
    const _0xa63174 = (_0x352aa1, _0x27d048) => {
      let _0xb3729a;
      if (_0x5e33b8(_0x352aa1)) {
        return _0x2b61b4;
      }
      const _0x6bde8b = _0x352aa1.state;
      if (_0x27d048 < 0) {
        _0xb3729a = 0;
        _0x27d048 = -_0x27d048;
      } else {
        _0xb3729a = (_0x27d048 >> 4) + 5;
        if (_0x27d048 < 48) {
          _0x27d048 &= 15;
        }
      }
      if (_0x27d048 && (_0x27d048 < 8 || _0x27d048 > 15)) {
        return _0x2b61b4;
      }
      if (_0x6bde8b.window !== null && _0x6bde8b.wbits !== _0x27d048) {
        _0x6bde8b.window = null;
      }
      _0x6bde8b.wrap = _0xb3729a;
      _0x6bde8b.wbits = _0x27d048;
      return _0x4af691(_0x352aa1);
    };
    const _0x3c25f2 = (_0x496ce9, _0x410792) => {
      if (!_0x496ce9) {
        return _0x2b61b4;
      }
      const _0x348724 = new _0x47d8d5();
      _0x496ce9.state = _0x348724;
      _0x348724.strm = _0x496ce9;
      _0x348724.window = null;
      _0x348724.mode = _0x54b1a9;
      const _0x518f81 = _0xa63174(_0x496ce9, _0x410792);
      if (_0x518f81 !== _0x2db431) {
        _0x496ce9.state = null;
      }
      return _0x518f81;
    };
    const _0x590cdf = _0x3f9436 => {
      return _0x3c25f2(_0x3f9436, _0x269541);
    };
    let _0x386982 = true;
    let _0x207348;
    let _0x2f071c;
    const _0x53dcbd = _0x297124 => {
      if (_0x386982) {
        _0x207348 = new Int32Array(512);
        _0x2f071c = new Int32Array(32);
        let _0x596c8d = 0;
        while (_0x596c8d < 144) {
          _0x297124.lens[_0x596c8d++] = 8;
        }
        while (_0x596c8d < 256) {
          _0x297124.lens[_0x596c8d++] = 9;
        }
        while (_0x596c8d < 280) {
          _0x297124.lens[_0x596c8d++] = 7;
        }
        while (_0x596c8d < 288) {
          _0x297124.lens[_0x596c8d++] = 8;
        }
        _0x43d40f(_0x350835, _0x297124.lens, 0, 288, _0x207348, 0, _0x297124.work, {
          bits: 9
        });
        _0x596c8d = 0;
        while (_0x596c8d < 32) {
          _0x297124.lens[_0x596c8d++] = 5;
        }
        _0x43d40f(_0x550a2d, _0x297124.lens, 0, 32, _0x2f071c, 0, _0x297124.work, {
          bits: 5
        });
        _0x386982 = false;
      }
      _0x297124.lencode = _0x207348;
      _0x297124.lenbits = 9;
      _0x297124.distcode = _0x2f071c;
      _0x297124.distbits = 5;
    };
    const _0x3e43df = (_0x453228, _0x5b3df9, _0x710420, _0x519c35) => {
      let _0x1ab06b;
      const _0x419463 = _0x453228.state;
      if (_0x419463.window === null) {
        _0x419463.wsize = 1 << _0x419463.wbits;
        _0x419463.wnext = 0;
        _0x419463.whave = 0;
        _0x419463.window = new Uint8Array(_0x419463.wsize);
      }
      if (_0x519c35 >= _0x419463.wsize) {
        _0x419463.window.set(_0x5b3df9.subarray(_0x710420 - _0x419463.wsize, _0x710420), 0);
        _0x419463.wnext = 0;
        _0x419463.whave = _0x419463.wsize;
      } else {
        _0x1ab06b = _0x419463.wsize - _0x419463.wnext;
        if (_0x1ab06b > _0x519c35) {
          _0x1ab06b = _0x519c35;
        }
        _0x419463.window.set(_0x5b3df9.subarray(_0x710420 - _0x519c35, _0x710420 - _0x519c35 + _0x1ab06b), _0x419463.wnext);
        _0x519c35 -= _0x1ab06b;
        if (_0x519c35) {
          _0x419463.window.set(_0x5b3df9.subarray(_0x710420 - _0x519c35, _0x710420), 0);
          _0x419463.wnext = _0x519c35;
          _0x419463.whave = _0x419463.wsize;
        } else {
          _0x419463.wnext += _0x1ab06b;
          if (_0x419463.wnext === _0x419463.wsize) {
            _0x419463.wnext = 0;
          }
          if (_0x419463.whave < _0x419463.wsize) {
            _0x419463.whave += _0x1ab06b;
          }
        }
      }
      return 0;
    };
    const _0x1bfcdf = (_0xbf04c7, _0x337cfe) => {
      let _0x2458ac;
      let _0x135a28;
      let _0x52679a;
      let _0x3e2f6d;
      let _0x200f1d;
      let _0x4f61f1;
      let _0x1c4ce9;
      let _0x2bacb3;
      let _0x1105ea;
      let _0x6b2266;
      let _0x358642;
      let _0x499921;
      let _0x2ad4ac;
      let _0x41efa3;
      let _0x504982 = 0;
      let _0x753961;
      let _0x4209c7;
      let _0x339dc6;
      let _0x17606a;
      let _0x23d669;
      let _0x49c7ac;
      let _0x384d5a;
      let _0x59becd;
      const _0x2ed85b = new Uint8Array(4);
      let _0x4521d6;
      let _0x216f39;
      const _0x368563 = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
      if (_0x5e33b8(_0xbf04c7) || !_0xbf04c7.output || !_0xbf04c7.input && _0xbf04c7.avail_in !== 0) {
        return _0x2b61b4;
      }
      _0x2458ac = _0xbf04c7.state;
      if (_0x2458ac.mode === _0x4a365b) {
        _0x2458ac.mode = _0x39c2c5;
      }
      _0x200f1d = _0xbf04c7.next_out;
      _0x52679a = _0xbf04c7.output;
      _0x1c4ce9 = _0xbf04c7.avail_out;
      _0x3e2f6d = _0xbf04c7.next_in;
      _0x135a28 = _0xbf04c7.input;
      _0x4f61f1 = _0xbf04c7.avail_in;
      _0x2bacb3 = _0x2458ac.hold;
      _0x1105ea = _0x2458ac.bits;
      _0x6b2266 = _0x4f61f1;
      _0x358642 = _0x1c4ce9;
      _0x59becd = _0x2db431;
      _0x1ae489: for (;;) {
        switch (_0x2458ac.mode) {
          case _0x54b1a9:
            if (_0x2458ac.wrap === 0) {
              _0x2458ac.mode = _0x39c2c5;
              break;
            }
            while (_0x1105ea < 16) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            if (_0x2458ac.wrap & 2 && _0x2bacb3 === 35615) {
              if (_0x2458ac.wbits === 0) {
                _0x2458ac.wbits = 15;
              }
              _0x2458ac.check = 0;
              _0x2ed85b[0] = _0x2bacb3 & 255;
              _0x2ed85b[1] = _0x2bacb3 >>> 8 & 255;
              _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x2ed85b, 2, 0);
              _0x2bacb3 = 0;
              _0x1105ea = 0;
              _0x2458ac.mode = _0x24a45e;
              break;
            }
            if (_0x2458ac.head) {
              _0x2458ac.head.done = false;
            }
            if (!(_0x2458ac.wrap & 1) || (((_0x2bacb3 & 255) << 8) + (_0x2bacb3 >> 8)) % 31) {
              _0xbf04c7.msg = "incorrect header check";
              _0x2458ac.mode = _0x365705;
              break;
            }
            if ((_0x2bacb3 & 15) !== _0x54401b) {
              _0xbf04c7.msg = "unknown compression method";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2bacb3 >>>= 4;
            _0x1105ea -= 4;
            _0x384d5a = (_0x2bacb3 & 15) + 8;
            if (_0x2458ac.wbits === 0) {
              _0x2458ac.wbits = _0x384d5a;
            }
            if (_0x384d5a > 15 || _0x384d5a > _0x2458ac.wbits) {
              _0xbf04c7.msg = "invalid window size";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.dmax = 1 << _0x2458ac.wbits;
            _0x2458ac.flags = 0;
            _0xbf04c7.adler = _0x2458ac.check = 1;
            _0x2458ac.mode = _0x2bacb3 & 512 ? _0x49521b : _0x4a365b;
            _0x2bacb3 = 0;
            _0x1105ea = 0;
            break;
          case _0x24a45e:
            while (_0x1105ea < 16) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            _0x2458ac.flags = _0x2bacb3;
            if ((_0x2458ac.flags & 255) !== _0x54401b) {
              _0xbf04c7.msg = "unknown compression method";
              _0x2458ac.mode = _0x365705;
              break;
            }
            if (_0x2458ac.flags & 57344) {
              _0xbf04c7.msg = "unknown header flags set";
              _0x2458ac.mode = _0x365705;
              break;
            }
            if (_0x2458ac.head) {
              _0x2458ac.head.text = _0x2bacb3 >> 8 & 1;
            }
            if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
              _0x2ed85b[0] = _0x2bacb3 & 255;
              _0x2ed85b[1] = _0x2bacb3 >>> 8 & 255;
              _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x2ed85b, 2, 0);
            }
            _0x2bacb3 = 0;
            _0x1105ea = 0;
            _0x2458ac.mode = _0x240771;
          case _0x240771:
            while (_0x1105ea < 32) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            if (_0x2458ac.head) {
              _0x2458ac.head.time = _0x2bacb3;
            }
            if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
              _0x2ed85b[0] = _0x2bacb3 & 255;
              _0x2ed85b[1] = _0x2bacb3 >>> 8 & 255;
              _0x2ed85b[2] = _0x2bacb3 >>> 16 & 255;
              _0x2ed85b[3] = _0x2bacb3 >>> 24 & 255;
              _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x2ed85b, 4, 0);
            }
            _0x2bacb3 = 0;
            _0x1105ea = 0;
            _0x2458ac.mode = _0x552d45;
          case _0x552d45:
            while (_0x1105ea < 16) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            if (_0x2458ac.head) {
              _0x2458ac.head.xflags = _0x2bacb3 & 255;
              _0x2458ac.head.os = _0x2bacb3 >> 8;
            }
            if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
              _0x2ed85b[0] = _0x2bacb3 & 255;
              _0x2ed85b[1] = _0x2bacb3 >>> 8 & 255;
              _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x2ed85b, 2, 0);
            }
            _0x2bacb3 = 0;
            _0x1105ea = 0;
            _0x2458ac.mode = _0x37e653;
          case _0x37e653:
            if (_0x2458ac.flags & 1024) {
              while (_0x1105ea < 16) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x2458ac.length = _0x2bacb3;
              if (_0x2458ac.head) {
                _0x2458ac.head.extra_len = _0x2bacb3;
              }
              if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
                _0x2ed85b[0] = _0x2bacb3 & 255;
                _0x2ed85b[1] = _0x2bacb3 >>> 8 & 255;
                _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x2ed85b, 2, 0);
              }
              _0x2bacb3 = 0;
              _0x1105ea = 0;
            } else if (_0x2458ac.head) {
              _0x2458ac.head.extra = null;
            }
            _0x2458ac.mode = _0x3336b9;
          case _0x3336b9:
            if (_0x2458ac.flags & 1024) {
              _0x499921 = _0x2458ac.length;
              if (_0x499921 > _0x4f61f1) {
                _0x499921 = _0x4f61f1;
              }
              if (_0x499921) {
                if (_0x2458ac.head) {
                  _0x384d5a = _0x2458ac.head.extra_len - _0x2458ac.length;
                  if (!_0x2458ac.head.extra) {
                    _0x2458ac.head.extra = new Uint8Array(_0x2458ac.head.extra_len);
                  }
                  _0x2458ac.head.extra.set(_0x135a28.subarray(_0x3e2f6d, _0x3e2f6d + _0x499921), _0x384d5a);
                }
                if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
                  _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x135a28, _0x499921, _0x3e2f6d);
                }
                _0x4f61f1 -= _0x499921;
                _0x3e2f6d += _0x499921;
                _0x2458ac.length -= _0x499921;
              }
              if (_0x2458ac.length) {
                break _0x1ae489;
              }
            }
            _0x2458ac.length = 0;
            _0x2458ac.mode = _0xa2ec68;
          case _0xa2ec68:
            if (_0x2458ac.flags & 2048) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x499921 = 0;
              do {
                _0x384d5a = _0x135a28[_0x3e2f6d + _0x499921++];
                if (_0x2458ac.head && _0x384d5a && _0x2458ac.length < 65536) {
                  _0x2458ac.head.name += String.fromCharCode(_0x384d5a);
                }
              } while (_0x384d5a && _0x499921 < _0x4f61f1);
              if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
                _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x135a28, _0x499921, _0x3e2f6d);
              }
              _0x4f61f1 -= _0x499921;
              _0x3e2f6d += _0x499921;
              if (_0x384d5a) {
                break _0x1ae489;
              }
            } else if (_0x2458ac.head) {
              _0x2458ac.head.name = null;
            }
            _0x2458ac.length = 0;
            _0x2458ac.mode = _0x34f880;
          case _0x34f880:
            if (_0x2458ac.flags & 4096) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x499921 = 0;
              do {
                _0x384d5a = _0x135a28[_0x3e2f6d + _0x499921++];
                if (_0x2458ac.head && _0x384d5a && _0x2458ac.length < 65536) {
                  _0x2458ac.head.comment += String.fromCharCode(_0x384d5a);
                }
              } while (_0x384d5a && _0x499921 < _0x4f61f1);
              if (_0x2458ac.flags & 512 && _0x2458ac.wrap & 4) {
                _0x2458ac.check = _0x21fadc(_0x2458ac.check, _0x135a28, _0x499921, _0x3e2f6d);
              }
              _0x4f61f1 -= _0x499921;
              _0x3e2f6d += _0x499921;
              if (_0x384d5a) {
                break _0x1ae489;
              }
            } else if (_0x2458ac.head) {
              _0x2458ac.head.comment = null;
            }
            _0x2458ac.mode = _0x126f78;
          case _0x126f78:
            if (_0x2458ac.flags & 512) {
              while (_0x1105ea < 16) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              if (_0x2458ac.wrap & 4 && _0x2bacb3 !== (_0x2458ac.check & 65535)) {
                _0xbf04c7.msg = "header crc mismatch";
                _0x2458ac.mode = _0x365705;
                break;
              }
              _0x2bacb3 = 0;
              _0x1105ea = 0;
            }
            if (_0x2458ac.head) {
              _0x2458ac.head.hcrc = _0x2458ac.flags >> 9 & 1;
              _0x2458ac.head.done = true;
            }
            _0xbf04c7.adler = _0x2458ac.check = 0;
            _0x2458ac.mode = _0x4a365b;
            break;
          case _0x49521b:
            while (_0x1105ea < 32) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            _0xbf04c7.adler = _0x2458ac.check = _0x41d181(_0x2bacb3);
            _0x2bacb3 = 0;
            _0x1105ea = 0;
            _0x2458ac.mode = _0x114d9a;
          case _0x114d9a:
            if (_0x2458ac.havedict === 0) {
              _0xbf04c7.next_out = _0x200f1d;
              _0xbf04c7.avail_out = _0x1c4ce9;
              _0xbf04c7.next_in = _0x3e2f6d;
              _0xbf04c7.avail_in = _0x4f61f1;
              _0x2458ac.hold = _0x2bacb3;
              _0x2458ac.bits = _0x1105ea;
              return _0x13679e;
            }
            _0xbf04c7.adler = _0x2458ac.check = 1;
            _0x2458ac.mode = _0x4a365b;
          case _0x4a365b:
            if (_0x337cfe === _0x398c3f || _0x337cfe === _0x110c11) {
              break _0x1ae489;
            }
          case _0x39c2c5:
            if (_0x2458ac.last) {
              _0x2bacb3 >>>= _0x1105ea & 7;
              _0x1105ea -= _0x1105ea & 7;
              _0x2458ac.mode = _0x4f9da2;
              break;
            }
            while (_0x1105ea < 3) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            _0x2458ac.last = _0x2bacb3 & 1;
            _0x2bacb3 >>>= 1;
            _0x1105ea -= 1;
            switch (_0x2bacb3 & 3) {
              case 0:
                _0x2458ac.mode = _0x42a0b4;
                break;
              case 1:
                _0x53dcbd(_0x2458ac);
                _0x2458ac.mode = _0x437f2a;
                if (_0x337cfe === _0x110c11) {
                  _0x2bacb3 >>>= 2;
                  _0x1105ea -= 2;
                  break _0x1ae489;
                }
                break;
              case 2:
                _0x2458ac.mode = _0x28facd;
                break;
              case 3:
                _0xbf04c7.msg = "invalid block type";
                _0x2458ac.mode = _0x365705;
            }
            _0x2bacb3 >>>= 2;
            _0x1105ea -= 2;
            break;
          case _0x42a0b4:
            _0x2bacb3 >>>= _0x1105ea & 7;
            _0x1105ea -= _0x1105ea & 7;
            while (_0x1105ea < 32) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            if ((_0x2bacb3 & 65535) !== (_0x2bacb3 >>> 16 ^ 65535)) {
              _0xbf04c7.msg = "invalid stored block lengths";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.length = _0x2bacb3 & 65535;
            _0x2bacb3 = 0;
            _0x1105ea = 0;
            _0x2458ac.mode = _0x428ab1;
            if (_0x337cfe === _0x110c11) {
              break _0x1ae489;
            }
          case _0x428ab1:
            _0x2458ac.mode = _0x460a34;
          case _0x460a34:
            _0x499921 = _0x2458ac.length;
            if (_0x499921) {
              if (_0x499921 > _0x4f61f1) {
                _0x499921 = _0x4f61f1;
              }
              if (_0x499921 > _0x1c4ce9) {
                _0x499921 = _0x1c4ce9;
              }
              if (_0x499921 === 0) {
                break _0x1ae489;
              }
              _0x52679a.set(_0x135a28.subarray(_0x3e2f6d, _0x3e2f6d + _0x499921), _0x200f1d);
              _0x4f61f1 -= _0x499921;
              _0x3e2f6d += _0x499921;
              _0x1c4ce9 -= _0x499921;
              _0x200f1d += _0x499921;
              _0x2458ac.length -= _0x499921;
              break;
            }
            _0x2458ac.mode = _0x4a365b;
            break;
          case _0x28facd:
            while (_0x1105ea < 14) {
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            _0x2458ac.nlen = (_0x2bacb3 & 31) + 257;
            _0x2bacb3 >>>= 5;
            _0x1105ea -= 5;
            _0x2458ac.ndist = (_0x2bacb3 & 31) + 1;
            _0x2bacb3 >>>= 5;
            _0x1105ea -= 5;
            _0x2458ac.ncode = (_0x2bacb3 & 15) + 4;
            _0x2bacb3 >>>= 4;
            _0x1105ea -= 4;
            if (_0x2458ac.nlen > 286 || _0x2458ac.ndist > 30) {
              _0xbf04c7.msg = "too many length or distance symbols";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.have = 0;
            _0x2458ac.mode = _0x38dbbc;
          case _0x38dbbc:
            while (_0x2458ac.have < _0x2458ac.ncode) {
              while (_0x1105ea < 3) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x2458ac.lens[_0x368563[_0x2458ac.have++]] = _0x2bacb3 & 7;
              _0x2bacb3 >>>= 3;
              _0x1105ea -= 3;
            }
            while (_0x2458ac.have < 19) {
              _0x2458ac.lens[_0x368563[_0x2458ac.have++]] = 0;
            }
            _0x2458ac.lencode = _0x2458ac.lendyn;
            _0x2458ac.lenbits = 7;
            var _0x42cd5d = {
              bits: _0x2458ac.lenbits
            };
            _0x4521d6 = _0x42cd5d;
            _0x59becd = _0x43d40f(_0x501a5a, _0x2458ac.lens, 0, 19, _0x2458ac.lencode, 0, _0x2458ac.work, _0x4521d6);
            _0x2458ac.lenbits = _0x4521d6.bits;
            if (_0x59becd) {
              _0xbf04c7.msg = "invalid code lengths set";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.have = 0;
            _0x2458ac.mode = _0x35a8cf;
          case _0x35a8cf:
            while (_0x2458ac.have < _0x2458ac.nlen + _0x2458ac.ndist) {
              for (;;) {
                _0x504982 = _0x2458ac.lencode[_0x2bacb3 & (1 << _0x2458ac.lenbits) - 1];
                _0x753961 = _0x504982 >>> 24;
                _0x4209c7 = _0x504982 >>> 16 & 255;
                _0x339dc6 = _0x504982 & 65535;
                if (_0x753961 <= _0x1105ea) {
                  break;
                }
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              if (_0x339dc6 < 16) {
                _0x2bacb3 >>>= _0x753961;
                _0x1105ea -= _0x753961;
                _0x2458ac.lens[_0x2458ac.have++] = _0x339dc6;
              } else {
                if (_0x339dc6 === 16) {
                  _0x216f39 = _0x753961 + 2;
                  while (_0x1105ea < _0x216f39) {
                    if (_0x4f61f1 === 0) {
                      break _0x1ae489;
                    }
                    _0x4f61f1--;
                    _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                    _0x1105ea += 8;
                  }
                  _0x2bacb3 >>>= _0x753961;
                  _0x1105ea -= _0x753961;
                  if (_0x2458ac.have === 0) {
                    _0xbf04c7.msg = "invalid bit length repeat";
                    _0x2458ac.mode = _0x365705;
                    break;
                  }
                  _0x384d5a = _0x2458ac.lens[_0x2458ac.have - 1];
                  _0x499921 = 3 + (_0x2bacb3 & 3);
                  _0x2bacb3 >>>= 2;
                  _0x1105ea -= 2;
                } else if (_0x339dc6 === 17) {
                  _0x216f39 = _0x753961 + 3;
                  while (_0x1105ea < _0x216f39) {
                    if (_0x4f61f1 === 0) {
                      break _0x1ae489;
                    }
                    _0x4f61f1--;
                    _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                    _0x1105ea += 8;
                  }
                  _0x2bacb3 >>>= _0x753961;
                  _0x1105ea -= _0x753961;
                  _0x384d5a = 0;
                  _0x499921 = 3 + (_0x2bacb3 & 7);
                  _0x2bacb3 >>>= 3;
                  _0x1105ea -= 3;
                } else {
                  _0x216f39 = _0x753961 + 7;
                  while (_0x1105ea < _0x216f39) {
                    if (_0x4f61f1 === 0) {
                      break _0x1ae489;
                    }
                    _0x4f61f1--;
                    _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                    _0x1105ea += 8;
                  }
                  _0x2bacb3 >>>= _0x753961;
                  _0x1105ea -= _0x753961;
                  _0x384d5a = 0;
                  _0x499921 = 11 + (_0x2bacb3 & 127);
                  _0x2bacb3 >>>= 7;
                  _0x1105ea -= 7;
                }
                if (_0x2458ac.have + _0x499921 > _0x2458ac.nlen + _0x2458ac.ndist) {
                  _0xbf04c7.msg = "invalid bit length repeat";
                  _0x2458ac.mode = _0x365705;
                  break;
                }
                while (_0x499921--) {
                  _0x2458ac.lens[_0x2458ac.have++] = _0x384d5a;
                }
              }
            }
            if (_0x2458ac.mode === _0x365705) {
              break;
            }
            if (_0x2458ac.lens[256] === 0) {
              _0xbf04c7.msg = "invalid code -- missing end-of-block";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.lenbits = 9;
            var _0x4a9923 = {
              bits: _0x2458ac.lenbits
            };
            _0x4521d6 = _0x4a9923;
            _0x59becd = _0x43d40f(_0x350835, _0x2458ac.lens, 0, _0x2458ac.nlen, _0x2458ac.lencode, 0, _0x2458ac.work, _0x4521d6);
            _0x2458ac.lenbits = _0x4521d6.bits;
            if (_0x59becd) {
              _0xbf04c7.msg = "invalid literal/lengths set";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.distbits = 6;
            _0x2458ac.distcode = _0x2458ac.distdyn;
            var _0x1ecf97 = {
              bits: _0x2458ac.distbits
            };
            _0x4521d6 = _0x1ecf97;
            _0x59becd = _0x43d40f(_0x550a2d, _0x2458ac.lens, _0x2458ac.nlen, _0x2458ac.ndist, _0x2458ac.distcode, 0, _0x2458ac.work, _0x4521d6);
            _0x2458ac.distbits = _0x4521d6.bits;
            if (_0x59becd) {
              _0xbf04c7.msg = "invalid distances set";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.mode = _0x437f2a;
            if (_0x337cfe === _0x110c11) {
              break _0x1ae489;
            }
          case _0x437f2a:
            _0x2458ac.mode = _0x2cbbcb;
          case _0x2cbbcb:
            if (_0x4f61f1 >= 6 && _0x1c4ce9 >= 258) {
              _0xbf04c7.next_out = _0x200f1d;
              _0xbf04c7.avail_out = _0x1c4ce9;
              _0xbf04c7.next_in = _0x3e2f6d;
              _0xbf04c7.avail_in = _0x4f61f1;
              _0x2458ac.hold = _0x2bacb3;
              _0x2458ac.bits = _0x1105ea;
              _0x53d595(_0xbf04c7, _0x358642);
              _0x200f1d = _0xbf04c7.next_out;
              _0x52679a = _0xbf04c7.output;
              _0x1c4ce9 = _0xbf04c7.avail_out;
              _0x3e2f6d = _0xbf04c7.next_in;
              _0x135a28 = _0xbf04c7.input;
              _0x4f61f1 = _0xbf04c7.avail_in;
              _0x2bacb3 = _0x2458ac.hold;
              _0x1105ea = _0x2458ac.bits;
              if (_0x2458ac.mode === _0x4a365b) {
                _0x2458ac.back = -1;
              }
              break;
            }
            _0x2458ac.back = 0;
            for (;;) {
              _0x504982 = _0x2458ac.lencode[_0x2bacb3 & (1 << _0x2458ac.lenbits) - 1];
              _0x753961 = _0x504982 >>> 24;
              _0x4209c7 = _0x504982 >>> 16 & 255;
              _0x339dc6 = _0x504982 & 65535;
              if (_0x753961 <= _0x1105ea) {
                break;
              }
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            if (_0x4209c7 && (_0x4209c7 & 240) === 0) {
              _0x17606a = _0x753961;
              _0x23d669 = _0x4209c7;
              _0x49c7ac = _0x339dc6;
              for (;;) {
                _0x504982 = _0x2458ac.lencode[_0x49c7ac + ((_0x2bacb3 & (1 << _0x17606a + _0x23d669) - 1) >> _0x17606a)];
                _0x753961 = _0x504982 >>> 24;
                _0x4209c7 = _0x504982 >>> 16 & 255;
                _0x339dc6 = _0x504982 & 65535;
                if (_0x17606a + _0x753961 <= _0x1105ea) {
                  break;
                }
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x2bacb3 >>>= _0x17606a;
              _0x1105ea -= _0x17606a;
              _0x2458ac.back += _0x17606a;
            }
            _0x2bacb3 >>>= _0x753961;
            _0x1105ea -= _0x753961;
            _0x2458ac.back += _0x753961;
            _0x2458ac.length = _0x339dc6;
            if (_0x4209c7 === 0) {
              _0x2458ac.mode = _0x430775;
              break;
            }
            if (_0x4209c7 & 32) {
              _0x2458ac.back = -1;
              _0x2458ac.mode = _0x4a365b;
              break;
            }
            if (_0x4209c7 & 64) {
              _0xbf04c7.msg = "invalid literal/length code";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.extra = _0x4209c7 & 15;
            _0x2458ac.mode = _0x2ffcbe;
          case _0x2ffcbe:
            if (_0x2458ac.extra) {
              _0x216f39 = _0x2458ac.extra;
              while (_0x1105ea < _0x216f39) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x2458ac.length += _0x2bacb3 & (1 << _0x2458ac.extra) - 1;
              _0x2bacb3 >>>= _0x2458ac.extra;
              _0x1105ea -= _0x2458ac.extra;
              _0x2458ac.back += _0x2458ac.extra;
            }
            _0x2458ac.was = _0x2458ac.length;
            _0x2458ac.mode = _0xea0a0e;
          case _0xea0a0e:
            for (;;) {
              _0x504982 = _0x2458ac.distcode[_0x2bacb3 & (1 << _0x2458ac.distbits) - 1];
              _0x753961 = _0x504982 >>> 24;
              _0x4209c7 = _0x504982 >>> 16 & 255;
              _0x339dc6 = _0x504982 & 65535;
              if (_0x753961 <= _0x1105ea) {
                break;
              }
              if (_0x4f61f1 === 0) {
                break _0x1ae489;
              }
              _0x4f61f1--;
              _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
              _0x1105ea += 8;
            }
            if ((_0x4209c7 & 240) === 0) {
              _0x17606a = _0x753961;
              _0x23d669 = _0x4209c7;
              _0x49c7ac = _0x339dc6;
              for (;;) {
                _0x504982 = _0x2458ac.distcode[_0x49c7ac + ((_0x2bacb3 & (1 << _0x17606a + _0x23d669) - 1) >> _0x17606a)];
                _0x753961 = _0x504982 >>> 24;
                _0x4209c7 = _0x504982 >>> 16 & 255;
                _0x339dc6 = _0x504982 & 65535;
                if (_0x17606a + _0x753961 <= _0x1105ea) {
                  break;
                }
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x2bacb3 >>>= _0x17606a;
              _0x1105ea -= _0x17606a;
              _0x2458ac.back += _0x17606a;
            }
            _0x2bacb3 >>>= _0x753961;
            _0x1105ea -= _0x753961;
            _0x2458ac.back += _0x753961;
            if (_0x4209c7 & 64) {
              _0xbf04c7.msg = "invalid distance code";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.offset = _0x339dc6;
            _0x2458ac.extra = _0x4209c7 & 15;
            _0x2458ac.mode = _0x3cca22;
          case _0x3cca22:
            if (_0x2458ac.extra) {
              _0x216f39 = _0x2458ac.extra;
              while (_0x1105ea < _0x216f39) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x2458ac.offset += _0x2bacb3 & (1 << _0x2458ac.extra) - 1;
              _0x2bacb3 >>>= _0x2458ac.extra;
              _0x1105ea -= _0x2458ac.extra;
              _0x2458ac.back += _0x2458ac.extra;
            }
            if (_0x2458ac.offset > _0x2458ac.dmax) {
              _0xbf04c7.msg = "invalid distance too far back";
              _0x2458ac.mode = _0x365705;
              break;
            }
            _0x2458ac.mode = _0x2055f1;
          case _0x2055f1:
            if (_0x1c4ce9 === 0) {
              break _0x1ae489;
            }
            _0x499921 = _0x358642 - _0x1c4ce9;
            if (_0x2458ac.offset > _0x499921) {
              _0x499921 = _0x2458ac.offset - _0x499921;
              if (_0x499921 > _0x2458ac.whave) {
                if (_0x2458ac.sane) {
                  _0xbf04c7.msg = "invalid distance too far back";
                  _0x2458ac.mode = _0x365705;
                  break;
                }
              }
              if (_0x499921 > _0x2458ac.wnext) {
                _0x499921 -= _0x2458ac.wnext;
                _0x2ad4ac = _0x2458ac.wsize - _0x499921;
              } else {
                _0x2ad4ac = _0x2458ac.wnext - _0x499921;
              }
              if (_0x499921 > _0x2458ac.length) {
                _0x499921 = _0x2458ac.length;
              }
              _0x41efa3 = _0x2458ac.window;
            } else {
              _0x41efa3 = _0x52679a;
              _0x2ad4ac = _0x200f1d - _0x2458ac.offset;
              _0x499921 = _0x2458ac.length;
            }
            if (_0x499921 > _0x1c4ce9) {
              _0x499921 = _0x1c4ce9;
            }
            _0x1c4ce9 -= _0x499921;
            _0x2458ac.length -= _0x499921;
            do {
              _0x52679a[_0x200f1d++] = _0x41efa3[_0x2ad4ac++];
            } while (--_0x499921);
            if (_0x2458ac.length === 0) {
              _0x2458ac.mode = _0x2cbbcb;
            }
            break;
          case _0x430775:
            if (_0x1c4ce9 === 0) {
              break _0x1ae489;
            }
            _0x52679a[_0x200f1d++] = _0x2458ac.length;
            _0x1c4ce9--;
            _0x2458ac.mode = _0x2cbbcb;
            break;
          case _0x4f9da2:
            if (_0x2458ac.wrap) {
              while (_0x1105ea < 32) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 |= _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              _0x358642 -= _0x1c4ce9;
              _0xbf04c7.total_out += _0x358642;
              _0x2458ac.total += _0x358642;
              if (_0x2458ac.wrap & 4 && _0x358642) {
                _0xbf04c7.adler = _0x2458ac.check = _0x2458ac.flags ? _0x21fadc(_0x2458ac.check, _0x52679a, _0x358642, _0x200f1d - _0x358642) : _0x4b4483(_0x2458ac.check, _0x52679a, _0x358642, _0x200f1d - _0x358642);
              }
              _0x358642 = _0x1c4ce9;
              if (_0x2458ac.wrap & 4 && (_0x2458ac.flags ? _0x2bacb3 : _0x41d181(_0x2bacb3)) !== _0x2458ac.check) {
                _0xbf04c7.msg = "incorrect data check";
                _0x2458ac.mode = _0x365705;
                break;
              }
              _0x2bacb3 = 0;
              _0x1105ea = 0;
            }
            _0x2458ac.mode = _0x27a973;
          case _0x27a973:
            if (_0x2458ac.wrap && _0x2458ac.flags) {
              while (_0x1105ea < 32) {
                if (_0x4f61f1 === 0) {
                  break _0x1ae489;
                }
                _0x4f61f1--;
                _0x2bacb3 += _0x135a28[_0x3e2f6d++] << _0x1105ea;
                _0x1105ea += 8;
              }
              if (_0x2458ac.wrap & 4 && _0x2bacb3 !== (_0x2458ac.total & 4294967295)) {
                _0xbf04c7.msg = "incorrect length check";
                _0x2458ac.mode = _0x365705;
                break;
              }
              _0x2bacb3 = 0;
              _0x1105ea = 0;
            }
            _0x2458ac.mode = _0x27c990;
          case _0x27c990:
            _0x59becd = _0x2bbd84;
            break _0x1ae489;
          case _0x365705:
            _0x59becd = _0x8b9f46;
            break _0x1ae489;
          case _0x3d7e2a:
            return _0x1e17a7;
          case _0x34d4c8:
          default:
            return _0x2b61b4;
        }
      }
      _0xbf04c7.next_out = _0x200f1d;
      _0xbf04c7.avail_out = _0x1c4ce9;
      _0xbf04c7.next_in = _0x3e2f6d;
      _0xbf04c7.avail_in = _0x4f61f1;
      _0x2458ac.hold = _0x2bacb3;
      _0x2458ac.bits = _0x1105ea;
      if (_0x2458ac.wsize || _0x358642 !== _0xbf04c7.avail_out && _0x2458ac.mode < _0x365705 && (_0x2458ac.mode < _0x4f9da2 || _0x337cfe !== _0x20b7df)) {
        if (_0x3e43df(_0xbf04c7, _0xbf04c7.output, _0xbf04c7.next_out, _0x358642 - _0xbf04c7.avail_out)) ;
      }
      _0x6b2266 -= _0xbf04c7.avail_in;
      _0x358642 -= _0xbf04c7.avail_out;
      _0xbf04c7.total_in += _0x6b2266;
      _0xbf04c7.total_out += _0x358642;
      _0x2458ac.total += _0x358642;
      if (_0x2458ac.wrap & 4 && _0x358642) {
        _0xbf04c7.adler = _0x2458ac.check = _0x2458ac.flags ? _0x21fadc(_0x2458ac.check, _0x52679a, _0x358642, _0xbf04c7.next_out - _0x358642) : _0x4b4483(_0x2458ac.check, _0x52679a, _0x358642, _0xbf04c7.next_out - _0x358642);
      }
      _0xbf04c7.data_type = _0x2458ac.bits + (_0x2458ac.last ? 64 : 0) + (_0x2458ac.mode === _0x4a365b ? 128 : 0) + (_0x2458ac.mode === _0x437f2a || _0x2458ac.mode === _0x428ab1 ? 256 : 0);
      if ((_0x6b2266 === 0 && _0x358642 === 0 || _0x337cfe === _0x20b7df) && _0x59becd === _0x2db431) {
        _0x59becd = _0x46afbc;
      }
      return _0x59becd;
    };
    const _0x260a9e = _0x33edb8 => {
      if (_0x5e33b8(_0x33edb8)) {
        return _0x2b61b4;
      }
      let _0x3402ae = _0x33edb8.state;
      _0x3402ae.window &&= null;
      _0x33edb8.state = null;
      return _0x2db431;
    };
    const _0x20ab70 = (_0x48f85e, _0x14a640) => {
      if (_0x5e33b8(_0x48f85e)) {
        return _0x2b61b4;
      }
      const _0xd2466 = _0x48f85e.state;
      if ((_0xd2466.wrap & 2) === 0) {
        return _0x2b61b4;
      }
      _0xd2466.head = _0x14a640;
      _0x14a640.done = false;
      return _0x2db431;
    };
    const _0x19f099 = (_0x369629, _0xa90f03) => {
      const _0x4fef7f = _0xa90f03.length;
      let _0x5aa3e8;
      let _0x30e989;
      let _0x3dd866;
      if (_0x5e33b8(_0x369629)) {
        return _0x2b61b4;
      }
      _0x5aa3e8 = _0x369629.state;
      if (_0x5aa3e8.wrap !== 0 && _0x5aa3e8.mode !== _0x114d9a) {
        return _0x2b61b4;
      }
      if (_0x5aa3e8.mode === _0x114d9a) {
        _0x30e989 = 1;
        _0x30e989 = _0x4b4483(_0x30e989, _0xa90f03, _0x4fef7f, 0);
        if (_0x30e989 !== _0x5aa3e8.check) {
          return _0x8b9f46;
        }
      }
      _0x3dd866 = _0x3e43df(_0x369629, _0xa90f03, _0x4fef7f, _0x4fef7f);
      if (_0x3dd866) {
        _0x5aa3e8.mode = _0x3d7e2a;
        return _0x1e17a7;
      }
      _0x5aa3e8.havedict = 1;
      return _0x2db431;
    };
    var _0x559e10 = _0x4af691;
    var _0x511523 = _0xa63174;
    var _0x33f906 = _0x2baee5;
    var _0x3d970c = _0x590cdf;
    var _0x4ce2fc = _0x3c25f2;
    var _0x4e0fa4 = _0x1bfcdf;
    var _0xccc13d = _0x260a9e;
    var _0x4d1a53 = _0x20ab70;
    var _0x2cc936 = _0x19f099;
    var _0x3a7c78 = "pako inflate (from Nodeca project)";
    var _0x4399a9 = {
      inflateReset: _0x559e10,
      inflateReset2: _0x511523,
      inflateResetKeep: _0x33f906,
      inflateInit: _0x3d970c,
      inflateInit2: _0x4ce2fc,
      inflate: _0x4e0fa4,
      inflateEnd: _0xccc13d,
      inflateGetHeader: _0x4d1a53,
      inflateSetDictionary: _0x2cc936,
      inflateInfo: _0x3a7c78
    };
    var _0x42c026 = _0x4399a9;
    function _0x3fae0e() {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = false;
    }
    var _0x36898e = _0x3fae0e;
    const _0x1dc341 = Object.prototype.toString;
    const {
      Z_NO_FLUSH: _0x25cb7e,
      Z_FINISH: _0x114ef4,
      Z_OK: _0x535809,
      Z_STREAM_END: _0x2c7d99,
      Z_NEED_DICT: _0x4ca3bd,
      Z_STREAM_ERROR: _0x55e66d,
      Z_DATA_ERROR: _0x449787,
      Z_MEM_ERROR: _0x3b72ce
    } = _0xe9a438;
    function _0x2ea422(_0x2e2c6c) {
      this.options = _0x4a091f.assign({
        chunkSize: 65536,
        windowBits: 15,
        to: ""
      }, _0x2e2c6c || {});
      const _0x397e64 = this.options;
      if (_0x397e64.raw && _0x397e64.windowBits >= 0 && _0x397e64.windowBits < 16) {
        _0x397e64.windowBits = -_0x397e64.windowBits;
        if (_0x397e64.windowBits === 0) {
          _0x397e64.windowBits = -15;
        }
      }
      if (_0x397e64.windowBits >= 0 && _0x397e64.windowBits < 16 && (!_0x2e2c6c || !_0x2e2c6c.windowBits)) {
        _0x397e64.windowBits += 32;
      }
      if (_0x397e64.windowBits > 15 && _0x397e64.windowBits < 48) {
        if ((_0x397e64.windowBits & 15) === 0) {
          _0x397e64.windowBits |= 15;
        }
      }
      this.err = 0;
      this.msg = "";
      this.ended = false;
      this.chunks = [];
      this.strm = new _0x2ccc16();
      this.strm.avail_out = 0;
      let _0x391624 = _0x42c026.inflateInit2(this.strm, _0x397e64.windowBits);
      if (_0x391624 !== _0x535809) {
        throw new Error(_0x4bb3a9[_0x391624]);
      }
      this.header = new _0x36898e();
      _0x42c026.inflateGetHeader(this.strm, this.header);
      if (_0x397e64.dictionary) {
        if (typeof _0x397e64.dictionary === "string") {
          _0x397e64.dictionary = _0xef7d93.string2buf(_0x397e64.dictionary);
        } else if (_0x1dc341.call(_0x397e64.dictionary) === "[object ArrayBuffer]") {
          _0x397e64.dictionary = new Uint8Array(_0x397e64.dictionary);
        }
        if (_0x397e64.raw) {
          _0x391624 = _0x42c026.inflateSetDictionary(this.strm, _0x397e64.dictionary);
          if (_0x391624 !== _0x535809) {
            throw new Error(_0x4bb3a9[_0x391624]);
          }
        }
      }
    }
    _0x2ea422.prototype.push = function (_0x1b7a13, _0xa26319) {
      const _0x2cfd30 = this.strm;
      const _0x2e6421 = this.options.chunkSize;
      const _0x1206c9 = this.options.dictionary;
      let _0x1b55d6;
      let _0x2e9975;
      let _0x40cc5d;
      if (this.ended) {
        return false;
      }
      if (_0xa26319 === ~~_0xa26319) {
        _0x2e9975 = _0xa26319;
      } else {
        _0x2e9975 = _0xa26319 === true ? _0x114ef4 : _0x25cb7e;
      }
      if (_0x1dc341.call(_0x1b7a13) === "[object ArrayBuffer]") {
        _0x2cfd30.input = new Uint8Array(_0x1b7a13);
      } else {
        _0x2cfd30.input = _0x1b7a13;
      }
      _0x2cfd30.next_in = 0;
      _0x2cfd30.avail_in = _0x2cfd30.input.length;
      for (;;) {
        if (_0x2cfd30.avail_out === 0) {
          _0x2cfd30.output = new Uint8Array(_0x2e6421);
          _0x2cfd30.next_out = 0;
          _0x2cfd30.avail_out = _0x2e6421;
        }
        _0x1b55d6 = _0x42c026.inflate(_0x2cfd30, _0x2e9975);
        if (_0x1b55d6 === _0x4ca3bd && _0x1206c9) {
          _0x1b55d6 = _0x42c026.inflateSetDictionary(_0x2cfd30, _0x1206c9);
          if (_0x1b55d6 === _0x535809) {
            _0x1b55d6 = _0x42c026.inflate(_0x2cfd30, _0x2e9975);
          } else if (_0x1b55d6 === _0x449787) {
            _0x1b55d6 = _0x4ca3bd;
          }
        }
        while (_0x2cfd30.avail_in > 0 && _0x1b55d6 === _0x2c7d99 && _0x2cfd30.state.wrap > 0 && _0x1b7a13[_0x2cfd30.next_in] !== 0) {
          _0x42c026.inflateReset(_0x2cfd30);
          _0x1b55d6 = _0x42c026.inflate(_0x2cfd30, _0x2e9975);
        }
        switch (_0x1b55d6) {
          case _0x55e66d:
          case _0x449787:
          case _0x4ca3bd:
          case _0x3b72ce:
            this.onEnd(_0x1b55d6);
            this.ended = true;
            return false;
        }
        _0x40cc5d = _0x2cfd30.avail_out;
        if (_0x2cfd30.next_out) {
          if (_0x2cfd30.avail_out === 0 || _0x1b55d6 === _0x2c7d99) {
            if (this.options.to === "string") {
              let _0x3c7039 = _0xef7d93.utf8border(_0x2cfd30.output, _0x2cfd30.next_out);
              let _0x436c59 = _0x2cfd30.next_out - _0x3c7039;
              let _0x2ab03c = _0xef7d93.buf2string(_0x2cfd30.output, _0x3c7039);
              _0x2cfd30.next_out = _0x436c59;
              _0x2cfd30.avail_out = _0x2e6421 - _0x436c59;
              if (_0x436c59) {
                _0x2cfd30.output.set(_0x2cfd30.output.subarray(_0x3c7039, _0x3c7039 + _0x436c59), 0);
              }
              this.onData(_0x2ab03c);
            } else {
              this.onData(_0x2cfd30.output.length === _0x2cfd30.next_out ? _0x2cfd30.output : _0x2cfd30.output.subarray(0, _0x2cfd30.next_out));
            }
          }
        }
        if (_0x1b55d6 === _0x535809 && _0x40cc5d === 0) {
          continue;
        }
        if (_0x1b55d6 === _0x2c7d99) {
          _0x1b55d6 = _0x42c026.inflateEnd(this.strm);
          this.onEnd(_0x1b55d6);
          this.ended = true;
          return true;
        }
        if (_0x2cfd30.avail_in === 0) {
          break;
        }
      }
      return true;
    };
    _0x2ea422.prototype.onData = function (_0xa0f042) {
      this.chunks.push(_0xa0f042);
    };
    _0x2ea422.prototype.onEnd = function (_0x35905b) {
      if (_0x35905b === _0x535809) {
        if (this.options.to === "string") {
          this.result = this.chunks.join("");
        } else {
          this.result = _0x4a091f.flattenChunks(this.chunks);
        }
      }
      this.chunks = [];
      this.err = _0x35905b;
      this.msg = this.strm.msg;
    };
    function _0x1f7c2d(_0x39815a, _0x2000ca) {
      const _0xfe2da = new _0x2ea422(_0x2000ca);
      _0xfe2da.push(_0x39815a);
      if (_0xfe2da.err) {
        throw _0xfe2da.msg || _0x4bb3a9[_0xfe2da.err];
      }
      return _0xfe2da.result;
    }
    function _0x45b15a(_0x32dd1f, _0x38ccbb) {
      _0x38ccbb = _0x38ccbb || {};
      _0x38ccbb.raw = true;
      return _0x1f7c2d(_0x32dd1f, _0x38ccbb);
    }
    var _0x17ac10 = _0x2ea422;
    var _0x268725 = _0x1f7c2d;
    var _0x56942c = _0x45b15a;
    var _0x311e5d = _0x1f7c2d;
    var _0x95cc49 = _0xe9a438;
    var _0xc1d0a4 = {
      Inflate: _0x17ac10,
      inflate: _0x268725,
      inflateRaw: _0x56942c,
      ungzip: _0x311e5d,
      constants: _0x95cc49
    };
    var _0x3ab636 = _0xc1d0a4;
    const {
      Deflate: _0x54e32e,
      deflate: _0x5e099f,
      deflateRaw: _0x45e69e,
      gzip: _0x186179
    } = _0x4bf227;
    const {
      Inflate: _0x1ce307,
      inflate: _0x18ac33,
      inflateRaw: _0x3fffcc,
      ungzip: _0x3d4b3a
    } = _0x3ab636;
    var _0x5734bd = _0x54e32e;
    var _0x26a22d = _0x5e099f;
    var _0xec167a = _0x45e69e;
    var _0x497a39 = _0x186179;
    var _0x456f41 = _0x1ce307;
    var _0x30b87f = _0x18ac33;
    var _0x1ab0b1 = _0x3fffcc;
    var _0x307b1b = _0x3d4b3a;
    var _0x505d9c = _0xe9a438;
    var _0x37fa23 = {
      Deflate: _0x5734bd,
      deflate: _0x26a22d,
      deflateRaw: _0xec167a,
      gzip: _0x497a39,
      Inflate: _0x456f41,
      inflate: _0x30b87f,
      inflateRaw: _0x1ab0b1,
      ungzip: _0x307b1b,
      constants: _0x505d9c
    };
    var _0x208b00 = _0x37fa23;
    var _0xdddd5a = _0x5f5650(577);
    ;
    var _0x3275c9;
    (function (_0x4ae074) {
      _0x4ae074.assertEqual = _0x5cd1d9 => _0x5cd1d9;
      function _0x5c0d25(_0x4e17c8) {}
      _0x4ae074.assertIs = _0x5c0d25;
      function _0x50aeba(_0x381e4b) {
        throw new Error();
      }
      _0x4ae074.assertNever = _0x50aeba;
      _0x4ae074.arrayToEnum = _0x26d8ce => {
        const _0x372a63 = {};
        for (const _0x4c1c04 of _0x26d8ce) {
          _0x372a63[_0x4c1c04] = _0x4c1c04;
        }
        return _0x372a63;
      };
      _0x4ae074.getValidEnumValues = _0x4be316 => {
        const _0x57a4f8 = _0x4ae074.objectKeys(_0x4be316).filter(_0x1c571e => typeof _0x4be316[_0x4be316[_0x1c571e]] !== "number");
        const _0x3bed65 = {};
        for (const _0x56aafc of _0x57a4f8) {
          _0x3bed65[_0x56aafc] = _0x4be316[_0x56aafc];
        }
        return _0x4ae074.objectValues(_0x3bed65);
      };
      _0x4ae074.objectValues = _0x15ad3b => {
        return _0x4ae074.objectKeys(_0x15ad3b).map(function (_0x6decd0) {
          return _0x15ad3b[_0x6decd0];
        });
      };
      _0x4ae074.objectKeys = typeof Object.keys === "function" ? _0xc1c64b => Object.keys(_0xc1c64b) : _0x1f812b => {
        const _0x24b31b = [];
        for (const _0xfd2c6a in _0x1f812b) {
          if (Object.prototype.hasOwnProperty.call(_0x1f812b, _0xfd2c6a)) {
            _0x24b31b.push(_0xfd2c6a);
          }
        }
        return _0x24b31b;
      };
      _0x4ae074.find = (_0x171706, _0x23136c) => {
        for (const _0x1b0317 of _0x171706) {
          if (_0x23136c(_0x1b0317)) {
            return _0x1b0317;
          }
        }
        return undefined;
      };
      _0x4ae074.isInteger = typeof Number.isInteger === "function" ? _0x1e03fc => Number.isInteger(_0x1e03fc) : _0x214a06 => typeof _0x214a06 === "number" && isFinite(_0x214a06) && Math.floor(_0x214a06) === _0x214a06;
      function _0x2ec83e(_0x182fb4, _0x1a30cc = " | ") {
        return _0x182fb4.map(_0x1d4363 => typeof _0x1d4363 === "string" ? "'" + _0x1d4363 + "'" : _0x1d4363).join(_0x1a30cc);
      }
      _0x4ae074.joinValues = _0x2ec83e;
      _0x4ae074.jsonStringifyReplacer = (_0x36f9d3, _0x403c4c) => {
        if (typeof _0x403c4c === "bigint") {
          return _0x403c4c.toString();
        }
        return _0x403c4c;
      };
    })(_0x3275c9 ||= {});
    var _0x5dd642;
    (function (_0xf21fed) {
      _0xf21fed.mergeShapes = (_0x3f69d3, _0x41bd9d) => {
        var _0xa9eee7 = {
          ..._0x3f69d3,
          ..._0x41bd9d
        };
        return _0xa9eee7;
      };
    })(_0x5dd642 ||= {});
    const _0x49070e = _0x3275c9.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"]);
    const _0x1ba0a2 = _0x1b5fe1 => {
      const _0x20248e = typeof _0x1b5fe1;
      switch (_0x20248e) {
        case "undefined":
          return _0x49070e.undefined;
        case "string":
          return _0x49070e.string;
        case "number":
          if (isNaN(_0x1b5fe1)) {
            return _0x49070e.nan;
          } else {
            return _0x49070e.number;
          }
        case "boolean":
          return _0x49070e.boolean;
        case "function":
          return _0x49070e.function;
        case "bigint":
          return _0x49070e.bigint;
        case "symbol":
          return _0x49070e.symbol;
        case "object":
          if (Array.isArray(_0x1b5fe1)) {
            return _0x49070e.array;
          }
          if (_0x1b5fe1 === null) {
            return _0x49070e.null;
          }
          if (_0x1b5fe1.then && typeof _0x1b5fe1.then === "function" && _0x1b5fe1.catch && typeof _0x1b5fe1.catch === "function") {
            return _0x49070e.promise;
          }
          if (typeof Map !== "undefined" && _0x1b5fe1 instanceof Map) {
            return _0x49070e.map;
          }
          if (typeof Set !== "undefined" && _0x1b5fe1 instanceof Set) {
            return _0x49070e.set;
          }
          if (typeof Date !== "undefined" && _0x1b5fe1 instanceof Date) {
            return _0x49070e.date;
          }
          return _0x49070e.object;
        default:
          return _0x49070e.unknown;
      }
    };
    const _0x31073a = _0x3275c9.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of", "not_finite"]);
    const _0x47fa52 = _0x44d6d8 => {
      const _0x4eb546 = JSON.stringify(_0x44d6d8, null, 2);
      return _0x4eb546.replace(/"([^"]+)":/g, "$1:");
    };
    class _0xe3343b extends Error {
      constructor(_0x4ffd7f) {
        super();
        this.issues = [];
        this.addIssue = _0x3fa7ad => {
          this.issues = [...this.issues, _0x3fa7ad];
        };
        this.addIssues = (_0x5a09a4 = []) => {
          this.issues = [...this.issues, ..._0x5a09a4];
        };
        const _0x41e2f3 = new.target.prototype;
        if (Object.setPrototypeOf) {
          Object.setPrototypeOf(this, _0x41e2f3);
        } else {
          this.__proto__ = _0x41e2f3;
        }
        this.name = "ZodError";
        this.issues = _0x4ffd7f;
      }
      get errors() {
        return this.issues;
      }
      format(_0x35f1bd) {
        const _0x2e2f7f = _0x35f1bd || function (_0x18ddeb) {
          return _0x18ddeb.message;
        };
        const _0xc3e35c = {
          _errors: []
        };
        const _0x5406c8 = _0x37ec54 => {
          for (const _0x9a91f5 of _0x37ec54.issues) {
            if (_0x9a91f5.code === "invalid_union") {
              _0x9a91f5.unionErrors.map(_0x5406c8);
            } else if (_0x9a91f5.code === "invalid_return_type") {
              _0x5406c8(_0x9a91f5.returnTypeError);
            } else if (_0x9a91f5.code === "invalid_arguments") {
              _0x5406c8(_0x9a91f5.argumentsError);
            } else if (_0x9a91f5.path.length === 0) {
              _0xc3e35c._errors.push(_0x2e2f7f(_0x9a91f5));
            } else {
              let _0xcb8c7d = _0xc3e35c;
              let _0x425724 = 0;
              while (_0x425724 < _0x9a91f5.path.length) {
                const _0xd00545 = _0x9a91f5.path[_0x425724];
                const _0x16dac2 = _0x425724 === _0x9a91f5.path.length - 1;
                if (!_0x16dac2) {
                  _0xcb8c7d[_0xd00545] = _0xcb8c7d[_0xd00545] || {
                    _errors: []
                  };
                } else {
                  _0xcb8c7d[_0xd00545] = _0xcb8c7d[_0xd00545] || {
                    _errors: []
                  };
                  _0xcb8c7d[_0xd00545]._errors.push(_0x2e2f7f(_0x9a91f5));
                }
                _0xcb8c7d = _0xcb8c7d[_0xd00545];
                _0x425724++;
              }
            }
          }
        };
        _0x5406c8(this);
        return _0xc3e35c;
      }
      toString() {
        return this.message;
      }
      get message() {
        return JSON.stringify(this.issues, _0x3275c9.jsonStringifyReplacer, 2);
      }
      get isEmpty() {
        return this.issues.length === 0;
      }
      flatten(_0x314b26 = _0x2b50da => _0x2b50da.message) {
        const _0x26d2e7 = {};
        const _0x2b928f = [];
        for (const _0x1c9ec8 of this.issues) {
          if (_0x1c9ec8.path.length > 0) {
            _0x26d2e7[_0x1c9ec8.path[0]] = _0x26d2e7[_0x1c9ec8.path[0]] || [];
            _0x26d2e7[_0x1c9ec8.path[0]].push(_0x314b26(_0x1c9ec8));
          } else {
            _0x2b928f.push(_0x314b26(_0x1c9ec8));
          }
        }
        var _0x18c394 = {
          formErrors: _0x2b928f,
          fieldErrors: _0x26d2e7
        };
        return _0x18c394;
      }
      get formErrors() {
        return this.flatten();
      }
    }
    _0xe3343b.create = _0x2548b3 => {
      const _0x1729b1 = new _0xe3343b(_0x2548b3);
      return _0x1729b1;
    };
    const _0x3464b8 = (_0xc91cb0, _0x160787) => {
      let _0x3853a6;
      switch (_0xc91cb0.code) {
        case _0x31073a.invalid_type:
          if (_0xc91cb0.received === _0x49070e.undefined) {
            _0x3853a6 = "Required";
          } else {
            _0x3853a6 = "Expected " + _0xc91cb0.expected + ", received " + _0xc91cb0.received;
          }
          break;
        case _0x31073a.invalid_literal:
          _0x3853a6 = "Invalid literal value, expected " + JSON.stringify(_0xc91cb0.expected, _0x3275c9.jsonStringifyReplacer);
          break;
        case _0x31073a.unrecognized_keys:
          _0x3853a6 = "Unrecognized key(s) in object: " + _0x3275c9.joinValues(_0xc91cb0.keys, ", ");
          break;
        case _0x31073a.invalid_union:
          _0x3853a6 = "Invalid input";
          break;
        case _0x31073a.invalid_union_discriminator:
          _0x3853a6 = "Invalid discriminator value. Expected " + _0x3275c9.joinValues(_0xc91cb0.options);
          break;
        case _0x31073a.invalid_enum_value:
          _0x3853a6 = "Invalid enum value. Expected " + _0x3275c9.joinValues(_0xc91cb0.options) + ", received '" + _0xc91cb0.received + "'";
          break;
        case _0x31073a.invalid_arguments:
          _0x3853a6 = "Invalid function arguments";
          break;
        case _0x31073a.invalid_return_type:
          _0x3853a6 = "Invalid function return type";
          break;
        case _0x31073a.invalid_date:
          _0x3853a6 = "Invalid date";
          break;
        case _0x31073a.invalid_string:
          if (typeof _0xc91cb0.validation === "object") {
            if ("includes" in _0xc91cb0.validation) {
              _0x3853a6 = "Invalid input: must include \"" + _0xc91cb0.validation.includes + "\"";
              if (typeof _0xc91cb0.validation.position === "number") {
                _0x3853a6 = _0x3853a6 + " at one or more positions greater than or equal to " + _0xc91cb0.validation.position;
              }
            } else if ("startsWith" in _0xc91cb0.validation) {
              _0x3853a6 = "Invalid input: must start with \"" + _0xc91cb0.validation.startsWith + "\"";
            } else if ("endsWith" in _0xc91cb0.validation) {
              _0x3853a6 = "Invalid input: must end with \"" + _0xc91cb0.validation.endsWith + "\"";
            } else {
              _0x3275c9.assertNever(_0xc91cb0.validation);
            }
          } else if (_0xc91cb0.validation !== "regex") {
            _0x3853a6 = "Invalid " + _0xc91cb0.validation;
          } else {
            _0x3853a6 = "Invalid";
          }
          break;
        case _0x31073a.too_small:
          if (_0xc91cb0.type === "array") {
            _0x3853a6 = "Array must contain " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "at least" : "more than") + " " + _0xc91cb0.minimum + " element(s)";
          } else if (_0xc91cb0.type === "string") {
            _0x3853a6 = "String must contain " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "at least" : "over") + " " + _0xc91cb0.minimum + " character(s)";
          } else if (_0xc91cb0.type === "number") {
            _0x3853a6 = "Number must be " + (_0xc91cb0.exact ? "exactly equal to " : _0xc91cb0.inclusive ? "greater than or equal to " : "greater than ") + _0xc91cb0.minimum;
          } else if (_0xc91cb0.type === "date") {
            _0x3853a6 = "Date must be " + (_0xc91cb0.exact ? "exactly equal to " : _0xc91cb0.inclusive ? "greater than or equal to " : "greater than ") + new Date(Number(_0xc91cb0.minimum));
          } else {
            _0x3853a6 = "Invalid input";
          }
          break;
        case _0x31073a.too_big:
          if (_0xc91cb0.type === "array") {
            _0x3853a6 = "Array must contain " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "at most" : "less than") + " " + _0xc91cb0.maximum + " element(s)";
          } else if (_0xc91cb0.type === "string") {
            _0x3853a6 = "String must contain " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "at most" : "under") + " " + _0xc91cb0.maximum + " character(s)";
          } else if (_0xc91cb0.type === "number") {
            _0x3853a6 = "Number must be " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "less than or equal to" : "less than") + " " + _0xc91cb0.maximum;
          } else if (_0xc91cb0.type === "bigint") {
            _0x3853a6 = "BigInt must be " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "less than or equal to" : "less than") + " " + _0xc91cb0.maximum;
          } else if (_0xc91cb0.type === "date") {
            _0x3853a6 = "Date must be " + (_0xc91cb0.exact ? "exactly" : _0xc91cb0.inclusive ? "smaller than or equal to" : "smaller than") + " " + new Date(Number(_0xc91cb0.maximum));
          } else {
            _0x3853a6 = "Invalid input";
          }
          break;
        case _0x31073a.custom:
          _0x3853a6 = "Invalid input";
          break;
        case _0x31073a.invalid_intersection_types:
          _0x3853a6 = "Intersection results could not be merged";
          break;
        case _0x31073a.not_multiple_of:
          _0x3853a6 = "Number must be a multiple of " + _0xc91cb0.multipleOf;
          break;
        case _0x31073a.not_finite:
          _0x3853a6 = "Number must be finite";
          break;
        default:
          _0x3853a6 = _0x160787.defaultError;
          _0x3275c9.assertNever(_0xc91cb0);
      }
      var _0x5d2ea4 = {
        message: _0x3853a6
      };
      return _0x5d2ea4;
    };
    let _0x53b7bf = _0x3464b8;
    function _0x2661a0(_0x2c22c2) {
      _0x53b7bf = _0x2c22c2;
    }
    function _0x41ab3c() {
      return _0x53b7bf;
    }
    const _0x2e65c4 = _0x159af0 => {
      const {
        data: _0x48a448,
        path: _0x1eacb6,
        errorMaps: _0x358286,
        issueData: _0x7323cf
      } = _0x159af0;
      const _0x3b1c8a = [..._0x1eacb6, ...(_0x7323cf.path || [])];
      var _0x35f7c9 = {
        ..._0x7323cf
      };
      _0x35f7c9.path = _0x3b1c8a;
      const _0x3b0b22 = _0x35f7c9;
      let _0x9f4b8b = "";
      const _0x176905 = _0x358286.filter(_0x25b243 => !!_0x25b243).slice().reverse();
      for (const _0x920d2d of _0x176905) {
        _0x9f4b8b = _0x920d2d(_0x3b0b22, {
          data: _0x48a448,
          defaultError: _0x9f4b8b
        }).message;
      }
      var _0x4bd018 = {
        ..._0x7323cf
      };
      _0x4bd018.path = _0x3b1c8a;
      _0x4bd018.message = _0x7323cf.message || _0x9f4b8b;
      return _0x4bd018;
    };
    const _0x115dbf = [];
    function _0x2f5996(_0x48ec1c, _0x3d5fe6) {
      const _0x1d70d8 = _0x2e65c4({
        issueData: _0x3d5fe6,
        data: _0x48ec1c.data,
        path: _0x48ec1c.path,
        errorMaps: [_0x48ec1c.common.contextualErrorMap, _0x48ec1c.schemaErrorMap, _0x41ab3c(), _0x3464b8].filter(_0xd6784b => !!_0xd6784b)
      });
      _0x48ec1c.common.issues.push(_0x1d70d8);
    }
    class _0x589df2 {
      constructor() {
        this.value = "valid";
      }
      dirty() {
        if (this.value === "valid") {
          this.value = "dirty";
        }
      }
      abort() {
        if (this.value !== "aborted") {
          this.value = "aborted";
        }
      }
      static mergeArray(_0x1fc174, _0x559d54) {
        const _0x21a01a = [];
        for (const _0x215192 of _0x559d54) {
          if (_0x215192.status === "aborted") {
            return _0x2df4b8;
          }
          if (_0x215192.status === "dirty") {
            _0x1fc174.dirty();
          }
          _0x21a01a.push(_0x215192.value);
        }
        var _0x33bc74 = {
          status: _0x1fc174.value,
          value: _0x21a01a
        };
        return _0x33bc74;
      }
      static async mergeObjectAsync(_0x31bd53, _0x454028) {
        const _0x1bb0bc = [];
        for (const _0x2908d8 of _0x454028) {
          var _0xba83cf = {
            key: await _0x2908d8.key,
            value: await _0x2908d8.value
          };
          _0x1bb0bc.push(_0xba83cf);
        }
        return _0x589df2.mergeObjectSync(_0x31bd53, _0x1bb0bc);
      }
      static mergeObjectSync(_0x3258ee, _0xc112d9) {
        const _0xc883a9 = {};
        for (const _0x5980c0 of _0xc112d9) {
          const {
            key: _0x6ca375,
            value: _0x17e027
          } = _0x5980c0;
          if (_0x6ca375.status === "aborted") {
            return _0x2df4b8;
          }
          if (_0x17e027.status === "aborted") {
            return _0x2df4b8;
          }
          if (_0x6ca375.status === "dirty") {
            _0x3258ee.dirty();
          }
          if (_0x17e027.status === "dirty") {
            _0x3258ee.dirty();
          }
          if (typeof _0x17e027.value !== "undefined" || _0x5980c0.alwaysSet) {
            _0xc883a9[_0x6ca375.value] = _0x17e027.value;
          }
        }
        var _0x599a94 = {
          status: _0x3258ee.value,
          value: _0xc883a9
        };
        return _0x599a94;
      }
    }
    const _0x2df4b8 = Object.freeze({
      status: "aborted"
    });
    const _0x432c0a = _0x591c4e => ({
      status: "dirty",
      value: _0x591c4e
    });
    const _0x46f42f = _0x31484e => ({
      status: "valid",
      value: _0x31484e
    });
    const _0x57d1c4 = _0x157cb6 => _0x157cb6.status === "aborted";
    const _0x371dd3 = _0x2f93ea => _0x2f93ea.status === "dirty";
    const _0x211544 = _0x4593f5 => _0x4593f5.status === "valid";
    const _0x47f166 = _0x8d02b3 => typeof Promise !== "undefined" && _0x8d02b3 instanceof Promise;
    var _0x30235d;
    (function (_0x3516f3) {
      _0x3516f3.errToObj = _0x3b776c => typeof _0x3b776c === "string" ? {
        message: _0x3b776c
      } : _0x3b776c || {};
      _0x3516f3.toString = _0x2ca6c3 => typeof _0x2ca6c3 === "string" ? _0x2ca6c3 : _0x2ca6c3?.message;
    })(_0x30235d ||= {});
    class _0x4c2ca6 {
      constructor(_0x4b61f5, _0x549891, _0x366877, _0x35a41d) {
        this._cachedPath = [];
        this.parent = _0x4b61f5;
        this.data = _0x549891;
        this._path = _0x366877;
        this._key = _0x35a41d;
      }
      get path() {
        if (!this._cachedPath.length) {
          if (this._key instanceof Array) {
            this._cachedPath.push(...this._path, ...this._key);
          } else {
            this._cachedPath.push(...this._path, this._key);
          }
        }
        return this._cachedPath;
      }
    }
    const _0x2b64e8 = (_0x2486bb, _0x2f2980) => {
      if (_0x211544(_0x2f2980)) {
        var _0x144a1e = {
          success: true,
          data: _0x2f2980.value
        };
        return _0x144a1e;
      } else {
        if (!_0x2486bb.common.issues.length) {
          throw new Error("Validation failed but no issues detected.");
        }
        return {
          success: false,
          get error() {
            if (this._error) {
              return this._error;
            }
            const _0x638b06 = new _0xe3343b(_0x2486bb.common.issues);
            this._error = _0x638b06;
            return this._error;
          }
        };
      }
    };
    function _0xb317f2(_0x38e5ae) {
      if (!_0x38e5ae) {
        return {};
      }
      const {
        errorMap: _0x2ffbe6,
        invalid_type_error: _0x2df7fd,
        required_error: _0xc01288,
        description: _0x4c6ea2
      } = _0x38e5ae;
      if (_0x2ffbe6 && (_0x2df7fd || _0xc01288)) {
        throw new Error("Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.");
      }
      if (_0x2ffbe6) {
        return {
          errorMap: _0x2ffbe6,
          description: _0x4c6ea2
        };
      }
      const _0x1f3a24 = (_0x16ea74, _0x2a4d79) => {
        var _0x35cf20 = {
          message: _0x2a4d79.defaultError
        };
        if (_0x16ea74.code !== "invalid_type") {
          return _0x35cf20;
        }
        if (typeof _0x2a4d79.data === "undefined") {
          var _0x1e3388 = {
            message: _0xc01288 ?? _0x2a4d79.defaultError
          };
          return _0x1e3388;
        }
        var _0x4556c6 = {
          message: _0x2df7fd ?? _0x2a4d79.defaultError
        };
        return _0x4556c6;
      };
      var _0x2fcf01 = {
        errorMap: _0x1f3a24,
        description: _0x4c6ea2
      };
      return _0x2fcf01;
    }
    class _0x1bb570 {
      constructor(_0x2acd53) {
        this.spa = this.safeParseAsync;
        this._def = _0x2acd53;
        this.parse = this.parse.bind(this);
        this.safeParse = this.safeParse.bind(this);
        this.parseAsync = this.parseAsync.bind(this);
        this.safeParseAsync = this.safeParseAsync.bind(this);
        this.spa = this.spa.bind(this);
        this.refine = this.refine.bind(this);
        this.refinement = this.refinement.bind(this);
        this.superRefine = this.superRefine.bind(this);
        this.optional = this.optional.bind(this);
        this.nullable = this.nullable.bind(this);
        this.nullish = this.nullish.bind(this);
        this.array = this.array.bind(this);
        this.promise = this.promise.bind(this);
        this.or = this.or.bind(this);
        this.and = this.and.bind(this);
        this.transform = this.transform.bind(this);
        this.brand = this.brand.bind(this);
        this.default = this.default.bind(this);
        this.catch = this.catch.bind(this);
        this.describe = this.describe.bind(this);
        this.pipe = this.pipe.bind(this);
        this.isNullable = this.isNullable.bind(this);
        this.isOptional = this.isOptional.bind(this);
      }
      get description() {
        return this._def.description;
      }
      _getType(_0x5cd98b) {
        return _0x1ba0a2(_0x5cd98b.data);
      }
      _getOrReturnCtx(_0xca2420, _0x3b9a45) {
        return _0x3b9a45 || {
          common: _0xca2420.parent.common,
          data: _0xca2420.data,
          parsedType: _0x1ba0a2(_0xca2420.data),
          schemaErrorMap: this._def.errorMap,
          path: _0xca2420.path,
          parent: _0xca2420.parent
        };
      }
      _processInputParams(_0xcfdd50) {
        return {
          status: new _0x589df2(),
          ctx: {
            common: _0xcfdd50.parent.common,
            data: _0xcfdd50.data,
            parsedType: _0x1ba0a2(_0xcfdd50.data),
            schemaErrorMap: this._def.errorMap,
            path: _0xcfdd50.path,
            parent: _0xcfdd50.parent
          }
        };
      }
      _parseSync(_0x31aba6) {
        const _0x9fa4d1 = this._parse(_0x31aba6);
        if (_0x47f166(_0x9fa4d1)) {
          throw new Error("Synchronous parse encountered promise.");
        }
        return _0x9fa4d1;
      }
      _parseAsync(_0x814893) {
        const _0x479b24 = this._parse(_0x814893);
        return Promise.resolve(_0x479b24);
      }
      parse(_0x432eac, _0x4532f7) {
        const _0x13bf11 = this.safeParse(_0x432eac, _0x4532f7);
        if (_0x13bf11.success) {
          return _0x13bf11.data;
        }
        throw _0x13bf11.error;
      }
      safeParse(_0x1571d4, _0x2034c2) {
        var _0x267992 = {
          issues: [],
          async: _0x2034c2?.async ?? false,
          contextualErrorMap: _0x2034c2?.errorMap
        };
        const _0x42b700 = {
          common: _0x267992,
          path: _0x2034c2?.path || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _0x1571d4,
          parsedType: _0x1ba0a2(_0x1571d4)
        };
        var _0x54719d = {
          data: _0x1571d4,
          path: _0x42b700.path,
          parent: _0x42b700
        };
        const _0x47fad9 = this._parseSync(_0x54719d);
        return _0x2b64e8(_0x42b700, _0x47fad9);
      }
      async parseAsync(_0x1742ab, _0x1626ad) {
        const _0x1e0d36 = await this.safeParseAsync(_0x1742ab, _0x1626ad);
        if (_0x1e0d36.success) {
          return _0x1e0d36.data;
        }
        throw _0x1e0d36.error;
      }
      async safeParseAsync(_0x462a1f, _0x560fa5) {
        var _0x43ef49 = {
          issues: [],
          contextualErrorMap: _0x560fa5?.errorMap,
          async: true
        };
        const _0x3dd9dd = {
          common: _0x43ef49,
          path: _0x560fa5?.path || [],
          schemaErrorMap: this._def.errorMap,
          parent: null,
          data: _0x462a1f,
          parsedType: _0x1ba0a2(_0x462a1f)
        };
        var _0x5e87ca = {
          data: _0x462a1f,
          path: _0x3dd9dd.path,
          parent: _0x3dd9dd
        };
        const _0x5c579a = this._parse(_0x5e87ca);
        const _0x5c51ad = await (_0x47f166(_0x5c579a) ? _0x5c579a : Promise.resolve(_0x5c579a));
        return _0x2b64e8(_0x3dd9dd, _0x5c51ad);
      }
      refine(_0x1bf05b, _0x388f82) {
        const _0x2bdb1f = _0x5b7bde => {
          if (typeof _0x388f82 === "string" || typeof _0x388f82 === "undefined") {
            var _0x847cf0 = {
              message: _0x388f82
            };
            return _0x847cf0;
          } else if (typeof _0x388f82 === "function") {
            return _0x388f82(_0x5b7bde);
          } else {
            return _0x388f82;
          }
        };
        return this._refinement((_0x57667f, _0xb9260b) => {
          const _0x39bca2 = _0x1bf05b(_0x57667f);
          const _0x5b19c7 = () => _0xb9260b.addIssue({
            code: _0x31073a.custom,
            ..._0x2bdb1f(_0x57667f)
          });
          if (typeof Promise !== "undefined" && _0x39bca2 instanceof Promise) {
            return _0x39bca2.then(_0x1f2da0 => {
              if (!_0x1f2da0) {
                _0x5b19c7();
                return false;
              } else {
                return true;
              }
            });
          }
          if (!_0x39bca2) {
            _0x5b19c7();
            return false;
          } else {
            return true;
          }
        });
      }
      refinement(_0x33dfd0, _0x137296) {
        return this._refinement((_0x1735ea, _0x8410d9) => {
          if (!_0x33dfd0(_0x1735ea)) {
            _0x8410d9.addIssue(typeof _0x137296 === "function" ? _0x137296(_0x1735ea, _0x8410d9) : _0x137296);
            return false;
          } else {
            return true;
          }
        });
      }
      _refinement(_0x4b4142) {
        var _0x3f8b46 = {
          type: "refinement",
          refinement: _0x4b4142
        };
        var _0x153496 = {
          schema: this,
          typeName: _0x335169.ZodEffects,
          effect: _0x3f8b46
        };
        return new _0x103599(_0x153496);
      }
      superRefine(_0x1f4687) {
        return this._refinement(_0x1f4687);
      }
      optional() {
        return _0x14d8e5.create(this, this._def);
      }
      nullable() {
        return _0xa324d5.create(this, this._def);
      }
      nullish() {
        return this.nullable().optional();
      }
      array() {
        return _0x4c748e.create(this, this._def);
      }
      promise() {
        return _0x493747.create(this, this._def);
      }
      or(_0x5585a3) {
        return _0x2fbe72.create([this, _0x5585a3], this._def);
      }
      and(_0x3eae2e) {
        return _0x14e749.create(this, _0x3eae2e, this._def);
      }
      transform(_0x2d1a9e) {
        var _0x179d67 = {
          type: "transform",
          transform: _0x2d1a9e
        };
        return new _0x103599({
          ..._0xb317f2(this._def),
          schema: this,
          typeName: _0x335169.ZodEffects,
          effect: _0x179d67
        });
      }
      default(_0x43158e) {
        const _0x2c8d4f = typeof _0x43158e === "function" ? _0x43158e : () => _0x43158e;
        return new _0x27ecdf({
          ..._0xb317f2(this._def),
          innerType: this,
          defaultValue: _0x2c8d4f,
          typeName: _0x335169.ZodDefault
        });
      }
      brand() {
        return new _0x2f92f5({
          typeName: _0x335169.ZodBranded,
          type: this,
          ..._0xb317f2(this._def)
        });
      }
      catch(_0x2be0d7) {
        const _0x27f1d6 = typeof _0x2be0d7 === "function" ? _0x2be0d7 : () => _0x2be0d7;
        return new _0xc598e7({
          ..._0xb317f2(this._def),
          innerType: this,
          catchValue: _0x27f1d6,
          typeName: _0x335169.ZodCatch
        });
      }
      describe(_0x1cfbef) {
        const _0xe79bd1 = this.constructor;
        var _0x42e552 = {
          ...this._def
        };
        _0x42e552.description = _0x1cfbef;
        return new _0xe79bd1(_0x42e552);
      }
      pipe(_0xbe4c64) {
        return _0x5b6f1f.create(this, _0xbe4c64);
      }
      isOptional() {
        return this.safeParse(undefined).success;
      }
      isNullable() {
        return this.safeParse(null).success;
      }
    }
    const _0x3616c6 = /^c[^\s-]{8,}$/i;
    const _0x278f90 = /^[a-z][a-z0-9]*$/;
    const _0x46d215 = /[0-9A-HJKMNP-TV-Z]{26}/;
    const _0x49bff8 = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;
    const _0x4d1719 = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/;
    const _0x8db6a0 = /^(\p{Extended_Pictographic}|\p{Emoji_Component})+$/u;
    const _0x17e54d = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;
    const _0x211116 = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;
    const _0x224707 = _0x138592 => {
      if (_0x138592.precision) {
        if (_0x138592.offset) {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{" + _0x138592.precision + "}(([+-]\\d{2}(:?\\d{2})?)|Z)$");
        } else {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{" + _0x138592.precision + "}Z$");
        }
      } else if (_0x138592.precision === 0) {
        if (_0x138592.offset) {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$");
        } else {
          return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$");
        }
      } else if (_0x138592.offset) {
        return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$");
      } else {
        return new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");
      }
    };
    function _0x54e0eb(_0x240dea, _0x392bba) {
      if ((_0x392bba === "v4" || !_0x392bba) && _0x17e54d.test(_0x240dea)) {
        return true;
      }
      if ((_0x392bba === "v6" || !_0x392bba) && _0x211116.test(_0x240dea)) {
        return true;
      }
      return false;
    }
    class _0x18b2b2 extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this._regex = (_0x38ef27, _0x55febf, _0x532425) => this.refinement(_0x201c50 => _0x38ef27.test(_0x201c50), {
          validation: _0x55febf,
          code: _0x31073a.invalid_string,
          ..._0x30235d.errToObj(_0x532425)
        });
        this.nonempty = _0x4e8869 => this.min(1, _0x30235d.errToObj(_0x4e8869));
        this.trim = () => new _0x18b2b2({
          ...this._def,
          checks: [...this._def.checks, {
            kind: "trim"
          }]
        });
        this.toLowerCase = () => new _0x18b2b2({
          ...this._def,
          checks: [...this._def.checks, {
            kind: "toLowerCase"
          }]
        });
        this.toUpperCase = () => new _0x18b2b2({
          ...this._def,
          checks: [...this._def.checks, {
            kind: "toUpperCase"
          }]
        });
      }
      _parse(_0x19bb73) {
        if (this._def.coerce) {
          _0x19bb73.data = String(_0x19bb73.data);
        }
        const _0x566132 = this._getType(_0x19bb73);
        if (_0x566132 !== _0x49070e.string) {
          const _0x24fe06 = this._getOrReturnCtx(_0x19bb73);
          _0x2f5996(_0x24fe06, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.string,
            received: _0x24fe06.parsedType
          });
          return _0x2df4b8;
        }
        const _0x8265a1 = new _0x589df2();
        let _0x36e230 = undefined;
        for (const _0x4e8b79 of this._def.checks) {
          if (_0x4e8b79.kind === "min") {
            if (_0x19bb73.data.length < _0x4e8b79.value) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x42323a = {
                code: _0x31073a.too_small,
                minimum: _0x4e8b79.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x42323a);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "max") {
            if (_0x19bb73.data.length > _0x4e8b79.value) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0xe2e3cd = {
                code: _0x31073a.too_big,
                maximum: _0x4e8b79.value,
                type: "string",
                inclusive: true,
                exact: false,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0xe2e3cd);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "length") {
            const _0x35e504 = _0x19bb73.data.length > _0x4e8b79.value;
            const _0x4ce419 = _0x19bb73.data.length < _0x4e8b79.value;
            if (_0x35e504 || _0x4ce419) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              if (_0x35e504) {
                var _0x5c5645 = {
                  code: _0x31073a.too_big,
                  maximum: _0x4e8b79.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: _0x4e8b79.message
                };
                _0x2f5996(_0x36e230, _0x5c5645);
              } else if (_0x4ce419) {
                var _0x52272f = {
                  code: _0x31073a.too_small,
                  minimum: _0x4e8b79.value,
                  type: "string",
                  inclusive: true,
                  exact: true,
                  message: _0x4e8b79.message
                };
                _0x2f5996(_0x36e230, _0x52272f);
              }
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "email") {
            if (!_0x4d1719.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x172885 = {
                validation: "email",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x172885);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "emoji") {
            if (!_0x8db6a0.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x51f68c = {
                validation: "emoji",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x51f68c);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "uuid") {
            if (!_0x49bff8.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x21b790 = {
                validation: "uuid",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x21b790);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "cuid") {
            if (!_0x3616c6.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x272290 = {
                validation: "cuid",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x272290);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "cuid2") {
            if (!_0x278f90.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x26a22f = {
                validation: "cuid2",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x26a22f);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "ulid") {
            if (!_0x46d215.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x597fcb = {
                validation: "ulid",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x597fcb);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "url") {
            try {
              new URL(_0x19bb73.data);
            } catch (_0x3cb915) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x55d4be = {
                validation: "url",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x55d4be);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "regex") {
            _0x4e8b79.regex.lastIndex = 0;
            const _0xe2416a = _0x4e8b79.regex.test(_0x19bb73.data);
            if (!_0xe2416a) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x2b596d = {
                validation: "regex",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x2b596d);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "trim") {
            _0x19bb73.data = _0x19bb73.data.trim();
          } else if (_0x4e8b79.kind === "includes") {
            if (!_0x19bb73.data.includes(_0x4e8b79.value, _0x4e8b79.position)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x28c164 = {
                includes: _0x4e8b79.value,
                position: _0x4e8b79.position
              };
              var _0x5acb12 = {
                code: _0x31073a.invalid_string,
                validation: _0x28c164,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x5acb12);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "toLowerCase") {
            _0x19bb73.data = _0x19bb73.data.toLowerCase();
          } else if (_0x4e8b79.kind === "toUpperCase") {
            _0x19bb73.data = _0x19bb73.data.toUpperCase();
          } else if (_0x4e8b79.kind === "startsWith") {
            if (!_0x19bb73.data.startsWith(_0x4e8b79.value)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x3d14eb = {
                startsWith: _0x4e8b79.value
              };
              var _0x4980c3 = {
                code: _0x31073a.invalid_string,
                validation: _0x3d14eb,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x4980c3);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "endsWith") {
            if (!_0x19bb73.data.endsWith(_0x4e8b79.value)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x444de2 = {
                endsWith: _0x4e8b79.value
              };
              var _0x56e647 = {
                code: _0x31073a.invalid_string,
                validation: _0x444de2,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x56e647);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "datetime") {
            const _0x1b6cb8 = _0x224707(_0x4e8b79);
            if (!_0x1b6cb8.test(_0x19bb73.data)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x3af25a = {
                code: _0x31073a.invalid_string,
                validation: "datetime",
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x3af25a);
              _0x8265a1.dirty();
            }
          } else if (_0x4e8b79.kind === "ip") {
            if (!_0x54e0eb(_0x19bb73.data, _0x4e8b79.version)) {
              _0x36e230 = this._getOrReturnCtx(_0x19bb73, _0x36e230);
              var _0x33f410 = {
                validation: "ip",
                code: _0x31073a.invalid_string,
                message: _0x4e8b79.message
              };
              _0x2f5996(_0x36e230, _0x33f410);
              _0x8265a1.dirty();
            }
          } else {
            _0x3275c9.assertNever(_0x4e8b79);
          }
        }
        var _0x10dc1b = {
          status: _0x8265a1.value,
          value: _0x19bb73.data
        };
        return _0x10dc1b;
      }
      _addCheck(_0x48a210) {
        var _0x2f8421 = {
          ...this._def
        };
        _0x2f8421.checks = [...this._def.checks, _0x48a210];
        return new _0x18b2b2(_0x2f8421);
      }
      email(_0x589b55) {
        return this._addCheck({
          kind: "email",
          ..._0x30235d.errToObj(_0x589b55)
        });
      }
      url(_0x226828) {
        return this._addCheck({
          kind: "url",
          ..._0x30235d.errToObj(_0x226828)
        });
      }
      emoji(_0x58ec4b) {
        return this._addCheck({
          kind: "emoji",
          ..._0x30235d.errToObj(_0x58ec4b)
        });
      }
      uuid(_0x5065cc) {
        return this._addCheck({
          kind: "uuid",
          ..._0x30235d.errToObj(_0x5065cc)
        });
      }
      cuid(_0x5a1936) {
        return this._addCheck({
          kind: "cuid",
          ..._0x30235d.errToObj(_0x5a1936)
        });
      }
      cuid2(_0x4d64b4) {
        return this._addCheck({
          kind: "cuid2",
          ..._0x30235d.errToObj(_0x4d64b4)
        });
      }
      ulid(_0x435f90) {
        return this._addCheck({
          kind: "ulid",
          ..._0x30235d.errToObj(_0x435f90)
        });
      }
      ip(_0xb9ce38) {
        return this._addCheck({
          kind: "ip",
          ..._0x30235d.errToObj(_0xb9ce38)
        });
      }
      datetime(_0x13dab3) {
        if (typeof _0x13dab3 === "string") {
          var _0x10aa2e = {
            kind: "datetime",
            precision: null,
            offset: false,
            message: _0x13dab3
          };
          return this._addCheck(_0x10aa2e);
        }
        return this._addCheck({
          kind: "datetime",
          precision: typeof _0x13dab3?.precision === "undefined" ? null : _0x13dab3?.precision,
          offset: _0x13dab3?.offset ?? false,
          ..._0x30235d.errToObj(_0x13dab3?.message)
        });
      }
      regex(_0x296f0f, _0x429bd2) {
        return this._addCheck({
          kind: "regex",
          regex: _0x296f0f,
          ..._0x30235d.errToObj(_0x429bd2)
        });
      }
      includes(_0x5e1a7b, _0x421f1d) {
        return this._addCheck({
          kind: "includes",
          value: _0x5e1a7b,
          position: _0x421f1d?.position,
          ..._0x30235d.errToObj(_0x421f1d?.message)
        });
      }
      startsWith(_0x29ac97, _0x5eec6f) {
        return this._addCheck({
          kind: "startsWith",
          value: _0x29ac97,
          ..._0x30235d.errToObj(_0x5eec6f)
        });
      }
      endsWith(_0xd862be, _0x3c0b46) {
        return this._addCheck({
          kind: "endsWith",
          value: _0xd862be,
          ..._0x30235d.errToObj(_0x3c0b46)
        });
      }
      min(_0x412e0e, _0x44b384) {
        return this._addCheck({
          kind: "min",
          value: _0x412e0e,
          ..._0x30235d.errToObj(_0x44b384)
        });
      }
      max(_0x53a16f, _0x20caba) {
        return this._addCheck({
          kind: "max",
          value: _0x53a16f,
          ..._0x30235d.errToObj(_0x20caba)
        });
      }
      length(_0x12dc45, _0x608870) {
        return this._addCheck({
          kind: "length",
          value: _0x12dc45,
          ..._0x30235d.errToObj(_0x608870)
        });
      }
      get isDatetime() {
        return !!this._def.checks.find(_0x14de1c => _0x14de1c.kind === "datetime");
      }
      get isEmail() {
        return !!this._def.checks.find(_0x16bd7d => _0x16bd7d.kind === "email");
      }
      get isURL() {
        return !!this._def.checks.find(_0x10b019 => _0x10b019.kind === "url");
      }
      get isEmoji() {
        return !!this._def.checks.find(_0x3ec907 => _0x3ec907.kind === "emoji");
      }
      get isUUID() {
        return !!this._def.checks.find(_0x320dbf => _0x320dbf.kind === "uuid");
      }
      get isCUID() {
        return !!this._def.checks.find(_0x347317 => _0x347317.kind === "cuid");
      }
      get isCUID2() {
        return !!this._def.checks.find(_0x9fa1cd => _0x9fa1cd.kind === "cuid2");
      }
      get isULID() {
        return !!this._def.checks.find(_0x4946a9 => _0x4946a9.kind === "ulid");
      }
      get isIP() {
        return !!this._def.checks.find(_0x1631fd => _0x1631fd.kind === "ip");
      }
      get minLength() {
        let _0xa1b906 = null;
        for (const _0x2a937a of this._def.checks) {
          if (_0x2a937a.kind === "min") {
            if (_0xa1b906 === null || _0x2a937a.value > _0xa1b906) {
              _0xa1b906 = _0x2a937a.value;
            }
          }
        }
        return _0xa1b906;
      }
      get maxLength() {
        let _0x55e094 = null;
        for (const _0x270b5a of this._def.checks) {
          if (_0x270b5a.kind === "max") {
            if (_0x55e094 === null || _0x270b5a.value < _0x55e094) {
              _0x55e094 = _0x270b5a.value;
            }
          }
        }
        return _0x55e094;
      }
    }
    _0x18b2b2.create = _0x400120 => {
      return new _0x18b2b2({
        checks: [],
        typeName: _0x335169.ZodString,
        coerce: _0x400120?.coerce ?? false,
        ..._0xb317f2(_0x400120)
      });
    };
    function _0x556f1a(_0x397f74, _0xcaa12d) {
      const _0x3e25f4 = (_0x397f74.toString().split(".")[1] || "").length;
      const _0x359d17 = (_0xcaa12d.toString().split(".")[1] || "").length;
      const _0x233bd4 = _0x3e25f4 > _0x359d17 ? _0x3e25f4 : _0x359d17;
      const _0x19e57e = parseInt(_0x397f74.toFixed(_0x233bd4).replace(".", ""));
      const _0x55152c = parseInt(_0xcaa12d.toFixed(_0x233bd4).replace(".", ""));
      return _0x19e57e % _0x55152c / Math.pow(10, _0x233bd4);
    }
    class _0x3e4cd6 extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
        this.step = this.multipleOf;
      }
      _parse(_0x3a3d5e) {
        if (this._def.coerce) {
          _0x3a3d5e.data = Number(_0x3a3d5e.data);
        }
        const _0x5b6bfc = this._getType(_0x3a3d5e);
        if (_0x5b6bfc !== _0x49070e.number) {
          const _0x11a42b = this._getOrReturnCtx(_0x3a3d5e);
          _0x2f5996(_0x11a42b, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.number,
            received: _0x11a42b.parsedType
          });
          return _0x2df4b8;
        }
        let _0x1a3abc = undefined;
        const _0x1a6c3d = new _0x589df2();
        for (const _0x29d71f of this._def.checks) {
          if (_0x29d71f.kind === "int") {
            if (!_0x3275c9.isInteger(_0x3a3d5e.data)) {
              _0x1a3abc = this._getOrReturnCtx(_0x3a3d5e, _0x1a3abc);
              var _0x9e38b4 = {
                code: _0x31073a.invalid_type,
                expected: "integer",
                received: "float",
                message: _0x29d71f.message
              };
              _0x2f5996(_0x1a3abc, _0x9e38b4);
              _0x1a6c3d.dirty();
            }
          } else if (_0x29d71f.kind === "min") {
            const _0x181ccc = _0x29d71f.inclusive ? _0x3a3d5e.data < _0x29d71f.value : _0x3a3d5e.data <= _0x29d71f.value;
            if (_0x181ccc) {
              _0x1a3abc = this._getOrReturnCtx(_0x3a3d5e, _0x1a3abc);
              var _0x325a42 = {
                code: _0x31073a.too_small,
                minimum: _0x29d71f.value,
                type: "number",
                inclusive: _0x29d71f.inclusive,
                exact: false,
                message: _0x29d71f.message
              };
              _0x2f5996(_0x1a3abc, _0x325a42);
              _0x1a6c3d.dirty();
            }
          } else if (_0x29d71f.kind === "max") {
            const _0x16551f = _0x29d71f.inclusive ? _0x3a3d5e.data > _0x29d71f.value : _0x3a3d5e.data >= _0x29d71f.value;
            if (_0x16551f) {
              _0x1a3abc = this._getOrReturnCtx(_0x3a3d5e, _0x1a3abc);
              var _0x464e21 = {
                code: _0x31073a.too_big,
                maximum: _0x29d71f.value,
                type: "number",
                inclusive: _0x29d71f.inclusive,
                exact: false,
                message: _0x29d71f.message
              };
              _0x2f5996(_0x1a3abc, _0x464e21);
              _0x1a6c3d.dirty();
            }
          } else if (_0x29d71f.kind === "multipleOf") {
            if (_0x556f1a(_0x3a3d5e.data, _0x29d71f.value) !== 0) {
              _0x1a3abc = this._getOrReturnCtx(_0x3a3d5e, _0x1a3abc);
              var _0x506ae5 = {
                code: _0x31073a.not_multiple_of,
                multipleOf: _0x29d71f.value,
                message: _0x29d71f.message
              };
              _0x2f5996(_0x1a3abc, _0x506ae5);
              _0x1a6c3d.dirty();
            }
          } else if (_0x29d71f.kind === "finite") {
            if (!Number.isFinite(_0x3a3d5e.data)) {
              _0x1a3abc = this._getOrReturnCtx(_0x3a3d5e, _0x1a3abc);
              var _0x5afb70 = {
                code: _0x31073a.not_finite,
                message: _0x29d71f.message
              };
              _0x2f5996(_0x1a3abc, _0x5afb70);
              _0x1a6c3d.dirty();
            }
          } else {
            _0x3275c9.assertNever(_0x29d71f);
          }
        }
        var _0x52ba42 = {
          status: _0x1a6c3d.value,
          value: _0x3a3d5e.data
        };
        return _0x52ba42;
      }
      gte(_0x357967, _0x5abdcb) {
        return this.setLimit("min", _0x357967, true, _0x30235d.toString(_0x5abdcb));
      }
      gt(_0x4f2295, _0x4b8dbe) {
        return this.setLimit("min", _0x4f2295, false, _0x30235d.toString(_0x4b8dbe));
      }
      lte(_0x10e55f, _0x4eb6a1) {
        return this.setLimit("max", _0x10e55f, true, _0x30235d.toString(_0x4eb6a1));
      }
      lt(_0x2aa1ce, _0x13ad15) {
        return this.setLimit("max", _0x2aa1ce, false, _0x30235d.toString(_0x13ad15));
      }
      setLimit(_0xc9ac4c, _0x344570, _0x17967d, _0x432a8a) {
        return new _0x3e4cd6({
          ...this._def,
          checks: [...this._def.checks, {
            kind: _0xc9ac4c,
            value: _0x344570,
            inclusive: _0x17967d,
            message: _0x30235d.toString(_0x432a8a)
          }]
        });
      }
      _addCheck(_0x5e8c37) {
        var _0x281998 = {
          ...this._def
        };
        _0x281998.checks = [...this._def.checks, _0x5e8c37];
        return new _0x3e4cd6(_0x281998);
      }
      int(_0x5dcca1) {
        return this._addCheck({
          kind: "int",
          message: _0x30235d.toString(_0x5dcca1)
        });
      }
      positive(_0x3ab0e9) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: false,
          message: _0x30235d.toString(_0x3ab0e9)
        });
      }
      negative(_0x234673) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: false,
          message: _0x30235d.toString(_0x234673)
        });
      }
      nonpositive(_0x3ab955) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: true,
          message: _0x30235d.toString(_0x3ab955)
        });
      }
      nonnegative(_0x27c7ff) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: true,
          message: _0x30235d.toString(_0x27c7ff)
        });
      }
      multipleOf(_0x292557, _0x23f5e1) {
        return this._addCheck({
          kind: "multipleOf",
          value: _0x292557,
          message: _0x30235d.toString(_0x23f5e1)
        });
      }
      finite(_0x28434d) {
        return this._addCheck({
          kind: "finite",
          message: _0x30235d.toString(_0x28434d)
        });
      }
      safe(_0x2ea877) {
        return this._addCheck({
          kind: "min",
          inclusive: true,
          value: Number.MIN_SAFE_INTEGER,
          message: _0x30235d.toString(_0x2ea877)
        })._addCheck({
          kind: "max",
          inclusive: true,
          value: Number.MAX_SAFE_INTEGER,
          message: _0x30235d.toString(_0x2ea877)
        });
      }
      get minValue() {
        let _0x1106ba = null;
        for (const _0x4f1abf of this._def.checks) {
          if (_0x4f1abf.kind === "min") {
            if (_0x1106ba === null || _0x4f1abf.value > _0x1106ba) {
              _0x1106ba = _0x4f1abf.value;
            }
          }
        }
        return _0x1106ba;
      }
      get maxValue() {
        let _0x30f51a = null;
        for (const _0xe5be2d of this._def.checks) {
          if (_0xe5be2d.kind === "max") {
            if (_0x30f51a === null || _0xe5be2d.value < _0x30f51a) {
              _0x30f51a = _0xe5be2d.value;
            }
          }
        }
        return _0x30f51a;
      }
      get isInt() {
        return !!this._def.checks.find(_0x267d10 => _0x267d10.kind === "int" || _0x267d10.kind === "multipleOf" && _0x3275c9.isInteger(_0x267d10.value));
      }
      get isFinite() {
        let _0x156e13 = null;
        let _0x1a8f5d = null;
        for (const _0xe4253c of this._def.checks) {
          if (_0xe4253c.kind === "finite" || _0xe4253c.kind === "int" || _0xe4253c.kind === "multipleOf") {
            return true;
          } else if (_0xe4253c.kind === "min") {
            if (_0x1a8f5d === null || _0xe4253c.value > _0x1a8f5d) {
              _0x1a8f5d = _0xe4253c.value;
            }
          } else if (_0xe4253c.kind === "max") {
            if (_0x156e13 === null || _0xe4253c.value < _0x156e13) {
              _0x156e13 = _0xe4253c.value;
            }
          }
        }
        return Number.isFinite(_0x1a8f5d) && Number.isFinite(_0x156e13);
      }
    }
    _0x3e4cd6.create = _0x4e8ec3 => {
      return new _0x3e4cd6({
        checks: [],
        typeName: _0x335169.ZodNumber,
        coerce: _0x4e8ec3?.coerce || false,
        ..._0xb317f2(_0x4e8ec3)
      });
    };
    class _0x63cd66 extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this.min = this.gte;
        this.max = this.lte;
      }
      _parse(_0x523be3) {
        if (this._def.coerce) {
          _0x523be3.data = BigInt(_0x523be3.data);
        }
        const _0x38cec3 = this._getType(_0x523be3);
        if (_0x38cec3 !== _0x49070e.bigint) {
          const _0x848be4 = this._getOrReturnCtx(_0x523be3);
          _0x2f5996(_0x848be4, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.bigint,
            received: _0x848be4.parsedType
          });
          return _0x2df4b8;
        }
        let _0x587a58 = undefined;
        const _0x2089cb = new _0x589df2();
        for (const _0x276e34 of this._def.checks) {
          if (_0x276e34.kind === "min") {
            const _0x21f5f1 = _0x276e34.inclusive ? _0x523be3.data < _0x276e34.value : _0x523be3.data <= _0x276e34.value;
            if (_0x21f5f1) {
              _0x587a58 = this._getOrReturnCtx(_0x523be3, _0x587a58);
              var _0x170dd4 = {
                code: _0x31073a.too_small,
                type: "bigint",
                minimum: _0x276e34.value,
                inclusive: _0x276e34.inclusive,
                message: _0x276e34.message
              };
              _0x2f5996(_0x587a58, _0x170dd4);
              _0x2089cb.dirty();
            }
          } else if (_0x276e34.kind === "max") {
            const _0x257ef9 = _0x276e34.inclusive ? _0x523be3.data > _0x276e34.value : _0x523be3.data >= _0x276e34.value;
            if (_0x257ef9) {
              _0x587a58 = this._getOrReturnCtx(_0x523be3, _0x587a58);
              var _0x57f974 = {
                code: _0x31073a.too_big,
                type: "bigint",
                maximum: _0x276e34.value,
                inclusive: _0x276e34.inclusive,
                message: _0x276e34.message
              };
              _0x2f5996(_0x587a58, _0x57f974);
              _0x2089cb.dirty();
            }
          } else if (_0x276e34.kind === "multipleOf") {
            if (_0x523be3.data % _0x276e34.value !== BigInt(0)) {
              _0x587a58 = this._getOrReturnCtx(_0x523be3, _0x587a58);
              var _0x1c1f09 = {
                code: _0x31073a.not_multiple_of,
                multipleOf: _0x276e34.value,
                message: _0x276e34.message
              };
              _0x2f5996(_0x587a58, _0x1c1f09);
              _0x2089cb.dirty();
            }
          } else {
            _0x3275c9.assertNever(_0x276e34);
          }
        }
        var _0x371b2b = {
          status: _0x2089cb.value,
          value: _0x523be3.data
        };
        return _0x371b2b;
      }
      gte(_0x3d3977, _0xbc8706) {
        return this.setLimit("min", _0x3d3977, true, _0x30235d.toString(_0xbc8706));
      }
      gt(_0x1c49ed, _0x428c91) {
        return this.setLimit("min", _0x1c49ed, false, _0x30235d.toString(_0x428c91));
      }
      lte(_0x201b69, _0x127340) {
        return this.setLimit("max", _0x201b69, true, _0x30235d.toString(_0x127340));
      }
      lt(_0x5a9300, _0x291dd0) {
        return this.setLimit("max", _0x5a9300, false, _0x30235d.toString(_0x291dd0));
      }
      setLimit(_0x7ff7e0, _0x27b667, _0x2f52dc, _0x5643fb) {
        return new _0x63cd66({
          ...this._def,
          checks: [...this._def.checks, {
            kind: _0x7ff7e0,
            value: _0x27b667,
            inclusive: _0x2f52dc,
            message: _0x30235d.toString(_0x5643fb)
          }]
        });
      }
      _addCheck(_0x52dfa8) {
        var _0x5b47c4 = {
          ...this._def
        };
        _0x5b47c4.checks = [...this._def.checks, _0x52dfa8];
        return new _0x63cd66(_0x5b47c4);
      }
      positive(_0x3eab24) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: false,
          message: _0x30235d.toString(_0x3eab24)
        });
      }
      negative(_0x2c1b2d) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: false,
          message: _0x30235d.toString(_0x2c1b2d)
        });
      }
      nonpositive(_0x11fcd6) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: true,
          message: _0x30235d.toString(_0x11fcd6)
        });
      }
      nonnegative(_0x4420fd) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: true,
          message: _0x30235d.toString(_0x4420fd)
        });
      }
      multipleOf(_0x2b3a8f, _0x3f2297) {
        return this._addCheck({
          kind: "multipleOf",
          value: _0x2b3a8f,
          message: _0x30235d.toString(_0x3f2297)
        });
      }
      get minValue() {
        let _0x47154a = null;
        for (const _0x41de41 of this._def.checks) {
          if (_0x41de41.kind === "min") {
            if (_0x47154a === null || _0x41de41.value > _0x47154a) {
              _0x47154a = _0x41de41.value;
            }
          }
        }
        return _0x47154a;
      }
      get maxValue() {
        let _0x3354e1 = null;
        for (const _0x544335 of this._def.checks) {
          if (_0x544335.kind === "max") {
            if (_0x3354e1 === null || _0x544335.value < _0x3354e1) {
              _0x3354e1 = _0x544335.value;
            }
          }
        }
        return _0x3354e1;
      }
    }
    _0x63cd66.create = _0x50a200 => {
      return new _0x63cd66({
        checks: [],
        typeName: _0x335169.ZodBigInt,
        coerce: _0x50a200?.coerce ?? false,
        ..._0xb317f2(_0x50a200)
      });
    };
    class _0x58eb2f extends _0x1bb570 {
      _parse(_0xecbc1d) {
        if (this._def.coerce) {
          _0xecbc1d.data = Boolean(_0xecbc1d.data);
        }
        const _0x36fe16 = this._getType(_0xecbc1d);
        if (_0x36fe16 !== _0x49070e.boolean) {
          const _0x217c27 = this._getOrReturnCtx(_0xecbc1d);
          _0x2f5996(_0x217c27, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.boolean,
            received: _0x217c27.parsedType
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0xecbc1d.data);
      }
    }
    _0x58eb2f.create = _0x421f43 => {
      return new _0x58eb2f({
        typeName: _0x335169.ZodBoolean,
        coerce: _0x421f43?.coerce || false,
        ..._0xb317f2(_0x421f43)
      });
    };
    class _0x29db6d extends _0x1bb570 {
      _parse(_0x312559) {
        if (this._def.coerce) {
          _0x312559.data = new Date(_0x312559.data);
        }
        const _0x2337c1 = this._getType(_0x312559);
        if (_0x2337c1 !== _0x49070e.date) {
          const _0x22d677 = this._getOrReturnCtx(_0x312559);
          _0x2f5996(_0x22d677, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.date,
            received: _0x22d677.parsedType
          });
          return _0x2df4b8;
        }
        if (isNaN(_0x312559.data.getTime())) {
          const _0x55baa0 = this._getOrReturnCtx(_0x312559);
          var _0x486775 = {
            code: _0x31073a.invalid_date
          };
          _0x2f5996(_0x55baa0, _0x486775);
          return _0x2df4b8;
        }
        const _0x4b1a1d = new _0x589df2();
        let _0x444592 = undefined;
        for (const _0x2d62d6 of this._def.checks) {
          if (_0x2d62d6.kind === "min") {
            if (_0x312559.data.getTime() < _0x2d62d6.value) {
              _0x444592 = this._getOrReturnCtx(_0x312559, _0x444592);
              var _0x3d764d = {
                code: _0x31073a.too_small,
                message: _0x2d62d6.message,
                inclusive: true,
                exact: false,
                minimum: _0x2d62d6.value,
                type: "date"
              };
              _0x2f5996(_0x444592, _0x3d764d);
              _0x4b1a1d.dirty();
            }
          } else if (_0x2d62d6.kind === "max") {
            if (_0x312559.data.getTime() > _0x2d62d6.value) {
              _0x444592 = this._getOrReturnCtx(_0x312559, _0x444592);
              var _0xcf00bb = {
                code: _0x31073a.too_big,
                message: _0x2d62d6.message,
                inclusive: true,
                exact: false,
                maximum: _0x2d62d6.value,
                type: "date"
              };
              _0x2f5996(_0x444592, _0xcf00bb);
              _0x4b1a1d.dirty();
            }
          } else {
            _0x3275c9.assertNever(_0x2d62d6);
          }
        }
        return {
          status: _0x4b1a1d.value,
          value: new Date(_0x312559.data.getTime())
        };
      }
      _addCheck(_0x10851f) {
        var _0x507397 = {
          ...this._def
        };
        _0x507397.checks = [...this._def.checks, _0x10851f];
        return new _0x29db6d(_0x507397);
      }
      min(_0x29ff4c, _0x168849) {
        return this._addCheck({
          kind: "min",
          value: _0x29ff4c.getTime(),
          message: _0x30235d.toString(_0x168849)
        });
      }
      max(_0x5e22fa, _0x23333c) {
        return this._addCheck({
          kind: "max",
          value: _0x5e22fa.getTime(),
          message: _0x30235d.toString(_0x23333c)
        });
      }
      get minDate() {
        let _0x2368da = null;
        for (const _0x10035c of this._def.checks) {
          if (_0x10035c.kind === "min") {
            if (_0x2368da === null || _0x10035c.value > _0x2368da) {
              _0x2368da = _0x10035c.value;
            }
          }
        }
        if (_0x2368da != null) {
          return new Date(_0x2368da);
        } else {
          return null;
        }
      }
      get maxDate() {
        let _0x3deea9 = null;
        for (const _0x1434d2 of this._def.checks) {
          if (_0x1434d2.kind === "max") {
            if (_0x3deea9 === null || _0x1434d2.value < _0x3deea9) {
              _0x3deea9 = _0x1434d2.value;
            }
          }
        }
        if (_0x3deea9 != null) {
          return new Date(_0x3deea9);
        } else {
          return null;
        }
      }
    }
    _0x29db6d.create = _0x41fa36 => {
      return new _0x29db6d({
        checks: [],
        coerce: _0x41fa36?.coerce || false,
        typeName: _0x335169.ZodDate,
        ..._0xb317f2(_0x41fa36)
      });
    };
    class _0x4ebdd9 extends _0x1bb570 {
      _parse(_0x3fbd52) {
        const _0xd2c0f4 = this._getType(_0x3fbd52);
        if (_0xd2c0f4 !== _0x49070e.symbol) {
          const _0x21c027 = this._getOrReturnCtx(_0x3fbd52);
          _0x2f5996(_0x21c027, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.symbol,
            received: _0x21c027.parsedType
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0x3fbd52.data);
      }
    }
    _0x4ebdd9.create = _0x49c396 => {
      return new _0x4ebdd9({
        typeName: _0x335169.ZodSymbol,
        ..._0xb317f2(_0x49c396)
      });
    };
    class _0x580ae9 extends _0x1bb570 {
      _parse(_0x332a41) {
        const _0x3ecd00 = this._getType(_0x332a41);
        if (_0x3ecd00 !== _0x49070e.undefined) {
          const _0x590a29 = this._getOrReturnCtx(_0x332a41);
          _0x2f5996(_0x590a29, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.undefined,
            received: _0x590a29.parsedType
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0x332a41.data);
      }
    }
    _0x580ae9.create = _0x283c66 => {
      return new _0x580ae9({
        typeName: _0x335169.ZodUndefined,
        ..._0xb317f2(_0x283c66)
      });
    };
    class _0x1a531c extends _0x1bb570 {
      _parse(_0x3a7300) {
        const _0x40f0a7 = this._getType(_0x3a7300);
        if (_0x40f0a7 !== _0x49070e.null) {
          const _0x41e470 = this._getOrReturnCtx(_0x3a7300);
          _0x2f5996(_0x41e470, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.null,
            received: _0x41e470.parsedType
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0x3a7300.data);
      }
    }
    _0x1a531c.create = _0x479692 => {
      return new _0x1a531c({
        typeName: _0x335169.ZodNull,
        ..._0xb317f2(_0x479692)
      });
    };
    class _0x4d814c extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this._any = true;
      }
      _parse(_0x184274) {
        return _0x46f42f(_0x184274.data);
      }
    }
    _0x4d814c.create = _0x29a046 => {
      return new _0x4d814c({
        typeName: _0x335169.ZodAny,
        ..._0xb317f2(_0x29a046)
      });
    };
    class _0x54164e extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this._unknown = true;
      }
      _parse(_0x43747e) {
        return _0x46f42f(_0x43747e.data);
      }
    }
    _0x54164e.create = _0x4ea8ac => {
      return new _0x54164e({
        typeName: _0x335169.ZodUnknown,
        ..._0xb317f2(_0x4ea8ac)
      });
    };
    class _0x3ebd59 extends _0x1bb570 {
      _parse(_0x29e581) {
        const _0x15ac21 = this._getOrReturnCtx(_0x29e581);
        _0x2f5996(_0x15ac21, {
          code: _0x31073a.invalid_type,
          expected: _0x49070e.never,
          received: _0x15ac21.parsedType
        });
        return _0x2df4b8;
      }
    }
    _0x3ebd59.create = _0x3d9473 => {
      return new _0x3ebd59({
        typeName: _0x335169.ZodNever,
        ..._0xb317f2(_0x3d9473)
      });
    };
    class _0x23d291 extends _0x1bb570 {
      _parse(_0xd2b31) {
        const _0x10efa9 = this._getType(_0xd2b31);
        if (_0x10efa9 !== _0x49070e.undefined) {
          const _0x54398d = this._getOrReturnCtx(_0xd2b31);
          _0x2f5996(_0x54398d, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.void,
            received: _0x54398d.parsedType
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0xd2b31.data);
      }
    }
    _0x23d291.create = _0x522edf => {
      return new _0x23d291({
        typeName: _0x335169.ZodVoid,
        ..._0xb317f2(_0x522edf)
      });
    };
    class _0x4c748e extends _0x1bb570 {
      _parse(_0x2bf844) {
        const {
          ctx: _0xcfb236,
          status: _0x307f91
        } = this._processInputParams(_0x2bf844);
        const _0x24b4bc = this._def;
        if (_0xcfb236.parsedType !== _0x49070e.array) {
          _0x2f5996(_0xcfb236, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.array,
            received: _0xcfb236.parsedType
          });
          return _0x2df4b8;
        }
        if (_0x24b4bc.exactLength !== null) {
          const _0x4e9fe3 = _0xcfb236.data.length > _0x24b4bc.exactLength.value;
          const _0x1b5a26 = _0xcfb236.data.length < _0x24b4bc.exactLength.value;
          if (_0x4e9fe3 || _0x1b5a26) {
            var _0x2ee663 = {
              code: _0x4e9fe3 ? _0x31073a.too_big : _0x31073a.too_small,
              minimum: _0x1b5a26 ? _0x24b4bc.exactLength.value : undefined,
              maximum: _0x4e9fe3 ? _0x24b4bc.exactLength.value : undefined,
              type: "array",
              inclusive: true,
              exact: true,
              message: _0x24b4bc.exactLength.message
            };
            _0x2f5996(_0xcfb236, _0x2ee663);
            _0x307f91.dirty();
          }
        }
        if (_0x24b4bc.minLength !== null) {
          if (_0xcfb236.data.length < _0x24b4bc.minLength.value) {
            var _0x329658 = {
              code: _0x31073a.too_small,
              minimum: _0x24b4bc.minLength.value,
              type: "array",
              inclusive: true,
              exact: false,
              message: _0x24b4bc.minLength.message
            };
            _0x2f5996(_0xcfb236, _0x329658);
            _0x307f91.dirty();
          }
        }
        if (_0x24b4bc.maxLength !== null) {
          if (_0xcfb236.data.length > _0x24b4bc.maxLength.value) {
            var _0x48ce80 = {
              code: _0x31073a.too_big,
              maximum: _0x24b4bc.maxLength.value,
              type: "array",
              inclusive: true,
              exact: false,
              message: _0x24b4bc.maxLength.message
            };
            _0x2f5996(_0xcfb236, _0x48ce80);
            _0x307f91.dirty();
          }
        }
        if (_0xcfb236.common.async) {
          return Promise.all([..._0xcfb236.data].map((_0x2cdf10, _0x375c40) => {
            return _0x24b4bc.type._parseAsync(new _0x4c2ca6(_0xcfb236, _0x2cdf10, _0xcfb236.path, _0x375c40));
          })).then(_0x45e1d6 => {
            return _0x589df2.mergeArray(_0x307f91, _0x45e1d6);
          });
        }
        const _0x553f7c = [..._0xcfb236.data].map((_0x1a8143, _0x30d88f) => {
          return _0x24b4bc.type._parseSync(new _0x4c2ca6(_0xcfb236, _0x1a8143, _0xcfb236.path, _0x30d88f));
        });
        return _0x589df2.mergeArray(_0x307f91, _0x553f7c);
      }
      get element() {
        return this._def.type;
      }
      min(_0x5be5ba, _0x491b6e) {
        return new _0x4c748e({
          ...this._def,
          minLength: {
            value: _0x5be5ba,
            message: _0x30235d.toString(_0x491b6e)
          }
        });
      }
      max(_0x5d0dd4, _0x5664c0) {
        return new _0x4c748e({
          ...this._def,
          maxLength: {
            value: _0x5d0dd4,
            message: _0x30235d.toString(_0x5664c0)
          }
        });
      }
      length(_0x102e20, _0x174930) {
        return new _0x4c748e({
          ...this._def,
          exactLength: {
            value: _0x102e20,
            message: _0x30235d.toString(_0x174930)
          }
        });
      }
      nonempty(_0x46dd9a) {
        return this.min(1, _0x46dd9a);
      }
    }
    _0x4c748e.create = (_0x39d452, _0x190600) => {
      return new _0x4c748e({
        type: _0x39d452,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: _0x335169.ZodArray,
        ..._0xb317f2(_0x190600)
      });
    };
    function _0x7e7405(_0x1137db) {
      if (_0x1137db instanceof _0x3052b3) {
        const _0x44b0cd = {};
        for (const _0x3a415f in _0x1137db.shape) {
          const _0x288b51 = _0x1137db.shape[_0x3a415f];
          _0x44b0cd[_0x3a415f] = _0x14d8e5.create(_0x7e7405(_0x288b51));
        }
        var _0x5d463f = {
          ..._0x1137db._def
        };
        _0x5d463f.shape = () => _0x44b0cd;
        return new _0x3052b3(_0x5d463f);
      } else if (_0x1137db instanceof _0x4c748e) {
        return new _0x4c748e({
          ..._0x1137db._def,
          type: _0x7e7405(_0x1137db.element)
        });
      } else if (_0x1137db instanceof _0x14d8e5) {
        return _0x14d8e5.create(_0x7e7405(_0x1137db.unwrap()));
      } else if (_0x1137db instanceof _0xa324d5) {
        return _0xa324d5.create(_0x7e7405(_0x1137db.unwrap()));
      } else if (_0x1137db instanceof _0x438ce6) {
        return _0x438ce6.create(_0x1137db.items.map(_0xf4100d => _0x7e7405(_0xf4100d)));
      } else {
        return _0x1137db;
      }
    }
    class _0x3052b3 extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this._cached = null;
        this.nonstrict = this.passthrough;
        this.augment = this.extend;
      }
      _getCached() {
        if (this._cached !== null) {
          return this._cached;
        }
        const _0x36fb84 = this._def.shape();
        const _0x42f940 = _0x3275c9.objectKeys(_0x36fb84);
        var _0x13afd9 = {
          shape: _0x36fb84,
          keys: _0x42f940
        };
        return this._cached = _0x13afd9;
      }
      _parse(_0x1d9ddd) {
        const _0x165e7c = this._getType(_0x1d9ddd);
        if (_0x165e7c !== _0x49070e.object) {
          const _0x20ed47 = this._getOrReturnCtx(_0x1d9ddd);
          _0x2f5996(_0x20ed47, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.object,
            received: _0x20ed47.parsedType
          });
          return _0x2df4b8;
        }
        const {
          status: _0x139db8,
          ctx: _0x30bbfe
        } = this._processInputParams(_0x1d9ddd);
        const {
          shape: _0x187fd3,
          keys: _0x50a485
        } = this._getCached();
        const _0x590012 = [];
        if (!(this._def.catchall instanceof _0x3ebd59) || this._def.unknownKeys !== "strip") {
          for (const _0x1bf128 in _0x30bbfe.data) {
            if (!_0x50a485.includes(_0x1bf128)) {
              _0x590012.push(_0x1bf128);
            }
          }
        }
        const _0x1f68e1 = [];
        for (const _0x5745eb of _0x50a485) {
          const _0x108e1c = _0x187fd3[_0x5745eb];
          const _0x3ba1ff = _0x30bbfe.data[_0x5745eb];
          var _0x346430 = {
            status: "valid",
            value: _0x5745eb
          };
          _0x1f68e1.push({
            key: _0x346430,
            value: _0x108e1c._parse(new _0x4c2ca6(_0x30bbfe, _0x3ba1ff, _0x30bbfe.path, _0x5745eb)),
            alwaysSet: _0x5745eb in _0x30bbfe.data
          });
        }
        if (this._def.catchall instanceof _0x3ebd59) {
          const _0x5ab1e0 = this._def.unknownKeys;
          if (_0x5ab1e0 === "passthrough") {
            for (const _0x37d1ce of _0x590012) {
              var _0xc1bb35 = {
                status: "valid",
                value: _0x37d1ce
              };
              var _0x55fac0 = {
                status: "valid",
                value: _0x30bbfe.data[_0x37d1ce]
              };
              var _0x3f12d9 = {
                key: _0xc1bb35,
                value: _0x55fac0
              };
              _0x1f68e1.push(_0x3f12d9);
            }
          } else if (_0x5ab1e0 === "strict") {
            if (_0x590012.length > 0) {
              var _0x5119f0 = {
                code: _0x31073a.unrecognized_keys,
                keys: _0x590012
              };
              _0x2f5996(_0x30bbfe, _0x5119f0);
              _0x139db8.dirty();
            }
          } else if (_0x5ab1e0 === "strip") ;else {
            throw new Error("Internal ZodObject error: invalid unknownKeys value.");
          }
        } else {
          const _0x1b7ffa = this._def.catchall;
          for (const _0x2009e0 of _0x590012) {
            const _0x48b9e8 = _0x30bbfe.data[_0x2009e0];
            var _0x3c530e = {
              status: "valid",
              value: _0x2009e0
            };
            _0x1f68e1.push({
              key: _0x3c530e,
              value: _0x1b7ffa._parse(new _0x4c2ca6(_0x30bbfe, _0x48b9e8, _0x30bbfe.path, _0x2009e0)),
              alwaysSet: _0x2009e0 in _0x30bbfe.data
            });
          }
        }
        if (_0x30bbfe.common.async) {
          return Promise.resolve().then(async () => {
            const _0x54334a = [];
            for (const _0x813d9a of _0x1f68e1) {
              const _0x26d137 = await _0x813d9a.key;
              var _0x303588 = {
                key: _0x26d137,
                value: await _0x813d9a.value,
                alwaysSet: _0x813d9a.alwaysSet
              };
              _0x54334a.push(_0x303588);
            }
            return _0x54334a;
          }).then(_0x23dcbe => {
            return _0x589df2.mergeObjectSync(_0x139db8, _0x23dcbe);
          });
        } else {
          return _0x589df2.mergeObjectSync(_0x139db8, _0x1f68e1);
        }
      }
      get shape() {
        return this._def.shape();
      }
      strict(_0x50d99a) {
        _0x30235d.errToObj;
        return new _0x3052b3({
          ...this._def,
          unknownKeys: "strict",
          ...(_0x50d99a !== undefined ? {
            errorMap: (_0x3e4bfb, _0x125cc8) => {
              var _0x3b422a;
              var _0x2f198c;
              const _0x4c7b21 = ((_0x2f198c = (_0x3b422a = this._def).errorMap) === null || _0x2f198c === undefined ? undefined : _0x2f198c.call(_0x3b422a, _0x3e4bfb, _0x125cc8).message) ?? _0x125cc8.defaultError;
              if (_0x3e4bfb.code === "unrecognized_keys") {
                return {
                  message: _0x30235d.errToObj(_0x50d99a).message ?? _0x4c7b21
                };
              }
              var _0xc5c39f = {
                message: _0x4c7b21
              };
              return _0xc5c39f;
            }
          } : {})
        });
      }
      strip() {
        var _0x4d95d4 = {
          ...this._def
        };
        _0x4d95d4.unknownKeys = "strip";
        return new _0x3052b3(_0x4d95d4);
      }
      passthrough() {
        var _0x4cc672 = {
          ...this._def
        };
        _0x4cc672.unknownKeys = "passthrough";
        return new _0x3052b3(_0x4cc672);
      }
      extend(_0x1483e3) {
        return new _0x3052b3({
          ...this._def,
          shape: () => ({
            ...this._def.shape(),
            ..._0x1483e3
          })
        });
      }
      merge(_0x14d4f5) {
        const _0x31eb79 = new _0x3052b3({
          unknownKeys: _0x14d4f5._def.unknownKeys,
          catchall: _0x14d4f5._def.catchall,
          shape: () => ({
            ...this._def.shape(),
            ..._0x14d4f5._def.shape()
          }),
          typeName: _0x335169.ZodObject
        });
        return _0x31eb79;
      }
      setKey(_0x2ae8d8, _0x59ae1e) {
        var _0xd4e1b3 = {
          [_0x2ae8d8]: _0x59ae1e
        };
        return this.augment(_0xd4e1b3);
      }
      catchall(_0x1a19cd) {
        var _0x5d59f1 = {
          ...this._def
        };
        _0x5d59f1.catchall = _0x1a19cd;
        return new _0x3052b3(_0x5d59f1);
      }
      pick(_0x43924f) {
        const _0x18d5a0 = {};
        _0x3275c9.objectKeys(_0x43924f).forEach(_0x2d262d => {
          if (_0x43924f[_0x2d262d] && this.shape[_0x2d262d]) {
            _0x18d5a0[_0x2d262d] = this.shape[_0x2d262d];
          }
        });
        var _0x1c5245 = {
          ...this._def
        };
        _0x1c5245.shape = () => _0x18d5a0;
        return new _0x3052b3(_0x1c5245);
      }
      omit(_0x1a6f25) {
        const _0x59b39f = {};
        _0x3275c9.objectKeys(this.shape).forEach(_0x2368a3 => {
          if (!_0x1a6f25[_0x2368a3]) {
            _0x59b39f[_0x2368a3] = this.shape[_0x2368a3];
          }
        });
        var _0x4042dc = {
          ...this._def
        };
        _0x4042dc.shape = () => _0x59b39f;
        return new _0x3052b3(_0x4042dc);
      }
      deepPartial() {
        return _0x7e7405(this);
      }
      partial(_0x70f730) {
        const _0x3fb44c = {};
        _0x3275c9.objectKeys(this.shape).forEach(_0x144437 => {
          const _0x150a86 = this.shape[_0x144437];
          if (_0x70f730 && !_0x70f730[_0x144437]) {
            _0x3fb44c[_0x144437] = _0x150a86;
          } else {
            _0x3fb44c[_0x144437] = _0x150a86.optional();
          }
        });
        var _0x5a2009 = {
          ...this._def
        };
        _0x5a2009.shape = () => _0x3fb44c;
        return new _0x3052b3(_0x5a2009);
      }
      required(_0x5008bd) {
        const _0x34a56a = {};
        _0x3275c9.objectKeys(this.shape).forEach(_0x4b91ae => {
          if (_0x5008bd && !_0x5008bd[_0x4b91ae]) {
            _0x34a56a[_0x4b91ae] = this.shape[_0x4b91ae];
          } else {
            const _0x2d333a = this.shape[_0x4b91ae];
            let _0x37e0cc = _0x2d333a;
            while (_0x37e0cc instanceof _0x14d8e5) {
              _0x37e0cc = _0x37e0cc._def.innerType;
            }
            _0x34a56a[_0x4b91ae] = _0x37e0cc;
          }
        });
        var _0x4a4fa8 = {
          ...this._def
        };
        _0x4a4fa8.shape = () => _0x34a56a;
        return new _0x3052b3(_0x4a4fa8);
      }
      keyof() {
        return _0xe676b9(_0x3275c9.objectKeys(this.shape));
      }
    }
    _0x3052b3.create = (_0x5e47c6, _0x326261) => {
      return new _0x3052b3({
        shape: () => _0x5e47c6,
        unknownKeys: "strip",
        catchall: _0x3ebd59.create(),
        typeName: _0x335169.ZodObject,
        ..._0xb317f2(_0x326261)
      });
    };
    _0x3052b3.strictCreate = (_0x452074, _0x490367) => {
      return new _0x3052b3({
        shape: () => _0x452074,
        unknownKeys: "strict",
        catchall: _0x3ebd59.create(),
        typeName: _0x335169.ZodObject,
        ..._0xb317f2(_0x490367)
      });
    };
    _0x3052b3.lazycreate = (_0x4a98d5, _0x343bd9) => {
      return new _0x3052b3({
        shape: _0x4a98d5,
        unknownKeys: "strip",
        catchall: _0x3ebd59.create(),
        typeName: _0x335169.ZodObject,
        ..._0xb317f2(_0x343bd9)
      });
    };
    class _0x2fbe72 extends _0x1bb570 {
      _parse(_0x82e2df) {
        const {
          ctx: _0x4bc716
        } = this._processInputParams(_0x82e2df);
        const _0x5a364a = this._def.options;
        function _0x484f37(_0x29c875) {
          for (const _0x4ea023 of _0x29c875) {
            if (_0x4ea023.result.status === "valid") {
              return _0x4ea023.result;
            }
          }
          for (const _0x54f27c of _0x29c875) {
            if (_0x54f27c.result.status === "dirty") {
              _0x4bc716.common.issues.push(..._0x54f27c.ctx.common.issues);
              return _0x54f27c.result;
            }
          }
          const _0x516a64 = _0x29c875.map(_0x38432b => new _0xe3343b(_0x38432b.ctx.common.issues));
          var _0x372379 = {
            code: _0x31073a.invalid_union,
            unionErrors: _0x516a64
          };
          _0x2f5996(_0x4bc716, _0x372379);
          return _0x2df4b8;
        }
        if (_0x4bc716.common.async) {
          return Promise.all(_0x5a364a.map(async _0x1f6b16 => {
            var _0x5d1e79 = {
              ..._0x4bc716
            };
            _0x5d1e79.common = {
              ..._0x4bc716.common
            };
            _0x5d1e79.parent = null;
            _0x5d1e79.common.issues = [];
            const _0x5780fc = _0x5d1e79;
            var _0x2d1198 = {
              data: _0x4bc716.data,
              path: _0x4bc716.path,
              parent: _0x5780fc
            };
            return {
              result: await _0x1f6b16._parseAsync(_0x2d1198),
              ctx: _0x5780fc
            };
          })).then(_0x484f37);
        } else {
          let _0xe90d9f = undefined;
          const _0x47d6d7 = [];
          for (const _0x19727 of _0x5a364a) {
            var _0x4324f2 = {
              ..._0x4bc716
            };
            _0x4324f2.common = {
              ..._0x4bc716.common
            };
            _0x4324f2.parent = null;
            _0x4324f2.common.issues = [];
            const _0x17083a = _0x4324f2;
            var _0x28dfb2 = {
              data: _0x4bc716.data,
              path: _0x4bc716.path,
              parent: _0x17083a
            };
            const _0x117588 = _0x19727._parseSync(_0x28dfb2);
            if (_0x117588.status === "valid") {
              return _0x117588;
            } else if (_0x117588.status === "dirty" && !_0xe90d9f) {
              var _0x1c6f22 = {
                result: _0x117588,
                ctx: _0x17083a
              };
              _0xe90d9f = _0x1c6f22;
            }
            if (_0x17083a.common.issues.length) {
              _0x47d6d7.push(_0x17083a.common.issues);
            }
          }
          if (_0xe90d9f) {
            _0x4bc716.common.issues.push(..._0xe90d9f.ctx.common.issues);
            return _0xe90d9f.result;
          }
          const _0x62dac3 = _0x47d6d7.map(_0x4dcfad => new _0xe3343b(_0x4dcfad));
          var _0x1d49d3 = {
            code: _0x31073a.invalid_union,
            unionErrors: _0x62dac3
          };
          _0x2f5996(_0x4bc716, _0x1d49d3);
          return _0x2df4b8;
        }
      }
      get options() {
        return this._def.options;
      }
    }
    _0x2fbe72.create = (_0x2ae2ad, _0x3708de) => {
      return new _0x2fbe72({
        options: _0x2ae2ad,
        typeName: _0x335169.ZodUnion,
        ..._0xb317f2(_0x3708de)
      });
    };
    const _0x2b0ea6 = _0x22957c => {
      if (_0x22957c instanceof _0x1c692f) {
        return _0x2b0ea6(_0x22957c.schema);
      } else if (_0x22957c instanceof _0x103599) {
        return _0x2b0ea6(_0x22957c.innerType());
      } else if (_0x22957c instanceof _0x49757c) {
        return [_0x22957c.value];
      } else if (_0x22957c instanceof _0x1d749d) {
        return _0x22957c.options;
      } else if (_0x22957c instanceof _0x338c6f) {
        return Object.keys(_0x22957c.enum);
      } else if (_0x22957c instanceof _0x27ecdf) {
        return _0x2b0ea6(_0x22957c._def.innerType);
      } else if (_0x22957c instanceof _0x580ae9) {
        return [undefined];
      } else if (_0x22957c instanceof _0x1a531c) {
        return [null];
      } else {
        return null;
      }
    };
    class _0x39ced6 extends _0x1bb570 {
      _parse(_0x426442) {
        const {
          ctx: _0x45e9be
        } = this._processInputParams(_0x426442);
        if (_0x45e9be.parsedType !== _0x49070e.object) {
          _0x2f5996(_0x45e9be, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.object,
            received: _0x45e9be.parsedType
          });
          return _0x2df4b8;
        }
        const _0x514ac2 = this.discriminator;
        const _0x54e60e = _0x45e9be.data[_0x514ac2];
        const _0x41d777 = this.optionsMap.get(_0x54e60e);
        if (!_0x41d777) {
          _0x2f5996(_0x45e9be, {
            code: _0x31073a.invalid_union_discriminator,
            options: Array.from(this.optionsMap.keys()),
            path: [_0x514ac2]
          });
          return _0x2df4b8;
        }
        if (_0x45e9be.common.async) {
          var _0x1711e5 = {
            data: _0x45e9be.data,
            path: _0x45e9be.path,
            parent: _0x45e9be
          };
          return _0x41d777._parseAsync(_0x1711e5);
        } else {
          var _0x1a436c = {
            data: _0x45e9be.data,
            path: _0x45e9be.path,
            parent: _0x45e9be
          };
          return _0x41d777._parseSync(_0x1a436c);
        }
      }
      get discriminator() {
        return this._def.discriminator;
      }
      get options() {
        return this._def.options;
      }
      get optionsMap() {
        return this._def.optionsMap;
      }
      static create(_0x571b53, _0x406801, _0x28a542) {
        const _0x70015 = new Map();
        for (const _0x49ba45 of _0x406801) {
          const _0x26e577 = _0x2b0ea6(_0x49ba45.shape[_0x571b53]);
          if (!_0x26e577) {
            throw new Error("A discriminator value for key `" + _0x571b53 + "` could not be extracted from all schema options");
          }
          for (const _0x37d704 of _0x26e577) {
            if (_0x70015.has(_0x37d704)) {
              throw new Error("Discriminator property " + String(_0x571b53) + " has duplicate value " + String(_0x37d704));
            }
            _0x70015.set(_0x37d704, _0x49ba45);
          }
        }
        return new _0x39ced6({
          typeName: _0x335169.ZodDiscriminatedUnion,
          discriminator: _0x571b53,
          options: _0x406801,
          optionsMap: _0x70015,
          ..._0xb317f2(_0x28a542)
        });
      }
    }
    function _0xc3004e(_0x511bd7, _0x85f0e9) {
      const _0x2be056 = _0x1ba0a2(_0x511bd7);
      const _0x180acb = _0x1ba0a2(_0x85f0e9);
      if (_0x511bd7 === _0x85f0e9) {
        var _0x5ef18c = {
          valid: true,
          data: _0x511bd7
        };
        return _0x5ef18c;
      } else if (_0x2be056 === _0x49070e.object && _0x180acb === _0x49070e.object) {
        const _0x2cad10 = _0x3275c9.objectKeys(_0x85f0e9);
        const _0x343127 = _0x3275c9.objectKeys(_0x511bd7).filter(_0x11d222 => _0x2cad10.indexOf(_0x11d222) !== -1);
        var _0x65f992 = {
          ..._0x511bd7,
          ..._0x85f0e9
        };
        const _0x1ae083 = _0x65f992;
        for (const _0x3ba75d of _0x343127) {
          const _0x3b94b5 = _0xc3004e(_0x511bd7[_0x3ba75d], _0x85f0e9[_0x3ba75d]);
          if (!_0x3b94b5.valid) {
            return {
              valid: false
            };
          }
          _0x1ae083[_0x3ba75d] = _0x3b94b5.data;
        }
        var _0x2a187f = {
          valid: true,
          data: _0x1ae083
        };
        return _0x2a187f;
      } else if (_0x2be056 === _0x49070e.array && _0x180acb === _0x49070e.array) {
        if (_0x511bd7.length !== _0x85f0e9.length) {
          return {
            valid: false
          };
        }
        const _0x247e48 = [];
        for (let _0x10b2e7 = 0; _0x10b2e7 < _0x511bd7.length; _0x10b2e7++) {
          const _0x392a17 = _0x511bd7[_0x10b2e7];
          const _0x48a03c = _0x85f0e9[_0x10b2e7];
          const _0x6c1175 = _0xc3004e(_0x392a17, _0x48a03c);
          if (!_0x6c1175.valid) {
            return {
              valid: false
            };
          }
          _0x247e48.push(_0x6c1175.data);
        }
        var _0x57fdc9 = {
          valid: true,
          data: _0x247e48
        };
        return _0x57fdc9;
      } else if (_0x2be056 === _0x49070e.date && _0x180acb === _0x49070e.date && +_0x511bd7 === +_0x85f0e9) {
        var _0x4cbee2 = {
          valid: true,
          data: _0x511bd7
        };
        return _0x4cbee2;
      } else {
        return {
          valid: false
        };
      }
    }
    class _0x14e749 extends _0x1bb570 {
      _parse(_0x58f4d6) {
        const {
          status: _0x467624,
          ctx: _0x52fdb1
        } = this._processInputParams(_0x58f4d6);
        const _0x1719b1 = (_0x3aa4e7, _0x598b6f) => {
          if (_0x57d1c4(_0x3aa4e7) || _0x57d1c4(_0x598b6f)) {
            return _0x2df4b8;
          }
          const _0x46a324 = _0xc3004e(_0x3aa4e7.value, _0x598b6f.value);
          if (!_0x46a324.valid) {
            var _0x3cde6d = {
              code: _0x31073a.invalid_intersection_types
            };
            _0x2f5996(_0x52fdb1, _0x3cde6d);
            return _0x2df4b8;
          }
          if (_0x371dd3(_0x3aa4e7) || _0x371dd3(_0x598b6f)) {
            _0x467624.dirty();
          }
          var _0x11aab7 = {
            status: _0x467624.value,
            value: _0x46a324.data
          };
          return _0x11aab7;
        };
        if (_0x52fdb1.common.async) {
          var _0x5e99f4 = {
            data: _0x52fdb1.data,
            path: _0x52fdb1.path,
            parent: _0x52fdb1
          };
          var _0x13e8e9 = {
            data: _0x52fdb1.data,
            path: _0x52fdb1.path,
            parent: _0x52fdb1
          };
          return Promise.all([this._def.left._parseAsync(_0x5e99f4), this._def.right._parseAsync(_0x13e8e9)]).then(([_0x4cd237, _0x23b751]) => _0x1719b1(_0x4cd237, _0x23b751));
        } else {
          var _0xef34d1 = {
            data: _0x52fdb1.data,
            path: _0x52fdb1.path,
            parent: _0x52fdb1
          };
          var _0x495b23 = {
            data: _0x52fdb1.data,
            path: _0x52fdb1.path,
            parent: _0x52fdb1
          };
          return _0x1719b1(this._def.left._parseSync(_0xef34d1), this._def.right._parseSync(_0x495b23));
        }
      }
    }
    _0x14e749.create = (_0x457a55, _0x4cceec, _0x2ec698) => {
      return new _0x14e749({
        left: _0x457a55,
        right: _0x4cceec,
        typeName: _0x335169.ZodIntersection,
        ..._0xb317f2(_0x2ec698)
      });
    };
    class _0x438ce6 extends _0x1bb570 {
      _parse(_0x200ae3) {
        const {
          status: _0x110567,
          ctx: _0x1bf090
        } = this._processInputParams(_0x200ae3);
        if (_0x1bf090.parsedType !== _0x49070e.array) {
          _0x2f5996(_0x1bf090, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.array,
            received: _0x1bf090.parsedType
          });
          return _0x2df4b8;
        }
        if (_0x1bf090.data.length < this._def.items.length) {
          var _0x3ac77d = {
            code: _0x31073a.too_small,
            minimum: this._def.items.length,
            inclusive: true,
            exact: false,
            type: "array"
          };
          _0x2f5996(_0x1bf090, _0x3ac77d);
          return _0x2df4b8;
        }
        const _0x1bd3f0 = this._def.rest;
        if (!_0x1bd3f0 && _0x1bf090.data.length > this._def.items.length) {
          var _0xbd5a1f = {
            code: _0x31073a.too_big,
            maximum: this._def.items.length,
            inclusive: true,
            exact: false,
            type: "array"
          };
          _0x2f5996(_0x1bf090, _0xbd5a1f);
          _0x110567.dirty();
        }
        const _0x5e25ba = [..._0x1bf090.data].map((_0x3d1a87, _0x38ab1) => {
          const _0x4c8267 = this._def.items[_0x38ab1] || this._def.rest;
          if (!_0x4c8267) {
            return null;
          }
          return _0x4c8267._parse(new _0x4c2ca6(_0x1bf090, _0x3d1a87, _0x1bf090.path, _0x38ab1));
        }).filter(_0x308c21 => !!_0x308c21);
        if (_0x1bf090.common.async) {
          return Promise.all(_0x5e25ba).then(_0x2298a3 => {
            return _0x589df2.mergeArray(_0x110567, _0x2298a3);
          });
        } else {
          return _0x589df2.mergeArray(_0x110567, _0x5e25ba);
        }
      }
      get items() {
        return this._def.items;
      }
      rest(_0x7831e9) {
        var _0x3974e1 = {
          ...this._def
        };
        _0x3974e1.rest = _0x7831e9;
        return new _0x438ce6(_0x3974e1);
      }
    }
    _0x438ce6.create = (_0x1e8aed, _0x2fd793) => {
      if (!Array.isArray(_0x1e8aed)) {
        throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
      }
      return new _0x438ce6({
        items: _0x1e8aed,
        typeName: _0x335169.ZodTuple,
        rest: null,
        ..._0xb317f2(_0x2fd793)
      });
    };
    class _0x2bd328 extends _0x1bb570 {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(_0x13cf14) {
        const {
          status: _0x9ccfec,
          ctx: _0x50322c
        } = this._processInputParams(_0x13cf14);
        if (_0x50322c.parsedType !== _0x49070e.object) {
          _0x2f5996(_0x50322c, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.object,
            received: _0x50322c.parsedType
          });
          return _0x2df4b8;
        }
        const _0x144f67 = [];
        const _0x1a2cd3 = this._def.keyType;
        const _0x45e528 = this._def.valueType;
        for (const _0x43ce45 in _0x50322c.data) {
          _0x144f67.push({
            key: _0x1a2cd3._parse(new _0x4c2ca6(_0x50322c, _0x43ce45, _0x50322c.path, _0x43ce45)),
            value: _0x45e528._parse(new _0x4c2ca6(_0x50322c, _0x50322c.data[_0x43ce45], _0x50322c.path, _0x43ce45))
          });
        }
        if (_0x50322c.common.async) {
          return _0x589df2.mergeObjectAsync(_0x9ccfec, _0x144f67);
        } else {
          return _0x589df2.mergeObjectSync(_0x9ccfec, _0x144f67);
        }
      }
      get element() {
        return this._def.valueType;
      }
      static create(_0xbfc875, _0x524cc4, _0x5c34fa) {
        if (_0x524cc4 instanceof _0x1bb570) {
          return new _0x2bd328({
            keyType: _0xbfc875,
            valueType: _0x524cc4,
            typeName: _0x335169.ZodRecord,
            ..._0xb317f2(_0x5c34fa)
          });
        }
        return new _0x2bd328({
          keyType: _0x18b2b2.create(),
          valueType: _0xbfc875,
          typeName: _0x335169.ZodRecord,
          ..._0xb317f2(_0x524cc4)
        });
      }
    }
    class _0x93ab25 extends _0x1bb570 {
      _parse(_0x24c5ff) {
        const {
          status: _0x1f2971,
          ctx: _0x2c0c85
        } = this._processInputParams(_0x24c5ff);
        if (_0x2c0c85.parsedType !== _0x49070e.map) {
          _0x2f5996(_0x2c0c85, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.map,
            received: _0x2c0c85.parsedType
          });
          return _0x2df4b8;
        }
        const _0x555875 = this._def.keyType;
        const _0x3f70b9 = this._def.valueType;
        const _0x21f762 = [..._0x2c0c85.data.entries()].map(([_0x14a317, _0x56d516], _0x3839c1) => {
          return {
            key: _0x555875._parse(new _0x4c2ca6(_0x2c0c85, _0x14a317, _0x2c0c85.path, [_0x3839c1, "key"])),
            value: _0x3f70b9._parse(new _0x4c2ca6(_0x2c0c85, _0x56d516, _0x2c0c85.path, [_0x3839c1, "value"]))
          };
        });
        if (_0x2c0c85.common.async) {
          const _0x4553de = new Map();
          return Promise.resolve().then(async () => {
            for (const _0x35ebfe of _0x21f762) {
              const _0x39b2fb = await _0x35ebfe.key;
              const _0x220ed2 = await _0x35ebfe.value;
              if (_0x39b2fb.status === "aborted" || _0x220ed2.status === "aborted") {
                return _0x2df4b8;
              }
              if (_0x39b2fb.status === "dirty" || _0x220ed2.status === "dirty") {
                _0x1f2971.dirty();
              }
              _0x4553de.set(_0x39b2fb.value, _0x220ed2.value);
            }
            var _0x5886a9 = {
              status: _0x1f2971.value,
              value: _0x4553de
            };
            return _0x5886a9;
          });
        } else {
          const _0x239212 = new Map();
          for (const _0xf9e533 of _0x21f762) {
            const _0x49d02a = _0xf9e533.key;
            const _0x2d14eb = _0xf9e533.value;
            if (_0x49d02a.status === "aborted" || _0x2d14eb.status === "aborted") {
              return _0x2df4b8;
            }
            if (_0x49d02a.status === "dirty" || _0x2d14eb.status === "dirty") {
              _0x1f2971.dirty();
            }
            _0x239212.set(_0x49d02a.value, _0x2d14eb.value);
          }
          var _0x3aaac8 = {
            status: _0x1f2971.value,
            value: _0x239212
          };
          return _0x3aaac8;
        }
      }
    }
    _0x93ab25.create = (_0x47ed88, _0x24ee42, _0x4526df) => {
      return new _0x93ab25({
        valueType: _0x24ee42,
        keyType: _0x47ed88,
        typeName: _0x335169.ZodMap,
        ..._0xb317f2(_0x4526df)
      });
    };
    class _0x510816 extends _0x1bb570 {
      _parse(_0x4d1328) {
        const {
          status: _0x25bf04,
          ctx: _0x102e6e
        } = this._processInputParams(_0x4d1328);
        if (_0x102e6e.parsedType !== _0x49070e.set) {
          _0x2f5996(_0x102e6e, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.set,
            received: _0x102e6e.parsedType
          });
          return _0x2df4b8;
        }
        const _0x34d516 = this._def;
        if (_0x34d516.minSize !== null) {
          if (_0x102e6e.data.size < _0x34d516.minSize.value) {
            var _0x5d8ed1 = {
              code: _0x31073a.too_small,
              minimum: _0x34d516.minSize.value,
              type: "set",
              inclusive: true,
              exact: false,
              message: _0x34d516.minSize.message
            };
            _0x2f5996(_0x102e6e, _0x5d8ed1);
            _0x25bf04.dirty();
          }
        }
        if (_0x34d516.maxSize !== null) {
          if (_0x102e6e.data.size > _0x34d516.maxSize.value) {
            var _0x166105 = {
              code: _0x31073a.too_big,
              maximum: _0x34d516.maxSize.value,
              type: "set",
              inclusive: true,
              exact: false,
              message: _0x34d516.maxSize.message
            };
            _0x2f5996(_0x102e6e, _0x166105);
            _0x25bf04.dirty();
          }
        }
        const _0x1476a2 = this._def.valueType;
        function _0x9b6609(_0x416e6f) {
          const _0x2e92ba = new Set();
          for (const _0x437504 of _0x416e6f) {
            if (_0x437504.status === "aborted") {
              return _0x2df4b8;
            }
            if (_0x437504.status === "dirty") {
              _0x25bf04.dirty();
            }
            _0x2e92ba.add(_0x437504.value);
          }
          var _0x48c16c = {
            status: _0x25bf04.value,
            value: _0x2e92ba
          };
          return _0x48c16c;
        }
        const _0x486d9a = [..._0x102e6e.data.values()].map((_0x5a1c79, _0x59bb83) => _0x1476a2._parse(new _0x4c2ca6(_0x102e6e, _0x5a1c79, _0x102e6e.path, _0x59bb83)));
        if (_0x102e6e.common.async) {
          return Promise.all(_0x486d9a).then(_0x4ee023 => _0x9b6609(_0x4ee023));
        } else {
          return _0x9b6609(_0x486d9a);
        }
      }
      min(_0x227944, _0x56b7a0) {
        return new _0x510816({
          ...this._def,
          minSize: {
            value: _0x227944,
            message: _0x30235d.toString(_0x56b7a0)
          }
        });
      }
      max(_0x2d73c1, _0x154361) {
        return new _0x510816({
          ...this._def,
          maxSize: {
            value: _0x2d73c1,
            message: _0x30235d.toString(_0x154361)
          }
        });
      }
      size(_0x370c65, _0x4a6321) {
        return this.min(_0x370c65, _0x4a6321).max(_0x370c65, _0x4a6321);
      }
      nonempty(_0x266b69) {
        return this.min(1, _0x266b69);
      }
    }
    _0x510816.create = (_0x2eefc4, _0x5b2b94) => {
      return new _0x510816({
        valueType: _0x2eefc4,
        minSize: null,
        maxSize: null,
        typeName: _0x335169.ZodSet,
        ..._0xb317f2(_0x5b2b94)
      });
    };
    class _0x542846 extends _0x1bb570 {
      constructor() {
        super(...arguments);
        this.validate = this.implement;
      }
      _parse(_0x4f45eb) {
        const {
          ctx: _0x183333
        } = this._processInputParams(_0x4f45eb);
        if (_0x183333.parsedType !== _0x49070e.function) {
          _0x2f5996(_0x183333, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.function,
            received: _0x183333.parsedType
          });
          return _0x2df4b8;
        }
        function _0x1ff3e9(_0x3b77c0, _0x534f52) {
          var _0x1aeb1f = {
            code: _0x31073a.invalid_arguments,
            argumentsError: _0x534f52
          };
          return _0x2e65c4({
            data: _0x3b77c0,
            path: _0x183333.path,
            errorMaps: [_0x183333.common.contextualErrorMap, _0x183333.schemaErrorMap, _0x41ab3c(), _0x3464b8].filter(_0xdcbb44 => !!_0xdcbb44),
            issueData: _0x1aeb1f
          });
        }
        function _0x5cf64a(_0x7e5ada, _0x1e92d0) {
          var _0x12afc6 = {
            code: _0x31073a.invalid_return_type,
            returnTypeError: _0x1e92d0
          };
          return _0x2e65c4({
            data: _0x7e5ada,
            path: _0x183333.path,
            errorMaps: [_0x183333.common.contextualErrorMap, _0x183333.schemaErrorMap, _0x41ab3c(), _0x3464b8].filter(_0x3a97df => !!_0x3a97df),
            issueData: _0x12afc6
          });
        }
        var _0x1ebbee = {
          errorMap: _0x183333.common.contextualErrorMap
        };
        const _0x1723aa = _0x1ebbee;
        const _0x175b9a = _0x183333.data;
        if (this._def.returns instanceof _0x493747) {
          return _0x46f42f(async (..._0x384f6a) => {
            const _0x3725cf = new _0xe3343b([]);
            const _0x243976 = await this._def.args.parseAsync(_0x384f6a, _0x1723aa).catch(_0x1cede3 => {
              _0x3725cf.addIssue(_0x1ff3e9(_0x384f6a, _0x1cede3));
              throw _0x3725cf;
            });
            const _0x37e992 = await _0x175b9a(..._0x243976);
            const _0x4cf184 = await this._def.returns._def.type.parseAsync(_0x37e992, _0x1723aa).catch(_0x73e461 => {
              _0x3725cf.addIssue(_0x5cf64a(_0x37e992, _0x73e461));
              throw _0x3725cf;
            });
            return _0x4cf184;
          });
        } else {
          return _0x46f42f((..._0x48ae7d) => {
            const _0x5d7228 = this._def.args.safeParse(_0x48ae7d, _0x1723aa);
            if (!_0x5d7228.success) {
              throw new _0xe3343b([_0x1ff3e9(_0x48ae7d, _0x5d7228.error)]);
            }
            const _0x4c9d31 = _0x175b9a(..._0x5d7228.data);
            const _0x18af21 = this._def.returns.safeParse(_0x4c9d31, _0x1723aa);
            if (!_0x18af21.success) {
              throw new _0xe3343b([_0x5cf64a(_0x4c9d31, _0x18af21.error)]);
            }
            return _0x18af21.data;
          });
        }
      }
      parameters() {
        return this._def.args;
      }
      returnType() {
        return this._def.returns;
      }
      args(..._0x509033) {
        return new _0x542846({
          ...this._def,
          args: _0x438ce6.create(_0x509033).rest(_0x54164e.create())
        });
      }
      returns(_0x12fe71) {
        var _0x2dce14 = {
          ...this._def
        };
        _0x2dce14.returns = _0x12fe71;
        return new _0x542846(_0x2dce14);
      }
      implement(_0xa5e5c5) {
        const _0x4c2489 = this.parse(_0xa5e5c5);
        return _0x4c2489;
      }
      strictImplement(_0x1f44e0) {
        const _0x12a3c7 = this.parse(_0x1f44e0);
        return _0x12a3c7;
      }
      static create(_0x2ebdc2, _0x3ac4d7, _0x4c9d9e) {
        return new _0x542846({
          args: _0x2ebdc2 ? _0x2ebdc2 : _0x438ce6.create([]).rest(_0x54164e.create()),
          returns: _0x3ac4d7 || _0x54164e.create(),
          typeName: _0x335169.ZodFunction,
          ..._0xb317f2(_0x4c9d9e)
        });
      }
    }
    class _0x1c692f extends _0x1bb570 {
      get schema() {
        return this._def.getter();
      }
      _parse(_0x3e8810) {
        const {
          ctx: _0x2bf6a6
        } = this._processInputParams(_0x3e8810);
        const _0x11d4c3 = this._def.getter();
        var _0x96a791 = {
          data: _0x2bf6a6.data,
          path: _0x2bf6a6.path,
          parent: _0x2bf6a6
        };
        return _0x11d4c3._parse(_0x96a791);
      }
    }
    _0x1c692f.create = (_0x2fb7fd, _0x5f596b) => {
      return new _0x1c692f({
        getter: _0x2fb7fd,
        typeName: _0x335169.ZodLazy,
        ..._0xb317f2(_0x5f596b)
      });
    };
    class _0x49757c extends _0x1bb570 {
      _parse(_0x4bd773) {
        if (_0x4bd773.data !== this._def.value) {
          const _0x596928 = this._getOrReturnCtx(_0x4bd773);
          _0x2f5996(_0x596928, {
            received: _0x596928.data,
            code: _0x31073a.invalid_literal,
            expected: this._def.value
          });
          return _0x2df4b8;
        }
        var _0x32356e = {
          status: "valid",
          value: _0x4bd773.data
        };
        return _0x32356e;
      }
      get value() {
        return this._def.value;
      }
    }
    _0x49757c.create = (_0x3b16e7, _0x229b3d) => {
      return new _0x49757c({
        value: _0x3b16e7,
        typeName: _0x335169.ZodLiteral,
        ..._0xb317f2(_0x229b3d)
      });
    };
    function _0xe676b9(_0x5aeda8, _0x5d4678) {
      return new _0x1d749d({
        values: _0x5aeda8,
        typeName: _0x335169.ZodEnum,
        ..._0xb317f2(_0x5d4678)
      });
    }
    class _0x1d749d extends _0x1bb570 {
      _parse(_0x246650) {
        if (typeof _0x246650.data !== "string") {
          const _0x48f119 = this._getOrReturnCtx(_0x246650);
          const _0x3f3fee = this._def.values;
          _0x2f5996(_0x48f119, {
            expected: _0x3275c9.joinValues(_0x3f3fee),
            received: _0x48f119.parsedType,
            code: _0x31073a.invalid_type
          });
          return _0x2df4b8;
        }
        if (this._def.values.indexOf(_0x246650.data) === -1) {
          const _0x22bee3 = this._getOrReturnCtx(_0x246650);
          const _0x215897 = this._def.values;
          _0x2f5996(_0x22bee3, {
            received: _0x22bee3.data,
            code: _0x31073a.invalid_enum_value,
            options: _0x215897
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0x246650.data);
      }
      get options() {
        return this._def.values;
      }
      get enum() {
        const _0x83b4a0 = {};
        for (const _0x5d381d of this._def.values) {
          _0x83b4a0[_0x5d381d] = _0x5d381d;
        }
        return _0x83b4a0;
      }
      get Values() {
        const _0x350887 = {};
        for (const _0x4b1543 of this._def.values) {
          _0x350887[_0x4b1543] = _0x4b1543;
        }
        return _0x350887;
      }
      get Enum() {
        const _0x5c896b = {};
        for (const _0x366160 of this._def.values) {
          _0x5c896b[_0x366160] = _0x366160;
        }
        return _0x5c896b;
      }
      extract(_0xcf48bb) {
        return _0x1d749d.create(_0xcf48bb);
      }
      exclude(_0x507260) {
        return _0x1d749d.create(this.options.filter(_0x819c3a => !_0x507260.includes(_0x819c3a)));
      }
    }
    _0x1d749d.create = _0xe676b9;
    class _0x338c6f extends _0x1bb570 {
      _parse(_0x187076) {
        const _0x25aee6 = _0x3275c9.getValidEnumValues(this._def.values);
        const _0xf9d513 = this._getOrReturnCtx(_0x187076);
        if (_0xf9d513.parsedType !== _0x49070e.string && _0xf9d513.parsedType !== _0x49070e.number) {
          const _0x3fb719 = _0x3275c9.objectValues(_0x25aee6);
          _0x2f5996(_0xf9d513, {
            expected: _0x3275c9.joinValues(_0x3fb719),
            received: _0xf9d513.parsedType,
            code: _0x31073a.invalid_type
          });
          return _0x2df4b8;
        }
        if (_0x25aee6.indexOf(_0x187076.data) === -1) {
          const _0x4a915a = _0x3275c9.objectValues(_0x25aee6);
          _0x2f5996(_0xf9d513, {
            received: _0xf9d513.data,
            code: _0x31073a.invalid_enum_value,
            options: _0x4a915a
          });
          return _0x2df4b8;
        }
        return _0x46f42f(_0x187076.data);
      }
      get enum() {
        return this._def.values;
      }
    }
    _0x338c6f.create = (_0x37add8, _0x32a22a) => {
      return new _0x338c6f({
        values: _0x37add8,
        typeName: _0x335169.ZodNativeEnum,
        ..._0xb317f2(_0x32a22a)
      });
    };
    class _0x493747 extends _0x1bb570 {
      unwrap() {
        return this._def.type;
      }
      _parse(_0x3b324d) {
        const {
          ctx: _0x250651
        } = this._processInputParams(_0x3b324d);
        if (_0x250651.parsedType !== _0x49070e.promise && _0x250651.common.async === false) {
          _0x2f5996(_0x250651, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.promise,
            received: _0x250651.parsedType
          });
          return _0x2df4b8;
        }
        const _0x4057c2 = _0x250651.parsedType === _0x49070e.promise ? _0x250651.data : Promise.resolve(_0x250651.data);
        return _0x46f42f(_0x4057c2.then(_0x476c02 => {
          var _0x387809 = {
            path: _0x250651.path,
            errorMap: _0x250651.common.contextualErrorMap
          };
          return this._def.type.parseAsync(_0x476c02, _0x387809);
        }));
      }
    }
    _0x493747.create = (_0x117538, _0x2b76b5) => {
      return new _0x493747({
        type: _0x117538,
        typeName: _0x335169.ZodPromise,
        ..._0xb317f2(_0x2b76b5)
      });
    };
    class _0x103599 extends _0x1bb570 {
      innerType() {
        return this._def.schema;
      }
      sourceType() {
        if (this._def.schema._def.typeName === _0x335169.ZodEffects) {
          return this._def.schema.sourceType();
        } else {
          return this._def.schema;
        }
      }
      _parse(_0x3c7e90) {
        const {
          status: _0x324938,
          ctx: _0x1c5190
        } = this._processInputParams(_0x3c7e90);
        const _0x539535 = this._def.effect || null;
        if (_0x539535.type === "preprocess") {
          const _0x41ccb2 = _0x539535.transform(_0x1c5190.data);
          if (_0x1c5190.common.async) {
            return Promise.resolve(_0x41ccb2).then(_0x38be7b => {
              var _0x4a029e = {
                data: _0x38be7b,
                path: _0x1c5190.path,
                parent: _0x1c5190
              };
              return this._def.schema._parseAsync(_0x4a029e);
            });
          } else {
            var _0x6c8304 = {
              data: _0x41ccb2,
              path: _0x1c5190.path,
              parent: _0x1c5190
            };
            return this._def.schema._parseSync(_0x6c8304);
          }
        }
        const _0x14e9a6 = {
          addIssue: _0x1c0607 => {
            _0x2f5996(_0x1c5190, _0x1c0607);
            if (_0x1c0607.fatal) {
              _0x324938.abort();
            } else {
              _0x324938.dirty();
            }
          },
          get path() {
            return _0x1c5190.path;
          }
        };
        _0x14e9a6.addIssue = _0x14e9a6.addIssue.bind(_0x14e9a6);
        if (_0x539535.type === "refinement") {
          const _0x3d1294 = _0x2165ac => {
            const _0x45dc39 = _0x539535.refinement(_0x2165ac, _0x14e9a6);
            if (_0x1c5190.common.async) {
              return Promise.resolve(_0x45dc39);
            }
            if (_0x45dc39 instanceof Promise) {
              throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
            }
            return _0x2165ac;
          };
          if (_0x1c5190.common.async === false) {
            var _0x16a087 = {
              data: _0x1c5190.data,
              path: _0x1c5190.path,
              parent: _0x1c5190
            };
            const _0x42e992 = this._def.schema._parseSync(_0x16a087);
            if (_0x42e992.status === "aborted") {
              return _0x2df4b8;
            }
            if (_0x42e992.status === "dirty") {
              _0x324938.dirty();
            }
            _0x3d1294(_0x42e992.value);
            var _0x3d9fa9 = {
              status: _0x324938.value,
              value: _0x42e992.value
            };
            return _0x3d9fa9;
          } else {
            var _0x2620e0 = {
              data: _0x1c5190.data,
              path: _0x1c5190.path,
              parent: _0x1c5190
            };
            return this._def.schema._parseAsync(_0x2620e0).then(_0xdf0475 => {
              if (_0xdf0475.status === "aborted") {
                return _0x2df4b8;
              }
              if (_0xdf0475.status === "dirty") {
                _0x324938.dirty();
              }
              return _0x3d1294(_0xdf0475.value).then(() => {
                var _0x455766 = {
                  status: _0x324938.value,
                  value: _0xdf0475.value
                };
                return _0x455766;
              });
            });
          }
        }
        if (_0x539535.type === "transform") {
          if (_0x1c5190.common.async === false) {
            var _0x3f7d66 = {
              data: _0x1c5190.data,
              path: _0x1c5190.path,
              parent: _0x1c5190
            };
            const _0x4cbd54 = this._def.schema._parseSync(_0x3f7d66);
            if (!_0x211544(_0x4cbd54)) {
              return _0x4cbd54;
            }
            const _0x4804ad = _0x539535.transform(_0x4cbd54.value, _0x14e9a6);
            if (_0x4804ad instanceof Promise) {
              throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
            }
            var _0x483277 = {
              status: _0x324938.value,
              value: _0x4804ad
            };
            return _0x483277;
          } else {
            var _0x2d1630 = {
              data: _0x1c5190.data,
              path: _0x1c5190.path,
              parent: _0x1c5190
            };
            return this._def.schema._parseAsync(_0x2d1630).then(_0xd1388c => {
              if (!_0x211544(_0xd1388c)) {
                return _0xd1388c;
              }
              return Promise.resolve(_0x539535.transform(_0xd1388c.value, _0x14e9a6)).then(_0x3dafb3 => ({
                status: _0x324938.value,
                value: _0x3dafb3
              }));
            });
          }
        }
        _0x3275c9.assertNever(_0x539535);
      }
    }
    _0x103599.create = (_0x4ef134, _0x41c52c, _0x187c33) => {
      return new _0x103599({
        schema: _0x4ef134,
        typeName: _0x335169.ZodEffects,
        effect: _0x41c52c,
        ..._0xb317f2(_0x187c33)
      });
    };
    _0x103599.createWithPreprocess = (_0x1a904a, _0x1a4472, _0x34d0b1) => {
      var _0x1c19af = {
        type: "preprocess",
        transform: _0x1a904a
      };
      return new _0x103599({
        schema: _0x1a4472,
        effect: _0x1c19af,
        typeName: _0x335169.ZodEffects,
        ..._0xb317f2(_0x34d0b1)
      });
    };
    class _0x14d8e5 extends _0x1bb570 {
      _parse(_0x52cf92) {
        const _0x337b77 = this._getType(_0x52cf92);
        if (_0x337b77 === _0x49070e.undefined) {
          return _0x46f42f(undefined);
        }
        return this._def.innerType._parse(_0x52cf92);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    _0x14d8e5.create = (_0x19ea8a, _0x41bc99) => {
      return new _0x14d8e5({
        innerType: _0x19ea8a,
        typeName: _0x335169.ZodOptional,
        ..._0xb317f2(_0x41bc99)
      });
    };
    class _0xa324d5 extends _0x1bb570 {
      _parse(_0x507f83) {
        const _0x50255b = this._getType(_0x507f83);
        if (_0x50255b === _0x49070e.null) {
          return _0x46f42f(null);
        }
        return this._def.innerType._parse(_0x507f83);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    _0xa324d5.create = (_0x10a0c0, _0x2d5acd) => {
      return new _0xa324d5({
        innerType: _0x10a0c0,
        typeName: _0x335169.ZodNullable,
        ..._0xb317f2(_0x2d5acd)
      });
    };
    class _0x27ecdf extends _0x1bb570 {
      _parse(_0x26ea4d) {
        const {
          ctx: _0x462838
        } = this._processInputParams(_0x26ea4d);
        let _0x43150c = _0x462838.data;
        if (_0x462838.parsedType === _0x49070e.undefined) {
          _0x43150c = this._def.defaultValue();
        }
        var _0x1668b5 = {
          data: _0x43150c,
          path: _0x462838.path,
          parent: _0x462838
        };
        return this._def.innerType._parse(_0x1668b5);
      }
      removeDefault() {
        return this._def.innerType;
      }
    }
    _0x27ecdf.create = (_0x5cf7c7, _0x519962) => {
      return new _0x27ecdf({
        innerType: _0x5cf7c7,
        typeName: _0x335169.ZodDefault,
        defaultValue: typeof _0x519962.default === "function" ? _0x519962.default : () => _0x519962.default,
        ..._0xb317f2(_0x519962)
      });
    };
    class _0xc598e7 extends _0x1bb570 {
      _parse(_0x1f689c) {
        const {
          ctx: _0x57dda8
        } = this._processInputParams(_0x1f689c);
        var _0x34d2d2 = {
          ..._0x57dda8
        };
        _0x34d2d2.common = {
          ..._0x57dda8.common
        };
        _0x34d2d2.common.issues = [];
        const _0x16de2f = _0x34d2d2;
        var _0xfa9283 = {
          data: _0x16de2f.data,
          path: _0x16de2f.path,
          parent: {
            ..._0x16de2f
          }
        };
        const _0x13bb44 = this._def.innerType._parse(_0xfa9283);
        if (_0x47f166(_0x13bb44)) {
          return _0x13bb44.then(_0x31b4a5 => {
            return {
              status: "valid",
              value: _0x31b4a5.status === "valid" ? _0x31b4a5.value : this._def.catchValue({
                get error() {
                  return new _0xe3343b(_0x16de2f.common.issues);
                },
                input: _0x16de2f.data
              })
            };
          });
        } else {
          return {
            status: "valid",
            value: _0x13bb44.status === "valid" ? _0x13bb44.value : this._def.catchValue({
              get error() {
                return new _0xe3343b(_0x16de2f.common.issues);
              },
              input: _0x16de2f.data
            })
          };
        }
      }
      removeCatch() {
        return this._def.innerType;
      }
    }
    _0xc598e7.create = (_0x2ff9ee, _0x1e4764) => {
      return new _0xc598e7({
        innerType: _0x2ff9ee,
        typeName: _0x335169.ZodCatch,
        catchValue: typeof _0x1e4764.catch === "function" ? _0x1e4764.catch : () => _0x1e4764.catch,
        ..._0xb317f2(_0x1e4764)
      });
    };
    class _0x7b50f8 extends _0x1bb570 {
      _parse(_0x4375bb) {
        const _0x5719fa = this._getType(_0x4375bb);
        if (_0x5719fa !== _0x49070e.nan) {
          const _0x44b742 = this._getOrReturnCtx(_0x4375bb);
          _0x2f5996(_0x44b742, {
            code: _0x31073a.invalid_type,
            expected: _0x49070e.nan,
            received: _0x44b742.parsedType
          });
          return _0x2df4b8;
        }
        var _0x4d3221 = {
          status: "valid",
          value: _0x4375bb.data
        };
        return _0x4d3221;
      }
    }
    _0x7b50f8.create = _0x4c7fd8 => {
      return new _0x7b50f8({
        typeName: _0x335169.ZodNaN,
        ..._0xb317f2(_0x4c7fd8)
      });
    };
    const _0x807fd1 = Symbol("zod_brand");
    class _0x2f92f5 extends _0x1bb570 {
      _parse(_0x5c59a4) {
        const {
          ctx: _0x1101f5
        } = this._processInputParams(_0x5c59a4);
        const _0x5a779 = _0x1101f5.data;
        var _0x4e47b0 = {
          data: _0x5a779,
          path: _0x1101f5.path,
          parent: _0x1101f5
        };
        return this._def.type._parse(_0x4e47b0);
      }
      unwrap() {
        return this._def.type;
      }
    }
    class _0x5b6f1f extends _0x1bb570 {
      _parse(_0x2b5cba) {
        const {
          status: _0xbc2f5d,
          ctx: _0x597bd
        } = this._processInputParams(_0x2b5cba);
        if (_0x597bd.common.async) {
          const _0x3ad717 = async () => {
            var _0x24513b = {
              data: _0x597bd.data,
              path: _0x597bd.path,
              parent: _0x597bd
            };
            const _0x1b21c9 = await this._def.in._parseAsync(_0x24513b);
            if (_0x1b21c9.status === "aborted") {
              return _0x2df4b8;
            }
            if (_0x1b21c9.status === "dirty") {
              _0xbc2f5d.dirty();
              return _0x432c0a(_0x1b21c9.value);
            } else {
              var _0x4e4a29 = {
                data: _0x1b21c9.value,
                path: _0x597bd.path,
                parent: _0x597bd
              };
              return this._def.out._parseAsync(_0x4e4a29);
            }
          };
          return _0x3ad717();
        } else {
          var _0x1c09eb = {
            data: _0x597bd.data,
            path: _0x597bd.path,
            parent: _0x597bd
          };
          const _0xe7a07d = this._def.in._parseSync(_0x1c09eb);
          if (_0xe7a07d.status === "aborted") {
            return _0x2df4b8;
          }
          if (_0xe7a07d.status === "dirty") {
            _0xbc2f5d.dirty();
            var _0x2b57b5 = {
              status: "dirty",
              value: _0xe7a07d.value
            };
            return _0x2b57b5;
          } else {
            var _0x45b015 = {
              data: _0xe7a07d.value,
              path: _0x597bd.path,
              parent: _0x597bd
            };
            return this._def.out._parseSync(_0x45b015);
          }
        }
      }
      static create(_0xfcaa77, _0x56bd36) {
        var _0x5e53e1 = {
          in: _0xfcaa77,
          out: _0x56bd36,
          typeName: _0x335169.ZodPipeline
        };
        return new _0x5b6f1f(_0x5e53e1);
      }
    }
    const _0x35949f = (_0x1f2d14, _0x435c36 = {}, _0x3adcc0) => {
      if (_0x1f2d14) {
        return _0x4d814c.create().superRefine((_0x4f2ab4, _0x2e0d3e) => {
          if (!_0x1f2d14(_0x4f2ab4)) {
            const _0x27ac6e = typeof _0x435c36 === "function" ? _0x435c36(_0x4f2ab4) : typeof _0x435c36 === "string" ? {
              message: _0x435c36
            } : _0x435c36;
            const _0x56e6f4 = _0x27ac6e.fatal ?? _0x3adcc0 ?? true;
            const _0x18399f = typeof _0x27ac6e === "string" ? {
              message: _0x27ac6e
            } : _0x27ac6e;
            var _0x1c2c06 = {
              code: "custom",
              ..._0x18399f
            };
            _0x1c2c06.fatal = _0x56e6f4;
            _0x2e0d3e.addIssue(_0x1c2c06);
          }
        });
      }
      return _0x4d814c.create();
    };
    var _0x4d303b = {
      object: _0x3052b3.lazycreate
    };
    const _0x3b650c = _0x4d303b;
    var _0x335169;
    (function (_0x27c9be) {
      _0x27c9be.ZodString = "ZodString";
      _0x27c9be.ZodNumber = "ZodNumber";
      _0x27c9be.ZodNaN = "ZodNaN";
      _0x27c9be.ZodBigInt = "ZodBigInt";
      _0x27c9be.ZodBoolean = "ZodBoolean";
      _0x27c9be.ZodDate = "ZodDate";
      _0x27c9be.ZodSymbol = "ZodSymbol";
      _0x27c9be.ZodUndefined = "ZodUndefined";
      _0x27c9be.ZodNull = "ZodNull";
      _0x27c9be.ZodAny = "ZodAny";
      _0x27c9be.ZodUnknown = "ZodUnknown";
      _0x27c9be.ZodNever = "ZodNever";
      _0x27c9be.ZodVoid = "ZodVoid";
      _0x27c9be.ZodArray = "ZodArray";
      _0x27c9be.ZodObject = "ZodObject";
      _0x27c9be.ZodUnion = "ZodUnion";
      _0x27c9be.ZodDiscriminatedUnion = "ZodDiscriminatedUnion";
      _0x27c9be.ZodIntersection = "ZodIntersection";
      _0x27c9be.ZodTuple = "ZodTuple";
      _0x27c9be.ZodRecord = "ZodRecord";
      _0x27c9be.ZodMap = "ZodMap";
      _0x27c9be.ZodSet = "ZodSet";
      _0x27c9be.ZodFunction = "ZodFunction";
      _0x27c9be.ZodLazy = "ZodLazy";
      _0x27c9be.ZodLiteral = "ZodLiteral";
      _0x27c9be.ZodEnum = "ZodEnum";
      _0x27c9be.ZodEffects = "ZodEffects";
      _0x27c9be.ZodNativeEnum = "ZodNativeEnum";
      _0x27c9be.ZodOptional = "ZodOptional";
      _0x27c9be.ZodNullable = "ZodNullable";
      _0x27c9be.ZodDefault = "ZodDefault";
      _0x27c9be.ZodCatch = "ZodCatch";
      _0x27c9be.ZodPromise = "ZodPromise";
      _0x27c9be.ZodBranded = "ZodBranded";
      _0x27c9be.ZodPipeline = "ZodPipeline";
    })(_0x335169 ||= {});
    const _0x1777a9 = (_0x2d31a9, _0x47db1c = {
      message: "Input not instance of " + _0x2d31a9.name
    }) => _0x35949f(_0x500b1b => _0x500b1b instanceof _0x2d31a9, _0x47db1c);
    const _0x31e3cb = _0x18b2b2.create;
    const _0x5eddac = _0x3e4cd6.create;
    const _0x442fc9 = _0x7b50f8.create;
    const _0x1d067c = _0x63cd66.create;
    const _0x30d27d = _0x58eb2f.create;
    const _0x378e87 = _0x29db6d.create;
    const _0x1f6b41 = _0x4ebdd9.create;
    const _0x2fdfbc = _0x580ae9.create;
    const _0x5f2173 = _0x1a531c.create;
    const _0x2618f7 = _0x4d814c.create;
    const _0x5574f8 = _0x54164e.create;
    const _0x333d16 = _0x3ebd59.create;
    const _0x117f19 = _0x23d291.create;
    const _0xf141db = _0x4c748e.create;
    const _0x4b4fa7 = _0x3052b3.create;
    const _0xf2ca25 = _0x3052b3.strictCreate;
    const _0x16658c = _0x2fbe72.create;
    const _0x50527d = _0x39ced6.create;
    const _0x3133a8 = _0x14e749.create;
    const _0x1ca4b9 = _0x438ce6.create;
    const _0x39a635 = _0x2bd328.create;
    const _0x4fb8f6 = _0x93ab25.create;
    const _0x220ed3 = _0x510816.create;
    const _0x50fcd5 = _0x542846.create;
    const _0x24844c = _0x1c692f.create;
    const _0x351f2f = _0x49757c.create;
    const _0x44a059 = _0x1d749d.create;
    const _0x41b3e2 = _0x338c6f.create;
    const _0x4fe71b = _0x493747.create;
    const _0x58ea07 = _0x103599.create;
    const _0x1c0ee5 = _0x14d8e5.create;
    const _0x31de6f = _0xa324d5.create;
    const _0xd50b6 = _0x103599.createWithPreprocess;
    const _0x2db720 = _0x5b6f1f.create;
    const _0x132351 = () => _0x31e3cb().optional();
    const _0x4190b0 = () => _0x5eddac().optional();
    const _0x55eefa = () => _0x30d27d().optional();
    const _0x2d75e4 = {
      string: _0x1b4c8d => _0x18b2b2.create({
        ..._0x1b4c8d,
        coerce: true
      }),
      number: _0x1145c7 => _0x3e4cd6.create({
        ..._0x1145c7,
        coerce: true
      }),
      boolean: _0x271bac => _0x58eb2f.create({
        ..._0x271bac,
        coerce: true
      }),
      bigint: _0x5bf75f => _0x63cd66.create({
        ..._0x5bf75f,
        coerce: true
      }),
      date: _0x511841 => _0x29db6d.create({
        ..._0x511841,
        coerce: true
      })
    };
    const _0x49b357 = _0x2df4b8;
    var _0x163c3c = Object.freeze({
      "__proto__": null,
      defaultErrorMap: _0x3464b8,
      setErrorMap: _0x2661a0,
      getErrorMap: _0x41ab3c,
      makeIssue: _0x2e65c4,
      EMPTY_PATH: _0x115dbf,
      addIssueToContext: _0x2f5996,
      ParseStatus: _0x589df2,
      INVALID: _0x2df4b8,
      DIRTY: _0x432c0a,
      OK: _0x46f42f,
      isAborted: _0x57d1c4,
      isDirty: _0x371dd3,
      isValid: _0x211544,
      isAsync: _0x47f166,
      get util() {
        return _0x3275c9;
      },
      get objectUtil() {
        return _0x5dd642;
      },
      ZodParsedType: _0x49070e,
      getParsedType: _0x1ba0a2,
      ZodType: _0x1bb570,
      ZodString: _0x18b2b2,
      ZodNumber: _0x3e4cd6,
      ZodBigInt: _0x63cd66,
      ZodBoolean: _0x58eb2f,
      ZodDate: _0x29db6d,
      ZodSymbol: _0x4ebdd9,
      ZodUndefined: _0x580ae9,
      ZodNull: _0x1a531c,
      ZodAny: _0x4d814c,
      ZodUnknown: _0x54164e,
      ZodNever: _0x3ebd59,
      ZodVoid: _0x23d291,
      ZodArray: _0x4c748e,
      ZodObject: _0x3052b3,
      ZodUnion: _0x2fbe72,
      ZodDiscriminatedUnion: _0x39ced6,
      ZodIntersection: _0x14e749,
      ZodTuple: _0x438ce6,
      ZodRecord: _0x2bd328,
      ZodMap: _0x93ab25,
      ZodSet: _0x510816,
      ZodFunction: _0x542846,
      ZodLazy: _0x1c692f,
      ZodLiteral: _0x49757c,
      ZodEnum: _0x1d749d,
      ZodNativeEnum: _0x338c6f,
      ZodPromise: _0x493747,
      ZodEffects: _0x103599,
      ZodTransformer: _0x103599,
      ZodOptional: _0x14d8e5,
      ZodNullable: _0xa324d5,
      ZodDefault: _0x27ecdf,
      ZodCatch: _0xc598e7,
      ZodNaN: _0x7b50f8,
      BRAND: _0x807fd1,
      ZodBranded: _0x2f92f5,
      ZodPipeline: _0x5b6f1f,
      custom: _0x35949f,
      Schema: _0x1bb570,
      ZodSchema: _0x1bb570,
      late: _0x3b650c,
      get ZodFirstPartyTypeKind() {
        return _0x335169;
      },
      coerce: _0x2d75e4,
      any: _0x2618f7,
      array: _0xf141db,
      bigint: _0x1d067c,
      boolean: _0x30d27d,
      date: _0x378e87,
      discriminatedUnion: _0x50527d,
      effect: _0x58ea07,
      enum: _0x44a059,
      function: _0x50fcd5,
      instanceof: _0x1777a9,
      intersection: _0x3133a8,
      lazy: _0x24844c,
      literal: _0x351f2f,
      map: _0x4fb8f6,
      nan: _0x442fc9,
      nativeEnum: _0x41b3e2,
      never: _0x333d16,
      null: _0x5f2173,
      nullable: _0x31de6f,
      number: _0x5eddac,
      object: _0x4b4fa7,
      oboolean: _0x55eefa,
      onumber: _0x4190b0,
      optional: _0x1c0ee5,
      ostring: _0x132351,
      pipeline: _0x2db720,
      preprocess: _0xd50b6,
      promise: _0x4fe71b,
      record: _0x39a635,
      set: _0x220ed3,
      strictObject: _0xf2ca25,
      string: _0x31e3cb,
      symbol: _0x1f6b41,
      transformer: _0x58ea07,
      tuple: _0x1ca4b9,
      undefined: _0x2fdfbc,
      union: _0x16658c,
      unknown: _0x5574f8,
      void: _0x117f19,
      NEVER: _0x49b357,
      ZodIssueCode: _0x31073a,
      quotelessJson: _0x47fa52,
      ZodError: _0xe3343b
    });
    ;
    var _0x4028c1 = /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;
    var _0x5c5371 = _0x163c3c.object({
      codename: _0x163c3c.string(),
      version: _0x163c3c.string().regex(_0x4028c1),
      permissions: _0x163c3c.string().array()
    });
    var _0x42a952 = _0x5c5371.omit({
      permissions: true
    });
    var _0x4fb456 = _0x163c3c.object({
      API_URL: _0x163c3c.string().url(),
      API_KEY: _0x163c3c.string(),
      KEYS: _0x163c3c.string().array()
    });
    var _0x48832f = _0x163c3c.object({
      id: _0x163c3c.number(),
      origin: _0x163c3c.string()
    });
    var _0x4739a8 = _0x163c3c.tuple([_0x163c3c.boolean(), _0x163c3c.any()]);
    var _0x30a591 = _0x163c3c.object({
      resolve: _0x163c3c.function().args(_0x163c3c.any()).returns(_0x163c3c.void()),
      reject: _0x163c3c.function().args(_0x163c3c.any()).returns(_0x163c3c.void()),
      timeout: _0x163c3c.number()
    });
    var _0x3c6eeb = _0x163c3c.object({
      id: _0x163c3c.number(),
      resource: _0x163c3c.string()
    });
    var _0x54fa96 = _0x163c3c.tuple([_0x163c3c.boolean(), _0x163c3c.any()]);
    var _0x42bb70 = _0x163c3c.object({
      resolve: _0x163c3c.function().args(_0x163c3c.any()).returns(_0x163c3c.void()),
      reject: _0x163c3c.function().args(_0x163c3c.any()).returns(_0x163c3c.void()),
      timeout: _0x163c3c.number()
    });
    ;
    var _0x445531 = _0x5f5650(480);
    var _0x56a226 = Object.create;
    var _0x179862 = Object.defineProperty;
    var _0x3efd9a = Object.getOwnPropertyDescriptor;
    var _0x309347 = Object.getOwnPropertyNames;
    var _0x47eeba = Object.getPrototypeOf;
    var _0x1f57b6 = Object.prototype.hasOwnProperty;
    var _0x75f929 = (_0x105b25, _0x461cd0) => function _0x2f487() {
      if (!_0x461cd0) {
        (0, _0x105b25[_0x309347(_0x105b25)[0]])((_0x461cd0 = {
          exports: {}
        }).exports, _0x461cd0);
      }
      return _0x461cd0.exports;
    };
    var _0x32d167 = (_0x443e76, _0x2cf5c8) => {
      for (var _0x13aa20 in _0x2cf5c8) {
        _0x179862(_0x443e76, _0x13aa20, {
          get: _0x2cf5c8[_0x13aa20],
          enumerable: true
        });
      }
    };
    var _0x112682 = (_0x24342, _0x684234, _0x49b8d2, _0x3b4f5e) => {
      if (_0x684234 && typeof _0x684234 === "object" || typeof _0x684234 === "function") {
        for (let _0x24c04b of _0x309347(_0x684234)) {
          if (!_0x1f57b6.call(_0x24342, _0x24c04b) && _0x24c04b !== _0x49b8d2) {
            _0x179862(_0x24342, _0x24c04b, {
              get: () => _0x684234[_0x24c04b],
              enumerable: !(_0x3b4f5e = _0x3efd9a(_0x684234, _0x24c04b)) || _0x3b4f5e.enumerable
            });
          }
        }
      }
      return _0x24342;
    };
    var _0x509264 = (_0xdb9b51, _0x4f25a6, _0x75a83c) => {
      _0x75a83c = _0xdb9b51 != null ? _0x56a226(_0x47eeba(_0xdb9b51)) : {};
      return _0x112682(_0x4f25a6 || !_0xdb9b51 || !_0xdb9b51.__esModule ? _0x179862(_0x75a83c, "default", {
        value: _0xdb9b51,
        enumerable: true
      }) : _0x75a83c, _0xdb9b51);
    };
    var _0x3a0b10 = (_0x216b35, _0x414cbc, _0x22407f) => {
      if (!_0x414cbc.has(_0x216b35)) {
        throw TypeError("Cannot " + _0x22407f);
      }
    };
    var _0x30b1e5 = (_0x176dca, _0xfd950e, _0x147965) => {
      _0x3a0b10(_0x176dca, _0xfd950e, "read from private field");
      if (_0x147965) {
        return _0x147965.call(_0x176dca);
      } else {
        return _0xfd950e.get(_0x176dca);
      }
    };
    var _0x3c2f92 = (_0x2e2c84, _0x4251e5, _0x1612db) => {
      if (_0x4251e5.has(_0x2e2c84)) {
        throw TypeError("Cannot add the same private member more than once");
      }
      if (_0x4251e5 instanceof WeakSet) {
        _0x4251e5.add(_0x2e2c84);
      } else {
        _0x4251e5.set(_0x2e2c84, _0x1612db);
      }
    };
    var _0x55ff33 = (_0x5b1d93, _0x2b276c, _0x197428, _0x1fc789) => {
      _0x3a0b10(_0x5b1d93, _0x2b276c, "write to private field");
      if (_0x1fc789) {
        _0x1fc789.call(_0x5b1d93, _0x197428);
      } else {
        _0x2b276c.set(_0x5b1d93, _0x197428);
      }
      return _0x197428;
    };
    var _0x3bec04 = (_0x1fe4b3, _0x4fdbd2, _0x428b07, _0x35c2d5) => ({
      set _(_0x2af778) {
        _0x55ff33(_0x1fe4b3, _0x4fdbd2, _0x2af778, _0x428b07);
      },
      get _() {
        return _0x30b1e5(_0x1fe4b3, _0x4fdbd2, _0x35c2d5);
      }
    });
    var _0x2786ff = (_0x571b49, _0x111559, _0x2f7372) => {
      _0x3a0b10(_0x571b49, _0x111559, "access private method");
      return _0x2f7372;
    };
    var _0x3eabc7 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/core.js"(_0x278a3d, _0x5d564a) {
        'use strict';

        (function (_0x4f7339, _0x12fa62) {
          if (typeof _0x278a3d === "object") {
            _0x5d564a.exports = _0x278a3d = _0x12fa62();
          } else if (typeof define === "function" && define.amd) {
            define([], _0x12fa62);
          } else {
            _0x4f7339.CryptoJS = _0x12fa62();
          }
        })(_0x278a3d, function () {
          var _0x51f459 = _0x51f459 || function (_0x346c05, _0x4396dd) {
            var _0x147abf = Object.create || function () {
              function _0x158939() {}
              ;
              return function (_0x565722) {
                var _0x5c9313;
                _0x158939.prototype = _0x565722;
                _0x5c9313 = new _0x158939();
                _0x158939.prototype = null;
                return _0x5c9313;
              };
            }();
            var _0x15f226 = {};
            var _0x28ec40 = _0x15f226.lib = {};
            var _0x18b9ac = _0x28ec40.Base = function () {
              return {
                extend: function (_0x16907f) {
                  var _0x49de25 = _0x147abf(this);
                  if (_0x16907f) {
                    _0x49de25.mixIn(_0x16907f);
                  }
                  if (!_0x49de25.hasOwnProperty("init") || this.init === _0x49de25.init) {
                    _0x49de25.init = function () {
                      _0x49de25.$super.init.apply(this, arguments);
                    };
                  }
                  _0x49de25.init.prototype = _0x49de25;
                  _0x49de25.$super = this;
                  return _0x49de25;
                },
                create: function () {
                  var _0x2cb46a = this.extend();
                  _0x2cb46a.init.apply(_0x2cb46a, arguments);
                  return _0x2cb46a;
                },
                init: function () {},
                mixIn: function (_0xdaa6ad) {
                  for (var _0x3cca28 in _0xdaa6ad) {
                    if (_0xdaa6ad.hasOwnProperty(_0x3cca28)) {
                      this[_0x3cca28] = _0xdaa6ad[_0x3cca28];
                    }
                  }
                  if (_0xdaa6ad.hasOwnProperty("toString")) {
                    this.toString = _0xdaa6ad.toString;
                  }
                },
                clone: function () {
                  return this.init.prototype.extend(this);
                }
              };
            }();
            var _0x53c4dc = _0x28ec40.WordArray = _0x18b9ac.extend({
              init: function (_0x5c8ebd, _0x3a8029) {
                _0x5c8ebd = this.words = _0x5c8ebd || [];
                if (_0x3a8029 != _0x4396dd) {
                  this.sigBytes = _0x3a8029;
                } else {
                  this.sigBytes = _0x5c8ebd.length * 4;
                }
              },
              toString: function (_0x213f7c) {
                return (_0x213f7c || _0x1765ea).stringify(this);
              },
              concat: function (_0x3eeee6) {
                var _0x20ef30 = this.words;
                var _0x5aeaf9 = _0x3eeee6.words;
                var _0xebb2ab = this.sigBytes;
                var _0x44bc2d = _0x3eeee6.sigBytes;
                this.clamp();
                if (_0xebb2ab % 4) {
                  for (var _0x15c96f = 0; _0x15c96f < _0x44bc2d; _0x15c96f++) {
                    var _0x4db6f8 = _0x5aeaf9[_0x15c96f >>> 2] >>> 24 - _0x15c96f % 4 * 8 & 255;
                    _0x20ef30[_0xebb2ab + _0x15c96f >>> 2] |= _0x4db6f8 << 24 - (_0xebb2ab + _0x15c96f) % 4 * 8;
                  }
                } else {
                  for (var _0x15c96f = 0; _0x15c96f < _0x44bc2d; _0x15c96f += 4) {
                    _0x20ef30[_0xebb2ab + _0x15c96f >>> 2] = _0x5aeaf9[_0x15c96f >>> 2];
                  }
                }
                this.sigBytes += _0x44bc2d;
                return this;
              },
              clamp: function () {
                var _0x11eb76 = this.words;
                var _0x9c2260 = this.sigBytes;
                _0x11eb76[_0x9c2260 >>> 2] &= 4294967295 << 32 - _0x9c2260 % 4 * 8;
                _0x11eb76.length = _0x346c05.ceil(_0x9c2260 / 4);
              },
              clone: function () {
                var _0x1926bb = _0x18b9ac.clone.call(this);
                _0x1926bb.words = this.words.slice(0);
                return _0x1926bb;
              },
              random: function (_0x548dce) {
                var _0x17e27d = [];
                function _0x23fe24(_0x44b43a) {
                  var _0x44b43a = _0x44b43a;
                  var _0x243068 = 987654321;
                  var _0xad4784 = 4294967295;
                  return function () {
                    _0x243068 = (_0x243068 & 65535) * 36969 + (_0x243068 >> 16) & _0xad4784;
                    _0x44b43a = (_0x44b43a & 65535) * 18000 + (_0x44b43a >> 16) & _0xad4784;
                    var _0x1f808f = (_0x243068 << 16) + _0x44b43a & _0xad4784;
                    _0x1f808f /= 4294967296;
                    _0x1f808f += 0.5;
                    return _0x1f808f * (_0x346c05.random() > 0.5 ? 1 : -1);
                  };
                }
                for (var _0x2ccbf9 = 0, _0x2dae5c; _0x2ccbf9 < _0x548dce; _0x2ccbf9 += 4) {
                  var _0x34540c = _0x23fe24((_0x2dae5c || _0x346c05.random()) * 4294967296);
                  _0x2dae5c = _0x34540c() * 987654071;
                  _0x17e27d.push(_0x34540c() * 4294967296 | 0);
                }
                return new _0x53c4dc.init(_0x17e27d, _0x548dce);
              }
            });
            var _0x507858 = _0x15f226.enc = {};
            var _0x1765ea = _0x507858.Hex = {
              stringify: function (_0x512217) {
                var _0x5b6659 = _0x512217.words;
                var _0x3b86db = _0x512217.sigBytes;
                var _0x4456cc = [];
                for (var _0x170243 = 0; _0x170243 < _0x3b86db; _0x170243++) {
                  var _0x395410 = _0x5b6659[_0x170243 >>> 2] >>> 24 - _0x170243 % 4 * 8 & 255;
                  _0x4456cc.push((_0x395410 >>> 4).toString(16));
                  _0x4456cc.push((_0x395410 & 15).toString(16));
                }
                return _0x4456cc.join("");
              },
              parse: function (_0x7127ae) {
                var _0x5b70b6 = _0x7127ae.length;
                var _0x14e33c = [];
                for (var _0x35c4da = 0; _0x35c4da < _0x5b70b6; _0x35c4da += 2) {
                  _0x14e33c[_0x35c4da >>> 3] |= parseInt(_0x7127ae.substr(_0x35c4da, 2), 16) << 24 - _0x35c4da % 8 * 4;
                }
                return new _0x53c4dc.init(_0x14e33c, _0x5b70b6 / 2);
              }
            };
            var _0x4e963f = _0x507858.Latin1 = {
              stringify: function (_0x160e91) {
                var _0x2b9dac = _0x160e91.words;
                var _0x22db46 = _0x160e91.sigBytes;
                var _0x3fd926 = [];
                for (var _0x187198 = 0; _0x187198 < _0x22db46; _0x187198++) {
                  var _0x23d5aa = _0x2b9dac[_0x187198 >>> 2] >>> 24 - _0x187198 % 4 * 8 & 255;
                  _0x3fd926.push(String.fromCharCode(_0x23d5aa));
                }
                return _0x3fd926.join("");
              },
              parse: function (_0x1c2192) {
                var _0x488c9a = _0x1c2192.length;
                var _0x5dfc6a = [];
                for (var _0x22f8ec = 0; _0x22f8ec < _0x488c9a; _0x22f8ec++) {
                  _0x5dfc6a[_0x22f8ec >>> 2] |= (_0x1c2192.charCodeAt(_0x22f8ec) & 255) << 24 - _0x22f8ec % 4 * 8;
                }
                return new _0x53c4dc.init(_0x5dfc6a, _0x488c9a);
              }
            };
            var _0x46c75c = _0x507858.Utf8 = {
              stringify: function (_0x2fa538) {
                try {
                  return decodeURIComponent(escape(_0x4e963f.stringify(_0x2fa538)));
                } catch (_0x2a6b80) {
                  throw new Error("Malformed UTF-8 data");
                }
              },
              parse: function (_0x1c4e4d) {
                return _0x4e963f.parse(unescape(encodeURIComponent(_0x1c4e4d)));
              }
            };
            var _0x4b93b6 = _0x28ec40.BufferedBlockAlgorithm = _0x18b9ac.extend({
              reset: function () {
                this._data = new _0x53c4dc.init();
                this._nDataBytes = 0;
              },
              _append: function (_0x5b8dee) {
                if (typeof _0x5b8dee == "string") {
                  _0x5b8dee = _0x46c75c.parse(_0x5b8dee);
                }
                this._data.concat(_0x5b8dee);
                this._nDataBytes += _0x5b8dee.sigBytes;
              },
              _process: function (_0x5a5a1f) {
                var _0x496f7e = this._data;
                var _0x37abe7 = _0x496f7e.words;
                var _0x1f5294 = _0x496f7e.sigBytes;
                var _0x1146b5 = this.blockSize;
                var _0xb9389f = _0x1146b5 * 4;
                var _0x59e479 = _0x1f5294 / _0xb9389f;
                if (_0x5a5a1f) {
                  _0x59e479 = _0x346c05.ceil(_0x59e479);
                } else {
                  _0x59e479 = _0x346c05.max((_0x59e479 | 0) - this._minBufferSize, 0);
                }
                var _0x4fdd7f = _0x59e479 * _0x1146b5;
                var _0xd24974 = _0x346c05.min(_0x4fdd7f * 4, _0x1f5294);
                if (_0x4fdd7f) {
                  for (var _0x452049 = 0; _0x452049 < _0x4fdd7f; _0x452049 += _0x1146b5) {
                    this._doProcessBlock(_0x37abe7, _0x452049);
                  }
                  var _0x5ec727 = _0x37abe7.splice(0, _0x4fdd7f);
                  _0x496f7e.sigBytes -= _0xd24974;
                }
                return new _0x53c4dc.init(_0x5ec727, _0xd24974);
              },
              clone: function () {
                var _0x10462a = _0x18b9ac.clone.call(this);
                _0x10462a._data = this._data.clone();
                return _0x10462a;
              },
              _minBufferSize: 0
            });
            var _0x2762c7 = _0x28ec40.Hasher = _0x4b93b6.extend({
              cfg: _0x18b9ac.extend(),
              init: function (_0xd81f2b) {
                this.cfg = this.cfg.extend(_0xd81f2b);
                this.reset();
              },
              reset: function () {
                _0x4b93b6.reset.call(this);
                this._doReset();
              },
              update: function (_0x41b216) {
                this._append(_0x41b216);
                this._process();
                return this;
              },
              finalize: function (_0x50cdd0) {
                if (_0x50cdd0) {
                  this._append(_0x50cdd0);
                }
                var _0x559fbd = this._doFinalize();
                return _0x559fbd;
              },
              blockSize: 16,
              _createHelper: function (_0xf2e42e) {
                return function (_0x4bed02, _0x4af15a) {
                  return new _0xf2e42e.init(_0x4af15a).finalize(_0x4bed02);
                };
              },
              _createHmacHelper: function (_0x19735b) {
                return function (_0x37ffc5, _0x174be4) {
                  return new _0x540a91.HMAC.init(_0x19735b, _0x174be4).finalize(_0x37ffc5);
                };
              }
            });
            var _0x540a91 = _0x15f226.algo = {};
            return _0x15f226;
          }(Math);
          return _0x51f459;
        });
      }
    });
    var _0x124198 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/x64-core.js"(_0x2fab86, _0x24f876) {
        'use strict';

        (function (_0x34fed7, _0x1468f9) {
          if (typeof _0x2fab86 === "object") {
            _0x24f876.exports = _0x2fab86 = _0x1468f9(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x1468f9);
          } else {
            _0x1468f9(_0x34fed7.CryptoJS);
          }
        })(_0x2fab86, function (_0x53f6d8) {
          (function (_0x14346d) {
            var _0x265d19 = _0x53f6d8;
            var _0x396a96 = _0x265d19.lib;
            var _0x5634e1 = _0x396a96.Base;
            var _0x4f833d = _0x396a96.WordArray;
            var _0x1f8226 = _0x265d19.x64 = {};
            var _0x110d17 = {
              init: function (_0x4cb0c7, _0x6ff532) {
                this.high = _0x4cb0c7;
                this.low = _0x6ff532;
              }
            };
            var _0x171250 = _0x1f8226.Word = _0x5634e1.extend(_0x110d17);
            var _0x3e0c87 = _0x1f8226.WordArray = _0x5634e1.extend({
              init: function (_0x266fbf, _0x417d86) {
                _0x266fbf = this.words = _0x266fbf || [];
                if (_0x417d86 != _0x14346d) {
                  this.sigBytes = _0x417d86;
                } else {
                  this.sigBytes = _0x266fbf.length * 8;
                }
              },
              toX32: function () {
                var _0x5bdfdb = this.words;
                var _0x4a130b = _0x5bdfdb.length;
                var _0x8f8cae = [];
                for (var _0x22b5cf = 0; _0x22b5cf < _0x4a130b; _0x22b5cf++) {
                  var _0x5eb241 = _0x5bdfdb[_0x22b5cf];
                  _0x8f8cae.push(_0x5eb241.high);
                  _0x8f8cae.push(_0x5eb241.low);
                }
                return _0x4f833d.create(_0x8f8cae, this.sigBytes);
              },
              clone: function () {
                var _0x5d2682 = _0x5634e1.clone.call(this);
                var _0x9bc472 = _0x5d2682.words = this.words.slice(0);
                var _0x5a1800 = _0x9bc472.length;
                for (var _0x2f00b2 = 0; _0x2f00b2 < _0x5a1800; _0x2f00b2++) {
                  _0x9bc472[_0x2f00b2] = _0x9bc472[_0x2f00b2].clone();
                }
                return _0x5d2682;
              }
            });
          })();
          return _0x53f6d8;
        });
      }
    });
    var _0x1f375b = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/lib-typedarrays.js"(_0x26d3d6, _0x30177b) {
        'use strict';

        (function (_0x2418be, _0x3e4b14) {
          if (typeof _0x26d3d6 === "object") {
            _0x30177b.exports = _0x26d3d6 = _0x3e4b14(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x3e4b14);
          } else {
            _0x3e4b14(_0x2418be.CryptoJS);
          }
        })(_0x26d3d6, function (_0x2f0e35) {
          (function () {
            if (typeof ArrayBuffer != "function") {
              return;
            }
            var _0x3989bc = _0x2f0e35;
            var _0x474ac6 = _0x3989bc.lib;
            var _0x534ff2 = _0x474ac6.WordArray;
            var _0x19269f = _0x534ff2.init;
            var _0x633c1e = _0x534ff2.init = function (_0x44f231) {
              if (_0x44f231 instanceof ArrayBuffer) {
                _0x44f231 = new Uint8Array(_0x44f231);
              }
              if (_0x44f231 instanceof Int8Array || typeof Uint8ClampedArray !== "undefined" && _0x44f231 instanceof Uint8ClampedArray || _0x44f231 instanceof Int16Array || _0x44f231 instanceof Uint16Array || _0x44f231 instanceof Int32Array || _0x44f231 instanceof Uint32Array || _0x44f231 instanceof Float32Array || _0x44f231 instanceof Float64Array) {
                _0x44f231 = new Uint8Array(_0x44f231.buffer, _0x44f231.byteOffset, _0x44f231.byteLength);
              }
              if (_0x44f231 instanceof Uint8Array) {
                var _0x3c8e03 = _0x44f231.byteLength;
                var _0x906404 = [];
                for (var _0x4edf64 = 0; _0x4edf64 < _0x3c8e03; _0x4edf64++) {
                  _0x906404[_0x4edf64 >>> 2] |= _0x44f231[_0x4edf64] << 24 - _0x4edf64 % 4 * 8;
                }
                _0x19269f.call(this, _0x906404, _0x3c8e03);
              } else {
                _0x19269f.apply(this, arguments);
              }
            };
            _0x633c1e.prototype = _0x534ff2;
          })();
          return _0x2f0e35.lib.WordArray;
        });
      }
    });
    var _0x8d5ab7 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/enc-utf16.js"(_0x47f589, _0x25e310) {
        'use strict';

        (function (_0x530bd8, _0x16d3ba) {
          if (typeof _0x47f589 === "object") {
            _0x25e310.exports = _0x47f589 = _0x16d3ba(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x16d3ba);
          } else {
            _0x16d3ba(_0x530bd8.CryptoJS);
          }
        })(_0x47f589, function (_0x3417f9) {
          (function () {
            var _0x16efbe = _0x3417f9;
            var _0x4f38d3 = _0x16efbe.lib;
            var _0x3c62ae = _0x4f38d3.WordArray;
            var _0x29f7d5 = _0x16efbe.enc;
            var _0x5acaf7 = _0x29f7d5.Utf16 = _0x29f7d5.Utf16BE = {
              stringify: function (_0x44ccf8) {
                var _0x5e687f = _0x44ccf8.words;
                var _0x21b4f0 = _0x44ccf8.sigBytes;
                var _0xb2f134 = [];
                for (var _0x76567c = 0; _0x76567c < _0x21b4f0; _0x76567c += 2) {
                  var _0x154eaf = _0x5e687f[_0x76567c >>> 2] >>> 16 - _0x76567c % 4 * 8 & 65535;
                  _0xb2f134.push(String.fromCharCode(_0x154eaf));
                }
                return _0xb2f134.join("");
              },
              parse: function (_0x223571) {
                var _0x2c5d3b = _0x223571.length;
                var _0x13376b = [];
                for (var _0x5340b9 = 0; _0x5340b9 < _0x2c5d3b; _0x5340b9++) {
                  _0x13376b[_0x5340b9 >>> 1] |= _0x223571.charCodeAt(_0x5340b9) << 16 - _0x5340b9 % 2 * 16;
                }
                return _0x3c62ae.create(_0x13376b, _0x2c5d3b * 2);
              }
            };
            _0x29f7d5.Utf16LE = {
              stringify: function (_0x59c4a4) {
                var _0x584a84 = _0x59c4a4.words;
                var _0x54fc12 = _0x59c4a4.sigBytes;
                var _0x527152 = [];
                for (var _0xd580ba = 0; _0xd580ba < _0x54fc12; _0xd580ba += 2) {
                  var _0x61c0a7 = _0x1e8efd(_0x584a84[_0xd580ba >>> 2] >>> 16 - _0xd580ba % 4 * 8 & 65535);
                  _0x527152.push(String.fromCharCode(_0x61c0a7));
                }
                return _0x527152.join("");
              },
              parse: function (_0x3eeacb) {
                var _0x3ac99c = _0x3eeacb.length;
                var _0x913379 = [];
                for (var _0x8b9b20 = 0; _0x8b9b20 < _0x3ac99c; _0x8b9b20++) {
                  _0x913379[_0x8b9b20 >>> 1] |= _0x1e8efd(_0x3eeacb.charCodeAt(_0x8b9b20) << 16 - _0x8b9b20 % 2 * 16);
                }
                return _0x3c62ae.create(_0x913379, _0x3ac99c * 2);
              }
            };
            function _0x1e8efd(_0x2e6a63) {
              return _0x2e6a63 << 8 & 4278255360 | _0x2e6a63 >>> 8 & 16711935;
            }
          })();
          return _0x3417f9.enc.Utf16;
        });
      }
    });
    var _0x3330da = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/enc-base64.js"(_0x468680, _0x492334) {
        'use strict';

        (function (_0x28c4b2, _0x3f5ff9) {
          if (typeof _0x468680 === "object") {
            _0x492334.exports = _0x468680 = _0x3f5ff9(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x3f5ff9);
          } else {
            _0x3f5ff9(_0x28c4b2.CryptoJS);
          }
        })(_0x468680, function (_0xf8562) {
          (function () {
            var _0x1b4fb5 = _0xf8562;
            var _0x3cf0c8 = _0x1b4fb5.lib;
            var _0x2c2d51 = _0x3cf0c8.WordArray;
            var _0xc24f4d = _0x1b4fb5.enc;
            var _0x44c74f = _0xc24f4d.Base64 = {
              stringify: function (_0xae44fc) {
                var _0x4156de = _0xae44fc.words;
                var _0x5845d7 = _0xae44fc.sigBytes;
                var _0x1a8f91 = this._map;
                _0xae44fc.clamp();
                var _0x3d62b0 = [];
                for (var _0x806758 = 0; _0x806758 < _0x5845d7; _0x806758 += 3) {
                  var _0x2ed3d4 = _0x4156de[_0x806758 >>> 2] >>> 24 - _0x806758 % 4 * 8 & 255;
                  var _0x1cbaeb = _0x4156de[_0x806758 + 1 >>> 2] >>> 24 - (_0x806758 + 1) % 4 * 8 & 255;
                  var _0x297c62 = _0x4156de[_0x806758 + 2 >>> 2] >>> 24 - (_0x806758 + 2) % 4 * 8 & 255;
                  var _0x3cd969 = _0x2ed3d4 << 16 | _0x1cbaeb << 8 | _0x297c62;
                  for (var _0x3701ac = 0; _0x3701ac < 4 && _0x806758 + _0x3701ac * 0.75 < _0x5845d7; _0x3701ac++) {
                    _0x3d62b0.push(_0x1a8f91.charAt(_0x3cd969 >>> (3 - _0x3701ac) * 6 & 63));
                  }
                }
                var _0x382d77 = _0x1a8f91.charAt(64);
                if (_0x382d77) {
                  while (_0x3d62b0.length % 4) {
                    _0x3d62b0.push(_0x382d77);
                  }
                }
                return _0x3d62b0.join("");
              },
              parse: function (_0x2d9fe0) {
                var _0x260238 = _0x2d9fe0.length;
                var _0x36f3df = this._map;
                var _0x2c20dd = this._reverseMap;
                if (!_0x2c20dd) {
                  _0x2c20dd = this._reverseMap = [];
                  for (var _0x7703f3 = 0; _0x7703f3 < _0x36f3df.length; _0x7703f3++) {
                    _0x2c20dd[_0x36f3df.charCodeAt(_0x7703f3)] = _0x7703f3;
                  }
                }
                var _0x316c7c = _0x36f3df.charAt(64);
                if (_0x316c7c) {
                  var _0x4dbe02 = _0x2d9fe0.indexOf(_0x316c7c);
                  if (_0x4dbe02 !== -1) {
                    _0x260238 = _0x4dbe02;
                  }
                }
                return _0x2be485(_0x2d9fe0, _0x260238, _0x2c20dd);
              },
              _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
            };
            function _0x2be485(_0x35c3a1, _0x3e1659, _0x1f8fff) {
              var _0x5b397d = [];
              var _0x35c0aa = 0;
              for (var _0x31c4dc = 0; _0x31c4dc < _0x3e1659; _0x31c4dc++) {
                if (_0x31c4dc % 4) {
                  var _0x1ee887 = _0x1f8fff[_0x35c3a1.charCodeAt(_0x31c4dc - 1)] << _0x31c4dc % 4 * 2;
                  var _0x437f9f = _0x1f8fff[_0x35c3a1.charCodeAt(_0x31c4dc)] >>> 6 - _0x31c4dc % 4 * 2;
                  _0x5b397d[_0x35c0aa >>> 2] |= (_0x1ee887 | _0x437f9f) << 24 - _0x35c0aa % 4 * 8;
                  _0x35c0aa++;
                }
              }
              return _0x2c2d51.create(_0x5b397d, _0x35c0aa);
            }
          })();
          return _0xf8562.enc.Base64;
        });
      }
    });
    var _0x13fd13 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/md5.js"(_0x14df81, _0x511508) {
        'use strict';

        (function (_0x48d45c, _0x1b9677) {
          if (typeof _0x14df81 === "object") {
            _0x511508.exports = _0x14df81 = _0x1b9677(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x1b9677);
          } else {
            _0x1b9677(_0x48d45c.CryptoJS);
          }
        })(_0x14df81, function (_0x6599d5) {
          (function (_0x269b86) {
            var _0x17acd2 = _0x6599d5;
            var _0x2eaf85 = _0x17acd2.lib;
            var _0x4b7cc2 = _0x2eaf85.WordArray;
            var _0x595133 = _0x2eaf85.Hasher;
            var _0x26ab0a = _0x17acd2.algo;
            var _0x3491d1 = [];
            (function () {
              for (var _0x2baa46 = 0; _0x2baa46 < 64; _0x2baa46++) {
                _0x3491d1[_0x2baa46] = _0x269b86.abs(_0x269b86.sin(_0x2baa46 + 1)) * 4294967296 | 0;
              }
            })();
            var _0x212e73 = _0x26ab0a.MD5 = _0x595133.extend({
              _doReset: function () {
                this._hash = new _0x4b7cc2.init([1732584193, 4023233417, 2562383102, 271733878]);
              },
              _doProcessBlock: function (_0xd8ed6f, _0x390dad) {
                for (var _0x16f46b = 0; _0x16f46b < 16; _0x16f46b++) {
                  var _0x191b07 = _0x390dad + _0x16f46b;
                  var _0xad5c4 = _0xd8ed6f[_0x191b07];
                  _0xd8ed6f[_0x191b07] = (_0xad5c4 << 8 | _0xad5c4 >>> 24) & 16711935 | (_0xad5c4 << 24 | _0xad5c4 >>> 8) & 4278255360;
                }
                var _0x50431c = this._hash.words;
                var _0x7e5447 = _0xd8ed6f[_0x390dad + 0];
                var _0x2233f6 = _0xd8ed6f[_0x390dad + 1];
                var _0x46adf1 = _0xd8ed6f[_0x390dad + 2];
                var _0x3b43dd = _0xd8ed6f[_0x390dad + 3];
                var _0x3ea7dc = _0xd8ed6f[_0x390dad + 4];
                var _0x56b18a = _0xd8ed6f[_0x390dad + 5];
                var _0x5e257f = _0xd8ed6f[_0x390dad + 6];
                var _0x2468aa = _0xd8ed6f[_0x390dad + 7];
                var _0x65ba09 = _0xd8ed6f[_0x390dad + 8];
                var _0x21ca28 = _0xd8ed6f[_0x390dad + 9];
                var _0x553189 = _0xd8ed6f[_0x390dad + 10];
                var _0x65e91f = _0xd8ed6f[_0x390dad + 11];
                var _0x4024b4 = _0xd8ed6f[_0x390dad + 12];
                var _0x59cb6a = _0xd8ed6f[_0x390dad + 13];
                var _0x432614 = _0xd8ed6f[_0x390dad + 14];
                var _0x32a1c0 = _0xd8ed6f[_0x390dad + 15];
                var _0x178313 = _0x50431c[0];
                var _0x52af19 = _0x50431c[1];
                var _0x394928 = _0x50431c[2];
                var _0x42d24e = _0x50431c[3];
                _0x178313 = _0x458915(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x7e5447, 7, _0x3491d1[0]);
                _0x42d24e = _0x458915(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x2233f6, 12, _0x3491d1[1]);
                _0x394928 = _0x458915(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x46adf1, 17, _0x3491d1[2]);
                _0x52af19 = _0x458915(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x3b43dd, 22, _0x3491d1[3]);
                _0x178313 = _0x458915(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x3ea7dc, 7, _0x3491d1[4]);
                _0x42d24e = _0x458915(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x56b18a, 12, _0x3491d1[5]);
                _0x394928 = _0x458915(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x5e257f, 17, _0x3491d1[6]);
                _0x52af19 = _0x458915(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x2468aa, 22, _0x3491d1[7]);
                _0x178313 = _0x458915(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x65ba09, 7, _0x3491d1[8]);
                _0x42d24e = _0x458915(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x21ca28, 12, _0x3491d1[9]);
                _0x394928 = _0x458915(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x553189, 17, _0x3491d1[10]);
                _0x52af19 = _0x458915(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x65e91f, 22, _0x3491d1[11]);
                _0x178313 = _0x458915(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x4024b4, 7, _0x3491d1[12]);
                _0x42d24e = _0x458915(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x59cb6a, 12, _0x3491d1[13]);
                _0x394928 = _0x458915(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x432614, 17, _0x3491d1[14]);
                _0x52af19 = _0x458915(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x32a1c0, 22, _0x3491d1[15]);
                _0x178313 = _0x345d44(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x2233f6, 5, _0x3491d1[16]);
                _0x42d24e = _0x345d44(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x5e257f, 9, _0x3491d1[17]);
                _0x394928 = _0x345d44(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x65e91f, 14, _0x3491d1[18]);
                _0x52af19 = _0x345d44(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x7e5447, 20, _0x3491d1[19]);
                _0x178313 = _0x345d44(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x56b18a, 5, _0x3491d1[20]);
                _0x42d24e = _0x345d44(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x553189, 9, _0x3491d1[21]);
                _0x394928 = _0x345d44(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x32a1c0, 14, _0x3491d1[22]);
                _0x52af19 = _0x345d44(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x3ea7dc, 20, _0x3491d1[23]);
                _0x178313 = _0x345d44(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x21ca28, 5, _0x3491d1[24]);
                _0x42d24e = _0x345d44(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x432614, 9, _0x3491d1[25]);
                _0x394928 = _0x345d44(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x3b43dd, 14, _0x3491d1[26]);
                _0x52af19 = _0x345d44(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x65ba09, 20, _0x3491d1[27]);
                _0x178313 = _0x345d44(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x59cb6a, 5, _0x3491d1[28]);
                _0x42d24e = _0x345d44(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x46adf1, 9, _0x3491d1[29]);
                _0x394928 = _0x345d44(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x2468aa, 14, _0x3491d1[30]);
                _0x52af19 = _0x345d44(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x4024b4, 20, _0x3491d1[31]);
                _0x178313 = _0x37984f(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x56b18a, 4, _0x3491d1[32]);
                _0x42d24e = _0x37984f(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x65ba09, 11, _0x3491d1[33]);
                _0x394928 = _0x37984f(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x65e91f, 16, _0x3491d1[34]);
                _0x52af19 = _0x37984f(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x432614, 23, _0x3491d1[35]);
                _0x178313 = _0x37984f(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x2233f6, 4, _0x3491d1[36]);
                _0x42d24e = _0x37984f(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x3ea7dc, 11, _0x3491d1[37]);
                _0x394928 = _0x37984f(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x2468aa, 16, _0x3491d1[38]);
                _0x52af19 = _0x37984f(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x553189, 23, _0x3491d1[39]);
                _0x178313 = _0x37984f(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x59cb6a, 4, _0x3491d1[40]);
                _0x42d24e = _0x37984f(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x7e5447, 11, _0x3491d1[41]);
                _0x394928 = _0x37984f(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x3b43dd, 16, _0x3491d1[42]);
                _0x52af19 = _0x37984f(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x5e257f, 23, _0x3491d1[43]);
                _0x178313 = _0x37984f(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x21ca28, 4, _0x3491d1[44]);
                _0x42d24e = _0x37984f(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x4024b4, 11, _0x3491d1[45]);
                _0x394928 = _0x37984f(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x32a1c0, 16, _0x3491d1[46]);
                _0x52af19 = _0x37984f(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x46adf1, 23, _0x3491d1[47]);
                _0x178313 = _0x242602(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x7e5447, 6, _0x3491d1[48]);
                _0x42d24e = _0x242602(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x2468aa, 10, _0x3491d1[49]);
                _0x394928 = _0x242602(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x432614, 15, _0x3491d1[50]);
                _0x52af19 = _0x242602(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x56b18a, 21, _0x3491d1[51]);
                _0x178313 = _0x242602(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x4024b4, 6, _0x3491d1[52]);
                _0x42d24e = _0x242602(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x3b43dd, 10, _0x3491d1[53]);
                _0x394928 = _0x242602(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x553189, 15, _0x3491d1[54]);
                _0x52af19 = _0x242602(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x2233f6, 21, _0x3491d1[55]);
                _0x178313 = _0x242602(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x65ba09, 6, _0x3491d1[56]);
                _0x42d24e = _0x242602(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x32a1c0, 10, _0x3491d1[57]);
                _0x394928 = _0x242602(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x5e257f, 15, _0x3491d1[58]);
                _0x52af19 = _0x242602(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x59cb6a, 21, _0x3491d1[59]);
                _0x178313 = _0x242602(_0x178313, _0x52af19, _0x394928, _0x42d24e, _0x3ea7dc, 6, _0x3491d1[60]);
                _0x42d24e = _0x242602(_0x42d24e, _0x178313, _0x52af19, _0x394928, _0x65e91f, 10, _0x3491d1[61]);
                _0x394928 = _0x242602(_0x394928, _0x42d24e, _0x178313, _0x52af19, _0x46adf1, 15, _0x3491d1[62]);
                _0x52af19 = _0x242602(_0x52af19, _0x394928, _0x42d24e, _0x178313, _0x21ca28, 21, _0x3491d1[63]);
                _0x50431c[0] = _0x50431c[0] + _0x178313 | 0;
                _0x50431c[1] = _0x50431c[1] + _0x52af19 | 0;
                _0x50431c[2] = _0x50431c[2] + _0x394928 | 0;
                _0x50431c[3] = _0x50431c[3] + _0x42d24e | 0;
              },
              _doFinalize: function () {
                var _0x1faabb = this._data;
                var _0xe3b41d = _0x1faabb.words;
                var _0x559473 = this._nDataBytes * 8;
                var _0x34118d = _0x1faabb.sigBytes * 8;
                _0xe3b41d[_0x34118d >>> 5] |= 128 << 24 - _0x34118d % 32;
                var _0x5ee60e = _0x269b86.floor(_0x559473 / 4294967296);
                var _0x5d577a = _0x559473;
                _0xe3b41d[(_0x34118d + 64 >>> 9 << 4) + 15] = (_0x5ee60e << 8 | _0x5ee60e >>> 24) & 16711935 | (_0x5ee60e << 24 | _0x5ee60e >>> 8) & 4278255360;
                _0xe3b41d[(_0x34118d + 64 >>> 9 << 4) + 14] = (_0x5d577a << 8 | _0x5d577a >>> 24) & 16711935 | (_0x5d577a << 24 | _0x5d577a >>> 8) & 4278255360;
                _0x1faabb.sigBytes = (_0xe3b41d.length + 1) * 4;
                this._process();
                var _0x2465a1 = this._hash;
                var _0x2944bf = _0x2465a1.words;
                for (var _0xdd6d63 = 0; _0xdd6d63 < 4; _0xdd6d63++) {
                  var _0x331f1b = _0x2944bf[_0xdd6d63];
                  _0x2944bf[_0xdd6d63] = (_0x331f1b << 8 | _0x331f1b >>> 24) & 16711935 | (_0x331f1b << 24 | _0x331f1b >>> 8) & 4278255360;
                }
                return _0x2465a1;
              },
              clone: function () {
                var _0x2ce46f = _0x595133.clone.call(this);
                _0x2ce46f._hash = this._hash.clone();
                return _0x2ce46f;
              }
            });
            function _0x458915(_0x221074, _0x596498, _0x4dc488, _0x219328, _0x850cec, _0x25c2b1, _0x180cca) {
              var _0x18fa40 = _0x221074 + (_0x596498 & _0x4dc488 | ~_0x596498 & _0x219328) + _0x850cec + _0x180cca;
              return (_0x18fa40 << _0x25c2b1 | _0x18fa40 >>> 32 - _0x25c2b1) + _0x596498;
            }
            function _0x345d44(_0x1dd55b, _0x5b147a, _0x22ed3f, _0x2e98bd, _0x680ae9, _0xb7c0e6, _0x62b4a1) {
              var _0x3bdc6a = _0x1dd55b + (_0x5b147a & _0x2e98bd | _0x22ed3f & ~_0x2e98bd) + _0x680ae9 + _0x62b4a1;
              return (_0x3bdc6a << _0xb7c0e6 | _0x3bdc6a >>> 32 - _0xb7c0e6) + _0x5b147a;
            }
            function _0x37984f(_0x2062dc, _0x5139d4, _0x27938f, _0x7fb650, _0x2e70af, _0x5687e5, _0x1e7ab4) {
              var _0x52e885 = _0x2062dc + (_0x5139d4 ^ _0x27938f ^ _0x7fb650) + _0x2e70af + _0x1e7ab4;
              return (_0x52e885 << _0x5687e5 | _0x52e885 >>> 32 - _0x5687e5) + _0x5139d4;
            }
            function _0x242602(_0x5cc0b9, _0x502259, _0x1451aa, _0xb97be6, _0x217fbb, _0x40727a, _0x396a79) {
              var _0x29cb6e = _0x5cc0b9 + (_0x1451aa ^ (_0x502259 | ~_0xb97be6)) + _0x217fbb + _0x396a79;
              return (_0x29cb6e << _0x40727a | _0x29cb6e >>> 32 - _0x40727a) + _0x502259;
            }
            _0x17acd2.MD5 = _0x595133._createHelper(_0x212e73);
            _0x17acd2.HmacMD5 = _0x595133._createHmacHelper(_0x212e73);
          })(Math);
          return _0x6599d5.MD5;
        });
      }
    });
    var _0x51c993 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha1.js"(_0x8fe7ed, _0x2af0ec) {
        'use strict';

        (function (_0x30c8e5, _0x419452) {
          if (typeof _0x8fe7ed === "object") {
            _0x2af0ec.exports = _0x8fe7ed = _0x419452(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x419452);
          } else {
            _0x419452(_0x30c8e5.CryptoJS);
          }
        })(_0x8fe7ed, function (_0x3f0f2b) {
          (function () {
            var _0x5d0f97 = _0x3f0f2b;
            var _0x2efe88 = _0x5d0f97.lib;
            var _0x10d66d = _0x2efe88.WordArray;
            var _0x1eccbc = _0x2efe88.Hasher;
            var _0x1f9260 = _0x5d0f97.algo;
            var _0x35a857 = [];
            var _0x5178b3 = _0x1f9260.SHA1 = _0x1eccbc.extend({
              _doReset: function () {
                this._hash = new _0x10d66d.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
              },
              _doProcessBlock: function (_0x1d435d, _0x1fbe46) {
                var _0x417819 = this._hash.words;
                var _0x404cd7 = _0x417819[0];
                var _0x2446e8 = _0x417819[1];
                var _0x58e34e = _0x417819[2];
                var _0x4ae3a9 = _0x417819[3];
                var _0xbfa3f9 = _0x417819[4];
                for (var _0xbd71c = 0; _0xbd71c < 80; _0xbd71c++) {
                  if (_0xbd71c < 16) {
                    _0x35a857[_0xbd71c] = _0x1d435d[_0x1fbe46 + _0xbd71c] | 0;
                  } else {
                    var _0x250357 = _0x35a857[_0xbd71c - 3] ^ _0x35a857[_0xbd71c - 8] ^ _0x35a857[_0xbd71c - 14] ^ _0x35a857[_0xbd71c - 16];
                    _0x35a857[_0xbd71c] = _0x250357 << 1 | _0x250357 >>> 31;
                  }
                  var _0x35dd77 = (_0x404cd7 << 5 | _0x404cd7 >>> 27) + _0xbfa3f9 + _0x35a857[_0xbd71c];
                  if (_0xbd71c < 20) {
                    _0x35dd77 += (_0x2446e8 & _0x58e34e | ~_0x2446e8 & _0x4ae3a9) + 1518500249;
                  } else if (_0xbd71c < 40) {
                    _0x35dd77 += (_0x2446e8 ^ _0x58e34e ^ _0x4ae3a9) + 1859775393;
                  } else if (_0xbd71c < 60) {
                    _0x35dd77 += (_0x2446e8 & _0x58e34e | _0x2446e8 & _0x4ae3a9 | _0x58e34e & _0x4ae3a9) - 1894007588;
                  } else {
                    _0x35dd77 += (_0x2446e8 ^ _0x58e34e ^ _0x4ae3a9) - 899497514;
                  }
                  _0xbfa3f9 = _0x4ae3a9;
                  _0x4ae3a9 = _0x58e34e;
                  _0x58e34e = _0x2446e8 << 30 | _0x2446e8 >>> 2;
                  _0x2446e8 = _0x404cd7;
                  _0x404cd7 = _0x35dd77;
                }
                _0x417819[0] = _0x417819[0] + _0x404cd7 | 0;
                _0x417819[1] = _0x417819[1] + _0x2446e8 | 0;
                _0x417819[2] = _0x417819[2] + _0x58e34e | 0;
                _0x417819[3] = _0x417819[3] + _0x4ae3a9 | 0;
                _0x417819[4] = _0x417819[4] + _0xbfa3f9 | 0;
              },
              _doFinalize: function () {
                var _0x310596 = this._data;
                var _0x449059 = _0x310596.words;
                var _0x3c9df1 = this._nDataBytes * 8;
                var _0x3c2f6c = _0x310596.sigBytes * 8;
                _0x449059[_0x3c2f6c >>> 5] |= 128 << 24 - _0x3c2f6c % 32;
                _0x449059[(_0x3c2f6c + 64 >>> 9 << 4) + 14] = Math.floor(_0x3c9df1 / 4294967296);
                _0x449059[(_0x3c2f6c + 64 >>> 9 << 4) + 15] = _0x3c9df1;
                _0x310596.sigBytes = _0x449059.length * 4;
                this._process();
                return this._hash;
              },
              clone: function () {
                var _0x2f7b39 = _0x1eccbc.clone.call(this);
                _0x2f7b39._hash = this._hash.clone();
                return _0x2f7b39;
              }
            });
            _0x5d0f97.SHA1 = _0x1eccbc._createHelper(_0x5178b3);
            _0x5d0f97.HmacSHA1 = _0x1eccbc._createHmacHelper(_0x5178b3);
          })();
          return _0x3f0f2b.SHA1;
        });
      }
    });
    var _0x1d1e1d = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha256.js"(_0xb8bd4d, _0x525555) {
        'use strict';

        (function (_0x5190f6, _0x10000e) {
          if (typeof _0xb8bd4d === "object") {
            _0x525555.exports = _0xb8bd4d = _0x10000e(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x10000e);
          } else {
            _0x10000e(_0x5190f6.CryptoJS);
          }
        })(_0xb8bd4d, function (_0x480d77) {
          (function (_0xeb375) {
            var _0x857bf4 = _0x480d77;
            var _0x4591b4 = _0x857bf4.lib;
            var _0xcfa90e = _0x4591b4.WordArray;
            var _0x2d7c8f = _0x4591b4.Hasher;
            var _0x39470a = _0x857bf4.algo;
            var _0x2f6134 = [];
            var _0x150b43 = [];
            (function () {
              function _0x4a7e77(_0xeab57e) {
                var _0x12148e = _0xeb375.sqrt(_0xeab57e);
                for (var _0x54b3db = 2; _0x54b3db <= _0x12148e; _0x54b3db++) {
                  if (!(_0xeab57e % _0x54b3db)) {
                    return false;
                  }
                }
                return true;
              }
              function _0x4212d3(_0x19a2f6) {
                return (_0x19a2f6 - (_0x19a2f6 | 0)) * 4294967296 | 0;
              }
              var _0x501641 = 2;
              var _0x87b8df = 0;
              while (_0x87b8df < 64) {
                if (_0x4a7e77(_0x501641)) {
                  if (_0x87b8df < 8) {
                    _0x2f6134[_0x87b8df] = _0x4212d3(_0xeb375.pow(_0x501641, 1 / 2));
                  }
                  _0x150b43[_0x87b8df] = _0x4212d3(_0xeb375.pow(_0x501641, 1 / 3));
                  _0x87b8df++;
                }
                _0x501641++;
              }
            })();
            var _0x300a25 = [];
            var _0x1731a5 = _0x39470a.SHA256 = _0x2d7c8f.extend({
              _doReset: function () {
                this._hash = new _0xcfa90e.init(_0x2f6134.slice(0));
              },
              _doProcessBlock: function (_0x202164, _0x31ec87) {
                var _0x33c33a = this._hash.words;
                var _0x4caf15 = _0x33c33a[0];
                var _0x3069c9 = _0x33c33a[1];
                var _0xcf25e6 = _0x33c33a[2];
                var _0x2bb932 = _0x33c33a[3];
                var _0x5a139a = _0x33c33a[4];
                var _0x5f2124 = _0x33c33a[5];
                var _0x5e4d74 = _0x33c33a[6];
                var _0x4cb73d = _0x33c33a[7];
                for (var _0x4e35c0 = 0; _0x4e35c0 < 64; _0x4e35c0++) {
                  if (_0x4e35c0 < 16) {
                    _0x300a25[_0x4e35c0] = _0x202164[_0x31ec87 + _0x4e35c0] | 0;
                  } else {
                    var _0x35000b = _0x300a25[_0x4e35c0 - 15];
                    var _0x8db75 = (_0x35000b << 25 | _0x35000b >>> 7) ^ (_0x35000b << 14 | _0x35000b >>> 18) ^ _0x35000b >>> 3;
                    var _0x586128 = _0x300a25[_0x4e35c0 - 2];
                    var _0x3a91ba = (_0x586128 << 15 | _0x586128 >>> 17) ^ (_0x586128 << 13 | _0x586128 >>> 19) ^ _0x586128 >>> 10;
                    _0x300a25[_0x4e35c0] = _0x8db75 + _0x300a25[_0x4e35c0 - 7] + _0x3a91ba + _0x300a25[_0x4e35c0 - 16];
                  }
                  var _0x20a8a4 = _0x5a139a & _0x5f2124 ^ ~_0x5a139a & _0x5e4d74;
                  var _0x472d3e = _0x4caf15 & _0x3069c9 ^ _0x4caf15 & _0xcf25e6 ^ _0x3069c9 & _0xcf25e6;
                  var _0xed33cb = (_0x4caf15 << 30 | _0x4caf15 >>> 2) ^ (_0x4caf15 << 19 | _0x4caf15 >>> 13) ^ (_0x4caf15 << 10 | _0x4caf15 >>> 22);
                  var _0x48d238 = (_0x5a139a << 26 | _0x5a139a >>> 6) ^ (_0x5a139a << 21 | _0x5a139a >>> 11) ^ (_0x5a139a << 7 | _0x5a139a >>> 25);
                  var _0x428318 = _0x4cb73d + _0x48d238 + _0x20a8a4 + _0x150b43[_0x4e35c0] + _0x300a25[_0x4e35c0];
                  var _0x47c016 = _0xed33cb + _0x472d3e;
                  _0x4cb73d = _0x5e4d74;
                  _0x5e4d74 = _0x5f2124;
                  _0x5f2124 = _0x5a139a;
                  _0x5a139a = _0x2bb932 + _0x428318 | 0;
                  _0x2bb932 = _0xcf25e6;
                  _0xcf25e6 = _0x3069c9;
                  _0x3069c9 = _0x4caf15;
                  _0x4caf15 = _0x428318 + _0x47c016 | 0;
                }
                _0x33c33a[0] = _0x33c33a[0] + _0x4caf15 | 0;
                _0x33c33a[1] = _0x33c33a[1] + _0x3069c9 | 0;
                _0x33c33a[2] = _0x33c33a[2] + _0xcf25e6 | 0;
                _0x33c33a[3] = _0x33c33a[3] + _0x2bb932 | 0;
                _0x33c33a[4] = _0x33c33a[4] + _0x5a139a | 0;
                _0x33c33a[5] = _0x33c33a[5] + _0x5f2124 | 0;
                _0x33c33a[6] = _0x33c33a[6] + _0x5e4d74 | 0;
                _0x33c33a[7] = _0x33c33a[7] + _0x4cb73d | 0;
              },
              _doFinalize: function () {
                var _0x4f594b = this._data;
                var _0x2b7e4e = _0x4f594b.words;
                var _0x3ec166 = this._nDataBytes * 8;
                var _0x2b98d7 = _0x4f594b.sigBytes * 8;
                _0x2b7e4e[_0x2b98d7 >>> 5] |= 128 << 24 - _0x2b98d7 % 32;
                _0x2b7e4e[(_0x2b98d7 + 64 >>> 9 << 4) + 14] = _0xeb375.floor(_0x3ec166 / 4294967296);
                _0x2b7e4e[(_0x2b98d7 + 64 >>> 9 << 4) + 15] = _0x3ec166;
                _0x4f594b.sigBytes = _0x2b7e4e.length * 4;
                this._process();
                return this._hash;
              },
              clone: function () {
                var _0x557654 = _0x2d7c8f.clone.call(this);
                _0x557654._hash = this._hash.clone();
                return _0x557654;
              }
            });
            _0x857bf4.SHA256 = _0x2d7c8f._createHelper(_0x1731a5);
            _0x857bf4.HmacSHA256 = _0x2d7c8f._createHmacHelper(_0x1731a5);
          })(Math);
          return _0x480d77.SHA256;
        });
      }
    });
    var _0x2c8644 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha224.js"(_0x22dc46, _0x4eddd7) {
        'use strict';

        (function (_0x1d8a29, _0x10a92c, _0x499ce7) {
          if (typeof _0x22dc46 === "object") {
            _0x4eddd7.exports = _0x22dc46 = _0x10a92c(_0x3eabc7(), _0x1d1e1d());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./sha256"], _0x10a92c);
          } else {
            _0x10a92c(_0x1d8a29.CryptoJS);
          }
        })(_0x22dc46, function (_0x5a1ef7) {
          (function () {
            var _0x24a6ff = _0x5a1ef7;
            var _0xd67534 = _0x24a6ff.lib;
            var _0xe74e3e = _0xd67534.WordArray;
            var _0x566f23 = _0x24a6ff.algo;
            var _0x10f9c7 = _0x566f23.SHA256;
            var _0x2d3c11 = _0x566f23.SHA224 = _0x10f9c7.extend({
              _doReset: function () {
                this._hash = new _0xe74e3e.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
              },
              _doFinalize: function () {
                var _0x2289b2 = _0x10f9c7._doFinalize.call(this);
                _0x2289b2.sigBytes -= 4;
                return _0x2289b2;
              }
            });
            _0x24a6ff.SHA224 = _0x10f9c7._createHelper(_0x2d3c11);
            _0x24a6ff.HmacSHA224 = _0x10f9c7._createHmacHelper(_0x2d3c11);
          })();
          return _0x5a1ef7.SHA224;
        });
      }
    });
    var _0x5a7fbe = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha512.js"(_0x5cd323, _0x1c416c) {
        'use strict';

        (function (_0x40c2d0, _0x27d999, _0x15d6d8) {
          if (typeof _0x5cd323 === "object") {
            _0x1c416c.exports = _0x5cd323 = _0x27d999(_0x3eabc7(), _0x124198());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core"], _0x27d999);
          } else {
            _0x27d999(_0x40c2d0.CryptoJS);
          }
        })(_0x5cd323, function (_0x412461) {
          (function () {
            var _0x213670 = _0x412461;
            var _0x58fbac = _0x213670.lib;
            var _0xb2962d = _0x58fbac.Hasher;
            var _0x3aea42 = _0x213670.x64;
            var _0x2862ce = _0x3aea42.Word;
            var _0x9f702a = _0x3aea42.WordArray;
            var _0x4019d0 = _0x213670.algo;
            function _0x19e7e8() {
              return _0x2862ce.create.apply(_0x2862ce, arguments);
            }
            var _0xed55b3 = [_0x19e7e8(1116352408, 3609767458), _0x19e7e8(1899447441, 602891725), _0x19e7e8(3049323471, 3964484399), _0x19e7e8(3921009573, 2173295548), _0x19e7e8(961987163, 4081628472), _0x19e7e8(1508970993, 3053834265), _0x19e7e8(2453635748, 2937671579), _0x19e7e8(2870763221, 3664609560), _0x19e7e8(3624381080, 2734883394), _0x19e7e8(310598401, 1164996542), _0x19e7e8(607225278, 1323610764), _0x19e7e8(1426881987, 3590304994), _0x19e7e8(1925078388, 4068182383), _0x19e7e8(2162078206, 991336113), _0x19e7e8(2614888103, 633803317), _0x19e7e8(3248222580, 3479774868), _0x19e7e8(3835390401, 2666613458), _0x19e7e8(4022224774, 944711139), _0x19e7e8(264347078, 2341262773), _0x19e7e8(604807628, 2007800933), _0x19e7e8(770255983, 1495990901), _0x19e7e8(1249150122, 1856431235), _0x19e7e8(1555081692, 3175218132), _0x19e7e8(1996064986, 2198950837), _0x19e7e8(2554220882, 3999719339), _0x19e7e8(2821834349, 766784016), _0x19e7e8(2952996808, 2566594879), _0x19e7e8(3210313671, 3203337956), _0x19e7e8(3336571891, 1034457026), _0x19e7e8(3584528711, 2466948901), _0x19e7e8(113926993, 3758326383), _0x19e7e8(338241895, 168717936), _0x19e7e8(666307205, 1188179964), _0x19e7e8(773529912, 1546045734), _0x19e7e8(1294757372, 1522805485), _0x19e7e8(1396182291, 2643833823), _0x19e7e8(1695183700, 2343527390), _0x19e7e8(1986661051, 1014477480), _0x19e7e8(2177026350, 1206759142), _0x19e7e8(2456956037, 344077627), _0x19e7e8(2730485921, 1290863460), _0x19e7e8(2820302411, 3158454273), _0x19e7e8(3259730800, 3505952657), _0x19e7e8(3345764771, 106217008), _0x19e7e8(3516065817, 3606008344), _0x19e7e8(3600352804, 1432725776), _0x19e7e8(4094571909, 1467031594), _0x19e7e8(275423344, 851169720), _0x19e7e8(430227734, 3100823752), _0x19e7e8(506948616, 1363258195), _0x19e7e8(659060556, 3750685593), _0x19e7e8(883997877, 3785050280), _0x19e7e8(958139571, 3318307427), _0x19e7e8(1322822218, 3812723403), _0x19e7e8(1537002063, 2003034995), _0x19e7e8(1747873779, 3602036899), _0x19e7e8(1955562222, 1575990012), _0x19e7e8(2024104815, 1125592928), _0x19e7e8(2227730452, 2716904306), _0x19e7e8(2361852424, 442776044), _0x19e7e8(2428436474, 593698344), _0x19e7e8(2756734187, 3733110249), _0x19e7e8(3204031479, 2999351573), _0x19e7e8(3329325298, 3815920427), _0x19e7e8(3391569614, 3928383900), _0x19e7e8(3515267271, 566280711), _0x19e7e8(3940187606, 3454069534), _0x19e7e8(4118630271, 4000239992), _0x19e7e8(116418474, 1914138554), _0x19e7e8(174292421, 2731055270), _0x19e7e8(289380356, 3203993006), _0x19e7e8(460393269, 320620315), _0x19e7e8(685471733, 587496836), _0x19e7e8(852142971, 1086792851), _0x19e7e8(1017036298, 365543100), _0x19e7e8(1126000580, 2618297676), _0x19e7e8(1288033470, 3409855158), _0x19e7e8(1501505948, 4234509866), _0x19e7e8(1607167915, 987167468), _0x19e7e8(1816402316, 1246189591)];
            var _0x469639 = [];
            (function () {
              for (var _0x153e42 = 0; _0x153e42 < 80; _0x153e42++) {
                _0x469639[_0x153e42] = _0x19e7e8();
              }
            })();
            var _0x525ae5 = _0x4019d0.SHA512 = _0xb2962d.extend({
              _doReset: function () {
                this._hash = new _0x9f702a.init([new _0x2862ce.init(1779033703, 4089235720), new _0x2862ce.init(3144134277, 2227873595), new _0x2862ce.init(1013904242, 4271175723), new _0x2862ce.init(2773480762, 1595750129), new _0x2862ce.init(1359893119, 2917565137), new _0x2862ce.init(2600822924, 725511199), new _0x2862ce.init(528734635, 4215389547), new _0x2862ce.init(1541459225, 327033209)]);
              },
              _doProcessBlock: function (_0xaa0673, _0x180286) {
                var _0x4ad1a0 = this._hash.words;
                var _0x5bf17f = _0x4ad1a0[0];
                var _0x1e0007 = _0x4ad1a0[1];
                var _0x15ac9b = _0x4ad1a0[2];
                var _0x1fee92 = _0x4ad1a0[3];
                var _0x3452a1 = _0x4ad1a0[4];
                var _0x26b208 = _0x4ad1a0[5];
                var _0x11f571 = _0x4ad1a0[6];
                var _0x6de3f7 = _0x4ad1a0[7];
                var _0x2c971b = _0x5bf17f.high;
                var _0x1fea76 = _0x5bf17f.low;
                var _0x2b86a1 = _0x1e0007.high;
                var _0x4e9c05 = _0x1e0007.low;
                var _0x545984 = _0x15ac9b.high;
                var _0x4e89f3 = _0x15ac9b.low;
                var _0x2f1cce = _0x1fee92.high;
                var _0x3bf540 = _0x1fee92.low;
                var _0x32c6f8 = _0x3452a1.high;
                var _0x4c770a = _0x3452a1.low;
                var _0x476d4d = _0x26b208.high;
                var _0xe61251 = _0x26b208.low;
                var _0x4a3cc6 = _0x11f571.high;
                var _0x25d07c = _0x11f571.low;
                var _0x3ecef0 = _0x6de3f7.high;
                var _0x289111 = _0x6de3f7.low;
                var _0x521689 = _0x2c971b;
                var _0x48e99c = _0x1fea76;
                var _0x3b3155 = _0x2b86a1;
                var _0x162991 = _0x4e9c05;
                var _0x2ff3bd = _0x545984;
                var _0x30e8ab = _0x4e89f3;
                var _0x5e6808 = _0x2f1cce;
                var _0x334bd5 = _0x3bf540;
                var _0x4d2db1 = _0x32c6f8;
                var _0x20e1cc = _0x4c770a;
                var _0x50a5e8 = _0x476d4d;
                var _0x492370 = _0xe61251;
                var _0x4d9fe5 = _0x4a3cc6;
                var _0x4cd5ed = _0x25d07c;
                var _0x393bc3 = _0x3ecef0;
                var _0x43981b = _0x289111;
                for (var _0xeb1b50 = 0; _0xeb1b50 < 80; _0xeb1b50++) {
                  var _0x4ad4ad = _0x469639[_0xeb1b50];
                  if (_0xeb1b50 < 16) {
                    var _0x3ed0e6 = _0x4ad4ad.high = _0xaa0673[_0x180286 + _0xeb1b50 * 2] | 0;
                    var _0x545033 = _0x4ad4ad.low = _0xaa0673[_0x180286 + _0xeb1b50 * 2 + 1] | 0;
                  } else {
                    var _0x3ddceb = _0x469639[_0xeb1b50 - 15];
                    var _0x2e2ab4 = _0x3ddceb.high;
                    var _0x5a7924 = _0x3ddceb.low;
                    var _0x1eaaca = (_0x2e2ab4 >>> 1 | _0x5a7924 << 31) ^ (_0x2e2ab4 >>> 8 | _0x5a7924 << 24) ^ _0x2e2ab4 >>> 7;
                    var _0x57f0ae = (_0x5a7924 >>> 1 | _0x2e2ab4 << 31) ^ (_0x5a7924 >>> 8 | _0x2e2ab4 << 24) ^ (_0x5a7924 >>> 7 | _0x2e2ab4 << 25);
                    var _0x3295e6 = _0x469639[_0xeb1b50 - 2];
                    var _0x1a42be = _0x3295e6.high;
                    var _0x272f81 = _0x3295e6.low;
                    var _0x5022a6 = (_0x1a42be >>> 19 | _0x272f81 << 13) ^ (_0x1a42be << 3 | _0x272f81 >>> 29) ^ _0x1a42be >>> 6;
                    var _0x649905 = (_0x272f81 >>> 19 | _0x1a42be << 13) ^ (_0x272f81 << 3 | _0x1a42be >>> 29) ^ (_0x272f81 >>> 6 | _0x1a42be << 26);
                    var _0x316b17 = _0x469639[_0xeb1b50 - 7];
                    var _0x54c79c = _0x316b17.high;
                    var _0x3323c7 = _0x316b17.low;
                    var _0x3caa46 = _0x469639[_0xeb1b50 - 16];
                    var _0x16e84c = _0x3caa46.high;
                    var _0x3eb4e1 = _0x3caa46.low;
                    var _0x545033 = _0x57f0ae + _0x3323c7;
                    var _0x3ed0e6 = _0x1eaaca + _0x54c79c + (_0x545033 >>> 0 < _0x57f0ae >>> 0 ? 1 : 0);
                    var _0x545033 = _0x545033 + _0x649905;
                    var _0x3ed0e6 = _0x3ed0e6 + _0x5022a6 + (_0x545033 >>> 0 < _0x649905 >>> 0 ? 1 : 0);
                    var _0x545033 = _0x545033 + _0x3eb4e1;
                    var _0x3ed0e6 = _0x3ed0e6 + _0x16e84c + (_0x545033 >>> 0 < _0x3eb4e1 >>> 0 ? 1 : 0);
                    _0x4ad4ad.high = _0x3ed0e6;
                    _0x4ad4ad.low = _0x545033;
                  }
                  var _0x39a198 = _0x4d2db1 & _0x50a5e8 ^ ~_0x4d2db1 & _0x4d9fe5;
                  var _0x3896a2 = _0x20e1cc & _0x492370 ^ ~_0x20e1cc & _0x4cd5ed;
                  var _0x2c602a = _0x521689 & _0x3b3155 ^ _0x521689 & _0x2ff3bd ^ _0x3b3155 & _0x2ff3bd;
                  var _0xaac996 = _0x48e99c & _0x162991 ^ _0x48e99c & _0x30e8ab ^ _0x162991 & _0x30e8ab;
                  var _0x543755 = (_0x521689 >>> 28 | _0x48e99c << 4) ^ (_0x521689 << 30 | _0x48e99c >>> 2) ^ (_0x521689 << 25 | _0x48e99c >>> 7);
                  var _0x272e11 = (_0x48e99c >>> 28 | _0x521689 << 4) ^ (_0x48e99c << 30 | _0x521689 >>> 2) ^ (_0x48e99c << 25 | _0x521689 >>> 7);
                  var _0x560eb6 = (_0x4d2db1 >>> 14 | _0x20e1cc << 18) ^ (_0x4d2db1 >>> 18 | _0x20e1cc << 14) ^ (_0x4d2db1 << 23 | _0x20e1cc >>> 9);
                  var _0x41f1d5 = (_0x20e1cc >>> 14 | _0x4d2db1 << 18) ^ (_0x20e1cc >>> 18 | _0x4d2db1 << 14) ^ (_0x20e1cc << 23 | _0x4d2db1 >>> 9);
                  var _0x113e7a = _0xed55b3[_0xeb1b50];
                  var _0x10b63a = _0x113e7a.high;
                  var _0x26fb5a = _0x113e7a.low;
                  var _0x46214c = _0x43981b + _0x41f1d5;
                  var _0x12b526 = _0x393bc3 + _0x560eb6 + (_0x46214c >>> 0 < _0x43981b >>> 0 ? 1 : 0);
                  var _0x46214c = _0x46214c + _0x3896a2;
                  var _0x12b526 = _0x12b526 + _0x39a198 + (_0x46214c >>> 0 < _0x3896a2 >>> 0 ? 1 : 0);
                  var _0x46214c = _0x46214c + _0x26fb5a;
                  var _0x12b526 = _0x12b526 + _0x10b63a + (_0x46214c >>> 0 < _0x26fb5a >>> 0 ? 1 : 0);
                  var _0x46214c = _0x46214c + _0x545033;
                  var _0x12b526 = _0x12b526 + _0x3ed0e6 + (_0x46214c >>> 0 < _0x545033 >>> 0 ? 1 : 0);
                  var _0x359328 = _0x272e11 + _0xaac996;
                  var _0x1c7f30 = _0x543755 + _0x2c602a + (_0x359328 >>> 0 < _0x272e11 >>> 0 ? 1 : 0);
                  _0x393bc3 = _0x4d9fe5;
                  _0x43981b = _0x4cd5ed;
                  _0x4d9fe5 = _0x50a5e8;
                  _0x4cd5ed = _0x492370;
                  _0x50a5e8 = _0x4d2db1;
                  _0x492370 = _0x20e1cc;
                  _0x20e1cc = _0x334bd5 + _0x46214c | 0;
                  _0x4d2db1 = _0x5e6808 + _0x12b526 + (_0x20e1cc >>> 0 < _0x334bd5 >>> 0 ? 1 : 0) | 0;
                  _0x5e6808 = _0x2ff3bd;
                  _0x334bd5 = _0x30e8ab;
                  _0x2ff3bd = _0x3b3155;
                  _0x30e8ab = _0x162991;
                  _0x3b3155 = _0x521689;
                  _0x162991 = _0x48e99c;
                  _0x48e99c = _0x46214c + _0x359328 | 0;
                  _0x521689 = _0x12b526 + _0x1c7f30 + (_0x48e99c >>> 0 < _0x46214c >>> 0 ? 1 : 0) | 0;
                }
                _0x1fea76 = _0x5bf17f.low = _0x1fea76 + _0x48e99c;
                _0x5bf17f.high = _0x2c971b + _0x521689 + (_0x1fea76 >>> 0 < _0x48e99c >>> 0 ? 1 : 0);
                _0x4e9c05 = _0x1e0007.low = _0x4e9c05 + _0x162991;
                _0x1e0007.high = _0x2b86a1 + _0x3b3155 + (_0x4e9c05 >>> 0 < _0x162991 >>> 0 ? 1 : 0);
                _0x4e89f3 = _0x15ac9b.low = _0x4e89f3 + _0x30e8ab;
                _0x15ac9b.high = _0x545984 + _0x2ff3bd + (_0x4e89f3 >>> 0 < _0x30e8ab >>> 0 ? 1 : 0);
                _0x3bf540 = _0x1fee92.low = _0x3bf540 + _0x334bd5;
                _0x1fee92.high = _0x2f1cce + _0x5e6808 + (_0x3bf540 >>> 0 < _0x334bd5 >>> 0 ? 1 : 0);
                _0x4c770a = _0x3452a1.low = _0x4c770a + _0x20e1cc;
                _0x3452a1.high = _0x32c6f8 + _0x4d2db1 + (_0x4c770a >>> 0 < _0x20e1cc >>> 0 ? 1 : 0);
                _0xe61251 = _0x26b208.low = _0xe61251 + _0x492370;
                _0x26b208.high = _0x476d4d + _0x50a5e8 + (_0xe61251 >>> 0 < _0x492370 >>> 0 ? 1 : 0);
                _0x25d07c = _0x11f571.low = _0x25d07c + _0x4cd5ed;
                _0x11f571.high = _0x4a3cc6 + _0x4d9fe5 + (_0x25d07c >>> 0 < _0x4cd5ed >>> 0 ? 1 : 0);
                _0x289111 = _0x6de3f7.low = _0x289111 + _0x43981b;
                _0x6de3f7.high = _0x3ecef0 + _0x393bc3 + (_0x289111 >>> 0 < _0x43981b >>> 0 ? 1 : 0);
              },
              _doFinalize: function () {
                var _0xaa0a5 = this._data;
                var _0x1e3a8e = _0xaa0a5.words;
                var _0x2229b4 = this._nDataBytes * 8;
                var _0x1fde8e = _0xaa0a5.sigBytes * 8;
                _0x1e3a8e[_0x1fde8e >>> 5] |= 128 << 24 - _0x1fde8e % 32;
                _0x1e3a8e[(_0x1fde8e + 128 >>> 10 << 5) + 30] = Math.floor(_0x2229b4 / 4294967296);
                _0x1e3a8e[(_0x1fde8e + 128 >>> 10 << 5) + 31] = _0x2229b4;
                _0xaa0a5.sigBytes = _0x1e3a8e.length * 4;
                this._process();
                var _0x3be2c2 = this._hash.toX32();
                return _0x3be2c2;
              },
              clone: function () {
                var _0x38e3b0 = _0xb2962d.clone.call(this);
                _0x38e3b0._hash = this._hash.clone();
                return _0x38e3b0;
              },
              blockSize: 32
            });
            _0x213670.SHA512 = _0xb2962d._createHelper(_0x525ae5);
            _0x213670.HmacSHA512 = _0xb2962d._createHmacHelper(_0x525ae5);
          })();
          return _0x412461.SHA512;
        });
      }
    });
    var _0x5a24f1 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha384.js"(_0x58c5c1, _0x309777) {
        'use strict';

        (function (_0x55ecf8, _0x1efeb5, _0x5cfbe1) {
          if (typeof _0x58c5c1 === "object") {
            _0x309777.exports = _0x58c5c1 = _0x1efeb5(_0x3eabc7(), _0x124198(), _0x5a7fbe());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core", "./sha512"], _0x1efeb5);
          } else {
            _0x1efeb5(_0x55ecf8.CryptoJS);
          }
        })(_0x58c5c1, function (_0x56306c) {
          (function () {
            var _0x54e3e4 = _0x56306c;
            var _0x16e0c1 = _0x54e3e4.x64;
            var _0x529c9f = _0x16e0c1.Word;
            var _0x125b69 = _0x16e0c1.WordArray;
            var _0x4a3d0f = _0x54e3e4.algo;
            var _0x2f8fe3 = _0x4a3d0f.SHA512;
            var _0x4ee057 = _0x4a3d0f.SHA384 = _0x2f8fe3.extend({
              _doReset: function () {
                this._hash = new _0x125b69.init([new _0x529c9f.init(3418070365, 3238371032), new _0x529c9f.init(1654270250, 914150663), new _0x529c9f.init(2438529370, 812702999), new _0x529c9f.init(355462360, 4144912697), new _0x529c9f.init(1731405415, 4290775857), new _0x529c9f.init(2394180231, 1750603025), new _0x529c9f.init(3675008525, 1694076839), new _0x529c9f.init(1203062813, 3204075428)]);
              },
              _doFinalize: function () {
                var _0x4dcedc = _0x2f8fe3._doFinalize.call(this);
                _0x4dcedc.sigBytes -= 16;
                return _0x4dcedc;
              }
            });
            _0x54e3e4.SHA384 = _0x2f8fe3._createHelper(_0x4ee057);
            _0x54e3e4.HmacSHA384 = _0x2f8fe3._createHmacHelper(_0x4ee057);
          })();
          return _0x56306c.SHA384;
        });
      }
    });
    var _0x5c5b4b = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/sha3.js"(_0x44d6f1, _0x1a06b7) {
        'use strict';

        (function (_0x33e437, _0x57c8fb, _0x11c83b) {
          if (typeof _0x44d6f1 === "object") {
            _0x1a06b7.exports = _0x44d6f1 = _0x57c8fb(_0x3eabc7(), _0x124198());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core"], _0x57c8fb);
          } else {
            _0x57c8fb(_0x33e437.CryptoJS);
          }
        })(_0x44d6f1, function (_0x4a5045) {
          (function (_0x31bb3f) {
            var _0x52cf41 = _0x4a5045;
            var _0x356455 = _0x52cf41.lib;
            var _0x78e594 = _0x356455.WordArray;
            var _0x1595a0 = _0x356455.Hasher;
            var _0x14367a = _0x52cf41.x64;
            var _0x5e6979 = _0x14367a.Word;
            var _0x15836a = _0x52cf41.algo;
            var _0x2a5197 = [];
            var _0x5072d3 = [];
            var _0x1c621d = [];
            (function () {
              var _0x368dea = 1;
              var _0x197433 = 0;
              for (var _0x29862c = 0; _0x29862c < 24; _0x29862c++) {
                _0x2a5197[_0x368dea + _0x197433 * 5] = (_0x29862c + 1) * (_0x29862c + 2) / 2 % 64;
                var _0x5b0dee = _0x197433 % 5;
                var _0x5c3007 = (_0x368dea * 2 + _0x197433 * 3) % 5;
                _0x368dea = _0x5b0dee;
                _0x197433 = _0x5c3007;
              }
              for (var _0x368dea = 0; _0x368dea < 5; _0x368dea++) {
                for (var _0x197433 = 0; _0x197433 < 5; _0x197433++) {
                  _0x5072d3[_0x368dea + _0x197433 * 5] = _0x197433 + (_0x368dea * 2 + _0x197433 * 3) % 5 * 5;
                }
              }
              var _0x181cf6 = 1;
              for (var _0xfbe239 = 0; _0xfbe239 < 24; _0xfbe239++) {
                var _0x42b614 = 0;
                var _0x1c8e22 = 0;
                for (var _0xec74e1 = 0; _0xec74e1 < 7; _0xec74e1++) {
                  if (_0x181cf6 & 1) {
                    var _0x257cdb = (1 << _0xec74e1) - 1;
                    if (_0x257cdb < 32) {
                      _0x1c8e22 ^= 1 << _0x257cdb;
                    } else {
                      _0x42b614 ^= 1 << _0x257cdb - 32;
                    }
                  }
                  if (_0x181cf6 & 128) {
                    _0x181cf6 = _0x181cf6 << 1 ^ 113;
                  } else {
                    _0x181cf6 <<= 1;
                  }
                }
                _0x1c621d[_0xfbe239] = _0x5e6979.create(_0x42b614, _0x1c8e22);
              }
            })();
            var _0x51ed27 = [];
            (function () {
              for (var _0x3f3b11 = 0; _0x3f3b11 < 25; _0x3f3b11++) {
                _0x51ed27[_0x3f3b11] = _0x5e6979.create();
              }
            })();
            var _0xd7247b = _0x15836a.SHA3 = _0x1595a0.extend({
              cfg: _0x1595a0.cfg.extend({
                outputLength: 512
              }),
              _doReset: function () {
                var _0x56190a = this._state = [];
                for (var _0x3bdac2 = 0; _0x3bdac2 < 25; _0x3bdac2++) {
                  _0x56190a[_0x3bdac2] = new _0x5e6979.init();
                }
                this.blockSize = (1600 - this.cfg.outputLength * 2) / 32;
              },
              _doProcessBlock: function (_0x1005ba, _0x3c09ea) {
                var _0x8843ac = this._state;
                var _0xea1c27 = this.blockSize / 2;
                for (var _0x11b511 = 0; _0x11b511 < _0xea1c27; _0x11b511++) {
                  var _0x3c958d = _0x1005ba[_0x3c09ea + _0x11b511 * 2];
                  var _0x415c7b = _0x1005ba[_0x3c09ea + _0x11b511 * 2 + 1];
                  _0x3c958d = (_0x3c958d << 8 | _0x3c958d >>> 24) & 16711935 | (_0x3c958d << 24 | _0x3c958d >>> 8) & 4278255360;
                  _0x415c7b = (_0x415c7b << 8 | _0x415c7b >>> 24) & 16711935 | (_0x415c7b << 24 | _0x415c7b >>> 8) & 4278255360;
                  var _0x13d7b9 = _0x8843ac[_0x11b511];
                  _0x13d7b9.high ^= _0x415c7b;
                  _0x13d7b9.low ^= _0x3c958d;
                }
                for (var _0x57fa95 = 0; _0x57fa95 < 24; _0x57fa95++) {
                  for (var _0xa434a6 = 0; _0xa434a6 < 5; _0xa434a6++) {
                    var _0x206fc0 = 0;
                    var _0x3348d5 = 0;
                    for (var _0x92e950 = 0; _0x92e950 < 5; _0x92e950++) {
                      var _0x13d7b9 = _0x8843ac[_0xa434a6 + _0x92e950 * 5];
                      _0x206fc0 ^= _0x13d7b9.high;
                      _0x3348d5 ^= _0x13d7b9.low;
                    }
                    var _0x163f10 = _0x51ed27[_0xa434a6];
                    _0x163f10.high = _0x206fc0;
                    _0x163f10.low = _0x3348d5;
                  }
                  for (var _0xa434a6 = 0; _0xa434a6 < 5; _0xa434a6++) {
                    var _0x2e7017 = _0x51ed27[(_0xa434a6 + 4) % 5];
                    var _0x28f54e = _0x51ed27[(_0xa434a6 + 1) % 5];
                    var _0x530276 = _0x28f54e.high;
                    var _0x15728f = _0x28f54e.low;
                    var _0x206fc0 = _0x2e7017.high ^ (_0x530276 << 1 | _0x15728f >>> 31);
                    var _0x3348d5 = _0x2e7017.low ^ (_0x15728f << 1 | _0x530276 >>> 31);
                    for (var _0x92e950 = 0; _0x92e950 < 5; _0x92e950++) {
                      var _0x13d7b9 = _0x8843ac[_0xa434a6 + _0x92e950 * 5];
                      _0x13d7b9.high ^= _0x206fc0;
                      _0x13d7b9.low ^= _0x3348d5;
                    }
                  }
                  for (var _0x2db8ca = 1; _0x2db8ca < 25; _0x2db8ca++) {
                    var _0x13d7b9 = _0x8843ac[_0x2db8ca];
                    var _0x2e12bb = _0x13d7b9.high;
                    var _0x45d30a = _0x13d7b9.low;
                    var _0x6a0993 = _0x2a5197[_0x2db8ca];
                    if (_0x6a0993 < 32) {
                      var _0x206fc0 = _0x2e12bb << _0x6a0993 | _0x45d30a >>> 32 - _0x6a0993;
                      var _0x3348d5 = _0x45d30a << _0x6a0993 | _0x2e12bb >>> 32 - _0x6a0993;
                    } else {
                      var _0x206fc0 = _0x45d30a << _0x6a0993 - 32 | _0x2e12bb >>> 64 - _0x6a0993;
                      var _0x3348d5 = _0x2e12bb << _0x6a0993 - 32 | _0x45d30a >>> 64 - _0x6a0993;
                    }
                    var _0x4b04dd = _0x51ed27[_0x5072d3[_0x2db8ca]];
                    _0x4b04dd.high = _0x206fc0;
                    _0x4b04dd.low = _0x3348d5;
                  }
                  var _0x43d1b6 = _0x51ed27[0];
                  var _0x132412 = _0x8843ac[0];
                  _0x43d1b6.high = _0x132412.high;
                  _0x43d1b6.low = _0x132412.low;
                  for (var _0xa434a6 = 0; _0xa434a6 < 5; _0xa434a6++) {
                    for (var _0x92e950 = 0; _0x92e950 < 5; _0x92e950++) {
                      var _0x2db8ca = _0xa434a6 + _0x92e950 * 5;
                      var _0x13d7b9 = _0x8843ac[_0x2db8ca];
                      var _0x526978 = _0x51ed27[_0x2db8ca];
                      var _0x5deb3b = _0x51ed27[(_0xa434a6 + 1) % 5 + _0x92e950 * 5];
                      var _0x1a337a = _0x51ed27[(_0xa434a6 + 2) % 5 + _0x92e950 * 5];
                      _0x13d7b9.high = _0x526978.high ^ ~_0x5deb3b.high & _0x1a337a.high;
                      _0x13d7b9.low = _0x526978.low ^ ~_0x5deb3b.low & _0x1a337a.low;
                    }
                  }
                  var _0x13d7b9 = _0x8843ac[0];
                  var _0x31cde2 = _0x1c621d[_0x57fa95];
                  _0x13d7b9.high ^= _0x31cde2.high;
                  _0x13d7b9.low ^= _0x31cde2.low;
                  ;
                }
              },
              _doFinalize: function () {
                var _0x4546ff = this._data;
                var _0x1b62de = _0x4546ff.words;
                var _0x31bb0f = this._nDataBytes * 8;
                var _0x48c4f6 = _0x4546ff.sigBytes * 8;
                var _0xd8d44a = this.blockSize * 32;
                _0x1b62de[_0x48c4f6 >>> 5] |= 1 << 24 - _0x48c4f6 % 32;
                _0x1b62de[(_0x31bb3f.ceil((_0x48c4f6 + 1) / _0xd8d44a) * _0xd8d44a >>> 5) - 1] |= 128;
                _0x4546ff.sigBytes = _0x1b62de.length * 4;
                this._process();
                var _0x583e72 = this._state;
                var _0x4dd7b0 = this.cfg.outputLength / 8;
                var _0x2bce4b = _0x4dd7b0 / 8;
                var _0x14edb2 = [];
                for (var _0x1102b5 = 0; _0x1102b5 < _0x2bce4b; _0x1102b5++) {
                  var _0x5e2c90 = _0x583e72[_0x1102b5];
                  var _0x4ca13b = _0x5e2c90.high;
                  var _0x243962 = _0x5e2c90.low;
                  _0x4ca13b = (_0x4ca13b << 8 | _0x4ca13b >>> 24) & 16711935 | (_0x4ca13b << 24 | _0x4ca13b >>> 8) & 4278255360;
                  _0x243962 = (_0x243962 << 8 | _0x243962 >>> 24) & 16711935 | (_0x243962 << 24 | _0x243962 >>> 8) & 4278255360;
                  _0x14edb2.push(_0x243962);
                  _0x14edb2.push(_0x4ca13b);
                }
                return new _0x78e594.init(_0x14edb2, _0x4dd7b0);
              },
              clone: function () {
                var _0x5a4fe5 = _0x1595a0.clone.call(this);
                var _0x3eb332 = _0x5a4fe5._state = this._state.slice(0);
                for (var _0x1486c6 = 0; _0x1486c6 < 25; _0x1486c6++) {
                  _0x3eb332[_0x1486c6] = _0x3eb332[_0x1486c6].clone();
                }
                return _0x5a4fe5;
              }
            });
            _0x52cf41.SHA3 = _0x1595a0._createHelper(_0xd7247b);
            _0x52cf41.HmacSHA3 = _0x1595a0._createHmacHelper(_0xd7247b);
          })(Math);
          return _0x4a5045.SHA3;
        });
      }
    });
    var _0x1fd728 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/ripemd160.js"(_0x107ff7, _0x27dd77) {
        'use strict';

        (function (_0x25d762, _0x24af71) {
          if (typeof _0x107ff7 === "object") {
            _0x27dd77.exports = _0x107ff7 = _0x24af71(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x24af71);
          } else {
            _0x24af71(_0x25d762.CryptoJS);
          }
        })(_0x107ff7, function (_0x50dce4) {
          (function (_0x58e084) {
            var _0x81fff0 = _0x50dce4;
            var _0x54f718 = _0x81fff0.lib;
            var _0x19552d = _0x54f718.WordArray;
            var _0x3efb29 = _0x54f718.Hasher;
            var _0x2e45ba = _0x81fff0.algo;
            var _0x22083f = _0x19552d.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
            var _0x34593e = _0x19552d.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
            var _0x5d1090 = _0x19552d.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
            var _0x27b25b = _0x19552d.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);
            var _0xfaff5f = _0x19552d.create([0, 1518500249, 1859775393, 2400959708, 2840853838]);
            var _0xf6fb4e = _0x19552d.create([1352829926, 1548603684, 1836072691, 2053994217, 0]);
            var _0x1069ec = _0x2e45ba.RIPEMD160 = _0x3efb29.extend({
              _doReset: function () {
                this._hash = _0x19552d.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
              },
              _doProcessBlock: function (_0x617612, _0x4c054c) {
                for (var _0x36d868 = 0; _0x36d868 < 16; _0x36d868++) {
                  var _0x5a4dd1 = _0x4c054c + _0x36d868;
                  var _0x2229a3 = _0x617612[_0x5a4dd1];
                  _0x617612[_0x5a4dd1] = (_0x2229a3 << 8 | _0x2229a3 >>> 24) & 16711935 | (_0x2229a3 << 24 | _0x2229a3 >>> 8) & 4278255360;
                }
                var _0x44e8a3 = this._hash.words;
                var _0x288b7b = _0xfaff5f.words;
                var _0x188076 = _0xf6fb4e.words;
                var _0x4a71a2 = _0x22083f.words;
                var _0x2850d9 = _0x34593e.words;
                var _0x2efdea = _0x5d1090.words;
                var _0x41428c = _0x27b25b.words;
                var _0x5411bb;
                var _0x371798;
                var _0x348c03;
                var _0x20e350;
                var _0x24761f;
                var _0x3f59d1;
                var _0x56a38b;
                var _0x35d724;
                var _0x1a856e;
                var _0x195f7c;
                _0x3f59d1 = _0x5411bb = _0x44e8a3[0];
                _0x56a38b = _0x371798 = _0x44e8a3[1];
                _0x35d724 = _0x348c03 = _0x44e8a3[2];
                _0x1a856e = _0x20e350 = _0x44e8a3[3];
                _0x195f7c = _0x24761f = _0x44e8a3[4];
                var _0xdfb79e;
                for (var _0x36d868 = 0; _0x36d868 < 80; _0x36d868 += 1) {
                  _0xdfb79e = _0x5411bb + _0x617612[_0x4c054c + _0x4a71a2[_0x36d868]] | 0;
                  if (_0x36d868 < 16) {
                    _0xdfb79e += _0x33f91d(_0x371798, _0x348c03, _0x20e350) + _0x288b7b[0];
                  } else if (_0x36d868 < 32) {
                    _0xdfb79e += _0x1610cf(_0x371798, _0x348c03, _0x20e350) + _0x288b7b[1];
                  } else if (_0x36d868 < 48) {
                    _0xdfb79e += _0x2f86d0(_0x371798, _0x348c03, _0x20e350) + _0x288b7b[2];
                  } else if (_0x36d868 < 64) {
                    _0xdfb79e += _0x486812(_0x371798, _0x348c03, _0x20e350) + _0x288b7b[3];
                  } else {
                    _0xdfb79e += _0x835e73(_0x371798, _0x348c03, _0x20e350) + _0x288b7b[4];
                  }
                  _0xdfb79e = _0xdfb79e | 0;
                  _0xdfb79e = _0x171b87(_0xdfb79e, _0x2efdea[_0x36d868]);
                  _0xdfb79e = _0xdfb79e + _0x24761f | 0;
                  _0x5411bb = _0x24761f;
                  _0x24761f = _0x20e350;
                  _0x20e350 = _0x171b87(_0x348c03, 10);
                  _0x348c03 = _0x371798;
                  _0x371798 = _0xdfb79e;
                  _0xdfb79e = _0x3f59d1 + _0x617612[_0x4c054c + _0x2850d9[_0x36d868]] | 0;
                  if (_0x36d868 < 16) {
                    _0xdfb79e += _0x835e73(_0x56a38b, _0x35d724, _0x1a856e) + _0x188076[0];
                  } else if (_0x36d868 < 32) {
                    _0xdfb79e += _0x486812(_0x56a38b, _0x35d724, _0x1a856e) + _0x188076[1];
                  } else if (_0x36d868 < 48) {
                    _0xdfb79e += _0x2f86d0(_0x56a38b, _0x35d724, _0x1a856e) + _0x188076[2];
                  } else if (_0x36d868 < 64) {
                    _0xdfb79e += _0x1610cf(_0x56a38b, _0x35d724, _0x1a856e) + _0x188076[3];
                  } else {
                    _0xdfb79e += _0x33f91d(_0x56a38b, _0x35d724, _0x1a856e) + _0x188076[4];
                  }
                  _0xdfb79e = _0xdfb79e | 0;
                  _0xdfb79e = _0x171b87(_0xdfb79e, _0x41428c[_0x36d868]);
                  _0xdfb79e = _0xdfb79e + _0x195f7c | 0;
                  _0x3f59d1 = _0x195f7c;
                  _0x195f7c = _0x1a856e;
                  _0x1a856e = _0x171b87(_0x35d724, 10);
                  _0x35d724 = _0x56a38b;
                  _0x56a38b = _0xdfb79e;
                }
                _0xdfb79e = _0x44e8a3[1] + _0x348c03 + _0x1a856e | 0;
                _0x44e8a3[1] = _0x44e8a3[2] + _0x20e350 + _0x195f7c | 0;
                _0x44e8a3[2] = _0x44e8a3[3] + _0x24761f + _0x3f59d1 | 0;
                _0x44e8a3[3] = _0x44e8a3[4] + _0x5411bb + _0x56a38b | 0;
                _0x44e8a3[4] = _0x44e8a3[0] + _0x371798 + _0x35d724 | 0;
                _0x44e8a3[0] = _0xdfb79e;
              },
              _doFinalize: function () {
                var _0x22b607 = this._data;
                var _0x58a073 = _0x22b607.words;
                var _0x3d6b49 = this._nDataBytes * 8;
                var _0x122db7 = _0x22b607.sigBytes * 8;
                _0x58a073[_0x122db7 >>> 5] |= 128 << 24 - _0x122db7 % 32;
                _0x58a073[(_0x122db7 + 64 >>> 9 << 4) + 14] = (_0x3d6b49 << 8 | _0x3d6b49 >>> 24) & 16711935 | (_0x3d6b49 << 24 | _0x3d6b49 >>> 8) & 4278255360;
                _0x22b607.sigBytes = (_0x58a073.length + 1) * 4;
                this._process();
                var _0x4e99ed = this._hash;
                var _0x527a32 = _0x4e99ed.words;
                for (var _0x1fd4dc = 0; _0x1fd4dc < 5; _0x1fd4dc++) {
                  var _0x5b8b9d = _0x527a32[_0x1fd4dc];
                  _0x527a32[_0x1fd4dc] = (_0x5b8b9d << 8 | _0x5b8b9d >>> 24) & 16711935 | (_0x5b8b9d << 24 | _0x5b8b9d >>> 8) & 4278255360;
                }
                return _0x4e99ed;
              },
              clone: function () {
                var _0x3e26f8 = _0x3efb29.clone.call(this);
                _0x3e26f8._hash = this._hash.clone();
                return _0x3e26f8;
              }
            });
            function _0x33f91d(_0x2d44fb, _0x301eda, _0x4f8d1a) {
              return _0x2d44fb ^ _0x301eda ^ _0x4f8d1a;
            }
            function _0x1610cf(_0xdbac40, _0x2294fb, _0xee8135) {
              return _0xdbac40 & _0x2294fb | ~_0xdbac40 & _0xee8135;
            }
            function _0x2f86d0(_0x212d98, _0x4b288, _0x1ea57b) {
              return (_0x212d98 | ~_0x4b288) ^ _0x1ea57b;
            }
            function _0x486812(_0x2c5668, _0x3f7759, _0x1a9838) {
              return _0x2c5668 & _0x1a9838 | _0x3f7759 & ~_0x1a9838;
            }
            function _0x835e73(_0x1982a4, _0x474d1c, _0x3f8d0d) {
              return _0x1982a4 ^ (_0x474d1c | ~_0x3f8d0d);
            }
            function _0x171b87(_0x32fcb0, _0x447565) {
              return _0x32fcb0 << _0x447565 | _0x32fcb0 >>> 32 - _0x447565;
            }
            _0x81fff0.RIPEMD160 = _0x3efb29._createHelper(_0x1069ec);
            _0x81fff0.HmacRIPEMD160 = _0x3efb29._createHmacHelper(_0x1069ec);
          })(Math);
          return _0x50dce4.RIPEMD160;
        });
      }
    });
    var _0x5d9d4e = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/hmac.js"(_0x6093ad, _0x313c1d) {
        'use strict';

        (function (_0x34e4d9, _0x58d1cb) {
          if (typeof _0x6093ad === "object") {
            _0x313c1d.exports = _0x6093ad = _0x58d1cb(_0x3eabc7());
          } else if (typeof define === "function" && define.amd) {
            define(["./core"], _0x58d1cb);
          } else {
            _0x58d1cb(_0x34e4d9.CryptoJS);
          }
        })(_0x6093ad, function (_0x1a5fd2) {
          (function () {
            var _0x4d33f2 = _0x1a5fd2;
            var _0x17d4cb = _0x4d33f2.lib;
            var _0x4ce2e5 = _0x17d4cb.Base;
            var _0x1f7ba0 = _0x4d33f2.enc;
            var _0x33cdd1 = _0x1f7ba0.Utf8;
            var _0x53ece5 = _0x4d33f2.algo;
            var _0x10850f = _0x53ece5.HMAC = _0x4ce2e5.extend({
              init: function (_0x5b0499, _0x4b8ec1) {
                _0x5b0499 = this._hasher = new _0x5b0499.init();
                if (typeof _0x4b8ec1 == "string") {
                  _0x4b8ec1 = _0x33cdd1.parse(_0x4b8ec1);
                }
                var _0x225753 = _0x5b0499.blockSize;
                var _0x50f102 = _0x225753 * 4;
                if (_0x4b8ec1.sigBytes > _0x50f102) {
                  _0x4b8ec1 = _0x5b0499.finalize(_0x4b8ec1);
                }
                _0x4b8ec1.clamp();
                var _0x5881dd = this._oKey = _0x4b8ec1.clone();
                var _0x3bff4b = this._iKey = _0x4b8ec1.clone();
                var _0x17489c = _0x5881dd.words;
                var _0x5da885 = _0x3bff4b.words;
                for (var _0x4c0b5b = 0; _0x4c0b5b < _0x225753; _0x4c0b5b++) {
                  _0x17489c[_0x4c0b5b] ^= 1549556828;
                  _0x5da885[_0x4c0b5b] ^= 909522486;
                }
                _0x5881dd.sigBytes = _0x3bff4b.sigBytes = _0x50f102;
                this.reset();
              },
              reset: function () {
                var _0x363ad1 = this._hasher;
                _0x363ad1.reset();
                _0x363ad1.update(this._iKey);
              },
              update: function (_0x3ff306) {
                this._hasher.update(_0x3ff306);
                return this;
              },
              finalize: function (_0x56b0b0) {
                var _0x145bc = this._hasher;
                var _0x37f0f3 = _0x145bc.finalize(_0x56b0b0);
                _0x145bc.reset();
                var _0x2a0042 = _0x145bc.finalize(this._oKey.clone().concat(_0x37f0f3));
                return _0x2a0042;
              }
            });
          })();
        });
      }
    });
    var _0x3a8801 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pbkdf2.js"(_0x3593d7, _0x13abb3) {
        'use strict';

        (function (_0xd80b6c, _0x199899, _0x19eb68) {
          if (typeof _0x3593d7 === "object") {
            _0x13abb3.exports = _0x3593d7 = _0x199899(_0x3eabc7(), _0x51c993(), _0x5d9d4e());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./sha1", "./hmac"], _0x199899);
          } else {
            _0x199899(_0xd80b6c.CryptoJS);
          }
        })(_0x3593d7, function (_0x3a7671) {
          (function () {
            var _0x4f3795 = _0x3a7671;
            var _0x5b9e1d = _0x4f3795.lib;
            var _0x141eee = _0x5b9e1d.Base;
            var _0x2bda4d = _0x5b9e1d.WordArray;
            var _0xd0e973 = _0x4f3795.algo;
            var _0x1eaa1a = _0xd0e973.SHA1;
            var _0x57c0e0 = _0xd0e973.HMAC;
            var _0x2cba12 = {
              keySize: 4,
              hasher: _0x1eaa1a,
              iterations: 1
            };
            var _0x41b592 = _0xd0e973.PBKDF2 = _0x141eee.extend({
              cfg: _0x141eee.extend(_0x2cba12),
              init: function (_0x23b23d) {
                this.cfg = this.cfg.extend(_0x23b23d);
              },
              compute: function (_0x49d011, _0x4f1da8) {
                var _0xed0b00 = this.cfg;
                var _0x5917f1 = _0x57c0e0.create(_0xed0b00.hasher, _0x49d011);
                var _0x30f4b9 = _0x2bda4d.create();
                var _0x4efe86 = _0x2bda4d.create([1]);
                var _0x3ef30c = _0x30f4b9.words;
                var _0x137b2c = _0x4efe86.words;
                var _0x583702 = _0xed0b00.keySize;
                var _0x55ad9c = _0xed0b00.iterations;
                while (_0x3ef30c.length < _0x583702) {
                  var _0x3c2f86 = _0x5917f1.update(_0x4f1da8).finalize(_0x4efe86);
                  _0x5917f1.reset();
                  var _0x381b5d = _0x3c2f86.words;
                  var _0x29fd1a = _0x381b5d.length;
                  var _0x14c65d = _0x3c2f86;
                  for (var _0x103940 = 1; _0x103940 < _0x55ad9c; _0x103940++) {
                    _0x14c65d = _0x5917f1.finalize(_0x14c65d);
                    _0x5917f1.reset();
                    var _0x5aaa39 = _0x14c65d.words;
                    for (var _0x432293 = 0; _0x432293 < _0x29fd1a; _0x432293++) {
                      _0x381b5d[_0x432293] ^= _0x5aaa39[_0x432293];
                    }
                  }
                  _0x30f4b9.concat(_0x3c2f86);
                  _0x137b2c[0]++;
                }
                _0x30f4b9.sigBytes = _0x583702 * 4;
                return _0x30f4b9;
              }
            });
            _0x4f3795.PBKDF2 = function (_0xc84480, _0x4eda73, _0x3bfae7) {
              return _0x41b592.create(_0x3bfae7).compute(_0xc84480, _0x4eda73);
            };
          })();
          return _0x3a7671.PBKDF2;
        });
      }
    });
    var _0x53db92 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/evpkdf.js"(_0x148d9c, _0x47bc32) {
        'use strict';

        (function (_0x112f5e, _0x137f60, _0x3904ac) {
          if (typeof _0x148d9c === "object") {
            _0x47bc32.exports = _0x148d9c = _0x137f60(_0x3eabc7(), _0x51c993(), _0x5d9d4e());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./sha1", "./hmac"], _0x137f60);
          } else {
            _0x137f60(_0x112f5e.CryptoJS);
          }
        })(_0x148d9c, function (_0x2af990) {
          (function () {
            var _0x233978 = _0x2af990;
            var _0x4ba434 = _0x233978.lib;
            var _0x3216b7 = _0x4ba434.Base;
            var _0x5213b7 = _0x4ba434.WordArray;
            var _0x1f1e02 = _0x233978.algo;
            var _0x3038a4 = _0x1f1e02.MD5;
            var _0x1e5f1a = {
              keySize: 4,
              hasher: _0x3038a4,
              iterations: 1
            };
            var _0x55d26b = _0x1f1e02.EvpKDF = _0x3216b7.extend({
              cfg: _0x3216b7.extend(_0x1e5f1a),
              init: function (_0x298873) {
                this.cfg = this.cfg.extend(_0x298873);
              },
              compute: function (_0x1d35d4, _0x21d763) {
                var _0x5e2f23 = this.cfg;
                var _0x16bd7e = _0x5e2f23.hasher.create();
                var _0xa0ecc8 = _0x5213b7.create();
                var _0x53cd6c = _0xa0ecc8.words;
                var _0x123c38 = _0x5e2f23.keySize;
                var _0x2ae6f0 = _0x5e2f23.iterations;
                while (_0x53cd6c.length < _0x123c38) {
                  if (_0x2128d0) {
                    _0x16bd7e.update(_0x2128d0);
                  }
                  var _0x2128d0 = _0x16bd7e.update(_0x1d35d4).finalize(_0x21d763);
                  _0x16bd7e.reset();
                  for (var _0x36011f = 1; _0x36011f < _0x2ae6f0; _0x36011f++) {
                    _0x2128d0 = _0x16bd7e.finalize(_0x2128d0);
                    _0x16bd7e.reset();
                  }
                  _0xa0ecc8.concat(_0x2128d0);
                }
                _0xa0ecc8.sigBytes = _0x123c38 * 4;
                return _0xa0ecc8;
              }
            });
            _0x233978.EvpKDF = function (_0xb4ae99, _0x1b2353, _0xca378f) {
              return _0x55d26b.create(_0xca378f).compute(_0xb4ae99, _0x1b2353);
            };
          })();
          return _0x2af990.EvpKDF;
        });
      }
    });
    var _0x3e3735 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/cipher-core.js"(_0x30620d, _0x47d210) {
        'use strict';

        (function (_0x50eb1e, _0x361eb1, _0x5635e4) {
          if (typeof _0x30620d === "object") {
            _0x47d210.exports = _0x30620d = _0x361eb1(_0x3eabc7(), _0x53db92());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./evpkdf"], _0x361eb1);
          } else {
            _0x361eb1(_0x50eb1e.CryptoJS);
          }
        })(_0x30620d, function (_0x104a8d) {
          if (!_0x104a8d.lib.Cipher) {
            (function (_0x833f9e) {
              var _0x42dcf1 = _0x104a8d;
              var _0x29a390 = _0x42dcf1.lib;
              var _0x32cda6 = _0x29a390.Base;
              var _0x1c15c3 = _0x29a390.WordArray;
              var _0x44e4b6 = _0x29a390.BufferedBlockAlgorithm;
              var _0x3a477e = _0x42dcf1.enc;
              var _0x3b1965 = _0x3a477e.Utf8;
              var _0x13d57c = _0x3a477e.Base64;
              var _0x24e3eb = _0x42dcf1.algo;
              var _0x4a1de9 = _0x24e3eb.EvpKDF;
              var _0x3ebd44 = _0x29a390.Cipher = _0x44e4b6.extend({
                cfg: _0x32cda6.extend(),
                createEncryptor: function (_0x3bbea8, _0x668524) {
                  return this.create(this._ENC_XFORM_MODE, _0x3bbea8, _0x668524);
                },
                createDecryptor: function (_0x4ebc65, _0x57da8c) {
                  return this.create(this._DEC_XFORM_MODE, _0x4ebc65, _0x57da8c);
                },
                init: function (_0x5e73fe, _0x5194a3, _0x5f4ddb) {
                  this.cfg = this.cfg.extend(_0x5f4ddb);
                  this._xformMode = _0x5e73fe;
                  this._key = _0x5194a3;
                  this.reset();
                },
                reset: function () {
                  _0x44e4b6.reset.call(this);
                  this._doReset();
                },
                process: function (_0x415d8e) {
                  this._append(_0x415d8e);
                  return this._process();
                },
                finalize: function (_0x3cad16) {
                  if (_0x3cad16) {
                    this._append(_0x3cad16);
                  }
                  var _0x4154ac = this._doFinalize();
                  return _0x4154ac;
                },
                keySize: 4,
                ivSize: 4,
                _ENC_XFORM_MODE: 1,
                _DEC_XFORM_MODE: 2,
                _createHelper: function () {
                  function _0x41d6fc(_0x2435a1) {
                    if (typeof _0x2435a1 == "string") {
                      return _0x169377;
                    } else {
                      return _0xa22d7;
                    }
                  }
                  return function (_0x5ad918) {
                    return {
                      encrypt: function (_0x4ee4ba, _0x147ffa, _0x3f26d8) {
                        return _0x41d6fc(_0x147ffa).encrypt(_0x5ad918, _0x4ee4ba, _0x147ffa, _0x3f26d8);
                      },
                      decrypt: function (_0x1fd273, _0xfddc8e, _0x58e748) {
                        return _0x41d6fc(_0xfddc8e).decrypt(_0x5ad918, _0x1fd273, _0xfddc8e, _0x58e748);
                      }
                    };
                  };
                }()
              });
              var _0x3c84bc = _0x29a390.StreamCipher = _0x3ebd44.extend({
                _doFinalize: function () {
                  var _0x102000 = this._process(true);
                  return _0x102000;
                },
                blockSize: 1
              });
              var _0x39b9fb = _0x42dcf1.mode = {};
              var _0x2fa3b1 = _0x29a390.BlockCipherMode = _0x32cda6.extend({
                createEncryptor: function (_0x5eb1d4, _0x520b61) {
                  return this.Encryptor.create(_0x5eb1d4, _0x520b61);
                },
                createDecryptor: function (_0x58c353, _0x57dc57) {
                  return this.Decryptor.create(_0x58c353, _0x57dc57);
                },
                init: function (_0x55e3be, _0x4fae6c) {
                  this._cipher = _0x55e3be;
                  this._iv = _0x4fae6c;
                }
              });
              var _0x3776ab = _0x39b9fb.CBC = function () {
                var _0x8965ca = _0x2fa3b1.extend();
                _0x8965ca.Encryptor = _0x8965ca.extend({
                  processBlock: function (_0x4879f4, _0x45c914) {
                    var _0x274456 = this._cipher;
                    var _0x12c7ef = _0x274456.blockSize;
                    _0x35d2c9.call(this, _0x4879f4, _0x45c914, _0x12c7ef);
                    _0x274456.encryptBlock(_0x4879f4, _0x45c914);
                    this._prevBlock = _0x4879f4.slice(_0x45c914, _0x45c914 + _0x12c7ef);
                  }
                });
                _0x8965ca.Decryptor = _0x8965ca.extend({
                  processBlock: function (_0x24b4b6, _0x33b222) {
                    var _0x26b84c = this._cipher;
                    var _0x38e9bb = _0x26b84c.blockSize;
                    var _0x49129e = _0x24b4b6.slice(_0x33b222, _0x33b222 + _0x38e9bb);
                    _0x26b84c.decryptBlock(_0x24b4b6, _0x33b222);
                    _0x35d2c9.call(this, _0x24b4b6, _0x33b222, _0x38e9bb);
                    this._prevBlock = _0x49129e;
                  }
                });
                function _0x35d2c9(_0x10ce40, _0x346071, _0x11e210) {
                  var _0x320979 = this._iv;
                  if (_0x320979) {
                    var _0x4596ce = _0x320979;
                    this._iv = _0x833f9e;
                  } else {
                    var _0x4596ce = this._prevBlock;
                  }
                  for (var _0x1b81ff = 0; _0x1b81ff < _0x11e210; _0x1b81ff++) {
                    _0x10ce40[_0x346071 + _0x1b81ff] ^= _0x4596ce[_0x1b81ff];
                  }
                }
                return _0x8965ca;
              }();
              var _0x2b9ac0 = _0x42dcf1.pad = {};
              var _0x57d461 = _0x2b9ac0.Pkcs7 = {
                pad: function (_0x383168, _0x836833) {
                  var _0x12e8c3 = _0x836833 * 4;
                  var _0x3d05b0 = _0x12e8c3 - _0x383168.sigBytes % _0x12e8c3;
                  var _0x13e35b = _0x3d05b0 << 24 | _0x3d05b0 << 16 | _0x3d05b0 << 8 | _0x3d05b0;
                  var _0x2a67e4 = [];
                  for (var _0x46a175 = 0; _0x46a175 < _0x3d05b0; _0x46a175 += 4) {
                    _0x2a67e4.push(_0x13e35b);
                  }
                  var _0x1f2557 = _0x1c15c3.create(_0x2a67e4, _0x3d05b0);
                  _0x383168.concat(_0x1f2557);
                },
                unpad: function (_0x3824b8) {
                  var _0x4ce6c5 = _0x3824b8.words[_0x3824b8.sigBytes - 1 >>> 2] & 255;
                  _0x3824b8.sigBytes -= _0x4ce6c5;
                }
              };
              var _0x4a6282 = {
                mode: _0x3776ab,
                padding: _0x57d461
              };
              var _0x2c8f24 = _0x29a390.BlockCipher = _0x3ebd44.extend({
                cfg: _0x3ebd44.cfg.extend(_0x4a6282),
                reset: function () {
                  _0x3ebd44.reset.call(this);
                  var _0xed0c70 = this.cfg;
                  var _0x52d961 = _0xed0c70.iv;
                  var _0x404ede = _0xed0c70.mode;
                  if (this._xformMode == this._ENC_XFORM_MODE) {
                    var _0x4a16ef = _0x404ede.createEncryptor;
                  } else {
                    var _0x4a16ef = _0x404ede.createDecryptor;
                    this._minBufferSize = 1;
                  }
                  if (this._mode && this._mode.__creator == _0x4a16ef) {
                    this._mode.init(this, _0x52d961 && _0x52d961.words);
                  } else {
                    this._mode = _0x4a16ef.call(_0x404ede, this, _0x52d961 && _0x52d961.words);
                    this._mode.__creator = _0x4a16ef;
                  }
                },
                _doProcessBlock: function (_0x2334e1, _0x3be682) {
                  this._mode.processBlock(_0x2334e1, _0x3be682);
                },
                _doFinalize: function () {
                  var _0xe89e0f = this.cfg.padding;
                  if (this._xformMode == this._ENC_XFORM_MODE) {
                    _0xe89e0f.pad(this._data, this.blockSize);
                    var _0x4cf0bc = this._process(true);
                  } else {
                    var _0x4cf0bc = this._process(true);
                    _0xe89e0f.unpad(_0x4cf0bc);
                  }
                  return _0x4cf0bc;
                },
                blockSize: 4
              });
              var _0x25ba12 = _0x29a390.CipherParams = _0x32cda6.extend({
                init: function (_0x1fa852) {
                  this.mixIn(_0x1fa852);
                },
                toString: function (_0x4d3ebe) {
                  return (_0x4d3ebe || this.formatter).stringify(this);
                }
              });
              var _0x19a196 = _0x42dcf1.format = {};
              var _0x58a6c2 = _0x19a196.OpenSSL = {
                stringify: function (_0x3ae3e9) {
                  var _0x2acf13 = _0x3ae3e9.ciphertext;
                  var _0x1cb9c7 = _0x3ae3e9.salt;
                  if (_0x1cb9c7) {
                    var _0x388bba = _0x1c15c3.create([1398893684, 1701076831]).concat(_0x1cb9c7).concat(_0x2acf13);
                  } else {
                    var _0x388bba = _0x2acf13;
                  }
                  return _0x388bba.toString(_0x13d57c);
                },
                parse: function (_0x20b9ab) {
                  var _0x2cd65f = _0x13d57c.parse(_0x20b9ab);
                  var _0x573ead = _0x2cd65f.words;
                  if (_0x573ead[0] == 1398893684 && _0x573ead[1] == 1701076831) {
                    var _0x516130 = _0x1c15c3.create(_0x573ead.slice(2, 4));
                    _0x573ead.splice(0, 4);
                    _0x2cd65f.sigBytes -= 16;
                  }
                  var _0x983a9 = {
                    ciphertext: _0x2cd65f,
                    salt: _0x516130
                  };
                  return _0x25ba12.create(_0x983a9);
                }
              };
              var _0x5ea448 = {
                format: _0x58a6c2
              };
              var _0xa22d7 = _0x29a390.SerializableCipher = _0x32cda6.extend({
                cfg: _0x32cda6.extend(_0x5ea448),
                encrypt: function (_0x42055c, _0x4de739, _0x55c2b8, _0x1c6d76) {
                  _0x1c6d76 = this.cfg.extend(_0x1c6d76);
                  var _0x287509 = _0x42055c.createEncryptor(_0x55c2b8, _0x1c6d76);
                  var _0x50678c = _0x287509.finalize(_0x4de739);
                  var _0x3f1c4f = _0x287509.cfg;
                  var _0x58cb49 = {
                    ciphertext: _0x50678c,
                    key: _0x55c2b8,
                    iv: _0x3f1c4f.iv,
                    algorithm: _0x42055c,
                    mode: _0x3f1c4f.mode,
                    padding: _0x3f1c4f.padding,
                    blockSize: _0x42055c.blockSize,
                    formatter: _0x1c6d76.format
                  };
                  return _0x25ba12.create(_0x58cb49);
                },
                decrypt: function (_0x30064d, _0x45c5a4, _0x10c41c, _0x1a493d) {
                  _0x1a493d = this.cfg.extend(_0x1a493d);
                  _0x45c5a4 = this._parse(_0x45c5a4, _0x1a493d.format);
                  var _0x454bf0 = _0x30064d.createDecryptor(_0x10c41c, _0x1a493d).finalize(_0x45c5a4.ciphertext);
                  return _0x454bf0;
                },
                _parse: function (_0x49644c, _0xde71ba) {
                  if (typeof _0x49644c == "string") {
                    return _0xde71ba.parse(_0x49644c, this);
                  } else {
                    return _0x49644c;
                  }
                }
              });
              var _0x44467c = _0x42dcf1.kdf = {};
              var _0x5daee4 = _0x44467c.OpenSSL = {
                execute: function (_0xbebf05, _0x324069, _0x416a09, _0x381515) {
                  if (!_0x381515) {
                    _0x381515 = _0x1c15c3.random(8);
                  }
                  var _0x4d9f84 = {
                    keySize: _0x324069 + _0x416a09
                  };
                  var _0x464423 = _0x4a1de9.create(_0x4d9f84).compute(_0xbebf05, _0x381515);
                  var _0x48253d = _0x1c15c3.create(_0x464423.words.slice(_0x324069), _0x416a09 * 4);
                  _0x464423.sigBytes = _0x324069 * 4;
                  var _0x53e265 = {
                    key: _0x464423,
                    iv: _0x48253d,
                    salt: _0x381515
                  };
                  return _0x25ba12.create(_0x53e265);
                }
              };
              var _0x39f01c = {
                kdf: _0x5daee4
              };
              var _0x169377 = _0x29a390.PasswordBasedCipher = _0xa22d7.extend({
                cfg: _0xa22d7.cfg.extend(_0x39f01c),
                encrypt: function (_0x3251df, _0x24faaf, _0x35ffcf, _0x235b89) {
                  _0x235b89 = this.cfg.extend(_0x235b89);
                  var _0x1d6b88 = _0x235b89.kdf.execute(_0x35ffcf, _0x3251df.keySize, _0x3251df.ivSize);
                  _0x235b89.iv = _0x1d6b88.iv;
                  var _0x3ff357 = _0xa22d7.encrypt.call(this, _0x3251df, _0x24faaf, _0x1d6b88.key, _0x235b89);
                  _0x3ff357.mixIn(_0x1d6b88);
                  return _0x3ff357;
                },
                decrypt: function (_0x563bee, _0x2a82cb, _0x5f3dc7, _0xd1c31f) {
                  _0xd1c31f = this.cfg.extend(_0xd1c31f);
                  _0x2a82cb = this._parse(_0x2a82cb, _0xd1c31f.format);
                  var _0x328462 = _0xd1c31f.kdf.execute(_0x5f3dc7, _0x563bee.keySize, _0x563bee.ivSize, _0x2a82cb.salt);
                  _0xd1c31f.iv = _0x328462.iv;
                  var _0x36a4f2 = _0xa22d7.decrypt.call(this, _0x563bee, _0x2a82cb, _0x328462.key, _0xd1c31f);
                  return _0x36a4f2;
                }
              });
            })();
          }
        });
      }
    });
    var _0x2ae4c2 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-cfb.js"(_0x14fcf6, _0x1577dc) {
        'use strict';

        (function (_0x286a51, _0x5ba7ff, _0x53ce0d) {
          if (typeof _0x14fcf6 === "object") {
            _0x1577dc.exports = _0x14fcf6 = _0x5ba7ff(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x5ba7ff);
          } else {
            _0x5ba7ff(_0x286a51.CryptoJS);
          }
        })(_0x14fcf6, function (_0x180644) {
          _0x180644.mode.CFB = function () {
            var _0x3f34dd = _0x180644.lib.BlockCipherMode.extend();
            _0x3f34dd.Encryptor = _0x3f34dd.extend({
              processBlock: function (_0x59fd67, _0x29f56c) {
                var _0x4c1fb4 = this._cipher;
                var _0x20549c = _0x4c1fb4.blockSize;
                _0x493575.call(this, _0x59fd67, _0x29f56c, _0x20549c, _0x4c1fb4);
                this._prevBlock = _0x59fd67.slice(_0x29f56c, _0x29f56c + _0x20549c);
              }
            });
            _0x3f34dd.Decryptor = _0x3f34dd.extend({
              processBlock: function (_0x27d669, _0x4845a4) {
                var _0x348f6c = this._cipher;
                var _0x5c0fee = _0x348f6c.blockSize;
                var _0x3cc286 = _0x27d669.slice(_0x4845a4, _0x4845a4 + _0x5c0fee);
                _0x493575.call(this, _0x27d669, _0x4845a4, _0x5c0fee, _0x348f6c);
                this._prevBlock = _0x3cc286;
              }
            });
            function _0x493575(_0x244cda, _0x90f2d, _0x4aaef2, _0x30431b) {
              var _0x310610 = this._iv;
              if (_0x310610) {
                var _0x2d0904 = _0x310610.slice(0);
                this._iv = undefined;
              } else {
                var _0x2d0904 = this._prevBlock;
              }
              _0x30431b.encryptBlock(_0x2d0904, 0);
              for (var _0x50fd0e = 0; _0x50fd0e < _0x4aaef2; _0x50fd0e++) {
                _0x244cda[_0x90f2d + _0x50fd0e] ^= _0x2d0904[_0x50fd0e];
              }
            }
            return _0x3f34dd;
          }();
          return _0x180644.mode.CFB;
        });
      }
    });
    var _0x495738 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ctr.js"(_0x342c10, _0x5b54b7) {
        'use strict';

        (function (_0x5f56ed, _0x46f14b, _0x49660b) {
          if (typeof _0x342c10 === "object") {
            _0x5b54b7.exports = _0x342c10 = _0x46f14b(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x46f14b);
          } else {
            _0x46f14b(_0x5f56ed.CryptoJS);
          }
        })(_0x342c10, function (_0x2f44ad) {
          _0x2f44ad.mode.CTR = function () {
            var _0x28a69e = _0x2f44ad.lib.BlockCipherMode.extend();
            var _0x277e05 = _0x28a69e.Encryptor = _0x28a69e.extend({
              processBlock: function (_0x36d9eb, _0x1982e9) {
                var _0x100474 = this._cipher;
                var _0x258a2f = _0x100474.blockSize;
                var _0x3dc792 = this._iv;
                var _0x5a1a96 = this._counter;
                if (_0x3dc792) {
                  _0x5a1a96 = this._counter = _0x3dc792.slice(0);
                  this._iv = undefined;
                }
                var _0x367e87 = _0x5a1a96.slice(0);
                _0x100474.encryptBlock(_0x367e87, 0);
                _0x5a1a96[_0x258a2f - 1] = _0x5a1a96[_0x258a2f - 1] + 1 | 0;
                for (var _0xb53ada = 0; _0xb53ada < _0x258a2f; _0xb53ada++) {
                  _0x36d9eb[_0x1982e9 + _0xb53ada] ^= _0x367e87[_0xb53ada];
                }
              }
            });
            _0x28a69e.Decryptor = _0x277e05;
            return _0x28a69e;
          }();
          return _0x2f44ad.mode.CTR;
        });
      }
    });
    var _0x5c3c77 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ctr-gladman.js"(_0x46cae0, _0x50a4b9) {
        'use strict';

        (function (_0x3698e6, _0x3bc9f5, _0xdb6d34) {
          if (typeof _0x46cae0 === "object") {
            _0x50a4b9.exports = _0x46cae0 = _0x3bc9f5(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x3bc9f5);
          } else {
            _0x3bc9f5(_0x3698e6.CryptoJS);
          }
        })(_0x46cae0, function (_0x50fdf7) {
          _0x50fdf7.mode.CTRGladman = function () {
            var _0x1fc96e = _0x50fdf7.lib.BlockCipherMode.extend();
            function _0x5018a8(_0x2d0f09) {
              if ((_0x2d0f09 >> 24 & 255) === 255) {
                var _0x23c037 = _0x2d0f09 >> 16 & 255;
                var _0x46730a = _0x2d0f09 >> 8 & 255;
                var _0x3936e9 = _0x2d0f09 & 255;
                if (_0x23c037 === 255) {
                  _0x23c037 = 0;
                  if (_0x46730a === 255) {
                    _0x46730a = 0;
                    if (_0x3936e9 === 255) {
                      _0x3936e9 = 0;
                    } else {
                      ++_0x3936e9;
                    }
                  } else {
                    ++_0x46730a;
                  }
                } else {
                  ++_0x23c037;
                }
                _0x2d0f09 = 0;
                _0x2d0f09 += _0x23c037 << 16;
                _0x2d0f09 += _0x46730a << 8;
                _0x2d0f09 += _0x3936e9;
              } else {
                _0x2d0f09 += 1 << 24;
              }
              return _0x2d0f09;
            }
            function _0x1eeee1(_0x294ede) {
              if ((_0x294ede[0] = _0x5018a8(_0x294ede[0])) === 0) {
                _0x294ede[1] = _0x5018a8(_0x294ede[1]);
              }
              return _0x294ede;
            }
            var _0x2cf7e9 = _0x1fc96e.Encryptor = _0x1fc96e.extend({
              processBlock: function (_0x373e05, _0x5554c2) {
                var _0x450dcf = this._cipher;
                var _0x2e344c = _0x450dcf.blockSize;
                var _0x50298 = this._iv;
                var _0x12aad2 = this._counter;
                if (_0x50298) {
                  _0x12aad2 = this._counter = _0x50298.slice(0);
                  this._iv = undefined;
                }
                _0x1eeee1(_0x12aad2);
                var _0x5d0c66 = _0x12aad2.slice(0);
                _0x450dcf.encryptBlock(_0x5d0c66, 0);
                for (var _0x4b8cb7 = 0; _0x4b8cb7 < _0x2e344c; _0x4b8cb7++) {
                  _0x373e05[_0x5554c2 + _0x4b8cb7] ^= _0x5d0c66[_0x4b8cb7];
                }
              }
            });
            _0x1fc96e.Decryptor = _0x2cf7e9;
            return _0x1fc96e;
          }();
          return _0x50fdf7.mode.CTRGladman;
        });
      }
    });
    var _0x1a0215 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ofb.js"(_0x285e35, _0x3d56ac) {
        'use strict';

        (function (_0x1921fe, _0x779f93, _0x4fedf8) {
          if (typeof _0x285e35 === "object") {
            _0x3d56ac.exports = _0x285e35 = _0x779f93(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x779f93);
          } else {
            _0x779f93(_0x1921fe.CryptoJS);
          }
        })(_0x285e35, function (_0x40c607) {
          _0x40c607.mode.OFB = function () {
            var _0x2478b = _0x40c607.lib.BlockCipherMode.extend();
            var _0x4ac958 = _0x2478b.Encryptor = _0x2478b.extend({
              processBlock: function (_0x2de43d, _0x2258a1) {
                var _0x5a8a61 = this._cipher;
                var _0x49625a = _0x5a8a61.blockSize;
                var _0x3f79d9 = this._iv;
                var _0x497d82 = this._keystream;
                if (_0x3f79d9) {
                  _0x497d82 = this._keystream = _0x3f79d9.slice(0);
                  this._iv = undefined;
                }
                _0x5a8a61.encryptBlock(_0x497d82, 0);
                for (var _0x276b23 = 0; _0x276b23 < _0x49625a; _0x276b23++) {
                  _0x2de43d[_0x2258a1 + _0x276b23] ^= _0x497d82[_0x276b23];
                }
              }
            });
            _0x2478b.Decryptor = _0x4ac958;
            return _0x2478b;
          }();
          return _0x40c607.mode.OFB;
        });
      }
    });
    var _0x30b8e7 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/mode-ecb.js"(_0x4d71fd, _0x528f0b) {
        'use strict';

        (function (_0xd0e26f, _0x44f949, _0x53915e) {
          if (typeof _0x4d71fd === "object") {
            _0x528f0b.exports = _0x4d71fd = _0x44f949(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x44f949);
          } else {
            _0x44f949(_0xd0e26f.CryptoJS);
          }
        })(_0x4d71fd, function (_0xba564e) {
          _0xba564e.mode.ECB = function () {
            var _0x35fe40 = _0xba564e.lib.BlockCipherMode.extend();
            _0x35fe40.Encryptor = _0x35fe40.extend({
              processBlock: function (_0x5cb5c8, _0x3e9a5f) {
                this._cipher.encryptBlock(_0x5cb5c8, _0x3e9a5f);
              }
            });
            _0x35fe40.Decryptor = _0x35fe40.extend({
              processBlock: function (_0x3d6209, _0x36cfcb) {
                this._cipher.decryptBlock(_0x3d6209, _0x36cfcb);
              }
            });
            return _0x35fe40;
          }();
          return _0xba564e.mode.ECB;
        });
      }
    });
    var _0x294ba4 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-ansix923.js"(_0x463547, _0x1a0b2d) {
        'use strict';

        (function (_0x28fab6, _0x30f63e, _0x10936d) {
          if (typeof _0x463547 === "object") {
            _0x1a0b2d.exports = _0x463547 = _0x30f63e(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x30f63e);
          } else {
            _0x30f63e(_0x28fab6.CryptoJS);
          }
        })(_0x463547, function (_0xf781df) {
          _0xf781df.pad.AnsiX923 = {
            pad: function (_0x5a0dc7, _0xcc88dd) {
              var _0x559eb7 = _0x5a0dc7.sigBytes;
              var _0x4d4fd6 = _0xcc88dd * 4;
              var _0x15d8af = _0x4d4fd6 - _0x559eb7 % _0x4d4fd6;
              var _0x514924 = _0x559eb7 + _0x15d8af - 1;
              _0x5a0dc7.clamp();
              _0x5a0dc7.words[_0x514924 >>> 2] |= _0x15d8af << 24 - _0x514924 % 4 * 8;
              _0x5a0dc7.sigBytes += _0x15d8af;
            },
            unpad: function (_0x4182fc) {
              var _0x512303 = _0x4182fc.words[_0x4182fc.sigBytes - 1 >>> 2] & 255;
              _0x4182fc.sigBytes -= _0x512303;
            }
          };
          return _0xf781df.pad.Ansix923;
        });
      }
    });
    var _0x2077ba = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-iso10126.js"(_0x551285, _0x31ec75) {
        'use strict';

        (function (_0x57e45b, _0x149790, _0xee1639) {
          if (typeof _0x551285 === "object") {
            _0x31ec75.exports = _0x551285 = _0x149790(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x149790);
          } else {
            _0x149790(_0x57e45b.CryptoJS);
          }
        })(_0x551285, function (_0x5deb37) {
          _0x5deb37.pad.Iso10126 = {
            pad: function (_0x3682c7, _0x34859a) {
              var _0x2a1030 = _0x34859a * 4;
              var _0x41b31f = _0x2a1030 - _0x3682c7.sigBytes % _0x2a1030;
              _0x3682c7.concat(_0x5deb37.lib.WordArray.random(_0x41b31f - 1)).concat(_0x5deb37.lib.WordArray.create([_0x41b31f << 24], 1));
            },
            unpad: function (_0x29d2ac) {
              var _0x2e199c = _0x29d2ac.words[_0x29d2ac.sigBytes - 1 >>> 2] & 255;
              _0x29d2ac.sigBytes -= _0x2e199c;
            }
          };
          return _0x5deb37.pad.Iso10126;
        });
      }
    });
    var _0x4e4625 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-iso97971.js"(_0x28840a, _0x3ee353) {
        'use strict';

        (function (_0x440dab, _0x4d8d4f, _0x4a3e6a) {
          if (typeof _0x28840a === "object") {
            _0x3ee353.exports = _0x28840a = _0x4d8d4f(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x4d8d4f);
          } else {
            _0x4d8d4f(_0x440dab.CryptoJS);
          }
        })(_0x28840a, function (_0x253744) {
          _0x253744.pad.Iso97971 = {
            pad: function (_0x493b47, _0xf4b0f7) {
              _0x493b47.concat(_0x253744.lib.WordArray.create([2147483648], 1));
              _0x253744.pad.ZeroPadding.pad(_0x493b47, _0xf4b0f7);
            },
            unpad: function (_0x264fa4) {
              _0x253744.pad.ZeroPadding.unpad(_0x264fa4);
              _0x264fa4.sigBytes--;
            }
          };
          return _0x253744.pad.Iso97971;
        });
      }
    });
    var _0x2a4df3 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-zeropadding.js"(_0x582360, _0x24eba7) {
        'use strict';

        (function (_0x3c25f4, _0x4df6b7, _0x555d5f) {
          if (typeof _0x582360 === "object") {
            _0x24eba7.exports = _0x582360 = _0x4df6b7(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x4df6b7);
          } else {
            _0x4df6b7(_0x3c25f4.CryptoJS);
          }
        })(_0x582360, function (_0x3dc441) {
          _0x3dc441.pad.ZeroPadding = {
            pad: function (_0x1fd093, _0x28e8cd) {
              var _0x57de38 = _0x28e8cd * 4;
              _0x1fd093.clamp();
              _0x1fd093.sigBytes += _0x57de38 - (_0x1fd093.sigBytes % _0x57de38 || _0x57de38);
            },
            unpad: function (_0x32b8be) {
              var _0x4851b6 = _0x32b8be.words;
              var _0x452846 = _0x32b8be.sigBytes - 1;
              while (!(_0x4851b6[_0x452846 >>> 2] >>> 24 - _0x452846 % 4 * 8 & 255)) {
                _0x452846--;
              }
              _0x32b8be.sigBytes = _0x452846 + 1;
            }
          };
          return _0x3dc441.pad.ZeroPadding;
        });
      }
    });
    var _0x8f67d6 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/pad-nopadding.js"(_0x1979a5, _0x3fb08f) {
        'use strict';

        (function (_0x4c1aa2, _0x4e93a7, _0x1768c0) {
          if (typeof _0x1979a5 === "object") {
            _0x3fb08f.exports = _0x1979a5 = _0x4e93a7(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x4e93a7);
          } else {
            _0x4e93a7(_0x4c1aa2.CryptoJS);
          }
        })(_0x1979a5, function (_0x3d1b06) {
          var _0x436595 = {
            pad: function () {},
            unpad: function () {}
          };
          _0x3d1b06.pad.NoPadding = _0x436595;
          return _0x3d1b06.pad.NoPadding;
        });
      }
    });
    var _0x527882 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/format-hex.js"(_0x2651cf, _0x1b5589) {
        'use strict';

        (function (_0x17d891, _0x3b0bfb, _0x44dfb5) {
          if (typeof _0x2651cf === "object") {
            _0x1b5589.exports = _0x2651cf = _0x3b0bfb(_0x3eabc7(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./cipher-core"], _0x3b0bfb);
          } else {
            _0x3b0bfb(_0x17d891.CryptoJS);
          }
        })(_0x2651cf, function (_0x13589c) {
          (function (_0x1552b6) {
            var _0x331f0b = _0x13589c;
            var _0x5f492a = _0x331f0b.lib;
            var _0xb77b98 = _0x5f492a.CipherParams;
            var _0x1b5826 = _0x331f0b.enc;
            var _0x5f559e = _0x1b5826.Hex;
            var _0x980f89 = _0x331f0b.format;
            var _0x2e6192 = _0x980f89.Hex = {
              stringify: function (_0x4297b5) {
                return _0x4297b5.ciphertext.toString(_0x5f559e);
              },
              parse: function (_0x275159) {
                var _0x253590 = _0x5f559e.parse(_0x275159);
                var _0x1435d7 = {
                  ciphertext: _0x253590
                };
                return _0xb77b98.create(_0x1435d7);
              }
            };
          })();
          return _0x13589c.format.Hex;
        });
      }
    });
    var _0x2867c4 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/aes.js"(_0x2cf5fe, _0x1a45e6) {
        'use strict';

        (function (_0x2ee8a9, _0x4f9641, _0x4b535f) {
          if (typeof _0x2cf5fe === "object") {
            _0x1a45e6.exports = _0x2cf5fe = _0x4f9641(_0x3eabc7(), _0x3330da(), _0x13fd13(), _0x53db92(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x4f9641);
          } else {
            _0x4f9641(_0x2ee8a9.CryptoJS);
          }
        })(_0x2cf5fe, function (_0x4c4170) {
          (function () {
            var _0x48db3f = _0x4c4170;
            var _0x11ffc5 = _0x48db3f.lib;
            var _0x4780d8 = _0x11ffc5.BlockCipher;
            var _0x591063 = _0x48db3f.algo;
            var _0x352676 = [];
            var _0x38bb78 = [];
            var _0x53dc23 = [];
            var _0x183fd4 = [];
            var _0x138baa = [];
            var _0x2bff36 = [];
            var _0x227d81 = [];
            var _0x26b823 = [];
            var _0xe3d222 = [];
            var _0x4b22c6 = [];
            (function () {
              var _0x103325 = [];
              for (var _0x5702aa = 0; _0x5702aa < 256; _0x5702aa++) {
                if (_0x5702aa < 128) {
                  _0x103325[_0x5702aa] = _0x5702aa << 1;
                } else {
                  _0x103325[_0x5702aa] = _0x5702aa << 1 ^ 283;
                }
              }
              var _0x1c07e2 = 0;
              var _0x4fdcf8 = 0;
              for (var _0x5702aa = 0; _0x5702aa < 256; _0x5702aa++) {
                var _0x39622c = _0x4fdcf8 ^ _0x4fdcf8 << 1 ^ _0x4fdcf8 << 2 ^ _0x4fdcf8 << 3 ^ _0x4fdcf8 << 4;
                _0x39622c = _0x39622c >>> 8 ^ _0x39622c & 255 ^ 99;
                _0x352676[_0x1c07e2] = _0x39622c;
                _0x38bb78[_0x39622c] = _0x1c07e2;
                var _0x416cb1 = _0x103325[_0x1c07e2];
                var _0x50db91 = _0x103325[_0x416cb1];
                var _0x344e52 = _0x103325[_0x50db91];
                var _0x2e7060 = _0x103325[_0x39622c] * 257 ^ _0x39622c * 16843008;
                _0x53dc23[_0x1c07e2] = _0x2e7060 << 24 | _0x2e7060 >>> 8;
                _0x183fd4[_0x1c07e2] = _0x2e7060 << 16 | _0x2e7060 >>> 16;
                _0x138baa[_0x1c07e2] = _0x2e7060 << 8 | _0x2e7060 >>> 24;
                _0x2bff36[_0x1c07e2] = _0x2e7060;
                var _0x2e7060 = _0x344e52 * 16843009 ^ _0x50db91 * 65537 ^ _0x416cb1 * 257 ^ _0x1c07e2 * 16843008;
                _0x227d81[_0x39622c] = _0x2e7060 << 24 | _0x2e7060 >>> 8;
                _0x26b823[_0x39622c] = _0x2e7060 << 16 | _0x2e7060 >>> 16;
                _0xe3d222[_0x39622c] = _0x2e7060 << 8 | _0x2e7060 >>> 24;
                _0x4b22c6[_0x39622c] = _0x2e7060;
                if (!_0x1c07e2) {
                  _0x1c07e2 = _0x4fdcf8 = 1;
                } else {
                  _0x1c07e2 = _0x416cb1 ^ _0x103325[_0x103325[_0x103325[_0x344e52 ^ _0x416cb1]]];
                  _0x4fdcf8 ^= _0x103325[_0x103325[_0x4fdcf8]];
                }
              }
            })();
            var _0x400091 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
            var _0x14ee84 = _0x591063.AES = _0x4780d8.extend({
              _doReset: function () {
                if (this._nRounds && this._keyPriorReset === this._key) {
                  return;
                }
                var _0x251455 = this._keyPriorReset = this._key;
                var _0x30d048 = _0x251455.words;
                var _0x26a348 = _0x251455.sigBytes / 4;
                var _0x45518c = this._nRounds = _0x26a348 + 6;
                var _0x5edd96 = (_0x45518c + 1) * 4;
                var _0x4e0258 = this._keySchedule = [];
                for (var _0x13d30c = 0; _0x13d30c < _0x5edd96; _0x13d30c++) {
                  if (_0x13d30c < _0x26a348) {
                    _0x4e0258[_0x13d30c] = _0x30d048[_0x13d30c];
                  } else {
                    var _0x309395 = _0x4e0258[_0x13d30c - 1];
                    if (!(_0x13d30c % _0x26a348)) {
                      _0x309395 = _0x309395 << 8 | _0x309395 >>> 24;
                      _0x309395 = _0x352676[_0x309395 >>> 24] << 24 | _0x352676[_0x309395 >>> 16 & 255] << 16 | _0x352676[_0x309395 >>> 8 & 255] << 8 | _0x352676[_0x309395 & 255];
                      _0x309395 ^= _0x400091[_0x13d30c / _0x26a348 | 0] << 24;
                    } else if (_0x26a348 > 6 && _0x13d30c % _0x26a348 == 4) {
                      _0x309395 = _0x352676[_0x309395 >>> 24] << 24 | _0x352676[_0x309395 >>> 16 & 255] << 16 | _0x352676[_0x309395 >>> 8 & 255] << 8 | _0x352676[_0x309395 & 255];
                    }
                    _0x4e0258[_0x13d30c] = _0x4e0258[_0x13d30c - _0x26a348] ^ _0x309395;
                  }
                }
                var _0x5bcfbc = this._invKeySchedule = [];
                for (var _0x950044 = 0; _0x950044 < _0x5edd96; _0x950044++) {
                  var _0x13d30c = _0x5edd96 - _0x950044;
                  if (_0x950044 % 4) {
                    var _0x309395 = _0x4e0258[_0x13d30c];
                  } else {
                    var _0x309395 = _0x4e0258[_0x13d30c - 4];
                  }
                  if (_0x950044 < 4 || _0x13d30c <= 4) {
                    _0x5bcfbc[_0x950044] = _0x309395;
                  } else {
                    _0x5bcfbc[_0x950044] = _0x227d81[_0x352676[_0x309395 >>> 24]] ^ _0x26b823[_0x352676[_0x309395 >>> 16 & 255]] ^ _0xe3d222[_0x352676[_0x309395 >>> 8 & 255]] ^ _0x4b22c6[_0x352676[_0x309395 & 255]];
                  }
                }
              },
              encryptBlock: function (_0x4a72c8, _0x220a2b) {
                this._doCryptBlock(_0x4a72c8, _0x220a2b, this._keySchedule, _0x53dc23, _0x183fd4, _0x138baa, _0x2bff36, _0x352676);
              },
              decryptBlock: function (_0x267b34, _0x328a37) {
                var _0x22e01d = _0x267b34[_0x328a37 + 1];
                _0x267b34[_0x328a37 + 1] = _0x267b34[_0x328a37 + 3];
                _0x267b34[_0x328a37 + 3] = _0x22e01d;
                this._doCryptBlock(_0x267b34, _0x328a37, this._invKeySchedule, _0x227d81, _0x26b823, _0xe3d222, _0x4b22c6, _0x38bb78);
                var _0x22e01d = _0x267b34[_0x328a37 + 1];
                _0x267b34[_0x328a37 + 1] = _0x267b34[_0x328a37 + 3];
                _0x267b34[_0x328a37 + 3] = _0x22e01d;
              },
              _doCryptBlock: function (_0x4fcf24, _0x23e7f1, _0x2b4a5c, _0x3a727e, _0x47be75, _0x23dfee, _0x95a9d2, _0x4de814) {
                var _0x32aa0d = this._nRounds;
                var _0x342154 = _0x4fcf24[_0x23e7f1] ^ _0x2b4a5c[0];
                var _0x17e16b = _0x4fcf24[_0x23e7f1 + 1] ^ _0x2b4a5c[1];
                var _0x2bc0f3 = _0x4fcf24[_0x23e7f1 + 2] ^ _0x2b4a5c[2];
                var _0x568a00 = _0x4fcf24[_0x23e7f1 + 3] ^ _0x2b4a5c[3];
                var _0x2675a5 = 4;
                for (var _0x5ddaa9 = 1; _0x5ddaa9 < _0x32aa0d; _0x5ddaa9++) {
                  var _0x4f2055 = _0x3a727e[_0x342154 >>> 24] ^ _0x47be75[_0x17e16b >>> 16 & 255] ^ _0x23dfee[_0x2bc0f3 >>> 8 & 255] ^ _0x95a9d2[_0x568a00 & 255] ^ _0x2b4a5c[_0x2675a5++];
                  var _0x538ac2 = _0x3a727e[_0x17e16b >>> 24] ^ _0x47be75[_0x2bc0f3 >>> 16 & 255] ^ _0x23dfee[_0x568a00 >>> 8 & 255] ^ _0x95a9d2[_0x342154 & 255] ^ _0x2b4a5c[_0x2675a5++];
                  var _0x5311c7 = _0x3a727e[_0x2bc0f3 >>> 24] ^ _0x47be75[_0x568a00 >>> 16 & 255] ^ _0x23dfee[_0x342154 >>> 8 & 255] ^ _0x95a9d2[_0x17e16b & 255] ^ _0x2b4a5c[_0x2675a5++];
                  var _0x4420cf = _0x3a727e[_0x568a00 >>> 24] ^ _0x47be75[_0x342154 >>> 16 & 255] ^ _0x23dfee[_0x17e16b >>> 8 & 255] ^ _0x95a9d2[_0x2bc0f3 & 255] ^ _0x2b4a5c[_0x2675a5++];
                  _0x342154 = _0x4f2055;
                  _0x17e16b = _0x538ac2;
                  _0x2bc0f3 = _0x5311c7;
                  _0x568a00 = _0x4420cf;
                }
                var _0x4f2055 = (_0x4de814[_0x342154 >>> 24] << 24 | _0x4de814[_0x17e16b >>> 16 & 255] << 16 | _0x4de814[_0x2bc0f3 >>> 8 & 255] << 8 | _0x4de814[_0x568a00 & 255]) ^ _0x2b4a5c[_0x2675a5++];
                var _0x538ac2 = (_0x4de814[_0x17e16b >>> 24] << 24 | _0x4de814[_0x2bc0f3 >>> 16 & 255] << 16 | _0x4de814[_0x568a00 >>> 8 & 255] << 8 | _0x4de814[_0x342154 & 255]) ^ _0x2b4a5c[_0x2675a5++];
                var _0x5311c7 = (_0x4de814[_0x2bc0f3 >>> 24] << 24 | _0x4de814[_0x568a00 >>> 16 & 255] << 16 | _0x4de814[_0x342154 >>> 8 & 255] << 8 | _0x4de814[_0x17e16b & 255]) ^ _0x2b4a5c[_0x2675a5++];
                var _0x4420cf = (_0x4de814[_0x568a00 >>> 24] << 24 | _0x4de814[_0x342154 >>> 16 & 255] << 16 | _0x4de814[_0x17e16b >>> 8 & 255] << 8 | _0x4de814[_0x2bc0f3 & 255]) ^ _0x2b4a5c[_0x2675a5++];
                _0x4fcf24[_0x23e7f1] = _0x4f2055;
                _0x4fcf24[_0x23e7f1 + 1] = _0x538ac2;
                _0x4fcf24[_0x23e7f1 + 2] = _0x5311c7;
                _0x4fcf24[_0x23e7f1 + 3] = _0x4420cf;
              },
              keySize: 8
            });
            _0x48db3f.AES = _0x4780d8._createHelper(_0x14ee84);
          })();
          return _0x4c4170.AES;
        });
      }
    });
    var _0x403319 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/tripledes.js"(_0x163510, _0xa82d0d) {
        'use strict';

        (function (_0xbd0de9, _0x4dd18a, _0x1a990b) {
          if (typeof _0x163510 === "object") {
            _0xa82d0d.exports = _0x163510 = _0x4dd18a(_0x3eabc7(), _0x3330da(), _0x13fd13(), _0x53db92(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x4dd18a);
          } else {
            _0x4dd18a(_0xbd0de9.CryptoJS);
          }
        })(_0x163510, function (_0x5bb2c5) {
          (function () {
            var _0x128534 = _0x5bb2c5;
            var _0x2848d3 = _0x128534.lib;
            var _0xdbface = _0x2848d3.WordArray;
            var _0x27e7d2 = _0x2848d3.BlockCipher;
            var _0x109f6a = _0x128534.algo;
            var _0x4c38fa = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];
            var _0x199de5 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];
            var _0x318c1f = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];
            var _0x5dbc8e = [{
              "0": 8421888,
              "268435456": 32768,
              "536870912": 8421378,
              "805306368": 2,
              "1073741824": 512,
              "1342177280": 8421890,
              "1610612736": 8389122,
              "1879048192": 8388608,
              "2147483648": 514,
              "2415919104": 8389120,
              "2684354560": 33280,
              "2952790016": 8421376,
              "3221225472": 32770,
              "3489660928": 8388610,
              "3758096384": 0,
              "4026531840": 33282,
              "134217728": 0,
              "402653184": 8421890,
              "671088640": 33282,
              "939524096": 32768,
              "1207959552": 8421888,
              "1476395008": 512,
              "1744830464": 8421378,
              "2013265920": 2,
              "2281701376": 8389120,
              "2550136832": 33280,
              "2818572288": 8421376,
              "3087007744": 8389122,
              "3355443200": 8388610,
              "3623878656": 32770,
              "3892314112": 514,
              "4160749568": 8388608,
              "1": 32768,
              "268435457": 2,
              "536870913": 8421888,
              "805306369": 8388608,
              "1073741825": 8421378,
              "1342177281": 33280,
              "1610612737": 512,
              "1879048193": 8389122,
              "2147483649": 8421890,
              "2415919105": 8421376,
              "2684354561": 8388610,
              "2952790017": 33282,
              "3221225473": 514,
              "3489660929": 8389120,
              "3758096385": 32770,
              "4026531841": 0,
              "134217729": 8421890,
              "402653185": 8421376,
              "671088641": 8388608,
              "939524097": 512,
              "1207959553": 32768,
              "1476395009": 8388610,
              "1744830465": 2,
              "2013265921": 33282,
              "2281701377": 32770,
              "2550136833": 8389122,
              "2818572289": 514,
              "3087007745": 8421888,
              "3355443201": 8389120,
              "3623878657": 0,
              "3892314113": 33280,
              "4160749569": 8421378
            }, {
              "0": 1074282512,
              "16777216": 16384,
              "33554432": 524288,
              "50331648": 1074266128,
              "67108864": 1073741840,
              "83886080": 1074282496,
              "100663296": 1073758208,
              "117440512": 16,
              "134217728": 540672,
              "150994944": 1073758224,
              "167772160": 1073741824,
              "184549376": 540688,
              "201326592": 524304,
              "218103808": 0,
              "234881024": 16400,
              "251658240": 1074266112,
              "8388608": 1073758208,
              "25165824": 540688,
              "41943040": 16,
              "58720256": 1073758224,
              "75497472": 1074282512,
              "92274688": 1073741824,
              "109051904": 524288,
              "125829120": 1074266128,
              "142606336": 524304,
              "159383552": 0,
              "176160768": 16384,
              "192937984": 1074266112,
              "209715200": 1073741840,
              "226492416": 540672,
              "243269632": 1074282496,
              "260046848": 16400,
              "268435456": 0,
              "285212672": 1074266128,
              "301989888": 1073758224,
              "318767104": 1074282496,
              "335544320": 1074266112,
              "352321536": 16,
              "369098752": 540688,
              "385875968": 16384,
              "402653184": 16400,
              "419430400": 524288,
              "436207616": 524304,
              "452984832": 1073741840,
              "469762048": 540672,
              "486539264": 1073758208,
              "503316480": 1073741824,
              "520093696": 1074282512,
              "276824064": 540688,
              "293601280": 524288,
              "310378496": 1074266112,
              "327155712": 16384,
              "343932928": 1073758208,
              "360710144": 1074282512,
              "377487360": 16,
              "394264576": 1073741824,
              "411041792": 1074282496,
              "427819008": 1073741840,
              "444596224": 1073758224,
              "461373440": 524304,
              "478150656": 0,
              "494927872": 16400,
              "511705088": 1074266128,
              "528482304": 540672
            }, {
              "0": 260,
              "1048576": 0,
              "2097152": 67109120,
              "3145728": 65796,
              "4194304": 65540,
              "5242880": 67108868,
              "6291456": 67174660,
              "7340032": 67174400,
              "8388608": 67108864,
              "9437184": 67174656,
              "10485760": 65792,
              "11534336": 67174404,
              "12582912": 67109124,
              "13631488": 65536,
              "14680064": 4,
              "15728640": 256,
              "524288": 67174656,
              "1572864": 67174404,
              "2621440": 0,
              "3670016": 67109120,
              "4718592": 67108868,
              "5767168": 65536,
              "6815744": 65540,
              "7864320": 260,
              "8912896": 4,
              "9961472": 256,
              "11010048": 67174400,
              "12058624": 65796,
              "13107200": 65792,
              "14155776": 67109124,
              "15204352": 67174660,
              "16252928": 67108864,
              "16777216": 67174656,
              "17825792": 65540,
              "18874368": 65536,
              "19922944": 67109120,
              "20971520": 256,
              "22020096": 67174660,
              "23068672": 67108868,
              "24117248": 0,
              "25165824": 67109124,
              "26214400": 67108864,
              "27262976": 4,
              "28311552": 65792,
              "29360128": 67174400,
              "30408704": 260,
              "31457280": 65796,
              "32505856": 67174404,
              "17301504": 67108864,
              "18350080": 260,
              "19398656": 67174656,
              "20447232": 0,
              "21495808": 65540,
              "22544384": 67109120,
              "23592960": 256,
              "24641536": 67174404,
              "25690112": 65536,
              "26738688": 67174660,
              "27787264": 65796,
              "28835840": 67108868,
              "29884416": 67109124,
              "30932992": 67174400,
              "31981568": 4,
              "33030144": 65792
            }, {
              "0": 2151682048,
              "65536": 2147487808,
              "131072": 4198464,
              "196608": 2151677952,
              "262144": 0,
              "327680": 4198400,
              "393216": 2147483712,
              "458752": 4194368,
              "524288": 2147483648,
              "589824": 4194304,
              "655360": 64,
              "720896": 2147487744,
              "786432": 2151678016,
              "851968": 4160,
              "917504": 4096,
              "983040": 2151682112,
              "32768": 2147487808,
              "98304": 64,
              "163840": 2151678016,
              "229376": 2147487744,
              "294912": 4198400,
              "360448": 2151682112,
              "425984": 0,
              "491520": 2151677952,
              "557056": 4096,
              "622592": 2151682048,
              "688128": 4194304,
              "753664": 4160,
              "819200": 2147483648,
              "884736": 4194368,
              "950272": 4198464,
              "1015808": 2147483712,
              "1048576": 4194368,
              "1114112": 4198400,
              "1179648": 2147483712,
              "1245184": 0,
              "1310720": 4160,
              "1376256": 2151678016,
              "1441792": 2151682048,
              "1507328": 2147487808,
              "1572864": 2151682112,
              "1638400": 2147483648,
              "1703936": 2151677952,
              "1769472": 4198464,
              "1835008": 2147487744,
              "1900544": 4194304,
              "1966080": 64,
              "2031616": 4096,
              "1081344": 2151677952,
              "1146880": 2151682112,
              "1212416": 0,
              "1277952": 4198400,
              "1343488": 4194368,
              "1409024": 2147483648,
              "1474560": 2147487808,
              "1540096": 64,
              "1605632": 2147483712,
              "1671168": 4096,
              "1736704": 2147487744,
              "1802240": 2151678016,
              "1867776": 4160,
              "1933312": 2151682048,
              "1998848": 4194304,
              "2064384": 4198464
            }, {
              "0": 128,
              "4096": 17039360,
              "8192": 262144,
              "12288": 536870912,
              "16384": 537133184,
              "20480": 16777344,
              "24576": 553648256,
              "28672": 262272,
              "32768": 16777216,
              "36864": 537133056,
              "40960": 536871040,
              "45056": 553910400,
              "49152": 553910272,
              "53248": 0,
              "57344": 17039488,
              "61440": 553648128,
              "2048": 17039488,
              "6144": 553648256,
              "10240": 128,
              "14336": 17039360,
              "18432": 262144,
              "22528": 537133184,
              "26624": 553910272,
              "30720": 536870912,
              "34816": 537133056,
              "38912": 0,
              "43008": 553910400,
              "47104": 16777344,
              "51200": 536871040,
              "55296": 553648128,
              "59392": 16777216,
              "63488": 262272,
              "65536": 262144,
              "69632": 128,
              "73728": 536870912,
              "77824": 553648256,
              "81920": 16777344,
              "86016": 553910272,
              "90112": 537133184,
              "94208": 16777216,
              "98304": 553910400,
              "102400": 553648128,
              "106496": 17039360,
              "110592": 537133056,
              "114688": 262272,
              "118784": 536871040,
              "122880": 0,
              "126976": 17039488,
              "67584": 553648256,
              "71680": 16777216,
              "75776": 17039360,
              "79872": 537133184,
              "83968": 536870912,
              "88064": 17039488,
              "92160": 128,
              "96256": 553910272,
              "100352": 262272,
              "104448": 553910400,
              "108544": 0,
              "112640": 553648128,
              "116736": 16777344,
              "120832": 262144,
              "124928": 537133056,
              "129024": 536871040
            }, {
              "0": 268435464,
              "256": 8192,
              "512": 270532608,
              "768": 270540808,
              "1024": 268443648,
              "1280": 2097152,
              "1536": 2097160,
              "1792": 268435456,
              "2048": 0,
              "2304": 268443656,
              "2560": 2105344,
              "2816": 8,
              "3072": 270532616,
              "3328": 2105352,
              "3584": 8200,
              "3840": 270540800,
              "128": 270532608,
              "384": 270540808,
              "640": 8,
              "896": 2097152,
              "1152": 2105352,
              "1408": 268435464,
              "1664": 268443648,
              "1920": 8200,
              "2176": 2097160,
              "2432": 8192,
              "2688": 268443656,
              "2944": 270532616,
              "3200": 0,
              "3456": 270540800,
              "3712": 2105344,
              "3968": 268435456,
              "4096": 268443648,
              "4352": 270532616,
              "4608": 270540808,
              "4864": 8200,
              "5120": 2097152,
              "5376": 268435456,
              "5632": 268435464,
              "5888": 2105344,
              "6144": 2105352,
              "6400": 0,
              "6656": 8,
              "6912": 270532608,
              "7168": 8192,
              "7424": 268443656,
              "7680": 270540800,
              "7936": 2097160,
              "4224": 8,
              "4480": 2105344,
              "4736": 2097152,
              "4992": 268435464,
              "5248": 268443648,
              "5504": 8200,
              "5760": 270540808,
              "6016": 270532608,
              "6272": 270540800,
              "6528": 270532616,
              "6784": 8192,
              "7040": 2105352,
              "7296": 2097160,
              "7552": 0,
              "7808": 268435456,
              "8064": 268443656
            }, {
              "0": 1048576,
              "16": 33555457,
              "32": 1024,
              "48": 1049601,
              "64": 34604033,
              "80": 0,
              "96": 1,
              "112": 34603009,
              "128": 33555456,
              "144": 1048577,
              "160": 33554433,
              "176": 34604032,
              "192": 34603008,
              "208": 1025,
              "224": 1049600,
              "240": 33554432,
              "8": 34603009,
              "24": 0,
              "40": 33555457,
              "56": 34604032,
              "72": 1048576,
              "88": 33554433,
              "104": 33554432,
              "120": 1025,
              "136": 1049601,
              "152": 33555456,
              "168": 34603008,
              "184": 1048577,
              "200": 1024,
              "216": 34604033,
              "232": 1,
              "248": 1049600,
              "256": 33554432,
              "272": 1048576,
              "288": 33555457,
              "304": 34603009,
              "320": 1048577,
              "336": 33555456,
              "352": 34604032,
              "368": 1049601,
              "384": 1025,
              "400": 34604033,
              "416": 1049600,
              "432": 1,
              "448": 0,
              "464": 34603008,
              "480": 33554433,
              "496": 1024,
              "264": 1049600,
              "280": 33555457,
              "296": 34603009,
              "312": 1,
              "328": 33554432,
              "344": 1048576,
              "360": 1025,
              "376": 34604032,
              "392": 33554433,
              "408": 34603008,
              "424": 0,
              "440": 34604033,
              "456": 1049601,
              "472": 1024,
              "488": 33555456,
              "504": 1048577
            }, {
              "0": 134219808,
              "1": 131072,
              "2": 134217728,
              "3": 32,
              "4": 131104,
              "5": 134350880,
              "6": 134350848,
              "7": 2048,
              "8": 134348800,
              "9": 134219776,
              "10": 133120,
              "11": 134348832,
              "12": 2080,
              "13": 0,
              "14": 134217760,
              "15": 133152,
              "2147483648": 2048,
              "2147483649": 134350880,
              "2147483650": 134219808,
              "2147483651": 134217728,
              "2147483652": 134348800,
              "2147483653": 133120,
              "2147483654": 133152,
              "2147483655": 32,
              "2147483656": 134217760,
              "2147483657": 2080,
              "2147483658": 131104,
              "2147483659": 134350848,
              "2147483660": 0,
              "2147483661": 134348832,
              "2147483662": 134219776,
              "2147483663": 131072,
              "16": 133152,
              "17": 134350848,
              "18": 32,
              "19": 2048,
              "20": 134219776,
              "21": 134217760,
              "22": 134348832,
              "23": 131072,
              "24": 0,
              "25": 131104,
              "26": 134348800,
              "27": 134219808,
              "28": 134350880,
              "29": 133120,
              "30": 2080,
              "31": 134217728,
              "2147483664": 131072,
              "2147483665": 2048,
              "2147483666": 134348832,
              "2147483667": 133152,
              "2147483668": 32,
              "2147483669": 134348800,
              "2147483670": 134217728,
              "2147483671": 134219808,
              "2147483672": 134350880,
              "2147483673": 134217760,
              "2147483674": 134219776,
              "2147483675": 0,
              "2147483676": 133120,
              "2147483677": 2080,
              "2147483678": 131104,
              "2147483679": 134350848
            }];
            var _0x51ccc4 = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679];
            var _0x5de427 = _0x109f6a.DES = _0x27e7d2.extend({
              _doReset: function () {
                var _0x214045 = this._key;
                var _0x312c0d = _0x214045.words;
                var _0x1afca0 = [];
                for (var _0x541f9d = 0; _0x541f9d < 56; _0x541f9d++) {
                  var _0x2ebd81 = _0x4c38fa[_0x541f9d] - 1;
                  _0x1afca0[_0x541f9d] = _0x312c0d[_0x2ebd81 >>> 5] >>> 31 - _0x2ebd81 % 32 & 1;
                }
                var _0xb3efd9 = this._subKeys = [];
                for (var _0x6be109 = 0; _0x6be109 < 16; _0x6be109++) {
                  var _0x892413 = _0xb3efd9[_0x6be109] = [];
                  var _0x36e247 = _0x318c1f[_0x6be109];
                  for (var _0x541f9d = 0; _0x541f9d < 24; _0x541f9d++) {
                    _0x892413[_0x541f9d / 6 | 0] |= _0x1afca0[(_0x199de5[_0x541f9d] - 1 + _0x36e247) % 28] << 31 - _0x541f9d % 6;
                    _0x892413[4 + (_0x541f9d / 6 | 0)] |= _0x1afca0[28 + (_0x199de5[_0x541f9d + 24] - 1 + _0x36e247) % 28] << 31 - _0x541f9d % 6;
                  }
                  _0x892413[0] = _0x892413[0] << 1 | _0x892413[0] >>> 31;
                  for (var _0x541f9d = 1; _0x541f9d < 7; _0x541f9d++) {
                    _0x892413[_0x541f9d] = _0x892413[_0x541f9d] >>> (_0x541f9d - 1) * 4 + 3;
                  }
                  _0x892413[7] = _0x892413[7] << 5 | _0x892413[7] >>> 27;
                }
                var _0x2ba421 = this._invSubKeys = [];
                for (var _0x541f9d = 0; _0x541f9d < 16; _0x541f9d++) {
                  _0x2ba421[_0x541f9d] = _0xb3efd9[15 - _0x541f9d];
                }
              },
              encryptBlock: function (_0x136327, _0x48fa01) {
                this._doCryptBlock(_0x136327, _0x48fa01, this._subKeys);
              },
              decryptBlock: function (_0x131ff9, _0x2233b0) {
                this._doCryptBlock(_0x131ff9, _0x2233b0, this._invSubKeys);
              },
              _doCryptBlock: function (_0x4b784f, _0x309d1b, _0x288538) {
                this._lBlock = _0x4b784f[_0x309d1b];
                this._rBlock = _0x4b784f[_0x309d1b + 1];
                _0x3d8d9b.call(this, 4, 252645135);
                _0x3d8d9b.call(this, 16, 65535);
                _0x16e114.call(this, 2, 858993459);
                _0x16e114.call(this, 8, 16711935);
                _0x3d8d9b.call(this, 1, 1431655765);
                for (var _0x4bfd50 = 0; _0x4bfd50 < 16; _0x4bfd50++) {
                  var _0x4fab02 = _0x288538[_0x4bfd50];
                  var _0x35eb45 = this._lBlock;
                  var _0x4c4daf = this._rBlock;
                  var _0x45b911 = 0;
                  for (var _0x2b7ee4 = 0; _0x2b7ee4 < 8; _0x2b7ee4++) {
                    _0x45b911 |= _0x5dbc8e[_0x2b7ee4][((_0x4c4daf ^ _0x4fab02[_0x2b7ee4]) & _0x51ccc4[_0x2b7ee4]) >>> 0];
                  }
                  this._lBlock = _0x4c4daf;
                  this._rBlock = _0x35eb45 ^ _0x45b911;
                }
                var _0x1679f7 = this._lBlock;
                this._lBlock = this._rBlock;
                this._rBlock = _0x1679f7;
                _0x3d8d9b.call(this, 1, 1431655765);
                _0x16e114.call(this, 8, 16711935);
                _0x16e114.call(this, 2, 858993459);
                _0x3d8d9b.call(this, 16, 65535);
                _0x3d8d9b.call(this, 4, 252645135);
                _0x4b784f[_0x309d1b] = this._lBlock;
                _0x4b784f[_0x309d1b + 1] = this._rBlock;
              },
              keySize: 2,
              ivSize: 2,
              blockSize: 2
            });
            function _0x3d8d9b(_0x591702, _0x15c278) {
              var _0x3fe0fe = (this._lBlock >>> _0x591702 ^ this._rBlock) & _0x15c278;
              this._rBlock ^= _0x3fe0fe;
              this._lBlock ^= _0x3fe0fe << _0x591702;
            }
            function _0x16e114(_0x54a5a0, _0x1fb60a) {
              var _0x1e741c = (this._rBlock >>> _0x54a5a0 ^ this._lBlock) & _0x1fb60a;
              this._lBlock ^= _0x1e741c;
              this._rBlock ^= _0x1e741c << _0x54a5a0;
            }
            _0x128534.DES = _0x27e7d2._createHelper(_0x5de427);
            var _0x5d5d61 = _0x109f6a.TripleDES = _0x27e7d2.extend({
              _doReset: function () {
                var _0x434731 = this._key;
                var _0xc8a136 = _0x434731.words;
                this._des1 = _0x5de427.createEncryptor(_0xdbface.create(_0xc8a136.slice(0, 2)));
                this._des2 = _0x5de427.createEncryptor(_0xdbface.create(_0xc8a136.slice(2, 4)));
                this._des3 = _0x5de427.createEncryptor(_0xdbface.create(_0xc8a136.slice(4, 6)));
              },
              encryptBlock: function (_0x32612f, _0xe5b940) {
                this._des1.encryptBlock(_0x32612f, _0xe5b940);
                this._des2.decryptBlock(_0x32612f, _0xe5b940);
                this._des3.encryptBlock(_0x32612f, _0xe5b940);
              },
              decryptBlock: function (_0x484106, _0x13175f) {
                this._des3.decryptBlock(_0x484106, _0x13175f);
                this._des2.encryptBlock(_0x484106, _0x13175f);
                this._des1.decryptBlock(_0x484106, _0x13175f);
              },
              keySize: 6,
              ivSize: 2,
              blockSize: 2
            });
            _0x128534.TripleDES = _0x27e7d2._createHelper(_0x5d5d61);
          })();
          return _0x5bb2c5.TripleDES;
        });
      }
    });
    var _0x564a41 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/rc4.js"(_0x47c1f8, _0x1cbd0a) {
        'use strict';

        (function (_0x8e0d50, _0x2724b9, _0x11fea1) {
          if (typeof _0x47c1f8 === "object") {
            _0x1cbd0a.exports = _0x47c1f8 = _0x2724b9(_0x3eabc7(), _0x3330da(), _0x13fd13(), _0x53db92(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x2724b9);
          } else {
            _0x2724b9(_0x8e0d50.CryptoJS);
          }
        })(_0x47c1f8, function (_0x45ca3c) {
          (function () {
            var _0x1c39c8 = _0x45ca3c;
            var _0x25f008 = _0x1c39c8.lib;
            var _0x53b3a9 = _0x25f008.StreamCipher;
            var _0x4a32a6 = _0x1c39c8.algo;
            var _0x1a75e4 = _0x4a32a6.RC4 = _0x53b3a9.extend({
              _doReset: function () {
                var _0x28543f = this._key;
                var _0x56cd5c = _0x28543f.words;
                var _0x2d7f8b = _0x28543f.sigBytes;
                var _0x3ad13b = this._S = [];
                for (var _0x10d4bb = 0; _0x10d4bb < 256; _0x10d4bb++) {
                  _0x3ad13b[_0x10d4bb] = _0x10d4bb;
                }
                for (var _0x10d4bb = 0, _0x236a5c = 0; _0x10d4bb < 256; _0x10d4bb++) {
                  var _0x5e2c52 = _0x10d4bb % _0x2d7f8b;
                  var _0x124b86 = _0x56cd5c[_0x5e2c52 >>> 2] >>> 24 - _0x5e2c52 % 4 * 8 & 255;
                  _0x236a5c = (_0x236a5c + _0x3ad13b[_0x10d4bb] + _0x124b86) % 256;
                  var _0x46afae = _0x3ad13b[_0x10d4bb];
                  _0x3ad13b[_0x10d4bb] = _0x3ad13b[_0x236a5c];
                  _0x3ad13b[_0x236a5c] = _0x46afae;
                }
                this._i = this._j = 0;
              },
              _doProcessBlock: function (_0x32e171, _0x180dd5) {
                _0x32e171[_0x180dd5] ^= _0x473b85.call(this);
              },
              keySize: 8,
              ivSize: 0
            });
            function _0x473b85() {
              var _0x1ff1a9 = this._S;
              var _0x552ae8 = this._i;
              var _0x41f402 = this._j;
              var _0x24d41e = 0;
              for (var _0x197763 = 0; _0x197763 < 4; _0x197763++) {
                _0x552ae8 = (_0x552ae8 + 1) % 256;
                _0x41f402 = (_0x41f402 + _0x1ff1a9[_0x552ae8]) % 256;
                var _0x597525 = _0x1ff1a9[_0x552ae8];
                _0x1ff1a9[_0x552ae8] = _0x1ff1a9[_0x41f402];
                _0x1ff1a9[_0x41f402] = _0x597525;
                _0x24d41e |= _0x1ff1a9[(_0x1ff1a9[_0x552ae8] + _0x1ff1a9[_0x41f402]) % 256] << 24 - _0x197763 * 8;
              }
              this._i = _0x552ae8;
              this._j = _0x41f402;
              return _0x24d41e;
            }
            _0x1c39c8.RC4 = _0x53b3a9._createHelper(_0x1a75e4);
            var _0xd4d236 = _0x4a32a6.RC4Drop = _0x1a75e4.extend({
              cfg: _0x1a75e4.cfg.extend({
                drop: 192
              }),
              _doReset: function () {
                _0x1a75e4._doReset.call(this);
                for (var _0x4ba27a = this.cfg.drop; _0x4ba27a > 0; _0x4ba27a--) {
                  _0x473b85.call(this);
                }
              }
            });
            _0x1c39c8.RC4Drop = _0x53b3a9._createHelper(_0xd4d236);
          })();
          return _0x45ca3c.RC4;
        });
      }
    });
    var _0x2ab3ec = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/rabbit.js"(_0x14262a, _0x5bef54) {
        'use strict';

        (function (_0x127335, _0x27f811, _0xdc9fc7) {
          if (typeof _0x14262a === "object") {
            _0x5bef54.exports = _0x14262a = _0x27f811(_0x3eabc7(), _0x3330da(), _0x13fd13(), _0x53db92(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x27f811);
          } else {
            _0x27f811(_0x127335.CryptoJS);
          }
        })(_0x14262a, function (_0x3717c9) {
          (function () {
            var _0x5d8f81 = _0x3717c9;
            var _0x1e8bdd = _0x5d8f81.lib;
            var _0x176ceb = _0x1e8bdd.StreamCipher;
            var _0x4a9dfa = _0x5d8f81.algo;
            var _0x1e8fc9 = [];
            var _0x289c54 = [];
            var _0x3f7f96 = [];
            var _0x53ca79 = _0x4a9dfa.Rabbit = _0x176ceb.extend({
              _doReset: function () {
                var _0x58c7cd = this._key.words;
                var _0x5939fc = this.cfg.iv;
                for (var _0x3e7869 = 0; _0x3e7869 < 4; _0x3e7869++) {
                  _0x58c7cd[_0x3e7869] = (_0x58c7cd[_0x3e7869] << 8 | _0x58c7cd[_0x3e7869] >>> 24) & 16711935 | (_0x58c7cd[_0x3e7869] << 24 | _0x58c7cd[_0x3e7869] >>> 8) & 4278255360;
                }
                var _0x336a82 = this._X = [_0x58c7cd[0], _0x58c7cd[3] << 16 | _0x58c7cd[2] >>> 16, _0x58c7cd[1], _0x58c7cd[0] << 16 | _0x58c7cd[3] >>> 16, _0x58c7cd[2], _0x58c7cd[1] << 16 | _0x58c7cd[0] >>> 16, _0x58c7cd[3], _0x58c7cd[2] << 16 | _0x58c7cd[1] >>> 16];
                var _0x440692 = this._C = [_0x58c7cd[2] << 16 | _0x58c7cd[2] >>> 16, _0x58c7cd[0] & 4294901760 | _0x58c7cd[1] & 65535, _0x58c7cd[3] << 16 | _0x58c7cd[3] >>> 16, _0x58c7cd[1] & 4294901760 | _0x58c7cd[2] & 65535, _0x58c7cd[0] << 16 | _0x58c7cd[0] >>> 16, _0x58c7cd[2] & 4294901760 | _0x58c7cd[3] & 65535, _0x58c7cd[1] << 16 | _0x58c7cd[1] >>> 16, _0x58c7cd[3] & 4294901760 | _0x58c7cd[0] & 65535];
                this._b = 0;
                for (var _0x3e7869 = 0; _0x3e7869 < 4; _0x3e7869++) {
                  _0x4f9569.call(this);
                }
                for (var _0x3e7869 = 0; _0x3e7869 < 8; _0x3e7869++) {
                  _0x440692[_0x3e7869] ^= _0x336a82[_0x3e7869 + 4 & 7];
                }
                if (_0x5939fc) {
                  var _0x1a0943 = _0x5939fc.words;
                  var _0x2de230 = _0x1a0943[0];
                  var _0x597445 = _0x1a0943[1];
                  var _0x22c60c = (_0x2de230 << 8 | _0x2de230 >>> 24) & 16711935 | (_0x2de230 << 24 | _0x2de230 >>> 8) & 4278255360;
                  var _0x3f8c95 = (_0x597445 << 8 | _0x597445 >>> 24) & 16711935 | (_0x597445 << 24 | _0x597445 >>> 8) & 4278255360;
                  var _0x143c5b = _0x22c60c >>> 16 | _0x3f8c95 & 4294901760;
                  var _0x20904f = _0x3f8c95 << 16 | _0x22c60c & 65535;
                  _0x440692[0] ^= _0x22c60c;
                  _0x440692[1] ^= _0x143c5b;
                  _0x440692[2] ^= _0x3f8c95;
                  _0x440692[3] ^= _0x20904f;
                  _0x440692[4] ^= _0x22c60c;
                  _0x440692[5] ^= _0x143c5b;
                  _0x440692[6] ^= _0x3f8c95;
                  _0x440692[7] ^= _0x20904f;
                  for (var _0x3e7869 = 0; _0x3e7869 < 4; _0x3e7869++) {
                    _0x4f9569.call(this);
                  }
                }
              },
              _doProcessBlock: function (_0x2eb8d9, _0x192c62) {
                var _0x49bdd2 = this._X;
                _0x4f9569.call(this);
                _0x1e8fc9[0] = _0x49bdd2[0] ^ _0x49bdd2[5] >>> 16 ^ _0x49bdd2[3] << 16;
                _0x1e8fc9[1] = _0x49bdd2[2] ^ _0x49bdd2[7] >>> 16 ^ _0x49bdd2[5] << 16;
                _0x1e8fc9[2] = _0x49bdd2[4] ^ _0x49bdd2[1] >>> 16 ^ _0x49bdd2[7] << 16;
                _0x1e8fc9[3] = _0x49bdd2[6] ^ _0x49bdd2[3] >>> 16 ^ _0x49bdd2[1] << 16;
                for (var _0x401df3 = 0; _0x401df3 < 4; _0x401df3++) {
                  _0x1e8fc9[_0x401df3] = (_0x1e8fc9[_0x401df3] << 8 | _0x1e8fc9[_0x401df3] >>> 24) & 16711935 | (_0x1e8fc9[_0x401df3] << 24 | _0x1e8fc9[_0x401df3] >>> 8) & 4278255360;
                  _0x2eb8d9[_0x192c62 + _0x401df3] ^= _0x1e8fc9[_0x401df3];
                }
              },
              blockSize: 4,
              ivSize: 2
            });
            function _0x4f9569() {
              var _0x544923 = this._X;
              var _0x549c74 = this._C;
              for (var _0x4ef8ba = 0; _0x4ef8ba < 8; _0x4ef8ba++) {
                _0x289c54[_0x4ef8ba] = _0x549c74[_0x4ef8ba];
              }
              _0x549c74[0] = _0x549c74[0] + 1295307597 + this._b | 0;
              _0x549c74[1] = _0x549c74[1] + 3545052371 + (_0x549c74[0] >>> 0 < _0x289c54[0] >>> 0 ? 1 : 0) | 0;
              _0x549c74[2] = _0x549c74[2] + 886263092 + (_0x549c74[1] >>> 0 < _0x289c54[1] >>> 0 ? 1 : 0) | 0;
              _0x549c74[3] = _0x549c74[3] + 1295307597 + (_0x549c74[2] >>> 0 < _0x289c54[2] >>> 0 ? 1 : 0) | 0;
              _0x549c74[4] = _0x549c74[4] + 3545052371 + (_0x549c74[3] >>> 0 < _0x289c54[3] >>> 0 ? 1 : 0) | 0;
              _0x549c74[5] = _0x549c74[5] + 886263092 + (_0x549c74[4] >>> 0 < _0x289c54[4] >>> 0 ? 1 : 0) | 0;
              _0x549c74[6] = _0x549c74[6] + 1295307597 + (_0x549c74[5] >>> 0 < _0x289c54[5] >>> 0 ? 1 : 0) | 0;
              _0x549c74[7] = _0x549c74[7] + 3545052371 + (_0x549c74[6] >>> 0 < _0x289c54[6] >>> 0 ? 1 : 0) | 0;
              this._b = _0x549c74[7] >>> 0 < _0x289c54[7] >>> 0 ? 1 : 0;
              for (var _0x4ef8ba = 0; _0x4ef8ba < 8; _0x4ef8ba++) {
                var _0x32baa3 = _0x544923[_0x4ef8ba] + _0x549c74[_0x4ef8ba];
                var _0x575fa4 = _0x32baa3 & 65535;
                var _0x53ee1b = _0x32baa3 >>> 16;
                var _0x2acc1c = ((_0x575fa4 * _0x575fa4 >>> 17) + _0x575fa4 * _0x53ee1b >>> 15) + _0x53ee1b * _0x53ee1b;
                var _0x429d67 = ((_0x32baa3 & 4294901760) * _0x32baa3 | 0) + ((_0x32baa3 & 65535) * _0x32baa3 | 0);
                _0x3f7f96[_0x4ef8ba] = _0x2acc1c ^ _0x429d67;
              }
              _0x544923[0] = _0x3f7f96[0] + (_0x3f7f96[7] << 16 | _0x3f7f96[7] >>> 16) + (_0x3f7f96[6] << 16 | _0x3f7f96[6] >>> 16) | 0;
              _0x544923[1] = _0x3f7f96[1] + (_0x3f7f96[0] << 8 | _0x3f7f96[0] >>> 24) + _0x3f7f96[7] | 0;
              _0x544923[2] = _0x3f7f96[2] + (_0x3f7f96[1] << 16 | _0x3f7f96[1] >>> 16) + (_0x3f7f96[0] << 16 | _0x3f7f96[0] >>> 16) | 0;
              _0x544923[3] = _0x3f7f96[3] + (_0x3f7f96[2] << 8 | _0x3f7f96[2] >>> 24) + _0x3f7f96[1] | 0;
              _0x544923[4] = _0x3f7f96[4] + (_0x3f7f96[3] << 16 | _0x3f7f96[3] >>> 16) + (_0x3f7f96[2] << 16 | _0x3f7f96[2] >>> 16) | 0;
              _0x544923[5] = _0x3f7f96[5] + (_0x3f7f96[4] << 8 | _0x3f7f96[4] >>> 24) + _0x3f7f96[3] | 0;
              _0x544923[6] = _0x3f7f96[6] + (_0x3f7f96[5] << 16 | _0x3f7f96[5] >>> 16) + (_0x3f7f96[4] << 16 | _0x3f7f96[4] >>> 16) | 0;
              _0x544923[7] = _0x3f7f96[7] + (_0x3f7f96[6] << 8 | _0x3f7f96[6] >>> 24) + _0x3f7f96[5] | 0;
            }
            _0x5d8f81.Rabbit = _0x176ceb._createHelper(_0x53ca79);
          })();
          return _0x3717c9.Rabbit;
        });
      }
    });
    var _0x1ebc21 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/rabbit-legacy.js"(_0x2edbfe, _0x3d4ef0) {
        'use strict';

        (function (_0x1c371c, _0x1b7ba0, _0x80f8cd) {
          if (typeof _0x2edbfe === "object") {
            _0x3d4ef0.exports = _0x2edbfe = _0x1b7ba0(_0x3eabc7(), _0x3330da(), _0x13fd13(), _0x53db92(), _0x3e3735());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], _0x1b7ba0);
          } else {
            _0x1b7ba0(_0x1c371c.CryptoJS);
          }
        })(_0x2edbfe, function (_0x2539e9) {
          (function () {
            var _0x350b57 = _0x2539e9;
            var _0x360e77 = _0x350b57.lib;
            var _0x56df4f = _0x360e77.StreamCipher;
            var _0xf70123 = _0x350b57.algo;
            var _0x3320b8 = [];
            var _0x1db221 = [];
            var _0x6cafea = [];
            var _0x2d4bee = _0xf70123.RabbitLegacy = _0x56df4f.extend({
              _doReset: function () {
                var _0x4c31ad = this._key.words;
                var _0x1c51df = this.cfg.iv;
                var _0xd52f16 = this._X = [_0x4c31ad[0], _0x4c31ad[3] << 16 | _0x4c31ad[2] >>> 16, _0x4c31ad[1], _0x4c31ad[0] << 16 | _0x4c31ad[3] >>> 16, _0x4c31ad[2], _0x4c31ad[1] << 16 | _0x4c31ad[0] >>> 16, _0x4c31ad[3], _0x4c31ad[2] << 16 | _0x4c31ad[1] >>> 16];
                var _0x4e9b65 = this._C = [_0x4c31ad[2] << 16 | _0x4c31ad[2] >>> 16, _0x4c31ad[0] & 4294901760 | _0x4c31ad[1] & 65535, _0x4c31ad[3] << 16 | _0x4c31ad[3] >>> 16, _0x4c31ad[1] & 4294901760 | _0x4c31ad[2] & 65535, _0x4c31ad[0] << 16 | _0x4c31ad[0] >>> 16, _0x4c31ad[2] & 4294901760 | _0x4c31ad[3] & 65535, _0x4c31ad[1] << 16 | _0x4c31ad[1] >>> 16, _0x4c31ad[3] & 4294901760 | _0x4c31ad[0] & 65535];
                this._b = 0;
                for (var _0x5f50a2 = 0; _0x5f50a2 < 4; _0x5f50a2++) {
                  _0x332d75.call(this);
                }
                for (var _0x5f50a2 = 0; _0x5f50a2 < 8; _0x5f50a2++) {
                  _0x4e9b65[_0x5f50a2] ^= _0xd52f16[_0x5f50a2 + 4 & 7];
                }
                if (_0x1c51df) {
                  var _0x56e08e = _0x1c51df.words;
                  var _0x53af2f = _0x56e08e[0];
                  var _0x108482 = _0x56e08e[1];
                  var _0x32c0e3 = (_0x53af2f << 8 | _0x53af2f >>> 24) & 16711935 | (_0x53af2f << 24 | _0x53af2f >>> 8) & 4278255360;
                  var _0x1ed23c = (_0x108482 << 8 | _0x108482 >>> 24) & 16711935 | (_0x108482 << 24 | _0x108482 >>> 8) & 4278255360;
                  var _0x5211bb = _0x32c0e3 >>> 16 | _0x1ed23c & 4294901760;
                  var _0xe253a1 = _0x1ed23c << 16 | _0x32c0e3 & 65535;
                  _0x4e9b65[0] ^= _0x32c0e3;
                  _0x4e9b65[1] ^= _0x5211bb;
                  _0x4e9b65[2] ^= _0x1ed23c;
                  _0x4e9b65[3] ^= _0xe253a1;
                  _0x4e9b65[4] ^= _0x32c0e3;
                  _0x4e9b65[5] ^= _0x5211bb;
                  _0x4e9b65[6] ^= _0x1ed23c;
                  _0x4e9b65[7] ^= _0xe253a1;
                  for (var _0x5f50a2 = 0; _0x5f50a2 < 4; _0x5f50a2++) {
                    _0x332d75.call(this);
                  }
                }
              },
              _doProcessBlock: function (_0x1d83ad, _0x1ba25a) {
                var _0x19e604 = this._X;
                _0x332d75.call(this);
                _0x3320b8[0] = _0x19e604[0] ^ _0x19e604[5] >>> 16 ^ _0x19e604[3] << 16;
                _0x3320b8[1] = _0x19e604[2] ^ _0x19e604[7] >>> 16 ^ _0x19e604[5] << 16;
                _0x3320b8[2] = _0x19e604[4] ^ _0x19e604[1] >>> 16 ^ _0x19e604[7] << 16;
                _0x3320b8[3] = _0x19e604[6] ^ _0x19e604[3] >>> 16 ^ _0x19e604[1] << 16;
                for (var _0x2e6dc0 = 0; _0x2e6dc0 < 4; _0x2e6dc0++) {
                  _0x3320b8[_0x2e6dc0] = (_0x3320b8[_0x2e6dc0] << 8 | _0x3320b8[_0x2e6dc0] >>> 24) & 16711935 | (_0x3320b8[_0x2e6dc0] << 24 | _0x3320b8[_0x2e6dc0] >>> 8) & 4278255360;
                  _0x1d83ad[_0x1ba25a + _0x2e6dc0] ^= _0x3320b8[_0x2e6dc0];
                }
              },
              blockSize: 4,
              ivSize: 2
            });
            function _0x332d75() {
              var _0x49c567 = this._X;
              var _0xee094f = this._C;
              for (var _0x1dc850 = 0; _0x1dc850 < 8; _0x1dc850++) {
                _0x1db221[_0x1dc850] = _0xee094f[_0x1dc850];
              }
              _0xee094f[0] = _0xee094f[0] + 1295307597 + this._b | 0;
              _0xee094f[1] = _0xee094f[1] + 3545052371 + (_0xee094f[0] >>> 0 < _0x1db221[0] >>> 0 ? 1 : 0) | 0;
              _0xee094f[2] = _0xee094f[2] + 886263092 + (_0xee094f[1] >>> 0 < _0x1db221[1] >>> 0 ? 1 : 0) | 0;
              _0xee094f[3] = _0xee094f[3] + 1295307597 + (_0xee094f[2] >>> 0 < _0x1db221[2] >>> 0 ? 1 : 0) | 0;
              _0xee094f[4] = _0xee094f[4] + 3545052371 + (_0xee094f[3] >>> 0 < _0x1db221[3] >>> 0 ? 1 : 0) | 0;
              _0xee094f[5] = _0xee094f[5] + 886263092 + (_0xee094f[4] >>> 0 < _0x1db221[4] >>> 0 ? 1 : 0) | 0;
              _0xee094f[6] = _0xee094f[6] + 1295307597 + (_0xee094f[5] >>> 0 < _0x1db221[5] >>> 0 ? 1 : 0) | 0;
              _0xee094f[7] = _0xee094f[7] + 3545052371 + (_0xee094f[6] >>> 0 < _0x1db221[6] >>> 0 ? 1 : 0) | 0;
              this._b = _0xee094f[7] >>> 0 < _0x1db221[7] >>> 0 ? 1 : 0;
              for (var _0x1dc850 = 0; _0x1dc850 < 8; _0x1dc850++) {
                var _0x57fb4b = _0x49c567[_0x1dc850] + _0xee094f[_0x1dc850];
                var _0x33bb1e = _0x57fb4b & 65535;
                var _0x39dab0 = _0x57fb4b >>> 16;
                var _0x1f5e24 = ((_0x33bb1e * _0x33bb1e >>> 17) + _0x33bb1e * _0x39dab0 >>> 15) + _0x39dab0 * _0x39dab0;
                var _0xebd6e3 = ((_0x57fb4b & 4294901760) * _0x57fb4b | 0) + ((_0x57fb4b & 65535) * _0x57fb4b | 0);
                _0x6cafea[_0x1dc850] = _0x1f5e24 ^ _0xebd6e3;
              }
              _0x49c567[0] = _0x6cafea[0] + (_0x6cafea[7] << 16 | _0x6cafea[7] >>> 16) + (_0x6cafea[6] << 16 | _0x6cafea[6] >>> 16) | 0;
              _0x49c567[1] = _0x6cafea[1] + (_0x6cafea[0] << 8 | _0x6cafea[0] >>> 24) + _0x6cafea[7] | 0;
              _0x49c567[2] = _0x6cafea[2] + (_0x6cafea[1] << 16 | _0x6cafea[1] >>> 16) + (_0x6cafea[0] << 16 | _0x6cafea[0] >>> 16) | 0;
              _0x49c567[3] = _0x6cafea[3] + (_0x6cafea[2] << 8 | _0x6cafea[2] >>> 24) + _0x6cafea[1] | 0;
              _0x49c567[4] = _0x6cafea[4] + (_0x6cafea[3] << 16 | _0x6cafea[3] >>> 16) + (_0x6cafea[2] << 16 | _0x6cafea[2] >>> 16) | 0;
              _0x49c567[5] = _0x6cafea[5] + (_0x6cafea[4] << 8 | _0x6cafea[4] >>> 24) + _0x6cafea[3] | 0;
              _0x49c567[6] = _0x6cafea[6] + (_0x6cafea[5] << 16 | _0x6cafea[5] >>> 16) + (_0x6cafea[4] << 16 | _0x6cafea[4] >>> 16) | 0;
              _0x49c567[7] = _0x6cafea[7] + (_0x6cafea[6] << 8 | _0x6cafea[6] >>> 24) + _0x6cafea[5] | 0;
            }
            _0x350b57.RabbitLegacy = _0x56df4f._createHelper(_0x2d4bee);
          })();
          return _0x2539e9.RabbitLegacy;
        });
      }
    });
    var _0x18e665 = _0x75f929({
      "../../node_modules/.pnpm/crypto-js@3.1.9-1/node_modules/crypto-js/index.js"(_0x1ef86b, _0x2838d9) {
        'use strict';

        (function (_0x5b1d8a, _0x924ede, _0x4ffeea) {
          if (typeof _0x1ef86b === "object") {
            _0x2838d9.exports = _0x1ef86b = _0x924ede(_0x3eabc7(), _0x124198(), _0x1f375b(), _0x8d5ab7(), _0x3330da(), _0x13fd13(), _0x51c993(), _0x1d1e1d(), _0x2c8644(), _0x5a7fbe(), _0x5a24f1(), _0x5c5b4b(), _0x1fd728(), _0x5d9d4e(), _0x3a8801(), _0x53db92(), _0x3e3735(), _0x2ae4c2(), _0x495738(), _0x5c3c77(), _0x1a0215(), _0x30b8e7(), _0x294ba4(), _0x2077ba(), _0x4e4625(), _0x2a4df3(), _0x8f67d6(), _0x527882(), _0x2867c4(), _0x403319(), _0x564a41(), _0x2ab3ec(), _0x1ebc21());
          } else if (typeof define === "function" && define.amd) {
            define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropadding", "./pad-nopadding", "./format-hex", "./aes", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy"], _0x924ede);
          } else {
            _0x5b1d8a.CryptoJS = _0x924ede(_0x5b1d8a.CryptoJS);
          }
        })(_0x1ef86b, function (_0x1e1720) {
          return _0x1e1720;
        });
      }
    });
    var _0x31aa79 = {
      ESC: 322,
      F1: 288,
      F2: 289,
      F3: 170,
      F5: 166,
      F6: 167,
      F7: 168,
      F8: 169,
      F9: 56,
      F10: 57,
      "~": 243,
      "#1": 157,
      "#2": 158,
      "#3": 160,
      "#4": 164,
      "#5": 165,
      "#6": 159,
      "#7": 161,
      "#8": 162,
      "#9": 163,
      "-": 84,
      "=": 83,
      BACKSPACE: 177,
      TAB: 37,
      Q: 44,
      W: 32,
      E: 38,
      R: 45,
      T: 245,
      Y: 246,
      U: 303,
      P: 199,
      ENTER: 18,
      CAPS: 137,
      A: 34,
      S: 8,
      D: 9,
      F: 23,
      G: 47,
      H: 74,
      K: 311,
      L: 182,
      LEFTSHIFT: 21,
      Z: 20,
      X: 73,
      C: 26,
      V: 0,
      B: 29,
      N: 249,
      M: 244,
      ",": 82,
      ".": 81,
      LEFTCTRL: 36,
      LEFTALT: 19,
      SPACE: 22,
      RIGHTCTRL: 70,
      HOME: 213,
      PAGEUP: 10,
      PAGEDOWN: 11,
      DELETE: 178,
      LEFT: 174,
      RIGHT: 175,
      TOP: 27,
      DOWN: 173,
      NENTER: 201,
      N4: 108,
      N5: 60,
      N6: 107,
      "N+": 96,
      "N-": 97,
      N7: 117,
      N8: 61,
      N9: 118
    };
    var _0x33ea96 = {
      warning: 1,
      log: 2,
      error: 3,
      debug: 4
    };
    var _0x33b4e4 = typeof GetConvar === "function" ? GetConvar(GetCurrentResourceName() + "_logLevel", "") : "";
    var _0x48814b = typeof GetConvar === "function" ? GetConvar("sv_loglevel", "warning") : "warning";
    _0x48814b = (_0x33b4e4 == null ? undefined : _0x33b4e4.length) > 0 ? _0x33b4e4 : _0x48814b;
    (() => {
      if (!_0x33ea96[_0x48814b]) {
        throw new Error("Invalid log level: " + _0x48814b);
      }
    })();
    var _0x1fb3b0 = () => _0x33ea96[_0x48814b] >= _0x33ea96.warning;
    var _0x19909d = () => _0x33ea96[_0x48814b] >= _0x33ea96.log;
    var _0x544047 = () => _0x33ea96[_0x48814b] >= _0x33ea96.error;
    var _0x25478f = () => _0x48814b === "debug";
    var _0x3a2b64 = {
      warning: (_0x4343f1, ..._0x27871e) => {
        if (!_0x1fb3b0()) {
          return;
        }
        _0x445531.log("^3[WARNING] ^7" + _0x4343f1, ..._0x27871e, "^0");
      },
      log: (_0x19eba8, ..._0x51dc27) => {
        if (!_0x19909d()) {
          return;
        }
        _0x445531.log("^5[nopixel] ^7" + _0x19eba8, ..._0x51dc27, "^0");
      },
      debug: (_0x41b95b, ..._0x45526d) => {
        if (!_0x25478f()) {
          return;
        }
        _0x445531.log("^2[D] " + _0x41b95b, ..._0x45526d, "^0");
      },
      error: (_0x552e10, ..._0x5ad8b9) => {
        if (!_0x544047()) {
          return;
        }
        _0x445531.log("^1[ERROR] " + _0x552e10, ..._0x5ad8b9, "^0");
      }
    };
    var _0x28a8c4 = {};
    var _0xec56c6 = {
      MathUtils: () => _0x34b55b
    };
    _0x32d167(_0x28a8c4, _0xec56c6);
    var _0x968890;
    var _0x314ee5;
    var _0x1685ed = class _0x8824b9 {
      constructor(_0x53990c, _0x38cdf2, _0x4872e3) {
        _0x3c2f92(this, _0x968890);
        const _0x5a9bf = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0x53990c, _0x38cdf2, _0x4872e3);
        this.x = _0x5a9bf.x;
        this.y = _0x5a9bf.y;
        this.z = _0x5a9bf.z;
      }
      equals(_0x6daa75, _0x104f68, _0x322852) {
        const _0x3b87de = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0x6daa75, _0x104f68, _0x322852);
        return this.x === _0x3b87de.x && this.y === _0x3b87de.y && this.z === _0x3b87de.z;
      }
      add(_0x1dd60e, _0x2cc8fe, _0x596cb1, _0x5ddd3c) {
        let _0x51a5a4 = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0x1dd60e, _0x2cc8fe, _0x596cb1);
        this.x += _0x5ddd3c ? _0x51a5a4.x * _0x5ddd3c : _0x51a5a4.x;
        this.y += _0x5ddd3c ? _0x51a5a4.y * _0x5ddd3c : _0x51a5a4.y;
        this.z += _0x5ddd3c ? _0x51a5a4.z * _0x5ddd3c : _0x51a5a4.z;
        return this;
      }
      addScalar(_0x13b1ef) {
        if (typeof _0x13b1ef !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x += _0x13b1ef;
        this.y += _0x13b1ef;
        this.z += _0x13b1ef;
        return this;
      }
      sub(_0x693716, _0x55b260, _0x5e5a7c, _0x3643ba) {
        const _0x497d6 = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0x693716, _0x55b260, _0x5e5a7c);
        this.x -= _0x3643ba ? _0x497d6.x * _0x3643ba : _0x497d6.x;
        this.y -= _0x3643ba ? _0x497d6.y * _0x3643ba : _0x497d6.y;
        this.z -= _0x3643ba ? _0x497d6.z * _0x3643ba : _0x497d6.z;
        return this;
      }
      subScalar(_0x4da96d) {
        if (typeof _0x4da96d !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x -= _0x4da96d;
        this.y -= _0x4da96d;
        this.z -= _0x4da96d;
        return this;
      }
      multiply(_0x587460, _0x5f2093, _0x36da68) {
        const _0x58a4eb = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0x587460, _0x5f2093, _0x36da68);
        this.x *= _0x58a4eb.x;
        this.y *= _0x58a4eb.y;
        this.z *= _0x58a4eb.z;
        return this;
      }
      multiplyScalar(_0x1c223a) {
        if (typeof _0x1c223a !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x *= _0x1c223a;
        this.y *= _0x1c223a;
        this.z *= _0x1c223a;
        return this;
      }
      divide(_0xab6cd2, _0x2d292d, _0x3dbd8a) {
        const _0x77c82d = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0xab6cd2, _0x2d292d, _0x3dbd8a);
        this.x /= _0x77c82d.x;
        this.y /= _0x77c82d.y;
        this.z /= _0x77c82d.z;
        return this;
      }
      divideScalar(_0x4eccab) {
        if (typeof _0x4eccab !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x /= _0x4eccab;
        this.y /= _0x4eccab;
        this.z /= _0x4eccab;
        return this;
      }
      round() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
      }
      floor() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
      }
      ceil() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
      }
      getCenter(_0x43fce7, _0x5e4088, _0x524933) {
        const _0x26d28e = _0x2786ff(this, _0x968890, _0x314ee5).call(this, _0x43fce7, _0x5e4088, _0x524933);
        return new _0x8824b9((this.x + _0x26d28e.x) / 2, (this.y + _0x26d28e.y) / 2, (this.z + _0x26d28e.z) / 2);
      }
      getDistance(_0x21985a, _0x1afc95, _0x31eb67) {
        const [_0x317fa6, _0x5d9960, _0x279f28] = _0x21985a instanceof Array ? _0x21985a : typeof _0x21985a === "object" ? [_0x21985a.x, _0x21985a.y, _0x21985a.z] : [_0x21985a, _0x1afc95, _0x31eb67];
        if (typeof _0x317fa6 !== "number" || typeof _0x5d9960 !== "number" || typeof _0x279f28 !== "number") {
          throw new Error("Invalid vector coordinates");
        }
        const [_0x1251f8, _0x2ddbe9, _0x34867a] = [this.x - _0x317fa6, this.y - _0x5d9960, this.z - _0x279f28];
        return Math.sqrt(_0x1251f8 * _0x1251f8 + _0x2ddbe9 * _0x2ddbe9 + _0x34867a * _0x34867a);
      }
      toArray(_0x549513) {
        if (typeof _0x549513 === "number") {
          return [parseFloat(this.x.toFixed(_0x549513)), parseFloat(this.y.toFixed(_0x549513)), parseFloat(this.z.toFixed(_0x549513))];
        }
        return [this.x, this.y, this.z];
      }
      toJSON(_0x4f9a42) {
        if (typeof _0x4f9a42 === "number") {
          return {
            x: parseFloat(this.x.toFixed(_0x4f9a42)),
            y: parseFloat(this.y.toFixed(_0x4f9a42)),
            z: parseFloat(this.z.toFixed(_0x4f9a42))
          };
        }
        var _0x268160 = {
          x: this.x,
          y: this.y,
          z: this.z
        };
        return _0x268160;
      }
      toString(_0x9672cc) {
        return JSON.stringify(this.toJSON(_0x9672cc));
      }
    };
    _0x968890 = new WeakSet();
    _0x314ee5 = function (_0x2c786d, _0xadb1d7, _0x4e339f) {
      let _0x1abcac = {
        x: 0,
        y: 0,
        z: 0
      };
      if (_0x2c786d instanceof _0x1685ed) {
        _0x1abcac = _0x2c786d;
      } else if (_0x2c786d instanceof Array) {
        var _0x3a9432 = {
          x: _0x2c786d[0],
          y: _0x2c786d[1],
          z: _0x2c786d[2]
        };
        _0x1abcac = _0x3a9432;
      } else if (typeof _0x2c786d === "object") {
        _0x1abcac = _0x2c786d;
      } else {
        var _0x2ca588 = {
          x: _0x2c786d,
          y: _0xadb1d7,
          z: _0x4e339f
        };
        _0x1abcac = _0x2ca588;
      }
      if (typeof _0x1abcac.x !== "number" || typeof _0x1abcac.y !== "number" || typeof _0x1abcac.z !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return _0x1abcac;
    };
    var _0x1a2750 = _0x1685ed;
    var _0x313126 = (_0x11017a, _0x11a565, _0x259bf8) => {
      return Math.min(Math.max(_0x11017a, _0x11a565), _0x259bf8);
    };
    var _0x3e6b61 = (_0x4c00e5, _0x28b125, _0x5d9368) => {
      return _0x28b125[0] + (_0x5d9368 - _0x4c00e5[0]) * (_0x28b125[1] - _0x28b125[0]) / (_0x4c00e5[1] - _0x4c00e5[0]);
    };
    var _0x524f81 = ([_0x87514c, _0x45d0b0, _0x5384b4], [_0x3d0541, _0x140aa2, _0x16f4c8]) => {
      const [_0x471b85, _0x14e4be, _0x2d9416] = [_0x87514c - _0x3d0541, _0x45d0b0 - _0x140aa2, _0x5384b4 - _0x16f4c8];
      return Math.sqrt(_0x471b85 * _0x471b85 + _0x14e4be * _0x14e4be + _0x2d9416 * _0x2d9416);
    };
    var _0x3ea1a0 = (_0x7c352c, _0x3d880a) => {
      if (_0x3d880a) {
        return Math.floor(Math.random() * (_0x3d880a - _0x7c352c + 1) + _0x7c352c);
      } else {
        return Math.floor(Math.random() * _0x7c352c);
      }
    };
    var _0x2eb0d3 = (_0x1f613d, _0x3ed73e, _0x5ae744) => {
      if (_0x1f613d instanceof _0x1a2750) {
        return _0x1f613d;
      } else if (_0x1f613d instanceof Array) {
        return new _0x1a2750(_0x1f613d);
      } else if (typeof _0x1f613d === "object") {
        return new _0x1a2750(_0x1f613d);
      }
      if (typeof _0x1f613d !== "number" || typeof _0x3ed73e !== "number" || typeof _0x5ae744 !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return new _0x1a2750(_0x1f613d, _0x3ed73e, _0x5ae744);
    };
    var _0x443a9a = {
      clamp: _0x313126,
      getMapRange: _0x3e6b61,
      getDistance: _0x524f81,
      getRandomNumber: _0x3ea1a0,
      parseVector3: _0x2eb0d3
    };
    var _0x34b55b = _0x443a9a;
    function _0x255531(_0x231752, _0x5e87a0) {
      const _0x4473ca = "_";
      const _0x4ab89a = _0x8084b9((_0x5ce091, _0x15f256, ..._0x5207d5) => {
        return _0x231752(_0x5ce091, ..._0x5207d5);
      }, _0x5e87a0);
      return {
        get: function (..._0x5f307f) {
          return _0x4ab89a.get(_0x4473ca, ..._0x5f307f);
        },
        reset: function () {
          _0x4ab89a.reset(_0x4473ca);
        }
      };
    }
    function _0x8084b9(_0x41c522, _0x390037) {
      const _0x36e8ab = _0x390037.timeToLive || 60000;
      const _0x24cfcb = {};
      async function _0x590b43(_0x362470, ..._0x3357e8) {
        let _0x41f8c2 = _0x24cfcb[_0x362470];
        if (!_0x41f8c2) {
          _0x41f8c2 = {
            value: null,
            lastUpdated: 0
          };
          _0x24cfcb[_0x362470] = _0x41f8c2;
        }
        const _0x397255 = Date.now();
        if (_0x41f8c2.lastUpdated === 0 || _0x397255 - _0x41f8c2.lastUpdated > _0x36e8ab) {
          const [_0x1e7c95, _0xf7e886] = await _0x41c522(_0x41f8c2, _0x362470, ..._0x3357e8);
          if (_0x1e7c95) {
            _0x41f8c2.lastUpdated = _0x397255;
            _0x41f8c2.value = _0xf7e886;
          }
          return _0xf7e886;
        }
        return await new Promise(_0x4757d1 => setTimeout(() => _0x4757d1(_0x41f8c2.value), 0));
      }
      return {
        get: async function (_0x4a01a2, ..._0x318df0) {
          return await _0x590b43(_0x4a01a2, ..._0x318df0);
        },
        reset: function (_0x3277a2) {
          const _0x1cb60f = _0x24cfcb[_0x3277a2];
          if (_0x1cb60f) {
            _0x1cb60f.lastUpdated = 0;
          }
        }
      };
    }
    function _0x154a19() {
      if (typeof global.crypto === "object") {
        return _0x247fca();
      } else {
        return new _0xdddd5a(4).toString();
      }
    }
    function _0x1e1fd5(_0x5bfbb4) {
      return _0x5a4288(_0x5bfbb4, _0x5a4288.URL);
    }
    function _0x49ff2c(_0x55f493, _0x4341a8) {
      return new Promise((_0x537d88, _0x53ec22) => {
        const _0x591118 = Date.now();
        const _0x31e7d1 = setInterval(() => {
          const _0x43413e = Date.now() - _0x591118 > _0x4341a8;
          if (_0x55f493() || _0x43413e) {
            clearInterval(_0x31e7d1);
            return _0x537d88(_0x43413e);
          }
        }, 1);
      });
    }
    function _0x17b2eb(_0x46aaa6) {
      return new Promise(_0x427d1a => setTimeout(() => _0x427d1a(), _0x46aaa6));
    }
    function _0xa34edb() {
      return _0x17b2eb(0);
    }
    var _0x507bff = {
      cache: _0x255531,
      cacheableMap: _0x8084b9,
      waitForCondition: _0x49ff2c,
      getUUID: _0x154a19,
      getStringHash: _0x1e1fd5,
      wait: _0x17b2eb,
      waitForNextFrame: _0xa34edb,
      deflate: _0x26a22d,
      inflate: _0x30b87f,
      ..._0x28a8c4
    };
    var _0x1532be = _0x507bff;
    var _0x236b5b;
    var _0x45ca05;
    var _0x54b0f7 = class {
      constructor(_0x438f41) {
        _0x3c2f92(this, _0x236b5b, undefined);
        _0x3c2f92(this, _0x45ca05, undefined);
        _0x55ff33(this, _0x45ca05, _0x438f41 ?? 5);
        _0x55ff33(this, _0x236b5b, new Map());
      }
      setTTL(_0x5e76f3) {
        _0x55ff33(this, _0x45ca05, _0x5e76f3);
      }
      set(_0xf58510, _0x1fd79c, _0x596d9a) {
        _0x30b1e5(this, _0x236b5b).set(_0xf58510, {
          value: _0x1fd79c,
          expiration: Date.now() + (_0x596d9a ?? _0x30b1e5(this, _0x45ca05)) * 1000
        });
        return this;
      }
      get(_0x2d1d5b, _0x27c574 = false) {
        const _0x533f3a = _0x30b1e5(this, _0x236b5b).get(_0x2d1d5b);
        const _0x2fb8fb = _0x533f3a ? _0x27c574 ? true : _0x533f3a.expiration > Date.now() : false;
        if (!_0x533f3a || !_0x2fb8fb) {
          if (_0x533f3a) {
            _0x30b1e5(this, _0x236b5b).delete(_0x2d1d5b);
          }
          return;
        }
        return _0x533f3a.value;
      }
      has(_0x2fb297, _0x58317c = false) {
        const _0x2822a5 = _0x30b1e5(this, _0x236b5b).get(_0x2fb297);
        const _0x508902 = _0x2822a5 ? _0x58317c ? true : _0x2822a5.expiration > Date.now() : false;
        if (_0x2822a5 && !_0x508902) {
          _0x30b1e5(this, _0x236b5b).delete(_0x2fb297);
        }
        return _0x508902;
      }
      delete(_0x18873f) {
        return _0x30b1e5(this, _0x236b5b).delete(_0x18873f);
      }
      clear() {
        _0x30b1e5(this, _0x236b5b).clear();
      }
      values(_0x69613f = false) {
        const _0x20e8e6 = [];
        const _0x4cc634 = Date.now();
        for (const _0x37f7b3 of _0x30b1e5(this, _0x236b5b).values()) {
          if (_0x69613f || _0x37f7b3.expiration > _0x4cc634) {
            _0x20e8e6.push(_0x37f7b3.value);
          }
        }
        return _0x20e8e6;
      }
      keys(_0x4746e6 = false) {
        const _0x1b7aaa = [];
        const _0x58577b = Date.now();
        for (const [_0x542cc6, _0x5a4a87] of _0x30b1e5(this, _0x236b5b).entries()) {
          if (_0x4746e6 || _0x5a4a87.expiration > _0x58577b) {
            _0x1b7aaa.push(_0x542cc6);
          }
        }
        return _0x1b7aaa;
      }
      entries(_0x1e6226 = false) {
        const _0x458343 = [];
        const _0x23c7aa = Date.now();
        for (const [_0x4b5a42, _0x590da8] of _0x30b1e5(this, _0x236b5b).entries()) {
          if (_0x1e6226 || _0x590da8.expiration > _0x23c7aa) {
            _0x458343.push([_0x4b5a42, _0x590da8.value]);
          }
        }
        return _0x458343;
      }
    };
    _0x236b5b = new WeakMap();
    _0x45ca05 = new WeakMap();
    var _0x2422a0 = (_0x312bee => {
      _0x312bee[_0x312bee.hat = 0] = "hat";
      _0x312bee[_0x312bee.mask = 1] = "mask";
      _0x312bee[_0x312bee.glasses = 2] = "glasses";
      _0x312bee[_0x312bee.armor = 3] = "armor";
      _0x312bee[_0x312bee.shoes = 4] = "shoes";
      _0x312bee[_0x312bee.idcard = 5] = "idcard";
      _0x312bee[_0x312bee.mobilephone = 6] = "mobilephone";
      _0x312bee[_0x312bee.keyring = 7] = "keyring";
      _0x312bee[_0x312bee.bankcard = 8] = "bankcard";
      _0x312bee[_0x312bee.backpack = 9] = "backpack";
      return _0x312bee;
    })(_0x2422a0 || {});
    var _0x2ad745 = {};
    var _0x4c866e = (_0x48fb6e, _0x419489) => "__cfx_export_" + _0x48fb6e + "_" + _0x419489;
    var _0x3221b1 = new Proxy((_0xa56bf8, _0x4735fb) => {
      const _0x1187ed = (_0x180c21, ..._0x4d8e08) => {
        const _0x2a1b5c = _0x4735fb(..._0x4d8e08);
        if (_0x2a1b5c instanceof Promise) {
          _0x2a1b5c.then(_0x5ac4f9 => _0x180c21(_0x5ac4f9));
        } else {
          _0x180c21(_0x2a1b5c);
        }
      };
      const _0x5b2967 = GetCurrentResourceName();
      if (_0x5b2967 == undefined) {
        throw new Error("Failed to get resource name, are you sure you are using this in a fivem resource?");
      }
      on(_0x4c866e(_0x5b2967, _0xa56bf8), _0x4d68ad => {
        _0x4d68ad(_0x1187ed);
      });
    }, {
      apply: (_0xed7a94, _0x3f8062, _0x4b5c9f) => {
        _0xed7a94(..._0x4b5c9f);
      },
      get: (_0x63bd76, _0x1cc01f) => {
        if (_0x2ad745[_0x1cc01f] == undefined) {
          _0x2ad745[_0x1cc01f] = {};
        }
        return new Proxy({}, {
          get: (_0x593c3a, _0x5ae353) => {
            const _0x5ab949 = _0x5ae353 + "_async";
            return (..._0xa71700) => {
              return new Promise(async (_0x599139, _0x6f81fa) => {
                const _0x42cec3 = await _0x1532be.waitForCondition(() => GetResourceState(_0x1cc01f) === "started", 60000);
                if (_0x42cec3) {
                  return _0x6f81fa("Resource " + _0x1cc01f + " is not running");
                }
                if (_0x2ad745[_0x1cc01f][_0x5ab949] === undefined) {
                  emit(_0x4c866e(_0x1cc01f, _0x5ae353), _0x2fba5b => {
                    _0x2ad745[_0x1cc01f][_0x5ab949] = _0x2fba5b;
                  });
                  const _0x3c1157 = await _0x1532be.waitForCondition(() => _0x2ad745[_0x1cc01f][_0x5ab949] !== undefined, 1000);
                  if (_0x3c1157) {
                    return _0x6f81fa("Failed to get export " + _0x5ae353 + " from resource " + _0x1cc01f);
                  }
                }
                try {
                  _0x2ad745[_0x1cc01f][_0x5ab949](_0x599139, ..._0xa71700);
                } catch (_0x47b079) {
                  _0x6f81fa(_0x47b079);
                }
              });
            };
          }
        });
      }
    });
    var _0x45173c = new Proxy((_0x5a2664, _0x13ea89) => {
      const _0x5a8104 = GetCurrentResourceName();
      if (_0x5a8104 == undefined) {
        throw new Error("Failed to get resource name, are you sure you are using this in a fivem resource?");
      } else if (typeof _0x13ea89 !== "function") {
        throw new Error("Callback is not a function");
      } else if (typeof _0x5a2664 !== "string") {
        throw new Error("Export name must be a string");
      }
      on(_0x4c866e(_0x5a8104, _0x5a2664), _0x13f893 => {
        _0x13f893(_0x13ea89);
      });
    }, {
      apply: (_0xdfc0af, _0x11cdd9, _0x5711f5) => {
        _0xdfc0af(..._0x5711f5);
      },
      get: (_0x5387cb, _0x5d276e) => {
        if (_0x2ad745[_0x5d276e] == undefined) {
          _0x2ad745[_0x5d276e] = {};
        }
        return new Proxy({}, {
          get: (_0x7221bd, _0x2fe030) => {
            const _0x1626da = _0x2fe030 + "_sync";
            if (_0x2ad745[_0x5d276e][_0x1626da] === undefined) {
              emit(_0x4c866e(_0x5d276e, _0x2fe030), _0x27be28 => {
                _0x2ad745[_0x5d276e][_0x1626da] = _0x27be28;
              });
              if (_0x2ad745[_0x5d276e][_0x1626da] === undefined) {
                if (GetResourceState(_0x5d276e) !== "started") {
                  throw new Error("Resource " + _0x5d276e + " is not running");
                } else {
                  throw new Error("No such export " + _0x2fe030 + " in resource " + _0x5d276e);
                }
              }
            }
            return (..._0x2ec884) => {
              try {
                return _0x2ad745[_0x5d276e][_0x1626da](..._0x2ec884);
              } catch (_0x5330d4) {
                throw new Error("An error occurred while calling export " + _0x2fe030 + " of resource " + _0x5d276e + " - see above for details");
              }
            };
          }
        });
      }
    });
    on("onResourceStop", _0x4fc583 => _0x2ad745[_0x4fc583] = undefined);
    var _0x11ab85 = {
      Async: _0x3221b1,
      Sync: _0x45173c
    };
    var _0x15a991 = _0x11ab85;
    var _0x232d46 = _0x509264(_0x18e665());
    var _0x377c45;
    var _0x2c764e;
    var _0x5b3bd1;
    var _0x4ae048;
    var _0x465d64;
    var _0x14971d;
    var _0x1118b3;
    var _0x139982;
    var _0x3c7752;
    var _0xd510ac;
    var _0x5dfac7;
    var _0x174546;
    var _0x4ca3c6;
    var _0x3482e0;
    var _0x3ccdd7;
    var _0x7d51c;
    var _0x18b28;
    var _0x30f1be;
    var _0x55c657;
    var _0x1ac1f5;
    var _0x3edce0 = class {
      constructor(_0x361236, _0x2a4cbb) {
        _0x3c2f92(this, _0x465d64);
        _0x3c2f92(this, _0x1118b3);
        _0x3c2f92(this, _0x3c7752);
        _0x3c2f92(this, _0x5dfac7);
        _0x3c2f92(this, _0x4ca3c6);
        _0x3c2f92(this, _0x3ccdd7);
        _0x3c2f92(this, _0x18b28);
        _0x3c2f92(this, _0x55c657);
        _0x3c2f92(this, _0x377c45, undefined);
        _0x3c2f92(this, _0x2c764e, undefined);
        _0x3c2f92(this, _0x5b3bd1, undefined);
        _0x3c2f92(this, _0x4ae048, {});
        const _0x4e86c1 = _0x2786ff(this, _0x4ca3c6, _0x3482e0).call(this, _0x361236);
        const _0x293fb5 = _0x2786ff(this, _0x18b28, _0x30f1be).call(this, _0x4e86c1, _0x2a4cbb);
        const [_0x2b03e5, _0x209aee, _0xada4dc] = _0x293fb5.split(":");
        _0x55ff33(this, _0x377c45, _0x2b03e5);
        _0x55ff33(this, _0x2c764e, _0x209aee);
        _0x55ff33(this, _0x5b3bd1, _0xada4dc);
      }
      hashString(_0x508d42) {
        var _0xe294f;
        const _0x19586f = _0x30b1e5(this, _0x465d64, _0x14971d);
        const _0x233ef6 = (_0xe294f = _0x30b1e5(this, _0x4ae048)[_0x19586f]) == null ? undefined : _0xe294f[_0x508d42];
        if (_0x233ef6) {
          return _0x233ef6;
        }
        if (!_0x30b1e5(this, _0x4ae048)[_0x19586f]) {
          _0x30b1e5(this, _0x4ae048)[_0x19586f] = {};
        }
        const _0x5b3ea7 = _0x2786ff(this, _0x5dfac7, _0x174546).call(this, (0, _0x232d46.HmacMD5)(_0x508d42, _0x19586f).toString());
        _0x30b1e5(this, _0x4ae048)[_0x19586f][_0x508d42] = _0x5b3ea7;
        if (IsDuplicityVersion()) {
          _0x3a2b64.log("[SDK] Hash Debug | Event: " + _0x508d42 + " | Hash: " + _0x5b3ea7);
        }
        return _0x5b3ea7;
      }
      encode(_0x451173) {
        let _0xa1f505;
        const _0x45511b = _0x30b1e5(this, _0x3c7752, _0xd510ac);
        try {
          _0xa1f505 = _0x2786ff(this, _0x3ccdd7, _0x7d51c).call(this, JSON.stringify(_0x451173), _0x45511b);
        } catch (_0x2a1e8e) {
          _0x3a2b64.error("Failed to encode payload");
        }
        return _0xa1f505;
      }
      decode(_0x4d3307) {
        let _0x3aa9ad;
        const _0x4a7986 = _0x30b1e5(this, _0x1118b3, _0x139982);
        try {
          _0x3aa9ad = JSON.parse(_0x2786ff(this, _0x18b28, _0x30f1be).call(this, _0x4d3307, _0x4a7986));
        } catch (_0x2c1113) {
          _0x3a2b64.error("Failed to decode payload");
        }
        return _0x3aa9ad;
      }
    };
    _0x377c45 = new WeakMap();
    _0x2c764e = new WeakMap();
    _0x5b3bd1 = new WeakMap();
    _0x4ae048 = new WeakMap();
    _0x465d64 = new WeakSet();
    _0x14971d = function () {
      return _0x30b1e5(this, _0x377c45) ?? _0x2786ff(this, _0x55c657, _0x1ac1f5).call(this);
    };
    _0x1118b3 = new WeakSet();
    _0x139982 = function () {
      return _0x30b1e5(this, _0x2c764e) ?? _0x2786ff(this, _0x55c657, _0x1ac1f5).call(this);
    };
    _0x3c7752 = new WeakSet();
    _0xd510ac = function () {
      return _0x30b1e5(this, _0x5b3bd1) ?? _0x2786ff(this, _0x55c657, _0x1ac1f5).call(this);
    };
    _0x5dfac7 = new WeakSet();
    _0x174546 = function (_0x3ab801) {
      if (typeof _0x3ab801 !== "string") {
        return "";
      }
      return _0x232d46.enc.Base64.stringify(_0x232d46.enc.Utf8.parse(_0x3ab801));
    };
    _0x4ca3c6 = new WeakSet();
    _0x3482e0 = function (_0x58a3dd) {
      if (typeof _0x58a3dd !== "string") {
        return "";
      }
      return _0x232d46.enc.Utf8.stringify(_0x232d46.enc.Base64.parse(_0x58a3dd));
    };
    _0x3ccdd7 = new WeakSet();
    _0x7d51c = function (_0x4ac0c5, _0x160e4d) {
      if (typeof _0x4ac0c5 !== "string" || typeof _0x160e4d !== "string") {
        return "";
      }
      return _0x232d46.AES.encrypt(_0x4ac0c5, _0x160e4d).toString();
    };
    _0x18b28 = new WeakSet();
    _0x30f1be = function (_0x5d829b, _0x42fa5b) {
      if (typeof _0x5d829b !== "string" || typeof _0x42fa5b !== "string") {
        return "";
      }
      return _0x232d46.AES.decrypt(_0x5d829b, _0x42fa5b).toString(_0x232d46.enc.Utf8);
    };
    _0x55c657 = new WeakSet();
    _0x1ac1f5 = function (_0x46e79d = 128) {
      return _0x232d46.lib.WordArray.random(_0x46e79d / 8).toString(_0x232d46.enc.Utf8);
    };
    var _0x2b3f26;
    var _0x6cf0f3 = class {
      constructor() {
        _0x3c2f92(this, _0x2b3f26, undefined);
        const _0x2503af = GetCurrentResourceName();
        const _0x3f1484 = _0x1532be.getStringHash("__npx_sdk:" + _0x2503af + ":token");
        const _0x552e1c = GetConvar(_0x3f1484, "");
        _0x55ff33(this, _0x2b3f26, new _0x3edce0(_0x552e1c, "0xA74A5D6"));
      }
      on(_0x1e7952, _0x29cb07) {
        const _0x5dcd4c = _0x30b1e5(this, _0x2b3f26).hashString(_0x1e7952);
        return on(_0x5dcd4c, _0x29cb07);
      }
      onNet(_0x37ed23, _0x299df9) {
        const _0x29496a = _0x30b1e5(this, _0x2b3f26).hashString(_0x37ed23);
        onNet(_0x29496a, _0x299df9);
        const _0x36c5db = _0x30b1e5(this, _0x2b3f26).hashString(_0x37ed23 + "-c");
        onNet(_0x36c5db, _0x36b7ce => {
          const _0x4f5a73 = _0x1532be.inflate(_0x36b7ce);
          const _0x45c8eb = msgpack_unpack(_0x4f5a73);
          return _0x299df9(..._0x45c8eb);
        });
      }
      emit(_0x6f6e5a, ..._0x1f6ac5) {
        const _0x64fbb2 = _0x30b1e5(this, _0x2b3f26).hashString(_0x6f6e5a);
        return emit(_0x64fbb2, ..._0x1f6ac5);
      }
      emitNet(_0x347891, ..._0x36f003) {
        let _0x718d9 = msgpack_pack(_0x36f003);
        let _0x59e3f6 = _0x718d9.length;
        const _0x5ba12e = _0x30b1e5(this, _0x2b3f26).hashString(_0x347891);
        if (_0x59e3f6 < 16000) {
          TriggerServerEventInternal(_0x5ba12e, _0x718d9, _0x718d9.length);
        } else {
          TriggerLatentServerEventInternal(_0x5ba12e, _0x718d9, _0x718d9.length, 128000);
        }
      }
    };
    _0x2b3f26 = new WeakMap();
    var _0x258945 = new _0x6cf0f3();
    var _0x231da4;
    var _0x47e395;
    var _0xf410ab;
    var _0x8e1c95;
    var _0x5ba73b;
    var _0x2bfb1d;
    var _0x2e9789;
    var _0x3e73c4;
    var _0x948f6a;
    var _0x50d253;
    var _0x4cacb8;
    var _0x4c18a6 = class {
      constructor() {
        _0x3c2f92(this, _0x2bfb1d);
        _0x3c2f92(this, _0x3e73c4);
        _0x3c2f92(this, _0x50d253);
        _0x3c2f92(this, _0x231da4, undefined);
        _0x3c2f92(this, _0x47e395, undefined);
        _0x3c2f92(this, _0xf410ab, undefined);
        _0x3c2f92(this, _0x8e1c95, undefined);
        _0x3c2f92(this, _0x5ba73b, undefined);
        _0x55ff33(this, _0x231da4, false);
        _0x55ff33(this, _0x47e395, new Map());
        _0x55ff33(this, _0xf410ab, GetGameTimer());
        _0x55ff33(this, _0x8e1c95, GetCurrentResourceName());
        const _0x7e82a6 = _0x1532be.getStringHash("__npx_sdk:" + _0x30b1e5(this, _0x8e1c95) + ":token");
        const _0x2037d4 = GetConvar(_0x7e82a6, "");
        _0x55ff33(this, _0x5ba73b, new _0x3edce0(_0x2037d4, "0xA74A5D6"));
        _0x2786ff(this, _0x50d253, _0x4cacb8).call(this);
      }
      register(_0x57d737, _0x355971) {
        _0x2786ff(this, _0x2bfb1d, _0x2e9789).call(this, "__rpc_req:" + _0x57d737, async (_0x5852cb, _0x4bc145) => {
          let _0x5c08e9;
          let _0x20072d;
          const _0x3e7d68 = GetInvokingResource();
          if (_0x3e7d68) {
            return;
          }
          const _0x300d7b = _0x30b1e5(this, _0x5ba73b).decode(_0x5852cb);
          if (!(_0x300d7b == null ? undefined : _0x300d7b.id) || !(_0x300d7b == null ? undefined : _0x300d7b.origin)) {
            return _0x3a2b64.error("[RPC] " + _0x57d737 + " - Invalid metadata received");
          }
          try {
            _0x5c08e9 = await _0x355971(..._0x4bc145);
            _0x20072d = true;
          } catch (_0x177631) {
            _0x5c08e9 = _0x177631.message;
            _0x20072d = false;
          }
          _0x2786ff(this, _0x3e73c4, _0x948f6a).call(this, "__rpc_res:" + _0x300d7b.origin, _0x300d7b.id, [_0x20072d, _0x5c08e9]);
        });
      }
      execute(_0x39a3d7, ..._0x4fc2d2) {
        const _0x4dbd39 = {
          id: ++_0x3bec04(this, _0xf410ab)._,
          origin: _0x30b1e5(this, _0x8e1c95)
        };
        const _0x27c43e = new Promise((_0x2da110, _0x13b1f4) => {
          let _0x4377b1 = +setTimeout(() => _0x13b1f4(new Error("RPC timed out | " + _0x39a3d7)), 60000);
          var _0x5dd3a1 = {
            resolve: _0x2da110,
            reject: _0x13b1f4,
            timeout: _0x4377b1
          };
          _0x30b1e5(this, _0x47e395).set(_0x4dbd39.id, _0x5dd3a1);
        });
        _0x27c43e.finally(() => _0x30b1e5(this, _0x47e395).delete(_0x4dbd39.id));
        _0x2786ff(this, _0x3e73c4, _0x948f6a).call(this, "__rpc_req:" + _0x39a3d7, _0x30b1e5(this, _0x5ba73b).encode(_0x4dbd39), _0x4fc2d2);
        return _0x27c43e;
      }
      executeCustom(_0x554cbe, _0x5c5ecf, ..._0x2b0a62) {
        const _0x5c7e23 = {
          id: ++_0x3bec04(this, _0xf410ab)._,
          origin: _0x30b1e5(this, _0x8e1c95)
        };
        const _0x1f4ecc = new Promise((_0x198649, _0x226fa6) => {
          let _0x3f735f = +setTimeout(() => _0x226fa6(new Error("RPC timed out | " + _0x554cbe)), _0x5c5ecf.timeout ?? 60000);
          var _0x48e935 = {
            resolve: _0x198649,
            reject: _0x226fa6,
            timeout: _0x3f735f
          };
          _0x30b1e5(this, _0x47e395).set(_0x5c7e23.id, _0x48e935);
        });
        _0x1f4ecc.finally(() => _0x30b1e5(this, _0x47e395).delete(_0x5c7e23.id));
        _0x2786ff(this, _0x3e73c4, _0x948f6a).call(this, "__rpc_req:" + _0x554cbe, _0x30b1e5(this, _0x5ba73b).encode(_0x5c7e23), _0x2b0a62);
        return _0x1f4ecc;
      }
    };
    _0x231da4 = new WeakMap();
    _0x47e395 = new WeakMap();
    _0xf410ab = new WeakMap();
    _0x8e1c95 = new WeakMap();
    _0x5ba73b = new WeakMap();
    _0x2bfb1d = new WeakSet();
    _0x2e9789 = function (_0x17194f, _0x3923b7) {
      const _0x4d578b = _0x30b1e5(this, _0x5ba73b).hashString(_0x17194f);
      onNet(_0x4d578b, _0x3923b7);
      const _0x3d964d = _0x30b1e5(this, _0x5ba73b).hashString(_0x17194f + "-c");
      onNet(_0x3d964d, _0x2d20b1 => {
        const _0x47b84f = _0x1532be.inflate(_0x2d20b1);
        const _0x2d19b0 = msgpack_unpack(_0x47b84f);
        return _0x3923b7(..._0x2d19b0);
      });
    };
    _0x3e73c4 = new WeakSet();
    _0x948f6a = function (_0x2708fa, ..._0x1b1fdc) {
      let _0x4fb318 = msgpack_pack(_0x1b1fdc);
      let _0x4a5cb5 = _0x4fb318.length;
      const _0x30ebab = _0x30b1e5(this, _0x5ba73b).hashString(_0x2708fa);
      if (_0x4a5cb5 < 16000) {
        TriggerServerEventInternal(_0x30ebab, _0x4fb318, _0x4fb318.length);
      } else {
        TriggerLatentServerEventInternal(_0x30ebab, _0x4fb318, _0x4fb318.length, 128000);
      }
    };
    _0x50d253 = new WeakSet();
    _0x4cacb8 = function () {
      if (_0x30b1e5(this, _0x231da4)) {
        return _0x3a2b64.error("SDK RPC handlers already initialized");
      }
      _0x2786ff(this, _0x2bfb1d, _0x2e9789).call(this, "__rpc_res:" + _0x30b1e5(this, _0x8e1c95), (_0x1d5556, [_0x336696, _0x2356a2]) => {
        const _0x2d771e = _0x30b1e5(this, _0x47e395).get(_0x1d5556);
        if (!_0x2d771e) {
          return;
        }
        clearTimeout(_0x2d771e.timeout);
        if (_0x336696) {
          _0x2d771e.resolve(_0x2356a2);
        } else {
          _0x2d771e.reject(new Error(_0x2356a2));
        }
      });
      _0x55ff33(this, _0x231da4, true);
      _0x3a2b64.debug("SDK RPC handlers initialized");
    };
    var _0x5d63de = new _0x4c18a6(); 
    var _0x31566b = _0x509264(_0x18e665());
    var _0x7e4c65 = (_0xb2f1e6 = 128) => {
      return _0x31566b.lib.WordArray.random(_0xb2f1e6 / 8).toString();
    };
    var _0x56fc0d = (_0x5f2a5d, _0x229cd1) => {
      if (typeof _0x5f2a5d !== "string" || typeof _0x229cd1 !== "string") {
        return "";
      }
      return _0x31566b.AES.encrypt(_0x5f2a5d, _0x229cd1).toString();
    };
    var _0x20c193 = (_0x3a0a9e, _0x3f9dfe) => {
      if (typeof _0x3a0a9e !== "string" || typeof _0x3f9dfe !== "string") {
        return "";
      }
      return _0x31566b.AES.decrypt(_0x3a0a9e, _0x3f9dfe).toString(_0x31566b.enc.Utf8);
    };
    var _0x3ece78 = _0x5558ab => {
      if (typeof _0x5558ab !== "string") {
        return "";
      }
      return _0x31566b.enc.Base64.stringify(_0x31566b.enc.Utf8.parse(_0x5558ab));
    };
    var _0x559413 = (_0x2992b1, _0x275ccc) => {
      return _0x3ece78((0, _0x31566b.HmacMD5)(_0x2992b1, _0x275ccc).toString());
    };
    var _0x1e8eb1 = {};
    var _0x357140 = (_0x1a403c, _0x38a84c = _0x7e4c65()) => {
      if (_0x1e8eb1[_0x1a403c] === undefined) {
        _0x1e8eb1[_0x1a403c] = _0x559413(_0x1a403c, _0x38a84c);
      }
      return _0x1e8eb1[_0x1a403c];
    };
    var _0x25a6f1 = (_0x367966, _0x2c5456 = _0x7e4c65()) => {
      try {
        return _0x56fc0d(JSON.stringify(_0x367966), _0x2c5456);
      } catch (_0x500cd7) {
        _0x3a2b64.error("Failed to encode payload");
      }
    };
    var _0x3cdfc9 = (_0xb5aebb, _0x3f12dd = _0x7e4c65()) => {
      try {
        return JSON.parse(_0x20c193(_0xb5aebb, _0x3f12dd));
      } catch (_0x20990d) {
        _0x3a2b64.error("Failed to decode payload");
      }
    };
    var _0x384326;
    var _0x4a0c1b;
    var _0x559c4a;
    var _0x4598f2;
    var _0x5e758f;
    var _0x1fd09b;
    var _0x2c1936;
    var _0x1576c5;
    var _0x191d42;
    var _0x13768e;
    var _0x2fbeeb;
    var _0x19ce41;
    var _0x2bffec;
    var _0x348990;
    var _0x4bf6ea;
    var _0x5e45d6;
    var _0xbb1f1c;
    var _0x5b45a8;
    var _0xbf8b1c = class {
      constructor() {
        _0x3c2f92(this, _0x191d42);
        _0x3c2f92(this, _0x2fbeeb);
        _0x3c2f92(this, _0x2bffec);
        _0x3c2f92(this, _0x4bf6ea);
        _0x3c2f92(this, _0xbb1f1c);
        _0x3c2f92(this, _0x384326, undefined);
        _0x3c2f92(this, _0x4a0c1b, undefined);
        _0x3c2f92(this, _0x559c4a, undefined);
        _0x3c2f92(this, _0x4598f2, undefined);
        _0x3c2f92(this, _0x5e758f, undefined);
        _0x3c2f92(this, _0x1fd09b, undefined);
        _0x3c2f92(this, _0x2c1936, undefined);
        _0x3c2f92(this, _0x1576c5, undefined);
        _0x55ff33(this, _0x384326, GetCurrentResourceName());
        _0x55ff33(this, _0x4a0c1b, _0x7e4c65(64));
        _0x55ff33(this, _0x559c4a, _0x7e4c65(64));
        _0x55ff33(this, _0x4598f2, _0x7e4c65(64));
        _0x55ff33(this, _0x5e758f, false);
        _0x55ff33(this, _0x1fd09b, 0);
        _0x55ff33(this, _0x2c1936, []);
        _0x55ff33(this, _0x1576c5, new Map());
        _0x2786ff(this, _0x191d42, _0x13768e).call(this, "__npx_sdk:init", _0x2786ff(this, _0xbb1f1c, _0x5b45a8).bind(this));
      }
      async register(_0x10113e, _0x3beb83) {
        _0x2786ff(this, _0x2fbeeb, _0x19ce41).call(this, "__nui_req:" + _0x10113e, async (_0x24cf7c, _0x5502df) => {
          let _0x30f156;
          let _0x311920;
          const _0x2afcbc = _0x3cdfc9(_0x24cf7c, _0x30b1e5(this, _0x559c4a));
          if (!(_0x2afcbc == null ? undefined : _0x2afcbc.id) || !(_0x2afcbc == null ? undefined : _0x2afcbc.resource)) {
            return _0x3a2b64.error("[NUI] " + _0x10113e + " - Invalid metadata received");
          }
          try {
            _0x30f156 = await _0x3beb83(..._0x5502df);
            _0x311920 = true;
          } catch (_0x42a9e9) {
            _0x30f156 = _0x42a9e9.message;
            _0x311920 = false;
          }
          _0x2786ff(this, _0x4bf6ea, _0x5e45d6).call(this, "__nui_res:" + _0x2afcbc.resource, _0x2afcbc.id, [_0x311920, _0x30f156]);
        });
      }
      async execute(_0x52b32f, ..._0x50bff1) {
        const _0x14870f = {
          id: ++_0x3bec04(this, _0x1fd09b)._,
          resource: _0x30b1e5(this, _0x384326)
        };
        const _0x25957a = new Promise((_0x49a982, _0xaa599e) => {
          let _0x2b3e39;
          if (_0x30b1e5(this, _0x5e758f)) {
            _0x2b3e39 = +setTimeout(() => _0xaa599e(new Error("RPC timed out | " + _0x52b32f)), 60000);
          } else {
            _0x2b3e39 = 0;
          }
          var _0x355acc = {
            resolve: _0x49a982,
            reject: _0xaa599e,
            timeout: _0x2b3e39
          };
          _0x30b1e5(this, _0x1576c5).set(_0x14870f.id, _0x355acc);
        });
        _0x25957a.finally(() => _0x30b1e5(this, _0x1576c5).delete(_0x14870f.id));
        if (!_0x30b1e5(this, _0x5e758f)) {
          var _0x3431e2 = {
            type: "execute",
            event: "__nui_req:" + _0x52b32f,
            metadata: _0x14870f,
            args: _0x50bff1
          };
          _0x30b1e5(this, _0x2c1936).push(_0x3431e2);
        } else {
          _0x2786ff(this, _0x4bf6ea, _0x5e45d6).call(this, "__nui_req:" + _0x52b32f, _0x25a6f1(_0x14870f, _0x30b1e5(this, _0x4598f2)), _0x50bff1);
        }
        return _0x25957a;
      }
    };
    _0x384326 = new WeakMap();
    _0x4a0c1b = new WeakMap();
    _0x559c4a = new WeakMap();
    _0x4598f2 = new WeakMap();
    _0x5e758f = new WeakMap();
    _0x1fd09b = new WeakMap();
    _0x2c1936 = new WeakMap();
    _0x1576c5 = new WeakMap();
    _0x191d42 = new WeakSet();
    _0x13768e = function (_0xb99af8, _0x1fa38f) {
      RegisterNuiCallback(_0xb99af8, ({
        args: _0x78de6f
      }, _0x292cee) => {
        _0x292cee(true);
        return _0x1fa38f(..._0x78de6f);
      });
    };
    _0x2fbeeb = new WeakSet();
    _0x19ce41 = function (_0x14611b, _0x223400) {
      if (_0x30b1e5(this, _0x5e758f)) {
        const _0x371ea2 = _0x357140(_0x14611b, _0x30b1e5(this, _0x4a0c1b));
        return _0x2786ff(this, _0x191d42, _0x13768e).call(this, _0x371ea2, _0x223400);
      }
      var _0x5da337 = {
        type: "on",
        event: _0x14611b,
        callback: _0x223400
      };
      _0x30b1e5(this, _0x2c1936).push(_0x5da337);
    };
    _0x2bffec = new WeakSet();
    _0x348990 = function (_0x96d2b3, ..._0x11a05d) {
      var _0x5322fa = {
        event: _0x96d2b3,
        args: _0x11a05d
      };
      SendNuiMessage(JSON.stringify(_0x5322fa, null));
    };
    _0x4bf6ea = new WeakSet();
    _0x5e45d6 = function (_0x1b6d57, ..._0x26ea2a) {
      if (_0x30b1e5(this, _0x5e758f)) {
        const _0x176209 = _0x357140(_0x1b6d57, _0x30b1e5(this, _0x4a0c1b));
        return _0x2786ff(this, _0x2bffec, _0x348990).call(this, _0x176209, ..._0x26ea2a);
      }
      var _0x185d94 = {
        type: "emit",
        event: _0x1b6d57,
        args: _0x26ea2a
      };
      _0x30b1e5(this, _0x2c1936).push(_0x185d94);
    };
    _0xbb1f1c = new WeakSet();
    _0x5b45a8 = async function () {
      if (_0x30b1e5(this, _0x5e758f)) {
        return _0x3a2b64.error("[NUI] SDK already initialized");
      }
      _0x55ff33(this, _0x5e758f, true);
      _0x2786ff(this, _0x2fbeeb, _0x19ce41).call(this, "__nui_res:" + _0x30b1e5(this, _0x384326), (_0x8e0a1d, [_0x195f02, _0xa19503]) => {
        const _0xad2aad = _0x30b1e5(this, _0x1576c5).get(_0x8e0a1d);
        if (!_0xad2aad) {
          return _0x3a2b64.error("[NUI] Invalid response received");
        }
        clearTimeout(_0xad2aad.timeout);
        if (_0x195f02) {
          _0xad2aad.resolve(_0xa19503);
        } else {
          _0xad2aad.reject(_0xa19503);
        }
      });
      _0x2786ff(this, _0x2bffec, _0x348990).call(this, "__npx_sdk:ready", _0x3ece78(_0x30b1e5(this, _0x4a0c1b) + ":" + _0x30b1e5(this, _0x559c4a) + ":" + _0x30b1e5(this, _0x4598f2)));
      _0x3a2b64.debug("[NUI] SDK initialized");
      for (const _0x11b9a1 of _0x30b1e5(this, _0x2c1936)) {
        if (_0x11b9a1.type === "on") {
          _0x2786ff(this, _0x2fbeeb, _0x19ce41).call(this, _0x11b9a1.event, _0x11b9a1.callback);
        } else if (_0x11b9a1.type === "emit") {
          setTimeout(() => _0x2786ff(this, _0x4bf6ea, _0x5e45d6).call(this, _0x11b9a1.event, ..._0x11b9a1.args), 1000);
        } else if (_0x11b9a1.type === "execute") {
          const _0x4a5d49 = _0x30b1e5(this, _0x1576c5).get(_0x11b9a1.metadata.id);
          if (!_0x4a5d49) {
            _0x3a2b64.error("[RPC] " + _0x11b9a1.event + " - Failed to execute queued RPC call");
            continue;
          }
          _0x4a5d49.timeout = +setTimeout(() => _0x4a5d49.reject(new Error("RPC timed out | " + _0x11b9a1.event)), 60000);
          setTimeout(() => _0x2786ff(this, _0x4bf6ea, _0x5e45d6).call(this, _0x11b9a1.event, _0x25a6f1(_0x11b9a1.metadata, _0x30b1e5(this, _0x4598f2)), _0x11b9a1.args), 1000);
        }
      }
    };
    var _0x282f6a = new _0xbf8b1c();
    var _0x258793;
    var _0x50ed50;
    var _0x595126;
    var _0x5b7b38 = class {
      constructor() {
        _0x3c2f92(this, _0x258793, undefined);
        _0x3c2f92(this, _0x50ed50, undefined);
        _0x3c2f92(this, _0x595126, undefined);
        _0x55ff33(this, _0x595126, false);
        _0x282f6a.register("__npx_sdk:sockets:init", async () => {
          _0x3a2b64.debug("Sockets", "Initializing sockets...");
          if (_0x30b1e5(this, _0x595126)) {
            return {
              url: _0x30b1e5(this, _0x258793),
              API_KEY: _0x30b1e5(this, _0x50ed50)
            };
          }
          const _0x5e2fa0 = await new Promise(_0x541b60 => {
            emit("__npx_core:sockets:init", _0x541b60);
          });
          if (!(_0x5e2fa0 == null ? undefined : _0x5e2fa0.API_URL) || !(_0x5e2fa0 == null ? undefined : _0x5e2fa0.API_KEY)) {
            return;
          }
          _0x55ff33(this, _0x258793, _0x5e2fa0.API_URL);
          _0x55ff33(this, _0x50ed50, _0x5e2fa0.API_KEY);
          _0x55ff33(this, _0x595126, true);
          _0x3a2b64.debug("Sockets", "Sockets initialized.");
          return _0x5e2fa0;
        });
      }
      register(_0x5d06be, _0x3e4901) {
        _0x282f6a.execute("__npx_sdk:sockets:register", _0x5d06be);
        _0x282f6a.register("__npx_sdk:sockets:pipe:" + _0x5d06be, async _0x213ff1 => {
          return _0x3e4901(_0x213ff1);
        });
      }
      async execute(_0x126fc7, _0x5d41f9) {
        return _0x282f6a.execute("__npx_sdk:sockets:execute", _0x126fc7, _0x5d41f9);
      }
    };
    _0x258793 = new WeakMap();
    _0x50ed50 = new WeakMap();
    _0x595126 = new WeakMap();
    var _0x1bf49f = new _0x5b7b38();
    var _0xb73ffb = {
      HasItem: async (_0x10ed89, _0x41d1ce) => {
        return await globalThis.exports.inventory.HasItem(_0x10ed89, _0x41d1ce);
      },
      GetItemStacks: async (_0x45b087, _0x147df1) => {
        return await globalThis.exports.inventory.GetItemStacks(_0x45b087, _0x147df1);
      },
      GetAllItemStacks: async _0x182fc4 => {
        return await globalThis.exports.inventory.GetAllItemStacks(_0x182fc4);
      },
      GetItemList: async () => {
        return await globalThis.exports.inventory.GetItemList();
      },
      GetPlayerInventories: async () => {
        return await globalThis.exports.inventory.GetPlayerInventories();
      },
      GetWeaponsList: () => {
        return globalThis.exports.inventory.GetWeaponsList();
      },
      GetWeapon: _0x3e28cd => {
        return globalThis.exports.inventory.GetWeapon(_0x3e28cd);
      },
      OpenInventory: (_0x420ca8, _0x17d835) => {
        globalThis.exports.inventory.OpenInventory(_0x420ca8, _0x17d835);
      },
      UseBodySlot: _0x31990f => {
        return _0x15a991.Async.inventory.UseBodySlot(_0x31990f);
      },
      SetBodySlotDisabled: (_0x2fc104, _0x5bb6d6, _0xd7324d) => {
        _0x15a991.Sync.inventory.SetBodySlotDisabled(_0x2fc104, _0x5bb6d6, _0xd7324d);
      },
      IsBodySlotDisabled: (_0x546be0, _0x2f99ea) => {
        return _0x15a991.Sync.inventory.IsBodySlotDisabled(_0x546be0, _0x2f99ea);
      }
    };
    var _0x2c27f4 = {};
    var _0x743337 = {
      Cache: () => _0x54b0f7,
      Thread: () => _0x3584c2,
      Vector3: () => _0x1a2750
    };
    _0x32d167(_0x2c27f4, _0x743337);
    var _0x3584c2 = class {
      constructor(_0x12e714, _0x53184d, _0x3d8220 = "interval") {
        this.callback = _0x12e714;
        this.delay = _0x53184d;
        this.mode = _0x3d8220;
        this.scheduled = {};
        this.tick = 0;
        this.data = {};
        this.active = false;
        this.aborted = false;
        this.hooks = new Map([["active", []], ["preStop", []], ["preStart", []], ["afterStop", []], ["afterStart", []], ["stopAborted", []], ["startAborted", []]]);
      }
      get isActive() {
        return this.active;
      }
      async start() {
        if (this.active) {
          return;
        }
        this.aborted = false;
        this.scheduled = {};
        const _0x1e3231 = this.hooks.get("preStart") ?? [];
        try {
          for (const _0x43c71c of _0x1e3231) {
            if (!this.aborted) {
              await _0x43c71c.call(this);
            }
          }
        } catch (_0x4a3cde) {
          this.aborted = true;
          _0x445531.log("Error while calling pre-start hook", _0x4a3cde.message);
        }
        if (this.aborted) {
          try {
            const _0x1c0f5d = this.hooks.get("startAborted") ?? [];
            for (const _0x29564c of _0x1c0f5d) {
              await _0x29564c.call(this);
            }
          } catch (_0x542c14) {
            _0x445531.log("Error while calling start-aborted hook", _0x542c14.message);
          }
          return;
        }
        this.active = true;
        const _0x3c97d4 = this.hooks.get("active") ?? [];
        switch (this.mode) {
          case "tick":
            {
              this.threadId = setTick(async () => {
                this.tick += 1;
                try {
                  await this.callback.call(this);
                  for (const _0x4529a7 of _0x3c97d4) {
                    await _0x4529a7.call(this);
                  }
                } catch (_0x1ca5af) {
                  _0x445531.log("Error while calling active hook", _0x1ca5af.message);
                }
                if (this.delay > 0) {
                  await new Promise(_0x4cc5ba => setTimeout(_0x4cc5ba, this.delay));
                }
              });
              break;
            }
          case "interval":
            {
              this.threadId = setInterval(async () => {
                this.tick += 1;
                try {
                  await this.callback.call(this);
                  for (const _0x240986 of _0x3c97d4) {
                    await _0x240986.call(this);
                  }
                } catch (_0x5cdfce) {
                  _0x445531.log("Error while calling active hook", _0x5cdfce.message);
                }
              }, this.delay);
              break;
            }
          case "timeout":
            {
              const _0xa40b85 = () => {
                if (this.active) {
                  this.threadId = setTimeout(async () => {
                    this.tick += 1;
                    try {
                      await this.callback.call(this);
                      for (const _0xc60208 of _0x3c97d4) {
                        await _0xc60208.call(this);
                      }
                    } catch (_0x3dccab) {
                      _0x445531.log("Error while calling active hook", _0x3dccab.message);
                    }
                    return _0xa40b85();
                  }, this.delay);
                }
              };
              _0xa40b85();
              break;
            }
        }
        const _0x40992a = this.hooks.get("afterStart") ?? [];
        try {
          for (const _0x38b0c4 of _0x40992a) {
            await _0x38b0c4.call(this);
          }
        } catch (_0x43a941) {
          _0x445531.log("Error while calling after-start hook", _0x43a941.message);
        }
      }
      async stop() {
        if (!this.active) {
          return;
        }
        const _0x2ed0b4 = this.hooks.get("preStop") ?? [];
        try {
          for (const _0x2b8d50 of _0x2ed0b4) {
            if (!this.aborted) {
              await _0x2b8d50.call(this);
            }
          }
        } catch (_0x2fdcc6) {
          this.aborted = true;
          _0x445531.log("Error while calling pre-stop hook", _0x2fdcc6.message);
        }
        this.active = false;
        switch (this.mode) {
          case "tick":
            {
              clearTick(this.threadId);
              break;
            }
          case "interval":
            {
              clearInterval(this.threadId);
              break;
            }
          case "timeout":
            {
              clearTimeout(this.threadId);
              break;
            }
        }
        if (this.aborted) {
          try {
            const _0x1053c4 = this.hooks.get("stopAborted") ?? [];
            for (const _0x893034 of _0x1053c4) {
              await _0x893034.call(this);
            }
          } catch (_0x45beb0) {
            _0x445531.log("Error while calling stop-aborted hook", _0x45beb0.message);
          }
          return;
        }
        const _0x38acb3 = this.hooks.get("afterStop") ?? [];
        try {
          for (const _0x5b6277 of _0x38acb3) {
            await _0x5b6277.call(this);
          }
        } catch (_0x7dfb98) {
          _0x445531.log("Error while calling after-stop hook", _0x7dfb98.message);
        }
      }
      abort() {
        this.aborted = true;
      }
      addHook(_0x283732, _0x3fd56a) {
        var _0x32d472;
        if ((_0x32d472 = this.hooks.get(_0x283732)) == null) {
          undefined;
        } else {
          _0x32d472.push(_0x3fd56a);
        }
      }
      setNextTick(_0x3e1038, _0x453475) {
        this.scheduled[_0x3e1038] = this.tick + _0x453475;
      }
      canTick(_0x4dc01d) {
        return this.scheduled[_0x4dc01d] === undefined || this.tick >= this.scheduled[_0x4dc01d];
      }
    };
    var _0x5042b8 = {};
    var _0x1606a2 = {
      GetEntityStateValue: () => _0x52ae28,
      GetPlayerStateValue: () => _0x433a9e,
      RegisterStatebagChangeHandler: () => _0x45761e,
      SetEntityStateValue: () => _0x375097,
      SetPlayerStateValue: () => _0x218d51
    };
    _0x32d167(_0x5042b8, _0x1606a2);
    var _0xd4ac43 = new _0x54b0f7(5000);
    function _0x145253(_0x4d7a40) {
      let _0x13aaaf = _0xd4ac43.get("ent-" + _0x4d7a40 + "}");
      if (_0x13aaaf) {
        return _0x13aaaf;
      }
      _0x13aaaf = Entity(_0x4d7a40);
      _0xd4ac43.set("ent-" + _0x4d7a40 + "}", _0x13aaaf);
      return _0x13aaaf;
    }
    function _0x52ae28(_0x45d4b4, _0x113246) {
      const _0x138ccd = _0x145253(_0x45d4b4);
      return _0x138ccd.state[_0x113246];
    }
    function _0x375097(_0x5404f7, _0x25653b, _0x46efd7, _0xbcff27 = false) {
      const _0x1c8965 = _0x145253(_0x5404f7);
      _0x1c8965.state.set(_0x25653b, _0x46efd7, _0xbcff27);
    }
    function _0x462b5b(_0x43ff3c) {
      let _0x539c54 = _0xd4ac43.get("ply-" + _0x43ff3c + "}");
      if (_0x539c54) {
        return _0x539c54;
      }
      _0x539c54 = Player(_0x43ff3c);
      _0xd4ac43.set("ply-" + _0x43ff3c + "}", _0x539c54);
      return _0x539c54;
    }
    function _0x433a9e(_0x3d763f, _0x1afddd) {
      const _0x2951c8 = _0x462b5b(_0x3d763f);
      return _0x2951c8.state[_0x1afddd];
    }
    function _0x218d51(_0x1c95bd, _0x3b83fc, _0x20a844, _0x25d203 = false) {
      const _0x3ab6d8 = _0x462b5b(_0x1c95bd);
      _0x3ab6d8.state.set(_0x3b83fc, _0x20a844, _0x25d203);
    }
    function _0x45761e(_0x2ec562, _0x4ecfa0, _0x238d9f, _0x42a05b) {
      return AddStateBagChangeHandler(_0x2ec562, null, async function (_0xa45654, _0x966a6a, _0x5c89a8, _0x10c0b4, _0x5d35a0) {
        if (_0x238d9f && !_0x5d35a0) {
          return;
        }
        const _0x22a1f6 = _0xa45654.startsWith("player");
        const _0x5cb68b = parseInt(_0xa45654.substring(7));
        const _0x112680 = _0x22a1f6 ? GetPlayerFromStateBagName(_0xa45654) : GetEntityFromStateBagName(_0xa45654);
        if (!_0x112680) {
          return;
        }
        const _0x1b326d = _0x22a1f6 ? NetworkGetPlayerIndexFromPed(_0x112680) === PlayerId() : NetworkGetEntityOwner(_0x112680) === PlayerId();
        if (_0x4ecfa0 && !_0x1b326d) {
          return;
        }
        _0x42a05b(_0x5cb68b, _0x112680, _0x5c89a8);
      });
    }
    var _0x549a9b = {};
    var _0x4450ee = {
      GetFuelLevel: () => _0x5de9a0,
      GetIdentifier: () => _0x20f94c,
      GetMetadata: () => _0x4e9acf,
      HasKey: () => _0x2c2294,
      IsVinScratched: () => _0x48203e,
      SwapSeat: () => _0x454b25,
      TurnOffEngine: () => _0x813323,
      TurnOnEngine: () => _0x17882f
    };
    _0x32d167(_0x549a9b, _0x4450ee);
    function _0x17882f(_0x39d32a) {
      _0x15a991.Sync["np-vehicles"].TurnOnEngine(_0x39d32a);
    }
    function _0x813323(_0x3a1fe8) {
      _0x15a991.Sync["np-vehicles"].TurnOffEngine(_0x3a1fe8);
    }
    function _0x2c2294(_0x4a5b4d) {
      return _0x15a991.Sync["np-vehicles"].HasVehicleKey(_0x4a5b4d);
    }
    function _0x4e9acf(_0x318905, _0x4aa14a) {
      const _0x59e15f = _0x52ae28(_0x318905, "data");
      if (_0x4aa14a) {
        if (_0x59e15f == null) {
          return undefined;
        } else {
          return _0x59e15f[_0x4aa14a];
        }
      } else {
        return _0x59e15f;
      }
    }
    function _0x20f94c(_0x44f3e4) {
      return _0x52ae28(_0x44f3e4, "vin");
    }
    function _0x48203e(_0x485017) {
      return _0x52ae28(_0x485017, "vinScratched");
    }
    function _0x454b25(_0x1516a7, _0x294128) {
      _0x15a991.Sync["np-vehicles"].SwapVehicleSeat(_0x1516a7, _0x294128);
    }
    function _0x5de9a0(_0x3d4022) {
      return _0x4e9acf(_0x3d4022, "fuel") ?? 0;
    }
    var _0x150d4e = async _0x42a0ab => {
      const _0x30ce52 = typeof _0x42a0ab === "number" ? _0x42a0ab : GetHashKey(_0x42a0ab);
      if (HasModelLoaded(_0x30ce52)) {
        return true;
      }
      RequestModel(_0x30ce52);
      const _0x33317c = await _0x1532be.waitForCondition(() => HasModelLoaded(_0x30ce52), 3000);
      return !_0x33317c;
    };
    var _0x54f3b2 = async _0x499817 => {
      if (HasAnimDictLoaded(_0x499817)) {
        return true;
      }
      RequestAnimDict(_0x499817);
      const _0x129e1b = await _0x1532be.waitForCondition(() => HasAnimDictLoaded(_0x499817), 3000);
      return !_0x129e1b;
    };
    var _0xa5cc0b = async _0x4cb079 => {
      if (HasClipSetLoaded(_0x4cb079)) {
        return true;
      }
      RequestClipSet(_0x4cb079);
      const _0x4bf3fa = await _0x1532be.waitForCondition(() => HasClipSetLoaded(_0x4cb079), 3000);
      return !_0x4bf3fa;
    };
    var _0x1158a0 = async _0x292013 => {
      if (HasStreamedTextureDictLoaded(_0x292013)) {
        return true;
      }
      RequestStreamedTextureDict(_0x292013, true);
      const _0xd0436 = await _0x1532be.waitForCondition(() => HasStreamedTextureDictLoaded(_0x292013), 3000);
      return !_0xd0436;
    };
    var _0x10bab6 = async (_0x13c70e, _0x1ed010, _0xfb0c8c) => {
      const _0x1f9643 = typeof _0x13c70e === "number" ? _0x13c70e : GetHashKey(_0x13c70e);
      if (HasWeaponAssetLoaded(_0x1f9643)) {
        return true;
      }
      RequestWeaponAsset(_0x1f9643, _0x1ed010, _0xfb0c8c);
      const _0x408f7f = await _0x1532be.waitForCondition(() => HasWeaponAssetLoaded(_0x1f9643), 3000);
      return !_0x408f7f;
    };
    var _0x567573 = async _0x3fd3bc => {
      if (HasNamedPtfxAssetLoaded(_0x3fd3bc)) {
        return true;
      }
      RequestNamedPtfxAsset(_0x3fd3bc);
      const _0x4b7242 = await _0x1532be.waitForCondition(() => HasNamedPtfxAssetLoaded(_0x3fd3bc), 3000);
      return !_0x4b7242;
    };
    var _0x5b9336 = {
      loadModel: _0x150d4e,
      loadTexture: _0x1158a0,
      loadAnim: _0x54f3b2,
      loadClipSet: _0xa5cc0b,
      loadWeaponAsset: _0x10bab6,
      loadNamedPtfxAsset: _0x567573
    };
    var _0x4b35c0 = _0x5b9336;
    var _0x3b6e5c = (_0x495027, ..._0x500837) => {
      switch (_0x495027) {
        case "coord":
          {
            const [_0xf36569, _0x22439a, _0x426f85] = _0x500837;
            return AddBlipForCoord(_0xf36569, _0x22439a, _0x426f85);
          }
        case "area":
          {
            const [_0xffc3d9, _0x4d7067, _0x50b824, _0xd2b188, _0x40bdd5] = _0x500837;
            return AddBlipForArea(_0xffc3d9, _0x4d7067, _0x50b824, _0xd2b188, _0x40bdd5);
          }
        case "radius":
          {
            const [_0x4ca042, _0x8c3e65, _0x2a2a78, _0x299b96] = _0x500837;
            return AddBlipForRadius(_0x4ca042, _0x8c3e65, _0x2a2a78, _0x299b96);
          }
        case "pickup":
          {
            const [_0x52c256] = _0x500837;
            return AddBlipForPickup(_0x52c256);
          }
        case "entity":
          {
            const [_0x4b5084] = _0x500837;
            return AddBlipForEntity(_0x4b5084);
          }
        default:
          {
            _0x445531.error(new Error("Invalid Blip Type"));
            return 0;
          }
      }
    };
    var _0x1372a0 = (_0x44a7b6, _0x586201, _0x3d9dcb, _0x5b5d82, _0x3d8f35, _0x4cbbe0, _0x37e179, _0x4108d9) => {
      if (typeof _0x3d9dcb === "number") {
        SetBlipSprite(_0x44a7b6, _0x3d9dcb);
      }
      if (typeof _0x5b5d82 === "number") {
        SetBlipColour(_0x44a7b6, _0x5b5d82);
      }
      if (typeof _0x3d8f35 === "number") {
        SetBlipAlpha(_0x44a7b6, _0x3d8f35);
      }
      if (typeof _0x4cbbe0 === "number") {
        SetBlipScale(_0x44a7b6, _0x4cbbe0);
      }
      if (typeof _0x37e179 === "boolean") {
        SetBlipRoute(_0x44a7b6, _0x37e179);
      }
      if (typeof _0x4108d9 === "boolean") {
        SetBlipAsShortRange(_0x44a7b6, _0x4108d9);
      }
      if (typeof _0x586201 === "string") {
        BeginTextCommandSetBlipName("STRING");
        AddTextComponentString(_0x586201);
        EndTextCommandSetBlipName(_0x44a7b6);
      }
    };
    var _0x3eaeb8 = {
      createBlip: _0x3b6e5c,
      applyBlipSettings: _0x1372a0
    };
    var _0x2c7c9b = _0x3eaeb8;
    var _0x40516c = new Set();
    var _0x48cc05 = new Map();
    var _0x46ed2b = new Set();
    var _0x3ce4ce = GetCurrentResourceName();
    on("np-polyzone:enter", (_0x3b573a, _0x490ec3) => {
      _0x40516c.add(_0x3b573a);
      if (_0x490ec3 == null ? undefined : _0x490ec3.id) {
        _0x40516c.add(_0x3b573a + "-" + _0x490ec3.id);
      }
      if (_0x46ed2b.has(_0x3b573a)) {
        _0x258945.emitNet("__sdk:zones:" + _0x3b573a + ":enter", _0x490ec3);
      }
      const _0x1bbf33 = _0x48cc05.get(_0x3b573a + "-enter");
      if (_0x1bbf33 === undefined) {
        return;
      }
      for (const _0x34c33f of _0x1bbf33) {
        try {
          _0x34c33f(_0x490ec3);
        } catch (_0x56b628) {
          _0x445531.log(_0x56b628);
        }
      }
    });
    on("np-polyzone:exit", (_0x243dea, _0x4f247a) => {
      _0x40516c.delete(_0x243dea);
      if (_0x4f247a == null ? undefined : _0x4f247a.id) {
        _0x40516c.delete(_0x243dea + "-" + _0x4f247a.id);
      }
      if (_0x46ed2b.has(_0x243dea)) {
        _0x258945.emitNet("__sdk:zones:" + _0x243dea + ":exit", _0x4f247a);
      }
      const _0x4c2ac7 = _0x48cc05.get(_0x243dea + "-exit");
      if (_0x4c2ac7 === undefined) {
        return;
      }
      for (const _0x17fc72 of _0x4c2ac7) {
        try {
          _0x17fc72(_0x4f247a);
        } catch (_0xc3e305) {
          _0x445531.log(_0xc3e305);
        }
      }
    });
    _0x258945.onNet("__sdk:" + _0x3ce4ce + ":zones:add", _0xf72a93 => {
      _0xff63e2(_0xf72a93);
    });
    var _0x41d0d2 = (_0x3dac4a, _0x3fe92f) => {
      return _0x40516c.has(_0x3fe92f ? _0x3dac4a + "-" + _0x3fe92f : _0x3dac4a);
    };
    var _0x3abd36 = (_0x80f266, _0x4737cb) => {
      const _0x5d3a3f = _0x80f266 + "-enter";
      const _0x226aa5 = _0x48cc05.get(_0x5d3a3f) ?? [];
      if (!_0x48cc05.has(_0x5d3a3f)) {
        _0x48cc05.set(_0x5d3a3f, _0x226aa5);
      }
      _0x226aa5.push(_0x4737cb);
    };
    var _0x17f809 = (_0x228336, _0x2668d9) => {
      const _0x3972c0 = _0x228336 + "-exit";
      const _0x4790c0 = _0x48cc05.get(_0x3972c0) ?? [];
      if (!_0x48cc05.has(_0x3972c0)) {
        _0x48cc05.set(_0x3972c0, _0x4790c0);
      }
      _0x4790c0.push(_0x2668d9);
    };
    var _0x5833b1 = (_0x59a217, _0x4c65a5, _0xe31767, _0x403370, _0xc6e411 = {}) => {
      var _0x10c8f8 = {
        ..._0x403370
      };
      _0x10c8f8.data = _0xc6e411;
      _0x10c8f8.id = _0x59a217;
      const _0x5e7301 = _0x10c8f8;
      _0x5e7301.data.id = _0x59a217;
      exports["np-polyzone"].AddPolyZone(_0x4c65a5, _0xe31767, _0x5e7301);
    };
    var _0x3d79bf = (_0x34bde8, _0x111af2, _0x4e124e, _0x3b6378, _0x5a372a, _0x1e6a4a, _0xf09545 = {}) => {
      var _0x316c6c = {
        ..._0x1e6a4a
      };
      _0x316c6c.data = _0xf09545;
      _0x316c6c.id = _0x34bde8;
      const _0x1d2b05 = _0x316c6c;
      _0x1d2b05.data.id = _0x34bde8;
      exports["np-polyzone"].AddBoxZone(_0x111af2, _0x4e124e, _0x3b6378, _0x5a372a, _0x1d2b05);
    };
    var _0x40a305 = (_0x5f29e9, _0x35c2ad, _0x864816, _0x1d52e5, _0xb390cc, _0x267857, _0xb4f455 = {}) => {
      var _0x2e6bb8 = {
        ..._0x267857
      };
      _0x2e6bb8.data = _0xb4f455;
      _0x2e6bb8.id = _0x5f29e9;
      const _0x299f72 = _0x2e6bb8;
      _0x299f72.data.id = _0x5f29e9;
      exports["np-polytarget"].AddBoxZone(_0x35c2ad, _0x864816, _0x1d52e5, _0xb390cc, _0x299f72);
    };
    var _0x21b78e = (_0x284505, _0x2d6ea7, _0x26c92c, _0x310a71, _0x129c00, _0x55eba2 = {}) => {
      var _0x40ac58 = {
        ..._0x129c00
      };
      _0x40ac58.data = _0x55eba2;
      _0x40ac58.id = _0x284505;
      const _0x2bad3a = _0x40ac58;
      _0x2bad3a.data.id = _0x284505;
      exports["np-polyzone"].AddCircleZone(_0x2d6ea7, _0x26c92c, _0x310a71, _0x2bad3a);
    };
    var _0xc204cf = (_0x4c0f8a, _0xd3cb21, _0x272b0f, _0x44b169, _0x92a29f, _0x8fa544 = {}) => {
      var _0x569a12 = {
        ..._0x92a29f
      };
      _0x569a12.data = _0x8fa544;
      _0x569a12.id = _0x4c0f8a;
      const _0x2af163 = _0x569a12;
      _0x2af163.data.id = _0x4c0f8a;
      exports["np-polytarget"].AddCircleZone(_0xd3cb21, _0x272b0f, _0x44b169, _0x2af163);
    };
    var _0x47a656 = (_0x24cd0a, _0x44647c, _0xa2d53, _0x926d94, _0x47ba0e = {}) => {
      var _0x21bd49 = {
        ..._0x926d94
      };
      _0x21bd49.data = _0x47ba0e;
      const _0x1a7866 = _0x21bd49;
      _0x1a7866.data.id = _0x24cd0a;
      exports["np-polyzone"].AddEntityZone(_0x44647c, _0xa2d53, _0x1a7866);
    };
    var _0xff63e2 = _0x4f5bc4 => {
      switch (_0x4f5bc4.type) {
        case "circle":
          {
            const {
              type: _0x46ea13,
              id: _0x177d35,
              zone: _0x28a368,
              vectors: _0x4ada38,
              radius: _0x5aa70c,
              data: _0x41fc78,
              ..._0x3560ac
            } = _0x4f5bc4;
            _0x21b78e(_0x177d35, _0x28a368, _0x4ada38, _0x5aa70c, _0x3560ac, _0x41fc78);
            _0x46ed2b.add(_0x28a368);
            break;
          }
        case "box":
          {
            const {
              type: _0x1b7b8c,
              id: _0x287612,
              zone: _0x3183ee,
              vectors: _0x5b8d04,
              length: _0x5a6edf,
              width: _0x4d2e80,
              data: _0x21879e,
              ..._0xf5960f
            } = _0x4f5bc4;
            _0x3d79bf(_0x287612, _0x3183ee, _0x5b8d04, _0x5a6edf, _0x4d2e80, _0xf5960f, _0x21879e);
            _0x46ed2b.add(_0x3183ee);
            break;
          }
        case "poly":
          {
            const {
              type: _0xe0b012,
              id: _0x45d4ee,
              zone: _0x173ac4,
              vectors: _0x24a47c,
              data: _0x22c94d,
              ..._0x160b59
            } = _0x4f5bc4;
            _0x5833b1(_0x45d4ee, _0x173ac4, _0x24a47c, _0x160b59, _0x22c94d);
            _0x46ed2b.add(_0x173ac4);
            break;
          }
      }
    };
    var _0x3b9653 = (_0x31b301, _0x5184c3) => {
      exports["np-polyzone"].RemoveZone(_0x31b301, _0x5184c3);
      _0x40516c.delete(_0x31b301 + "-" + _0x5184c3);
      _0x46ed2b.delete(_0x31b301);
    };
    on("onResourceStart", async _0x10cc11 => {
      if (_0x3ce4ce !== _0x10cc11) {
        return;
      }
      // const _0x1420e6 = await NPX.Procedures.execute("__sdk:" + _0x3ce4ce + ":zones:fetch");
      // _0x3a2b64.debug("[np-polyzone] [" + _0x3ce4ce + "] Loaded " + _0x1420e6.length + " zones");
      // for (const _0x4994de of _0x1420e6) {
      //   _0xff63e2(_0x4994de);
      // }
    });
    var _0x435595 = {
      isActive: _0x41d0d2,
      onEnter: _0x3abd36,
      onExit: _0x17f809,
      addPolyZone: _0x5833b1,
      addBoxZone: _0x3d79bf,
      addBoxTarget: _0x40a305,
      addCircleZone: _0x21b78e,
      addCircleTarget: _0xc204cf,
      addEntityZone: _0x47a656,
      removeZone: _0x3b9653
    };
    var _0x2737df = _0x435595;
    var _0x504445 = (_0x8a1514, _0xcb32f1, _0x3b5834) => {
      globalThis.exports["np-interact"].AddPeekEntryByModel(_0x8a1514, _0xcb32f1, _0x3b5834);
    };
    var _0x22f744 = (_0x38eb19, _0x2b5916, _0x7534db) => {
      globalThis.exports["np-interact"].AddPeekEntryByPolyTarget(_0x38eb19, _0x2b5916, _0x7534db);
    };
    var _0x15576e = (_0x1c0da9, _0x17032e, _0x29bbd8) => {
      globalThis.exports["np-interact"].AddPeekEntryByFlag(_0x1c0da9, _0x17032e, _0x29bbd8);
    };
    var _0x18a1e5 = (_0x386d8a, _0x32ec34, _0xb750e5) => {
      globalThis.exports["np-interact"].AddPeekEntryByEntityType(_0x386d8a, _0x32ec34, _0xb750e5);
    };
    var _0x4a031a = (_0x4f4990, _0x543ad5, _0x4cdd44, _0x8f166e) => {
      var _0x133df1 = {
        id: _0x4f4990,
        coords: [_0x543ad5.x, _0x543ad5.y, _0x543ad5.z],
        options: _0x4cdd44,
        context: _0x8f166e
      };
      const _0x5f38c2 = _0x133df1;
      globalThis.exports.interactions.AddInteraction(_0x5f38c2);
    };
    var _0x3d8e68 = (_0x1c82c0, _0x32bdd5, _0x248a3b, _0x194c9f) => {
      var _0x43d68c = {
        id: _0x1c82c0,
        options: _0x248a3b,
        context: _0x194c9f
      };
      const _0x56b3f6 = _0x43d68c;
      globalThis.exports.interactions.AddInteractionByModel(_0x32bdd5, _0x56b3f6);
    };
    var _0x226b3c = (_0x53d8f5, _0x3cf3a8, _0x44e6ef) => {
      var _0xd27e92 = {
        id: _0x53d8f5,
        options: _0x3cf3a8,
        context: _0x44e6ef
      };
      const _0x145792 = _0xd27e92;
      _0x145792.context.isPlayer = true;
      globalThis.exports.interactions.AddPedInteraction(_0x145792);
    };
    var _0x2148be = (_0x3e7de8, _0x358e25, _0x37f7e1) => {
      var _0x4d04c9 = {
        id: _0x3e7de8,
        options: _0x358e25,
        context: _0x37f7e1
      };
      const _0x17400f = _0x4d04c9;
      globalThis.exports.interactions.AddPedInteraction(_0x17400f);
    };
    var _0x53f61b = (_0x206232, _0x2d76db, _0x46d532) => {
      var _0x6f2ee8 = {
        id: _0x206232,
        options: _0x2d76db,
        context: _0x46d532
      };
      const _0x5e24f8 = _0x6f2ee8;
      globalThis.exports.interactions.AddVehicleInteraction(_0x5e24f8);
    };
    var _0x3bc91a = _0x1ec4cc => {
      globalThis.exports.interactions.RemoveInteraction(_0x1ec4cc);
    };
    var _0x30455f = _0x48470e => {
      globalThis.exports.interactions.RemoveVehicleInteraction(_0x48470e);
    };
    var _0x5ad43c = _0x1b9b56 => {
      globalThis.exports.interactions.RemovePedInteraction(_0x1b9b56);
    };
    var _0x3b1895 = (_0x337a0c, _0x4472e1, _0x6b5a76 = false, _0x340dcd = null, _0x3953a0 = true, _0x563564 = null) => {
      return new Promise(_0x5b1fcf => {
        globalThis.exports["np-taskbar"].taskBar(_0x337a0c, _0x4472e1, _0x6b5a76, _0x3953a0, _0x563564, false, _0x5b1fcf, _0x340dcd == null ? undefined : _0x340dcd.distance, _0x340dcd == null ? undefined : _0x340dcd.entity);
      });
    };
    var _0x57612a = (_0x5e8f79, _0x234eca, _0x4d974f, _0x37d87c) => {
      return new Promise(_0x1f7f1a => {
        globalThis.exports["np-phone"].DoPhoneConfirmation(_0x5e8f79, _0x234eca, _0x4d974f, _0x1f7f1a, _0x37d87c);
      });
    };
    var _0x590c4c = (_0x13c9f6, _0x3224f0, _0x100d4d = true, _0x41a5ae = "home-screen") => {
      var _0x497aad = {
        action: "notification",
        target_app: _0x41a5ae,
        title: _0x13c9f6,
        body: _0x3224f0,
        show_even_if_app_active: _0x100d4d
      };
      var _0x5bd608 = {
        source: "np-nui",
        app: "phone",
        data: _0x497aad
      };
      globalThis.exports["np-ui"].SendUIMessage(_0x5bd608);
    };
    var _0x386b7a = (_0x5779f6, _0x2a06eb, _0x1cb7b6, _0x5c2217, _0x49dd18, _0x141959, _0x6f9290 = 0, _0x41ea00 = true) => {
      SetTextColour(_0x5c2217[0], _0x5c2217[1], _0x5c2217[2], _0x5c2217[3]);
      if (_0x41ea00) {
        SetTextOutline();
      }
      SetTextScale(0, _0x49dd18);
      SetTextFont(_0x141959 ?? 0);
      SetTextJustification(_0x6f9290);
      if (_0x6f9290 === 2) {
        SetTextWrap(0, 0.575);
      }
      SetTextEntry("STRING");
      AddTextComponentString(_0x1cb7b6 ?? "Dummy text");
      EndTextCommandDisplayText(_0x5779f6, _0x2a06eb);
    };
    var _0x4b7db8 = (_0x1648ea, _0x73181e, _0x2321ec, _0x3048e8, _0x475cae = 4, _0x3e6646 = true, _0x494051) => {
      SetDrawOrigin(_0x1648ea.x, _0x1648ea.y, _0x1648ea.z, 0);
      const _0x483dde = Math.max(_0x34b55b.getMapRange([0, 10], [0.4, 0.25], _0x73181e), 0.1);
      _0x386b7a(0, 0, _0x2321ec, _0x3048e8, _0x483dde, _0x475cae, 0, _0x3e6646);
      if (_0x494051) {
        DrawRect(0.002, _0x494051.height / 2, _0x494051.width, _0x494051.height, _0x494051.color[0], _0x494051.color[1], _0x494051.color[2], _0x494051.color[3]);
      }
      ClearDrawOrigin();
    };
    var _0x2ae8ba = (_0x13c4a6, _0xed9204, _0x4f4750, _0x3cd702) => {
      globalThis.exports.contacts.open(_0x13c4a6, _0xed9204, _0x4f4750, _0x3cd702, true);
    };
    var _0x55ae3b = {
      addPeekEntryByModel: _0x504445,
      addPeekEntryByTarget: _0x22f744,
      addPeekEntryByFlag: _0x15576e,
      addPeekEntryByType: _0x18a1e5,
      addInteraction: _0x4a031a,
      addInteractionByModel: _0x3d8e68,
      addPlayerInteraction: _0x226b3c,
      addPedInteraction: _0x2148be,
      addVehicleInteraction: _0x53f61b,
      removeInteraction: _0x3bc91a,
      removePlayerInteraction: _0x5ad43c,
      removePedInteraction: _0x5ad43c,
      removeVehicleInteraction: _0x30455f,
      taskBar: _0x3b1895,
      phoneConfirmation: _0x57612a,
      phoneNotification: _0x590c4c,
      drawText: _0x386b7a,
      drawText3D: _0x4b7db8,
      customContact: _0x2ae8ba
    };
    var _0x47fde5 = _0x55ae3b;
    var _0x34461d = async _0x38993c => {
      return globalThis.exports["np-heists"].BankMinigame(_0x38993c);
    };
    var _0x437d64 = async _0x2c33cd => {
      return globalThis.exports["np-heists"].DDRMinigame(_0x2c33cd);
    };
    var _0x258aef = async _0x323a27 => {
      return globalThis.exports.skillchecks.DirectionMinigame(_0x323a27);
    };
    var _0x66dd43 = async () => {
      return globalThis.exports.skillchecks.DrillingMinigame();
    };
    var _0x24c7de = async _0x3b80c6 => {
      return globalThis.exports.skillchecks.FlipMinigame(_0x3b80c6);
    };
    var _0x43b284 = async _0x356e6c => {
      return globalThis.exports.skillchecks.FloodMinigame(_0x356e6c);
    };
    var _0x49b23d = async _0x88c22a => {
      return globalThis.exports.skillchecks.TaskBarMinigame(_0x88c22a.difficulty, _0x88c22a.gap, _0x88c22a.iterations, _0x88c22a.useReverse);
    };
    var _0x57946c = async _0x3851c7 => {
      return globalThis.exports["np-heists"].MazeMinigame(_0x3851c7);
    };
    var _0x484f97 = async _0xccd31b => {
      return globalThis.exports.skillchecks.CrackSafe(_0xccd31b.locks);
    };
    var _0x3b4b04 = async _0x558c71 => {
      return globalThis.exports.skillchecks.SameMinigame(_0x558c71);
    };
    var _0xf49913 = async _0x754333 => {
      return globalThis.exports["np-heists"].ThermiteMinigame(_0x754333);
    };
    var _0x13ea34 = async _0x5e22bf => {
      return globalThis.exports.skillchecks.UntangleMinigame(_0x5e22bf);
    };
    var _0xb675d3 = async _0x27d633 => {
      return globalThis.exports["np-heists"].VarMinigame(_0x27d633);
    };
    var _0x474abc = async _0xab7cf3 => {
      return globalThis.exports.skillchecks.WordsMinigame(_0xab7cf3);
    };
    var _0x593141 = async _0x4781d0 => {
      return globalThis.exports.skillchecks.AlphabetMinigame(_0x4781d0);
    };
    var _0x2933d2 = async _0x4e7c37 => {
      return globalThis.exports.skillchecks.LockpickMinigame(_0x4e7c37);
    };
    var _0x1791e1 = {
      BankMinigame: _0x34461d,
      DDRMinigame: _0x437d64,
      DirectionMinigame: _0x258aef,
      DrillingMinigame: _0x66dd43,
      FlipMinigame: _0x24c7de,
      FloodMinigame: _0x43b284,
      TaskBarMinigame: _0x49b23d,
      MazeMinigame: _0x57946c,
      CrackSafe: _0x484f97,
      SameMinigame: _0x3b4b04,
      ThermiteMinigame: _0xf49913,
      UntangleMinigame: _0x13ea34,
      VarMinigame: _0xb675d3,
      WordsMinigame: _0x474abc,
      AlphabetMinigame: _0x593141,
      LockpickMinigame: _0x2933d2
    };
    var _0x29ea46 = _0x1791e1;
    var _0x10c2ad = {
      async hasPermission(_0x1b8856, _0x584772 = {}) {
        return await exports.permissions.hasPermission(_0x1b8856, _0x584772);
      },
      async getUserPermissions() {
        return await exports.permissions.getUserPermissions();
      },
      async getCharPermissions(_0x594758) {
        return await exports.permissions.getCharPermissions();
      },
      async getTotalPermissions() {
        return await exports.permissions.getTotalPermissions();
      }
    };
    var _0x33f261;
    var _0x43ef3f;
    var _0x117d69;
    var _0x341e05;
    var _0x3af7e8;
    var _0xacce6a;
    var _0x3fc020;
    var _0x6f5c01;
    var _0x7c687a;
    var _0x734d71;
    var _0x11066b = class {
      constructor(_0x516ab8) {
        _0x3c2f92(this, _0x7c687a);
        _0x3c2f92(this, _0x33f261, undefined);
        _0x3c2f92(this, _0x43ef3f, undefined);
        _0x3c2f92(this, _0x117d69, undefined);
        _0x3c2f92(this, _0x341e05, undefined);
        _0x3c2f92(this, _0x3af7e8, undefined);
        _0x3c2f92(this, _0xacce6a, undefined);
        _0x3c2f92(this, _0x3fc020, false);
        _0x3c2f92(this, _0x6f5c01, []);
        const _0x46a234 = _0x42a952.parse(_0x516ab8);
        _0x55ff33(this, _0x33f261, _0x46a234.codename);
        _0x55ff33(this, _0x43ef3f, _0x46a234.version);
        _0x55ff33(this, _0x117d69, GetCurrentResourceName());
        _0x55ff33(this, _0x341e05, "nopixel-editor");
        emit("__npx_core:handshake", _0x46a234, _0x2786ff(this, _0x7c687a, _0x734d71).bind(this));
        _0x282f6a.register("__npx_core:handshake", async _0x3d0674 => {
          if (_0x3d0674.codename !== _0x30b1e5(this, _0x33f261)) {
            return;
          }
          const _0x5cde63 = await _0x1532be.waitForCondition(() => _0x30b1e5(this, _0x3fc020), 10000);
          if (_0x5cde63) {
            return;
          }
          return {
            API_URL: _0x30b1e5(this, _0x3af7e8),
            API_KEY: _0x30b1e5(this, _0xacce6a)
          };
        });
      }
      get codename() {
        return _0x30b1e5(this, _0x33f261);
      }
      get version() {
        return _0x30b1e5(this, _0x43ef3f);
      }
      get isReady() {
        return _0x30b1e5(this, _0x3fc020);
      }
      onReady(_0x48ea62) {
        if (_0x30b1e5(this, _0x3fc020)) {
          _0x48ea62();
        } else {
          _0x30b1e5(this, _0x6f5c01).push(_0x48ea62);
        }
      }
    };
    _0x33f261 = new WeakMap();
    _0x43ef3f = new WeakMap();
    _0x117d69 = new WeakMap();
    _0x341e05 = new WeakMap();
    _0x3af7e8 = new WeakMap();
    _0xacce6a = new WeakMap();
    _0x3fc020 = new WeakMap();
    _0x6f5c01 = new WeakMap();
    _0x7c687a = new WeakSet();
    _0x734d71 = async function (_0x596629) {
      _0x55ff33(this, _0x3af7e8, _0x596629.API_URL);
      _0x55ff33(this, _0xacce6a, _0x596629.API_KEY);
      _0x55ff33(this, _0x3fc020, true);
      for (const _0x4c6df2 of _0x30b1e5(this, _0x6f5c01)) {
        _0x4c6df2();
      }
    };
    /*! Bundled license information:
    crypto-js/ripemd160.js:
    (** @preserve
    (c) 2012 by Cédric Mesnil. All rights reserved.
    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    *)
    crypto-js/mode-ctr-gladman.js:
    (** @preserve
    * Counter block mode compatible with  Dr Brian Gladman fileenc.c
    * derived from CryptoJS.mode.CTR
    * Jan Hruby jhruby.web@gmail.com
    *)
    */
    ;
    function _0x3d00c8(_0x44b276, _0x1dd810, _0x521524, _0x2950ba, _0x55471c, _0x5d2e9a, _0x3ee74b) {
      try {
        var _0x3400cd = _0x44b276[_0x5d2e9a](_0x3ee74b);
        var _0x481f01 = _0x3400cd.value;
      } catch (_0x51fbe3) {
        _0x521524(_0x51fbe3);
        return;
      }
      if (_0x3400cd.done) {
        _0x1dd810(_0x481f01);
      } else {
        Promise.resolve(_0x481f01).then(_0x2950ba, _0x55471c);
      }
    }
    function _0x4c81f6(_0x3a9709) {
      return function () {
        var _0x5d3574 = this;
        var _0x42d73e = arguments;
        return new Promise(function (_0x1adb45, _0x59a1df) {
          var _0x8b4731 = _0x3a9709.apply(_0x5d3574, _0x42d73e);
          function _0x1699e7(_0x5beedd) {
            _0x3d00c8(_0x8b4731, _0x1adb45, _0x59a1df, _0x1699e7, _0xd36e12, "next", _0x5beedd);
          }
          function _0xd36e12(_0x2f1698) {
            _0x3d00c8(_0x8b4731, _0x1adb45, _0x59a1df, _0x1699e7, _0xd36e12, "throw", _0x2f1698);
          }
          _0x1699e7(undefined);
        });
      };
    }
    function _0x39c67a(_0x300568, _0x35e7ac) {
      var _0x1f304f;
      var _0x438f79;
      var _0x25a130;
      var _0x1f337c;
      var _0x4ff708 = {
        label: 0,
        sent: function () {
          if (_0x25a130[0] & 1) {
            throw _0x25a130[1];
          }
          return _0x25a130[1];
        },
        trys: [],
        ops: []
      };
      _0x1f337c = {
        next: _0x28a533(0),
        throw: _0x28a533(1),
        return: _0x28a533(2)
      };
      if (typeof Symbol === "function") {
        _0x1f337c[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1f337c;
      function _0x28a533(_0x5d34c2) {
        return function (_0xdfbc1a) {
          return _0x455a04([_0x5d34c2, _0xdfbc1a]);
        };
      }
      function _0x455a04(_0x1556d2) {
        if (_0x1f304f) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4ff708) {
          try {
            _0x1f304f = 1;
            if (_0x438f79 && (_0x25a130 = _0x1556d2[0] & 2 ? _0x438f79.return : _0x1556d2[0] ? _0x438f79.throw || ((_0x25a130 = _0x438f79.return) && _0x25a130.call(_0x438f79), 0) : _0x438f79.next) && !(_0x25a130 = _0x25a130.call(_0x438f79, _0x1556d2[1])).done) {
              return _0x25a130;
            }
            _0x438f79 = 0;
            if (_0x25a130) {
              _0x1556d2 = [_0x1556d2[0] & 2, _0x25a130.value];
            }
            switch (_0x1556d2[0]) {
              case 0:
              case 1:
                _0x25a130 = _0x1556d2;
                break;
              case 4:
                _0x4ff708.label++;
                var _0x23edd8 = {
                  value: _0x1556d2[1],
                  done: false
                };
                return _0x23edd8;
              case 5:
                _0x4ff708.label++;
                _0x438f79 = _0x1556d2[1];
                _0x1556d2 = [0];
                continue;
              case 7:
                _0x1556d2 = _0x4ff708.ops.pop();
                _0x4ff708.trys.pop();
                continue;
              default:
                if (!(_0x25a130 = _0x4ff708.trys, _0x25a130 = _0x25a130.length > 0 && _0x25a130[_0x25a130.length - 1]) && (_0x1556d2[0] === 6 || _0x1556d2[0] === 2)) {
                  _0x4ff708 = 0;
                  continue;
                }
                if (_0x1556d2[0] === 3 && (!_0x25a130 || _0x1556d2[1] > _0x25a130[0] && _0x1556d2[1] < _0x25a130[3])) {
                  _0x4ff708.label = _0x1556d2[1];
                  break;
                }
                if (_0x1556d2[0] === 6 && _0x4ff708.label < _0x25a130[1]) {
                  _0x4ff708.label = _0x25a130[1];
                  _0x25a130 = _0x1556d2;
                  break;
                }
                if (_0x25a130 && _0x4ff708.label < _0x25a130[2]) {
                  _0x4ff708.label = _0x25a130[2];
                  _0x4ff708.ops.push(_0x1556d2);
                  break;
                }
                if (_0x25a130[2]) {
                  _0x4ff708.ops.pop();
                }
                _0x4ff708.trys.pop();
                continue;
            }
            _0x1556d2 = _0x35e7ac.call(_0x300568, _0x4ff708);
          } catch (_0x5cbbaf) {
            _0x1556d2 = [6, _0x5cbbaf];
            _0x438f79 = 0;
          } finally {
            _0x1f304f = _0x25a130 = 0;
          }
        }
        if (_0x1556d2[0] & 5) {
          throw _0x1556d2[1];
        }
        var _0x2b7d56 = {
          value: _0x1556d2[0] ? _0x1556d2[1] : undefined,
          done: true
        };
        return _0x2b7d56;
      }
    }
    function _0x57a660() {
      return _0x47d98d.apply(this, arguments);
    }
    function _0x47d98d() {
      _0x47d98d = _0x4c81f6(function () {
        return _0x39c67a(this, function (_0x2f3cba) {
          return [2];
        });
      });
      return _0x47d98d.apply(this, arguments);
    }
    ;
    function _0x2e2603(_0x28084f, _0x54604d, _0x49af32, _0x302255, _0x3fd568, _0x21080a, _0x164f76) {
      try {
        var _0x56dd7f = _0x28084f[_0x21080a](_0x164f76);
        var _0x4f7eed = _0x56dd7f.value;
      } catch (_0x116387) {
        _0x49af32(_0x116387);
        return;
      }
      if (_0x56dd7f.done) {
        _0x54604d(_0x4f7eed);
      } else {
        Promise.resolve(_0x4f7eed).then(_0x302255, _0x3fd568);
      }
    }
    function _0x4eab4a(_0x5008fe) {
      return function () {
        var _0x295a1d = this;
        var _0x5e72f4 = arguments;
        return new Promise(function (_0x539c88, _0x554f1f) {
          var _0x284d3a = _0x5008fe.apply(_0x295a1d, _0x5e72f4);
          function _0x2e5de8(_0x42125d) {
            _0x2e2603(_0x284d3a, _0x539c88, _0x554f1f, _0x2e5de8, _0x19cbcc, "next", _0x42125d);
          }
          function _0x19cbcc(_0x584039) {
            _0x2e2603(_0x284d3a, _0x539c88, _0x554f1f, _0x2e5de8, _0x19cbcc, "throw", _0x584039);
          }
          _0x2e5de8(undefined);
        });
      };
    }
    function _0x46dff3(_0x575350, _0x30a7c6) {
      var _0x1ed657;
      var _0x43805d;
      var _0x44700b;
      var _0x5a1991;
      var _0x41d3ce = {
        label: 0,
        sent: function () {
          if (_0x44700b[0] & 1) {
            throw _0x44700b[1];
          }
          return _0x44700b[1];
        },
        trys: [],
        ops: []
      };
      _0x5a1991 = {
        next: _0x59619b(0),
        throw: _0x59619b(1),
        return: _0x59619b(2)
      };
      if (typeof Symbol === "function") {
        _0x5a1991[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5a1991;
      function _0x59619b(_0x156ee6) {
        return function (_0x65a945) {
          return _0x2cbf57([_0x156ee6, _0x65a945]);
        };
      }
      function _0x2cbf57(_0x1ee22c) {
        if (_0x1ed657) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x41d3ce) {
          try {
            _0x1ed657 = 1;
            if (_0x43805d && (_0x44700b = _0x1ee22c[0] & 2 ? _0x43805d.return : _0x1ee22c[0] ? _0x43805d.throw || ((_0x44700b = _0x43805d.return) && _0x44700b.call(_0x43805d), 0) : _0x43805d.next) && !(_0x44700b = _0x44700b.call(_0x43805d, _0x1ee22c[1])).done) {
              return _0x44700b;
            }
            _0x43805d = 0;
            if (_0x44700b) {
              _0x1ee22c = [_0x1ee22c[0] & 2, _0x44700b.value];
            }
            switch (_0x1ee22c[0]) {
              case 0:
              case 1:
                _0x44700b = _0x1ee22c;
                break;
              case 4:
                _0x41d3ce.label++;
                var _0x3e5cd4 = {
                  value: _0x1ee22c[1],
                  done: false
                };
                return _0x3e5cd4;
              case 5:
                _0x41d3ce.label++;
                _0x43805d = _0x1ee22c[1];
                _0x1ee22c = [0];
                continue;
              case 7:
                _0x1ee22c = _0x41d3ce.ops.pop();
                _0x41d3ce.trys.pop();
                continue;
              default:
                if (!(_0x44700b = _0x41d3ce.trys, _0x44700b = _0x44700b.length > 0 && _0x44700b[_0x44700b.length - 1]) && (_0x1ee22c[0] === 6 || _0x1ee22c[0] === 2)) {
                  _0x41d3ce = 0;
                  continue;
                }
                if (_0x1ee22c[0] === 3 && (!_0x44700b || _0x1ee22c[1] > _0x44700b[0] && _0x1ee22c[1] < _0x44700b[3])) {
                  _0x41d3ce.label = _0x1ee22c[1];
                  break;
                }
                if (_0x1ee22c[0] === 6 && _0x41d3ce.label < _0x44700b[1]) {
                  _0x41d3ce.label = _0x44700b[1];
                  _0x44700b = _0x1ee22c;
                  break;
                }
                if (_0x44700b && _0x41d3ce.label < _0x44700b[2]) {
                  _0x41d3ce.label = _0x44700b[2];
                  _0x41d3ce.ops.push(_0x1ee22c);
                  break;
                }
                if (_0x44700b[2]) {
                  _0x41d3ce.ops.pop();
                }
                _0x41d3ce.trys.pop();
                continue;
            }
            _0x1ee22c = _0x30a7c6.call(_0x575350, _0x41d3ce);
          } catch (_0x2b2d35) {
            _0x1ee22c = [6, _0x2b2d35];
            _0x43805d = 0;
          } finally {
            _0x1ed657 = _0x44700b = 0;
          }
        }
        if (_0x1ee22c[0] & 5) {
          throw _0x1ee22c[1];
        }
        var _0x3047c9 = {
          value: _0x1ee22c[0] ? _0x1ee22c[1] : undefined,
          done: true
        };
        return _0x3047c9;
      }
    }
    var _0x21162a;
    var _0x2fa9ce = new Map();
    var _0x3eef83 = GetCurrentResourceName();
    function _0x84e37c() {
      return _0x18d22e.apply(this, arguments);
    }
    function _0x18d22e() {
      _0x18d22e = _0x4eab4a(function () {
        return _0x46dff3(this, function (_0x5342fe) {
          switch (_0x5342fe.label) {
            case 0:
              if (!!globalThis.exports.config.IsConfigReady()) {
                return [3, 2];
              }
              return [4, new Promise(function (_0x4503b4) {
                return setTimeout(_0x4503b4, 100);
              })];
            case 1:
              _0x5342fe.sent();
              return [3, 0];
            case 2:
              _0x21162a = globalThis.exports.config.GetModuleConfig("main");
              return [2];
          }
        });
      });
      return _0x18d22e.apply(this, arguments);
    }
    on("np-config:configLoaded", function (_0x2ad6d6, _0x22a8c0) {
      if (_0x2ad6d6 === "main") {
        _0x21162a = _0x22a8c0;
      } else if (_0x2fa9ce.has(_0x2ad6d6)) {
        _0x2fa9ce.set(_0x2ad6d6, _0x22a8c0);
      }
    });
    function _0x1da34d(_0x5a7b75) {
      return _0x21162a[_0x5a7b75];
    }
    function _0x4339d7(_0x1af091, _0x2ca03c) {
      if (!_0x2fa9ce.has(_0x1af091)) {
        var _0x4ae4bc = exports.config.GetModuleConfig(_0x1af091);
        if (_0x4ae4bc === undefined) {
          return;
        }
        _0x2fa9ce.set(_0x1af091, _0x4ae4bc);
      }
      var _0x69f552 = _0x2fa9ce.get(_0x1af091);
      if (_0x2ca03c) {
        return _0x69f552?.[_0x2ca03c];
      } else {
        return _0x69f552;
      }
    }
    function _0xebd538(_0x3c744a) {
      return _0x4339d7(_0x3eef83, _0x3c744a);
    }
    ;
    function _0xb7b457(_0x11d062, _0x5ceab6, _0x1a18bd, _0x5ccd85, _0x51f969, _0x6e938b, _0x5162e3) {
      try {
        var _0x365859 = _0x11d062[_0x6e938b](_0x5162e3);
        var _0x5ea02f = _0x365859.value;
      } catch (_0xc5748) {
        _0x1a18bd(_0xc5748);
        return;
      }
      if (_0x365859.done) {
        _0x5ceab6(_0x5ea02f);
      } else {
        Promise.resolve(_0x5ea02f).then(_0x5ccd85, _0x51f969);
      }
    }
    function _0x3978b6(_0x2284cb) {
      return function () {
        var _0xfbcb77 = this;
        var _0xa53c0c = arguments;
        return new Promise(function (_0x72211f, _0x1c4593) {
          var _0x147a50 = _0x2284cb.apply(_0xfbcb77, _0xa53c0c);
          function _0x27bf74(_0x347f7a) {
            _0xb7b457(_0x147a50, _0x72211f, _0x1c4593, _0x27bf74, _0x556c25, "next", _0x347f7a);
          }
          function _0x556c25(_0x190cd8) {
            _0xb7b457(_0x147a50, _0x72211f, _0x1c4593, _0x27bf74, _0x556c25, "throw", _0x190cd8);
          }
          _0x27bf74(undefined);
        });
      };
    }
    function _0x49dae7(_0x307d7e, _0xdf40a0) {
      var _0x53bc75;
      var _0x86ed40;
      var _0x4c4c9e;
      var _0x466c9e;
      var _0x2a1760 = {
        label: 0,
        sent: function () {
          if (_0x4c4c9e[0] & 1) {
            throw _0x4c4c9e[1];
          }
          return _0x4c4c9e[1];
        },
        trys: [],
        ops: []
      };
      _0x466c9e = {
        next: _0x4e1e15(0),
        throw: _0x4e1e15(1),
        return: _0x4e1e15(2)
      };
      if (typeof Symbol === "function") {
        _0x466c9e[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x466c9e;
      function _0x4e1e15(_0x4117d2) {
        return function (_0xf4a49b) {
          return _0x79c1b1([_0x4117d2, _0xf4a49b]);
        };
      }
      function _0x79c1b1(_0x45c0ac) {
        if (_0x53bc75) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2a1760) {
          try {
            _0x53bc75 = 1;
            if (_0x86ed40 && (_0x4c4c9e = _0x45c0ac[0] & 2 ? _0x86ed40.return : _0x45c0ac[0] ? _0x86ed40.throw || ((_0x4c4c9e = _0x86ed40.return) && _0x4c4c9e.call(_0x86ed40), 0) : _0x86ed40.next) && !(_0x4c4c9e = _0x4c4c9e.call(_0x86ed40, _0x45c0ac[1])).done) {
              return _0x4c4c9e;
            }
            _0x86ed40 = 0;
            if (_0x4c4c9e) {
              _0x45c0ac = [_0x45c0ac[0] & 2, _0x4c4c9e.value];
            }
            switch (_0x45c0ac[0]) {
              case 0:
              case 1:
                _0x4c4c9e = _0x45c0ac;
                break;
              case 4:
                _0x2a1760.label++;
                var _0x4c2154 = {
                  value: _0x45c0ac[1],
                  done: false
                };
                return _0x4c2154;
              case 5:
                _0x2a1760.label++;
                _0x86ed40 = _0x45c0ac[1];
                _0x45c0ac = [0];
                continue;
              case 7:
                _0x45c0ac = _0x2a1760.ops.pop();
                _0x2a1760.trys.pop();
                continue;
              default:
                if (!(_0x4c4c9e = _0x2a1760.trys, _0x4c4c9e = _0x4c4c9e.length > 0 && _0x4c4c9e[_0x4c4c9e.length - 1]) && (_0x45c0ac[0] === 6 || _0x45c0ac[0] === 2)) {
                  _0x2a1760 = 0;
                  continue;
                }
                if (_0x45c0ac[0] === 3 && (!_0x4c4c9e || _0x45c0ac[1] > _0x4c4c9e[0] && _0x45c0ac[1] < _0x4c4c9e[3])) {
                  _0x2a1760.label = _0x45c0ac[1];
                  break;
                }
                if (_0x45c0ac[0] === 6 && _0x2a1760.label < _0x4c4c9e[1]) {
                  _0x2a1760.label = _0x4c4c9e[1];
                  _0x4c4c9e = _0x45c0ac;
                  break;
                }
                if (_0x4c4c9e && _0x2a1760.label < _0x4c4c9e[2]) {
                  _0x2a1760.label = _0x4c4c9e[2];
                  _0x2a1760.ops.push(_0x45c0ac);
                  break;
                }
                if (_0x4c4c9e[2]) {
                  _0x2a1760.ops.pop();
                }
                _0x2a1760.trys.pop();
                continue;
            }
            _0x45c0ac = _0xdf40a0.call(_0x307d7e, _0x2a1760);
          } catch (_0x513ca6) {
            _0x45c0ac = [6, _0x513ca6];
            _0x86ed40 = 0;
          } finally {
            _0x53bc75 = _0x4c4c9e = 0;
          }
        }
        if (_0x45c0ac[0] & 5) {
          throw _0x45c0ac[1];
        }
        var _0x53156c = {
          value: _0x45c0ac[0] ? _0x45c0ac[1] : undefined,
          done: true
        };
        return _0x53156c;
      }
    }
    function _0xa5d061() {
      return _0x1d0f08.apply(this, arguments);
    }
    function _0x1d0f08() {
      _0x1d0f08 = _0x3978b6(function () {
        return _0x49dae7(this, function (_0x443298) {
          return [2];
        });
      });
      return _0x1d0f08.apply(this, arguments);
    }
    ;
    function _0x1a9c15(_0x411e4e, _0x32a106) {
      if (!(_0x411e4e instanceof _0x32a106)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x2a59e4(_0x10d9d0, _0x195829) {
      for (var _0x23792d = 0; _0x23792d < _0x195829.length; _0x23792d++) {
        var _0x50534b = _0x195829[_0x23792d];
        _0x50534b.enumerable = _0x50534b.enumerable || false;
        _0x50534b.configurable = true;
        if ("value" in _0x50534b) {
          _0x50534b.writable = true;
        }
        Object.defineProperty(_0x10d9d0, _0x50534b.key, _0x50534b);
      }
    }
    function _0x36939f(_0x2dc248, _0xfbb123, _0x34c04a) {
      if (_0xfbb123) {
        _0x2a59e4(_0x2dc248.prototype, _0xfbb123);
      }
      if (_0x34c04a) {
        _0x2a59e4(_0x2dc248, _0x34c04a);
      }
      return _0x2dc248;
    }
    function _0x4476d4(_0x436b6b, _0x530a31, _0x5602e9) {
      if (_0x530a31 in _0x436b6b) {
        var _0x4abb9b = {
          value: _0x5602e9,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x436b6b, _0x530a31, _0x4abb9b);
      } else {
        _0x436b6b[_0x530a31] = _0x5602e9;
      }
      return _0x436b6b;
    }
    var _0x21193b = function () {
      'use strict';

      function _0x38f8c8() {
        var _0x4166c5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var _0x33247c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var _0x4bb3a1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var _0x1196e5 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        _0x1a9c15(this, _0x38f8c8);
        _0x4476d4(this, "x", undefined);
        _0x4476d4(this, "y", undefined);
        _0x4476d4(this, "z", undefined);
        _0x4476d4(this, "w", undefined);
        this.x = _0x4166c5;
        this.y = _0x33247c;
        this.z = _0x4bb3a1;
        this.w = _0x1196e5;
      }
      var _0x49bbf9 = {
        key: "setFromArray",
        value: function _0x5ae11a(_0x10bd52) {
          this.x = _0x10bd52[0];
          this.y = _0x10bd52[1];
          this.z = _0x10bd52[2];
          this.z = _0x10bd52[3];
          return this;
        }
      };
      _0x36939f(_0x38f8c8, [_0x49bbf9, {
        key: "getArray",
        value: function _0x1191d8() {
          return [this.x, this.y, this.z, this.w];
        }
      }, {
        key: "equals",
        value: function _0x311f75(_0x2e801c) {
          return this.x === _0x2e801c.x && this.y === _0x2e801c.y && this.z === _0x2e801c.z && this.w === _0x2e801c.w;
        }
      }, {
        key: "toShortJson",
        value: function _0x40bdca(_0x32ee7c) {
          var _0x27850a = Number(this.x.toFixed(_0x32ee7c));
          var _0x351b82 = Number(this.y.toFixed(_0x32ee7c));
          var _0x58e318 = Number(this.z.toFixed(_0x32ee7c));
          var _0x3239c3 = Number(this.w.toFixed(_0x32ee7c));
          return JSON.stringify([_0x27850a, _0x351b82, _0x58e318, _0x3239c3]);
        }
      }], [{
        key: "fromArray",
        value: function _0x54d51a(_0x1ca4d6) {
          return new _0x38f8c8(_0x1ca4d6[0], _0x1ca4d6[1], _0x1ca4d6[2], _0x1ca4d6[3]);
        }
      }]);
      return _0x38f8c8;
    }();
    ;
    function _0x3c1065(_0x46d400, _0x40ebee) {
      if (!(_0x46d400 instanceof _0x40ebee)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x2c3d58(_0x20c5b4, _0x47b3f7) {
      for (var _0x5bf419 = 0; _0x5bf419 < _0x47b3f7.length; _0x5bf419++) {
        var _0x3d0db1 = _0x47b3f7[_0x5bf419];
        _0x3d0db1.enumerable = _0x3d0db1.enumerable || false;
        _0x3d0db1.configurable = true;
        if ("value" in _0x3d0db1) {
          _0x3d0db1.writable = true;
        }
        Object.defineProperty(_0x20c5b4, _0x3d0db1.key, _0x3d0db1);
      }
    }
    function _0x165673(_0x31d870, _0x2cefd6, _0x583728) {
      if (_0x2cefd6) {
        _0x2c3d58(_0x31d870.prototype, _0x2cefd6);
      }
      if (_0x583728) {
        _0x2c3d58(_0x31d870, _0x583728);
      }
      return _0x31d870;
    }
    function _0x51da7b(_0x5899d1, _0x20b392, _0x3ab2f2) {
      if (_0x20b392 in _0x5899d1) {
        var _0x5f2b5d = {
          value: _0x3ab2f2,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x5899d1, _0x20b392, _0x5f2b5d);
      } else {
        _0x5899d1[_0x20b392] = _0x3ab2f2;
      }
      return _0x5899d1;
    }
    var _0x45b4c7 = function () {
      'use strict';

      function _0x2ea3e0() {
        var _0x594243 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var _0x5071e9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var _0x1d55e6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        _0x3c1065(this, _0x2ea3e0);
        _0x51da7b(this, "x", undefined);
        _0x51da7b(this, "y", undefined);
        _0x51da7b(this, "z", undefined);
        this.x = _0x594243;
        this.y = _0x5071e9;
        this.z = _0x1d55e6;
      }
      var _0xfbcec2 = {
        key: "setFromArray",
        value: function _0x19b6bb(_0x4f713a) {
          this.x = _0x4f713a[0];
          this.y = _0x4f713a[1];
          this.z = _0x4f713a[2];
          return this;
        }
      };
      var _0x538e4b = {
        key: "getArray",
        value: function _0x1daf8a() {
          return [this.x, this.y, this.z];
        }
      };
      var _0x1a6424 = {
        key: "add",
        value: function _0x5b7d9b(_0x5d1bbe) {
          this.x += _0x5d1bbe.x;
          this.y += _0x5d1bbe.y;
          this.z += _0x5d1bbe.z;
          return this;
        }
      };
      var _0x2f9d3c = {
        key: "addScalar",
        value: function _0x3c715e(_0x2a025a) {
          this.x += _0x2a025a;
          this.y += _0x2a025a;
          this.z += _0x2a025a;
          return this;
        }
      };
      _0x165673(_0x2ea3e0, [_0xfbcec2, _0x538e4b, _0x1a6424, _0x2f9d3c, {
        key: "sub",
        value: function _0x1c96a7(_0x47b76f) {
          this.x -= _0x47b76f.x;
          this.y -= _0x47b76f.y;
          this.z -= _0x47b76f.z;
          return this;
        }
      }, {
        key: "addPlusScaler",
        value: function _0x7f629a(_0x174eae, _0x5b9383) {
          this.x += _0x174eae.x * _0x5b9383;
          this.y += _0x174eae.y * _0x5b9383;
          this.z += _0x174eae.z * _0x5b9383;
          return this;
        }
      }, {
        key: "subPlusScaler",
        value: function _0x52b718(_0x3c9296, _0x5b9bb7) {
          this.x -= _0x3c9296.x * _0x5b9bb7;
          this.y -= _0x3c9296.y * _0x5b9bb7;
          this.z -= _0x3c9296.z * _0x5b9bb7;
          return this;
        }
      }, {
        key: "equals",
        value: function _0x48b692(_0x256ce2) {
          return this.x === _0x256ce2.x && this.y === _0x256ce2.y && this.z === _0x256ce2.z;
        }
      }, {
        key: "subScalar",
        value: function _0x24cedc(_0xff9dc8) {
          this.x -= _0xff9dc8;
          this.y -= _0xff9dc8;
          this.z -= _0xff9dc8;
          return this;
        }
      }, {
        key: "multiply",
        value: function _0x37f472(_0x1a2f7c) {
          this.x *= _0x1a2f7c.x;
          this.y *= _0x1a2f7c.y;
          this.z *= _0x1a2f7c.z;
          return this;
        }
      }, {
        key: "multiplyScalar",
        value: function _0x2f2be2(_0x1e1bd9) {
          this.x *= _0x1e1bd9;
          this.y *= _0x1e1bd9;
          this.z *= _0x1e1bd9;
          return this;
        }
      }, {
        key: "divide",
        value: function _0x3cd06e(_0xdbcb25) {
          this.x /= _0xdbcb25.x;
          this.y /= _0xdbcb25.y;
          this.z /= _0xdbcb25.z;
          return this;
        }
      }, {
        key: "divideScalar",
        value: function _0x19ea83(_0x2a4e14) {
          this.x /= _0x2a4e14;
          this.y /= _0x2a4e14;
          this.z /= _0x2a4e14;
          return this;
        }
      }, {
        key: "round",
        value: function _0x34ff4e() {
          this.x = Math.round(this.x);
          this.y = Math.round(this.y);
          this.z = Math.round(this.z);
          return this;
        }
      }, {
        key: "floor",
        value: function _0x517579() {
          this.x = Math.floor(this.x);
          this.y = Math.floor(this.y);
          this.z = Math.floor(this.z);
          return this;
        }
      }, {
        key: "ceil",
        value: function _0x53bbfb() {
          this.x = Math.ceil(this.x);
          this.y = Math.ceil(this.y);
          this.z = Math.ceil(this.z);
          return this;
        }
      }, {
        key: "getCenter",
        value: function _0x3fd877(_0xe1e011) {
          return new _0x2ea3e0((this.x += _0xe1e011.x) / 2, (this.y += _0xe1e011.y) / 2, (this.z += _0xe1e011.z) / 2);
        }
      }, {
        key: "getDistance",
        value: function _0x1e4770(_0x94627d) {
          var _0x33f215 = [this.x - _0x94627d.x, this.y - _0x94627d.y, this.z - _0x94627d.z];
          var _0x13aec2 = _0x33f215[0];
          var _0x421c04 = _0x33f215[1];
          var _0x5d2979 = _0x33f215[2];
          return Math.sqrt(_0x13aec2 * _0x13aec2 + _0x421c04 * _0x421c04 + _0x5d2979 * _0x5d2979);
        }
      }, {
        key: "getDistanceFromArray",
        value: function _0x85dc84(_0x4444e1) {
          var _0x2fc253 = [this.x - _0x4444e1[0], this.y - _0x4444e1[1], this.z - _0x4444e1[2]];
          var _0x14ca80 = _0x2fc253[0];
          var _0x52607a = _0x2fc253[1];
          var _0x25cd84 = _0x2fc253[2];
          return Math.sqrt(_0x14ca80 * _0x14ca80 + _0x52607a * _0x52607a + _0x25cd84 * _0x25cd84);
        }
      }, {
        key: "isCoordinateEqual",
        value: function _0x5577c3(_0x443c78, _0x2be59b) {
          return _0x443c78.equals(_0x2be59b);
        }
      }, {
        key: "toShortJson",
        value: function _0xfdc945(_0x1f05c4) {
          var _0x118ac0 = Number(this.x.toFixed(_0x1f05c4));
          var _0x2a9217 = Number(this.y.toFixed(_0x1f05c4));
          var _0x1213f6 = Number(this.z.toFixed(_0x1f05c4));
          return JSON.stringify([_0x118ac0, _0x2a9217, _0x1213f6]);
        }
      }], [{
        key: "fromArray",
        value: function _0x582e23(_0xa9e32f) {
          return new _0x2ea3e0(_0xa9e32f[0], _0xa9e32f[1], _0xa9e32f[2]);
        }
      }]);
      return _0x2ea3e0;
    }();
    var _0x1723e8 = _0x5f5650(670);
    ;
    function _0x13b5ec(_0x26da4e) {
      if (_0x26da4e === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x26da4e;
    }
    function _0x5f4729(_0x39e9b5, _0x3f0b40) {
      if (!(_0x39e9b5 instanceof _0x3f0b40)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x20d008(_0x53c3af, _0x5a1ab1) {
      for (var _0x22701c = 0; _0x22701c < _0x5a1ab1.length; _0x22701c++) {
        var _0x1a5186 = _0x5a1ab1[_0x22701c];
        _0x1a5186.enumerable = _0x1a5186.enumerable || false;
        _0x1a5186.configurable = true;
        if ("value" in _0x1a5186) {
          _0x1a5186.writable = true;
        }
        Object.defineProperty(_0x53c3af, _0x1a5186.key, _0x1a5186);
      }
    }
    function _0x14403f(_0x221829, _0x28d7ef, _0x14be02) {
      if (_0x28d7ef) {
        _0x20d008(_0x221829.prototype, _0x28d7ef);
      }
      if (_0x14be02) {
        _0x20d008(_0x221829, _0x14be02);
      }
      return _0x221829;
    }
    function _0x1e4786(_0x25c69b, _0x159b5a, _0x4446a9) {
      if (_0x159b5a in _0x25c69b) {
        var _0x4173d2 = {
          value: _0x4446a9,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x25c69b, _0x159b5a, _0x4173d2);
      } else {
        _0x25c69b[_0x159b5a] = _0x4446a9;
      }
      return _0x25c69b;
    }
    function _0x4cbe8f(_0x461453) {
      _0x4cbe8f = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x4a5650(_0x25e4c0) {
        return _0x25e4c0.__proto__ || Object.getPrototypeOf(_0x25e4c0);
      };
      return _0x4cbe8f(_0x461453);
    }
    function _0x17d442(_0x507238, _0x1b174e) {
      if (typeof _0x1b174e !== "function" && _0x1b174e !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x507238.prototype = Object.create(_0x1b174e && _0x1b174e.prototype, {
        constructor: {
          value: _0x507238,
          writable: true,
          configurable: true
        }
      });
      if (_0x1b174e) {
        _0x48102f(_0x507238, _0x1b174e);
      }
    }
    function _0x402559(_0x2016f4, _0x101889) {
      if (_0x101889 && (_0x4fdbb7(_0x101889) === "object" || typeof _0x101889 === "function")) {
        return _0x101889;
      }
      return _0x13b5ec(_0x2016f4);
    }
    function _0x48102f(_0x2f7752, _0x4788cf) {
      _0x48102f = Object.setPrototypeOf || function _0x1c9fd7(_0x59bb23, _0x16f915) {
        _0x59bb23.__proto__ = _0x16f915;
        return _0x59bb23;
      };
      return _0x48102f(_0x2f7752, _0x4788cf);
    }
    function _0x4fdbb7(_0x5f22e3) {
      '@swc/helpers - typeof';

      if (_0x5f22e3 && typeof Symbol !== "undefined" && _0x5f22e3.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x5f22e3;
      }
    }
    function _0xb31189() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x4bb0df) {
        return false;
      }
    }
    function _0xadef44(_0x3695cb) {
      var _0x4e8ffd = _0xb31189();
      return function _0x4c8550() {
        var _0x454a4c = _0x4cbe8f(_0x3695cb);
        var _0x30650d;
        if (_0x4e8ffd) {
          var _0x2aa6fd = _0x4cbe8f(this).constructor;
          _0x30650d = Reflect.construct(_0x454a4c, arguments, _0x2aa6fd);
        } else {
          _0x30650d = _0x454a4c.apply(this, arguments);
        }
        return _0x402559(this, _0x30650d);
      };
    }
    var _0x47b9b7 = function (_0x49cffc) {
      'use strict';

      _0x17d442(_0x379be6, _0x49cffc);
      var _0x436454 = _0xadef44(_0x379be6);
      function _0x379be6() {
        _0x5f4729(this, _0x379be6);
        var _0xa31eb4;
        _0xa31eb4 = _0x436454.apply(this, arguments);
        _0x1e4786(_0x13b5ec(_0xa31eb4), "queues", new Map());
        return _0xa31eb4;
      }
      _0x14403f(_0x379be6, [{
        key: "add",
        value: function _0x5d55cf(_0x1cefbb, _0x2695c1) {
          var _0xb3c66e = this;
          var _0x4df7ee;
          if (!this.queues.has(_0x1cefbb)) {
            var _0x124aea = new _0x3971da();
            this.queues.set(_0x1cefbb, _0x124aea);
            _0x124aea.on("finished", function () {
              _0xb3c66e.queues.delete(_0x1cefbb);
              if (!_0xb3c66e.hasPending()) {
                _0xb3c66e.emit("empty");
              }
            });
          }
          if ((_0x4df7ee = this.queues.get(_0x1cefbb)) === null || _0x4df7ee === undefined) {
            return undefined;
          } else {
            return _0x4df7ee.addTask(_0x2695c1);
          }
        }
      }, {
        key: "hasPending",
        value: function _0x375718() {
          return this.queues.size > 0;
        }
      }]);
      return _0x379be6;
    }(_0x1723e8.EventEmitter);
    var _0x3971da = function (_0x157a68) {
      'use strict';

      _0x17d442(_0x22662a, _0x157a68);
      var _0x56a443 = _0xadef44(_0x22662a);
      function _0x22662a() {
        _0x5f4729(this, _0x22662a);
        var _0x3500f1;
        _0x3500f1 = _0x56a443.apply(this, arguments);
        _0x1e4786(_0x13b5ec(_0x3500f1), "queue", []);
        _0x1e4786(_0x13b5ec(_0x3500f1), "busy", false);
        return _0x3500f1;
      }
      _0x14403f(_0x22662a, [{
        key: "runNext",
        value: function _0x122d43() {
          var _0x8b4b91 = this;
          if (!this.busy && this.queue.length > 0) {
            var _0x511e5c = this.queue.shift();
            if (!_0x511e5c) {
              return;
            }
            var _0x57efd7 = _0x511e5c.task;
            var _0x426a22 = _0x511e5c.resolve;
            var _0x7f332c = _0x511e5c.reject;
            this.busy = true;
            _0x57efd7().then(_0x426a22).catch(_0x7f332c).then(function () {
              _0x8b4b91.busy = false;
              if (_0x8b4b91.queue.length === 0) {
                _0x8b4b91.emit("finished");
              } else {
                _0x8b4b91.runNext();
              }
            });
          }
        }
      }, {
        key: "addTask",
        value: function _0x3e66e0(_0x2fe5ae) {
          var _0xaa0a4c = this;
          return new Promise(function (_0x1fbca4, _0x4fa409) {
            var _0x1c38b4 = {
              task: _0x2fe5ae,
              resolve: _0x1fbca4,
              reject: _0x4fa409
            };
            _0xaa0a4c.queue.push(_0x1c38b4);
            _0xaa0a4c.runNext();
          });
        }
      }]);
      return _0x22662a;
    }(_0x1723e8.EventEmitter);
    ;
    function _0x430ebf(_0x2a0dc0, _0x526df6) {
      if (_0x526df6 == null || _0x526df6 > _0x2a0dc0.length) {
        _0x526df6 = _0x2a0dc0.length;
      }
      for (var _0x129e40 = 0, _0x25e373 = new Array(_0x526df6); _0x129e40 < _0x526df6; _0x129e40++) {
        _0x25e373[_0x129e40] = _0x2a0dc0[_0x129e40];
      }
      return _0x25e373;
    }
    function _0x388ba7(_0x42e76e) {
      if (Array.isArray(_0x42e76e)) {
        return _0x430ebf(_0x42e76e);
      }
    }
    function _0x546ca6(_0xc4403e, _0x43ce5a, _0x1115fa, _0xc6daf9, _0x5a8cc3, _0x4b25c5, _0x18dabe) {
      try {
        var _0x36d141 = _0xc4403e[_0x4b25c5](_0x18dabe);
        var _0x551b0f = _0x36d141.value;
      } catch (_0x4f6f2b) {
        _0x1115fa(_0x4f6f2b);
        return;
      }
      if (_0x36d141.done) {
        _0x43ce5a(_0x551b0f);
      } else {
        Promise.resolve(_0x551b0f).then(_0xc6daf9, _0x5a8cc3);
      }
    }
    function _0x1fe3df(_0x54e0ce) {
      return function () {
        var _0x1a65fc = this;
        var _0x431657 = arguments;
        return new Promise(function (_0x59c284, _0x20a47b) {
          var _0x4c8659 = _0x54e0ce.apply(_0x1a65fc, _0x431657);
          function _0x514726(_0x22ee17) {
            _0x546ca6(_0x4c8659, _0x59c284, _0x20a47b, _0x514726, _0x55c754, "next", _0x22ee17);
          }
          function _0x55c754(_0x532744) {
            _0x546ca6(_0x4c8659, _0x59c284, _0x20a47b, _0x514726, _0x55c754, "throw", _0x532744);
          }
          _0x514726(undefined);
        });
      };
    }
    function _0x3d24e1(_0x5f3b68, _0x226d8e, _0x220386) {
      if (_0x226d8e in _0x5f3b68) {
        var _0x166c1f = {
          value: _0x220386,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x5f3b68, _0x226d8e, _0x166c1f);
      } else {
        _0x5f3b68[_0x226d8e] = _0x220386;
      }
      return _0x5f3b68;
    }
    function _0x46b243(_0x4ef3ee) {
      if (typeof Symbol !== "undefined" && _0x4ef3ee[Symbol.iterator] != null || _0x4ef3ee["@@iterator"] != null) {
        return Array.from(_0x4ef3ee);
      }
    }
    function _0x4a525a() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x8f04e9(_0x566c1e) {
      return _0x388ba7(_0x566c1e) || _0x46b243(_0x566c1e) || _0x93f45c(_0x566c1e) || _0x4a525a();
    }
    function _0x93f45c(_0x49438d, _0x332937) {
      if (!_0x49438d) {
        return;
      }
      if (typeof _0x49438d === "string") {
        return _0x430ebf(_0x49438d, _0x332937);
      }
      var _0x282d42 = Object.prototype.toString.call(_0x49438d).slice(8, -1);
      if (_0x282d42 === "Object" && _0x49438d.constructor) {
        _0x282d42 = _0x49438d.constructor.name;
      }
      if (_0x282d42 === "Map" || _0x282d42 === "Set") {
        return Array.from(_0x282d42);
      }
      if (_0x282d42 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x282d42)) {
        return _0x430ebf(_0x49438d, _0x332937);
      }
    }
    function _0x22e524(_0x68ddb9, _0x124184) {
      var _0x6b38fa;
      var _0x286015;
      var _0x1ec522;
      var _0x59142c;
      var _0x348268 = {
        label: 0,
        sent: function () {
          if (_0x1ec522[0] & 1) {
            throw _0x1ec522[1];
          }
          return _0x1ec522[1];
        },
        trys: [],
        ops: []
      };
      _0x59142c = {
        next: _0x42b7e0(0),
        throw: _0x42b7e0(1),
        return: _0x42b7e0(2)
      };
      if (typeof Symbol === "function") {
        _0x59142c[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x59142c;
      function _0x42b7e0(_0x2fb26e) {
        return function (_0x2c562e) {
          return _0x3f8668([_0x2fb26e, _0x2c562e]);
        };
      }
      function _0x3f8668(_0x3ec1d1) {
        if (_0x6b38fa) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x348268) {
          try {
            _0x6b38fa = 1;
            if (_0x286015 && (_0x1ec522 = _0x3ec1d1[0] & 2 ? _0x286015.return : _0x3ec1d1[0] ? _0x286015.throw || ((_0x1ec522 = _0x286015.return) && _0x1ec522.call(_0x286015), 0) : _0x286015.next) && !(_0x1ec522 = _0x1ec522.call(_0x286015, _0x3ec1d1[1])).done) {
              return _0x1ec522;
            }
            _0x286015 = 0;
            if (_0x1ec522) {
              _0x3ec1d1 = [_0x3ec1d1[0] & 2, _0x1ec522.value];
            }
            switch (_0x3ec1d1[0]) {
              case 0:
              case 1:
                _0x1ec522 = _0x3ec1d1;
                break;
              case 4:
                _0x348268.label++;
                var _0x12e884 = {
                  value: _0x3ec1d1[1],
                  done: false
                };
                return _0x12e884;
              case 5:
                _0x348268.label++;
                _0x286015 = _0x3ec1d1[1];
                _0x3ec1d1 = [0];
                continue;
              case 7:
                _0x3ec1d1 = _0x348268.ops.pop();
                _0x348268.trys.pop();
                continue;
              default:
                if (!(_0x1ec522 = _0x348268.trys, _0x1ec522 = _0x1ec522.length > 0 && _0x1ec522[_0x1ec522.length - 1]) && (_0x3ec1d1[0] === 6 || _0x3ec1d1[0] === 2)) {
                  _0x348268 = 0;
                  continue;
                }
                if (_0x3ec1d1[0] === 3 && (!_0x1ec522 || _0x3ec1d1[1] > _0x1ec522[0] && _0x3ec1d1[1] < _0x1ec522[3])) {
                  _0x348268.label = _0x3ec1d1[1];
                  break;
                }
                if (_0x3ec1d1[0] === 6 && _0x348268.label < _0x1ec522[1]) {
                  _0x348268.label = _0x1ec522[1];
                  _0x1ec522 = _0x3ec1d1;
                  break;
                }
                if (_0x1ec522 && _0x348268.label < _0x1ec522[2]) {
                  _0x348268.label = _0x1ec522[2];
                  _0x348268.ops.push(_0x3ec1d1);
                  break;
                }
                if (_0x1ec522[2]) {
                  _0x348268.ops.pop();
                }
                _0x348268.trys.pop();
                continue;
            }
            _0x3ec1d1 = _0x124184.call(_0x68ddb9, _0x348268);
          } catch (_0x4e2421) {
            _0x3ec1d1 = [6, _0x4e2421];
            _0x286015 = 0;
          } finally {
            _0x6b38fa = _0x1ec522 = 0;
          }
        }
        if (_0x3ec1d1[0] & 5) {
          throw _0x3ec1d1[1];
        }
        var _0x2a75b3 = {
          value: _0x3ec1d1[0] ? _0x3ec1d1[1] : undefined,
          done: true
        };
        return _0x2a75b3;
      }
    }
    function _0x4e43fe(_0xdc14a4) {
      return _0x13d9af.apply(this, arguments);
    }
    function _0x13d9af() {
      _0x13d9af = _0x1fe3df(function (_0x210784) {
        return _0x22e524(this, function (_0x1e3cec) {
          return [2, new Promise(function (_0x1a3abb) {
            return setTimeout(function () {
              return _0x1a3abb();
            }, _0x210784);
          })];
        });
      });
      return _0x13d9af.apply(this, arguments);
    }
    function _0x3bcf08() {
      return Math.ceil(Date.now() / 1000);
    }
    function _0x5457f6(_0x53b77b) {
      var _0x224642 = "[";
      _0x53b77b.forEach(function (_0x258e3b) {
        _0x224642 = _0x224642 + _0x258e3b.toShortJson(6) + ",";
      });
      if (_0x224642 != "[") {
        _0x224642 = _0x224642.slice(0, -1);
      }
      _0x224642 = _0x224642 + "]";
      return _0x224642;
    }
    function _0x20c356(_0x2057f1) {
      return _0x2057f1 && typeof _0x2057f1 === "object" && !Array.isArray(_0x2057f1);
    }
    function _0xfc0bae(_0x282b45) {
      for (var _0x29d459 = arguments.length, _0x3432a6 = new Array(_0x29d459 > 1 ? _0x29d459 - 1 : 0), _0xcedef8 = 1; _0xcedef8 < _0x29d459; _0xcedef8++) {
        _0x3432a6[_0xcedef8 - 1] = arguments[_0xcedef8];
      }
      if (!_0x3432a6.length) {
        return _0x282b45;
      }
      var _0x3bee2b = _0x3432a6.shift();
      if (_0x20c356(_0x282b45) && _0x20c356(_0x3bee2b)) {
        for (var _0xdfaaab in _0x3bee2b) {
          if (_0x20c356(_0x3bee2b[_0xdfaaab])) {
            if (!_0x282b45[_0xdfaaab]) {
              Object.assign(_0x282b45, _0x3d24e1({}, _0xdfaaab, {}));
            }
            _0xfc0bae(_0x282b45[_0xdfaaab], _0x3bee2b[_0xdfaaab]);
          } else {
            Object.assign(_0x282b45, _0x3d24e1({}, _0xdfaaab, _0x3bee2b[_0xdfaaab]));
          }
        }
      }
      return _0xfc0bae.apply(undefined, [_0x282b45].concat(_0x8f04e9(_0x3432a6)));
    }
    ;
    function _0x4bdb5e(_0x37d6d4, _0x215464) {
      if (_0x215464 == null || _0x215464 > _0x37d6d4.length) {
        _0x215464 = _0x37d6d4.length;
      }
      for (var _0x280544 = 0, _0x4c6ada = new Array(_0x215464); _0x280544 < _0x215464; _0x280544++) {
        _0x4c6ada[_0x280544] = _0x37d6d4[_0x280544];
      }
      return _0x4c6ada;
    }
    function _0x28db0b(_0x238aec) {
      if (Array.isArray(_0x238aec)) {
        return _0x238aec;
      }
    }
    function _0x2a000a(_0x4c8b19, _0x3e3974, _0x43d129, _0x1eb184, _0x2e4da2, _0x159225, _0x1a169d) {
      try {
        var _0x54a6b0 = _0x4c8b19[_0x159225](_0x1a169d);
        var _0x15b204 = _0x54a6b0.value;
      } catch (_0x1b40ce) {
        _0x43d129(_0x1b40ce);
        return;
      }
      if (_0x54a6b0.done) {
        _0x3e3974(_0x15b204);
      } else {
        Promise.resolve(_0x15b204).then(_0x1eb184, _0x2e4da2);
      }
    }
    function _0x383cba(_0x1311e7) {
      return function () {
        var _0x260eb7 = this;
        var _0x2caa2e = arguments;
        return new Promise(function (_0x2131d6, _0x3ee76e) {
          var _0x3ce941 = _0x1311e7.apply(_0x260eb7, _0x2caa2e);
          function _0x4d6823(_0x4a677e) {
            _0x2a000a(_0x3ce941, _0x2131d6, _0x3ee76e, _0x4d6823, _0x56530d, "next", _0x4a677e);
          }
          function _0x56530d(_0x10e70e) {
            _0x2a000a(_0x3ce941, _0x2131d6, _0x3ee76e, _0x4d6823, _0x56530d, "throw", _0x10e70e);
          }
          _0x4d6823(undefined);
        });
      };
    }
    function _0x72c682(_0x59f96e, _0x12d32b) {
      var _0x3ad7a9 = _0x59f96e == null ? null : typeof Symbol !== "undefined" && _0x59f96e[Symbol.iterator] || _0x59f96e["@@iterator"];
      if (_0x3ad7a9 == null) {
        return;
      }
      var _0x408bf9 = [];
      var _0x2407a5 = true;
      var _0x35a016 = false;
      var _0x10eaa0;
      var _0x284d0a;
      try {
        for (_0x3ad7a9 = _0x3ad7a9.call(_0x59f96e); !(_0x2407a5 = (_0x10eaa0 = _0x3ad7a9.next()).done); _0x2407a5 = true) {
          _0x408bf9.push(_0x10eaa0.value);
          if (_0x12d32b && _0x408bf9.length === _0x12d32b) {
            break;
          }
        }
      } catch (_0x3ce325) {
        _0x35a016 = true;
        _0x284d0a = _0x3ce325;
      } finally {
        try {
          if (!_0x2407a5 && _0x3ad7a9.return != null) {
            _0x3ad7a9.return();
          }
        } finally {
          if (_0x35a016) {
            throw _0x284d0a;
          }
        }
      }
      return _0x408bf9;
    }
    function _0x373688() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x28326d(_0x5d14f8, _0x29039a) {
      return _0x28db0b(_0x5d14f8) || _0x72c682(_0x5d14f8, _0x29039a) || _0x221184(_0x5d14f8, _0x29039a) || _0x373688();
    }
    function _0x221184(_0x36e588, _0x5badc5) {
      if (!_0x36e588) {
        return;
      }
      if (typeof _0x36e588 === "string") {
        return _0x4bdb5e(_0x36e588, _0x5badc5);
      }
      var _0x2731b2 = Object.prototype.toString.call(_0x36e588).slice(8, -1);
      if (_0x2731b2 === "Object" && _0x36e588.constructor) {
        _0x2731b2 = _0x36e588.constructor.name;
      }
      if (_0x2731b2 === "Map" || _0x2731b2 === "Set") {
        return Array.from(_0x2731b2);
      }
      if (_0x2731b2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x2731b2)) {
        return _0x4bdb5e(_0x36e588, _0x5badc5);
      }
    }
    function _0x48fa8a(_0x4af264, _0x15c67d) {
      var _0x3ca184;
      var _0x352f00;
      var _0x1712d1;
      var _0x359798;
      var _0xbd778a = {
        label: 0,
        sent: function () {
          if (_0x1712d1[0] & 1) {
            throw _0x1712d1[1];
          }
          return _0x1712d1[1];
        },
        trys: [],
        ops: []
      };
      _0x359798 = {
        next: _0xbcd3d9(0),
        throw: _0xbcd3d9(1),
        return: _0xbcd3d9(2)
      };
      if (typeof Symbol === "function") {
        _0x359798[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x359798;
      function _0xbcd3d9(_0x364318) {
        return function (_0x31cf84) {
          return _0x5913be([_0x364318, _0x31cf84]);
        };
      }
      function _0x5913be(_0x4d5f70) {
        if (_0x3ca184) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xbd778a) {
          try {
            _0x3ca184 = 1;
            if (_0x352f00 && (_0x1712d1 = _0x4d5f70[0] & 2 ? _0x352f00.return : _0x4d5f70[0] ? _0x352f00.throw || ((_0x1712d1 = _0x352f00.return) && _0x1712d1.call(_0x352f00), 0) : _0x352f00.next) && !(_0x1712d1 = _0x1712d1.call(_0x352f00, _0x4d5f70[1])).done) {
              return _0x1712d1;
            }
            _0x352f00 = 0;
            if (_0x1712d1) {
              _0x4d5f70 = [_0x4d5f70[0] & 2, _0x1712d1.value];
            }
            switch (_0x4d5f70[0]) {
              case 0:
              case 1:
                _0x1712d1 = _0x4d5f70;
                break;
              case 4:
                _0xbd778a.label++;
                var _0x36f326 = {
                  value: _0x4d5f70[1],
                  done: false
                };
                return _0x36f326;
              case 5:
                _0xbd778a.label++;
                _0x352f00 = _0x4d5f70[1];
                _0x4d5f70 = [0];
                continue;
              case 7:
                _0x4d5f70 = _0xbd778a.ops.pop();
                _0xbd778a.trys.pop();
                continue;
              default:
                if (!(_0x1712d1 = _0xbd778a.trys, _0x1712d1 = _0x1712d1.length > 0 && _0x1712d1[_0x1712d1.length - 1]) && (_0x4d5f70[0] === 6 || _0x4d5f70[0] === 2)) {
                  _0xbd778a = 0;
                  continue;
                }
                if (_0x4d5f70[0] === 3 && (!_0x1712d1 || _0x4d5f70[1] > _0x1712d1[0] && _0x4d5f70[1] < _0x1712d1[3])) {
                  _0xbd778a.label = _0x4d5f70[1];
                  break;
                }
                if (_0x4d5f70[0] === 6 && _0xbd778a.label < _0x1712d1[1]) {
                  _0xbd778a.label = _0x1712d1[1];
                  _0x1712d1 = _0x4d5f70;
                  break;
                }
                if (_0x1712d1 && _0xbd778a.label < _0x1712d1[2]) {
                  _0xbd778a.label = _0x1712d1[2];
                  _0xbd778a.ops.push(_0x4d5f70);
                  break;
                }
                if (_0x1712d1[2]) {
                  _0xbd778a.ops.pop();
                }
                _0xbd778a.trys.pop();
                continue;
            }
            _0x4d5f70 = _0x15c67d.call(_0x4af264, _0xbd778a);
          } catch (_0x2abd6f) {
            _0x4d5f70 = [6, _0x2abd6f];
            _0x352f00 = 0;
          } finally {
            _0x3ca184 = _0x1712d1 = 0;
          }
        }
        if (_0x4d5f70[0] & 5) {
          throw _0x4d5f70[1];
        }
        var _0x584003 = {
          value: _0x4d5f70[0] ? _0x4d5f70[1] : undefined,
          done: true
        };
        return _0x584003;
      }
    }
    function _0x21bb12(_0x875cb7, _0x3f24ab, _0x317386) {
      return _0x454e42.apply(this, arguments);
    }
    function _0x454e42() {
      _0x454e42 = _0x383cba(function (_0x1e0531, _0x195aa2, _0x16737f) {
        var _0xea94ab;
        var _0x5338de;
        var _0x44c091;
        var _0x210776;
        return _0x48fa8a(this, function (_0x19c8c8) {
          if (_0x195aa2 != null && _0x195aa2 != 0) {
            _0xea94ab = _0x45b4c7.fromArray(GetCamCoord(_0x195aa2));
          } else {
            _0xea94ab = _0x45b4c7.fromArray(GetGameplayCamCoord());
          }
          _0x5338de = PlayerPedId();
          _0x44c091 = StartShapeTestRay(_0xea94ab.x, _0xea94ab.y, _0xea94ab.z, _0x1e0531.x, _0x1e0531.y, _0x1e0531.z, _0x16737f, _0x5338de, 0);
          _0x210776 = GetShapeTestResult(_0x44c091);
          return [2, [_0x210776[1], _0x210776[2], _0x210776[4]]];
        });
      });
      return _0x454e42.apply(this, arguments);
    }
    function _0x5566d0(_0x2e1e69) {
      return _0xf595c8.apply(this, arguments);
    }
    function _0xf595c8() {
      _0xf595c8 = _0x383cba(function (_0x1b83bb) {
        var _0x172519;
        return _0x48fa8a(this, function (_0xd48751) {
          switch (_0xd48751.label) {
            case 0:
              if (!IsModelValid(_0x1b83bb)) {
                return [3, 4];
              }
              RequestModel(_0x1b83bb);
              _0x172519 = false;
              setTimeout(function () {
                return _0x172519 = true;
              }, 3000);
              _0xd48751.label = 1;
            case 1:
              if (!!HasModelLoaded(_0x1b83bb) || !!_0x172519) {
                return [3, 3];
              }
              return [4, _0x4e43fe(10)];
            case 2:
              _0xd48751.sent();
              return [3, 1];
            case 3:
              return [2, !_0x172519];
            case 4:
              return [2, false];
          }
        });
      });
      return _0xf595c8.apply(this, arguments);
    }
    function _0x75dd02(_0x1bd693) {
      var _0x2267f0 = _0x28326d(GetEntityMatrix(_0x1bd693), 4);
      var _0x57bc45 = _0x2267f0[0];
      var _0x4143a0 = _0x2267f0[1];
      var _0x4b107b = _0x2267f0[2];
      var _0x2a4d04 = _0x2267f0[3];
      return new Float32Array([_0x4143a0[0], _0x4143a0[1], _0x4143a0[2], 0, _0x57bc45[0], _0x57bc45[1], _0x57bc45[2], 0, _0x4b107b[0], _0x4b107b[1], _0x4b107b[2], 0, _0x2a4d04[0], _0x2a4d04[1], _0x2a4d04[2], 1]);
    }
    function _0x23b88f(_0x27c9ca) {
      if (DoesEntityExist(_0x27c9ca)) {
        DeleteObject(_0x27c9ca);
      }
    }
    function _0x17ab28(_0x3efd6e, _0x8e74f5) {
      var _0x186c1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;
      var _0x55375d = GetGameplayCamCoord();
      var _0x43f1c1 = _0x28326d(GetGameplayCamRot(0).map(function (_0x8699e0) {
        return Math.PI / 180 * _0x8699e0;
      }), 3);
      var _0x591e53 = _0x43f1c1[0];
      var _0x4e61d3 = _0x43f1c1[2];
      var _0x4faeb8 = Math.abs(Math.cos(_0x591e53));
      var _0x276473 = [-Math.sin(_0x4e61d3) * _0x4faeb8, Math.cos(_0x4e61d3) * _0x4faeb8, Math.sin(_0x591e53)];
      var _0x6a4ac3 = _0x276473.map(function (_0x29140e, _0x921f68) {
        return _0x55375d[_0x921f68] + _0x29140e;
      });
      var _0x121cc3 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false)).getDistanceFromArray(GetGameplayCamCoord());
      var _0x1fdffd = _0x276473.map(function (_0x3d40d0, _0x26f154) {
        return _0x55375d[_0x26f154] + _0x3d40d0 * (_0x186c1 + _0x121cc3);
      });
      var _0x169d02 = StartShapeTestSweptSphere(_0x6a4ac3[0], _0x6a4ac3[1], _0x6a4ac3[2], _0x1fdffd[0], _0x1fdffd[1], _0x1fdffd[2], 0.2, _0x3efd6e, _0x8e74f5, 7);
      return GetShapeTestResultIncludingMaterial(_0x169d02);
    }
    function _0x20ef4f(_0x45db98) {
      return _0x45db98.match("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$");
    }
    var _0x488f1c = function () {
      var _0x95b741 = _0x383cba(function (_0x20b681) {
        var _0x4b3f22;
        return _0x48fa8a(this, function (_0x433a17) {
          _0x4b3f22 = new Map();
          if (_0x20b681) {
            _0x20b681.forEach(function (_0x235e9d) {
              var _0x11ca2f = _0x235e9d.key;
              var _0x22254c = {
                amountWithoutVariants: _0x235e9d.value.amountWithoutVariants,
                variants: new Map()
              };
              _0x235e9d.value.variantkeyPair.forEach(function (_0x1d9a18) {
                var _0x14db3a = _0x1d9a18.key;
                var _0x2afd44 = _0x1d9a18.value;
                _0x22254c.variants.set(_0x14db3a, _0x2afd44);
              });
              _0x4b3f22.set(_0x11ca2f, _0x22254c);
            });
          }
          return [2, _0x4b3f22];
        });
      });
      return function _0x28e9cf(_0x46e2ea) {
        return _0x95b741.apply(this, arguments);
      };
    }();
    var _0x44c27f = function () {
      var _0x37e1db = _0x383cba(function () {
        return _0x48fa8a(this, function (_0x19858c) {
          switch (_0x19858c.label) {
            case 0:
              return [4, NPX.Procedures.execute("np-editor:generateUUID")];
            case 1:
              return [2, _0x19858c.sent()];
          }
        });
      });
      return function _0x2b3bd7() {
        return _0x37e1db.apply(this, arguments);
      };
    }();
    ;
    function _0x4f28d4(_0xae7d17, _0x33cc50) {
      if (!(_0xae7d17 instanceof _0x33cc50)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x5dba4a(_0x1d6fa6, _0x15c902) {
      for (var _0x2acf71 = 0; _0x2acf71 < _0x15c902.length; _0x2acf71++) {
        var _0xeaead6 = _0x15c902[_0x2acf71];
        _0xeaead6.enumerable = _0xeaead6.enumerable || false;
        _0xeaead6.configurable = true;
        if ("value" in _0xeaead6) {
          _0xeaead6.writable = true;
        }
        Object.defineProperty(_0x1d6fa6, _0xeaead6.key, _0xeaead6);
      }
    }
    function _0x30384d(_0x1d5e12, _0x1b7403, _0x2e35ac) {
      if (_0x1b7403) {
        _0x5dba4a(_0x1d5e12.prototype, _0x1b7403);
      }
      if (_0x2e35ac) {
        _0x5dba4a(_0x1d5e12, _0x2e35ac);
      }
      return _0x1d5e12;
    }
    function _0x587d85(_0x3a23ba, _0x375362, _0x1d7f40) {
      if (_0x375362 in _0x3a23ba) {
        var _0x58c0a3 = {
          value: _0x1d7f40,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x3a23ba, _0x375362, _0x58c0a3);
      } else {
        _0x3a23ba[_0x375362] = _0x1d7f40;
      }
      return _0x3a23ba;
    }
    var _0x1eb068 = function () {
      'use strict';

      function _0x26ffff() {
        var _0x2e2e1d = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        _0x4f28d4(this, _0x26ffff);
        _0x587d85(this, "commands", []);
        _0x587d85(this, "index", -1);
        _0x587d85(this, "limit", undefined);
        this.limit = _0x2e2e1d;
      }
      _0x30384d(_0x26ffff, [{
        key: "add",
        value: function _0x53d7bf(_0x5d815c) {
          this.commands = this.commands.slice(0, this.index + 1);
          this.commands.push(_0x5d815c);
          if (this.limit > 0 && this.commands.length > this.limit) {
            this.commands.shift();
          } else {
            this.index++;
          }
          return this;
        }
      }, {
        key: "redo",
        value: function _0x2d2172() {
          if (this.index < this.commands.length - 1) {
            this.index++;
            this.commands[this.index].redo();
            return true;
          }
          return false;
        }
      }, {
        key: "undo",
        value: function _0x1a8bfe() {
          if (this.index >= 0) {
            this.commands[this.index].undo();
            this.index--;
            return true;
          }
          return false;
        }
      }, {
        key: "commandStack",
        value: function _0x33e8ba() {
          return this.commands.slice(0);
        }
      }]);
      return _0x26ffff;
    }();
    ;
    function _0x359573(_0x262b7e, _0x48ec0f, _0x534d9e, _0x96fd6f, _0x1ffed5, _0x5f1411, _0x4a2883) {
      try {
        var _0x205c0e = _0x262b7e[_0x5f1411](_0x4a2883);
        var _0x2b8a11 = _0x205c0e.value;
      } catch (_0x208a83) {
        _0x534d9e(_0x208a83);
        return;
      }
      if (_0x205c0e.done) {
        _0x48ec0f(_0x2b8a11);
      } else {
        Promise.resolve(_0x2b8a11).then(_0x96fd6f, _0x1ffed5);
      }
    }
    function _0x33506a(_0xa8d4c4) {
      return function () {
        var _0x5a5a4b = this;
        var _0x279f2b = arguments;
        return new Promise(function (_0x51677c, _0x2beb6c) {
          var _0x3fd96f = _0xa8d4c4.apply(_0x5a5a4b, _0x279f2b);
          function _0x3932c8(_0x154c8d) {
            _0x359573(_0x3fd96f, _0x51677c, _0x2beb6c, _0x3932c8, _0x2f0878, "next", _0x154c8d);
          }
          function _0x2f0878(_0x23f2f8) {
            _0x359573(_0x3fd96f, _0x51677c, _0x2beb6c, _0x3932c8, _0x2f0878, "throw", _0x23f2f8);
          }
          _0x3932c8(undefined);
        });
      };
    }
    function _0x57077a(_0x21eece, _0xc0e48b) {
      var _0x27fcc3;
      var _0x47b9ce;
      var _0xd618f9;
      var _0x465817;
      var _0x39f6ab = {
        label: 0,
        sent: function () {
          if (_0xd618f9[0] & 1) {
            throw _0xd618f9[1];
          }
          return _0xd618f9[1];
        },
        trys: [],
        ops: []
      };
      _0x465817 = {
        next: _0x56e213(0),
        throw: _0x56e213(1),
        return: _0x56e213(2)
      };
      if (typeof Symbol === "function") {
        _0x465817[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x465817;
      function _0x56e213(_0x51462b) {
        return function (_0x5248b8) {
          return _0x5bc69e([_0x51462b, _0x5248b8]);
        };
      }
      function _0x5bc69e(_0x3e179e) {
        if (_0x27fcc3) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x39f6ab) {
          try {
            _0x27fcc3 = 1;
            if (_0x47b9ce && (_0xd618f9 = _0x3e179e[0] & 2 ? _0x47b9ce.return : _0x3e179e[0] ? _0x47b9ce.throw || ((_0xd618f9 = _0x47b9ce.return) && _0xd618f9.call(_0x47b9ce), 0) : _0x47b9ce.next) && !(_0xd618f9 = _0xd618f9.call(_0x47b9ce, _0x3e179e[1])).done) {
              return _0xd618f9;
            }
            _0x47b9ce = 0;
            if (_0xd618f9) {
              _0x3e179e = [_0x3e179e[0] & 2, _0xd618f9.value];
            }
            switch (_0x3e179e[0]) {
              case 0:
              case 1:
                _0xd618f9 = _0x3e179e;
                break;
              case 4:
                _0x39f6ab.label++;
                var _0x45618c = {
                  value: _0x3e179e[1],
                  done: false
                };
                return _0x45618c;
              case 5:
                _0x39f6ab.label++;
                _0x47b9ce = _0x3e179e[1];
                _0x3e179e = [0];
                continue;
              case 7:
                _0x3e179e = _0x39f6ab.ops.pop();
                _0x39f6ab.trys.pop();
                continue;
              default:
                if (!(_0xd618f9 = _0x39f6ab.trys, _0xd618f9 = _0xd618f9.length > 0 && _0xd618f9[_0xd618f9.length - 1]) && (_0x3e179e[0] === 6 || _0x3e179e[0] === 2)) {
                  _0x39f6ab = 0;
                  continue;
                }
                if (_0x3e179e[0] === 3 && (!_0xd618f9 || _0x3e179e[1] > _0xd618f9[0] && _0x3e179e[1] < _0xd618f9[3])) {
                  _0x39f6ab.label = _0x3e179e[1];
                  break;
                }
                if (_0x3e179e[0] === 6 && _0x39f6ab.label < _0xd618f9[1]) {
                  _0x39f6ab.label = _0xd618f9[1];
                  _0xd618f9 = _0x3e179e;
                  break;
                }
                if (_0xd618f9 && _0x39f6ab.label < _0xd618f9[2]) {
                  _0x39f6ab.label = _0xd618f9[2];
                  _0x39f6ab.ops.push(_0x3e179e);
                  break;
                }
                if (_0xd618f9[2]) {
                  _0x39f6ab.ops.pop();
                }
                _0x39f6ab.trys.pop();
                continue;
            }
            _0x3e179e = _0xc0e48b.call(_0x21eece, _0x39f6ab);
          } catch (_0x3f1580) {
            _0x3e179e = [6, _0x3f1580];
            _0x47b9ce = 0;
          } finally {
            _0x27fcc3 = _0xd618f9 = 0;
          }
        }
        if (_0x3e179e[0] & 5) {
          throw _0x3e179e[1];
        }
        var _0x25d7d5 = {
          value: _0x3e179e[0] ? _0x3e179e[1] : undefined,
          done: true
        };
        return _0x25d7d5;
      }
    }
    var _0xb24b3 = new Map();
    var _0x4cc2f2 = new Map();
    var _0x12a6d6 = function () {
      var _0x124076 = _0x33506a(function (_0x5e4270) {
        var _0x387ebd;
        var _0x1dc174;
        var _0x51f409;
        var _0x4f0350;
        var _0x471c03;
        var _0x314573;
        var _0x6a6d17;
        var _0xce70a4;
        var _0xa27cbb;
        var _0x1a0e52;
        var _0x53b93f;
        var _0x4e36fb;
        var _0x2c6a70;
        var _0x55ff1f;
        return _0x57077a(this, function (_0x10988e) {
          switch (_0x10988e.label) {
            case 0:
              if (_0xb24b3.has(_0x5e4270)) {
                return [2];
              }
              _0x387ebd = _0x4cc2f2.get(_0x5e4270);
              if (!_0x387ebd) {
                return [3, 9];
              }
              if (!_0x387ebd.interfaceInteraction) {
                return [3, 4];
              }
              _0x1dc174 = _0x387ebd.interfaceInteraction;
              _0x51f409 = [];
              for (_0x4f0350 in _0x1dc174) {
                _0x51f409.push(_0x4f0350);
              }
              _0x471c03 = 0;
              _0x10988e.label = 1;
            case 1:
              if (_0x471c03 >= _0x51f409.length) {
                return [3, 4];
              }
              _0x314573 = _0x51f409[_0x471c03];
              _0x6a6d17 = _0x1dc174[_0x314573];
              return [4, _0x28bd59(_0x6a6d17, _0x5e4270)];
            case 2:
              _0x10988e.sent();
              _0x10988e.label = 3;
            case 3:
              _0x471c03++;
              return [3, 1];
            case 4:
              if (!_0x387ebd.interaction) {
                return [3, 8];
              }
              _0xce70a4 = _0x387ebd.interaction;
              _0xa27cbb = [];
              for (_0x1a0e52 in _0xce70a4) {
                _0xa27cbb.push(_0x1a0e52);
              }
              _0x53b93f = 0;
              _0x10988e.label = 5;
            case 5:
              if (_0x53b93f >= _0xa27cbb.length) {
                return [3, 8];
              }
              _0x4e36fb = _0xa27cbb[_0x53b93f];
              _0x2c6a70 = _0xce70a4[_0x4e36fb];
              return [4, _0x134f3c(_0x2c6a70, _0x5e4270)];
            case 6:
              _0x10988e.sent();
              _0x10988e.label = 7;
            case 7:
              _0x53b93f++;
              return [3, 5];
            case 8:
              _0x55ff1f = _0xb24b3.get(_0x5e4270);
              if (_0x55ff1f) {
                _0x55ff1f.isCompleted = true;
                _0xb24b3.set(_0x5e4270, _0x55ff1f);
              }
              _0x10988e.label = 9;
            case 9:
              return [2];
          }
        });
      });
      return function _0xee1954(_0x6b4482) {
        return _0x124076.apply(this, arguments);
      };
    }();
    var _0x134f3c = function () {
      var _0x1c1eac = _0x33506a(function (_0x1f13bb, _0x8b7249) {
        var _0x3614d7;
        var _0x5d0a23;
        return _0x57077a(this, function (_0xecf97e) {
          if (_0x1f13bb == null) {
            return [2];
          }
          _0x3614d7 = _0xb24b3.get(_0x8b7249);
          if (_0x3614d7 && _0x3614d7.isCompleted) {
            return [2];
          }
          var _0x338e64 = {
            name: _0x1f13bb.id,
            isCompleted: false
          };
          _0xb24b3.set(_0x8b7249, _0x338e64);
          _0x5d0a23 = _0x1f13bb.parameters || [];
          globalThis.exports["np-interact"].AddPeekEntryByModel([GetHashKey(_0x8b7249)], [{
            event: _0x1f13bb.event,
            id: _0x1f13bb.id + "-" + _0x8b7249,
            icon: _0x1f13bb.icon,
            label: _0x1f13bb.label,
            parameters: _0x5d0a23
          }], {
            distance: {
              radius: 2.5
            },
            isEnabled: _0x1f13bb.isEnabled
          });
          return [2];
        });
      });
      return function _0x158a6c(_0x4faebc, _0x434bf9) {
        return _0x1c1eac.apply(this, arguments);
      };
    }();
    var _0x28bd59 = function () {
      var _0x2b5168 = _0x33506a(function (_0x34ff5c, _0x5cc736) {
        var _0x232e2d;
        return _0x57077a(this, function (_0x57b99e) {
          if (_0x34ff5c == null) {
            return [2];
          }
          _0x232e2d = _0xb24b3.get(_0x5cc736);
          if (_0x232e2d && _0x232e2d.isCompleted) {
            return [2];
          }
          var _0x1ae3ea = {
            name: _0x34ff5c.id,
            isCompleted: false
          };
          _0xb24b3.set(_0x5cc736, _0x1ae3ea);
          var _0x345d9b = {
            context: _0x34ff5c.context,
            id: _0x34ff5c.id,
            options: _0x34ff5c.options
          };
          globalThis.exports.interactions.AddInteractionByModel([_0x5cc736], _0x345d9b);
          return [2];
        });
      });
      return function _0x4fb8af(_0x2ea77d, _0x1f269d) {
        return _0x2b5168.apply(this, arguments);
      };
    }();
    ;
    var _0x542443 = _0x5f5650(480);
    var _0x367f00 = Object.defineProperty;
    var _0x46b49f = (_0x2fe995, _0xff771f) => {
      for (var _0x4c9cee in _0xff771f) {
        _0x367f00(_0x2fe995, _0x4c9cee, {
          get: _0xff771f[_0x4c9cee],
          enumerable: true
        });
      }
    };
    var _0x253573 = (_0x202a93, _0x2266dc, _0x520268) => {
      if (!_0x2266dc.has(_0x202a93)) {
        throw TypeError("Cannot " + _0x520268);
      }
    };
    var _0x271bb0 = (_0x2458f3, _0x453dfa, _0x1a14e7) => {
      _0x253573(_0x2458f3, _0x453dfa, "read from private field");
      if (_0x1a14e7) {
        return _0x1a14e7.call(_0x2458f3);
      } else {
        return _0x453dfa.get(_0x2458f3);
      }
    };
    var _0x26daf1 = (_0x14ffe2, _0x2a8b44, _0x5501c1) => {
      if (_0x2a8b44.has(_0x14ffe2)) {
        throw TypeError("Cannot add the same private member more than once");
      }
      if (_0x2a8b44 instanceof WeakSet) {
        _0x2a8b44.add(_0x14ffe2);
      } else {
        _0x2a8b44.set(_0x14ffe2, _0x5501c1);
      }
    };
    var _0x2a5737 = (_0xa047cb, _0x5390b0, _0xe109ea, _0x2e9106) => {
      _0x253573(_0xa047cb, _0x5390b0, "write to private field");
      if (_0x2e9106) {
        _0x2e9106.call(_0xa047cb, _0xe109ea);
      } else {
        _0x5390b0.set(_0xa047cb, _0xe109ea);
      }
      return _0xe109ea;
    };
    var _0x24d89e = (_0x30a2fb, _0x59c9ec, _0x1ad36c) => {
      _0x253573(_0x30a2fb, _0x59c9ec, "access private method");
      return _0x1ad36c;
    };
    var _0x5300d5 = {
      ESC: 322,
      F1: 288,
      F2: 289,
      F3: 170,
      F5: 166,
      F6: 167,
      F7: 168,
      F8: 169,
      F9: 56,
      F10: 57,
      "~": 243,
      "#1": 157,
      "#2": 158,
      "#3": 160,
      "#4": 164,
      "#5": 165,
      "#6": 159,
      "#7": 161,
      "#8": 162,
      "#9": 163,
      "-": 84,
      "=": 83,
      BACKSPACE: 177,
      TAB: 37,
      Q: 44,
      W: 32,
      E: 38,
      R: 45,
      T: 245,
      Y: 246,
      U: 303,
      P: 199,
      ENTER: 18,
      CAPS: 137,
      A: 34,
      S: 8,
      D: 9,
      F: 23,
      G: 47,
      H: 74,
      K: 311,
      L: 182,
      LEFTSHIFT: 21,
      Z: 20,
      X: 73,
      C: 26,
      V: 0,
      B: 29,
      N: 249,
      M: 244,
      ",": 82,
      ".": 81,
      LEFTCTRL: 36,
      LEFTALT: 19,
      SPACE: 22,
      RIGHTCTRL: 70,
      HOME: 213,
      PAGEUP: 10,
      PAGEDOWN: 11,
      DELETE: 178,
      LEFT: 174,
      RIGHT: 175,
      TOP: 27,
      DOWN: 173,
      NENTER: 201,
      N4: 108,
      N5: 60,
      N6: 107,
      "N+": 96,
      "N-": 97,
      N7: 117,
      N8: 61,
      N9: 118
    };
    var _0xebe579 = {
      warning: 1,
      log: 2,
      error: 3,
      debug: 4
    };
    var _0x41bdd5 = typeof GetConvar === "function" ? GetConvar(GetCurrentResourceName() + "_logLevel", "") : "";
    var _0x5a4ebd = typeof GetConvar === "function" ? GetConvar("sv_loglevel", "warning") : "warning";
    _0x5a4ebd = (_0x41bdd5 == null ? undefined : _0x41bdd5.length) > 0 ? _0x41bdd5 : _0x5a4ebd;
    (() => {
      if (!_0xebe579[_0x5a4ebd]) {
        throw new Error("Invalid log level: " + _0x5a4ebd);
      }
    })();
    var _0x15d5c5 = () => _0xebe579[_0x5a4ebd] >= _0xebe579.warning;
    var _0x1e841f = () => _0xebe579[_0x5a4ebd] >= _0xebe579.log;
    var _0x214838 = () => _0xebe579[_0x5a4ebd] >= _0xebe579.error;
    var _0x968521 = () => _0x5a4ebd === "debug";
    var _0x218d84 = {
      warning: (_0x50d0c4, ..._0x41b8aa) => {
        if (!_0x15d5c5()) {
          return;
        }
        _0x542443.log("^3[WARNING] ^7" + _0x50d0c4, ..._0x41b8aa, "^0");
      },
      log: (_0x4a6e17, ..._0x279588) => {
        if (!_0x1e841f()) {
          return;
        }
        _0x542443.log("^5[nopixel] ^7" + _0x4a6e17, ..._0x279588, "^0");
      },
      debug: (_0x26d2cf, ..._0x57147d) => {
        if (!_0x968521()) {
          return;
        }
        _0x542443.log("^2[D] " + _0x26d2cf, ..._0x57147d, "^0");
      },
      error: (_0x518ffb, ..._0x940e99) => {
        if (!_0x214838()) {
          return;
        }
        _0x542443.log("^1[ERROR] " + _0x518ffb, ..._0x940e99, "^0");
      }
    };
    var _0x1d46ac = {};
    var _0x3cada3 = {
      MathUtils: () => _0x5a6865
    };
    _0x46b49f(_0x1d46ac, _0x3cada3);
    var _0x1258e0;
    var _0x5ec081;
    var _0x450173 = class _0x573423 {
      constructor(_0x2b9a9e, _0x413985, _0x300507) {
        _0x26daf1(this, _0x1258e0);
        const _0x458508 = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x2b9a9e, _0x413985, _0x300507);
        this.x = _0x458508.x;
        this.y = _0x458508.y;
        this.z = _0x458508.z;
      }
      equals(_0x5b9d4a, _0x4716fe, _0x598494) {
        const _0x40d20a = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x5b9d4a, _0x4716fe, _0x598494);
        return this.x === _0x40d20a.x && this.y === _0x40d20a.y && this.z === _0x40d20a.z;
      }
      add(_0x4bc25e, _0x4bb040, _0x2c40f7, _0x220862) {
        let _0x559b2d = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x4bc25e, _0x4bb040, _0x2c40f7);
        this.x += _0x220862 ? _0x559b2d.x * _0x220862 : _0x559b2d.x;
        this.y += _0x220862 ? _0x559b2d.y * _0x220862 : _0x559b2d.y;
        this.z += _0x220862 ? _0x559b2d.z * _0x220862 : _0x559b2d.z;
        return this;
      }
      addScalar(_0x5035c7) {
        if (typeof _0x5035c7 !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x += _0x5035c7;
        this.y += _0x5035c7;
        this.z += _0x5035c7;
        return this;
      }
      sub(_0x4e2a7b, _0xf590ab, _0x11c457, _0x501c2f) {
        const _0x1b36bd = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x4e2a7b, _0xf590ab, _0x11c457);
        this.x -= _0x501c2f ? _0x1b36bd.x * _0x501c2f : _0x1b36bd.x;
        this.y -= _0x501c2f ? _0x1b36bd.y * _0x501c2f : _0x1b36bd.y;
        this.z -= _0x501c2f ? _0x1b36bd.z * _0x501c2f : _0x1b36bd.z;
        return this;
      }
      subScalar(_0x1c941f) {
        if (typeof _0x1c941f !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x -= _0x1c941f;
        this.y -= _0x1c941f;
        this.z -= _0x1c941f;
        return this;
      }
      multiply(_0x29a500, _0x2275fb, _0x5475ff) {
        const _0x1071f5 = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x29a500, _0x2275fb, _0x5475ff);
        this.x *= _0x1071f5.x;
        this.y *= _0x1071f5.y;
        this.z *= _0x1071f5.z;
        return this;
      }
      multiplyScalar(_0x5e7487) {
        if (typeof _0x5e7487 !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x *= _0x5e7487;
        this.y *= _0x5e7487;
        this.z *= _0x5e7487;
        return this;
      }
      divide(_0x5ef5f9, _0xefc3ac, _0x45560) {
        const _0x1fd54b = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x5ef5f9, _0xefc3ac, _0x45560);
        this.x /= _0x1fd54b.x;
        this.y /= _0x1fd54b.y;
        this.z /= _0x1fd54b.z;
        return this;
      }
      divideScalar(_0x48562b) {
        if (typeof _0x48562b !== "number") {
          throw new Error("Invalid scalar");
        }
        this.x /= _0x48562b;
        this.y /= _0x48562b;
        this.z /= _0x48562b;
        return this;
      }
      round() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
      }
      floor() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
      }
      ceil() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
      }
      getCenter(_0x30c7e9, _0x3d1d12, _0x28f507) {
        const _0x4be87c = _0x24d89e(this, _0x1258e0, _0x5ec081).call(this, _0x30c7e9, _0x3d1d12, _0x28f507);
        return new _0x573423((this.x + _0x4be87c.x) / 2, (this.y + _0x4be87c.y) / 2, (this.z + _0x4be87c.z) / 2);
      }
      getDistance(_0x263845, _0xa04666, _0x5c4411) {
        const [_0x2ce103, _0x4bafe4, _0x16a701] = _0x263845 instanceof Array ? _0x263845 : typeof _0x263845 === "object" ? [_0x263845.x, _0x263845.y, _0x263845.z] : [_0x263845, _0xa04666, _0x5c4411];
        if (typeof _0x2ce103 !== "number" || typeof _0x4bafe4 !== "number" || typeof _0x16a701 !== "number") {
          throw new Error("Invalid vector coordinates");
        }
        const [_0x575d9e, _0x5159ae, _0x46ff27] = [this.x - _0x2ce103, this.y - _0x4bafe4, this.z - _0x16a701];
        return Math.sqrt(_0x575d9e * _0x575d9e + _0x5159ae * _0x5159ae + _0x46ff27 * _0x46ff27);
      }
      toArray(_0x11d16d) {
        if (typeof _0x11d16d === "number") {
          return [parseFloat(this.x.toFixed(_0x11d16d)), parseFloat(this.y.toFixed(_0x11d16d)), parseFloat(this.z.toFixed(_0x11d16d))];
        }
        return [this.x, this.y, this.z];
      }
      toJSON(_0x48ebf1) {
        if (typeof _0x48ebf1 === "number") {
          return {
            x: parseFloat(this.x.toFixed(_0x48ebf1)),
            y: parseFloat(this.y.toFixed(_0x48ebf1)),
            z: parseFloat(this.z.toFixed(_0x48ebf1))
          };
        }
        var _0x3209a1 = {
          x: this.x,
          y: this.y,
          z: this.z
        };
        return _0x3209a1;
      }
      toString(_0x6b3a4a) {
        return JSON.stringify(this.toJSON(_0x6b3a4a));
      }
    };
    _0x1258e0 = new WeakSet();
    _0x5ec081 = function (_0x43c755, _0x453081, _0x168301) {
      let _0x4ec638 = {
        x: 0,
        y: 0,
        z: 0
      };
      if (_0x43c755 instanceof _0x450173) {
        _0x4ec638 = _0x43c755;
      } else if (_0x43c755 instanceof Array) {
        var _0xc1c2e5 = {
          x: _0x43c755[0],
          y: _0x43c755[1],
          z: _0x43c755[2]
        };
        _0x4ec638 = _0xc1c2e5;
      } else if (typeof _0x43c755 === "object") {
        _0x4ec638 = _0x43c755;
      } else {
        var _0x2923c8 = {
          x: _0x43c755,
          y: _0x453081,
          z: _0x168301
        };
        _0x4ec638 = _0x2923c8;
      }
      if (typeof _0x4ec638.x !== "number" || typeof _0x4ec638.y !== "number" || typeof _0x4ec638.z !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return _0x4ec638;
    };
    var _0x4cd9d1 = _0x450173;
    var _0x548342 = (_0x2c5753, _0x179850, _0x362cd9) => {
      return Math.min(Math.max(_0x2c5753, _0x179850), _0x362cd9);
    };
    var _0x55ea70 = (_0xa5ec30, _0x27d860, _0x4a525f) => {
      return _0x27d860[0] + (_0x4a525f - _0xa5ec30[0]) * (_0x27d860[1] - _0x27d860[0]) / (_0xa5ec30[1] - _0xa5ec30[0]);
    };
    var _0x5a8679 = ([_0x18c958, _0x47dff0, _0x214577], [_0xac2dc8, _0x3e5a31, _0x4b88a0]) => {
      const [_0x4048c9, _0x31e08f, _0x18f144] = [_0x18c958 - _0xac2dc8, _0x47dff0 - _0x3e5a31, _0x214577 - _0x4b88a0];
      return Math.sqrt(_0x4048c9 * _0x4048c9 + _0x31e08f * _0x31e08f + _0x18f144 * _0x18f144);
    };
    var _0x65a488 = (_0x36f668, _0x146251) => {
      if (_0x146251) {
        return Math.floor(Math.random() * (_0x146251 - _0x36f668 + 1) + _0x36f668);
      } else {
        return Math.floor(Math.random() * _0x36f668);
      }
    };
    var _0x22c763 = (_0x32ebd7, _0x46f887, _0xea5e0e) => {
      if (_0x32ebd7 instanceof _0x4cd9d1) {
        return _0x32ebd7;
      } else if (_0x32ebd7 instanceof Array) {
        return new _0x4cd9d1(_0x32ebd7);
      } else if (typeof _0x32ebd7 === "object") {
        return new _0x4cd9d1(_0x32ebd7);
      }
      if (typeof _0x32ebd7 !== "number" || typeof _0x46f887 !== "number" || typeof _0xea5e0e !== "number") {
        throw new Error("Invalid vector coordinates");
      }
      return new _0x4cd9d1(_0x32ebd7, _0x46f887, _0xea5e0e);
    };
    var _0x3348f8 = {
      clamp: _0x548342,
      getMapRange: _0x55ea70,
      getDistance: _0x5a8679,
      getRandomNumber: _0x65a488,
      parseVector3: _0x22c763
    };
    var _0x5a6865 = _0x3348f8;
    function _0x22e1ea(_0x1fb8c6, _0x11d379) {
      const _0x19ce58 = "_";
      const _0x6c3d6b = _0x37359d((_0x527672, _0x357557, ..._0x23f479) => {
        return _0x1fb8c6(_0x527672, ..._0x23f479);
      }, _0x11d379);
      return {
        get: function (..._0x14c8e2) {
          return _0x6c3d6b.get(_0x19ce58, ..._0x14c8e2);
        },
        reset: function () {
          _0x6c3d6b.reset(_0x19ce58);
        }
      };
    }
    function _0x37359d(_0x3a7502, _0x358dea) {
      const _0x43c3f1 = _0x358dea.timeToLive || 60000;
      const _0x14297f = {};
      async function _0xfbc6c2(_0x2ab772, ..._0xc1c46a) {
        let _0x5503ea = _0x14297f[_0x2ab772];
        if (!_0x5503ea) {
          _0x5503ea = {
            value: null,
            lastUpdated: 0
          };
          _0x14297f[_0x2ab772] = _0x5503ea;
        }
        const _0x5cc10e = Date.now();
        if (_0x5503ea.lastUpdated === 0 || _0x5cc10e - _0x5503ea.lastUpdated > _0x43c3f1) {
          const [_0x2f63a9, _0x200740] = await _0x3a7502(_0x5503ea, _0x2ab772, ..._0xc1c46a);
          if (_0x2f63a9) {
            _0x5503ea.lastUpdated = _0x5cc10e;
            _0x5503ea.value = _0x200740;
          }
          return _0x200740;
        }
        return await new Promise(_0x24a136 => setTimeout(() => _0x24a136(_0x5503ea.value), 0));
      }
      return {
        get: async function (_0x286031, ..._0x2dd93d) {
          return await _0xfbc6c2(_0x286031, ..._0x2dd93d);
        },
        reset: function (_0x6c1803) {
          const _0x1da4d3 = _0x14297f[_0x6c1803];
          if (_0x1da4d3) {
            _0x1da4d3.lastUpdated = 0;
          }
        }
      };
    }
    function _0x48c68d() {
      if (typeof global.crypto === "object") {
        return _0x247fca();
      } else {
        return new _0xdddd5a(4).toString();
      }
    }
    function _0x52340b(_0x93918e) {
      return _0x5a4288(_0x93918e, _0x5a4288.URL);
    }
    function _0x430b44(_0x290f08, _0x51db9e) {
      return new Promise((_0x485c00, _0x59b39e) => {
        const _0x36efc9 = Date.now();
        const _0x5e0f25 = setInterval(() => {
          const _0x1f7b18 = Date.now() - _0x36efc9 > _0x51db9e;
          if (_0x290f08() || _0x1f7b18) {
            clearInterval(_0x5e0f25);
            return _0x485c00(_0x1f7b18);
          }
        }, 1);
      });
    }
    function _0x1ad348(_0x51d050) {
      return new Promise(_0x4aa18b => setTimeout(() => _0x4aa18b(), _0x51d050));
    }
    function _0x48cf7f() {
      return _0x1ad348(0);
    }
    var _0x52d4f7 = {
      cache: _0x22e1ea,
      cacheableMap: _0x37359d,
      waitForCondition: _0x430b44,
      getUUID: _0x48c68d,
      getStringHash: _0x52340b,
      wait: _0x1ad348,
      waitForNextFrame: _0x48cf7f,
      deflate: _0x26a22d,
      inflate: _0x30b87f,
      ..._0x1d46ac
    };
    var _0x40291c = _0x52d4f7;
    var _0x42840a;
    var _0x1604f6;
    var _0x1ea1c1 = class {
      constructor(_0x2e8709) {
        _0x26daf1(this, _0x42840a, undefined);
        _0x26daf1(this, _0x1604f6, undefined);
        _0x2a5737(this, _0x1604f6, _0x2e8709 ?? 5);
        _0x2a5737(this, _0x42840a, new Map());
      }
      setTTL(_0x488247) {
        _0x2a5737(this, _0x1604f6, _0x488247);
      }
      set(_0x4cf12e, _0x1df816, _0x58d9d2) {
        _0x271bb0(this, _0x42840a).set(_0x4cf12e, {
          value: _0x1df816,
          expiration: Date.now() + (_0x58d9d2 ?? _0x271bb0(this, _0x1604f6)) * 1000
        });
        return this;
      }
      get(_0x3718b2, _0x5ed8f8 = false) {
        const _0xce5a0f = _0x271bb0(this, _0x42840a).get(_0x3718b2);
        const _0x12833a = _0xce5a0f ? _0x5ed8f8 ? true : _0xce5a0f.expiration > Date.now() : false;
        if (!_0xce5a0f || !_0x12833a) {
          if (_0xce5a0f) {
            _0x271bb0(this, _0x42840a).delete(_0x3718b2);
          }
          return;
        }
        return _0xce5a0f.value;
      }
      has(_0x1a0f88, _0x3f7bf5 = false) {
        const _0x2d2b16 = _0x271bb0(this, _0x42840a).get(_0x1a0f88);
        const _0x42b80c = _0x2d2b16 ? _0x3f7bf5 ? true : _0x2d2b16.expiration > Date.now() : false;
        if (_0x2d2b16 && !_0x42b80c) {
          _0x271bb0(this, _0x42840a).delete(_0x1a0f88);
        }
        return _0x42b80c;
      }
      delete(_0x3b6a2d) {
        return _0x271bb0(this, _0x42840a).delete(_0x3b6a2d);
      }
      clear() {
        _0x271bb0(this, _0x42840a).clear();
      }
      values(_0x136001 = false) {
        const _0x199129 = [];
        const _0x33f9a5 = Date.now();
        for (const _0x31928a of _0x271bb0(this, _0x42840a).values()) {
          if (_0x136001 || _0x31928a.expiration > _0x33f9a5) {
            _0x199129.push(_0x31928a.value);
          }
        }
        return _0x199129;
      }
      keys(_0x139e34 = false) {
        const _0xfcb54e = [];
        const _0x35ba43 = Date.now();
        for (const [_0x753a1c, _0x4bbf7f] of _0x271bb0(this, _0x42840a).entries()) {
          if (_0x139e34 || _0x4bbf7f.expiration > _0x35ba43) {
            _0xfcb54e.push(_0x753a1c);
          }
        }
        return _0xfcb54e;
      }
      entries(_0x4c312b = false) {
        const _0x586191 = [];
        const _0x3dc118 = Date.now();
        for (const [_0x3f1056, _0x8cce37] of _0x271bb0(this, _0x42840a).entries()) {
          if (_0x4c312b || _0x8cce37.expiration > _0x3dc118) {
            _0x586191.push([_0x3f1056, _0x8cce37.value]);
          }
        }
        return _0x586191;
      }
    };
    _0x42840a = new WeakMap();
    _0x1604f6 = new WeakMap();
    var _0x3a930b = (_0x38c8a7 => {
      _0x38c8a7[_0x38c8a7.hat = 0] = "hat";
      _0x38c8a7[_0x38c8a7.mask = 1] = "mask";
      _0x38c8a7[_0x38c8a7.glasses = 2] = "glasses";
      _0x38c8a7[_0x38c8a7.armor = 3] = "armor";
      _0x38c8a7[_0x38c8a7.shoes = 4] = "shoes";
      _0x38c8a7[_0x38c8a7.idcard = 5] = "idcard";
      _0x38c8a7[_0x38c8a7.mobilephone = 6] = "mobilephone";
      _0x38c8a7[_0x38c8a7.keyring = 7] = "keyring";
      _0x38c8a7[_0x38c8a7.bankcard = 8] = "bankcard";
      _0x38c8a7[_0x38c8a7.backpack = 9] = "backpack";
      return _0x38c8a7;
    })(_0x3a930b || {});
    ;
    var _0x453255 = ["tiny", "small", "medium", "large"];
    var _0x38a666 = {};
    function _0x31d389(_0x2f475c, _0x14f909, _0xb87f0b) {
      if (!_0x453255.includes(_0xb87f0b)) {
        return;
      }
      var _0x10187e = {
        inventoryWeight: _0x2f475c,
        inventorySlots: _0x14f909
      };
      var _0xb79a85 = {
        event: "np-housing:viewStash",
        id: "editor-housing-stash-" + _0xb87f0b,
        icon: "box-open",
        label: "View Stash",
        isEnabled: function (_0x25c4ac) {
          return true;
        },
        parameters: _0x10187e
      };
      return _0xb79a85;
    }
    function _0x140713() {
      var _0x4d6ff9 = {
        event: "np-housing:openMaterial",
        id: "editor-housing-material",
        icon: "box-open",
        label: "View Furniture Stash",
        isEnabled: function (_0x5ae325) {
          return true;
        },
        parameters: {}
      };
      var _0x336410 = _0x4d6ff9;
      return _0x336410;
    }
    function _0x62236() {
      var _0x374efd = {
        event: "np-housing:viewSettings",
        id: "editor-housing-settings",
        icon: "box-open",
        label: "View Housing Settings",
        isEnabled: function (_0x47e77f) {
          var _0x77348d = globalThis.exports.config.GetMiscConfig("spawn.apartments.only") ?? true;
          if (_0x77348d) {
            return false;
          }
          return true;
        },
        parameters: {}
      };
      return _0x374efd;
    }
    function _0x41cdb7() {
      var _0x4ecc2e = {
        event: "apartments:openOutfits",
        id: "editor-outfits",
        icon: "shirt",
        label: "View Outfits",
        isEnabled: function (_0x58634f) {
          return true;
        },
        parameters: {}
      };
      var _0x30c10e = _0x4ecc2e;
      return _0x30c10e;
    }
    function _0x192a1d() {
      var _0x1439b7 = {
        event: "apartments:Logout",
        id: "editor-logout",
        icon: "arrow-right-from-bracket",
        label: "Change Character",
        isEnabled: function (_0x501dc4) {
          return true;
        },
        parameters: {}
      };
      return _0x1439b7;
    }
    function _0x5c2677() {
      var _0x39393d = {
        flag: [],
        distance: {
          use: 2,
          draw: 5
        },
        isEnabled: function () {
          return true;
        }
      };
      var _0x4ebc5e = {
        id: "weed:rack:inventory",
        options: [{
          id: "weed:rack:inventory",
          label: "Open Rack",
          eventSDK: "weed:inventory:rack",
          parameters: {}
        }],
        context: _0x39393d
      };
      var _0x516f09 = _0x4ebc5e;
      return _0x516f09;
    }
    function _0x155db1() {
      var _0x327051 = {
        id: "washing:machine:inventory",
        options: [{
          id: "washing:machine:inventory",
          label: "Load Machine",
          eventSDK: "washing:machine:inventory",
          parameters: {}
        }, {
          id: "washing:machine:inventory:take",
          label: "Unload Machine",
          eventSDK: "washing:machine:inventory:take",
          parameters: {}
        }],
        context: {
          flag: [],
          distance: {
            use: 2,
            draw: 5
          },
          skipLos: true,
          isEnabled: function () {
            return true;
          }
        }
      };
      return _0x327051;
    }
    ;
    var _0x2e7c1f = {
      "Drug Items": {
        objects: {
          "weed_rack[low]": {
            prop_weed_rack: {
              display: "Weed Rack",
              data: {
                interfaceInteraction: {
                  weedRack: _0x5c2677()
                },
                attribute: {
                  hideInUI: true
                }
              }
            }
          },
          "weed_heater[]": {
            prop_heater: {
              display: "Weed Heater",
              data: {
                attribute: {
                  hideInUI: true,
                  heatingValue: 100,
                  powerConsumption: 20
                }
              }
            }
          }
        }
      },
      "Cupboards and Counters": {
        Cupboards: {
          objects: {
            cupboard: {
              np2_v_med_cor_wallunita: {
                display: "np2_v_med_cor_wallunita [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_v_med_lab_wallcab: {
                display: "np2_v_med_lab_wallcab [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              }
            }
          }
        },
        Counters: {
          objects: {
            counter: {
              np2_v_med_benchcentr: {
                display: "np2_v_med_benchcentr [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_med_bench1: {
                display: "np2_v_med_bench1 [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_med_bench2: {
                display: "np2_v_med_bench2 [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_prop_ff_counter_01: {
                display: "np2_prop_ff_counter_01 [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_p_new_j_counter_02: {
                display: "np2_p_new_j_counter_02 [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              }
            }
          }
        }
      },
      Decorative: {
        "Decorative - Decorative Boxes": {
          objects: {
            decor_box: {
              np2_ba_prop_battle_chest_closed: {
                display: "np2_ba_prop_battle_chest_closed [STORAGE TINY]",
                data: {
                  interaction: {
                    inventory: _0x31d389(10, 2, "tiny")
                  }
                }
              },
              np2_v_res_m_spanishbox: {
                display: "np2_v_res_m_spanishbox [STORAGE TINY]",
                data: {
                  interaction: {
                    inventory: _0x31d389(10, 2, "tiny")
                  }
                }
              },
              np2_v_res_tre_basketmess: {
                display: "np2_v_res_tre_basketmess [STORAGE TINY]",
                data: {
                  interaction: {
                    inventory: _0x31d389(10, 2, "tiny")
                  }
                }
              },
              np2_v_res_tt_basket: {
                display: "np2_v_res_tt_basket [STORAGE TINY]",
                data: {
                  interaction: {
                    inventory: _0x31d389(10, 2, "tiny")
                  }
                }
              },
              np2_v_res_fa_basket: {
                display: "np2_v_res_fa_basket [STORAGE TINY]",
                data: {
                  interaction: {
                    inventory: _0x31d389(10, 2, "tiny")
                  }
                }
              }
            }
          }
        }
      },
      Desks: {
        objects: {
          desk: {
            np2_prop_office_desk_01: {
              display: "np2_prop_office_desk_01 [STORAGE MEDIUM]",
              data: {
                interaction: {
                  inventory: _0x31d389(50, 4, "medium")
                }
              }
            }
          }
        }
      },
      "Kitchen Appliances": {
        "Kitchen Appliances - Fridges": {
          objects: {
            fridge: {
              np2_v_res_fridgemoda: {
                display: "np2_v_res_fridgemoda [STORAGE FRIDGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(120, 12, "fridge")
                  },
                  attribute: {
                    coolingValue: 14,
                    powerConsumption: 12
                  }
                }
              },
              np2_v_res_fridgemodsml: {
                display: "np2_v_res_fridgemodsml [STORAGE FRIDGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(120, 12, "fridge")
                  },
                  attribute: {
                    coolingValue: 12,
                    powerConsumption: 10
                  }
                }
              },
              np2_prop_fridge_03: {
                display: "np2_prop_fridge_03 [STORAGE FRIDGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(120, 12, "fridge")
                  },
                  attribute: {
                    coolingValue: 8,
                    powerConsumption: 8
                  }
                }
              },
              np2_v_res_tre_fridge: {
                display: "np2_v_res_tre_fridge [STORAGE FRIDGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(120, 12, "fridge")
                  },
                  attribute: {
                    coolingValue: 8,
                    powerConsumption: 8
                  }
                }
              },
              np2_prop_trailr_fridge: {
                display: "np2_prop_trailr_fridge [STORAGE FRIDGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(120, 12, "fridge")
                  },
                  attribute: {
                    coolingValue: 8,
                    powerConsumption: 8
                  }
                }
              }
            }
          }
        }
      },
      "Plumbing and Water": {
        "Plumbing and Water - Sinks": {
          objects: {
            sink: {
              np2_v_med_fumesink: {
                display: "np2_v_med_fumesink [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  },
                  attribute: {
                    waterConsumption: 5
                  }
                }
              }
            }
          }
        }
      },
      "Sideboards Shelves": {
        "Sideboards Shelves - High Quality": {
          objects: {
            sideboard_hq: {
              np2_v_res_tre_bedsidetable: {
                display: "np2_v_res_tre_bedsidetable [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_res_tre_bedsidetableb: {
                display: "np2_v_res_tre_bedsidetableb [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_res_tre_smallbookshelf: {
                display: "np2_v_res_tre_smallbookshelf [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_v_res_tre_storageunit: {
                display: "np2_v_res_tre_storageunit [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_res_tre_wardrobe: {
                display: "np2_v_res_tre_wardrobe [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_res_tre_wdunitscuz: {
                display: "np2_v_res_tre_wdunitscuz [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_ret_fh_displayc: {
                display: "np2_v_ret_fh_displayc [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_res_cabinet: {
                display: "np2_v_res_cabinet [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_res_d_dressingtable: {
                display: "np2_v_res_d_dressingtable [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_v_res_d_sideunit: {
                display: "np2_v_res_d_sideunit [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_v_res_mbdresser: {
                display: "np2_v_res_mbdresser [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_v_res_mconsolemod: {
                display: "np2_v_res_mconsolemod [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              },
              np2_v_res_mcupboard: {
                display: "np2_v_res_mcupboard [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_res_mdchest: {
                display: "np2_v_res_mdchest [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_res_m_armoire: {
                display: "np2_v_res_m_armoire [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_res_m_sidetable: {
                display: "np2_v_res_m_sidetable [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_res_mddresser: {
                display: "np2_v_res_mddresser [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_corp_bk_filecab: {
                display: "np2_v_corp_bk_filecab [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_v_corp_bk_filedraw: {
                display: "np2_v_corp_bk_filedraw [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              }
            }
          }
        }
      },
      Storage: {
        "Storage - Barrels": {
          objects: {
            barrel: {
              sf_prop_sf_barrel_1a: {
                display: "sf_prop_sf_barrel_1a [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(80, 4, "medium")
                  }
                }
              }
            }
          }
        },
        "Storage - Chests": {
          objects: {
            crate_large: {
              np2_hei_heist_acc_storebox_01: {
                display: "np2_hei_heist_acc_storebox_01 [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_res_tre_storagebox: {
                display: "np2_v_res_tre_storagebox [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              },
              np2_prop_devin_box_closed: {
                display: "np2_prop_devin_box_closed [STORAGE LARGE]",
                data: {
                  interaction: {
                    inventory: _0x31d389(100, 6, "large")
                  }
                }
              }
            }
          }
        }
      },
      Tables: {
        "Tables - High Quality": {
          objects: {
            table_hq: {
              np2_v_res_d_smallsidetable: {
                display: "np2_v_res_d_smallsidetable [STORAGE TINY]",
                data: {
                  interaction: {
                    inventory: _0x31d389(10, 2, "tiny")
                  }
                }
              },
              np2_v_res_mdbedtable: {
                display: "np2_v_res_mdbedtable [STORAGE SMALL]",
                data: {
                  interaction: {
                    inventory: _0x31d389(30, 3, "small")
                  }
                }
              },
              np2_v_res_m_h_console: {
                display: "np2_v_res_m_h_console [STORAGE MEDIUM]",
                data: {
                  interaction: {
                    inventory: _0x31d389(50, 4, "medium")
                  }
                }
              }
            }
          }
        }
      },
      Utility: {
        "Spawn Point": {
          objects: {
            none: {
              prop_ped_gib_01: {
                display: "Spawn Point",
                data: {
                  attribute: {
                    hideInWorld: true,
                    isSpawn: true
                  }
                }
              }
            }
          }
        },
        "Security Panel": {
          objects: {
            none: {
              hei_prop_hei_bio_panel: {
                display: "Security Panel",
                data: {
                  interaction: {
                    settings: _0x62236(),
                    outfits: _0x41cdb7(),
                    logout: _0x192a1d()
                  }
                }
              }
            }
          }
        },
        "Furniture Stash": {
          objects: {
            "furniture_stash[]": {
              np_wood_chest: {
                display: "Furniture Stash",
                data: {
                  interaction: {
                    material: _0x140713()
                  }
                }
              }
            }
          }
        },
        "Crafting Bench": {
          objects: {
            "crafting_bench[]": {
              np_prop_bench_01: {
                display: "Crafting Bench",
                data: {
                  attribute: {
                    craftingBench: true
                  }
                }
              }
            }
          }
        }
      },
      "Laundry Clothing Cleaning Soaps": {
        "Laundry Clothing Cleaning Soaps - Washing Machines": {
          objects: {
            washing_machine: {
              prop_rub_washer_01: {
                display: "prop_rub_washer_01",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 4,
                    gasConsumption: 0
                  }
                }
              },
              v_ret_fh_dryer: {
                display: "v_ret_fh_dryer",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 0,
                    gasConsumption: 0
                  }
                }
              },
              prop_washer_01: {
                display: "prop_washer_01",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 4,
                    gasConsumption: 0
                  }
                }
              },
              prop_washer_02: {
                display: "prop_washer_02",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 4,
                    gasConsumption: 0
                  }
                }
              },
              prop_washer_03: {
                display: "prop_washer_03",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 4,
                    gasConsumption: 0
                  }
                }
              },
              v_ret_fh_washmach: {
                display: "v_ret_fh_washmach",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 4,
                    gasConsumption: 0
                  }
                }
              },
              bkr_prop_prtmachine_dryer: {
                display: "bkr_prop_prtmachine_dryer",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 0,
                    gasConsumption: 0
                  }
                }
              },
              bkr_prop_prtmachine_dryer_op: {
                display: "bkr_prop_prtmachine_dryer_op",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 0,
                    gasConsumption: 0
                  }
                }
              },
              bkr_prop_prtmachine_dryer_spin: {
                display: "bkr_prop_prtmachine_dryer_spin",
                data: {
                  interfaceInteraction: {
                    washingMachine: _0x155db1()
                  },
                  attribute: {
                    lightValue: 0,
                    heatingValue: 0,
                    coolingValue: 0,
                    waterValue: 0,
                    happinessValue: 0,
                    wasteValue: 0,
                    powerConsumption: 5,
                    waterConsumption: 0,
                    gasConsumption: 0
                  }
                }
              }
            }
          }
        }
      }
    };
    ;
    function _0x2fd4e1(_0xcb4466, _0x1a2c74) {
      if (_0x1a2c74 == null || _0x1a2c74 > _0xcb4466.length) {
        _0x1a2c74 = _0xcb4466.length;
      }
      for (var _0x5ad21d = 0, _0x19c49b = new Array(_0x1a2c74); _0x5ad21d < _0x1a2c74; _0x5ad21d++) {
        _0x19c49b[_0x5ad21d] = _0xcb4466[_0x5ad21d];
      }
      return _0x19c49b;
    }
    function _0x1e6de2(_0x55152e) {
      if (Array.isArray(_0x55152e)) {
        return _0x55152e;
      }
    }
    function _0x302584(_0x51428a, _0x80217, _0x5748d3, _0x54b835, _0x59888c, _0x18d679, _0x37ca2d) {
      try {
        var _0x5491e8 = _0x51428a[_0x18d679](_0x37ca2d);
        var _0x5d69e7 = _0x5491e8.value;
      } catch (_0x44efc) {
        _0x5748d3(_0x44efc);
        return;
      }
      if (_0x5491e8.done) {
        _0x80217(_0x5d69e7);
      } else {
        Promise.resolve(_0x5d69e7).then(_0x54b835, _0x59888c);
      }
    }
    function _0x4fe818(_0x2f1e0c) {
      return function () {
        var _0x58387c = this;
        var _0xfaa3d5 = arguments;
        return new Promise(function (_0x2859ee, _0x476310) {
          var _0x161850 = _0x2f1e0c.apply(_0x58387c, _0xfaa3d5);
          function _0xf65c65(_0x16540c) {
            _0x302584(_0x161850, _0x2859ee, _0x476310, _0xf65c65, _0x3ab889, "next", _0x16540c);
          }
          function _0x3ab889(_0x430a11) {
            _0x302584(_0x161850, _0x2859ee, _0x476310, _0xf65c65, _0x3ab889, "throw", _0x430a11);
          }
          _0xf65c65(undefined);
        });
      };
    }
    function _0x3b3f26(_0x5077be, _0x150bc1) {
      var _0x4673c0 = _0x5077be == null ? null : typeof Symbol !== "undefined" && _0x5077be[Symbol.iterator] || _0x5077be["@@iterator"];
      if (_0x4673c0 == null) {
        return;
      }
      var _0x1569c2 = [];
      var _0x11d320 = true;
      var _0x2d94c5 = false;
      var _0x19c78c;
      var _0x312b71;
      try {
        for (_0x4673c0 = _0x4673c0.call(_0x5077be); !(_0x11d320 = (_0x19c78c = _0x4673c0.next()).done); _0x11d320 = true) {
          _0x1569c2.push(_0x19c78c.value);
          if (_0x150bc1 && _0x1569c2.length === _0x150bc1) {
            break;
          }
        }
      } catch (_0x300cd1) {
        _0x2d94c5 = true;
        _0x312b71 = _0x300cd1;
      } finally {
        try {
          if (!_0x11d320 && _0x4673c0.return != null) {
            _0x4673c0.return();
          }
        } finally {
          if (_0x2d94c5) {
            throw _0x312b71;
          }
        }
      }
      return _0x1569c2;
    }
    function _0xaf647d() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0xf90359(_0x2d281b, _0x4319ff) {
      return _0x1e6de2(_0x2d281b) || _0x3b3f26(_0x2d281b, _0x4319ff) || _0x1b7547(_0x2d281b, _0x4319ff) || _0xaf647d();
    }
    function _0x1b7547(_0x44f0c7, _0x231e9b) {
      if (!_0x44f0c7) {
        return;
      }
      if (typeof _0x44f0c7 === "string") {
        return _0x2fd4e1(_0x44f0c7, _0x231e9b);
      }
      var _0x32c779 = Object.prototype.toString.call(_0x44f0c7).slice(8, -1);
      if (_0x32c779 === "Object" && _0x44f0c7.constructor) {
        _0x32c779 = _0x44f0c7.constructor.name;
      }
      if (_0x32c779 === "Map" || _0x32c779 === "Set") {
        return Array.from(_0x32c779);
      }
      if (_0x32c779 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x32c779)) {
        return _0x2fd4e1(_0x44f0c7, _0x231e9b);
      }
    }
    function _0x5ebcce(_0x511a2a, _0x555a13) {
      var _0x2a9a9e;
      var _0x1b194f;
      var _0x318370;
      var _0x1e58bd;
      var _0x4d7d82 = {
        label: 0,
        sent: function () {
          if (_0x318370[0] & 1) {
            throw _0x318370[1];
          }
          return _0x318370[1];
        },
        trys: [],
        ops: []
      };
      _0x1e58bd = {
        next: _0x4a50cd(0),
        throw: _0x4a50cd(1),
        return: _0x4a50cd(2)
      };
      if (typeof Symbol === "function") {
        _0x1e58bd[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1e58bd;
      function _0x4a50cd(_0x921cea) {
        return function (_0x2dc8e6) {
          return _0x1481b6([_0x921cea, _0x2dc8e6]);
        };
      }
      function _0x1481b6(_0x5a3639) {
        if (_0x2a9a9e) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4d7d82) {
          try {
            _0x2a9a9e = 1;
            if (_0x1b194f && (_0x318370 = _0x5a3639[0] & 2 ? _0x1b194f.return : _0x5a3639[0] ? _0x1b194f.throw || ((_0x318370 = _0x1b194f.return) && _0x318370.call(_0x1b194f), 0) : _0x1b194f.next) && !(_0x318370 = _0x318370.call(_0x1b194f, _0x5a3639[1])).done) {
              return _0x318370;
            }
            _0x1b194f = 0;
            if (_0x318370) {
              _0x5a3639 = [_0x5a3639[0] & 2, _0x318370.value];
            }
            switch (_0x5a3639[0]) {
              case 0:
              case 1:
                _0x318370 = _0x5a3639;
                break;
              case 4:
                _0x4d7d82.label++;
                var _0x157592 = {
                  value: _0x5a3639[1],
                  done: false
                };
                return _0x157592;
              case 5:
                _0x4d7d82.label++;
                _0x1b194f = _0x5a3639[1];
                _0x5a3639 = [0];
                continue;
              case 7:
                _0x5a3639 = _0x4d7d82.ops.pop();
                _0x4d7d82.trys.pop();
                continue;
              default:
                if (!(_0x318370 = _0x4d7d82.trys, _0x318370 = _0x318370.length > 0 && _0x318370[_0x318370.length - 1]) && (_0x5a3639[0] === 6 || _0x5a3639[0] === 2)) {
                  _0x4d7d82 = 0;
                  continue;
                }
                if (_0x5a3639[0] === 3 && (!_0x318370 || _0x5a3639[1] > _0x318370[0] && _0x5a3639[1] < _0x318370[3])) {
                  _0x4d7d82.label = _0x5a3639[1];
                  break;
                }
                if (_0x5a3639[0] === 6 && _0x4d7d82.label < _0x318370[1]) {
                  _0x4d7d82.label = _0x318370[1];
                  _0x318370 = _0x5a3639;
                  break;
                }
                if (_0x318370 && _0x4d7d82.label < _0x318370[2]) {
                  _0x4d7d82.label = _0x318370[2];
                  _0x4d7d82.ops.push(_0x5a3639);
                  break;
                }
                if (_0x318370[2]) {
                  _0x4d7d82.ops.pop();
                }
                _0x4d7d82.trys.pop();
                continue;
            }
            _0x5a3639 = _0x555a13.call(_0x511a2a, _0x4d7d82);
          } catch (_0xa83035) {
            _0x5a3639 = [6, _0xa83035];
            _0x1b194f = 0;
          } finally {
            _0x2a9a9e = _0x318370 = 0;
          }
        }
        if (_0x5a3639[0] & 5) {
          throw _0x5a3639[1];
        }
        var _0x52b899 = {
          value: _0x5a3639[0] ? _0x5a3639[1] : undefined,
          done: true
        };
        return _0x52b899;
      }
    }
    var _0x242390 = {};
    var _0x82bcf2 = "none";
    var _0x471644 = [];
    var _0x21bf42 = _0x40291c.cache(function () {
      var _0x351008 = _0x4fe818(function (_0x11e4a8) {
        var _0x5b457c;
        return _0x5ebcce(this, function (_0x2e6e2b) {
          switch (_0x2e6e2b.label) {
            case 0:
              return [4, _0x5a28bf()];
            case 1:
              _0x5b457c = _0x2e6e2b.sent();
              return [2, [true, _0x5b457c]];
          }
        });
      });
      return function (_0x7bb615) {
        return _0x351008.apply(this, arguments);
      };
    }(), {
      timeToLive: 3600000
    });
    function _0x5049a2() {
      var _0x18aaab = globalThis.OBJECT_HASHES;
      var _0x44ca01 = _0xfc0bae(_0x18aaab, _0x2e7c1f);
      return _0x44ca01;
    }
    var _0x5a28bf = function () {
      var _0x371d2b = _0x4fe818(function () {
        var _0x1a1766;
        var _0x2ffa51;
        var _0x1dbcc1;
        var _0x280d63;
        var _0x552dc4;
        var _0x5a50c9;
        var _0x358e96;
        var _0x158699;
        var _0x1d3c9a;
        var _0x14708f;
        var _0x4495ef;
        var _0x36de76;
        var _0x46b41c;
        return _0x5ebcce(this, function (_0x5f2666) {
          switch (_0x5f2666.label) {
            case 0:
              _0x1a1766 = {};
              _0x2ffa51 = new Map();
              _0x1dbcc1 = true;
              _0x280d63 = false;
              _0x552dc4 = undefined;
              _0x5f2666.label = 1;
            case 1:
              _0x5f2666.trys.push([1, 6, 7, 8]);
              _0x5a50c9 = Object.entries(_0x5049a2())[Symbol.iterator]();
              _0x5f2666.label = 2;
            case 2:
              if (!!(_0x1dbcc1 = (_0x358e96 = _0x5a50c9.next()).done)) {
                return [3, 5];
              }
              _0x158699 = _0xf90359(_0x358e96.value, 2);
              _0x1d3c9a = _0x158699[0];
              _0x14708f = _0x158699[1];
              if (_0x1a1766[_0x1d3c9a] == null) {
                _0x1a1766[_0x1d3c9a] = {
                  display: _0x1d3c9a,
                  childItems: {}
                };
              }
              _0x4495ef = undefined;
              return [4, _0x5178a6(_0x1a1766, _0x14708f, _0x1d3c9a, _0x2ffa51)];
            case 3:
              _0x36de76 = _0xf90359.apply(undefined, [_0x5f2666.sent(), 3]);
              _0x1a1766 = _0x36de76[0];
              _0x2ffa51 = _0x36de76[1];
              _0x4495ef = _0x36de76[2];
              _0x36de76;
              if (_0x1a1766 && _0x1a1766[_0x1d3c9a] && _0x4495ef) {
                _0x1a1766[_0x1d3c9a].childItems = _0x4495ef;
              }
              _0x5f2666.label = 4;
            case 4:
              _0x1dbcc1 = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x46b41c = _0x5f2666.sent();
              _0x280d63 = true;
              _0x552dc4 = _0x46b41c;
              return [3, 8];
            case 7:
              try {
                if (!_0x1dbcc1 && _0x5a50c9.return != null) {
                  _0x5a50c9.return();
                }
              } finally {
                if (_0x280d63) {
                  throw _0x552dc4;
                }
              }
              return [7];
            case 8:
              if (Object.keys(_0x242390).length == 0 || _0x242390 == null) {
                _0x242390 = _0x1a1766;
              }
              return [2, _0x2ffa51];
          }
        });
      });
      return function _0x14abbe() {
        return _0x371d2b.apply(this, arguments);
      };
    }();
    var _0x5178a6 = function () {
      var _0x3124a5 = _0x4fe818(function (_0x55eb08, _0x32a745, _0x3f87c1, _0x1afb55) {
        var _0x573af1;
        var _0x75ed70;
        var _0x3cae17;
        var _0x54f597;
        var _0x35fbc1;
        var _0x40b9a7;
        var _0x42c013;
        var _0x38d9bf;
        var _0x53556b;
        var _0x25cabe;
        var _0x168ea4;
        var _0x17d88d;
        var _0x5581dd;
        var _0x3a5e23;
        var _0x402499;
        var _0xb89744;
        var _0x56cb5a;
        var _0x36083a;
        var _0x5b50b0;
        var _0x1ea08b;
        var _0xc9fe15;
        var _0x2423c9;
        var _0x3abae2;
        var _0xbf5419;
        var _0x32ef94;
        var _0x1109b3;
        var _0x4c83e2;
        var _0x1cc600;
        var _0x509811;
        var _0x27a881;
        var _0x3aeb0f;
        var _0x308897;
        var _0x402637;
        return _0x5ebcce(this, function (_0x3ec010) {
          switch (_0x3ec010.label) {
            case 0:
              _0x573af1 = {};
              if (!_0x32a745.objects) {
                return [3, 1];
              }
              _0x75ed70 = true;
              _0x3cae17 = false;
              _0x54f597 = undefined;
              try {
                for (_0x35fbc1 = Object.entries(_0x32a745.objects)[Symbol.iterator](); !(_0x75ed70 = (_0x40b9a7 = _0x35fbc1.next()).done); _0x75ed70 = true) {
                  _0x42c013 = _0xf90359(_0x40b9a7.value, 2);
                  _0x38d9bf = _0x42c013[0];
                  _0x53556b = _0x42c013[1];
                  _0x25cabe = true;
                  _0x168ea4 = false;
                  _0x17d88d = undefined;
                  try {
                    for (_0x5581dd = Object.entries(_0x53556b)[Symbol.iterator](); !(_0x25cabe = (_0x3a5e23 = _0x5581dd.next()).done); _0x25cabe = true) {
                      _0x402499 = _0xf90359(_0x3a5e23.value, 2);
                      _0xb89744 = _0x402499[0];
                      _0x56cb5a = _0x402499[1];
                      _0x36083a = [];
                      _0x5b50b0 = false;
                      _0x1ea08b = _0xb89744;
                      if (_0x56cb5a && _0x56cb5a.display) {
                        _0x1ea08b = _0x56cb5a.display;
                      }
                      if (_0x56cb5a.data && _0x56cb5a.data.attribute) {
                        _0x36083a = _0x56cb5a.data.attribute;
                        if (_0x56cb5a.data.attribute.isSpawn) {
                          _0x82bcf2 = _0xb89744;
                        }
                        if (_0x56cb5a.data.attribute.blockHide) {
                          _0x55eb08[_0x3f87c1] = undefined;
                          _0x5b50b0 = true;
                        }
                        if (_0x56cb5a.data.attribute.hideInUI) {
                          _0x55eb08[_0x3f87c1] = undefined;
                          _0x5b50b0 = true;
                        }
                        if (_0x56cb5a.data.attribute.color != null) {
                          _0x471644[_0x56cb5a.data.attribute.color] = _0xb89744;
                        }
                      }
                      if (_0x56cb5a.data && _0x56cb5a.data.interaction) {
                        var _0x422f10 = {
                          interaction: _0x56cb5a.data.interaction
                        };
                        _0x4cc2f2.set(_0xb89744, _0x422f10);
                      }
                      if (_0x56cb5a.data && _0x56cb5a.data.interfaceInteraction) {
                        if (_0x4cc2f2.has(_0xb89744)) {
                          _0xc9fe15 = _0x4cc2f2.get(_0xb89744);
                          if (_0xc9fe15) {
                            _0xc9fe15.interfaceInteraction = _0x56cb5a.data.interfaceInteraction;
                            _0x4cc2f2.set(_0xb89744, _0xc9fe15);
                          }
                        } else {
                          var _0x525991 = {
                            interfaceInteraction: _0x56cb5a.data.interfaceInteraction
                          };
                          _0x4cc2f2.set(_0xb89744, _0x525991);
                        }
                      }
                      if (!_0x5b50b0) {
                        if (_0x573af1 == null) {
                          var _0x1fdfc5 = {
                            display: _0x1ea08b,
                            childItems: {}
                          };
                          var _0x195975 = {
                            objectHash: _0x1fdfc5
                          };
                          _0x573af1 = _0x195975;
                        } else {
                          var _0x1a5585 = {
                            display: _0x1ea08b,
                            childItems: {}
                          };
                          _0x573af1[_0xb89744] = _0x1a5585;
                        }
                      }
                      var _0x16879a = {
                        display: _0x1ea08b,
                        cat: _0x3f87c1,
                        sub: undefined,
                        material: _0x38d9bf,
                        modelHash: _0xb89744,
                        attributes: _0x36083a
                      };
                      _0x2423c9 = _0x16879a;
                      _0x1afb55.set(_0xb89744, _0x2423c9);
                    }
                  } catch (_0x26436a) {
                    _0x168ea4 = true;
                    _0x17d88d = _0x26436a;
                  } finally {
                    try {
                      if (!_0x25cabe && _0x5581dd.return != null) {
                        _0x5581dd.return();
                      }
                    } finally {
                      if (_0x168ea4) {
                        throw _0x17d88d;
                      }
                    }
                  }
                }
              } catch (_0x4dfde1) {
                _0x3cae17 = true;
                _0x54f597 = _0x4dfde1;
              } finally {
                try {
                  if (!_0x75ed70 && _0x35fbc1.return != null) {
                    _0x35fbc1.return();
                  }
                } finally {
                  if (_0x3cae17) {
                    throw _0x54f597;
                  }
                }
              }
              return [3, 9];
            case 1:
              _0x3abae2 = true;
              _0xbf5419 = false;
              _0x32ef94 = undefined;
              _0x3ec010.label = 2;
            case 2:
              _0x3ec010.trys.push([2, 7, 8, 9]);
              _0x1109b3 = Object.entries(_0x32a745)[Symbol.iterator]();
              _0x3ec010.label = 3;
            case 3:
              if (!!(_0x3abae2 = (_0x4c83e2 = _0x1109b3.next()).done)) {
                return [3, 6];
              }
              _0x1cc600 = _0xf90359(_0x4c83e2.value, 2);
              _0x509811 = _0x1cc600[0];
              _0x27a881 = _0x1cc600[1];
              _0x3aeb0f = undefined;
              return [4, _0x5178a6(_0x55eb08, _0x27a881, _0x3f87c1, _0x1afb55)];
            case 4:
              _0x308897 = _0xf90359.apply(undefined, [_0x3ec010.sent(), 3]);
              _0x55eb08 = _0x308897[0];
              _0x1afb55 = _0x308897[1];
              _0x3aeb0f = _0x308897[2];
              _0x308897;
              _0x573af1[_0x509811] = {
                display: _0x509811,
                childItems: _0x3aeb0f
              };
              _0x3ec010.label = 5;
            case 5:
              _0x3abae2 = true;
              return [3, 3];
            case 6:
              return [3, 9];
            case 7:
              _0x402637 = _0x3ec010.sent();
              _0xbf5419 = true;
              _0x32ef94 = _0x402637;
              return [3, 9];
            case 8:
              try {
                if (!_0x3abae2 && _0x1109b3.return != null) {
                  _0x1109b3.return();
                }
              } finally {
                if (_0xbf5419) {
                  throw _0x32ef94;
                }
              }
              return [7];
            case 9:
              return [2, [_0x55eb08, _0x1afb55, _0x573af1]];
          }
        });
      });
      return function _0x102fa4(_0x46527f, _0x84f015, _0x12dec2, _0x47a463) {
        return _0x3124a5.apply(this, arguments);
      };
    }();
    ;
    function _0x5d094c(_0xb21ad, _0x42ab90) {
      if (_0x42ab90 == null || _0x42ab90 > _0xb21ad.length) {
        _0x42ab90 = _0xb21ad.length;
      }
      for (var _0x5bafd5 = 0, _0x328fcd = new Array(_0x42ab90); _0x5bafd5 < _0x42ab90; _0x5bafd5++) {
        _0x328fcd[_0x5bafd5] = _0xb21ad[_0x5bafd5];
      }
      return _0x328fcd;
    }
    function _0x314a45(_0x41438f) {
      if (Array.isArray(_0x41438f)) {
        return _0x41438f;
      }
    }
    function _0x439f2b(_0x647719, _0x25844b, _0x5dea8e, _0x1c54a0, _0x23e012, _0x198409, _0x3c642a) {
      try {
        var _0x1fcbb5 = _0x647719[_0x198409](_0x3c642a);
        var _0x5aa9ba = _0x1fcbb5.value;
      } catch (_0x1a4eef) {
        _0x5dea8e(_0x1a4eef);
        return;
      }
      if (_0x1fcbb5.done) {
        _0x25844b(_0x5aa9ba);
      } else {
        Promise.resolve(_0x5aa9ba).then(_0x1c54a0, _0x23e012);
      }
    }
    function _0x1f644a(_0x33d4ea) {
      return function () {
        var _0x2ad144 = this;
        var _0x916ec = arguments;
        return new Promise(function (_0x253614, _0xfbd763) {
          var _0x166f0b = _0x33d4ea.apply(_0x2ad144, _0x916ec);
          function _0x1614bf(_0x41be88) {
            _0x439f2b(_0x166f0b, _0x253614, _0xfbd763, _0x1614bf, _0x2abae9, "next", _0x41be88);
          }
          function _0x2abae9(_0x3b6a06) {
            _0x439f2b(_0x166f0b, _0x253614, _0xfbd763, _0x1614bf, _0x2abae9, "throw", _0x3b6a06);
          }
          _0x1614bf(undefined);
        });
      };
    }
    function _0x458c27(_0x554ae1, _0x1520eb) {
      var _0x475d81 = _0x554ae1 == null ? null : typeof Symbol !== "undefined" && _0x554ae1[Symbol.iterator] || _0x554ae1["@@iterator"];
      if (_0x475d81 == null) {
        return;
      }
      var _0x2d6830 = [];
      var _0x26230e = true;
      var _0x225143 = false;
      var _0x1310f7;
      var _0x5831fb;
      try {
        for (_0x475d81 = _0x475d81.call(_0x554ae1); !(_0x26230e = (_0x1310f7 = _0x475d81.next()).done); _0x26230e = true) {
          _0x2d6830.push(_0x1310f7.value);
          if (_0x1520eb && _0x2d6830.length === _0x1520eb) {
            break;
          }
        }
      } catch (_0x11d5ab) {
        _0x225143 = true;
        _0x5831fb = _0x11d5ab;
      } finally {
        try {
          if (!_0x26230e && _0x475d81.return != null) {
            _0x475d81.return();
          }
        } finally {
          if (_0x225143) {
            throw _0x5831fb;
          }
        }
      }
      return _0x2d6830;
    }
    function _0x427549() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x4baf62(_0x1efdc0, _0x3a85f3) {
      return _0x314a45(_0x1efdc0) || _0x458c27(_0x1efdc0, _0x3a85f3) || _0x2a5439(_0x1efdc0, _0x3a85f3) || _0x427549();
    }
    function _0x2a5439(_0x580273, _0x3f08e6) {
      if (!_0x580273) {
        return;
      }
      if (typeof _0x580273 === "string") {
        return _0x5d094c(_0x580273, _0x3f08e6);
      }
      var _0x58a6ec = Object.prototype.toString.call(_0x580273).slice(8, -1);
      if (_0x58a6ec === "Object" && _0x580273.constructor) {
        _0x58a6ec = _0x580273.constructor.name;
      }
      if (_0x58a6ec === "Map" || _0x58a6ec === "Set") {
        return Array.from(_0x58a6ec);
      }
      if (_0x58a6ec === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x58a6ec)) {
        return _0x5d094c(_0x580273, _0x3f08e6);
      }
    }
    function _0x45144e(_0x5d5ed3, _0x4f20c8) {
      var _0x1ffb72;
      var _0x4ce6f4;
      var _0x434907;
      var _0x46d603;
      var _0x30476a = {
        label: 0,
        sent: function () {
          if (_0x434907[0] & 1) {
            throw _0x434907[1];
          }
          return _0x434907[1];
        },
        trys: [],
        ops: []
      };
      _0x46d603 = {
        next: _0xbaab55(0),
        throw: _0xbaab55(1),
        return: _0xbaab55(2)
      };
      if (typeof Symbol === "function") {
        _0x46d603[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x46d603;
      function _0xbaab55(_0x29cc64) {
        return function (_0x4deab8) {
          return _0x119df9([_0x29cc64, _0x4deab8]);
        };
      }
      function _0x119df9(_0x26ba97) {
        if (_0x1ffb72) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x30476a) {
          try {
            _0x1ffb72 = 1;
            if (_0x4ce6f4 && (_0x434907 = _0x26ba97[0] & 2 ? _0x4ce6f4.return : _0x26ba97[0] ? _0x4ce6f4.throw || ((_0x434907 = _0x4ce6f4.return) && _0x434907.call(_0x4ce6f4), 0) : _0x4ce6f4.next) && !(_0x434907 = _0x434907.call(_0x4ce6f4, _0x26ba97[1])).done) {
              return _0x434907;
            }
            _0x4ce6f4 = 0;
            if (_0x434907) {
              _0x26ba97 = [_0x26ba97[0] & 2, _0x434907.value];
            }
            switch (_0x26ba97[0]) {
              case 0:
              case 1:
                _0x434907 = _0x26ba97;
                break;
              case 4:
                _0x30476a.label++;
                var _0x2ab614 = {
                  value: _0x26ba97[1],
                  done: false
                };
                return _0x2ab614;
              case 5:
                _0x30476a.label++;
                _0x4ce6f4 = _0x26ba97[1];
                _0x26ba97 = [0];
                continue;
              case 7:
                _0x26ba97 = _0x30476a.ops.pop();
                _0x30476a.trys.pop();
                continue;
              default:
                if (!(_0x434907 = _0x30476a.trys, _0x434907 = _0x434907.length > 0 && _0x434907[_0x434907.length - 1]) && (_0x26ba97[0] === 6 || _0x26ba97[0] === 2)) {
                  _0x30476a = 0;
                  continue;
                }
                if (_0x26ba97[0] === 3 && (!_0x434907 || _0x26ba97[1] > _0x434907[0] && _0x26ba97[1] < _0x434907[3])) {
                  _0x30476a.label = _0x26ba97[1];
                  break;
                }
                if (_0x26ba97[0] === 6 && _0x30476a.label < _0x434907[1]) {
                  _0x30476a.label = _0x434907[1];
                  _0x434907 = _0x26ba97;
                  break;
                }
                if (_0x434907 && _0x30476a.label < _0x434907[2]) {
                  _0x30476a.label = _0x434907[2];
                  _0x30476a.ops.push(_0x26ba97);
                  break;
                }
                if (_0x434907[2]) {
                  _0x30476a.ops.pop();
                }
                _0x30476a.trys.pop();
                continue;
            }
            _0x26ba97 = _0x4f20c8.call(_0x5d5ed3, _0x30476a);
          } catch (_0x2beda5) {
            _0x26ba97 = [6, _0x2beda5];
            _0x4ce6f4 = 0;
          } finally {
            _0x1ffb72 = _0x434907 = 0;
          }
        }
        if (_0x26ba97[0] & 5) {
          throw _0x26ba97[1];
        }
        var _0x4141b0 = {
          value: _0x26ba97[0] ? _0x26ba97[1] : undefined,
          done: true
        };
        return _0x4141b0;
      }
    }
    var _0x12c02a = function () {
      var _0x3e0939 = _0x1f644a(function (_0x381349) {
        var _0xf87a6;
        var _0x13dd81;
        var _0x219d3a;
        var _0x3c0a13;
        var _0x130856;
        var _0xe7d789;
        var _0xbbbaa9;
        var _0x2583ad;
        return _0x45144e(this, function (_0x3fb9ff) {
          switch (_0x3fb9ff.label) {
            case 0:
              _0xf87a6 = _0x4c6bb4.get(_0x381349);
              _0x13dd81 = 0;
              if (_0xf87a6 == null) {
                return [2, 0];
              }
              _0x219d3a = [];
              for (_0x3c0a13 in _0xf87a6) {
                _0x219d3a.push(_0x3c0a13);
              }
              _0x130856 = 0;
              _0x3fb9ff.label = 1;
            case 1:
              if (_0x130856 >= _0x219d3a.length) {
                return [3, 4];
              }
              _0xe7d789 = _0x219d3a[_0x130856];
              _0xbbbaa9 = _0xf87a6[_0xe7d789];
              _0x13dd81++;
              if (_0xbbbaa9 == null) {
                return [3, 3];
              }
              _0x2583ad = _0x2b98da.get(_0xbbbaa9)?.model;
              if (!_0x2583ad) {
                return [3, 3];
              }
              if (_0x2583ad.includes("DUMMY")) {
                _0x13dd81--;
              }
              if (!!_0x2583ad.includes("ROOM")) {
                return [3, 3];
              }
              return [4, _0x12c02a(_0xbbbaa9)];
            case 2:
              _0x13dd81 = _0x13dd81 + _0x3fb9ff.sent();
              _0x3fb9ff.label = 3;
            case 3:
              _0x130856++;
              return [3, 1];
            case 4:
              return [2, _0x13dd81];
          }
        });
      });
      return function _0xbe9677(_0x196d68) {
        return _0x3e0939.apply(this, arguments);
      };
    }();
    var _0xaaff15 = function () {
      var _0x4bfa47 = _0x1f644a(function (_0x1c2d2c) {
        var _0x3a0e25;
        var _0x335f9d;
        return _0x45144e(this, function (_0x56effd) {
          switch (_0x56effd.label) {
            case 0:
              _0x3a0e25 = _0x2b98da.get(_0x1c2d2c);
              if (!_0x3a0e25) {
                return [2];
              }
              if (_0x3a0e25.model.includes("ROOM") || _0x3a0e25.model.includes("HOUSING")) {
                _0x335f9d = _0x3a0e25.databaseID;
                return [2, _0x335f9d];
              }
              return [4, _0xaaff15(_0x3a0e25.parent)];
            case 1:
              _0x335f9d = _0x56effd.sent();
              return [2, _0x335f9d];
          }
        });
      });
      return function _0x2ab897(_0xfd1e28) {
        return _0x4bfa47.apply(this, arguments);
      };
    }();
    var _0x5b882a = function () {
      var _0x2b9a7c = _0x1f644a(function (_0x39c6af) {
        var _0x5b4527;
        var _0x46f47e;
        var _0x37c869;
        var _0x1776e0;
        var _0x24432e;
        var _0x386061;
        var _0x3a34a1;
        var _0x38ec33;
        var _0xab40b9;
        var _0x341ed0;
        var _0x40816e;
        var _0x3e8d3b;
        var _0x237902;
        var _0x299c42;
        var _0x8629b6;
        var _0x43e945;
        var _0x317fab;
        var _0x43e38c;
        var _0x2433f3;
        return _0x45144e(this, function (_0x23667b) {
          switch (_0x23667b.label) {
            case 0:
              _0x5b4527 = _0x2b98da.get(_0x39c6af);
              if (_0x5b4527 == null) {
                return [2, [0, 0]];
              }
              _0x46f47e = 0;
              if (!_0x5b4527.lead) {
                return [3, 2];
              }
              return [4, _0x12c02a(_0x5b4527.lead)];
            case 1:
              _0x46f47e = _0x23667b.sent();
              _0x23667b.label = 2;
            case 2:
              return [4, _0x12c02a(_0x5b4527.databaseID)];
            case 3:
              _0x37c869 = _0x23667b.sent() ?? 0;
              if (_0x5b4527.connection != null && _0x5b4527.connection.room != null) {
                return [3, 8];
              }
              _0x1776e0 = 0;
              if (!_0x5b4527.model.includes("HOUSING")) {
                return [3, 7];
              }
              _0x46f47e = 0;
              _0x24432e = [];
              for (_0x386061 in _0x5b4527.roomsLinkedToWorld) {
                _0x24432e.push(_0x386061);
              }
              _0x3a34a1 = 0;
              _0x23667b.label = 4;
            case 4:
              if (_0x3a34a1 >= _0x24432e.length) {
                return [3, 7];
              }
              _0x38ec33 = _0x24432e[_0x3a34a1];
              _0xab40b9 = _0x5b4527.roomsLinkedToWorld[_0x38ec33];
              return [4, _0x12c02a(_0xab40b9)];
            case 5:
              _0x341ed0 = _0x23667b.sent() ?? 0;
              _0x1776e0 = _0x1776e0 + _0x341ed0;
              _0x23667b.label = 6;
            case 6:
              _0x3a34a1++;
              return [3, 4];
            case 7:
              return [2, [_0x46f47e, _0x37c869 + _0x1776e0]];
            case 8:
              _0x40816e = _0x5b4527.connection.room.getLinks();
              if (_0x40816e == null) {
                return [2, [_0x46f47e, _0x37c869]];
              }
              _0x3e8d3b = 0;
              _0x237902 = [];
              for (_0x299c42 in _0x40816e) {
                _0x237902.push(_0x299c42);
              }
              _0x8629b6 = 0;
              _0x23667b.label = 9;
            case 9:
              if (_0x8629b6 >= _0x237902.length) {
                return [3, 12];
              }
              _0x43e945 = _0x237902[_0x8629b6];
              _0x317fab = _0x40816e[_0x43e945];
              _0x43e38c = _0x2b98da.get(_0x317fab);
              if (_0x43e38c == null || _0x317fab == "worldLinkIDNopixel") {
                return [3, 11];
              }
              return [4, _0x12c02a(_0x317fab)];
            case 10:
              _0x2433f3 = _0x23667b.sent() ?? 0;
              _0x3e8d3b = _0x3e8d3b + _0x2433f3;
              _0x23667b.label = 11;
            case 11:
              _0x8629b6++;
              return [3, 9];
            case 12:
              return [2, [_0x46f47e, _0x37c869 + _0x3e8d3b]];
          }
        });
      });
      return function _0x546cdd(_0x2db8c4) {
        return _0x2b9a7c.apply(this, arguments);
      };
    }();
    var _0x297e3e = 0;
    var _0x5e3b79 = [];
    var _0xb74e03 = function () {
      var _0x3d28d9 = _0x1f644a(function (_0x26640f, _0x17411b) {
        var _0x5eafde;
        var _0x42af06;
        var _0xe03cec;
        var _0x43cd46;
        var _0x4c5997;
        var _0x28148e;
        var _0x408cc8;
        var _0x1ad35b;
        return _0x45144e(this, function (_0xddaf39) {
          switch (_0xddaf39.label) {
            case 0:
              _0x5eafde = _0x4c6bb4.get(_0x26640f);
              if (_0x5eafde == null) {
                return [2, 0];
              }
              _0x42af06 = [];
              for (_0xe03cec in _0x5eafde) {
                _0x42af06.push(_0xe03cec);
              }
              _0x43cd46 = 0;
              _0xddaf39.label = 1;
            case 1:
              if (_0x43cd46 >= _0x42af06.length) {
                return [3, 4];
              }
              _0x4c5997 = _0x42af06[_0x43cd46];
              _0x28148e = _0x5eafde[_0x4c5997];
              if (_0x28148e == null) {
                return [3, 3];
              }
              _0x408cc8 = _0x2b98da.get(_0x28148e)?.model;
              if (!_0x408cc8) {
                return [3, 3];
              }
              _0x1ad35b = _0xb24b3.get(_0x408cc8);
              if (_0x1ad35b && _0x1ad35b.name == _0x17411b && !_0x5e3b79.includes(_0x28148e)) {
                _0x297e3e++;
                _0x5e3b79.push(_0x28148e);
              }
              return [4, _0xb74e03(_0x28148e, _0x17411b)];
            case 2:
              _0xddaf39.sent();
              _0xddaf39.label = 3;
            case 3:
              _0x43cd46++;
              return [3, 1];
            case 4:
              return [2];
          }
        });
      });
      return function _0x2b1e67(_0x129086, _0xbc1036) {
        return _0x3d28d9.apply(this, arguments);
      };
    }();
    var _0x549a5a = function () {
      var _0x1b9a10 = _0x1f644a(function (_0x371f01) {
        var _0x4850d2;
        var _0x10ae16;
        var _0x1d8003;
        var _0x3b1d22;
        var _0x44322e;
        var _0x20b7da;
        var _0x195090;
        var _0x19a6b5;
        var _0x539658;
        var _0x19aefc;
        var _0x5d3611;
        var _0x4c53ea;
        return _0x45144e(this, function (_0x11634a) {
          switch (_0x11634a.label) {
            case 0:
              _0x4850d2 = _0x2b98da.get(_0x371f01);
              if (_0x4850d2 == null) {
                return [2];
              }
              _0x10ae16 = new Map();
              _0x1d8003 = true;
              _0x3b1d22 = false;
              _0x44322e = undefined;
              _0x11634a.label = 1;
            case 1:
              _0x11634a.trys.push([1, 6, 7, 8]);
              _0x20b7da = _0xb24b3[Symbol.iterator]();
              _0x11634a.label = 2;
            case 2:
              if (!!(_0x1d8003 = (_0x195090 = _0x20b7da.next()).done)) {
                return [3, 5];
              }
              _0x19a6b5 = _0x4baf62(_0x195090.value, 2);
              _0x539658 = _0x19a6b5[0];
              _0x19aefc = _0x19a6b5[1];
              _0x5d3611 = _0x19aefc;
              return [4, _0xb74e03(_0x371f01, _0x5d3611.name)];
            case 3:
              _0x11634a.sent();
              _0x10ae16.set(_0x5d3611.name, _0x297e3e);
              _0x297e3e = 0;
              _0x5e3b79 = [];
              _0x11634a.label = 4;
            case 4:
              _0x1d8003 = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x4c53ea = _0x11634a.sent();
              _0x3b1d22 = true;
              _0x44322e = _0x4c53ea;
              return [3, 8];
            case 7:
              try {
                if (!_0x1d8003 && _0x20b7da.return != null) {
                  _0x20b7da.return();
                }
              } finally {
                if (_0x3b1d22) {
                  throw _0x44322e;
                }
              }
              return [7];
            case 8:
              return [2, _0x10ae16];
          }
        });
      });
      return function _0x31b93(_0x1637e4) {
        return _0x1b9a10.apply(this, arguments);
      };
    }();
    var _0x5f26af = function () {
      var _0x4c9f57 = _0x1f644a(function (_0x2dbc59) {
        var _0x55232d;
        var _0x4040d1;
        var _0x15d00c;
        var _0x1e3e89;
        var _0x554841;
        var _0x945439;
        var _0x20c0f6;
        return _0x45144e(this, function (_0x531c99) {
          switch (_0x531c99.label) {
            case 0:
              _0x55232d = _0x4c6bb4.get(_0x2dbc59);
              if (_0x55232d == null) {
                return [2, false];
              }
              _0x4040d1 = [];
              for (_0x15d00c in _0x55232d) {
                _0x4040d1.push(_0x15d00c);
              }
              _0x1e3e89 = 0;
              _0x531c99.label = 1;
            case 1:
              if (_0x1e3e89 >= _0x4040d1.length) {
                return [3, 4];
              }
              _0x554841 = _0x4040d1[_0x1e3e89];
              _0x945439 = _0x55232d[_0x554841];
              if (_0x945439 == null) {
                return [3, 3];
              }
              _0x20c0f6 = _0x2b98da.get(_0x945439)?.model;
              if (!_0x20c0f6) {
                return [3, 3];
              }
              if (_0x20c0f6 === _0x82bcf2) {
                return [2, true];
              }
              return [4, _0x5f26af(_0x945439)];
            case 2:
              _0x531c99.sent();
              _0x531c99.label = 3;
            case 3:
              _0x1e3e89++;
              return [3, 1];
            case 4:
              return [2, false];
          }
        });
      });
      return function _0x4b94a8(_0x11963e) {
        return _0x4c9f57.apply(this, arguments);
      };
    }();
    ;
    var _0x5d74e1 = _0x5f5650(480);
    function _0x437fd7(_0x3aa532, _0x5053f0) {
      if (_0x5053f0 == null || _0x5053f0 > _0x3aa532.length) {
        _0x5053f0 = _0x3aa532.length;
      }
      for (var _0x3f36de = 0, _0x1ad721 = new Array(_0x5053f0); _0x3f36de < _0x5053f0; _0x3f36de++) {
        _0x1ad721[_0x3f36de] = _0x3aa532[_0x3f36de];
      }
      return _0x1ad721;
    }
    function _0x4222c2(_0x38de40) {
      if (Array.isArray(_0x38de40)) {
        return _0x38de40;
      }
    }
    function _0x59a0af(_0x2f6499, _0x2e9f38, _0x558a9c, _0x186312, _0x20674b, _0x2566c2, _0x15f93a) {
      try {
        var _0x5436b6 = _0x2f6499[_0x2566c2](_0x15f93a);
        var _0x40646e = _0x5436b6.value;
      } catch (_0x29aa66) {
        _0x558a9c(_0x29aa66);
        return;
      }
      if (_0x5436b6.done) {
        _0x2e9f38(_0x40646e);
      } else {
        Promise.resolve(_0x40646e).then(_0x186312, _0x20674b);
      }
    }
    function _0x1c34cf(_0x219ba5) {
      return function () {
        var _0x2f850b = this;
        var _0x41fa88 = arguments;
        return new Promise(function (_0x22879b, _0x539fc5) {
          var _0x58f0cf = _0x219ba5.apply(_0x2f850b, _0x41fa88);
          function _0x3c0098(_0x1ba022) {
            _0x59a0af(_0x58f0cf, _0x22879b, _0x539fc5, _0x3c0098, _0x3c1502, "next", _0x1ba022);
          }
          function _0x3c1502(_0x3bd794) {
            _0x59a0af(_0x58f0cf, _0x22879b, _0x539fc5, _0x3c0098, _0x3c1502, "throw", _0x3bd794);
          }
          _0x3c0098(undefined);
        });
      };
    }
    function _0x572f85(_0x426cc6, _0x51b9f8) {
      var _0x7a6689 = _0x426cc6 == null ? null : typeof Symbol !== "undefined" && _0x426cc6[Symbol.iterator] || _0x426cc6["@@iterator"];
      if (_0x7a6689 == null) {
        return;
      }
      var _0x17b285 = [];
      var _0x278a6b = true;
      var _0xa658fb = false;
      var _0x23a0a0;
      var _0x529a4a;
      try {
        for (_0x7a6689 = _0x7a6689.call(_0x426cc6); !(_0x278a6b = (_0x23a0a0 = _0x7a6689.next()).done); _0x278a6b = true) {
          _0x17b285.push(_0x23a0a0.value);
          if (_0x51b9f8 && _0x17b285.length === _0x51b9f8) {
            break;
          }
        }
      } catch (_0x11cbb4) {
        _0xa658fb = true;
        _0x529a4a = _0x11cbb4;
      } finally {
        try {
          if (!_0x278a6b && _0x7a6689.return != null) {
            _0x7a6689.return();
          }
        } finally {
          if (_0xa658fb) {
            throw _0x529a4a;
          }
        }
      }
      return _0x17b285;
    }
    function _0x147296() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x4145a3(_0xf10206, _0x93ee2b) {
      return _0x4222c2(_0xf10206) || _0x572f85(_0xf10206, _0x93ee2b) || _0x311926(_0xf10206, _0x93ee2b) || _0x147296();
    }
    function _0x311926(_0x2c290b, _0x17f959) {
      if (!_0x2c290b) {
        return;
      }
      if (typeof _0x2c290b === "string") {
        return _0x437fd7(_0x2c290b, _0x17f959);
      }
      var _0xcaeb67 = Object.prototype.toString.call(_0x2c290b).slice(8, -1);
      if (_0xcaeb67 === "Object" && _0x2c290b.constructor) {
        _0xcaeb67 = _0x2c290b.constructor.name;
      }
      if (_0xcaeb67 === "Map" || _0xcaeb67 === "Set") {
        return Array.from(_0xcaeb67);
      }
      if (_0xcaeb67 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0xcaeb67)) {
        return _0x437fd7(_0x2c290b, _0x17f959);
      }
    }
    function _0x59a5b9(_0x41284b, _0x4c9b6e) {
      var _0x180f8d;
      var _0x1e7658;
      var _0x8825a6;
      var _0x6e5568;
      var _0x39c5bb = {
        label: 0,
        sent: function () {
          if (_0x8825a6[0] & 1) {
            throw _0x8825a6[1];
          }
          return _0x8825a6[1];
        },
        trys: [],
        ops: []
      };
      _0x6e5568 = {
        next: _0x2e11b7(0),
        throw: _0x2e11b7(1),
        return: _0x2e11b7(2)
      };
      if (typeof Symbol === "function") {
        _0x6e5568[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x6e5568;
      function _0x2e11b7(_0x23a179) {
        return function (_0x199ea4) {
          return _0x1ba897([_0x23a179, _0x199ea4]);
        };
      }
      function _0x1ba897(_0x13b7ea) {
        if (_0x180f8d) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x39c5bb) {
          try {
            _0x180f8d = 1;
            if (_0x1e7658 && (_0x8825a6 = _0x13b7ea[0] & 2 ? _0x1e7658.return : _0x13b7ea[0] ? _0x1e7658.throw || ((_0x8825a6 = _0x1e7658.return) && _0x8825a6.call(_0x1e7658), 0) : _0x1e7658.next) && !(_0x8825a6 = _0x8825a6.call(_0x1e7658, _0x13b7ea[1])).done) {
              return _0x8825a6;
            }
            _0x1e7658 = 0;
            if (_0x8825a6) {
              _0x13b7ea = [_0x13b7ea[0] & 2, _0x8825a6.value];
            }
            switch (_0x13b7ea[0]) {
              case 0:
              case 1:
                _0x8825a6 = _0x13b7ea;
                break;
              case 4:
                _0x39c5bb.label++;
                var _0x2794cd = {
                  value: _0x13b7ea[1],
                  done: false
                };
                return _0x2794cd;
              case 5:
                _0x39c5bb.label++;
                _0x1e7658 = _0x13b7ea[1];
                _0x13b7ea = [0];
                continue;
              case 7:
                _0x13b7ea = _0x39c5bb.ops.pop();
                _0x39c5bb.trys.pop();
                continue;
              default:
                if (!(_0x8825a6 = _0x39c5bb.trys, _0x8825a6 = _0x8825a6.length > 0 && _0x8825a6[_0x8825a6.length - 1]) && (_0x13b7ea[0] === 6 || _0x13b7ea[0] === 2)) {
                  _0x39c5bb = 0;
                  continue;
                }
                if (_0x13b7ea[0] === 3 && (!_0x8825a6 || _0x13b7ea[1] > _0x8825a6[0] && _0x13b7ea[1] < _0x8825a6[3])) {
                  _0x39c5bb.label = _0x13b7ea[1];
                  break;
                }
                if (_0x13b7ea[0] === 6 && _0x39c5bb.label < _0x8825a6[1]) {
                  _0x39c5bb.label = _0x8825a6[1];
                  _0x8825a6 = _0x13b7ea;
                  break;
                }
                if (_0x8825a6 && _0x39c5bb.label < _0x8825a6[2]) {
                  _0x39c5bb.label = _0x8825a6[2];
                  _0x39c5bb.ops.push(_0x13b7ea);
                  break;
                }
                if (_0x8825a6[2]) {
                  _0x39c5bb.ops.pop();
                }
                _0x39c5bb.trys.pop();
                continue;
            }
            _0x13b7ea = _0x4c9b6e.call(_0x41284b, _0x39c5bb);
          } catch (_0x2d16e6) {
            _0x13b7ea = [6, _0x2d16e6];
            _0x1e7658 = 0;
          } finally {
            _0x180f8d = _0x8825a6 = 0;
          }
        }
        if (_0x13b7ea[0] & 5) {
          throw _0x13b7ea[1];
        }
        var _0x126eed = {
          value: _0x13b7ea[0] ? _0x13b7ea[1] : undefined,
          done: true
        };
        return _0x126eed;
      }
    }
    var _0x2d927b = new Map();
    var _0x476db1 = function () {
      var _0x122020 = _0x1c34cf(function (_0x236c72) {
        var _0x222320;
        var _0x3de019;
        var _0x4b74f5;
        var _0x8517e2;
        var _0x77b223;
        var _0x46a720;
        var _0x4baffd;
        var _0x5cf559;
        var _0x1f6151;
        return _0x59a5b9(this, function (_0x414d86) {
          _0x5d74e1.log(" ------------------------------- ");
          _0x5d74e1.log(" ------------------------------- ");
          _0x5d74e1.log(" ------------------------------- ");
          _0x222320 = true;
          _0x3de019 = false;
          _0x4b74f5 = undefined;
          try {
            for (_0x8517e2 = _0x236c72[Symbol.iterator](); !(_0x222320 = (_0x77b223 = _0x8517e2.next()).done); _0x222320 = true) {
              _0x46a720 = _0x77b223.value;
              _0x4baffd = _0x4145a3(_0x46a720, 2);
              _0x5cf559 = _0x4baffd[0];
              _0x1f6151 = _0x4baffd[1];
              _0x5d74e1.log(_0x5cf559, _0x1f6151.amountWithoutVariants, _0x1f6151.variants);
            }
          } catch (_0xe94044) {
            _0x3de019 = true;
            _0x4b74f5 = _0xe94044;
          } finally {
            try {
              if (!_0x222320 && _0x8517e2.return != null) {
                _0x8517e2.return();
              }
            } finally {
              if (_0x3de019) {
                throw _0x4b74f5;
              }
            }
          }
          return [2];
        });
      });
      return function _0x41d6f1(_0xcf629) {
        return _0x122020.apply(this, arguments);
      };
    }();
    var _0x1fb1f6 = _0x1532be.cache(function () {
      var _0x21dd60 = _0x1c34cf(function (_0x1a062a, _0x246e47) {
        var _0x1dc09f;
        var _0x14640d;
        var _0x3c4213;
        var _0x53afd0;
        var _0x48f9c1;
        var _0x18e484;
        var _0x3ba555;
        var _0x3fee12;
        var _0x48c019;
        var _0x36809a;
        var _0x42a9b6;
        return _0x59a5b9(this, function (_0x435332) {
          switch (_0x435332.label) {
            case 0:
              _0x14640d = true;
              _0x3c4213 = false;
              _0x53afd0 = undefined;
              try {
                for (_0x48f9c1 = _0x4c08c6.entries()[Symbol.iterator](); !(_0x14640d = (_0x18e484 = _0x48f9c1.next()).done); _0x14640d = true) {
                  _0x3ba555 = _0x4145a3(_0x18e484.value, 2);
                  _0x3fee12 = _0x3ba555[0];
                  _0x48c019 = _0x3ba555[1];
                  if (_0x48c019.interiorCheckPlayer()) {
                    if (_0x48c019.isApartment) {
                      if (_0x181a57) {
                        if (_0x181a57.apartmentInformation) {
                          _0x1dc09f = _0x181a57.databaseID;
                        }
                      }
                    } else {
                      _0x1dc09f = _0x48c019.databaseID;
                    }
                  }
                }
              } catch (_0x39098f) {
                _0x3c4213 = true;
                _0x53afd0 = _0x39098f;
              } finally {
                try {
                  if (!_0x14640d && _0x48f9c1.return != null) {
                    _0x48f9c1.return();
                  }
                } finally {
                  if (_0x3c4213) {
                    throw _0x53afd0;
                  }
                }
              }
              return [4, NPX.Procedures.execute("np-editor:GetCurrentMaterialInventory", _0x1dc09f)];
            case 1:
              _0x36809a = _0x435332.sent();
              return [4, _0x488f1c(_0x36809a)];
            case 2:
              _0x42a9b6 = _0x435332.sent();
              return [2, [true, _0x42a9b6]];
          }
        });
      });
      return function (_0x5f3f80, _0x114fbe) {
        return _0x21dd60.apply(this, arguments);
      };
    }(), {
      timeToLive: 300000
    });
    var _0x848780 = _0x1532be.cache(function () {
      var _0x489f3f = _0x1c34cf(function (_0x536d6e, _0x9d03b8) {
        var _0x2cfd36;
        var _0x5187a6;
        var _0x53eec1;
        var _0x191982;
        var _0x2970b6;
        var _0x3e30df;
        var _0xb8c6a2;
        var _0x166c7f;
        var _0x9a6a0f;
        var _0x3349f3;
        var _0x3cf15c;
        var _0x49bb10;
        return _0x59a5b9(this, function (_0x950b30) {
          switch (_0x950b30.label) {
            case 0:
              _0x5187a6 = true;
              _0x53eec1 = false;
              _0x191982 = undefined;
              try {
                for (_0x2970b6 = _0x4c08c6.entries()[Symbol.iterator](); !(_0x5187a6 = (_0x3e30df = _0x2970b6.next()).done); _0x5187a6 = true) {
                  _0xb8c6a2 = _0x4145a3(_0x3e30df.value, 2);
                  _0x166c7f = _0xb8c6a2[0];
                  _0x9a6a0f = _0xb8c6a2[1];
                  if (_0x9a6a0f.interiorCheckPlayer()) {
                    if (_0x9a6a0f.isApartment) {
                      ;
                      _0x2cfd36 = _0x181a57?.databaseID;
                    } else {
                      _0x2cfd36 = _0x9a6a0f.databaseID;
                    }
                  }
                }
              } catch (_0x3510aa) {
                _0x53eec1 = true;
                _0x191982 = _0x3510aa;
              } finally {
                try {
                  if (!_0x5187a6 && _0x2970b6.return != null) {
                    _0x2970b6.return();
                  }
                } finally {
                  if (_0x53eec1) {
                    throw _0x191982;
                  }
                }
              }
              return [4, _0x264f2a(_0x2cfd36)];
            case 1:
              _0x3349f3 = _0x4145a3.apply(undefined, [_0x950b30.sent(), 2]);
              _0x3cf15c = _0x3349f3[0];
              _0x49bb10 = _0x3349f3[1];
              return [2, [true, [_0x3cf15c, _0x49bb10]]];
          }
        });
      });
      return function (_0xd1b777, _0x610965) {
        return _0x489f3f.apply(this, arguments);
      };
    }(), {
      timeToLive: 300000
    });
    var _0x3e6a2f = function () {
      var _0x75b7ac = _0x1c34cf(function (_0x2d00d3) {
        var _0x1f545b;
        var _0x44e96e;
        var _0x1ca67c;
        var _0x23cb69;
        var _0x45635f;
        var _0x4cb437;
        var _0x1c4181;
        var _0x28e5db;
        var _0x3f193f;
        var _0x13f909;
        var _0x574a97;
        var _0x144250;
        var _0x3f4cdd;
        var _0x1a08ed;
        var _0x2b6ef5;
        var _0x644edf;
        var _0x5d9eb0;
        var _0xf32b0c;
        var _0x28b58e;
        var _0x57dfd8;
        return _0x59a5b9(this, function (_0x196cfd) {
          switch (_0x196cfd.label) {
            case 0:
              if (!_0x2d00d3) {
                return [3, 4];
              }
              if (_0x2d00d3 === "none") {
                return [2, [0, "none", "none"]];
              }
              _0x1f545b = "housing_item";
              if (_0x2d00d3.includes("[") && _0x2d00d3.includes("]")) {
                _0x1ca67c = _0x2d00d3.match(/\[(.*?)\]/);
                _0x23cb69 = _0x2d00d3.split("[")[0];
                if (_0x1ca67c && _0x23cb69) {
                  _0x45635f = _0x1ca67c[1];
                  _0x1f545b = _0x23cb69;
                  if (_0x45635f != "") {
                    _0x44e96e = _0x45635f;
                  }
                }
              } else {
                _0x44e96e = _0x2d00d3;
              }
              _0x4cb437 = 0;
              _0x1c4181 = 0;
              return [4, _0x848780.get()];
            case 1:
              _0x28e5db = _0x196cfd.sent();
              return [4, _0x1fb1f6.get()];
            case 2:
              _0x3f193f = _0x196cfd.sent();
              if (_0x28e5db) {
                _0x13f909 = _0x28e5db[0];
                _0x574a97 = _0x28e5db[1];
                if (_0x13f909) {
                  _0x144250 = _0x13f909.get(_0x1f545b);
                  if (_0x144250) {
                    if (!_0x44e96e) {
                      _0x4cb437 = _0x144250.amountWithoutVariants[0];
                    } else {
                      _0x3f4cdd = _0x144250.variants.get(_0x44e96e);
                      if (_0x3f4cdd) {
                        _0x4cb437 = _0x3f4cdd[0];
                      }
                    }
                  }
                }
                if (_0x574a97) {
                  _0x1a08ed = _0x574a97.get(_0x1f545b);
                  if (_0x1a08ed) {
                    if (!_0x44e96e) {
                      _0x4cb437 = _0x4cb437 + _0x1a08ed.amountWithoutVariants[0];
                    } else {
                      _0x2b6ef5 = _0x1a08ed.variants.get(_0x44e96e);
                      if (_0x2b6ef5) {
                        _0x4cb437 = _0x4cb437 + _0x2b6ef5[0];
                      }
                    }
                  }
                }
              }
              if (_0x3f193f) {
                _0x644edf = _0x3f193f.get(_0x1f545b);
                if (_0x644edf) {
                  if (!_0x44e96e) {
                    _0x1c4181 = _0x644edf.amountWithoutVariants[0];
                  } else {
                    _0x5d9eb0 = _0x644edf.variants.get(_0x44e96e);
                    if (_0x5d9eb0) {
                      _0x1c4181 = _0x5d9eb0[0];
                    }
                  }
                }
              }
              return [4, _0x3fa7b9.get(`${_0x1f545b}-${_0x44e96e}`, _0x1f545b, _0x44e96e)];
            case 3:
              _0xf32b0c = _0x196cfd.sent();
              _0x28b58e = null;
              _0x57dfd8 = null;
              if (_0xf32b0c) {
                _0x28b58e = _0xf32b0c[0];
                _0x57dfd8 = _0xf32b0c[1];
              }
              return [2, [_0x1c4181 - _0x4cb437, _0x28b58e, _0x57dfd8]];
            case 4:
              return [2, [undefined, null, null]];
          }
        });
      });
      return function _0x430f93(_0x442bb9) {
        return _0x75b7ac.apply(this, arguments);
      };
    }();
    var _0x3fa7b9 = _0x1532be.cacheableMap(function () {
      var _0x2ef2dc = _0x1c34cf(function (_0x2bc39b, _0x4842dc, _0x50ba3c, _0x12dc97) {
        var _0x3f79ce;
        return _0x59a5b9(this, function (_0x5e8f1c) {
          switch (_0x5e8f1c.label) {
            case 0:
              return [4, _0x2959eb(_0x50ba3c, _0x12dc97)];
            case 1:
              _0x3f79ce = _0x5e8f1c.sent();
              return [2, [true, _0x3f79ce]];
          }
        });
      });
      return function (_0x4afa02, _0x1ca3d3, _0x14b51d, _0x3917ed) {
        return _0x2ef2dc.apply(this, arguments);
      };
    }(), {
      timeToLive: 600000
    });
    var _0x2959eb = function () {
      var _0x550e83 = _0x1c34cf(function (_0x51e7d3, _0x35fd28) {
        var _0x2df791;
        var _0x92c13;
        var _0x2167fb;
        var _0x5e0978;
        var _0xef6895;
        return _0x59a5b9(this, function (_0x123228) {
          switch (_0x123228.label) {
            case 0:
              return [4, _0xb73ffb.GetItemList()];
            case 1:
              _0x2df791 = _0x123228.sent();
              _0x92c13 = _0x2df791[_0x51e7d3];
              _0x2167fb = null;
              _0x5e0978 = null;
              if (_0x35fd28) {
                _0xef6895 = _0x92c13.variants[_0x35fd28];
                if (_0xef6895) {
                  if (_0xef6895.image) {
                    _0x2167fb = _0xef6895.image;
                  }
                  if (_0xef6895.name) {
                    _0x5e0978 = _0xef6895.name;
                  }
                } else {
                  _0x2167fb = _0x92c13.image;
                  _0x5e0978 = _0x92c13.name;
                }
              } else {
                _0x2167fb = _0x92c13.image;
                _0x5e0978 = _0x92c13.name;
              }
              if (_0x2167fb == "") {
                _0x2167fb = "images/missing.png";
              }
              return [2, [_0x2167fb, _0x5e0978]];
          }
        });
      });
      return function _0x5cf7e0(_0x38dc91, _0x1dffba) {
        return _0x550e83.apply(this, arguments);
      };
    }();
    var _0x264f2a = function () {
      var _0x1f6a18 = _0x1c34cf(function (_0x470f58) {
        var _0x30b558;
        var _0x3042eb;
        var _0x2b6cdc;
        var _0x1073e9;
        var _0x9d9e46;
        var _0x343929;
        var _0x45e673;
        var _0x3f099e;
        var _0x4b6164;
        var _0x56a48f;
        var _0x5c89bb;
        var _0x33f857;
        var _0x537907;
        var _0x5d9e97;
        var _0xceff8a;
        var _0x23d1c5;
        var _0x548103;
        var _0x4257e8;
        return _0x59a5b9(this, function (_0x14aea1) {
          switch (_0x14aea1.label) {
            case 0:
              _0x30b558 = new Map();
              return [4, _0x21bf42.get()];
            case 1:
              _0x3042eb = _0x14aea1.sent();
              if (!_0x3042eb) {
                return [3, 11];
              }
              _0x2b6cdc = true;
              _0x1073e9 = false;
              _0x9d9e46 = undefined;
              _0x14aea1.label = 2;
            case 2:
              _0x14aea1.trys.push([2, 7, 8, 9]);
              _0x343929 = _0x1fce82.entries()[Symbol.iterator]();
              _0x14aea1.label = 3;
            case 3:
              if (!!(_0x2b6cdc = (_0x45e673 = _0x343929.next()).done)) {
                return [3, 6];
              }
              _0x3f099e = _0x4145a3(_0x45e673.value, 2);
              _0x4b6164 = _0x3f099e[0];
              _0x56a48f = _0x3f099e[1];
              _0x5c89bb = _0x56a48f.objectState;
              if (!_0x56a48f.creation || !_0x5c89bb) {
                return [3, 5];
              }
              return [4, _0x2f8202(_0x5c89bb.model, _0x3042eb)];
            case 4:
              _0x33f857 = _0x14aea1.sent();
              _0x537907 = _0x33f857.itemName;
              _0x5d9e97 = _0x33f857.variantName;
              if (!_0x537907) {
                return [3, 5];
              }
              _0xceff8a = _0x30b558.get(_0x537907);
              if (!_0xceff8a) {
                _0xceff8a = {
                  amountWithoutVariants: [0, 0],
                  variants: new Map()
                };
              }
              if (_0x5d9e97) {
                _0x23d1c5 = _0xceff8a.variants.get(_0x5d9e97);
                if (!_0x23d1c5) {
                  _0x23d1c5 = [0, 0];
                }
                _0x23d1c5[0]++;
                _0x23d1c5[1]++;
                _0xceff8a.variants.set(_0x5d9e97, _0x23d1c5);
              } else {
                _0xceff8a.amountWithoutVariants[0]++;
                _0xceff8a.amountWithoutVariants[1]++;
              }
              _0x30b558.set(_0x537907, _0xceff8a);
              _0x14aea1.label = 5;
            case 5:
              _0x2b6cdc = true;
              return [3, 3];
            case 6:
              return [3, 9];
            case 7:
              _0x548103 = _0x14aea1.sent();
              _0x1073e9 = true;
              _0x9d9e46 = _0x548103;
              return [3, 9];
            case 8:
              try {
                if (!_0x2b6cdc && _0x343929.return != null) {
                  _0x343929.return();
                }
              } finally {
                if (_0x1073e9) {
                  throw _0x9d9e46;
                }
              }
              return [7];
            case 9:
              if (!_0x470f58) {
                return [3, 11];
              }
              return [4, _0x23e98c(_0x470f58, _0x3042eb)];
            case 10:
              _0x14aea1.sent();
              _0x14aea1.label = 11;
            case 11:
              _0x4257e8 = new Map(_0x2d927b);
              _0x2d927b.clear();
              return [2, [_0x30b558, _0x4257e8]];
          }
        });
      });
      return function _0x302244(_0x3d0b80) {
        return _0x1f6a18.apply(this, arguments);
      };
    }();
    var _0x23e98c = function () {
      var _0x236102 = _0x1c34cf(function (_0x479108, _0x4545de) {
        var _0xd0f082;
        var _0x346111;
        var _0x1467d5;
        var _0xae1e47;
        var _0x38a161;
        var _0x5ca1a2;
        var _0x421fda;
        var _0x57281b;
        var _0x117681;
        var _0x24db88;
        var _0x25e091;
        var _0x94c09;
        var _0x483bef;
        return _0x59a5b9(this, function (_0x21e65d) {
          switch (_0x21e65d.label) {
            case 0:
              _0xd0f082 = _0x4c6bb4.get(_0x479108);
              if (!_0xd0f082) {
                return [3, 4];
              }
              _0x346111 = [];
              for (_0x1467d5 in _0xd0f082) {
                _0x346111.push(_0x1467d5);
              }
              _0xae1e47 = 0;
              _0x21e65d.label = 1;
            case 1:
              if (_0xae1e47 >= _0x346111.length) {
                return [3, 4];
              }
              _0x38a161 = _0x346111[_0xae1e47];
              _0x5ca1a2 = _0xd0f082[_0x38a161];
              if (_0x5ca1a2 == null) {
                return [3, 3];
              }
              _0x421fda = _0x2b98da.get(_0x5ca1a2);
              if (!_0x421fda) {
                return [3, 3];
              }
              if (_0x421fda.isBuilt) {
                return [3, 3];
              }
              _0x57281b = _0x1fce82.get(_0x421fda.databaseID);
              if (_0x57281b) {
                if (_0x57281b.creation) {
                  return [3, 3];
                }
              }
              return [4, _0x2f8202(_0x421fda.model, _0x4545de)];
            case 2:
              _0x117681 = _0x21e65d.sent();
              _0x24db88 = _0x117681.itemName;
              _0x25e091 = _0x117681.variantName;
              if (!_0x24db88) {
                return [3, 3];
              }
              _0x94c09 = _0x2d927b.get(_0x24db88);
              if (!_0x94c09) {
                _0x94c09 = {
                  amountWithoutVariants: [0, 0],
                  variants: new Map()
                };
              }
              if (_0x25e091) {
                _0x483bef = _0x94c09.variants.get(_0x25e091);
                if (!_0x483bef) {
                  _0x483bef = [0, 0];
                }
                _0x483bef[0]++;
                _0x483bef[1]++;
                _0x94c09.variants.set(_0x25e091, _0x483bef);
              } else {
                _0x94c09.amountWithoutVariants[0]++;
                _0x94c09.amountWithoutVariants[1]++;
              }
              _0x2d927b.set(_0x24db88, _0x94c09);
              _0x21e65d.label = 3;
            case 3:
              _0xae1e47++;
              return [3, 1];
            case 4:
              return [2];
          }
        });
      });
      return function _0x5b1c93(_0x329dff, _0x2fdb37) {
        return _0x236102.apply(this, arguments);
      };
    }();
    var _0x2f8202 = function () {
      var _0xbea86 = _0x1c34cf(function (_0x53a55d, _0x5c484a) {
        var _0x1bdf39;
        var _0x3f241a;
        var _0xf04560;
        var _0x5de139;
        var _0x379a87;
        var _0x2e70bb;
        return _0x59a5b9(this, function (_0x10e338) {
          _0x1bdf39 = _0x5c484a.get(_0x53a55d);
          if (_0x1bdf39) {
            if (_0x1bdf39.material != "none") {
              _0x3f241a = "housing_item";
              ;
              if (_0x1bdf39.material.includes("[") && _0x1bdf39.material.includes("]")) {
                _0x5de139 = _0x1bdf39.material.match(/\[(.*?)\]/);
                _0x379a87 = _0x1bdf39.material.split("[")[0];
                if (_0x5de139 && _0x379a87) {
                  _0x2e70bb = _0x5de139[1];
                  _0x3f241a = _0x379a87;
                  if (_0x2e70bb != "") {
                    _0xf04560 = _0x2e70bb;
                  }
                }
              } else {
                _0xf04560 = _0x1bdf39.material;
              }
              var _0x36846b = {
                itemName: _0x3f241a,
                variantName: _0xf04560
              };
              return [2, _0x36846b];
            }
          }
          var _0x52e6f6 = {
            itemName: undefined,
            variantName: undefined
          };
          return [2, _0x52e6f6];
        });
      });
      return function _0x221598(_0x7e11de, _0x4f9566) {
        return _0xbea86.apply(this, arguments);
      };
    }();
    var _0x1d87b5 = function () {
      var _0x5d00f6 = _0x1c34cf(function (_0x33acdf) {
        var _0x1b5d47;
        var _0x4f0bc9;
        return _0x59a5b9(this, function (_0x36f54c) {
          switch (_0x36f54c.label) {
            case 0:
              return [4, _0x21bf42.get()];
            case 1:
              _0x1b5d47 = _0x36f54c.sent();
              if (_0x1b5d47) {
                _0x4f0bc9 = _0x1b5d47.get(_0x33acdf);
                if (_0x4f0bc9) {
                  return [2, _0x4f0bc9.material];
                }
              }
              return [2];
          }
        });
      });
      return function _0x58aca2(_0x15f14a) {
        return _0x5d00f6.apply(this, arguments);
      };
    }();
    var _0x55d3f0 = function () {
      var _0x5c3662 = _0x1c34cf(function () {
        var _0x1b8dcc;
        var _0x42a3ca;
        var _0xc85748;
        var _0x57de89;
        var _0x5b1e99;
        var _0x5d97b8;
        var _0x500166;
        var _0x26f94a;
        var _0x31dc36;
        var _0x2a7d6b;
        var _0xd57768;
        var _0x8d85aa;
        var _0x1c8ae6;
        var _0x2c73ee;
        var _0x1fb545;
        var _0x56330b;
        var _0x4955e0;
        var _0x3c52c3;
        var _0x3a2d15;
        var _0x1c2158;
        var _0xd94b6e;
        var _0x5e0888;
        var _0xe985b7;
        var _0x227091;
        var _0x5200ba;
        var _0x42df5c;
        var _0x2aa609;
        var _0xb0d64f;
        var _0x362ef8;
        var _0x10257b;
        var _0x2f3a5f;
        var _0x339716;
        var _0x3b8a63;
        var _0x183275;
        var _0x1244e2;
        var _0xcbf2bb;
        var _0x29148c;
        var _0x455479;
        var _0x2e5eed;
        var _0x11d545;
        var _0x351820;
        var _0x2365a8;
        var _0x11d545;
        return _0x59a5b9(this, function (_0xf3aa1f) {
          switch (_0xf3aa1f.label) {
            case 0:
              _0x42a3ca = true;
              _0xc85748 = false;
              _0x57de89 = undefined;
              try {
                for (_0x5b1e99 = _0x4c08c6.entries()[Symbol.iterator](); !(_0x42a3ca = (_0x5d97b8 = _0x5b1e99.next()).done); _0x42a3ca = true) {
                  _0x500166 = _0x4145a3(_0x5d97b8.value, 2);
                  _0x26f94a = _0x500166[0];
                  _0x31dc36 = _0x500166[1];
                  if (_0x31dc36.interiorCheckPlayer()) {
                    if (_0x31dc36.isApartment) {
                      ;
                      _0x1b8dcc = _0x181a57?.databaseID;
                    } else {
                      _0x1b8dcc = _0x31dc36.databaseID;
                    }
                  }
                }
              } catch (_0x468a90) {
                _0xc85748 = true;
                _0x57de89 = _0x468a90;
              } finally {
                try {
                  if (!_0x42a3ca && _0x5b1e99.return != null) {
                    _0x5b1e99.return();
                  }
                } finally {
                  if (_0xc85748) {
                    throw _0x57de89;
                  }
                }
              }
              return [4, NPX.Procedures.execute("np-editor:BuildLeadObjectsChildren", _0x1b8dcc, true)];
            case 1:
              _0x2a7d6b = _0xf3aa1f.sent();
              _0xd57768 = _0x2a7d6b[0];
              _0x8d85aa = _0x2a7d6b[1];
              _0x1c8ae6 = [];
              if (!_0x8d85aa) {
                return [3, 20];
              }
              return [4, _0x488f1c(_0x8d85aa)];
            case 2:
              _0x2c73ee = _0xf3aa1f.sent();
              return [4, _0x1fb1f6.get()];
            case 3:
              _0x1fb545 = _0xf3aa1f.sent();
              if (!_0x1fb545) {
                return [3, 20];
              }
              _0x56330b = true;
              _0x4955e0 = false;
              _0x3c52c3 = undefined;
              _0xf3aa1f.label = 4;
            case 4:
              _0xf3aa1f.trys.push([4, 18, 19, 20]);
              _0x3a2d15 = _0x2c73ee[Symbol.iterator]();
              _0xf3aa1f.label = 5;
            case 5:
              if (!!(_0x56330b = (_0x1c2158 = _0x3a2d15.next()).done)) {
                return [3, 17];
              }
              _0xd94b6e = _0x1c2158.value;
              _0x5e0888 = _0x4145a3(_0xd94b6e, 2);
              _0xe985b7 = _0x5e0888[0];
              _0x227091 = _0x5e0888[1];
              _0x5200ba = _0xe985b7;
              _0x42df5c = _0x1fb545.get(_0x5200ba);
              if (_0x227091.variants.size <= 0) {
                return [3, 14];
              }
              _0x2aa609 = true;
              _0xb0d64f = false;
              _0x362ef8 = undefined;
              _0xf3aa1f.label = 6;
            case 6:
              _0xf3aa1f.trys.push([6, 11, 12, 13]);
              _0x10257b = _0x227091.variants[Symbol.iterator]();
              _0xf3aa1f.label = 7;
            case 7:
              if (!!(_0x2aa609 = (_0x2f3a5f = _0x10257b.next()).done)) {
                return [3, 10];
              }
              _0x339716 = _0x2f3a5f.value;
              _0x3b8a63 = _0x4145a3(_0x339716, 2);
              _0x183275 = _0x3b8a63[0];
              _0x1244e2 = _0x3b8a63[1];
              _0xcbf2bb = _0x183275;
              _0x29148c = {
                name: "",
                url: "",
                amountHave: 0,
                amountNeeded: 0
              };
              return [4, _0x3fa7b9.get(`${_0x5200ba}-${_0xcbf2bb}`, _0x5200ba, _0xcbf2bb)];
            case 8:
              _0x455479 = _0xf3aa1f.sent();
              if (_0x455479 && _0x455479[0] && _0x455479[1]) {
                if (_0x42df5c) {
                  _0x2e5eed = _0x42df5c.variants.get(_0xcbf2bb);
                  if (_0x2e5eed) {
                    _0x29148c.amountHave = _0x2e5eed[0];
                  }
                }
                _0x29148c.url = _0x455479[0];
                _0x29148c.name = _0x455479[1];
                _0x29148c.amountNeeded = _0x1244e2[1];
                _0x1c8ae6.push(_0x29148c);
              }
              _0xf3aa1f.label = 9;
            case 9:
              _0x2aa609 = true;
              return [3, 7];
            case 10:
              return [3, 13];
            case 11:
              _0x11d545 = _0xf3aa1f.sent();
              _0xb0d64f = true;
              _0x362ef8 = _0x11d545;
              return [3, 13];
            case 12:
              try {
                if (!_0x2aa609 && _0x10257b.return != null) {
                  _0x10257b.return();
                }
              } finally {
                if (_0xb0d64f) {
                  throw _0x362ef8;
                }
              }
              return [7];
            case 13:
              return [3, 16];
            case 14:
              return [4, _0x3fa7b9.get(`${_0x5200ba}-${undefined}`, _0x5200ba, undefined)];
            case 15:
              _0x351820 = _0xf3aa1f.sent();
              if (_0x351820 && _0x351820[0] && _0x351820[1]) {
                _0x2365a8 = {
                  name: "",
                  url: "",
                  amountHave: 0,
                  amountNeeded: 0
                };
                if (_0x42df5c) {
                  _0x2365a8.amountHave = _0x42df5c.amountWithoutVariants[0];
                }
                _0x2365a8.url = _0x351820[0];
                _0x2365a8.name = _0x351820[1];
                _0x2365a8.amountNeeded = _0x227091.amountWithoutVariants[1];
                _0x1c8ae6.push(_0x2365a8);
              }
              _0xf3aa1f.label = 16;
            case 16:
              _0x56330b = true;
              return [3, 5];
            case 17:
              return [3, 20];
            case 18:
              _0x11d545 = _0xf3aa1f.sent();
              _0x4955e0 = true;
              _0x3c52c3 = _0x11d545;
              return [3, 20];
            case 19:
              try {
                if (!_0x56330b && _0x3a2d15.return != null) {
                  _0x3a2d15.return();
                }
              } finally {
                if (_0x4955e0) {
                  throw _0x3c52c3;
                }
              }
              return [7];
            case 20:
              return [2, _0x1c8ae6];
          }
        });
      });
      return function _0x475b78() {
        return _0x5c3662.apply(this, arguments);
      };
    }();
    var _0x259089 = function () {
      var _0x23574c = _0x1c34cf(function () {
        var _0xbd0882;
        var _0x3b3ed0;
        var _0x170f8b;
        var _0x3786a5;
        var _0x40aced;
        var _0x4a6bf5;
        var _0x114b05;
        var _0x3cd459;
        var _0x379a70;
        var _0x2d2b52;
        var _0x3c7654;
        var _0x4acb6e;
        return _0x59a5b9(this, function (_0x1a5658) {
          switch (_0x1a5658.label) {
            case 0:
              _0x3b3ed0 = true;
              _0x170f8b = false;
              _0x3786a5 = undefined;
              try {
                for (_0x40aced = _0x4c08c6.entries()[Symbol.iterator](); !(_0x3b3ed0 = (_0x4a6bf5 = _0x40aced.next()).done); _0x3b3ed0 = true) {
                  _0x114b05 = _0x4145a3(_0x4a6bf5.value, 2);
                  _0x3cd459 = _0x114b05[0];
                  _0x379a70 = _0x114b05[1];
                  if (_0x379a70.interiorCheckPlayer()) {
                    if (_0x379a70.isApartment) {
                      ;
                      _0xbd0882 = _0x181a57?.databaseID;
                    } else {
                      _0xbd0882 = _0x379a70.databaseID;
                    }
                  }
                }
              } catch (_0x4adee7) {
                _0x170f8b = true;
                _0x3786a5 = _0x4adee7;
              } finally {
                try {
                  if (!_0x3b3ed0 && _0x40aced.return != null) {
                    _0x40aced.return();
                  }
                } finally {
                  if (_0x170f8b) {
                    throw _0x3786a5;
                  }
                }
              }
              if (!_0xbd0882) {
                return [2];
              }
              return [4, NPX.Procedures.execute("np-editor:BuildLeadObjectsChildren", _0xbd0882, false)];
            case 1:
              _0x2d2b52 = _0x1a5658.sent();
              _0x3c7654 = _0x2d2b52[0];
              _0x4acb6e = _0x2d2b52[1];
              if (_0x3c7654 != "Passed") {
                _0x5d74e1.log("we failed to build shopping list");
                emit("DoLongHudText", "You do not have all the materials required", 2);
                return [2];
              }
              return [2];
          }
        });
      });
      return function _0x43bf58() {
        return _0x23574c.apply(this, arguments);
      };
    }();
    var _0x1bb188 = function () {
      var _0x564fa8 = _0x1c34cf(function (_0x51449c) {
        var _0x355345;
        return _0x59a5b9(this, function (_0xded0e3) {
          if (_0x51449c) {
            _0x355345 = _0xb24b3.get(_0x51449c.model);
            if (_0x355345 && _0x355345.name.includes("editor-housing-material")) {
              return [2, true];
            }
          }
          return [2, false];
        });
      });
      return function _0x4ee538(_0x54995b) {
        return _0x564fa8.apply(this, arguments);
      };
    }();
    var _0x78e9e1 = function () {
      var _0x4e7035 = _0x1c34cf(function (_0x63561a) {
        return _0x59a5b9(this, function (_0x588532) {
          if (_0x63561a && _0x63561a.attributes && _0x63561a.attributes.craftingBench) {
            return [2, true];
          }
          return [2, false];
        });
      });
      return function _0x318e77(_0x214a43) {
        return _0x4e7035.apply(this, arguments);
      };
    }();
    var _0x2b8ae7 = function () {
      var _0x1b4a48 = _0x1c34cf(function (_0x2546cc) {
        var _0x965179;
        return _0x59a5b9(this, function (_0x594479) {
          switch (_0x594479.label) {
            case 0:
              if (!_0x2546cc) {
                return [2, true];
              }
              _0x965179 = _0xb24b3.get(_0x2546cc.model);
              if (!_0x965179) {
                return [2, true];
              }
              if (!_0x965179.name.includes("editor-housing-material")) {
                return [2, true];
              }
              if (!_0x2546cc.lead) {
                return [3, 2];
              }
              return [4, NPX.Procedures.execute("np-editor:isSafeToRemoveMaterial", _0x2546cc.lead)];
            case 1:
              return [2, _0x594479.sent()];
            case 2:
              return [2, true];
          }
        });
      });
      return function _0x3f6c0d(_0x4ab28e) {
        return _0x1b4a48.apply(this, arguments);
      };
    }();
    var _0x233c48 = function () {
      var _0x2832a2 = _0x1c34cf(function (_0x4ddc40) {
        return _0x59a5b9(this, function (_0x10306d) {
          switch (_0x10306d.label) {
            case 0:
              if (!_0x4ddc40) {
                return [2, true];
              }
              if (!_0x4ddc40.attributes) {
                return [2, true];
              }
              if (!_0x4ddc40.attributes.craftingBench) {
                return [2, true];
              }
              if (!_0x4ddc40.lead) {
                return [2, true];
              }
              return [4, NPX.Procedures.execute("np-editor:isSafeToRemoveCrafting", _0x4ddc40.lead)];
            case 1:
              return [2, _0x10306d.sent()];
          }
        });
      });
      return function _0x4f9da7(_0x122d16) {
        return _0x2832a2.apply(this, arguments);
      };
    }();
    ;
    var _0x354336 = _0x5f5650(480);
    const _0x1b8933 = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0a", "0b", "0c", "0d", "0e", "0f", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2a", "2b", "2c", "2d", "2e", "2f", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3a", "3b", "3c", "3d", "3e", "3f", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4a", "4b", "4c", "4d", "4e", "4f", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6a", "6b", "6c", "6d", "6e", "6f", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "7a", "7b", "7c", "7d", "7e", "7f", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8a", "8b", "8c", "8d", "8e", "8f", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9a", "9b", "9c", "9d", "9e", "9f", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "ba", "bb", "bc", "bd", "be", "bf", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ca", "cb", "cc", "cd", "ce", "cf", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "da", "db", "dc", "dd", "de", "df", "e0", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "ea", "eb", "ec", "ed", "ee", "ef", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "fa", "fb", "fc", "fd", "fe", "ff"];
    let _0x50b8e7 = 1234567;
    const _0x2aa98f = Math.PI / 180;
    const _0x5411d0 = 180 / Math.PI;
    function _0x1fd753() {
      const _0x39c992 = Math.random() * 4294967295 | 0;
      const _0x10c102 = Math.random() * 4294967295 | 0;
      const _0x4f74a1 = Math.random() * 4294967295 | 0;
      const _0x4a3038 = Math.random() * 4294967295 | 0;
      const _0x4230d0 = _0x1b8933[_0x39c992 & 255] + _0x1b8933[_0x39c992 >> 8 & 255] + _0x1b8933[_0x39c992 >> 16 & 255] + _0x1b8933[_0x39c992 >> 24 & 255] + "-" + _0x1b8933[_0x10c102 & 255] + _0x1b8933[_0x10c102 >> 8 & 255] + "-" + _0x1b8933[_0x10c102 >> 16 & 15 | 64] + _0x1b8933[_0x10c102 >> 24 & 255] + "-" + _0x1b8933[_0x4f74a1 & 63 | 128] + _0x1b8933[_0x4f74a1 >> 8 & 255] + "-" + _0x1b8933[_0x4f74a1 >> 16 & 255] + _0x1b8933[_0x4f74a1 >> 24 & 255] + _0x1b8933[_0x4a3038 & 255] + _0x1b8933[_0x4a3038 >> 8 & 255] + _0x1b8933[_0x4a3038 >> 16 & 255] + _0x1b8933[_0x4a3038 >> 24 & 255];
      return _0x4230d0.toLowerCase();
    }
    function _0x283adc(_0x987598, _0xd111d0, _0x413a87) {
      return Math.max(_0xd111d0, Math.min(_0x413a87, _0x987598));
    }
    function _0x1a52d2(_0x1002f7, _0x5e99db) {
      return (_0x1002f7 % _0x5e99db + _0x5e99db) % _0x5e99db;
    }
    function _0x3c04e2(_0x1d5de9, _0x470772, _0xbab887, _0x14294b, _0x2d0761) {
      return _0x14294b + (_0x1d5de9 - _0x470772) * (_0x2d0761 - _0x14294b) / (_0xbab887 - _0x470772);
    }
    function _0x40dbf0(_0x7117df, _0x493984, _0x5881e7) {
      if (_0x7117df !== _0x493984) {
        return (_0x5881e7 - _0x7117df) / (_0x493984 - _0x7117df);
      } else {
        return 0;
      }
    }
    function _0x345b2e(_0x3ff4c6, _0x2b1b35, _0x2bc7c3) {
      return (1 - _0x2bc7c3) * _0x3ff4c6 + _0x2bc7c3 * _0x2b1b35;
    }
    function _0x47ecd2(_0xd85c4, _0x4e8873, _0x269d2b, _0x3b21d1) {
      return _0x345b2e(_0xd85c4, _0x4e8873, 1 - Math.exp(-_0x269d2b * _0x3b21d1));
    }
    function _0x2c81aa(_0x5e9480, _0x23e8a5 = 1) {
      return _0x23e8a5 - Math.abs(_0x1a52d2(_0x5e9480, _0x23e8a5 * 2) - _0x23e8a5);
    }
    function _0x5ef847(_0x2f44de, _0x1475ac, _0x35a48f) {
      if (_0x2f44de <= _0x1475ac) {
        return 0;
      }
      if (_0x2f44de >= _0x35a48f) {
        return 1;
      }
      _0x2f44de = (_0x2f44de - _0x1475ac) / (_0x35a48f - _0x1475ac);
      return _0x2f44de * _0x2f44de * (3 - _0x2f44de * 2);
    }
    function _0x588634(_0x36979a, _0x1ecef9, _0x28ed9d) {
      if (_0x36979a <= _0x1ecef9) {
        return 0;
      }
      if (_0x36979a >= _0x28ed9d) {
        return 1;
      }
      _0x36979a = (_0x36979a - _0x1ecef9) / (_0x28ed9d - _0x1ecef9);
      return _0x36979a * _0x36979a * _0x36979a * (_0x36979a * (_0x36979a * 6 - 15) + 10);
    }
    function _0x4230d7(_0x366837, _0x8b75a0) {
      return _0x366837 + Math.floor(Math.random() * (_0x8b75a0 - _0x366837 + 1));
    }
    function _0xb340ef(_0x52fd24, _0x3e13d7) {
      return _0x52fd24 + Math.random() * (_0x3e13d7 - _0x52fd24);
    }
    function _0x5d48a9(_0x219f3c) {
      return _0x219f3c * (0.5 - Math.random());
    }
    function _0x439129(_0xefa122) {
      if (_0xefa122 !== undefined) {
        _0x50b8e7 = _0xefa122;
      }
      let _0x6eb0fe = _0x50b8e7 += 1831565813;
      _0x6eb0fe = Math.imul(_0x6eb0fe ^ _0x6eb0fe >>> 15, _0x6eb0fe | 1);
      _0x6eb0fe ^= _0x6eb0fe + Math.imul(_0x6eb0fe ^ _0x6eb0fe >>> 7, _0x6eb0fe | 61);
      return ((_0x6eb0fe ^ _0x6eb0fe >>> 14) >>> 0) / 4294967296;
    }
    function _0x30f006(_0x1aa56c) {
      return _0x1aa56c * _0x2aa98f;
    }
    function _0x22879d(_0x50c19a) {
      return _0x50c19a * _0x5411d0;
    }
    function _0x1d9ae4(_0x192b1b) {
      return (_0x192b1b & _0x192b1b - 1) === 0 && _0x192b1b !== 0;
    }
    function _0x2c34c9(_0x42d43d) {
      return Math.pow(2, Math.ceil(Math.log(_0x42d43d) / Math.LN2));
    }
    function _0xbd0d73(_0x20b9c1) {
      return Math.pow(2, Math.floor(Math.log(_0x20b9c1) / Math.LN2));
    }
    function _0x3cdaf2(_0x20929b, _0x32138c, _0x950a05, _0x1b3baa, _0x36d62c) {
      const _0x2a0cf6 = Math.cos;
      const _0x11663a = Math.sin;
      const _0x159e8d = _0x2a0cf6(_0x950a05 / 2);
      const _0x1baaf0 = _0x11663a(_0x950a05 / 2);
      const _0x12f9e3 = _0x2a0cf6((_0x32138c + _0x1b3baa) / 2);
      const _0x33677e = _0x11663a((_0x32138c + _0x1b3baa) / 2);
      const _0x5605b4 = _0x2a0cf6((_0x32138c - _0x1b3baa) / 2);
      const _0x3bb569 = _0x11663a((_0x32138c - _0x1b3baa) / 2);
      const _0xc4c74f = _0x2a0cf6((_0x1b3baa - _0x32138c) / 2);
      const _0x24e648 = _0x11663a((_0x1b3baa - _0x32138c) / 2);
      switch (_0x36d62c) {
        case "XYX":
          _0x20929b.set(_0x159e8d * _0x33677e, _0x1baaf0 * _0x5605b4, _0x1baaf0 * _0x3bb569, _0x159e8d * _0x12f9e3);
          break;
        case "YZY":
          _0x20929b.set(_0x1baaf0 * _0x3bb569, _0x159e8d * _0x33677e, _0x1baaf0 * _0x5605b4, _0x159e8d * _0x12f9e3);
          break;
        case "ZXZ":
          _0x20929b.set(_0x1baaf0 * _0x5605b4, _0x1baaf0 * _0x3bb569, _0x159e8d * _0x33677e, _0x159e8d * _0x12f9e3);
          break;
        case "XZX":
          _0x20929b.set(_0x159e8d * _0x33677e, _0x1baaf0 * _0x24e648, _0x1baaf0 * _0xc4c74f, _0x159e8d * _0x12f9e3);
          break;
        case "YXY":
          _0x20929b.set(_0x1baaf0 * _0xc4c74f, _0x159e8d * _0x33677e, _0x1baaf0 * _0x24e648, _0x159e8d * _0x12f9e3);
          break;
        case "ZYZ":
          _0x20929b.set(_0x1baaf0 * _0x24e648, _0x1baaf0 * _0xc4c74f, _0x159e8d * _0x33677e, _0x159e8d * _0x12f9e3);
          break;
        default:
          _0x354336.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + _0x36d62c);
      }
    }
    function _0x3a3aa9(_0x39bf88, _0x2a7997) {
      switch (_0x2a7997.constructor) {
        case Float32Array:
          return _0x39bf88;
        case Uint32Array:
          return _0x39bf88 / 4294967295;
        case Uint16Array:
          return _0x39bf88 / 65535;
        case Uint8Array:
          return _0x39bf88 / 255;
        case Int32Array:
          return Math.max(_0x39bf88 / 2147483647, -1);
        case Int16Array:
          return Math.max(_0x39bf88 / 32767, -1);
        case Int8Array:
          return Math.max(_0x39bf88 / 127, -1);
        default:
          throw new Error("Invalid component type.");
      }
    }
    function _0x1deb63(_0x27c19e, _0x50ed7c) {
      switch (_0x50ed7c.constructor) {
        case Float32Array:
          return _0x27c19e;
        case Uint32Array:
          return Math.round(_0x27c19e * 4294967295);
        case Uint16Array:
          return Math.round(_0x27c19e * 65535);
        case Uint8Array:
          return Math.round(_0x27c19e * 255);
        case Int32Array:
          return Math.round(_0x27c19e * 2147483647);
        case Int16Array:
          return Math.round(_0x27c19e * 32767);
        case Int8Array:
          return Math.round(_0x27c19e * 127);
        default:
          throw new Error("Invalid component type.");
      }
    }
    var _0x3e30d5 = {
      DEG2RAD: _0x2aa98f,
      RAD2DEG: _0x5411d0,
      generateUUID: _0x1fd753,
      clamp: _0x283adc,
      euclideanModulo: _0x1a52d2,
      mapLinear: _0x3c04e2,
      inverseLerp: _0x40dbf0,
      lerp: _0x345b2e,
      damp: _0x47ecd2,
      pingpong: _0x2c81aa,
      smoothstep: _0x5ef847,
      smootherstep: _0x588634,
      randInt: _0x4230d7,
      randFloat: _0xb340ef,
      randFloatSpread: _0x5d48a9,
      seededRandom: _0x439129,
      degToRad: _0x30f006,
      radToDeg: _0x22879d,
      isPowerOfTwo: _0x1d9ae4,
      ceilPowerOfTwo: _0x2c34c9,
      floorPowerOfTwo: _0xbd0d73,
      setQuaternionFromProperEuler: _0x3cdaf2,
      normalize: _0x1deb63,
      denormalize: _0x3a3aa9
    };
    const _0x479571 = _0x3e30d5;
    ;
    var _0x489250 = _0x5f5650(480);
    class _0x2af827 {
      constructor(_0x2d0210 = 0, _0xab42ef = 0, _0x402f5f = 0, _0x3e312a = 1) {
        this.isQuaternion = true;
        this._x = _0x2d0210;
        this._y = _0xab42ef;
        this._z = _0x402f5f;
        this._w = _0x3e312a;
      }
      static slerpFlat(_0x5e744f, _0x467d94, _0x56d915, _0x47f8f9, _0x25791d, _0x5e5f2c, _0x4df4e7) {
        let _0x308812 = _0x56d915[_0x47f8f9 + 0];
        let _0x48f436 = _0x56d915[_0x47f8f9 + 1];
        let _0x417023 = _0x56d915[_0x47f8f9 + 2];
        let _0x360975 = _0x56d915[_0x47f8f9 + 3];
        const _0x1d9c83 = _0x25791d[_0x5e5f2c + 0];
        const _0x3d464b = _0x25791d[_0x5e5f2c + 1];
        const _0x269b95 = _0x25791d[_0x5e5f2c + 2];
        const _0x39c8ed = _0x25791d[_0x5e5f2c + 3];
        if (_0x4df4e7 === 0) {
          _0x5e744f[_0x467d94 + 0] = _0x308812;
          _0x5e744f[_0x467d94 + 1] = _0x48f436;
          _0x5e744f[_0x467d94 + 2] = _0x417023;
          _0x5e744f[_0x467d94 + 3] = _0x360975;
          return;
        }
        if (_0x4df4e7 === 1) {
          _0x5e744f[_0x467d94 + 0] = _0x1d9c83;
          _0x5e744f[_0x467d94 + 1] = _0x3d464b;
          _0x5e744f[_0x467d94 + 2] = _0x269b95;
          _0x5e744f[_0x467d94 + 3] = _0x39c8ed;
          return;
        }
        if (_0x360975 !== _0x39c8ed || _0x308812 !== _0x1d9c83 || _0x48f436 !== _0x3d464b || _0x417023 !== _0x269b95) {
          let _0x340724 = 1 - _0x4df4e7;
          const _0x37ffb8 = _0x308812 * _0x1d9c83 + _0x48f436 * _0x3d464b + _0x417023 * _0x269b95 + _0x360975 * _0x39c8ed;
          const _0x4d41c0 = _0x37ffb8 >= 0 ? 1 : -1;
          const _0x2ccf74 = 1 - _0x37ffb8 * _0x37ffb8;
          if (_0x2ccf74 > Number.EPSILON) {
            const _0x4c4266 = Math.sqrt(_0x2ccf74);
            const _0x4badef = Math.atan2(_0x4c4266, _0x37ffb8 * _0x4d41c0);
            _0x340724 = Math.sin(_0x340724 * _0x4badef) / _0x4c4266;
            _0x4df4e7 = Math.sin(_0x4df4e7 * _0x4badef) / _0x4c4266;
          }
          const _0x3e0e37 = _0x4df4e7 * _0x4d41c0;
          _0x308812 = _0x308812 * _0x340724 + _0x1d9c83 * _0x3e0e37;
          _0x48f436 = _0x48f436 * _0x340724 + _0x3d464b * _0x3e0e37;
          _0x417023 = _0x417023 * _0x340724 + _0x269b95 * _0x3e0e37;
          _0x360975 = _0x360975 * _0x340724 + _0x39c8ed * _0x3e0e37;
          if (_0x340724 === 1 - _0x4df4e7) {
            const _0x445ea7 = 1 / Math.sqrt(_0x308812 * _0x308812 + _0x48f436 * _0x48f436 + _0x417023 * _0x417023 + _0x360975 * _0x360975);
            _0x308812 *= _0x445ea7;
            _0x48f436 *= _0x445ea7;
            _0x417023 *= _0x445ea7;
            _0x360975 *= _0x445ea7;
          }
        }
        _0x5e744f[_0x467d94] = _0x308812;
        _0x5e744f[_0x467d94 + 1] = _0x48f436;
        _0x5e744f[_0x467d94 + 2] = _0x417023;
        _0x5e744f[_0x467d94 + 3] = _0x360975;
      }
      static multiplyQuaternionsFlat(_0x28ec55, _0x4a82df, _0xf5b0a5, _0x4e98c4, _0xdae8ff, _0x9a6cbc) {
        const _0x4650a0 = _0xf5b0a5[_0x4e98c4];
        const _0x5ef668 = _0xf5b0a5[_0x4e98c4 + 1];
        const _0x4e0d0f = _0xf5b0a5[_0x4e98c4 + 2];
        const _0x6d12e1 = _0xf5b0a5[_0x4e98c4 + 3];
        const _0x3e23eb = _0xdae8ff[_0x9a6cbc];
        const _0x142bb8 = _0xdae8ff[_0x9a6cbc + 1];
        const _0x374843 = _0xdae8ff[_0x9a6cbc + 2];
        const _0x3ffa62 = _0xdae8ff[_0x9a6cbc + 3];
        _0x28ec55[_0x4a82df] = _0x4650a0 * _0x3ffa62 + _0x6d12e1 * _0x3e23eb + _0x5ef668 * _0x374843 - _0x4e0d0f * _0x142bb8;
        _0x28ec55[_0x4a82df + 1] = _0x5ef668 * _0x3ffa62 + _0x6d12e1 * _0x142bb8 + _0x4e0d0f * _0x3e23eb - _0x4650a0 * _0x374843;
        _0x28ec55[_0x4a82df + 2] = _0x4e0d0f * _0x3ffa62 + _0x6d12e1 * _0x374843 + _0x4650a0 * _0x142bb8 - _0x5ef668 * _0x3e23eb;
        _0x28ec55[_0x4a82df + 3] = _0x6d12e1 * _0x3ffa62 - _0x4650a0 * _0x3e23eb - _0x5ef668 * _0x142bb8 - _0x4e0d0f * _0x374843;
        return _0x28ec55;
      }
      get x() {
        return this._x;
      }
      set x(_0x3e8df9) {
        this._x = _0x3e8df9;
        this._onChangeCallback();
      }
      get y() {
        return this._y;
      }
      set y(_0x1b3eb6) {
        this._y = _0x1b3eb6;
        this._onChangeCallback();
      }
      get z() {
        return this._z;
      }
      set z(_0x3de869) {
        this._z = _0x3de869;
        this._onChangeCallback();
      }
      get w() {
        return this._w;
      }
      set w(_0x19c2f3) {
        this._w = _0x19c2f3;
        this._onChangeCallback();
      }
      set(_0x27df70, _0x5c4ac6, _0x2c7bfe, _0x59f1e9) {
        this._x = _0x27df70;
        this._y = _0x5c4ac6;
        this._z = _0x2c7bfe;
        this._w = _0x59f1e9;
        this._onChangeCallback();
        return this;
      }
      clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
      }
      copy(_0x32bc16) {
        this._x = _0x32bc16.x;
        this._y = _0x32bc16.y;
        this._z = _0x32bc16.z;
        this._w = _0x32bc16.w;
        this._onChangeCallback();
        return this;
      }
      setFromEuler(_0x49a2e0, _0x4b80e7) {
        const _0x52abaf = _0x49a2e0._x;
        const _0xcb1d83 = _0x49a2e0._y;
        const _0x3f6a58 = _0x49a2e0._z;
        const _0x54b3dc = _0x49a2e0._order;
        const _0x93b3a9 = Math.cos;
        const _0x404768 = Math.sin;
        const _0xbc84e5 = _0x93b3a9(_0x52abaf / 2);
        const _0x3c4da2 = _0x93b3a9(_0xcb1d83 / 2);
        const _0x6c9fc7 = _0x93b3a9(_0x3f6a58 / 2);
        const _0x4a1f29 = _0x404768(_0x52abaf / 2);
        const _0x407e24 = _0x404768(_0xcb1d83 / 2);
        const _0x89ccad = _0x404768(_0x3f6a58 / 2);
        switch (_0x54b3dc) {
          case "XYZ":
            this._x = _0x4a1f29 * _0x3c4da2 * _0x6c9fc7 + _0xbc84e5 * _0x407e24 * _0x89ccad;
            this._y = _0xbc84e5 * _0x407e24 * _0x6c9fc7 - _0x4a1f29 * _0x3c4da2 * _0x89ccad;
            this._z = _0xbc84e5 * _0x3c4da2 * _0x89ccad + _0x4a1f29 * _0x407e24 * _0x6c9fc7;
            this._w = _0xbc84e5 * _0x3c4da2 * _0x6c9fc7 - _0x4a1f29 * _0x407e24 * _0x89ccad;
            break;
          case "YXZ":
            this._x = _0x4a1f29 * _0x3c4da2 * _0x6c9fc7 + _0xbc84e5 * _0x407e24 * _0x89ccad;
            this._y = _0xbc84e5 * _0x407e24 * _0x6c9fc7 - _0x4a1f29 * _0x3c4da2 * _0x89ccad;
            this._z = _0xbc84e5 * _0x3c4da2 * _0x89ccad - _0x4a1f29 * _0x407e24 * _0x6c9fc7;
            this._w = _0xbc84e5 * _0x3c4da2 * _0x6c9fc7 + _0x4a1f29 * _0x407e24 * _0x89ccad;
            break;
          case "ZXY":
            this._x = _0x4a1f29 * _0x3c4da2 * _0x6c9fc7 - _0xbc84e5 * _0x407e24 * _0x89ccad;
            this._y = _0xbc84e5 * _0x407e24 * _0x6c9fc7 + _0x4a1f29 * _0x3c4da2 * _0x89ccad;
            this._z = _0xbc84e5 * _0x3c4da2 * _0x89ccad + _0x4a1f29 * _0x407e24 * _0x6c9fc7;
            this._w = _0xbc84e5 * _0x3c4da2 * _0x6c9fc7 - _0x4a1f29 * _0x407e24 * _0x89ccad;
            break;
          case "ZYX":
            this._x = _0x4a1f29 * _0x3c4da2 * _0x6c9fc7 - _0xbc84e5 * _0x407e24 * _0x89ccad;
            this._y = _0xbc84e5 * _0x407e24 * _0x6c9fc7 + _0x4a1f29 * _0x3c4da2 * _0x89ccad;
            this._z = _0xbc84e5 * _0x3c4da2 * _0x89ccad - _0x4a1f29 * _0x407e24 * _0x6c9fc7;
            this._w = _0xbc84e5 * _0x3c4da2 * _0x6c9fc7 + _0x4a1f29 * _0x407e24 * _0x89ccad;
            break;
          case "YZX":
            this._x = _0x4a1f29 * _0x3c4da2 * _0x6c9fc7 + _0xbc84e5 * _0x407e24 * _0x89ccad;
            this._y = _0xbc84e5 * _0x407e24 * _0x6c9fc7 + _0x4a1f29 * _0x3c4da2 * _0x89ccad;
            this._z = _0xbc84e5 * _0x3c4da2 * _0x89ccad - _0x4a1f29 * _0x407e24 * _0x6c9fc7;
            this._w = _0xbc84e5 * _0x3c4da2 * _0x6c9fc7 - _0x4a1f29 * _0x407e24 * _0x89ccad;
            break;
          case "XZY":
            this._x = _0x4a1f29 * _0x3c4da2 * _0x6c9fc7 - _0xbc84e5 * _0x407e24 * _0x89ccad;
            this._y = _0xbc84e5 * _0x407e24 * _0x6c9fc7 - _0x4a1f29 * _0x3c4da2 * _0x89ccad;
            this._z = _0xbc84e5 * _0x3c4da2 * _0x89ccad + _0x4a1f29 * _0x407e24 * _0x6c9fc7;
            this._w = _0xbc84e5 * _0x3c4da2 * _0x6c9fc7 + _0x4a1f29 * _0x407e24 * _0x89ccad;
            break;
          default:
            _0x489250.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + _0x54b3dc);
        }
        if (_0x4b80e7 !== false) {
          this._onChangeCallback();
        }
        return this;
      }
      setFromAxisAngle(_0x7fe40f, _0x56a93c) {
        const _0x5eef56 = _0x56a93c / 2;
        const _0x44ac6f = Math.sin(_0x5eef56);
        this._x = _0x7fe40f.x * _0x44ac6f;
        this._y = _0x7fe40f.y * _0x44ac6f;
        this._z = _0x7fe40f.z * _0x44ac6f;
        this._w = Math.cos(_0x5eef56);
        this._onChangeCallback();
        return this;
      }
      setFromRotationMatrix(_0x3abaaf) {
        const _0x490b29 = _0x3abaaf.elements;
        const _0x159534 = _0x490b29[0];
        const _0x144492 = _0x490b29[4];
        const _0x486de8 = _0x490b29[8];
        const _0x3c4915 = _0x490b29[1];
        const _0x1ee1f8 = _0x490b29[5];
        const _0x5844b3 = _0x490b29[9];
        const _0x2c4094 = _0x490b29[2];
        const _0x57b341 = _0x490b29[6];
        const _0x197359 = _0x490b29[10];
        const _0x3a9e23 = _0x159534 + _0x1ee1f8 + _0x197359;
        if (_0x3a9e23 > 0) {
          const _0x52dce3 = 0.5 / Math.sqrt(_0x3a9e23 + 1);
          this._w = 0.25 / _0x52dce3;
          this._x = (_0x57b341 - _0x5844b3) * _0x52dce3;
          this._y = (_0x486de8 - _0x2c4094) * _0x52dce3;
          this._z = (_0x3c4915 - _0x144492) * _0x52dce3;
        } else if (_0x159534 > _0x1ee1f8 && _0x159534 > _0x197359) {
          const _0x3d0b71 = Math.sqrt(1 + _0x159534 - _0x1ee1f8 - _0x197359) * 2;
          this._w = (_0x57b341 - _0x5844b3) / _0x3d0b71;
          this._x = _0x3d0b71 * 0.25;
          this._y = (_0x144492 + _0x3c4915) / _0x3d0b71;
          this._z = (_0x486de8 + _0x2c4094) / _0x3d0b71;
        } else if (_0x1ee1f8 > _0x197359) {
          const _0x43ce91 = Math.sqrt(1 + _0x1ee1f8 - _0x159534 - _0x197359) * 2;
          this._w = (_0x486de8 - _0x2c4094) / _0x43ce91;
          this._x = (_0x144492 + _0x3c4915) / _0x43ce91;
          this._y = _0x43ce91 * 0.25;
          this._z = (_0x5844b3 + _0x57b341) / _0x43ce91;
        } else {
          const _0x1c4751 = Math.sqrt(1 + _0x197359 - _0x159534 - _0x1ee1f8) * 2;
          this._w = (_0x3c4915 - _0x144492) / _0x1c4751;
          this._x = (_0x486de8 + _0x2c4094) / _0x1c4751;
          this._y = (_0x5844b3 + _0x57b341) / _0x1c4751;
          this._z = _0x1c4751 * 0.25;
        }
        this._onChangeCallback();
        return this;
      }
      setFromUnitVectors(_0x311c3b, _0x27e62d) {
        let _0x5ba339 = _0x311c3b.dot(_0x27e62d) + 1;
        if (_0x5ba339 < Number.EPSILON) {
          _0x5ba339 = 0;
          if (Math.abs(_0x311c3b.x) > Math.abs(_0x311c3b.z)) {
            this._x = -_0x311c3b.y;
            this._y = _0x311c3b.x;
            this._z = 0;
            this._w = _0x5ba339;
          } else {
            this._x = 0;
            this._y = -_0x311c3b.z;
            this._z = _0x311c3b.y;
            this._w = _0x5ba339;
          }
        } else {
          this._x = _0x311c3b.y * _0x27e62d.z - _0x311c3b.z * _0x27e62d.y;
          this._y = _0x311c3b.z * _0x27e62d.x - _0x311c3b.x * _0x27e62d.z;
          this._z = _0x311c3b.x * _0x27e62d.y - _0x311c3b.y * _0x27e62d.x;
          this._w = _0x5ba339;
        }
        return this.normalize();
      }
      angleTo(_0x5767be) {
        return Math.acos(Math.abs(_0x283adc(this.dot(_0x5767be), -1, 1))) * 2;
      }
      rotateTowards(_0x3edfcc, _0x4f6b6b) {
        const _0x7349a6 = this.angleTo(_0x3edfcc);
        if (_0x7349a6 === 0) {
          return this;
        }
        const _0x38e20c = Math.min(1, _0x4f6b6b / _0x7349a6);
        this.slerp(_0x3edfcc, _0x38e20c);
        return this;
      }
      identity() {
        return this.set(0, 0, 0, 1);
      }
      invert() {
        return this.conjugate();
      }
      conjugate() {
        this._x *= -1;
        this._y *= -1;
        this._z *= -1;
        this._onChangeCallback();
        return this;
      }
      dot(_0x15ed23) {
        return this._x * _0x15ed23._x + this._y * _0x15ed23._y + this._z * _0x15ed23._z + this._w * _0x15ed23._w;
      }
      lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
      }
      length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
      }
      normalize() {
        let _0x2a65d1 = this.length();
        if (_0x2a65d1 === 0) {
          this._x = 0;
          this._y = 0;
          this._z = 0;
          this._w = 1;
        } else {
          _0x2a65d1 = 1 / _0x2a65d1;
          this._x = this._x * _0x2a65d1;
          this._y = this._y * _0x2a65d1;
          this._z = this._z * _0x2a65d1;
          this._w = this._w * _0x2a65d1;
        }
        this._onChangeCallback();
        return this;
      }
      multiply(_0x39d912) {
        return this.multiplyQuaternions(this, _0x39d912);
      }
      premultiply(_0x48d70f) {
        return this.multiplyQuaternions(_0x48d70f, this);
      }
      multiplyQuaternions(_0x379b07, _0x590ce8) {
        const _0x107413 = _0x379b07._x;
        const _0x5e019b = _0x379b07._y;
        const _0x521b40 = _0x379b07._z;
        const _0x50bf01 = _0x379b07._w;
        const _0x534f7f = _0x590ce8._x;
        const _0x1b9cb7 = _0x590ce8._y;
        const _0x5a4141 = _0x590ce8._z;
        const _0x15a770 = _0x590ce8._w;
        this._x = _0x107413 * _0x15a770 + _0x50bf01 * _0x534f7f + _0x5e019b * _0x5a4141 - _0x521b40 * _0x1b9cb7;
        this._y = _0x5e019b * _0x15a770 + _0x50bf01 * _0x1b9cb7 + _0x521b40 * _0x534f7f - _0x107413 * _0x5a4141;
        this._z = _0x521b40 * _0x15a770 + _0x50bf01 * _0x5a4141 + _0x107413 * _0x1b9cb7 - _0x5e019b * _0x534f7f;
        this._w = _0x50bf01 * _0x15a770 - _0x107413 * _0x534f7f - _0x5e019b * _0x1b9cb7 - _0x521b40 * _0x5a4141;
        this._onChangeCallback();
        return this;
      }
      slerp(_0x15eea6, _0x15f9c5) {
        if (_0x15f9c5 === 0) {
          return this;
        }
        if (_0x15f9c5 === 1) {
          return this.copy(_0x15eea6);
        }
        const _0x4ccf29 = this._x;
        const _0x3d6172 = this._y;
        const _0x2037f0 = this._z;
        const _0x22018c = this._w;
        let _0x2fd243 = _0x22018c * _0x15eea6._w + _0x4ccf29 * _0x15eea6._x + _0x3d6172 * _0x15eea6._y + _0x2037f0 * _0x15eea6._z;
        if (_0x2fd243 < 0) {
          this._w = -_0x15eea6._w;
          this._x = -_0x15eea6._x;
          this._y = -_0x15eea6._y;
          this._z = -_0x15eea6._z;
          _0x2fd243 = -_0x2fd243;
        } else {
          this.copy(_0x15eea6);
        }
        if (_0x2fd243 >= 1) {
          this._w = _0x22018c;
          this._x = _0x4ccf29;
          this._y = _0x3d6172;
          this._z = _0x2037f0;
          return this;
        }
        const _0x401157 = 1 - _0x2fd243 * _0x2fd243;
        if (_0x401157 <= Number.EPSILON) {
          const _0x665ea = 1 - _0x15f9c5;
          this._w = _0x665ea * _0x22018c + _0x15f9c5 * this._w;
          this._x = _0x665ea * _0x4ccf29 + _0x15f9c5 * this._x;
          this._y = _0x665ea * _0x3d6172 + _0x15f9c5 * this._y;
          this._z = _0x665ea * _0x2037f0 + _0x15f9c5 * this._z;
          this.normalize();
          this._onChangeCallback();
          return this;
        }
        const _0x1c3c41 = Math.sqrt(_0x401157);
        const _0x20d510 = Math.atan2(_0x1c3c41, _0x2fd243);
        const _0x459b45 = Math.sin((1 - _0x15f9c5) * _0x20d510) / _0x1c3c41;
        const _0x18592c = Math.sin(_0x15f9c5 * _0x20d510) / _0x1c3c41;
        this._w = _0x22018c * _0x459b45 + this._w * _0x18592c;
        this._x = _0x4ccf29 * _0x459b45 + this._x * _0x18592c;
        this._y = _0x3d6172 * _0x459b45 + this._y * _0x18592c;
        this._z = _0x2037f0 * _0x459b45 + this._z * _0x18592c;
        this._onChangeCallback();
        return this;
      }
      slerpQuaternions(_0x35c89d, _0x3ceb0d, _0x232354) {
        return this.copy(_0x35c89d).slerp(_0x3ceb0d, _0x232354);
      }
      random() {
        const _0x4558b8 = Math.random();
        const _0x5f47a3 = Math.sqrt(1 - _0x4558b8);
        const _0x4f325d = Math.sqrt(_0x4558b8);
        const _0x130c17 = Math.PI * 2 * Math.random();
        const _0x35e430 = Math.PI * 2 * Math.random();
        return this.set(_0x5f47a3 * Math.cos(_0x130c17), _0x4f325d * Math.sin(_0x35e430), _0x4f325d * Math.cos(_0x35e430), _0x5f47a3 * Math.sin(_0x130c17));
      }
      equals(_0x596179) {
        return _0x596179._x === this._x && _0x596179._y === this._y && _0x596179._z === this._z && _0x596179._w === this._w;
      }
      fromArray(_0x20278c, _0x37108d = 0) {
        this._x = _0x20278c[_0x37108d];
        this._y = _0x20278c[_0x37108d + 1];
        this._z = _0x20278c[_0x37108d + 2];
        this._w = _0x20278c[_0x37108d + 3];
        this._onChangeCallback();
        return this;
      }
      toArray(_0x407e2c = [], _0x324691 = 0) {
        _0x407e2c[_0x324691] = this._x;
        _0x407e2c[_0x324691 + 1] = this._y;
        _0x407e2c[_0x324691 + 2] = this._z;
        _0x407e2c[_0x324691 + 3] = this._w;
        return _0x407e2c;
      }
      fromBufferAttribute(_0x58f306, _0x38d2e0) {
        this._x = _0x58f306.getX(_0x38d2e0);
        this._y = _0x58f306.getY(_0x38d2e0);
        this._z = _0x58f306.getZ(_0x38d2e0);
        this._w = _0x58f306.getW(_0x38d2e0);
        return this;
      }
      toJSON() {
        return this.toArray();
      }
      _onChange(_0x3ee89d) {
        this._onChangeCallback = _0x3ee89d;
        return this;
      }
      _onChangeCallback() {}
      *[Symbol.iterator]() {
        yield this._x;
        yield this._y;
        yield this._z;
        yield this._w;
      }
    }
    ;
    class _0x4c82ed {
      constructor(_0x568ef4 = 0, _0x2a2a88 = 0, _0x3bb707 = 0) {
        _0x4c82ed.prototype.isVector3 = true;
        this.x = _0x568ef4;
        this.y = _0x2a2a88;
        this.z = _0x3bb707;
      }
      set(_0x2c8d26, _0x1b8bda, _0x2a89a9) {
        if (_0x2a89a9 === undefined) {
          _0x2a89a9 = this.z;
        }
        this.x = _0x2c8d26;
        this.y = _0x1b8bda;
        this.z = _0x2a89a9;
        return this;
      }
      setScalar(_0x8013a0) {
        this.x = _0x8013a0;
        this.y = _0x8013a0;
        this.z = _0x8013a0;
        return this;
      }
      setX(_0x4c2d7d) {
        this.x = _0x4c2d7d;
        return this;
      }
      setY(_0x3d002c) {
        this.y = _0x3d002c;
        return this;
      }
      setZ(_0x68eef0) {
        this.z = _0x68eef0;
        return this;
      }
      setComponent(_0x5eab59, _0x42a890) {
        switch (_0x5eab59) {
          case 0:
            this.x = _0x42a890;
            break;
          case 1:
            this.y = _0x42a890;
            break;
          case 2:
            this.z = _0x42a890;
            break;
          default:
            throw new Error("index is out of range: " + _0x5eab59);
        }
        return this;
      }
      getComponent(_0x40daf3) {
        switch (_0x40daf3) {
          case 0:
            return this.x;
          case 1:
            return this.y;
          case 2:
            return this.z;
          default:
            throw new Error("index is out of range: " + _0x40daf3);
        }
      }
      clone() {
        return new this.constructor(this.x, this.y, this.z);
      }
      copy(_0xc68a7c) {
        this.x = _0xc68a7c.x;
        this.y = _0xc68a7c.y;
        this.z = _0xc68a7c.z;
        return this;
      }
      add(_0x3c3100) {
        this.x += _0x3c3100.x;
        this.y += _0x3c3100.y;
        this.z += _0x3c3100.z;
        return this;
      }
      addScalar(_0x558ca0) {
        this.x += _0x558ca0;
        this.y += _0x558ca0;
        this.z += _0x558ca0;
        return this;
      }
      addVectors(_0x246e36, _0x1f0444) {
        this.x = _0x246e36.x + _0x1f0444.x;
        this.y = _0x246e36.y + _0x1f0444.y;
        this.z = _0x246e36.z + _0x1f0444.z;
        return this;
      }
      addScaledVector(_0x271cc0, _0x715835) {
        this.x += _0x271cc0.x * _0x715835;
        this.y += _0x271cc0.y * _0x715835;
        this.z += _0x271cc0.z * _0x715835;
        return this;
      }
      sub(_0x55a5c2) {
        this.x -= _0x55a5c2.x;
        this.y -= _0x55a5c2.y;
        this.z -= _0x55a5c2.z;
        return this;
      }
      subScalar(_0x2e14fa) {
        this.x -= _0x2e14fa;
        this.y -= _0x2e14fa;
        this.z -= _0x2e14fa;
        return this;
      }
      subVectors(_0x9200b1, _0x5d4ed2) {
        this.x = _0x9200b1.x - _0x5d4ed2.x;
        this.y = _0x9200b1.y - _0x5d4ed2.y;
        this.z = _0x9200b1.z - _0x5d4ed2.z;
        return this;
      }
      multiply(_0x3d8b22) {
        this.x *= _0x3d8b22.x;
        this.y *= _0x3d8b22.y;
        this.z *= _0x3d8b22.z;
        return this;
      }
      multiplyScalar(_0x4d9486) {
        this.x *= _0x4d9486;
        this.y *= _0x4d9486;
        this.z *= _0x4d9486;
        return this;
      }
      multiplyVectors(_0x3e3b23, _0x2aebf9) {
        this.x = _0x3e3b23.x * _0x2aebf9.x;
        this.y = _0x3e3b23.y * _0x2aebf9.y;
        this.z = _0x3e3b23.z * _0x2aebf9.z;
        return this;
      }
      applyEuler(_0x5cc49e) {
        return this.applyQuaternion(_0x33b67a.setFromEuler(_0x5cc49e));
      }
      applyAxisAngle(_0x25a47b, _0x4915f5) {
        return this.applyQuaternion(_0x33b67a.setFromAxisAngle(_0x25a47b, _0x4915f5));
      }
      applyMatrix3(_0x1ef3cd) {
        const _0x2ec367 = this.x;
        const _0x55484c = this.y;
        const _0x1e7b65 = this.z;
        const _0x23b389 = _0x1ef3cd.elements;
        this.x = _0x23b389[0] * _0x2ec367 + _0x23b389[3] * _0x55484c + _0x23b389[6] * _0x1e7b65;
        this.y = _0x23b389[1] * _0x2ec367 + _0x23b389[4] * _0x55484c + _0x23b389[7] * _0x1e7b65;
        this.z = _0x23b389[2] * _0x2ec367 + _0x23b389[5] * _0x55484c + _0x23b389[8] * _0x1e7b65;
        return this;
      }
      applyNormalMatrix(_0x1e4151) {
        return this.applyMatrix3(_0x1e4151).normalize();
      }
      applyMatrix4(_0x4157b8) {
        const _0x5641a4 = this.x;
        const _0x1053d7 = this.y;
        const _0x5d4b07 = this.z;
        const _0x32f7ba = _0x4157b8.elements;
        const _0x4fe11c = 1 / (_0x32f7ba[3] * _0x5641a4 + _0x32f7ba[7] * _0x1053d7 + _0x32f7ba[11] * _0x5d4b07 + _0x32f7ba[15]);
        this.x = (_0x32f7ba[0] * _0x5641a4 + _0x32f7ba[4] * _0x1053d7 + _0x32f7ba[8] * _0x5d4b07 + _0x32f7ba[12]) * _0x4fe11c;
        this.y = (_0x32f7ba[1] * _0x5641a4 + _0x32f7ba[5] * _0x1053d7 + _0x32f7ba[9] * _0x5d4b07 + _0x32f7ba[13]) * _0x4fe11c;
        this.z = (_0x32f7ba[2] * _0x5641a4 + _0x32f7ba[6] * _0x1053d7 + _0x32f7ba[10] * _0x5d4b07 + _0x32f7ba[14]) * _0x4fe11c;
        return this;
      }
      applyQuaternion(_0x271100) {
        const _0x55314f = this.x;
        const _0xc9e8f = this.y;
        const _0x57bf63 = this.z;
        const _0x14a3a4 = _0x271100.x;
        const _0x2e9fd6 = _0x271100.y;
        const _0x489852 = _0x271100.z;
        const _0x3df6f8 = _0x271100.w;
        const _0x429e40 = _0x3df6f8 * _0x55314f + _0x2e9fd6 * _0x57bf63 - _0x489852 * _0xc9e8f;
        const _0x37b777 = _0x3df6f8 * _0xc9e8f + _0x489852 * _0x55314f - _0x14a3a4 * _0x57bf63;
        const _0x36efe3 = _0x3df6f8 * _0x57bf63 + _0x14a3a4 * _0xc9e8f - _0x2e9fd6 * _0x55314f;
        const _0x2233ff = -_0x14a3a4 * _0x55314f - _0x2e9fd6 * _0xc9e8f - _0x489852 * _0x57bf63;
        this.x = _0x429e40 * _0x3df6f8 + _0x2233ff * -_0x14a3a4 + _0x37b777 * -_0x489852 - _0x36efe3 * -_0x2e9fd6;
        this.y = _0x37b777 * _0x3df6f8 + _0x2233ff * -_0x2e9fd6 + _0x36efe3 * -_0x14a3a4 - _0x429e40 * -_0x489852;
        this.z = _0x36efe3 * _0x3df6f8 + _0x2233ff * -_0x489852 + _0x429e40 * -_0x2e9fd6 - _0x37b777 * -_0x14a3a4;
        return this;
      }
      project(_0x4dce8d) {
        return this.applyMatrix4(_0x4dce8d.matrixWorldInverse).applyMatrix4(_0x4dce8d.projectionMatrix);
      }
      unproject(_0x2b00c1) {
        return this.applyMatrix4(_0x2b00c1.projectionMatrixInverse).applyMatrix4(_0x2b00c1.matrixWorld);
      }
      transformDirection(_0x49a2e1) {
        const _0x44fee7 = this.x;
        const _0x59410b = this.y;
        const _0x2b959d = this.z;
        const _0x36992c = _0x49a2e1.elements;
        this.x = _0x36992c[0] * _0x44fee7 + _0x36992c[4] * _0x59410b + _0x36992c[8] * _0x2b959d;
        this.y = _0x36992c[1] * _0x44fee7 + _0x36992c[5] * _0x59410b + _0x36992c[9] * _0x2b959d;
        this.z = _0x36992c[2] * _0x44fee7 + _0x36992c[6] * _0x59410b + _0x36992c[10] * _0x2b959d;
        return this.normalize();
      }
      divide(_0x36c8f0) {
        this.x /= _0x36c8f0.x;
        this.y /= _0x36c8f0.y;
        this.z /= _0x36c8f0.z;
        return this;
      }
      divideScalar(_0x3ed04b) {
        return this.multiplyScalar(1 / _0x3ed04b);
      }
      min(_0x821a8c) {
        this.x = Math.min(this.x, _0x821a8c.x);
        this.y = Math.min(this.y, _0x821a8c.y);
        this.z = Math.min(this.z, _0x821a8c.z);
        return this;
      }
      max(_0x2e3790) {
        this.x = Math.max(this.x, _0x2e3790.x);
        this.y = Math.max(this.y, _0x2e3790.y);
        this.z = Math.max(this.z, _0x2e3790.z);
        return this;
      }
      clamp(_0x40a651, _0x2f8205) {
        this.x = Math.max(_0x40a651.x, Math.min(_0x2f8205.x, this.x));
        this.y = Math.max(_0x40a651.y, Math.min(_0x2f8205.y, this.y));
        this.z = Math.max(_0x40a651.z, Math.min(_0x2f8205.z, this.z));
        return this;
      }
      clampScalar(_0x4b8765, _0x1734c8) {
        this.x = Math.max(_0x4b8765, Math.min(_0x1734c8, this.x));
        this.y = Math.max(_0x4b8765, Math.min(_0x1734c8, this.y));
        this.z = Math.max(_0x4b8765, Math.min(_0x1734c8, this.z));
        return this;
      }
      clampLength(_0x539160, _0x238d29) {
        const _0xe1772b = this.length();
        return this.divideScalar(_0xe1772b || 1).multiplyScalar(Math.max(_0x539160, Math.min(_0x238d29, _0xe1772b)));
      }
      floor() {
        this.x = Math.floor(this.x);
        this.y = Math.floor(this.y);
        this.z = Math.floor(this.z);
        return this;
      }
      ceil() {
        this.x = Math.ceil(this.x);
        this.y = Math.ceil(this.y);
        this.z = Math.ceil(this.z);
        return this;
      }
      round() {
        this.x = Math.round(this.x);
        this.y = Math.round(this.y);
        this.z = Math.round(this.z);
        return this;
      }
      roundToZero() {
        this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);
        this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);
        this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);
        return this;
      }
      negate() {
        this.x = -this.x;
        this.y = -this.y;
        this.z = -this.z;
        return this;
      }
      dot(_0xe08062) {
        return this.x * _0xe08062.x + this.y * _0xe08062.y + this.z * _0xe08062.z;
      }
      lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
      }
      length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      }
      manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
      }
      normalize() {
        return this.divideScalar(this.length() || 1);
      }
      setLength(_0xd53e3f) {
        return this.normalize().multiplyScalar(_0xd53e3f);
      }
      lerp(_0x69ee26, _0xb8dbed) {
        this.x += (_0x69ee26.x - this.x) * _0xb8dbed;
        this.y += (_0x69ee26.y - this.y) * _0xb8dbed;
        this.z += (_0x69ee26.z - this.z) * _0xb8dbed;
        return this;
      }
      lerpVectors(_0x5bbdb8, _0x3fe1da, _0x4e1bf3) {
        this.x = _0x5bbdb8.x + (_0x3fe1da.x - _0x5bbdb8.x) * _0x4e1bf3;
        this.y = _0x5bbdb8.y + (_0x3fe1da.y - _0x5bbdb8.y) * _0x4e1bf3;
        this.z = _0x5bbdb8.z + (_0x3fe1da.z - _0x5bbdb8.z) * _0x4e1bf3;
        return this;
      }
      cross(_0x148fc9) {
        return this.crossVectors(this, _0x148fc9);
      }
      crossVectors(_0x3fee17, _0x446efd) {
        const _0x38533e = _0x3fee17.x;
        const _0x2dca72 = _0x3fee17.y;
        const _0x4e801c = _0x3fee17.z;
        const _0x3026f7 = _0x446efd.x;
        const _0x59ebad = _0x446efd.y;
        const _0x3b7b36 = _0x446efd.z;
        this.x = _0x2dca72 * _0x3b7b36 - _0x4e801c * _0x59ebad;
        this.y = _0x4e801c * _0x3026f7 - _0x38533e * _0x3b7b36;
        this.z = _0x38533e * _0x59ebad - _0x2dca72 * _0x3026f7;
        return this;
      }
      projectOnVector(_0x52c285) {
        const _0x232f0a = _0x52c285.lengthSq();
        if (_0x232f0a === 0) {
          return this.set(0, 0, 0);
        }
        const _0x162a56 = _0x52c285.dot(this) / _0x232f0a;
        return this.copy(_0x52c285).multiplyScalar(_0x162a56);
      }
      projectOnPlane(_0x46856c) {
        _0x2af909.copy(this).projectOnVector(_0x46856c);
        return this.sub(_0x2af909);
      }
      reflect(_0x388d23) {
        return this.sub(_0x2af909.copy(_0x388d23).multiplyScalar(this.dot(_0x388d23) * 2));
      }
      angleTo(_0x3a9d2f) {
        const _0x1cd83e = Math.sqrt(this.lengthSq() * _0x3a9d2f.lengthSq());
        if (_0x1cd83e === 0) {
          return Math.PI / 2;
        }
        const _0x1184b3 = this.dot(_0x3a9d2f) / _0x1cd83e;
        return Math.acos(_0x283adc(_0x1184b3, -1, 1));
      }
      distanceTo(_0x104ad4) {
        return Math.sqrt(this.distanceToSquared(_0x104ad4));
      }
      distanceToSquared(_0x12feb2) {
        const _0x2c00d5 = this.x - _0x12feb2.x;
        const _0x248ea = this.y - _0x12feb2.y;
        const _0x1466b6 = this.z - _0x12feb2.z;
        return _0x2c00d5 * _0x2c00d5 + _0x248ea * _0x248ea + _0x1466b6 * _0x1466b6;
      }
      manhattanDistanceTo(_0x59ad4e) {
        return Math.abs(this.x - _0x59ad4e.x) + Math.abs(this.y - _0x59ad4e.y) + Math.abs(this.z - _0x59ad4e.z);
      }
      setFromSpherical(_0x49260b) {
        return this.setFromSphericalCoords(_0x49260b.radius, _0x49260b.phi, _0x49260b.theta);
      }
      setFromSphericalCoords(_0xa024ec, _0x25c98b, _0x34f196) {
        const _0x2491cf = Math.sin(_0x25c98b) * _0xa024ec;
        this.x = _0x2491cf * Math.sin(_0x34f196);
        this.y = Math.cos(_0x25c98b) * _0xa024ec;
        this.z = _0x2491cf * Math.cos(_0x34f196);
        return this;
      }
      setFromCylindrical(_0x1aac33) {
        return this.setFromCylindricalCoords(_0x1aac33.radius, _0x1aac33.theta, _0x1aac33.y);
      }
      setFromCylindricalCoords(_0x3b3b56, _0x373406, _0x2e5eb1) {
        this.x = _0x3b3b56 * Math.sin(_0x373406);
        this.y = _0x2e5eb1;
        this.z = _0x3b3b56 * Math.cos(_0x373406);
        return this;
      }
      setFromMatrixPosition(_0x9ea940) {
        const _0x497e04 = _0x9ea940.elements;
        this.x = _0x497e04[12];
        this.y = _0x497e04[13];
        this.z = _0x497e04[14];
        return this;
      }
      setFromMatrixScale(_0x11fb55) {
        const _0x32c0b0 = this.setFromMatrixColumn(_0x11fb55, 0).length();
        const _0x30ce30 = this.setFromMatrixColumn(_0x11fb55, 1).length();
        const _0xfe5976 = this.setFromMatrixColumn(_0x11fb55, 2).length();
        this.x = _0x32c0b0;
        this.y = _0x30ce30;
        this.z = _0xfe5976;
        return this;
      }
      setFromMatrixColumn(_0x49caaf, _0x1d9517) {
        return this.fromArray(_0x49caaf.elements, _0x1d9517 * 4);
      }
      setFromMatrix3Column(_0x51abae, _0x50445b) {
        return this.fromArray(_0x51abae.elements, _0x50445b * 3);
      }
      setFromEuler(_0x2ecf85) {
        this.x = _0x2ecf85._x;
        this.y = _0x2ecf85._y;
        this.z = _0x2ecf85._z;
        return this;
      }
      setFromColor(_0x352050) {
        this.x = _0x352050.r;
        this.y = _0x352050.g;
        this.z = _0x352050.b;
        return this;
      }
      equals(_0x4a6528) {
        return _0x4a6528.x === this.x && _0x4a6528.y === this.y && _0x4a6528.z === this.z;
      }
      fromArray(_0x144b25, _0x18932f = 0) {
        this.x = _0x144b25[_0x18932f];
        this.y = _0x144b25[_0x18932f + 1];
        this.z = _0x144b25[_0x18932f + 2];
        return this;
      }
      toArray(_0x4b6770 = [], _0x4ef917 = 0) {
        _0x4b6770[_0x4ef917] = this.x;
        _0x4b6770[_0x4ef917 + 1] = this.y;
        _0x4b6770[_0x4ef917 + 2] = this.z;
        return _0x4b6770;
      }
      fromBufferAttribute(_0xed0459, _0x448341) {
        this.x = _0xed0459.getX(_0x448341);
        this.y = _0xed0459.getY(_0x448341);
        this.z = _0xed0459.getZ(_0x448341);
        return this;
      }
      random() {
        this.x = Math.random();
        this.y = Math.random();
        this.z = Math.random();
        return this;
      }
      randomDirection() {
        const _0x1c252d = (Math.random() - 0.5) * 2;
        const _0x4880a1 = Math.random() * Math.PI * 2;
        const _0x466103 = Math.sqrt(1 - _0x1c252d ** 2);
        this.x = _0x466103 * Math.cos(_0x4880a1);
        this.y = _0x466103 * Math.sin(_0x4880a1);
        this.z = _0x1c252d;
        return this;
      }
      *[Symbol.iterator]() {
        yield this.x;
        yield this.y;
        yield this.z;
      }
    }
    const _0x2af909 = new _0x4c82ed();
    const _0x33b67a = new _0x2af827();
    ;
    function _0x2f6f33(_0x5c1a6e, _0xb7a1d7, _0x1d6400, _0x19e3be, _0x2f022c, _0x28f9a7, _0x33a329) {
      try {
        var _0x460e17 = _0x5c1a6e[_0x28f9a7](_0x33a329);
        var _0xae3b8a = _0x460e17.value;
      } catch (_0x4c9dbb) {
        _0x1d6400(_0x4c9dbb);
        return;
      }
      if (_0x460e17.done) {
        _0xb7a1d7(_0xae3b8a);
      } else {
        Promise.resolve(_0xae3b8a).then(_0x19e3be, _0x2f022c);
      }
    }
    function _0x49861d(_0x4ba8eb) {
      return function () {
        var _0x2e8d57 = this;
        var _0x447c2a = arguments;
        return new Promise(function (_0x5d31fd, _0x190160) {
          var _0x1f3da0 = _0x4ba8eb.apply(_0x2e8d57, _0x447c2a);
          function _0x452310(_0x1f6462) {
            _0x2f6f33(_0x1f3da0, _0x5d31fd, _0x190160, _0x452310, _0x4a7ffe, "next", _0x1f6462);
          }
          function _0x4a7ffe(_0x124ec0) {
            _0x2f6f33(_0x1f3da0, _0x5d31fd, _0x190160, _0x452310, _0x4a7ffe, "throw", _0x124ec0);
          }
          _0x452310(undefined);
        });
      };
    }
    function _0x5e51aa(_0x12e442, _0x2a3052) {
      var _0x12ce74;
      var _0x4306b9;
      var _0x1a8cf1;
      var _0x551501;
      var _0x13a4d1 = {
        label: 0,
        sent: function () {
          if (_0x1a8cf1[0] & 1) {
            throw _0x1a8cf1[1];
          }
          return _0x1a8cf1[1];
        },
        trys: [],
        ops: []
      };
      _0x551501 = {
        next: _0x52b5c4(0),
        throw: _0x52b5c4(1),
        return: _0x52b5c4(2)
      };
      if (typeof Symbol === "function") {
        _0x551501[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x551501;
      function _0x52b5c4(_0xe43d2e) {
        return function (_0x20ea16) {
          return _0x4b3820([_0xe43d2e, _0x20ea16]);
        };
      }
      function _0x4b3820(_0x167c0a) {
        if (_0x12ce74) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x13a4d1) {
          try {
            _0x12ce74 = 1;
            if (_0x4306b9 && (_0x1a8cf1 = _0x167c0a[0] & 2 ? _0x4306b9.return : _0x167c0a[0] ? _0x4306b9.throw || ((_0x1a8cf1 = _0x4306b9.return) && _0x1a8cf1.call(_0x4306b9), 0) : _0x4306b9.next) && !(_0x1a8cf1 = _0x1a8cf1.call(_0x4306b9, _0x167c0a[1])).done) {
              return _0x1a8cf1;
            }
            _0x4306b9 = 0;
            if (_0x1a8cf1) {
              _0x167c0a = [_0x167c0a[0] & 2, _0x1a8cf1.value];
            }
            switch (_0x167c0a[0]) {
              case 0:
              case 1:
                _0x1a8cf1 = _0x167c0a;
                break;
              case 4:
                _0x13a4d1.label++;
                var _0x59b40e = {
                  value: _0x167c0a[1],
                  done: false
                };
                return _0x59b40e;
              case 5:
                _0x13a4d1.label++;
                _0x4306b9 = _0x167c0a[1];
                _0x167c0a = [0];
                continue;
              case 7:
                _0x167c0a = _0x13a4d1.ops.pop();
                _0x13a4d1.trys.pop();
                continue;
              default:
                if (!(_0x1a8cf1 = _0x13a4d1.trys, _0x1a8cf1 = _0x1a8cf1.length > 0 && _0x1a8cf1[_0x1a8cf1.length - 1]) && (_0x167c0a[0] === 6 || _0x167c0a[0] === 2)) {
                  _0x13a4d1 = 0;
                  continue;
                }
                if (_0x167c0a[0] === 3 && (!_0x1a8cf1 || _0x167c0a[1] > _0x1a8cf1[0] && _0x167c0a[1] < _0x1a8cf1[3])) {
                  _0x13a4d1.label = _0x167c0a[1];
                  break;
                }
                if (_0x167c0a[0] === 6 && _0x13a4d1.label < _0x1a8cf1[1]) {
                  _0x13a4d1.label = _0x1a8cf1[1];
                  _0x1a8cf1 = _0x167c0a;
                  break;
                }
                if (_0x1a8cf1 && _0x13a4d1.label < _0x1a8cf1[2]) {
                  _0x13a4d1.label = _0x1a8cf1[2];
                  _0x13a4d1.ops.push(_0x167c0a);
                  break;
                }
                if (_0x1a8cf1[2]) {
                  _0x13a4d1.ops.pop();
                }
                _0x13a4d1.trys.pop();
                continue;
            }
            _0x167c0a = _0x2a3052.call(_0x12e442, _0x13a4d1);
          } catch (_0x9e41aa) {
            _0x167c0a = [6, _0x9e41aa];
            _0x4306b9 = 0;
          } finally {
            _0x12ce74 = _0x1a8cf1 = 0;
          }
        }
        if (_0x167c0a[0] & 5) {
          throw _0x167c0a[1];
        }
        var _0x43d3c6 = {
          value: _0x167c0a[0] ? _0x167c0a[1] : undefined,
          done: true
        };
        return _0x43d3c6;
      }
    }
    var _0x5682d1 = function () {
      var _0x2e4321 = _0x49861d(function (_0x33dc35, _0x230571, _0x41179d, _0x1e3e40) {
        var _0x45f3ac;
        var _0x66665a;
        var _0x551c16;
        var _0x2e99a2;
        var _0x5a19ef;
        var _0x4a9efa;
        var _0x17942d;
        var _0x13dc0c;
        var _0x2f9d61;
        var _0x2a78be;
        return _0x5e51aa(this, function (_0x5c6ad9) {
          _0x45f3ac = new _0x4c82ed(_0x33dc35.x, _0x33dc35.y, _0x33dc35.z);
          _0x66665a = new _0x4c82ed(0, 0, 0);
          _0x551c16 = new _0x2af827(_0x1e3e40.x, _0x1e3e40.y, _0x1e3e40.z, _0x1e3e40.w);
          _0x2e99a2 = _0x551c16.clone();
          _0x5a19ef = _0x45f3ac.clone().sub(_0x66665a);
          _0x4a9efa = _0x5a19ef.applyQuaternion(_0x2e99a2);
          _0x17942d = _0x4a9efa.add(_0x66665a);
          _0x13dc0c = new _0x45b4c7(_0x17942d.x, _0x17942d.y, _0x17942d.z).add(_0x41179d);
          _0x2f9d61 = new _0x2af827();
          _0x2a78be = new _0x2af827(_0x230571.x, _0x230571.y, _0x230571.z, _0x230571.w);
          _0x2f9d61.copy(_0x551c16).multiply(_0x2a78be);
          return [2, [_0x13dc0c, new _0x21193b(_0x2f9d61.x, _0x2f9d61.y, _0x2f9d61.z, _0x2f9d61.w)]];
        });
      });
      return function _0x534a59(_0xab8495, _0x44249c, _0x521033, _0x59f9da) {
        return _0x2e4321.apply(this, arguments);
      };
    }();
    var _0x444d60 = function () {
      var _0x2966e9 = _0x49861d(function (_0x2c6021, _0x508f52, _0x596ef8, _0x4445b5) {
        var _0x366285;
        var _0xbf2260;
        var _0x1103c1;
        var _0x1ea446;
        var _0x125b23;
        var _0x3b6630;
        var _0x291cc6;
        var _0x5b9065;
        var _0x300da5;
        var _0x5849be;
        var _0x5a797b;
        var _0x1a3ea8;
        return _0x5e51aa(this, function (_0x1ea529) {
          _0x366285 = new _0x4c82ed(_0x2c6021.x, _0x2c6021.y, _0x2c6021.z);
          _0xbf2260 = new _0x4c82ed(_0x596ef8.x, _0x596ef8.y, _0x596ef8.z);
          _0x1103c1 = new _0x2af827(_0x4445b5.x, _0x4445b5.y, _0x4445b5.z, _0x4445b5.w);
          _0x1ea446 = _0x1103c1.clone();
          _0x125b23 = new _0x2af827();
          _0x3b6630 = new _0x2af827(_0x508f52.x, _0x508f52.y, _0x508f52.z, _0x508f52.w);
          _0x125b23.copy(_0x1ea446.invert()).multiply(_0x3b6630);
          _0x291cc6 = _0x1103c1.clone().invert();
          _0x5b9065 = _0x366285.clone().sub(_0xbf2260);
          _0x300da5 = _0x5b9065.applyQuaternion(_0x291cc6);
          _0x5849be = _0x300da5.add(_0xbf2260);
          _0x5a797b = new _0x45b4c7(_0x5849be.x, _0x5849be.y, _0x5849be.z);
          _0x1a3ea8 = _0x5a797b.sub(_0x596ef8);
          return [2, [_0x1a3ea8, new _0x21193b(_0x125b23.x, _0x125b23.y, _0x125b23.z, _0x125b23.w)]];
        });
      });
      return function _0x521367(_0x5cff46, _0x31a5df, _0x2ed0cc, _0x153212) {
        return _0x2966e9.apply(this, arguments);
      };
    }();
    var _0x13cda5 = function () {
      var _0x12dfbc = _0x49861d(function (_0x454bdf, _0x39239e, _0x76ab3e) {
        var _0x30fe32;
        var _0x6f8961;
        var _0x287581;
        var _0x3ac1f5;
        var _0x355190;
        var _0x185a80;
        var _0x8024b7;
        var _0x538402;
        return _0x5e51aa(this, function (_0x19a2fb) {
          _0x30fe32 = new _0x4c82ed(_0x454bdf.x, _0x454bdf.y, _0x454bdf.z);
          _0x6f8961 = new _0x4c82ed(_0x39239e.x, _0x39239e.y, _0x39239e.z);
          _0x287581 = new _0x2af827(_0x76ab3e.x, _0x76ab3e.y, _0x76ab3e.z, _0x76ab3e.w);
          _0x3ac1f5 = _0x287581.clone();
          _0x355190 = _0x30fe32.clone().sub(_0x6f8961);
          _0x185a80 = _0x355190.applyQuaternion(_0x3ac1f5);
          _0x8024b7 = _0x185a80.add(_0x6f8961);
          _0x538402 = new _0x45b4c7(_0x8024b7.x, _0x8024b7.y, _0x8024b7.z);
          return [2, _0x538402];
        });
      });
      return function _0x4b348c(_0x4292f6, _0x543732, _0x5294cc) {
        return _0x12dfbc.apply(this, arguments);
      };
    }();
    ;
    function _0x1e1cc0(_0x1c76c3, _0xb227ba, _0x159aa1, _0x1a88c9, _0x31f6b2, _0x2b83af, _0x1956ba) {
      try {
        var _0x2f5335 = _0x1c76c3[_0x2b83af](_0x1956ba);
        var _0x28fe1b = _0x2f5335.value;
      } catch (_0x7d48ba) {
        _0x159aa1(_0x7d48ba);
        return;
      }
      if (_0x2f5335.done) {
        _0xb227ba(_0x28fe1b);
      } else {
        Promise.resolve(_0x28fe1b).then(_0x1a88c9, _0x31f6b2);
      }
    }
    function _0x15785d(_0x1a4ab4) {
      return function () {
        var _0x32f603 = this;
        var _0x8ea0d = arguments;
        return new Promise(function (_0x49dc8d, _0x9c8324) {
          var _0x118f48 = _0x1a4ab4.apply(_0x32f603, _0x8ea0d);
          function _0x12b420(_0x31ddfa) {
            _0x1e1cc0(_0x118f48, _0x49dc8d, _0x9c8324, _0x12b420, _0x593f79, "next", _0x31ddfa);
          }
          function _0x593f79(_0x145b1f) {
            _0x1e1cc0(_0x118f48, _0x49dc8d, _0x9c8324, _0x12b420, _0x593f79, "throw", _0x145b1f);
          }
          _0x12b420(undefined);
        });
      };
    }
    function _0x4caaa4(_0x29a131, _0xa8a54a) {
      var _0x4b2ab4;
      var _0xa7660d;
      var _0x520b10;
      var _0x369de2;
      var _0xdb1460 = {
        label: 0,
        sent: function () {
          if (_0x520b10[0] & 1) {
            throw _0x520b10[1];
          }
          return _0x520b10[1];
        },
        trys: [],
        ops: []
      };
      _0x369de2 = {
        next: _0x46877d(0),
        throw: _0x46877d(1),
        return: _0x46877d(2)
      };
      if (typeof Symbol === "function") {
        _0x369de2[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x369de2;
      function _0x46877d(_0x2242b0) {
        return function (_0xf4966f) {
          return _0x5a39a2([_0x2242b0, _0xf4966f]);
        };
      }
      function _0x5a39a2(_0x32a62c) {
        if (_0x4b2ab4) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xdb1460) {
          try {
            _0x4b2ab4 = 1;
            if (_0xa7660d && (_0x520b10 = _0x32a62c[0] & 2 ? _0xa7660d.return : _0x32a62c[0] ? _0xa7660d.throw || ((_0x520b10 = _0xa7660d.return) && _0x520b10.call(_0xa7660d), 0) : _0xa7660d.next) && !(_0x520b10 = _0x520b10.call(_0xa7660d, _0x32a62c[1])).done) {
              return _0x520b10;
            }
            _0xa7660d = 0;
            if (_0x520b10) {
              _0x32a62c = [_0x32a62c[0] & 2, _0x520b10.value];
            }
            switch (_0x32a62c[0]) {
              case 0:
              case 1:
                _0x520b10 = _0x32a62c;
                break;
              case 4:
                _0xdb1460.label++;
                var _0x3e5221 = {
                  value: _0x32a62c[1],
                  done: false
                };
                return _0x3e5221;
              case 5:
                _0xdb1460.label++;
                _0xa7660d = _0x32a62c[1];
                _0x32a62c = [0];
                continue;
              case 7:
                _0x32a62c = _0xdb1460.ops.pop();
                _0xdb1460.trys.pop();
                continue;
              default:
                if (!(_0x520b10 = _0xdb1460.trys, _0x520b10 = _0x520b10.length > 0 && _0x520b10[_0x520b10.length - 1]) && (_0x32a62c[0] === 6 || _0x32a62c[0] === 2)) {
                  _0xdb1460 = 0;
                  continue;
                }
                if (_0x32a62c[0] === 3 && (!_0x520b10 || _0x32a62c[1] > _0x520b10[0] && _0x32a62c[1] < _0x520b10[3])) {
                  _0xdb1460.label = _0x32a62c[1];
                  break;
                }
                if (_0x32a62c[0] === 6 && _0xdb1460.label < _0x520b10[1]) {
                  _0xdb1460.label = _0x520b10[1];
                  _0x520b10 = _0x32a62c;
                  break;
                }
                if (_0x520b10 && _0xdb1460.label < _0x520b10[2]) {
                  _0xdb1460.label = _0x520b10[2];
                  _0xdb1460.ops.push(_0x32a62c);
                  break;
                }
                if (_0x520b10[2]) {
                  _0xdb1460.ops.pop();
                }
                _0xdb1460.trys.pop();
                continue;
            }
            _0x32a62c = _0xa8a54a.call(_0x29a131, _0xdb1460);
          } catch (_0x4cc343) {
            _0x32a62c = [6, _0x4cc343];
            _0xa7660d = 0;
          } finally {
            _0x4b2ab4 = _0x520b10 = 0;
          }
        }
        if (_0x32a62c[0] & 5) {
          throw _0x32a62c[1];
        }
        var _0x18dafb = {
          value: _0x32a62c[0] ? _0x32a62c[1] : undefined,
          done: true
        };
        return _0x18dafb;
      }
    }
    var _0x1ce4d8 = function () {
      var _0x4bb40d = _0x15785d(function (_0x415412) {
        var _0x3850d6;
        var _0xda6189;
        var _0x336ab5;
        var _0xfce8c6;
        var _0x728550;
        var _0x119255;
        var _0x1aa6c5;
        var _0x5ee1ce;
        return _0x4caaa4(this, function (_0x4bb8c4) {
          _0x3850d6 = _0x4c6bb4.get(_0x415412);
          if (!_0x3850d6) {
            return [2];
          }
          _0xda6189 = -1;
          for (var _0x223043 in _0x3850d6) {
            _0xfce8c6 = _0x3850d6[_0x223043];
            _0x728550 = _0x2b98da.get(_0xfce8c6);
            if (_0x728550) {
              if (_0x728550.groupIndex > _0xda6189) {
                _0xda6189 = _0x728550.groupIndex;
              }
            }
          }
          for (var _0x10be18 in _0x3850d6) {
            _0x1aa6c5 = _0x3850d6[_0x10be18];
            _0x5ee1ce = _0x2b98da.get(_0x1aa6c5);
            if (_0x5ee1ce) {
              _0xda6189++;
              _0x5ee1ce.groupIndex = _0xda6189;
              var _0x25648f = {
                databaseid: _0x1aa6c5,
                groupIndex: _0xda6189,
                databaseLead: _0x5ee1ce.lead
              };
              _0x1d6e5c.push(_0x25648f);
              _0x2b98da.set(_0x1aa6c5, _0x5ee1ce);
            }
          }
          return [2];
        });
      });
      return function _0x599354(_0x1e086d) {
        return _0x4bb40d.apply(this, arguments);
      };
    }();
    var _0x30e93e = function () {
      var _0x2b95f7 = _0x15785d(function (_0x289d97) {
        var _0x32a805;
        var _0x57a4ae;
        var _0x24f779;
        var _0x51501b;
        var _0x46082c;
        return _0x4caaa4(this, function (_0x15b950) {
          _0x32a805 = _0x4c6bb4.get(_0x289d97);
          if (!_0x32a805) {
            return [2];
          }
          _0x57a4ae = -1;
          for (var _0x11a7bd in _0x32a805) {
            _0x51501b = _0x32a805[_0x11a7bd];
            _0x46082c = _0x2b98da.get(_0x51501b);
            if (_0x46082c) {
              if (_0x46082c.groupIndex > _0x57a4ae) {
                _0x57a4ae = _0x46082c.groupIndex;
              }
            }
          }
          _0x57a4ae++;
          return [2, _0x57a4ae];
        });
      });
      return function _0x34d444(_0x4f14a9) {
        return _0x2b95f7.apply(this, arguments);
      };
    }();
    var _0x55c5d5 = function () {
      var _0x21079a = _0x15785d(function (_0x5a98e2, _0x312245, _0x223d86) {
        var _0x407628;
        var _0x5bca65;
        var _0x168c9c;
        var _0x3c7aa4;
        var _0x9d9017;
        var _0x5e2f4e;
        var _0x3cce2a;
        var _0x39d753;
        return _0x4caaa4(this, function (_0x35af67) {
          _0x407628 = _0x4c6bb4.get(_0x5a98e2);
          if (!_0x407628) {
            return [2];
          }
          _0x5bca65 = _0x2b98da.get(_0x312245);
          if (!_0x5bca65) {
            return [2];
          }
          _0x168c9c = [];
          for (var _0xf456ca in _0x407628) {
            _0x9d9017 = _0x407628[_0xf456ca];
            _0x5e2f4e = _0x2b98da.get(_0x9d9017);
            if (_0x5e2f4e) {
              if (_0x5e2f4e.groupIndex > _0x223d86) {
                _0x168c9c.push(_0x5e2f4e);
              }
            }
          }
          for (var _0x2cbd4c in _0x168c9c) {
            _0x39d753 = _0x168c9c[_0x2cbd4c];
            _0x39d753.groupIndex++;
            _0x2b98da.set(_0x39d753.databaseID, _0x39d753);
          }
          return [2];
        });
      });
      return function _0x50063f(_0x1048c8, _0x193740, _0x17ba4c) {
        return _0x21079a.apply(this, arguments);
      };
    }();
    ;
    function _0x1b5e26(_0xa17103, _0x3cb604, _0x629581, _0x2efdfe, _0x1dc9cf, _0x5aae8d, _0x4e3b75) {
      try {
        var _0x200287 = _0xa17103[_0x5aae8d](_0x4e3b75);
        var _0x1b5ee8 = _0x200287.value;
      } catch (_0x862756) {
        _0x629581(_0x862756);
        return;
      }
      if (_0x200287.done) {
        _0x3cb604(_0x1b5ee8);
      } else {
        Promise.resolve(_0x1b5ee8).then(_0x2efdfe, _0x1dc9cf);
      }
    }
    function _0x1cc7c3(_0x2d9e77) {
      return function () {
        var _0x1faf8e = this;
        var _0x1ef02c = arguments;
        return new Promise(function (_0x1e019d, _0x27c9d3) {
          var _0x219b1c = _0x2d9e77.apply(_0x1faf8e, _0x1ef02c);
          function _0x314a3e(_0x11cb84) {
            _0x1b5e26(_0x219b1c, _0x1e019d, _0x27c9d3, _0x314a3e, _0x401e08, "next", _0x11cb84);
          }
          function _0x401e08(_0x2710a6) {
            _0x1b5e26(_0x219b1c, _0x1e019d, _0x27c9d3, _0x314a3e, _0x401e08, "throw", _0x2710a6);
          }
          _0x314a3e(undefined);
        });
      };
    }
    function _0xaf5307(_0x47ed8a, _0x1aa866) {
      var _0x3e37ce;
      var _0xe311b8;
      var _0x3bcb22;
      var _0x494b6b;
      var _0x18bf25 = {
        label: 0,
        sent: function () {
          if (_0x3bcb22[0] & 1) {
            throw _0x3bcb22[1];
          }
          return _0x3bcb22[1];
        },
        trys: [],
        ops: []
      };
      _0x494b6b = {
        next: _0x12fba3(0),
        throw: _0x12fba3(1),
        return: _0x12fba3(2)
      };
      if (typeof Symbol === "function") {
        _0x494b6b[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x494b6b;
      function _0x12fba3(_0x3b94cc) {
        return function (_0x1a4abd) {
          return _0x8ae47a([_0x3b94cc, _0x1a4abd]);
        };
      }
      function _0x8ae47a(_0x3b7a50) {
        if (_0x3e37ce) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x18bf25) {
          try {
            _0x3e37ce = 1;
            if (_0xe311b8 && (_0x3bcb22 = _0x3b7a50[0] & 2 ? _0xe311b8.return : _0x3b7a50[0] ? _0xe311b8.throw || ((_0x3bcb22 = _0xe311b8.return) && _0x3bcb22.call(_0xe311b8), 0) : _0xe311b8.next) && !(_0x3bcb22 = _0x3bcb22.call(_0xe311b8, _0x3b7a50[1])).done) {
              return _0x3bcb22;
            }
            _0xe311b8 = 0;
            if (_0x3bcb22) {
              _0x3b7a50 = [_0x3b7a50[0] & 2, _0x3bcb22.value];
            }
            switch (_0x3b7a50[0]) {
              case 0:
              case 1:
                _0x3bcb22 = _0x3b7a50;
                break;
              case 4:
                _0x18bf25.label++;
                var _0x32eb89 = {
                  value: _0x3b7a50[1],
                  done: false
                };
                return _0x32eb89;
              case 5:
                _0x18bf25.label++;
                _0xe311b8 = _0x3b7a50[1];
                _0x3b7a50 = [0];
                continue;
              case 7:
                _0x3b7a50 = _0x18bf25.ops.pop();
                _0x18bf25.trys.pop();
                continue;
              default:
                if (!(_0x3bcb22 = _0x18bf25.trys, _0x3bcb22 = _0x3bcb22.length > 0 && _0x3bcb22[_0x3bcb22.length - 1]) && (_0x3b7a50[0] === 6 || _0x3b7a50[0] === 2)) {
                  _0x18bf25 = 0;
                  continue;
                }
                if (_0x3b7a50[0] === 3 && (!_0x3bcb22 || _0x3b7a50[1] > _0x3bcb22[0] && _0x3b7a50[1] < _0x3bcb22[3])) {
                  _0x18bf25.label = _0x3b7a50[1];
                  break;
                }
                if (_0x3b7a50[0] === 6 && _0x18bf25.label < _0x3bcb22[1]) {
                  _0x18bf25.label = _0x3bcb22[1];
                  _0x3bcb22 = _0x3b7a50;
                  break;
                }
                if (_0x3bcb22 && _0x18bf25.label < _0x3bcb22[2]) {
                  _0x18bf25.label = _0x3bcb22[2];
                  _0x18bf25.ops.push(_0x3b7a50);
                  break;
                }
                if (_0x3bcb22[2]) {
                  _0x18bf25.ops.pop();
                }
                _0x18bf25.trys.pop();
                continue;
            }
            _0x3b7a50 = _0x1aa866.call(_0x47ed8a, _0x18bf25);
          } catch (_0x2c43be) {
            _0x3b7a50 = [6, _0x2c43be];
            _0xe311b8 = 0;
          } finally {
            _0x3e37ce = _0x3bcb22 = 0;
          }
        }
        if (_0x3b7a50[0] & 5) {
          throw _0x3b7a50[1];
        }
        var _0x4b0314 = {
          value: _0x3b7a50[0] ? _0x3b7a50[1] : undefined,
          done: true
        };
        return _0x4b0314;
      }
    }
    var _0x3f870e = _0x1532be.cacheableMap(function () {
      var _0x4b1dab = _0x1cc7c3(function (_0x439f48, _0x4e275c) {
        var _0x65a052;
        var _0x23f29d;
        var _0x271280;
        var _0x181727;
        return _0xaf5307(this, function (_0x2029ca) {
          _0x65a052 = GetModelDimensions(_0x4e275c);
          _0x23f29d = _0x45b4c7.fromArray(_0x65a052[0]);
          _0x271280 = _0x45b4c7.fromArray(_0x65a052[1]);
          _0x181727 = _0x72cc33(_0x23f29d, _0x271280);
          return [2, [true, _0x181727]];
        });
      });
      return function (_0x15f647, _0x2c86e7) {
        return _0x4b1dab.apply(this, arguments);
      };
    }(), {
      timeToLive: 600000
    });
    function _0x72cc33(_0x5f589f, _0x11d044, _0x57bcb0, _0x2d5e4f) {
      var _0x253282 = {
        defaultVerts: {
          1: new _0x45b4c7(_0x5f589f.x, _0x5f589f.y, _0x5f589f.z),
          2: new _0x45b4c7(_0x11d044.x, _0x5f589f.y, _0x5f589f.z),
          3: new _0x45b4c7(_0x11d044.x, _0x11d044.y, _0x5f589f.z),
          4: new _0x45b4c7(_0x5f589f.x, _0x11d044.y, _0x5f589f.z),
          5: new _0x45b4c7(_0x5f589f.x, _0x11d044.y, _0x11d044.z),
          6: new _0x45b4c7(_0x11d044.x, _0x11d044.y, _0x11d044.z),
          7: new _0x45b4c7(_0x11d044.x, _0x5f589f.y, _0x11d044.z),
          8: new _0x45b4c7(_0x5f589f.x, _0x5f589f.y, _0x11d044.z)
        },
        correctedVerts: {
          1: new _0x45b4c7(_0x5f589f.x, _0x5f589f.y, _0x5f589f.z),
          2: new _0x45b4c7(_0x11d044.x, _0x5f589f.y, _0x5f589f.z),
          3: new _0x45b4c7(_0x11d044.x, _0x11d044.y, _0x5f589f.z),
          4: new _0x45b4c7(_0x5f589f.x, _0x11d044.y, _0x5f589f.z),
          5: new _0x45b4c7(_0x5f589f.x, _0x11d044.y, _0x11d044.z),
          6: new _0x45b4c7(_0x11d044.x, _0x11d044.y, _0x11d044.z),
          7: new _0x45b4c7(_0x11d044.x, _0x5f589f.y, _0x11d044.z),
          8: new _0x45b4c7(_0x5f589f.x, _0x5f589f.y, _0x11d044.z)
        },
        back: new _0x45b4c7(0, _0x5f589f.y, 0),
        front: new _0x45b4c7(0, _0x11d044.y, 0),
        right: new _0x45b4c7(_0x11d044.x, 0, 0),
        left: new _0x45b4c7(_0x5f589f.x, 0, 0),
        center: _0x57bcb0,
        sphereCenter: _0x2d5e4f
      };
      return _0x253282;
    }
    var _0x9f1d82 = function () {
      var _0x25c674 = _0x1cc7c3(function (_0x56cc98, _0x121b30) {
        var _0x4fefda;
        var _0x4aa77c;
        var _0xf87929;
        return _0xaf5307(this, function (_0x6b8f41) {
          switch (_0x6b8f41.label) {
            case 0:
              if (!_0x56cc98.center) {
                return [2];
              }
              _0x4fefda = 1;
              _0x6b8f41.label = 1;
            case 1:
              if (_0x4fefda >= 9) {
                return [3, 4];
              }
              _0x4aa77c = _0x56cc98.defaultVerts[_0x4fefda];
              _0xf87929 = _0x56cc98.correctedVerts;
              return [4, _0x13cda5(_0x4aa77c, _0x56cc98.center, _0x121b30)];
            case 2:
              _0xf87929[_0x4fefda] = _0x6b8f41.sent();
              _0x6b8f41.label = 3;
            case 3:
              _0x4fefda++;
              return [3, 1];
            case 4:
              return [2, _0x56cc98];
          }
        });
      });
      return function _0xb46a0c(_0x26301c, _0x2d3697) {
        return _0x25c674.apply(this, arguments);
      };
    }();
    var _0x6eccee = function () {
      var _0x4f227e = _0x1cc7c3(function (_0xacfb47, _0xb6180b) {
        var _0x2ed151;
        var _0x2e915d;
        var _0x4eebcc;
        return _0xaf5307(this, function (_0xc6398b) {
          for (_0x2ed151 = 1; _0x2ed151 < 9; _0x2ed151++) {
            _0x2e915d = _0xacfb47.correctedVerts[_0x2ed151];
            if (_0x2e915d) {
              _0x4eebcc = new _0x45b4c7(_0x2e915d.x, _0x2e915d.y, _0x2e915d.z).add(_0xb6180b);
              DrawMarker(28, _0x4eebcc.x, _0x4eebcc.y, _0x4eebcc.z, 0, 0, 0, 0, 0, 0, 0.1, 0.1, 0.1, 0, 255, 150, 100, false, false, 2, false, null, null, false);
            }
          }
          return [2];
        });
      });
      return function _0x5b65c8(_0x288bbd, _0x5640a2) {
        return _0x4f227e.apply(this, arguments);
      };
    }();
    function _0x4d0837(_0x5a52fa, _0x49f6cc) {
      var _0x24b0a4 = [0, 0, 0, 255];
      var _0x36f5e1 = [100, 200, 0, 30];
      var _0x44b1dc = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[1]);
      var _0x15edb2 = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[6]);
      for (var _0x43ae90 = 1; _0x43ae90 < 9; _0x43ae90++) {
        var _0xc5a838 = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[_0x43ae90]);
        var _0x59a1f8 = undefined;
        if (_0x43ae90 == 8) {
          _0x59a1f8 = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[5]);
        } else {
          _0x59a1f8 = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[_0x43ae90 + 1]);
        }
        if (_0x43ae90 == 4) {
          var _0x3b2f8e = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[1]);
          var _0x574d22 = new Vector3(_0x49f6cc.x, _0x49f6cc.y, _0x49f6cc.z).add(_0x5a52fa.correctedVerts[4]);
          DrawLine(_0x3b2f8e.x, _0x3b2f8e.y, _0x3b2f8e.z, _0x574d22.x, _0x574d22.y, _0x574d22.z, _0x24b0a4[0], _0x24b0a4[1], _0x24b0a4[2], _0x24b0a4[3]);
          _0x24792f(_0x3b2f8e, _0x574d22, _0x44b1dc.z, _0x15edb2.z, _0x36f5e1);
        }
        if (_0x43ae90 <= 4) {
          DrawLine(_0xc5a838.x, _0xc5a838.y, _0x44b1dc.z, _0xc5a838.x, _0xc5a838.y, _0x15edb2.z, _0x24b0a4[0], _0x24b0a4[1], _0x24b0a4[2], _0x24b0a4[3]);
          if (_0x43ae90 <= 3) {
            _0x24792f(_0xc5a838, _0x59a1f8, _0x44b1dc.z, _0x15edb2.z, _0x36f5e1);
          }
        }
        DrawLine(_0xc5a838.x, _0xc5a838.y, _0xc5a838.z, _0x59a1f8.x, _0x59a1f8.y, _0x59a1f8.z, _0x24b0a4[0], _0x24b0a4[1], _0x24b0a4[2], _0x24b0a4[3]);
      }
    }
    function _0x24792f(_0x56b001, _0x573a57, _0x332cfd, _0x4c9941, _0x55dbac) {
      var _0x36fab6 = new _0x45b4c7(_0x56b001.x, _0x56b001.y, _0x332cfd);
      var _0xa7861f = new _0x45b4c7(_0x56b001.x, _0x56b001.y, _0x4c9941);
      var _0x53c70 = new _0x45b4c7(_0x573a57.x, _0x573a57.y, _0x332cfd);
      var _0x275022 = new _0x45b4c7(_0x573a57.x, _0x573a57.y, _0x4c9941);
      DrawPoly(_0x36fab6.x, _0x36fab6.y, _0x36fab6.z, _0xa7861f.x, _0xa7861f.y, _0xa7861f.z, _0x53c70.x, _0x53c70.y, _0x53c70.z, _0x55dbac[0], _0x55dbac[1], _0x55dbac[2], _0x55dbac[3]);
      DrawPoly(_0xa7861f.x, _0xa7861f.y, _0xa7861f.z, _0x275022.x, _0x275022.y, _0x275022.z, _0x53c70.x, _0x53c70.y, _0x53c70.z, _0x55dbac[0], _0x55dbac[1], _0x55dbac[2], _0x55dbac[3]);
      DrawPoly(_0x53c70.x, _0x53c70.y, _0x53c70.z, _0x275022.x, _0x275022.y, _0x275022.z, _0xa7861f.x, _0xa7861f.y, _0xa7861f.z, _0x55dbac[0], _0x55dbac[1], _0x55dbac[2], _0x55dbac[3]);
      DrawPoly(_0x53c70.x, _0x53c70.y, _0x53c70.z, _0xa7861f.x, _0xa7861f.y, _0xa7861f.z, _0x36fab6.x, _0x36fab6.y, _0x36fab6.z, _0x55dbac[0], _0x55dbac[1], _0x55dbac[2], _0x55dbac[3]);
    }
    function _0x3194ce() {
      return _0x5e2776.apply(this, arguments);
    }
    function _0x5e2776() {
      _0x5e2776 = _0x1cc7c3(function () {
        return _0xaf5307(this, function (_0x4b4333) {
          return [2];
        });
      });
      return _0x5e2776.apply(this, arguments);
    }
    ;
    function _0xc27b55(_0x5c325b, _0x247ccb) {
      if (_0x247ccb == null || _0x247ccb > _0x5c325b.length) {
        _0x247ccb = _0x5c325b.length;
      }
      for (var _0xbc7571 = 0, _0x12bab0 = new Array(_0x247ccb); _0xbc7571 < _0x247ccb; _0xbc7571++) {
        _0x12bab0[_0xbc7571] = _0x5c325b[_0xbc7571];
      }
      return _0x12bab0;
    }
    function _0x158d61(_0x2efbf6) {
      if (Array.isArray(_0x2efbf6)) {
        return _0x2efbf6;
      }
    }
    function _0x3c4023(_0x299a68, _0xc8274b, _0x548b14, _0x1b87db, _0x29a97e, _0x165434, _0xa73233) {
      try {
        var _0x5b5d5c = _0x299a68[_0x165434](_0xa73233);
        var _0x47131f = _0x5b5d5c.value;
      } catch (_0xf31e54) {
        _0x548b14(_0xf31e54);
        return;
      }
      if (_0x5b5d5c.done) {
        _0xc8274b(_0x47131f);
      } else {
        Promise.resolve(_0x47131f).then(_0x1b87db, _0x29a97e);
      }
    }
    function _0x552320(_0x35271d) {
      return function () {
        var _0x17db03 = this;
        var _0x24f2a4 = arguments;
        return new Promise(function (_0x1acb61, _0x162ed3) {
          var _0x549f6b = _0x35271d.apply(_0x17db03, _0x24f2a4);
          function _0x259865(_0x50a9e8) {
            _0x3c4023(_0x549f6b, _0x1acb61, _0x162ed3, _0x259865, _0x575d2e, "next", _0x50a9e8);
          }
          function _0x575d2e(_0x103e9b) {
            _0x3c4023(_0x549f6b, _0x1acb61, _0x162ed3, _0x259865, _0x575d2e, "throw", _0x103e9b);
          }
          _0x259865(undefined);
        });
      };
    }
    function _0x631a3a(_0x1684a5, _0x78d04c) {
      var _0x5aa345 = _0x1684a5 == null ? null : typeof Symbol !== "undefined" && _0x1684a5[Symbol.iterator] || _0x1684a5["@@iterator"];
      if (_0x5aa345 == null) {
        return;
      }
      var _0xa0df6c = [];
      var _0xe09255 = true;
      var _0x28a7be = false;
      var _0x4a2021;
      var _0x1596a2;
      try {
        for (_0x5aa345 = _0x5aa345.call(_0x1684a5); !(_0xe09255 = (_0x4a2021 = _0x5aa345.next()).done); _0xe09255 = true) {
          _0xa0df6c.push(_0x4a2021.value);
          if (_0x78d04c && _0xa0df6c.length === _0x78d04c) {
            break;
          }
        }
      } catch (_0x3ea8cb) {
        _0x28a7be = true;
        _0x1596a2 = _0x3ea8cb;
      } finally {
        try {
          if (!_0xe09255 && _0x5aa345.return != null) {
            _0x5aa345.return();
          }
        } finally {
          if (_0x28a7be) {
            throw _0x1596a2;
          }
        }
      }
      return _0xa0df6c;
    }
    function _0x1ee3a4() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x102d0a(_0xf734bf, _0xa0cdd6) {
      return _0x158d61(_0xf734bf) || _0x631a3a(_0xf734bf, _0xa0cdd6) || _0x5e0d07(_0xf734bf, _0xa0cdd6) || _0x1ee3a4();
    }
    function _0x5e0d07(_0x463d43, _0x4aeb62) {
      if (!_0x463d43) {
        return;
      }
      if (typeof _0x463d43 === "string") {
        return _0xc27b55(_0x463d43, _0x4aeb62);
      }
      var _0x1ee3e6 = Object.prototype.toString.call(_0x463d43).slice(8, -1);
      if (_0x1ee3e6 === "Object" && _0x463d43.constructor) {
        _0x1ee3e6 = _0x463d43.constructor.name;
      }
      if (_0x1ee3e6 === "Map" || _0x1ee3e6 === "Set") {
        return Array.from(_0x1ee3e6);
      }
      if (_0x1ee3e6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x1ee3e6)) {
        return _0xc27b55(_0x463d43, _0x4aeb62);
      }
    }
    function _0x58bbc9(_0xd30cfb, _0x4768fc) {
      var _0x426cfe;
      var _0x47a1ee;
      var _0x158202;
      var _0x4055a8;
      var _0x24edf3 = {
        label: 0,
        sent: function () {
          if (_0x158202[0] & 1) {
            throw _0x158202[1];
          }
          return _0x158202[1];
        },
        trys: [],
        ops: []
      };
      _0x4055a8 = {
        next: _0x3b8291(0),
        throw: _0x3b8291(1),
        return: _0x3b8291(2)
      };
      if (typeof Symbol === "function") {
        _0x4055a8[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4055a8;
      function _0x3b8291(_0x28ae66) {
        return function (_0x1941e5) {
          return _0x5c7d3a([_0x28ae66, _0x1941e5]);
        };
      }
      function _0x5c7d3a(_0xc5a0c9) {
        if (_0x426cfe) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x24edf3) {
          try {
            _0x426cfe = 1;
            if (_0x47a1ee && (_0x158202 = _0xc5a0c9[0] & 2 ? _0x47a1ee.return : _0xc5a0c9[0] ? _0x47a1ee.throw || ((_0x158202 = _0x47a1ee.return) && _0x158202.call(_0x47a1ee), 0) : _0x47a1ee.next) && !(_0x158202 = _0x158202.call(_0x47a1ee, _0xc5a0c9[1])).done) {
              return _0x158202;
            }
            _0x47a1ee = 0;
            if (_0x158202) {
              _0xc5a0c9 = [_0xc5a0c9[0] & 2, _0x158202.value];
            }
            switch (_0xc5a0c9[0]) {
              case 0:
              case 1:
                _0x158202 = _0xc5a0c9;
                break;
              case 4:
                _0x24edf3.label++;
                var _0x129885 = {
                  value: _0xc5a0c9[1],
                  done: false
                };
                return _0x129885;
              case 5:
                _0x24edf3.label++;
                _0x47a1ee = _0xc5a0c9[1];
                _0xc5a0c9 = [0];
                continue;
              case 7:
                _0xc5a0c9 = _0x24edf3.ops.pop();
                _0x24edf3.trys.pop();
                continue;
              default:
                if (!(_0x158202 = _0x24edf3.trys, _0x158202 = _0x158202.length > 0 && _0x158202[_0x158202.length - 1]) && (_0xc5a0c9[0] === 6 || _0xc5a0c9[0] === 2)) {
                  _0x24edf3 = 0;
                  continue;
                }
                if (_0xc5a0c9[0] === 3 && (!_0x158202 || _0xc5a0c9[1] > _0x158202[0] && _0xc5a0c9[1] < _0x158202[3])) {
                  _0x24edf3.label = _0xc5a0c9[1];
                  break;
                }
                if (_0xc5a0c9[0] === 6 && _0x24edf3.label < _0x158202[1]) {
                  _0x24edf3.label = _0x158202[1];
                  _0x158202 = _0xc5a0c9;
                  break;
                }
                if (_0x158202 && _0x24edf3.label < _0x158202[2]) {
                  _0x24edf3.label = _0x158202[2];
                  _0x24edf3.ops.push(_0xc5a0c9);
                  break;
                }
                if (_0x158202[2]) {
                  _0x24edf3.ops.pop();
                }
                _0x24edf3.trys.pop();
                continue;
            }
            _0xc5a0c9 = _0x4768fc.call(_0xd30cfb, _0x24edf3);
          } catch (_0x165eb0) {
            _0xc5a0c9 = [6, _0x165eb0];
            _0x47a1ee = 0;
          } finally {
            _0x426cfe = _0x158202 = 0;
          }
        }
        if (_0xc5a0c9[0] & 5) {
          throw _0xc5a0c9[1];
        }
        var _0x59a1af = {
          value: _0xc5a0c9[0] ? _0xc5a0c9[1] : undefined,
          done: true
        };
        return _0x59a1af;
      }
    }
    var _0x536d36 = 0;
    var _0x22e0c1 = false;
    var _0x495cf5 = new Map();
    var _0x5210f7 = new Map();
    function _0x4d46cb() {
      setTick(_0x552320(function () {
        var _0x45b941;
        var _0x5e4435;
        return _0x58bbc9(this, function (_0x5f72ce) {
          switch (_0x5f72ce.label) {
            case 0:
              _0x45b941 = PlayerPedId();
              _0x5e4435 = GetInteriorFromEntity(_0x45b941);
              if (_0x5e4435 != 0) {
                _0x4c08c6.forEach(function (_0x2061cc) {
                  var _0x14e44a = _0x2061cc.interiorID;
                  if (_0x14e44a != null && _0x14e44a == _0x5e4435) {
                    GetActivePlayers().forEach(function () {
                      var _0x4734b3 = _0x552320(function (_0xdcac52) {
                        var _0x5a01e8;
                        var _0x2fcf92;
                        var _0xe84695;
                        var _0x2b8973;
                        var _0x2c3db1;
                        var _0x10cbf4;
                        var _0x55f471;
                        var _0x4cdda2;
                        var _0x1132b1;
                        var _0x1fecc0;
                        var _0x20ce6a;
                        return _0x58bbc9(this, function (_0x3de763) {
                          _0x5a01e8 = GetPlayerPed(_0xdcac52);
                          if (_0x5a01e8 != _0x45b941) {
                            _0x2fcf92 = true;
                            _0xe84695 = _0x102d0a(GetInteriorEntitiesExtents(_0x14e44a), 6);
                            _0x2b8973 = _0xe84695[0];
                            _0x2c3db1 = _0xe84695[1];
                            _0x10cbf4 = _0xe84695[2];
                            _0x55f471 = _0xe84695[3];
                            _0x4cdda2 = _0xe84695[4];
                            _0x1132b1 = _0xe84695[5];
                            _0x1fecc0 = _0x45b4c7.fromArray(GetEntityCoords(_0x5a01e8, false));
                            if (_0x1fecc0.x < _0x2b8973 || _0x1fecc0.x > _0x55f471 || _0x1fecc0.y < _0x2c3db1 || _0x1fecc0.y > _0x4cdda2) {
                              _0x2fcf92 = false;
                            }
                            if (_0x10cbf4 && _0x1fecc0.z < _0x10cbf4 || _0x1132b1 && _0x1fecc0.z > _0x1132b1) {
                              _0x2fcf92 = false;
                            }
                            if (_0x2fcf92) {
                              _0x20ce6a = GetRoomKeyFromEntity(_0x45b941);
                              if (_0x20ce6a != 0) {
                                ForceRoomForEntity(_0x5a01e8, _0x5e4435, _0x20ce6a);
                              }
                            }
                          }
                          return [2];
                        });
                      });
                      return function (_0x11ed71) {
                        return _0x4734b3.apply(this, arguments);
                      };
                    }());
                  }
                });
              }
              return [4, _0x4e43fe(1000)];
            case 1:
              _0x5f72ce.sent();
              return [2];
          }
        });
      }));
    }
    function _0x4dd971(_0x4bafa2, _0xbcab3f) {
      if (_0x4bafa2 == null || _0xbcab3f == null) {
        return;
      }
      if (_0x536d36 == 0) {
        _0x536d36 = setTick(function () {
          _0x165fca();
        });
      }
      var _0x50c847 = [];
      _0x4bafa2.points.forEach(function (_0xca8f1b) {
        var _0x5dbaab = {
          x: _0xca8f1b.x,
          y: _0xca8f1b.y
        };
        _0x50c847.push(_0x5dbaab);
      });
      var _0x1a882c = _0x495cf5.get(_0xbcab3f);
      if (_0x1a882c) {
        _0x1a882c.set(_0x4bafa2.objectID, _0x4bafa2);
      } else {
        var _0x5a0daf = new Map();
        _0x5a0daf.set(_0x4bafa2.objectID, _0x4bafa2);
        _0x495cf5.set(_0xbcab3f, _0x5a0daf);
      }
      var _0x65bdaf = {
        minZ: _0x4bafa2.minZ,
        maxZ: _0x4bafa2.maxZ,
        data: {}
      };
      _0x65bdaf.data.interior = _0xbcab3f;
      _0x65bdaf.data.id = _0x4bafa2.objectID;
      exports["np-polyzone"].AddPolyZone("np-editor:room", _0x50c847, _0x65bdaf);
    }
    function _0x13c117(_0x5c287b, _0x21fbd2) {
      if (_0x495cf5.has(_0x21fbd2)) {
        var _0x4481b3 = _0x495cf5.get(_0x21fbd2);
        if (_0x4481b3) {
          if (_0x4481b3.has(_0x5c287b.objectID)) {
            _0x4481b3.delete(_0x5c287b.objectID);
          }
          if (_0x4481b3.size <= 0) {
            _0x495cf5.delete(_0x21fbd2);
          }
        }
      }
    }
    var _0x165fca = function () {
      var _0x1acfc3 = _0x552320(function () {
        return _0x58bbc9(this, function (_0x4f410b) {
          if (!_0x503f2d) {
            return [2];
          }
          _0x495cf5.forEach(function (_0x4289c8) {
            _0x4289c8.forEach(function (_0x112be8) {
              var _0x20da78 = [200, 23, 0, 10];
              var _0x38b674 = _0x112be8.points;
              if (_0x112be8) {
                if (_0x5210f7.has(_0x112be8.objectID)) {
                  _0x20da78 = [0, 200, 0, 50];
                }
              }
              if (_0x38b674.length != 0) {
                var _0x88a7d2 = _0x38b674[0];
                var _0x28fbcc = _0x38b674[_0x38b674.length - 1];
                for (var _0x25c614 = 1; _0x25c614 < _0x38b674.length; _0x25c614++) {
                  var _0x355042 = _0x38b674[_0x25c614];
                  var _0x2ac5db = _0x38b674[_0x25c614 - 1];
                  if (_0x355042 != null && _0x2ac5db != null) {
                    _0x24792f(_0x2ac5db, _0x355042, _0x112be8.minZ, _0x112be8.maxZ, _0x20da78);
                  }
                }
                _0x24792f(_0x28fbcc, _0x88a7d2, _0x112be8.minZ, _0x112be8.maxZ, _0x20da78);
              }
            });
          });
          return [2];
        });
      });
      return function _0x253c37() {
        return _0x1acfc3.apply(this, arguments);
      };
    }();
    on("np-polyzone:enter", function () {
      var _0x144a04 = _0x552320(function (_0x4cf77e, _0x228dfc) {
        var _0x4ef759;
        var _0x32e8b5;
        var _0x392a96;
        var _0x5284d1;
        var _0xc4de39;
        var _0x25c051;
        var _0x35484a;
        var _0x424a9f;
        var _0x27d26c;
        var _0x49aa75;
        var _0x546c80;
        var _0x8c6d19;
        var _0x2e9714;
        var _0x51a39a;
        var _0x31e272;
        return _0x58bbc9(this, function (_0x5666d8) {
          if (_0x4cf77e == "np-editor:room") {
            _0x22e0c1 = true;
            _0x4ef759 = _0x228dfc.interior;
            _0x32e8b5 = _0x228dfc.id;
            _0x392a96 = _0x495cf5.get(_0x4ef759);
            if (!_0x392a96) {
              return [2];
            }
            _0x5284d1 = _0x392a96.get(_0x32e8b5);
            _0xc4de39 = true;
            _0x25c051 = false;
            _0x35484a = undefined;
            try {
              for (_0x424a9f = _0x5210f7.entries()[Symbol.iterator](); !(_0xc4de39 = (_0x27d26c = _0x424a9f.next()).done); _0xc4de39 = true) {
                _0x49aa75 = _0x102d0a(_0x27d26c.value, 2);
                _0x546c80 = _0x49aa75[0];
                _0x8c6d19 = _0x49aa75[1];
                _0x2e9714 = false;
                if (_0x5284d1 && _0x5284d1.links) {
                  for (_0x51a39a = 0; _0x51a39a < _0x5284d1.links.length; _0x51a39a++) {
                    _0x31e272 = _0x5284d1.links[_0x51a39a];
                    if (_0x31e272 == _0x546c80) {
                      _0x2e9714 = true;
                    }
                  }
                  if (_0x546c80 == _0x5284d1.objectID) {
                    _0x2e9714 = true;
                  }
                }
                if (!_0x2e9714) {
                  _0x5210f7.delete(_0x546c80);
                  _0x4058ab(_0x546c80);
                }
              }
            } catch (_0x43d9d5) {
              _0x25c051 = true;
              _0x35484a = _0x43d9d5;
            } finally {
              try {
                if (!_0xc4de39 && _0x424a9f.return != null) {
                  _0x424a9f.return();
                }
              } finally {
                if (_0x25c051) {
                  throw _0x35484a;
                }
              }
            }
            if (_0x5284d1 && _0x5284d1.links) {
              _0x5284d1.links.forEach(function (_0x145d35) {
                _0x3bd5ca(_0x145d35);
                _0x5210f7.set(_0x145d35, true);
              });
            }
            _0x5210f7.set(_0x32e8b5, true);
            _0x3bd5ca(_0x32e8b5);
          }
          return [2];
        });
      });
      return function (_0x31eb51, _0xc0238e) {
        return _0x144a04.apply(this, arguments);
      };
    }());
    on("np-polyzone:exit", function () {
      var _0x5007a1 = _0x552320(function (_0x54a1b9, _0x3801e9) {
        return _0x58bbc9(this, function (_0xe5b1fd) {
          if (_0x54a1b9 == "np-editor:room") {
            _0x22e0c1 = false;
            setTimeout(function () {
              var _0x1a0e5d = null;
              if (_0x22e0c1 == false) {
                var _0x1e02f5 = true;
                var _0x2f789e = false;
                var _0xf6ec32 = undefined;
                try {
                  for (var _0x46d259 = _0x5210f7.entries()[Symbol.iterator](), _0x44660e; !(_0x1e02f5 = (_0x44660e = _0x46d259.next()).done); _0x1e02f5 = true) {
                    var _0x182105 = _0x102d0a(_0x44660e.value, 2);
                    var _0x4fa9e5 = _0x182105[0];
                    var _0x343b9c = _0x182105[1];
                    if (_0x2b98da.has(_0x4fa9e5)) {
                      var _0x348874 = _0x2b98da.get(_0x4fa9e5);
                      if (_0x1a0e5d == null) {
                        if (_0x348874 && _0x348874.lead) {
                          _0x1a0e5d = _0x348874.lead;
                        }
                      }
                      if (_0x348874 && _0x348874.connection && _0x348874.connection.room) {
                        var _0x4a59c1 = _0x348874.connection.room.getLinks();
                        if (_0x4a59c1 && _0x4a59c1.includes("worldLinkIDNopixel")) {
                          continue;
                        }
                      }
                    }
                    _0x5210f7.delete(_0x4fa9e5);
                    _0x4058ab(_0x4fa9e5);
                  }
                } catch (_0x2cb379) {
                  _0x2f789e = true;
                  _0xf6ec32 = _0x2cb379;
                } finally {
                  try {
                    if (!_0x1e02f5 && _0x46d259.return != null) {
                      _0x46d259.return();
                    }
                  } finally {
                    if (_0x2f789e) {
                      throw _0xf6ec32;
                    }
                  }
                }
                if (_0x1a0e5d) {
                  var _0x1cafbd = _0x2b98da.get(_0x1a0e5d);
                  if (_0x1cafbd) {
                    _0x1cafbd.roomsLinkedToWorld.forEach(function (_0x273d72) {
                      if (!_0x5210f7.has(_0x273d72)) {
                        _0x3bd5ca(_0x273d72);
                        _0x5210f7.set(_0x273d72, true);
                      }
                    });
                  }
                }
              }
            }, 2000);
          }
          return [2];
        });
      });
      return function (_0x5edeb1, _0x32d533) {
        return _0x5007a1.apply(this, arguments);
      };
    }());
    var _0x5c4ac1 = function () {
      var _0x4d11a9 = _0x552320(function (_0x2e015e, _0x16aec9) {
        var _0x3b71a8;
        var _0x1a63d8;
        var _0x28a74c;
        var _0x397db1;
        return _0x58bbc9(this, function (_0x324113) {
          _0x3b71a8 = _0x2b98da.get(_0x2e015e);
          _0x1a63d8 = _0x2b98da.get(_0x16aec9);
          if (_0x3b71a8 && _0x1a63d8) {
            _0x28a74c = _0x3b71a8.getConnection("room");
            _0x397db1 = _0x1a63d8.getConnection("room");
            if (_0x28a74c && _0x397db1) {
              _0x28a74c.assignLinks([_0x1a63d8.databaseID]);
              _0x3b71a8.connectionsAltered = true;
              _0x397db1.assignLinks([_0x3b71a8.databaseID]);
              _0x1a63d8.connectionsAltered = true;
              _0x3f0777(_0x3b71a8.databaseID);
              _0x3f0777(_0x1a63d8.databaseID);
            }
          }
          return [2];
        });
      });
      return function _0x3caf0e(_0x49d03c, _0x38120c) {
        return _0x4d11a9.apply(this, arguments);
      };
    }();
    var _0x1e0ffa = function () {
      var _0x3b5f29 = _0x552320(function (_0x1fa6a6) {
        var _0x5f48df;
        var _0x3233bb;
        return _0x58bbc9(this, function (_0x1878dd) {
          _0x5f48df = _0x2b98da.get(_0x1fa6a6);
          if (_0x5f48df) {
            _0x3233bb = _0x5f48df.getConnection("room");
            if (_0x3233bb) {
              _0x3233bb.assignLinks(["worldLinkIDNopixel"]);
              _0x5f48df.connectionsAltered = true;
              _0x3f0777(_0x5f48df.databaseID);
            }
          }
          return [2];
        });
      });
      return function _0x4bc8ef(_0x32bb78) {
        return _0x3b5f29.apply(this, arguments);
      };
    }();
    var _0x21a604 = function () {
      var _0x5167fb = _0x552320(function (_0x42c4c4) {
        var _0x35dcb8;
        var _0x4d03e2;
        return _0x58bbc9(this, function (_0x25ae78) {
          _0x35dcb8 = _0x2b98da.get(_0x42c4c4);
          if (_0x35dcb8) {
            _0x4d03e2 = _0x35dcb8.getConnection("room");
            if (_0x4d03e2) {
              _0x4d03e2.removeLink("worldLinkIDNopixel");
              _0x35dcb8.connectionsAltered = true;
              _0x3f0777(_0x35dcb8.databaseID);
            }
          }
          return [2];
        });
      });
      return function _0x246c8d(_0x4d7121) {
        return _0x5167fb.apply(this, arguments);
      };
    }();
    var _0x35775d = function () {
      var _0x526663 = _0x552320(function (_0x22941e, _0x4012f6) {
        var _0x2c9765;
        var _0x3db52c;
        var _0x584d0c;
        var _0x25c5e1;
        return _0x58bbc9(this, function (_0x3fc653) {
          _0x2c9765 = _0x2b98da.get(_0x22941e);
          _0x3db52c = _0x2b98da.get(_0x4012f6);
          if (_0x2c9765 && _0x3db52c) {
            _0x584d0c = _0x2c9765.getConnection("room");
            _0x25c5e1 = _0x3db52c.getConnection("room");
            if (_0x584d0c && _0x25c5e1) {
              _0x584d0c.removeLink(_0x3db52c.databaseID);
              _0x2c9765.connectionsAltered = true;
              _0x25c5e1.removeLink(_0x2c9765.databaseID);
              _0x3db52c.connectionsAltered = true;
              _0x3f0777(_0x2c9765.databaseID);
              _0x3f0777(_0x3db52c.databaseID);
            }
          }
          return [2];
        });
      });
      return function _0x401697(_0x87ab28, _0x13a1d4) {
        return _0x526663.apply(this, arguments);
      };
    }();
    ;
    function _0x12932f(_0x585fa7, _0x268a80) {
      if (_0x268a80 == null || _0x268a80 > _0x585fa7.length) {
        _0x268a80 = _0x585fa7.length;
      }
      for (var _0x5aa1c8 = 0, _0x2f8738 = new Array(_0x268a80); _0x5aa1c8 < _0x268a80; _0x5aa1c8++) {
        _0x2f8738[_0x5aa1c8] = _0x585fa7[_0x5aa1c8];
      }
      return _0x2f8738;
    }
    function _0x564846(_0x43a678) {
      if (Array.isArray(_0x43a678)) {
        return _0x43a678;
      }
    }
    function _0x4baaaa(_0x5eeb20, _0xeff604, _0x1f0996, _0x44e024, _0x55cf1a, _0x4eaea6, _0x4c398f) {
      try {
        var _0x41f6c3 = _0x5eeb20[_0x4eaea6](_0x4c398f);
        var _0x11ad7f = _0x41f6c3.value;
      } catch (_0x2464af) {
        _0x1f0996(_0x2464af);
        return;
      }
      if (_0x41f6c3.done) {
        _0xeff604(_0x11ad7f);
      } else {
        Promise.resolve(_0x11ad7f).then(_0x44e024, _0x55cf1a);
      }
    }
    function _0x12f271(_0x3ebad8) {
      return function () {
        var _0x4aa33e = this;
        var _0x59765e = arguments;
        return new Promise(function (_0x4e6887, _0x80dc3b) {
          var _0x5dbef9 = _0x3ebad8.apply(_0x4aa33e, _0x59765e);
          function _0x382e64(_0x441a62) {
            _0x4baaaa(_0x5dbef9, _0x4e6887, _0x80dc3b, _0x382e64, _0x1cbf1e, "next", _0x441a62);
          }
          function _0x1cbf1e(_0x45fc2e) {
            _0x4baaaa(_0x5dbef9, _0x4e6887, _0x80dc3b, _0x382e64, _0x1cbf1e, "throw", _0x45fc2e);
          }
          _0x382e64(undefined);
        });
      };
    }
    function _0x11e36c(_0x596ac4, _0x3106ee) {
      var _0x1e4952 = _0x596ac4 == null ? null : typeof Symbol !== "undefined" && _0x596ac4[Symbol.iterator] || _0x596ac4["@@iterator"];
      if (_0x1e4952 == null) {
        return;
      }
      var _0x296523 = [];
      var _0x48fc73 = true;
      var _0x2a1a06 = false;
      var _0x1b2bd3;
      var _0x30e62d;
      try {
        for (_0x1e4952 = _0x1e4952.call(_0x596ac4); !(_0x48fc73 = (_0x1b2bd3 = _0x1e4952.next()).done); _0x48fc73 = true) {
          _0x296523.push(_0x1b2bd3.value);
          if (_0x3106ee && _0x296523.length === _0x3106ee) {
            break;
          }
        }
      } catch (_0x2a2e79) {
        _0x2a1a06 = true;
        _0x30e62d = _0x2a2e79;
      } finally {
        try {
          if (!_0x48fc73 && _0x1e4952.return != null) {
            _0x1e4952.return();
          }
        } finally {
          if (_0x2a1a06) {
            throw _0x30e62d;
          }
        }
      }
      return _0x296523;
    }
    function _0x55d729() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x3a165c(_0x145383, _0x5a429e) {
      return _0x564846(_0x145383) || _0x11e36c(_0x145383, _0x5a429e) || _0x424d7a(_0x145383, _0x5a429e) || _0x55d729();
    }
    function _0x424d7a(_0x550f2e, _0x3afad8) {
      if (!_0x550f2e) {
        return;
      }
      if (typeof _0x550f2e === "string") {
        return _0x12932f(_0x550f2e, _0x3afad8);
      }
      var _0x3e9c48 = Object.prototype.toString.call(_0x550f2e).slice(8, -1);
      if (_0x3e9c48 === "Object" && _0x550f2e.constructor) {
        _0x3e9c48 = _0x550f2e.constructor.name;
      }
      if (_0x3e9c48 === "Map" || _0x3e9c48 === "Set") {
        return Array.from(_0x3e9c48);
      }
      if (_0x3e9c48 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x3e9c48)) {
        return _0x12932f(_0x550f2e, _0x3afad8);
      }
    }
    function _0x2981f5(_0x331f33, _0x5400c9) {
      var _0x303a69;
      var _0x4b1b88;
      var _0x5312a1;
      var _0x14d2f6;
      var _0x4e05d9 = {
        label: 0,
        sent: function () {
          if (_0x5312a1[0] & 1) {
            throw _0x5312a1[1];
          }
          return _0x5312a1[1];
        },
        trys: [],
        ops: []
      };
      _0x14d2f6 = {
        next: _0x37c8d3(0),
        throw: _0x37c8d3(1),
        return: _0x37c8d3(2)
      };
      if (typeof Symbol === "function") {
        _0x14d2f6[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x14d2f6;
      function _0x37c8d3(_0x583cc0) {
        return function (_0x201822) {
          return _0x29af29([_0x583cc0, _0x201822]);
        };
      }
      function _0x29af29(_0xd5cad0) {
        if (_0x303a69) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4e05d9) {
          try {
            _0x303a69 = 1;
            if (_0x4b1b88 && (_0x5312a1 = _0xd5cad0[0] & 2 ? _0x4b1b88.return : _0xd5cad0[0] ? _0x4b1b88.throw || ((_0x5312a1 = _0x4b1b88.return) && _0x5312a1.call(_0x4b1b88), 0) : _0x4b1b88.next) && !(_0x5312a1 = _0x5312a1.call(_0x4b1b88, _0xd5cad0[1])).done) {
              return _0x5312a1;
            }
            _0x4b1b88 = 0;
            if (_0x5312a1) {
              _0xd5cad0 = [_0xd5cad0[0] & 2, _0x5312a1.value];
            }
            switch (_0xd5cad0[0]) {
              case 0:
              case 1:
                _0x5312a1 = _0xd5cad0;
                break;
              case 4:
                _0x4e05d9.label++;
                var _0x3f0f42 = {
                  value: _0xd5cad0[1],
                  done: false
                };
                return _0x3f0f42;
              case 5:
                _0x4e05d9.label++;
                _0x4b1b88 = _0xd5cad0[1];
                _0xd5cad0 = [0];
                continue;
              case 7:
                _0xd5cad0 = _0x4e05d9.ops.pop();
                _0x4e05d9.trys.pop();
                continue;
              default:
                if (!(_0x5312a1 = _0x4e05d9.trys, _0x5312a1 = _0x5312a1.length > 0 && _0x5312a1[_0x5312a1.length - 1]) && (_0xd5cad0[0] === 6 || _0xd5cad0[0] === 2)) {
                  _0x4e05d9 = 0;
                  continue;
                }
                if (_0xd5cad0[0] === 3 && (!_0x5312a1 || _0xd5cad0[1] > _0x5312a1[0] && _0xd5cad0[1] < _0x5312a1[3])) {
                  _0x4e05d9.label = _0xd5cad0[1];
                  break;
                }
                if (_0xd5cad0[0] === 6 && _0x4e05d9.label < _0x5312a1[1]) {
                  _0x4e05d9.label = _0x5312a1[1];
                  _0x5312a1 = _0xd5cad0;
                  break;
                }
                if (_0x5312a1 && _0x4e05d9.label < _0x5312a1[2]) {
                  _0x4e05d9.label = _0x5312a1[2];
                  _0x4e05d9.ops.push(_0xd5cad0);
                  break;
                }
                if (_0x5312a1[2]) {
                  _0x4e05d9.ops.pop();
                }
                _0x4e05d9.trys.pop();
                continue;
            }
            _0xd5cad0 = _0x5400c9.call(_0x331f33, _0x4e05d9);
          } catch (_0x391efe) {
            _0xd5cad0 = [6, _0x391efe];
            _0x4b1b88 = 0;
          } finally {
            _0x303a69 = _0x5312a1 = 0;
          }
        }
        if (_0xd5cad0[0] & 5) {
          throw _0xd5cad0[1];
        }
        var _0x10d0f8 = {
          value: _0xd5cad0[0] ? _0xd5cad0[1] : undefined,
          done: true
        };
        return _0x10d0f8;
      }
    }
    var _0x1a0c90 = new Map();
    var _0x16bf29 = function () {
      var _0x37b36a = _0x12f271(function (_0x1d5d5e) {
        var _0x429bc4;
        var _0x3f0a9c;
        var _0x4ebbb1;
        var _0x4b3d4e;
        var _0x1dd2d1;
        var _0x57e7de;
        var _0x469756;
        var _0xcc6be5;
        var _0x19840e;
        var _0x46fd4f;
        var _0x2f5bb0;
        var _0x1f17e7;
        var _0x4341b3;
        var _0x54dd77;
        var _0x25fdc0;
        var _0x38f8ff;
        var _0xf50eb7;
        var _0x1c08b2;
        var _0xe7c2d0;
        var _0xbd194;
        var _0x2ed247;
        var _0x283347;
        var _0xd36d50;
        var _0xb2c5fd;
        var _0x5b33e2;
        var _0x322337;
        var _0x59c56b;
        var _0x1ceaa5;
        var _0x2d5fef;
        var _0x26d098;
        var _0x27f7e2;
        var _0x4008de;
        var _0x3445e9;
        return _0x2981f5(this, function (_0x4853c0) {
          _0x429bc4 = _0x4c08c6.get(_0x1d5d5e);
          if (_0x429bc4 && _0x429bc4.interiorID && _0x429bc4.interiorID != 0) {
            if (_0x1a0c90.has(_0x429bc4.interiorID)) {
              return [2];
            }
            _0x3f0a9c = _0x3a165c(GetInteriorRoomExtents(_0x429bc4.interiorID, 0), 6);
            _0x4ebbb1 = _0x3f0a9c[0];
            _0x4b3d4e = _0x3f0a9c[1];
            _0x1dd2d1 = _0x3f0a9c[2];
            _0x57e7de = _0x3f0a9c[3];
            _0x469756 = _0x3f0a9c[4];
            _0xcc6be5 = _0x3f0a9c[5];
            if (_0x4ebbb1 == 0 && _0x4b3d4e == 0 && _0x1dd2d1 == 0) {
              return [2];
            }
            _0x19840e = _0x3a165c(GetInteriorPosition(_0x429bc4.interiorID), 3);
            _0x46fd4f = _0x19840e[0];
            _0x2f5bb0 = _0x19840e[1];
            _0x1f17e7 = _0x19840e[2];
            _0x4341b3 = new _0x45b4c7(_0x4ebbb1, _0x4b3d4e, _0x1dd2d1);
            _0x54dd77 = new _0x45b4c7(_0x57e7de, _0x469756, _0xcc6be5);
            _0x25fdc0 = new _0x4c82ed(_0x46fd4f, _0x2f5bb0, _0x1f17e7);
            _0x38f8ff = [new _0x4c82ed(_0x4341b3.x, _0x4341b3.y, _0x1dd2d1).add(_0x25fdc0), new _0x4c82ed(_0x4341b3.x, _0x54dd77.y, _0xcc6be5).add(_0x25fdc0), new _0x4c82ed(_0x57e7de, _0x469756, _0xcc6be5).add(_0x25fdc0), new _0x4c82ed(_0x54dd77.x, _0x4341b3.y, _0xcc6be5).add(_0x25fdc0)];
            _0xf50eb7 = _0x21193b.fromArray(GetInteriorRotation(_0x429bc4.interiorID));
            _0x1c08b2 = new _0x2af827(_0xf50eb7.x, _0xf50eb7.y, _0xf50eb7.z, _0xf50eb7.w);
            _0xe7c2d0 = [];
            _0xbd194 = true;
            _0x2ed247 = false;
            _0x283347 = undefined;
            try {
              for (_0xd36d50 = _0x38f8ff[Symbol.iterator](); !(_0xbd194 = (_0xb2c5fd = _0xd36d50.next()).done); _0xbd194 = true) {
                _0x5b33e2 = _0xb2c5fd.value;
                _0x322337 = _0x5b33e2.clone().sub(_0x25fdc0);
                _0x59c56b = _0x322337.applyQuaternion(_0x1c08b2);
                _0x1ceaa5 = _0x59c56b.add(_0x25fdc0);
                _0xe7c2d0.push(_0x1ceaa5);
              }
            } catch (_0xb4f00f) {
              _0x2ed247 = true;
              _0x283347 = _0xb4f00f;
            } finally {
              try {
                if (!_0xbd194 && _0xd36d50.return != null) {
                  _0xd36d50.return();
                }
              } finally {
                if (_0x2ed247) {
                  throw _0x283347;
                }
              }
            }
            _0x2d5fef = new _0x4c82ed(Infinity, Infinity, Infinity);
            _0x26d098 = new _0x4c82ed(-Infinity, -Infinity, -Infinity);
            for (_0x27f7e2 = 0; _0x27f7e2 < _0xe7c2d0.length; _0x27f7e2++) {
              _0x4008de = _0xe7c2d0[_0x27f7e2];
              _0x2d5fef.min(_0x4008de);
              _0x26d098.max(_0x4008de);
            }
            _0x3445e9 = {
              interirorID: _0x429bc4.interiorID,
              min: new _0x45b4c7(_0x2d5fef.x, _0x2d5fef.y, _0x2d5fef.z),
              max: new _0x45b4c7(_0x26d098.x, _0x26d098.y, _0x26d098.z)
            };
            _0x1a0c90.set(_0x429bc4.interiorID, _0x3445e9);
          }
          return [2];
        });
      });
      return function _0x25b191(_0x4aac99) {
        return _0x37b36a.apply(this, arguments);
      };
    }();
    var _0x17cbe3 = function () {
      var _0x24647f = _0x12f271(function (_0x6240e4, _0x3aba40) {
        var _0x3222de;
        var _0xf0314f;
        var _0x1fb1cb;
        return _0x2981f5(this, function (_0x4ebc30) {
          _0x3222de = _0x1a0c90.get(_0x6240e4);
          if (!_0x3222de) {
            return [2, true];
          }
          _0xf0314f = new _0x45b4c7(_0x3222de.min.x, _0x3222de.min.y, _0x3222de.min.z - 1);
          _0x1fb1cb = new _0x45b4c7(_0x3222de.max.x, _0x3222de.max.y, _0x3222de.max.z + 1);
          return [2, _0x43cbd4(_0xf0314f, _0x1fb1cb, _0x3aba40)];
        });
      });
      return function _0x501f17(_0x10d489, _0x6c99e) {
        return _0x24647f.apply(this, arguments);
      };
    }();
    var _0x43cbd4 = function () {
      var _0x52c362 = _0x12f271(function (_0x39e712, _0x21829b, _0xa6a25d) {
        return _0x2981f5(this, function (_0x537a53) {
          if (_0xa6a25d.x >= _0x39e712.x && _0xa6a25d.x <= _0x21829b.x && _0xa6a25d.y >= _0x39e712.y && _0xa6a25d.y <= _0x21829b.y && _0xa6a25d.z >= _0x39e712.z && _0xa6a25d.z <= _0x21829b.z) {
            return [2, true];
          } else {
            return [2, false];
          }
          return [2];
        });
      });
      return function _0x389d00(_0x4f199c, _0x101809, _0x23690f) {
        return _0x52c362.apply(this, arguments);
      };
    }();
    ;
    function _0x275667(_0x320f10, _0x46a563) {
      if (_0x46a563 == null || _0x46a563 > _0x320f10.length) {
        _0x46a563 = _0x320f10.length;
      }
      for (var _0x817657 = 0, _0x17420d = new Array(_0x46a563); _0x817657 < _0x46a563; _0x817657++) {
        _0x17420d[_0x817657] = _0x320f10[_0x817657];
      }
      return _0x17420d;
    }
    function _0x5f9da(_0x21abf8) {
      if (Array.isArray(_0x21abf8)) {
        return _0x21abf8;
      }
    }
    function _0xbac69e(_0x58ee5c, _0x425418, _0x3a7f50, _0x5d0f12, _0x331731, _0x3be838, _0x50c05c) {
      try {
        var _0x97b0e3 = _0x58ee5c[_0x3be838](_0x50c05c);
        var _0x41122f = _0x97b0e3.value;
      } catch (_0xf7952) {
        _0x3a7f50(_0xf7952);
        return;
      }
      if (_0x97b0e3.done) {
        _0x425418(_0x41122f);
      } else {
        Promise.resolve(_0x41122f).then(_0x5d0f12, _0x331731);
      }
    }
    function _0x4113bf(_0x27191f) {
      return function () {
        var _0x48d0c7 = this;
        var _0x84b815 = arguments;
        return new Promise(function (_0x159752, _0x38ad5c) {
          var _0x2b9076 = _0x27191f.apply(_0x48d0c7, _0x84b815);
          function _0x134c0c(_0x2b1756) {
            _0xbac69e(_0x2b9076, _0x159752, _0x38ad5c, _0x134c0c, _0x4e9497, "next", _0x2b1756);
          }
          function _0x4e9497(_0x2ba5c2) {
            _0xbac69e(_0x2b9076, _0x159752, _0x38ad5c, _0x134c0c, _0x4e9497, "throw", _0x2ba5c2);
          }
          _0x134c0c(undefined);
        });
      };
    }
    function _0x574ebe(_0x5886b2, _0x5beeaf) {
      var _0x5ca11c = _0x5886b2 == null ? null : typeof Symbol !== "undefined" && _0x5886b2[Symbol.iterator] || _0x5886b2["@@iterator"];
      if (_0x5ca11c == null) {
        return;
      }
      var _0x1944a8 = [];
      var _0x355ce2 = true;
      var _0x4c5ae0 = false;
      var _0xddad2d;
      var _0x381e22;
      try {
        for (_0x5ca11c = _0x5ca11c.call(_0x5886b2); !(_0x355ce2 = (_0xddad2d = _0x5ca11c.next()).done); _0x355ce2 = true) {
          _0x1944a8.push(_0xddad2d.value);
          if (_0x5beeaf && _0x1944a8.length === _0x5beeaf) {
            break;
          }
        }
      } catch (_0x4cd2a5) {
        _0x4c5ae0 = true;
        _0x381e22 = _0x4cd2a5;
      } finally {
        try {
          if (!_0x355ce2 && _0x5ca11c.return != null) {
            _0x5ca11c.return();
          }
        } finally {
          if (_0x4c5ae0) {
            throw _0x381e22;
          }
        }
      }
      return _0x1944a8;
    }
    function _0x1c6314() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x2a5fa7(_0x2c5507, _0x4cf568) {
      return _0x5f9da(_0x2c5507) || _0x574ebe(_0x2c5507, _0x4cf568) || _0x4ee346(_0x2c5507, _0x4cf568) || _0x1c6314();
    }
    function _0x4ee346(_0x304b2e, _0x3401be) {
      if (!_0x304b2e) {
        return;
      }
      if (typeof _0x304b2e === "string") {
        return _0x275667(_0x304b2e, _0x3401be);
      }
      var _0xfb7c76 = Object.prototype.toString.call(_0x304b2e).slice(8, -1);
      if (_0xfb7c76 === "Object" && _0x304b2e.constructor) {
        _0xfb7c76 = _0x304b2e.constructor.name;
      }
      if (_0xfb7c76 === "Map" || _0xfb7c76 === "Set") {
        return Array.from(_0xfb7c76);
      }
      if (_0xfb7c76 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0xfb7c76)) {
        return _0x275667(_0x304b2e, _0x3401be);
      }
    }
    function _0x27f742(_0x3be0dd, _0x242a1b) {
      var _0x1c79b3;
      var _0x1b5c2b;
      var _0x1dfc9f;
      var _0x31ca01;
      var _0x173349 = {
        label: 0,
        sent: function () {
          if (_0x1dfc9f[0] & 1) {
            throw _0x1dfc9f[1];
          }
          return _0x1dfc9f[1];
        },
        trys: [],
        ops: []
      };
      _0x31ca01 = {
        next: _0x1c6d4e(0),
        throw: _0x1c6d4e(1),
        return: _0x1c6d4e(2)
      };
      if (typeof Symbol === "function") {
        _0x31ca01[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x31ca01;
      function _0x1c6d4e(_0x3bd508) {
        return function (_0x54d088) {
          return _0x3356c([_0x3bd508, _0x54d088]);
        };
      }
      function _0x3356c(_0x316dfd) {
        if (_0x1c79b3) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x173349) {
          try {
            _0x1c79b3 = 1;
            if (_0x1b5c2b && (_0x1dfc9f = _0x316dfd[0] & 2 ? _0x1b5c2b.return : _0x316dfd[0] ? _0x1b5c2b.throw || ((_0x1dfc9f = _0x1b5c2b.return) && _0x1dfc9f.call(_0x1b5c2b), 0) : _0x1b5c2b.next) && !(_0x1dfc9f = _0x1dfc9f.call(_0x1b5c2b, _0x316dfd[1])).done) {
              return _0x1dfc9f;
            }
            _0x1b5c2b = 0;
            if (_0x1dfc9f) {
              _0x316dfd = [_0x316dfd[0] & 2, _0x1dfc9f.value];
            }
            switch (_0x316dfd[0]) {
              case 0:
              case 1:
                _0x1dfc9f = _0x316dfd;
                break;
              case 4:
                _0x173349.label++;
                var _0x25e817 = {
                  value: _0x316dfd[1],
                  done: false
                };
                return _0x25e817;
              case 5:
                _0x173349.label++;
                _0x1b5c2b = _0x316dfd[1];
                _0x316dfd = [0];
                continue;
              case 7:
                _0x316dfd = _0x173349.ops.pop();
                _0x173349.trys.pop();
                continue;
              default:
                if (!(_0x1dfc9f = _0x173349.trys, _0x1dfc9f = _0x1dfc9f.length > 0 && _0x1dfc9f[_0x1dfc9f.length - 1]) && (_0x316dfd[0] === 6 || _0x316dfd[0] === 2)) {
                  _0x173349 = 0;
                  continue;
                }
                if (_0x316dfd[0] === 3 && (!_0x1dfc9f || _0x316dfd[1] > _0x1dfc9f[0] && _0x316dfd[1] < _0x1dfc9f[3])) {
                  _0x173349.label = _0x316dfd[1];
                  break;
                }
                if (_0x316dfd[0] === 6 && _0x173349.label < _0x1dfc9f[1]) {
                  _0x173349.label = _0x1dfc9f[1];
                  _0x1dfc9f = _0x316dfd;
                  break;
                }
                if (_0x1dfc9f && _0x173349.label < _0x1dfc9f[2]) {
                  _0x173349.label = _0x1dfc9f[2];
                  _0x173349.ops.push(_0x316dfd);
                  break;
                }
                if (_0x1dfc9f[2]) {
                  _0x173349.ops.pop();
                }
                _0x173349.trys.pop();
                continue;
            }
            _0x316dfd = _0x242a1b.call(_0x3be0dd, _0x173349);
          } catch (_0x331daa) {
            _0x316dfd = [6, _0x331daa];
            _0x1b5c2b = 0;
          } finally {
            _0x1c79b3 = _0x1dfc9f = 0;
          }
        }
        if (_0x316dfd[0] & 5) {
          throw _0x316dfd[1];
        }
        var _0x9bfc3f = {
          value: _0x316dfd[0] ? _0x316dfd[1] : undefined,
          done: true
        };
        return _0x9bfc3f;
      }
    }
    var _0x200f99 = new Map();
    function _0x30b924() {
      return _0x3bf6d5.apply(this, arguments);
    }
    function _0x3bf6d5() {
      _0x3bf6d5 = _0x4113bf(function () {
        return _0x27f742(this, function (_0x9d049b) {
          switch (_0x9d049b.label) {
            case 0:
              return [4, _0x24b379()];
            case 1:
              _0x9d049b.sent();
              if (_0x200f99.size != 0) {
                return [3, 3];
              }
              return [4, _0x57ea51()];
            case 2:
              _0x9d049b.sent();
              _0x9d049b.label = 3;
            case 3:
              _0x111dc3();
              return [2];
          }
        });
      });
      return _0x3bf6d5.apply(this, arguments);
    }
    var _0x95acc3 = function () {
      var _0x4766a7 = _0x4113bf(function (_0x4a2452) {
        return _0x27f742(this, function (_0x5bb8ff) {
          _0x200f99.set("snapMovement", _0x4a2452.snapMovement.userValue);
          _0x200f99.set("snapRotation", _0x4a2452.snapRotation.userValue);
          _0x200f99.set("gizmoXYArea", _0x4a2452.gizmoXYArea.userValue);
          _0x200f99.set("lookSpeedValueX", _0x4a2452.lookSpeedValueX.userValue);
          _0x200f99.set("lookSpeedValueY", _0x4a2452.lookSpeedValueY.userValue);
          _0x200f99.set("cameraSpeedValue", _0x4a2452.cameraSpeedValue.userValue);
          _0x200f99.set("cameraFov", _0x4a2452.cameraFov.userValue);
          _0x200f99.set("displayBorder", _0x4a2452.displayBorder);
          _0x200f99.set("startingView", _0x4a2452.startingView);
          _0x111dc3();
          return [2];
        });
      });
      return function _0x336f99(_0x290c59) {
        return _0x4766a7.apply(this, arguments);
      };
    }();
    var _0x29709f = function () {
      var _0x2f57dd = _0x4113bf(function (_0x2f2ad8) {
        return _0x27f742(this, function (_0x5511c2) {
          _0x200f99.set("cameraSpeedValue", Math.round(_0x2f2ad8 * 100) / 100);
          _0x44f537();
          return [2];
        });
      });
      return function _0x14ef60(_0x2b6de0) {
        return _0x2f57dd.apply(this, arguments);
      };
    }();
    var _0x57ea51 = function () {
      var _0x14b03e = _0x4113bf(function () {
        return _0x27f742(this, function (_0x110664) {
          _0x200f99.set("snapMovement", 0);
          _0x200f99.set("snapRotation", 0);
          _0x200f99.set("gizmoXYArea", 0.06);
          _0x200f99.set("lookSpeedValueX", 10);
          _0x200f99.set("lookSpeedValueY", 10);
          _0x200f99.set("cameraSpeedValue", 0.05);
          _0x200f99.set("cameraFov", 5);
          _0x200f99.set("displayBorder", 1);
          _0x200f99.set("startingView", 3);
          return [2];
        });
      });
      return function _0x54bd6e() {
        return _0x14b03e.apply(this, arguments);
      };
    }();
    var _0x44f537 = function () {
      var _0x3413ec = _0x4113bf(function () {
        var _0x16d71b;
        var _0x27ceb8;
        var _0x2031bd;
        var _0x2c8aca;
        var _0x359909;
        var _0x490e;
        var _0x119dac;
        var _0x134757;
        return _0x27f742(this, function (_0x10d24b) {
          _0x16d71b = true;
          _0x27ceb8 = false;
          _0x2031bd = undefined;
          try {
            for (_0x2c8aca = _0x200f99[Symbol.iterator](); !(_0x16d71b = (_0x359909 = _0x2c8aca.next()).done); _0x16d71b = true) {
              _0x490e = _0x2a5fa7(_0x359909.value, 2);
              _0x119dac = _0x490e[0];
              _0x134757 = _0x490e[1];
              if (_0x119dac == "displayBorder") {
                _0x5af272.displayBorder = _0x134757;
              } else if (_0x119dac == "startingView") {
                _0x5af272.startingView = _0x134757;
              } else {
                _0x5af272[_0x119dac].marks &&= _0x51c944[_0x119dac].marks;
                _0x5af272[_0x119dac].userValue = _0x134757;
              }
            }
          } catch (_0x7e52d2) {
            _0x27ceb8 = true;
            _0x2031bd = _0x7e52d2;
          } finally {
            try {
              if (!_0x16d71b && _0x2c8aca.return != null) {
                _0x2c8aca.return();
              }
            } finally {
              if (_0x27ceb8) {
                throw _0x2031bd;
              }
            }
          }
          var _0x3202dd = {
            settings: _0x5af272
          };
          var _0x8b9c57 = {
            action: "updateSettings",
            data: _0x3202dd
          };
          SendNUIMessage(_0x8b9c57);
          return [2];
        });
      });
      return function _0x200480() {
        return _0x3413ec.apply(this, arguments);
      };
    }();
    var _0x4ef6b0 = function () {
      var _0x56f362 = _0x4113bf(function () {
        var _0x484068;
        var _0x458ea3;
        var _0x43032a;
        var _0x6c19dd;
        var _0x3609d1;
        var _0x4892fe;
        var _0x4ab8f3;
        var _0x41b98d;
        return _0x27f742(this, function (_0x148c99) {
          _0x484068 = true;
          _0x458ea3 = false;
          _0x43032a = undefined;
          try {
            for (_0x6c19dd = _0x200f99[Symbol.iterator](); !(_0x484068 = (_0x3609d1 = _0x6c19dd.next()).done); _0x484068 = true) {
              _0x4892fe = _0x2a5fa7(_0x3609d1.value, 2);
              _0x4ab8f3 = _0x4892fe[0];
              _0x41b98d = _0x4892fe[1];
              if (_0x4ab8f3 == "displayBorder") {
                _0x5af272.displayBorder = _0x41b98d;
              } else if (_0x4ab8f3 == "startingView") {
                _0x5af272.startingView = _0x41b98d;
              } else {
                _0x5af272[_0x4ab8f3].marks &&= _0x51c944[_0x4ab8f3].marks;
                _0x5af272[_0x4ab8f3].userValue = _0x41b98d;
              }
            }
          } catch (_0x40dd42) {
            _0x458ea3 = true;
            _0x43032a = _0x40dd42;
          } finally {
            try {
              if (!_0x484068 && _0x6c19dd.return != null) {
                _0x6c19dd.return();
              }
            } finally {
              if (_0x458ea3) {
                throw _0x43032a;
              }
            }
          }
          SetResourceKvp("np-editor:settings", JSON.stringify(_0x5af272));
          return [2];
        });
      });
      return function _0x4330dc() {
        return _0x56f362.apply(this, arguments);
      };
    }();
    var _0x16a54b = function () {
      var _0x8bd4c8 = _0x4113bf(function (_0x5bec45) {
        var _0x58b034;
        return _0x27f742(this, function (_0x267346) {
          _0x58b034 = _0x200f99.get(_0x5bec45);
          if (_0x58b034 != null) {
            return [2, _0x58b034];
          }
          return [2, _0x5af272[_0x5bec45].userValue];
        });
      });
      return function _0x5d73e6(_0x29befd) {
        return _0x8bd4c8.apply(this, arguments);
      };
    }();
    var _0x24b379 = function () {
      var _0x3b1045 = _0x4113bf(function () {
        var _0x4fd15c;
        var _0x3b88d7;
        return _0x27f742(this, function (_0x37d452) {
          _0x4fd15c = GetResourceKvpString("np-editor:settings");
          if (_0x4fd15c == null || _0x4fd15c.length == 0 || _0x4fd15c == "") {
            return [2];
          }
          _0x3b88d7 = JSON.parse(_0x4fd15c);
          if (_0x3b88d7 == null) {
            return [2];
          }
          _0x95acc3(_0x3b88d7);
          return [2];
        });
      });
      return function _0x38c7d5() {
        return _0x3b1045.apply(this, arguments);
      };
    }();
    var _0x5af272 = {
      cameraFov: {
        interval: 0.1,
        max: 10,
        min: 0,
        userValue: 5
      },
      cameraSpeedValue: {
        interval: 0.01,
        max: 1,
        min: 0,
        userValue: 0.05
      },
      gizmoXYArea: {
        interval: 0.005,
        max: 0.2,
        min: 0.06,
        userValue: 0.06
      },
      lookSpeedValueX: {
        interval: 1,
        max: 20,
        min: 1,
        userValue: 10
      },
      lookSpeedValueY: {
        interval: 1,
        max: 20,
        min: 1,
        userValue: 10
      },
      snapMovement: {
        marks: [0, 0.05, 0.1, 0.25, 0.5, 1, 2],
        userValue: 0
      },
      snapRotation: {
        marks: [0, 0.1, 0.5, 1, 5, 10, 15, 30, 45, 90],
        userValue: 0
      },
      displayBorder: 1,
      startingView: 3
    };
    var _0x51c944 = {
      snapMovement: {
        marks: [0, 0.05, 0.1, 0.25, 0.5, 1, 2]
      },
      snapRotation: {
        marks: [0, 0.1, 0.5, 1, 5, 10, 15, 30, 45, 90]
      }
    };
    ;
    function _0x2da06a(_0x46975c, _0x14c74f, _0x3caab3, _0x13b2b3, _0xb2a6ff, _0xd68e4e, _0x4ec1c9) {
      try {
        var _0xfe7605 = _0x46975c[_0xd68e4e](_0x4ec1c9);
        var _0x59899f = _0xfe7605.value;
      } catch (_0xdf1180) {
        _0x3caab3(_0xdf1180);
        return;
      }
      if (_0xfe7605.done) {
        _0x14c74f(_0x59899f);
      } else {
        Promise.resolve(_0x59899f).then(_0x13b2b3, _0xb2a6ff);
      }
    }
    function _0xaa06d4(_0x374f86) {
      return function () {
        var _0x360b0d = this;
        var _0x1fa16b = arguments;
        return new Promise(function (_0x390d5d, _0x566fbb) {
          var _0x568781 = _0x374f86.apply(_0x360b0d, _0x1fa16b);
          function _0x15576d(_0x3c0a40) {
            _0x2da06a(_0x568781, _0x390d5d, _0x566fbb, _0x15576d, _0x48ad3f, "next", _0x3c0a40);
          }
          function _0x48ad3f(_0x339c3e) {
            _0x2da06a(_0x568781, _0x390d5d, _0x566fbb, _0x15576d, _0x48ad3f, "throw", _0x339c3e);
          }
          _0x15576d(undefined);
        });
      };
    }
    function _0x14d634(_0x4bafe1, _0x27e25c) {
      var _0x53861a;
      var _0x43fc37;
      var _0x5b5b73;
      var _0x2f581d;
      var _0x2842d6 = {
        label: 0,
        sent: function () {
          if (_0x5b5b73[0] & 1) {
            throw _0x5b5b73[1];
          }
          return _0x5b5b73[1];
        },
        trys: [],
        ops: []
      };
      _0x2f581d = {
        next: _0x42fa8b(0),
        throw: _0x42fa8b(1),
        return: _0x42fa8b(2)
      };
      if (typeof Symbol === "function") {
        _0x2f581d[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2f581d;
      function _0x42fa8b(_0x234fb6) {
        return function (_0x37ee64) {
          return _0x3a9ca8([_0x234fb6, _0x37ee64]);
        };
      }
      function _0x3a9ca8(_0x4d4431) {
        if (_0x53861a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2842d6) {
          try {
            _0x53861a = 1;
            if (_0x43fc37 && (_0x5b5b73 = _0x4d4431[0] & 2 ? _0x43fc37.return : _0x4d4431[0] ? _0x43fc37.throw || ((_0x5b5b73 = _0x43fc37.return) && _0x5b5b73.call(_0x43fc37), 0) : _0x43fc37.next) && !(_0x5b5b73 = _0x5b5b73.call(_0x43fc37, _0x4d4431[1])).done) {
              return _0x5b5b73;
            }
            _0x43fc37 = 0;
            if (_0x5b5b73) {
              _0x4d4431 = [_0x4d4431[0] & 2, _0x5b5b73.value];
            }
            switch (_0x4d4431[0]) {
              case 0:
              case 1:
                _0x5b5b73 = _0x4d4431;
                break;
              case 4:
                _0x2842d6.label++;
                var _0x3cdd7a = {
                  value: _0x4d4431[1],
                  done: false
                };
                return _0x3cdd7a;
              case 5:
                _0x2842d6.label++;
                _0x43fc37 = _0x4d4431[1];
                _0x4d4431 = [0];
                continue;
              case 7:
                _0x4d4431 = _0x2842d6.ops.pop();
                _0x2842d6.trys.pop();
                continue;
              default:
                if (!(_0x5b5b73 = _0x2842d6.trys, _0x5b5b73 = _0x5b5b73.length > 0 && _0x5b5b73[_0x5b5b73.length - 1]) && (_0x4d4431[0] === 6 || _0x4d4431[0] === 2)) {
                  _0x2842d6 = 0;
                  continue;
                }
                if (_0x4d4431[0] === 3 && (!_0x5b5b73 || _0x4d4431[1] > _0x5b5b73[0] && _0x4d4431[1] < _0x5b5b73[3])) {
                  _0x2842d6.label = _0x4d4431[1];
                  break;
                }
                if (_0x4d4431[0] === 6 && _0x2842d6.label < _0x5b5b73[1]) {
                  _0x2842d6.label = _0x5b5b73[1];
                  _0x5b5b73 = _0x4d4431;
                  break;
                }
                if (_0x5b5b73 && _0x2842d6.label < _0x5b5b73[2]) {
                  _0x2842d6.label = _0x5b5b73[2];
                  _0x2842d6.ops.push(_0x4d4431);
                  break;
                }
                if (_0x5b5b73[2]) {
                  _0x2842d6.ops.pop();
                }
                _0x2842d6.trys.pop();
                continue;
            }
            _0x4d4431 = _0x27e25c.call(_0x4bafe1, _0x2842d6);
          } catch (_0x452ff4) {
            _0x4d4431 = [6, _0x452ff4];
            _0x43fc37 = 0;
          } finally {
            _0x53861a = _0x5b5b73 = 0;
          }
        }
        if (_0x4d4431[0] & 5) {
          throw _0x4d4431[1];
        }
        var _0x61908d = {
          value: _0x4d4431[0] ? _0x4d4431[1] : undefined,
          done: true
        };
        return _0x61908d;
      }
    }
    var _0x4f03b1 = 0;
    var _0x590a0d = function () {
      var _0x2b451d = _0xaa06d4(function () {
        return _0x14d634(this, function (_0x100343) {
          DisableControlAction(2, 32, true);
          DisableControlAction(2, 33, true);
          DisableControlAction(2, 34, true);
          DisableControlAction(2, 35, true);
          DisableControlAction(2, 36, true);
          DisableControlAction(2, 12, true);
          DisableControlAction(2, 13, true);
          DisableControlAction(2, 14, true);
          DisableControlAction(2, 15, true);
          DisableControlAction(2, 16, true);
          DisableControlAction(2, 17, true);
          DisableControlAction(2, 0, true);
          DisableControlAction(2, 29, true);
          DisableControlAction(0, 236, true);
          DisableControlAction(0, 0, true);
          return [2];
        });
      });
      return function _0x3b7d29() {
        return _0x2b451d.apply(this, arguments);
      };
    }();
    var _0x18a043 = function () {
      var _0x286102 = _0xaa06d4(function () {
        return _0x14d634(this, function (_0x569187) {
          DisableControlAction(2, 45, true);
          DisableControlAction(2, 80, true);
          DisableControlAction(2, 140, true);
          DisableControlAction(2, 44, true);
          DisableControlAction(2, 23, true);
          DisableControlAction(0, 24, true);
          DisableControlAction(0, 288, true);
          DisableControlAction(0, 38, true);
          return [2];
        });
      });
      return function _0x509764() {
        return _0x286102.apply(this, arguments);
      };
    }();
    var _0x52f54e = function () {
      var _0x1ea9bb = _0xaa06d4(function (_0x2c8c2d) {
        return _0x14d634(this, function (_0x4568ac) {
          if (_0x2c8c2d && _0x4f03b1 == 0) {
            _0x4f03b1 = setTick(function () {
              _0x18a043();
            });
          } else {
            clearTick(_0x4f03b1);
            _0x4f03b1 = 0;
          }
          return [2, true];
        });
      });
      return function _0x1b0a6d(_0x296a25) {
        return _0x1ea9bb.apply(this, arguments);
      };
    }();
    ;
    function _0x2a821e(_0x125541, _0x3df611, _0x5e1169, _0x563c7f, _0xa3ef48, _0x58f86e, _0x260c12) {
      try {
        var _0x4d7f41 = _0x125541[_0x58f86e](_0x260c12);
        var _0x89de67 = _0x4d7f41.value;
      } catch (_0xc0e13b) {
        _0x5e1169(_0xc0e13b);
        return;
      }
      if (_0x4d7f41.done) {
        _0x3df611(_0x89de67);
      } else {
        Promise.resolve(_0x89de67).then(_0x563c7f, _0xa3ef48);
      }
    }
    function _0x1a2ef4(_0x17521f) {
      return function () {
        var _0x41131f = this;
        var _0x1a9210 = arguments;
        return new Promise(function (_0x177bad, _0x3e0e82) {
          var _0x1d6859 = _0x17521f.apply(_0x41131f, _0x1a9210);
          function _0x11ffc0(_0x42b98c) {
            _0x2a821e(_0x1d6859, _0x177bad, _0x3e0e82, _0x11ffc0, _0x3f58e8, "next", _0x42b98c);
          }
          function _0x3f58e8(_0x37e8ae) {
            _0x2a821e(_0x1d6859, _0x177bad, _0x3e0e82, _0x11ffc0, _0x3f58e8, "throw", _0x37e8ae);
          }
          _0x11ffc0(undefined);
        });
      };
    }
    function _0xf202c9(_0x218ec5, _0x39a340, _0x34de5c) {
      if (_0x39a340 in _0x218ec5) {
        var _0x244922 = {
          value: _0x34de5c,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x218ec5, _0x39a340, _0x244922);
      } else {
        _0x218ec5[_0x39a340] = _0x34de5c;
      }
      return _0x218ec5;
    }
    function _0x3b75c6(_0x7b5cf8) {
      for (var _0x4726e9 = 1; _0x4726e9 < arguments.length; _0x4726e9++) {
        var _0x2ff3d7 = arguments[_0x4726e9] ?? {};
        var _0x540f6a = Object.keys(_0x2ff3d7);
        if (typeof Object.getOwnPropertySymbols === "function") {
          _0x540f6a = _0x540f6a.concat(Object.getOwnPropertySymbols(_0x2ff3d7).filter(function (_0x1d33cf) {
            return Object.getOwnPropertyDescriptor(_0x2ff3d7, _0x1d33cf).enumerable;
          }));
        }
        _0x540f6a.forEach(function (_0x1e10ef) {
          _0xf202c9(_0x7b5cf8, _0x1e10ef, _0x2ff3d7[_0x1e10ef]);
        });
      }
      return _0x7b5cf8;
    }
    function _0x3799a5(_0x503f6b, _0x32f23b) {
      var _0x5b4436;
      var _0x1e7e3b;
      var _0x2e306c;
      var _0x493513;
      var _0x4232f7 = {
        label: 0,
        sent: function () {
          if (_0x2e306c[0] & 1) {
            throw _0x2e306c[1];
          }
          return _0x2e306c[1];
        },
        trys: [],
        ops: []
      };
      _0x493513 = {
        next: _0x1ece6e(0),
        throw: _0x1ece6e(1),
        return: _0x1ece6e(2)
      };
      if (typeof Symbol === "function") {
        _0x493513[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x493513;
      function _0x1ece6e(_0x10ab81) {
        return function (_0x1bc695) {
          return _0x247611([_0x10ab81, _0x1bc695]);
        };
      }
      function _0x247611(_0x4d15d4) {
        if (_0x5b4436) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x4232f7) {
          try {
            _0x5b4436 = 1;
            if (_0x1e7e3b && (_0x2e306c = _0x4d15d4[0] & 2 ? _0x1e7e3b.return : _0x4d15d4[0] ? _0x1e7e3b.throw || ((_0x2e306c = _0x1e7e3b.return) && _0x2e306c.call(_0x1e7e3b), 0) : _0x1e7e3b.next) && !(_0x2e306c = _0x2e306c.call(_0x1e7e3b, _0x4d15d4[1])).done) {
              return _0x2e306c;
            }
            _0x1e7e3b = 0;
            if (_0x2e306c) {
              _0x4d15d4 = [_0x4d15d4[0] & 2, _0x2e306c.value];
            }
            switch (_0x4d15d4[0]) {
              case 0:
              case 1:
                _0x2e306c = _0x4d15d4;
                break;
              case 4:
                _0x4232f7.label++;
                var _0x1e2a66 = {
                  value: _0x4d15d4[1],
                  done: false
                };
                return _0x1e2a66;
              case 5:
                _0x4232f7.label++;
                _0x1e7e3b = _0x4d15d4[1];
                _0x4d15d4 = [0];
                continue;
              case 7:
                _0x4d15d4 = _0x4232f7.ops.pop();
                _0x4232f7.trys.pop();
                continue;
              default:
                if (!(_0x2e306c = _0x4232f7.trys, _0x2e306c = _0x2e306c.length > 0 && _0x2e306c[_0x2e306c.length - 1]) && (_0x4d15d4[0] === 6 || _0x4d15d4[0] === 2)) {
                  _0x4232f7 = 0;
                  continue;
                }
                if (_0x4d15d4[0] === 3 && (!_0x2e306c || _0x4d15d4[1] > _0x2e306c[0] && _0x4d15d4[1] < _0x2e306c[3])) {
                  _0x4232f7.label = _0x4d15d4[1];
                  break;
                }
                if (_0x4d15d4[0] === 6 && _0x4232f7.label < _0x2e306c[1]) {
                  _0x4232f7.label = _0x2e306c[1];
                  _0x2e306c = _0x4d15d4;
                  break;
                }
                if (_0x2e306c && _0x4232f7.label < _0x2e306c[2]) {
                  _0x4232f7.label = _0x2e306c[2];
                  _0x4232f7.ops.push(_0x4d15d4);
                  break;
                }
                if (_0x2e306c[2]) {
                  _0x4232f7.ops.pop();
                }
                _0x4232f7.trys.pop();
                continue;
            }
            _0x4d15d4 = _0x32f23b.call(_0x503f6b, _0x4232f7);
          } catch (_0x212970) {
            _0x4d15d4 = [6, _0x212970];
            _0x1e7e3b = 0;
          } finally {
            _0x5b4436 = _0x2e306c = 0;
          }
        }
        if (_0x4d15d4[0] & 5) {
          throw _0x4d15d4[1];
        }
        var _0x5130a3 = {
          value: _0x4d15d4[0] ? _0x4d15d4[1] : undefined,
          done: true
        };
        return _0x5130a3;
      }
    }
    var _0x2cdcce = 0;
    var _0x3a6270 = true;
    var _0x53a2fa = 0;
    var _0x5c9c99 = false;
    var _0x5a6905 = 0.3;
    var _0x400977 = 1;
    var _0x55ce36 = 0;
    var _0x4cb965 = 0;
    var _0x2434da = -89;
    var _0x171d5a = 89;
    var _0xf35f0d = new Map();
    var _0x51e843 = 0;
    var _0x333698 = 0;
    var _0xc00ca3 = false;
    var _0x4fd482 = new _0x45b4c7(0, 0, 0);
    var _0x45299a = 0;
    var _0x44951f = 0;
    var _0x35563b = 0;
    var _0x1448a2 = 0;
    var _0x1e91eb = 0;
    var _0x3d793e = 0;
    var _0x6ada10;
    var _0x7d065 = false;
    var _0x111dc3 = function () {
      var _0x317d1d = _0x1a2ef4(function () {
        var _0x5e66e9;
        var _0x482add;
        return _0x3799a5(this, function (_0x588eed) {
          switch (_0x588eed.label) {
            case 0:
              return [4, _0x16a54b("cameraSpeedValue")];
            case 1:
              _0x5a6905 = _0x588eed.sent();
              return [4, _0x16a54b("lookSpeedValueX")];
            case 2:
              _0x35563b = -_0x588eed.sent();
              return [4, _0x16a54b("lookSpeedValueY")];
            case 3:
              _0x1448a2 = -_0x588eed.sent();
              _0x400977 = _0x5af272.cameraSpeedValue.max;
              if (_0x2cdcce == 0) {
                return [3, 5];
              }
              _0x5e66e9 = GetGameplayCamFov();
              _0x482add = [_0x2cdcce];
              return [4, _0x16a54b("cameraFov")];
            case 4:
              SetCamFov.apply(undefined, _0x482add.concat([_0x5e66e9 + _0x588eed.sent()]));
              _0x588eed.label = 5;
            case 5:
              return [2];
          }
        });
      });
      return function _0x7c5bf2() {
        return _0x317d1d.apply(this, arguments);
      };
    }();
    var _0x302093 = function () {
      var _0x1db45a = _0x1a2ef4(function (_0x1e78e0) {
        return _0x3799a5(this, function (_0x31c6e9) {
          _0x3a6270 = _0x1e78e0;
          return [2];
        });
      });
      return function _0x9d822c(_0x3b5bff) {
        return _0x1db45a.apply(this, arguments);
      };
    }();
    var _0x1871e1 = function () {
      var _0x1778bf = _0x1a2ef4(function (_0x38ef8e, _0x4e8981, _0x43e539) {
        var _0xb9b384;
        var _0xb89c5c;
        var _0x257952;
        var _0x2e12f1;
        var _0x232227;
        var _0xc376af;
        var _0x55a68e;
        var _0x410c9d;
        var _0xb64ffc;
        return _0x3799a5(this, function (_0x25f43a) {
          switch (_0x25f43a.label) {
            case 0:
              _0xb9b384 = _0xf35f0d.get(_0x38ef8e);
              if (!_0xb9b384) {
                var _0x42a51e = {
                  ready: false,
                  inside: false,
                  databaseID: _0x43e539,
                  roomHash: -1
                };
                _0xb89c5c = _0x42a51e;
              } else {
                _0xb89c5c = _0x3b75c6({}, _0xb9b384);
              }
              if (!!_0x2cdcce && _0x2cdcce != 0) {
                return [3, 3];
              }
              _0x257952 = PlayerPedId();
              _0x232227 = true;
              _0xc376af = _0x45b4c7.fromArray(GetEntityCoords(_0x257952, false));
              if (!_0x4e8981) {
                return [3, 2];
              }
              return [4, _0x17cbe3(_0x38ef8e, _0xc376af)];
            case 1:
              _0x232227 = _0x25f43a.sent();
              _0x2e12f1 = GetInteriorFromCollision(_0xc376af.x, _0xc376af.y, _0xc376af.z);
              _0x25f43a.label = 2;
            case 2:
              _0x55a68e = _0x2b98da.get(_0x43e539);
              _0x410c9d = false;
              if (_0x55a68e) {
                if (_0x55a68e.isApartment) {
                  if (_0x2e12f1 == _0x38ef8e) {
                    _0x410c9d = true;
                  } else {
                    _0x410c9d = false;
                  }
                } else if (_0x55a68e.isHousing) {
                  _0x410c9d = true;
                }
              }
              if (_0x232227 && _0x4e8981 && _0x410c9d) {
                if (_0x55a68e && _0xb89c5c.roomHash == -1) {
                  _0xb64ffc = CreateObjectNoOffset("ng_proc_paintcan02a", _0x55a68e.position.x, _0x55a68e.position.y, _0x55a68e.position.z, false, false, false);
                  _0xb89c5c.roomHash = GetRoomKeyFromEntity(_0xb64ffc);
                  _0x23b88f(_0xb64ffc);
                }
                _0x6ada10 = _0x55a68e;
                _0xb89c5c.ready = _0x4e8981;
                _0xb89c5c.inside = true;
                if (_0x1e91eb == 0) {
                  _0x1e91eb = setTick(function () {
                    _0xc4e5d8();
                  });
                  _0x3d793e = setTick(_0x1a2ef4(function () {
                    return _0x3799a5(this, function (_0x9ffa19) {
                      switch (_0x9ffa19.label) {
                        case 0:
                          return [4, _0x51d8bd()];
                        case 1:
                          _0x9ffa19.sent();
                          return [4, _0x4e43fe(10)];
                        case 2:
                          _0x9ffa19.sent();
                          return [2];
                      }
                    });
                  }));
                }
              } else {
                if (_0xb89c5c.inside == true) {
                  if (_0x1e91eb != 0) {
                    _0x7d065 = false;
                    clearTick(_0x1e91eb);
                    clearTick(_0x3d793e);
                    _0x1e91eb = 0;
                    _0x3d793e = 0;
                  }
                  _0x6ada10 = undefined;
                }
                _0xb89c5c.ready = _0x4e8981;
                _0xb89c5c.inside = false;
              }
              _0x25f43a.label = 3;
            case 3:
              if (_0xf35f0d.has(_0x38ef8e)) {
                if (_0x2cdcce == 0) {
                  _0xf35f0d.set(_0x38ef8e, _0xb89c5c);
                }
              } else {
                _0xf35f0d.set(_0x38ef8e, _0xb89c5c);
              }
              return [2];
          }
        });
      });
      return function _0x10ac00(_0x3de294, _0x22b248, _0x6417b4) {
        return _0x1778bf.apply(this, arguments);
      };
    }();
    var _0xc4e5d8 = function () {
      var _0x3943fc = _0x1a2ef4(function () {
        return _0x3799a5(this, function (_0x4e3581) {
          DisableOcclusionThisFrame();
          return [2];
        });
      });
      return function _0x4585de() {
        return _0x3943fc.apply(this, arguments);
      };
    }();
    var _0x58bc41 = function () {
      var _0x1093c5 = _0x1a2ef4(function () {
        var _0x39e129;
        var _0xef5768;
        var _0x15ece7;
        var _0x1fb48f;
        var _0x49db66;
        var _0x5079fd;
        return _0x3799a5(this, function (_0x3ca9a2) {
          _0x39e129 = PlayerPedId();
          _0xef5768 = GetInteriorFromPrimaryView();
          if (_0xef5768 == 0) {
            _0x15ece7 = _0x45b4c7.fromArray(GetEntityCoords(_0x39e129));
            _0xef5768 = GetInteriorAtCoords(_0x15ece7.x, _0x15ece7.y, _0x15ece7.z - 4);
          }
          if (_0xef5768 == 0) {
            _0x1fb48f = _0x45b4c7.fromArray(GetEntityCoords(_0x39e129));
            _0xef5768 = GetInteriorAtCoords(_0x1fb48f.x, _0x1fb48f.y, _0x1fb48f.z - 2);
          }
          if (_0xef5768 == 0) {
            _0xef5768 = GetInteriorFromEntity(_0x39e129);
          }
          _0x49db66 = _0xf35f0d.get(_0xef5768);
          if (!_0x49db66) {
            return [2];
          }
          if (_0x49db66.ready) {
            if (_0x49db66.inside) {
              if (_0xef5768 == _0x333698) {
                _0x5079fd = GetRoomKeyFromEntity(_0x39e129);
                if (_0x5079fd == -1 || _0x5079fd == 0) {
                  _0x5079fd = _0x49db66.roomHash;
                }
                if (_0x5079fd != 0) {
                  _0x51e843 = _0x5079fd;
                }
                if (_0x51e843 != 0) {
                  ForceRoomForEntity(_0x39e129, _0x333698, _0x51e843);
                }
              } else {
                _0x333698 = _0xef5768;
              }
            }
          }
          return [2];
        });
      });
      return function _0xac30bc() {
        return _0x1093c5.apply(this, arguments);
      };
    }();
    var _0x4f25f5 = function () {
      var _0x2cdb5d = _0x1a2ef4(function (_0x37c0f7) {
        var _0x5c800f;
        return _0x3799a5(this, function (_0x48159d) {
          switch (_0x48159d.label) {
            case 0:
              _0x5c800f = PlayerPedId();
              _0x5c9c99 = _0x37c0f7;
              if (!_0x5c9c99) {
                return [3, 2];
              }
              if (_0x2cdcce != 0) {
                return [2];
              }
              return [4, _0x130ffd(_0x5c800f)];
            case 1:
              _0x2cdcce = _0x48159d.sent();
              _0x55ce36 = setTick(function () {
                _0x328b41(_0x5c800f);
              });
              _0x4cb965 = setTick(function () {
                _0x114fee();
              });
              return [3, 4];
            case 2:
              return [4, _0x1d14d3(_0x2cdcce, _0x5c800f)];
            case 3:
              _0x48159d.sent();
              _0x2cdcce = 0;
              clearTick(_0x55ce36);
              clearTick(_0x4cb965);
              _0x55ce36 = 0;
              _0x4cb965 = 0;
              return [2];
            case 4:
              return [2];
          }
        });
      });
      return function _0x1a7f8c(_0x3d0fd1) {
        return _0x2cdb5d.apply(this, arguments);
      };
    }();
    function _0x1d14d3(_0x46d658, _0x382f00) {
      return _0x8372cb.apply(this, arguments);
    }
    function _0x8372cb() {
      _0x8372cb = _0x1a2ef4(function (_0x64ed46, _0x3c85bb) {
        return _0x3799a5(this, function (_0x3c1536) {
          DestroyCam(_0x64ed46, false);
          RenderScriptCams(false, false, 3000, true, false);
          FreezeEntityPosition(_0x3c85bb, false);
          ApplyForceToEntityCenterOfMass(_0x3c85bb, 0, 0, 0, 0, false, false, false, false);
          SetEntityCollision(_0x3c85bb, true, true);
          ResetEntityAlpha(_0x3c85bb);
          SetPedCanRagdoll(_0x3c85bb, true);
          SetEntityVisible(_0x3c85bb, true, false);
          ClearPedTasksImmediately(_0x3c85bb);
          if (_0x4fd482 != new _0x45b4c7(0, 0, 0)) {
            SetEntityCoordsNoOffset(_0x3c85bb, _0x4fd482.x, _0x4fd482.y, _0x4fd482.z + 1, false, false, false);
          }
          if (_0x45299a != 0 && _0x44951f != 0) {
            ForceRoomForEntity(_0x3c85bb, _0x44951f, _0x45299a);
          }
          _0xc00ca3 = false;
          return [2];
        });
      });
      return _0x8372cb.apply(this, arguments);
    }
    function _0x130ffd(_0x5e2345) {
      return _0x3b322e.apply(this, arguments);
    }
    function _0x3b322e() {
      _0x3b322e = _0x1a2ef4(function (_0x14388f) {
        var _0x2ad07c;
        var _0x30194c;
        var _0x2a128a;
        var _0x4c1ca3;
        var _0x5ee8d6;
        return _0x3799a5(this, function (_0xa796bb) {
          _0x2ad07c = new _0x45b4c7().setFromArray(GetGameplayCamCoord());
          _0x30194c = new _0x45b4c7().setFromArray(GetGameplayCamRot(0));
          _0x2a128a = GetGameplayCamFov();
          _0x4c1ca3 = CreateCamWithParams("DEFAULT_SCRIPTED_CAMERA", _0x2ad07c.x, _0x2ad07c.y, _0x2ad07c.z, 0, 0, _0x30194c.z, _0x2a128a, true, 2);
          AttachCamToEntity(_0x4c1ca3, _0x14388f, 0, 0, 0, true);
          RenderScriptCams(true, false, 3000, true, false);
          FreezeEntityPosition(_0x14388f, true);
          SetEntityCollision(_0x14388f, false, false);
          SetEntityAlpha(_0x14388f, 0, false);
          SetPedCanRagdoll(_0x14388f, false);
          SetEntityVisible(_0x14388f, false, false);
          ClearPedTasksImmediately(_0x14388f);
          _0x5ee8d6 = GetEntityCoords(_0x14388f, false);
          _0x4fd482 = _0x45b4c7.fromArray(_0x5ee8d6);
          _0x45299a = GetRoomKeyFromEntity(_0x14388f);
          _0x44951f = GetInteriorFromEntity(_0x14388f);
          SetEntityCoordsNoOffset(_0x14388f, _0x5ee8d6[0], _0x5ee8d6[1], _0x5ee8d6[2] + 1, false, false, false);
          return [2, _0x4c1ca3];
        });
      });
      return _0x3b322e.apply(this, arguments);
    }
    function _0x1803ee(_0x3f47ba, _0x4cedd8, _0x4cb98e, _0x1c9edf, _0x158d08) {
      var _0x2ab0c3 = new _0x45b4c7(0, 0, 0);
      var _0x5fd91d = GetEntityCoords(_0x4cedd8, false);
      var _0x322950 = new _0x45b4c7(_0x5fd91d[0], _0x5fd91d[1], _0x5fd91d[2]);
      if (_0x3f47ba) {
        _0x2ab0c3 = _0x322950.addPlusScaler(_0x4cb98e, _0x1c9edf * _0x158d08);
      } else {
        _0x2ab0c3 = _0x322950.subPlusScaler(_0x4cb98e, _0x1c9edf * _0x158d08);
      }
      return _0x2ab0c3;
    }
    var _0x4686d1;
    var _0x44d5c6 = function () {
      var _0x21e4d2 = _0x1a2ef4(function (_0x5ceb13) {
        var _0x57b3db;
        var _0x53638e;
        var _0x53e5ec;
        var _0x3dc4b8;
        var _0x2597c9;
        var _0x528020;
        var _0x5d7035;
        var _0xc2e280;
        var _0x2a06d1;
        var _0x2d0b3c;
        var _0x57e7b1;
        var _0x206a8d;
        var _0x524b9e;
        return _0x3799a5(this, function (_0x479977) {
          switch (_0x479977.label) {
            case 0:
              _0x57b3db = GetInteriorFromPrimaryView();
              _0x53638e = _0xf35f0d.get(_0x57b3db);
              if (!_0xc00ca3) {
                return [3, 2];
              }
              if (_0x57b3db == 0) {
                return [2, _0x17cbe3(_0x333698, _0x5ceb13)];
              }
              return [4, _0x17cbe3(_0x57b3db, _0x5ceb13)];
            case 1:
              return [2, _0x479977.sent()];
            case 2:
              if (!_0x53638e || _0x57b3db == 0) {
                return [3, 13];
              }
              if (!_0x53638e.ready) {
                return [3, 12];
              }
              if (!_0x53638e.inside) {
                return [3, 12];
              }
              _0x53e5ec = _0x2b98da.get(_0x53638e.databaseID);
              if (!_0x53e5ec) {
                return [3, 10];
              }
              if (!_0x53e5ec.isApartment) {
                return [3, 7];
              }
              _0x4686d1 = _0x53e5ec;
              if (!_0x181a57) {
                return [3, 6];
              }
              if (!_0x181a57.apartmentInformation) {
                return [3, 6];
              }
              _0x3dc4b8 = _0x181a57.apartmentInformation.camPoints;
              return [4, _0x44e419(_0x5ceb13, _0x3dc4b8[0], _0x3dc4b8[1], _0x3dc4b8[2], _0x3dc4b8[3])];
            case 3:
              _0x2597c9 = _0x479977.sent();
              if (!!_0x2597c9) {
                return [3, 5];
              }
              _0x528020 = PlayerPedId();
              _0x5d7035 = GetKeyForEntityInRoom(_0x528020);
              if (_0x181a57.apartmentInformation.roomHash == _0x5d7035) {
                return [3, 5];
              }
              return [4, _0x4d76b3(_0x45b4c7.fromArray(GetEntityCoords(_0x528020)), _0x181a57.position, _0x3dc4b8)];
            case 4:
              _0xc2e280 = _0x479977.sent();
              if (_0xc2e280) {
                SetEntityCoordsNoOffset(_0x528020, _0xc2e280.x, _0xc2e280.y, _0xc2e280.z, false, false, false);
              }
              _0x479977.label = 5;
            case 5:
              return [2, _0x2597c9];
            case 6:
              return [3, 9];
            case 7:
              _0xc00ca3 = true;
              return [4, _0x17cbe3(_0x57b3db, _0x5ceb13)];
            case 8:
              return [2, _0x479977.sent()];
            case 9:
              return [3, 12];
            case 10:
              _0xc00ca3 = true;
              return [4, _0x17cbe3(_0x57b3db, _0x5ceb13)];
            case 11:
              return [2, _0x479977.sent()];
            case 12:
              return [3, 18];
            case 13:
              if (!_0x4686d1 || !_0x4686d1.isApartment) {
                return [3, 18];
              }
              _0x2a06d1 = _0x4686d1.apartmentInformation.camPoints;
              return [4, _0x44e419(_0x5ceb13, _0x2a06d1[0], _0x2a06d1[1], _0x2a06d1[2], _0x2a06d1[3])];
            case 14:
              _0x2d0b3c = _0x479977.sent();
              if (!!_0x2d0b3c && _0x57b3db != 0) {
                return [3, 17];
              }
              _0x57e7b1 = PlayerPedId();
              _0x206a8d = GetKeyForEntityInRoom(_0x57e7b1);
              if (_0x4686d1.apartmentInformation.roomHash == _0x206a8d) {
                return [3, 17];
              }
              return [4, _0x4d76b3(_0x45b4c7.fromArray(GetEntityCoords(_0x57e7b1)), _0x4686d1.position, _0x2a06d1)];
            case 15:
              _0x524b9e = _0x479977.sent();
              if (!_0x524b9e) {
                return [3, 17];
              }
              SetEntityCoordsNoOffset(_0x57e7b1, _0x524b9e.x, _0x524b9e.y, _0x524b9e.z, false, false, false);
              return [4, _0x23367b(_0x4686d1.databaseID)];
            case 16:
              _0x479977.sent();
              _0x479977.label = 17;
            case 17:
              return [2, _0x2d0b3c];
            case 18:
              return [2, true];
          }
        });
      });
      return function _0x5d6150(_0x48f3ea) {
        return _0x21e4d2.apply(this, arguments);
      };
    }();
    function _0x4d76b3(_0x607dc5, _0x13d252, _0x302775) {
      return _0xe450d5.apply(this, arguments);
    }
    function _0xe450d5() {
      _0xe450d5 = _0x1a2ef4(function (_0x3804e6, _0x374bc3, _0x15b3ef) {
        var _0x4ea7dc;
        var _0x2caf20;
        var _0x2769df;
        var _0x130393;
        var _0x4d5609;
        var _0x29a9c8;
        var _0x8c9772;
        var _0xe7c5f0;
        var _0x478818;
        var _0x2710ac;
        var _0x44fda9;
        return _0x3799a5(this, function (_0x1235b1) {
          switch (_0x1235b1.label) {
            case 0:
              _0x4ea7dc = new _0x4c82ed(_0x374bc3.x, _0x374bc3.y, _0x374bc3.z);
              _0x2caf20 = new _0x4c82ed(_0x3804e6.x, _0x3804e6.y, _0x3804e6.z);
              _0x2769df = _0x4ea7dc.subVectors(_0x4ea7dc, _0x2caf20);
              _0x130393 = _0x2769df.length();
              _0x2769df.normalize();
              _0x4d5609 = 4;
              _0x29a9c8 = _0x130393 / _0x4d5609;
              _0x8c9772 = undefined;
              _0xe7c5f0 = 20;
              _0x478818 = 0;
              _0x1235b1.label = 1;
            case 1:
              if (_0x478818 > _0x4d5609) {
                return [3, 4];
              }
              _0x2710ac = new _0x4c82ed().copy(_0x2caf20).addScaledVector(_0x2769df, _0x478818 * _0x29a9c8);
              return [4, _0x44e419(new _0x45b4c7(_0x2710ac.x, _0x2710ac.y, _0x2710ac.z), _0x15b3ef[0], _0x15b3ef[1], _0x15b3ef[2], _0x15b3ef[3])];
            case 2:
              if (_0x1235b1.sent()) {
                _0x44fda9 = _0x2caf20.distanceToSquared(_0x2710ac);
                if (_0x44fda9 < _0xe7c5f0) {
                  _0x8c9772 = _0x2710ac;
                  _0xe7c5f0 = _0x44fda9;
                }
              }
              _0x1235b1.label = 3;
            case 3:
              _0x478818++;
              return [3, 1];
            case 4:
              return [2, _0x8c9772];
          }
        });
      });
      return _0xe450d5.apply(this, arguments);
    }
    var _0x328b41 = function () {
      var _0x3aef87 = _0x1a2ef4(function (_0x1850c4) {
        var _0x562285;
        var _0x896e50;
        var _0x28efa8;
        var _0x2bd677;
        var _0x555a5c;
        var _0x3e231b;
        var _0x137879;
        var _0x397194;
        var _0x5a60f8;
        var _0x307a13;
        return _0x3799a5(this, function (_0xcb65aa) {
          if (!_0x3a6270) {
            return [2];
          }
          _0x562285 = GetCamMatrix(_0x2cdcce);
          _0x896e50 = new _0x45b4c7(_0x562285[1][0], _0x562285[1][1], _0x562285[1][2]);
          if (IsDisabledControlPressed(2, 17)) {
            _0x5a6905 = Math.min(_0x5a6905 + 0.1, _0x400977);
            _0x29709f(_0x5a6905);
          } else if (IsDisabledControlPressed(2, 16)) {
            _0x5a6905 = Math.max(0.1, _0x5a6905 - 0.1);
            _0x29709f(_0x5a6905);
          }
          _0x28efa8 = 1;
          if (IsDisabledControlPressed(2, 209)) {
            _0x28efa8 = 2;
          } else if (IsDisabledControlPressed(2, 19)) {
            _0x28efa8 = 4;
          } else if (IsDisabledControlPressed(2, 36)) {
            _0x28efa8 = 0.25;
          }
          if (IsDisabledControlPressed(2, 32)) {
            _0x2bd677 = _0x1803ee(true, _0x1850c4, _0x896e50, _0x5a6905, _0x28efa8);
            _0xddf5b6(_0x1850c4, _0x2bd677.x, _0x2bd677.y, _0x2bd677.z);
            _0x58bc41();
          } else if (IsDisabledControlPressed(2, 33)) {
            _0x555a5c = _0x1803ee(false, _0x1850c4, _0x896e50, _0x5a6905, _0x28efa8);
            _0xddf5b6(_0x1850c4, _0x555a5c.x, _0x555a5c.y, _0x555a5c.z);
            _0x58bc41();
          }
          if (IsDisabledControlPressed(2, 34)) {
            _0x3e231b = GetOffsetFromEntityInWorldCoords(_0x1850c4, -_0x5a6905 * _0x28efa8, 0, 0);
            _0xddf5b6(_0x1850c4, _0x3e231b[0], _0x3e231b[1], GetEntityCoords(_0x1850c4, false)[2]);
            _0x58bc41();
          } else if (IsDisabledControlPressed(2, 35)) {
            _0x137879 = GetOffsetFromEntityInWorldCoords(_0x1850c4, _0x5a6905 * _0x28efa8, 0, 0);
            _0xddf5b6(_0x1850c4, _0x137879[0], _0x137879[1], GetEntityCoords(_0x1850c4, false)[2]);
            _0x58bc41();
          }
          if (IsDisabledControlPressed(2, 51)) {
            _0x397194 = GetOffsetFromEntityInWorldCoords(_0x1850c4, 0, 0, _0x28efa8 * _0x5a6905 / 2);
            _0xddf5b6(_0x1850c4, _0x397194[0], _0x397194[1], _0x397194[2]);
            _0x58bc41();
          } else if (IsDisabledControlPressed(2, 52)) {
            _0x5a60f8 = GetOffsetFromEntityInWorldCoords(_0x1850c4, 0, 0, _0x28efa8 * -_0x5a6905 / 2);
            _0xddf5b6(_0x1850c4, _0x5a60f8[0], _0x5a60f8[1], _0x5a60f8[2]);
            _0x58bc41();
          }
          _0x307a13 = GetCamRot(_0x2cdcce, 2);
          SetEntityHeading(_0x1850c4, (360 + _0x307a13[2]) % 360);
          _0x590a0d();
          DisablePlayerFiring(PlayerId(), true);
          return [2];
        });
      });
      return function _0x53afa0(_0x5c73b5) {
        return _0x3aef87.apply(this, arguments);
      };
    }();
    function _0xddf5b6(_0x314bab, _0x444efd, _0x5968db, _0x2542ff) {
      return _0x2528db.apply(this, arguments);
    }
    function _0x2528db() {
      _0x2528db = _0x1a2ef4(function (_0x359baf, _0x40cb33, _0x4fb164, _0x120f21) {
        var _0xcf51;
        return _0x3799a5(this, function (_0x3ef318) {
          switch (_0x3ef318.label) {
            case 0:
              return [4, _0x44d5c6(new _0x45b4c7(_0x40cb33, _0x4fb164, _0x120f21))];
            case 1:
              _0xcf51 = _0x3ef318.sent();
              if (!_0xcf51) {
                return [2];
              }
              SetEntityCoordsNoOffset(_0x359baf, _0x40cb33, _0x4fb164, _0x120f21, false, false, false);
              return [2];
          }
        });
      });
      return _0x2528db.apply(this, arguments);
    }
    function _0x114fee() {
      if (!_0x3a6270) {
        return;
      }
      var _0x2f26f1 = GetDisabledControlNormal(0, 220);
      var _0x340dc7 = GetDisabledControlNormal(0, 221);
      var _0x99a93b = GetCamRot(_0x2cdcce, 2);
      var _0x1e2626 = _0x99a93b[2] + _0x2f26f1 * (-10 + _0x35563b);
      var _0x165f4c = _0x340dc7 * (-5 + _0x1448a2);
      var _0x3e3799 = _0x99a93b[0];
      if (_0x3e3799 + _0x165f4c > _0x2434da && _0x3e3799 + _0x165f4c < _0x171d5a) {
        _0x3e3799 = _0x99a93b[0] + _0x165f4c;
      }
      SetCamRot(_0x2cdcce, _0x3e3799, _0x99a93b[1], _0x1e2626, 2);
      var _0x2ff9f3 = GetCamRot(_0x2cdcce, 2);
      SetGameplayCamRelativeRotation(_0x2ff9f3[0], _0x2ff9f3[1], _0x2ff9f3[2]);
    }
    function _0x51d8bd() {
      return _0x31a53d.apply(this, arguments);
    }
    function _0x31a53d() {
      _0x31a53d = _0x1a2ef4(function () {
        var _0x9b36ef;
        var _0x122ef5;
        var _0x3b7df0;
        var _0x32ddf8;
        var _0x3e36c5;
        var _0x59b57d;
        var _0x5e7e39;
        var _0xd64ff3;
        return _0x3799a5(this, function (_0x14e9e2) {
          switch (_0x14e9e2.label) {
            case 0:
              if (!_0x6ada10 || _0x7d065) {
                return [2];
              }
              if (!_0x6ada10.interiorID) {
                return [2];
              }
              _0x9b36ef = _0xf35f0d.get(_0x6ada10.interiorID);
              if (!_0x9b36ef) {
                return [2];
              }
              if (_0x9b36ef.roomHash == 0 || _0x6ada10.interiorID == 0) {
                return [2];
              }
              _0x122ef5 = _0x9b36ef.roomHash;
              _0x3b7df0 = PlayerPedId();
              _0x32ddf8 = _0x45b4c7.fromArray(GetEntityCoords(_0x3b7df0));
              _0x3e36c5 = GetInteriorFromCollision(_0x32ddf8.x, _0x32ddf8.y, _0x32ddf8.z);
              if (!_0x6ada10.isApartment) {
                return [3, 5];
              }
              if (!_0x181a57) {
                return [2];
              }
              _0x122ef5 = _0x181a57.apartmentInformation.roomHash;
              if (_0x122ef5 == 0) {
                return [2];
              }
              if (_0x3e36c5 != 0 || _0x2cdcce == 0) {
                return [3, 4];
              }
              _0x59b57d = GetKeyForEntityInRoom(_0x3b7df0);
              if (_0x59b57d == 0) {
                ForceRoomForEntity(PlayerPedId(), _0x181a57.apartmentInformation.interiorID, _0x122ef5);
              }
              if (_0x59b57d == _0x122ef5) {
                return [3, 3];
              }
              ForceRoomForEntity(PlayerPedId(), _0x181a57.apartmentInformation.interiorID, _0x122ef5);
              _0x5e7e39 = _0x181a57.apartmentInformation.camPoints;
              return [4, _0x4d76b3(_0x45b4c7.fromArray(GetEntityCoords(_0x3b7df0)), _0x181a57.position, _0x5e7e39)];
            case 1:
              _0xd64ff3 = _0x14e9e2.sent();
              if (_0xd64ff3) {
                SetEntityCoordsNoOffset(_0x3b7df0, _0xd64ff3.x, _0xd64ff3.y, _0xd64ff3.z, false, false, false);
              }
              return [4, _0x23367b(_0x181a57.databaseID)];
            case 2:
              _0x14e9e2.sent();
              _0x14e9e2.label = 3;
            case 3:
              ForceRoomForEntity(PlayerPedId(), _0x181a57.apartmentInformation.interiorID, _0x122ef5);
              _0x14e9e2.label = 4;
            case 4:
              return [2];
            case 5:
              if (_0x3e36c5 != 0 && _0x3e36c5 == _0x6ada10.interiorID) {
                ForceRoomForEntity(PlayerPedId(), _0x6ada10.interiorID, _0x122ef5);
                _0x7d065 = true;
              }
              return [2];
          }
        });
      });
      return _0x31a53d.apply(this, arguments);
    }
    var _0x532187 = function () {
      var _0x3c1711 = _0x1a2ef4(function (_0x465874) {
        return _0x3799a5(this, function (_0xa9a433) {
          if (_0x465874 && _0x53a2fa == 0) {
            _0x53a2fa = setTick(function () {
              SendNUIMessage({
                action: "setCameraPosition",
                position: GetFinalRenderedCamCoord(),
                rotation: GetFinalRenderedCamRot(2)
              });
            });
          } else {
            clearTick(_0x53a2fa);
            _0x53a2fa = 0;
          }
          return [2, true];
        });
      });
      return function _0x54609d(_0x568884) {
        return _0x3c1711.apply(this, arguments);
      };
    }();
    ;
    var _0x220a1d = false;
    var _0x255afd = false;
    var _0x43786e = false;
    function _0xe35ea6(_0x4436e8) {
      _0x220a1d = _0x4436e8;
    }
    function _0x238dba(_0x30e71b) {
      _0x255afd = _0x30e71b;
    }
    function _0x38d9b6(_0x5e8b32) {
      _0x43786e = _0x5e8b32;
    }
    function _0x4ccaeb() {
      if (_0x220a1d || _0x255afd || _0x43786e) {
        return false;
      }
      return true;
    }
    ;
    function _0x1d47c7(_0x4b8875, _0x549ba0) {
      if (_0x549ba0 == null || _0x549ba0 > _0x4b8875.length) {
        _0x549ba0 = _0x4b8875.length;
      }
      for (var _0x35d040 = 0, _0x2e3b17 = new Array(_0x549ba0); _0x35d040 < _0x549ba0; _0x35d040++) {
        _0x2e3b17[_0x35d040] = _0x4b8875[_0x35d040];
      }
      return _0x2e3b17;
    }
    function _0x367795(_0x5bf1ec) {
      if (Array.isArray(_0x5bf1ec)) {
        return _0x5bf1ec;
      }
    }
    function _0x239862(_0x2ea3e8, _0xa1cf4c, _0xb49ce3, _0x2dd7b0, _0x12b62e, _0x229677, _0x16b379) {
      try {
        var _0x26f52a = _0x2ea3e8[_0x229677](_0x16b379);
        var _0x35cd31 = _0x26f52a.value;
      } catch (_0x49c330) {
        _0xb49ce3(_0x49c330);
        return;
      }
      if (_0x26f52a.done) {
        _0xa1cf4c(_0x35cd31);
      } else {
        Promise.resolve(_0x35cd31).then(_0x2dd7b0, _0x12b62e);
      }
    }
    function _0x7646f6(_0x1851d0) {
      return function () {
        var _0x35aba3 = this;
        var _0x73073d = arguments;
        return new Promise(function (_0x8f8d12, _0x4c02f6) {
          var _0x27b2e1 = _0x1851d0.apply(_0x35aba3, _0x73073d);
          function _0x4d8311(_0x4d30d0) {
            _0x239862(_0x27b2e1, _0x8f8d12, _0x4c02f6, _0x4d8311, _0x1b4e20, "next", _0x4d30d0);
          }
          function _0x1b4e20(_0x525b23) {
            _0x239862(_0x27b2e1, _0x8f8d12, _0x4c02f6, _0x4d8311, _0x1b4e20, "throw", _0x525b23);
          }
          _0x4d8311(undefined);
        });
      };
    }
    function _0x2acfdb(_0x24c31a, _0x41f21a) {
      var _0x1a936d = _0x24c31a == null ? null : typeof Symbol !== "undefined" && _0x24c31a[Symbol.iterator] || _0x24c31a["@@iterator"];
      if (_0x1a936d == null) {
        return;
      }
      var _0x15566d = [];
      var _0x2b4b89 = true;
      var _0x296d06 = false;
      var _0x41d8f8;
      var _0x1bebb2;
      try {
        for (_0x1a936d = _0x1a936d.call(_0x24c31a); !(_0x2b4b89 = (_0x41d8f8 = _0x1a936d.next()).done); _0x2b4b89 = true) {
          _0x15566d.push(_0x41d8f8.value);
          if (_0x41f21a && _0x15566d.length === _0x41f21a) {
            break;
          }
        }
      } catch (_0x2d7ba4) {
        _0x296d06 = true;
        _0x1bebb2 = _0x2d7ba4;
      } finally {
        try {
          if (!_0x2b4b89 && _0x1a936d.return != null) {
            _0x1a936d.return();
          }
        } finally {
          if (_0x296d06) {
            throw _0x1bebb2;
          }
        }
      }
      return _0x15566d;
    }
    function _0x42ff69() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x2f0658(_0x3e13c1, _0x34828a) {
      return _0x367795(_0x3e13c1) || _0x2acfdb(_0x3e13c1, _0x34828a) || _0x1957a0(_0x3e13c1, _0x34828a) || _0x42ff69();
    }
    function _0x1957a0(_0x27f8f8, _0x3dcf5e) {
      if (!_0x27f8f8) {
        return;
      }
      if (typeof _0x27f8f8 === "string") {
        return _0x1d47c7(_0x27f8f8, _0x3dcf5e);
      }
      var _0x1c9e49 = Object.prototype.toString.call(_0x27f8f8).slice(8, -1);
      if (_0x1c9e49 === "Object" && _0x27f8f8.constructor) {
        _0x1c9e49 = _0x27f8f8.constructor.name;
      }
      if (_0x1c9e49 === "Map" || _0x1c9e49 === "Set") {
        return Array.from(_0x1c9e49);
      }
      if (_0x1c9e49 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x1c9e49)) {
        return _0x1d47c7(_0x27f8f8, _0x3dcf5e);
      }
    }
    function _0x4233ba(_0x46b417, _0x14f2b1) {
      var _0x27a170;
      var _0x29015e;
      var _0x419409;
      var _0x406767;
      var _0x1e0f81 = {
        label: 0,
        sent: function () {
          if (_0x419409[0] & 1) {
            throw _0x419409[1];
          }
          return _0x419409[1];
        },
        trys: [],
        ops: []
      };
      _0x406767 = {
        next: _0x3aa77a(0),
        throw: _0x3aa77a(1),
        return: _0x3aa77a(2)
      };
      if (typeof Symbol === "function") {
        _0x406767[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x406767;
      function _0x3aa77a(_0x1ec3df) {
        return function (_0x57443a) {
          return _0x7f2031([_0x1ec3df, _0x57443a]);
        };
      }
      function _0x7f2031(_0x520cd0) {
        if (_0x27a170) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1e0f81) {
          try {
            _0x27a170 = 1;
            if (_0x29015e && (_0x419409 = _0x520cd0[0] & 2 ? _0x29015e.return : _0x520cd0[0] ? _0x29015e.throw || ((_0x419409 = _0x29015e.return) && _0x419409.call(_0x29015e), 0) : _0x29015e.next) && !(_0x419409 = _0x419409.call(_0x29015e, _0x520cd0[1])).done) {
              return _0x419409;
            }
            _0x29015e = 0;
            if (_0x419409) {
              _0x520cd0 = [_0x520cd0[0] & 2, _0x419409.value];
            }
            switch (_0x520cd0[0]) {
              case 0:
              case 1:
                _0x419409 = _0x520cd0;
                break;
              case 4:
                _0x1e0f81.label++;
                var _0x438b5e = {
                  value: _0x520cd0[1],
                  done: false
                };
                return _0x438b5e;
              case 5:
                _0x1e0f81.label++;
                _0x29015e = _0x520cd0[1];
                _0x520cd0 = [0];
                continue;
              case 7:
                _0x520cd0 = _0x1e0f81.ops.pop();
                _0x1e0f81.trys.pop();
                continue;
              default:
                if (!(_0x419409 = _0x1e0f81.trys, _0x419409 = _0x419409.length > 0 && _0x419409[_0x419409.length - 1]) && (_0x520cd0[0] === 6 || _0x520cd0[0] === 2)) {
                  _0x1e0f81 = 0;
                  continue;
                }
                if (_0x520cd0[0] === 3 && (!_0x419409 || _0x520cd0[1] > _0x419409[0] && _0x520cd0[1] < _0x419409[3])) {
                  _0x1e0f81.label = _0x520cd0[1];
                  break;
                }
                if (_0x520cd0[0] === 6 && _0x1e0f81.label < _0x419409[1]) {
                  _0x1e0f81.label = _0x419409[1];
                  _0x419409 = _0x520cd0;
                  break;
                }
                if (_0x419409 && _0x1e0f81.label < _0x419409[2]) {
                  _0x1e0f81.label = _0x419409[2];
                  _0x1e0f81.ops.push(_0x520cd0);
                  break;
                }
                if (_0x419409[2]) {
                  _0x1e0f81.ops.pop();
                }
                _0x1e0f81.trys.pop();
                continue;
            }
            _0x520cd0 = _0x14f2b1.call(_0x46b417, _0x1e0f81);
          } catch (_0x252151) {
            _0x520cd0 = [6, _0x252151];
            _0x29015e = 0;
          } finally {
            _0x27a170 = _0x419409 = 0;
          }
        }
        if (_0x520cd0[0] & 5) {
          throw _0x520cd0[1];
        }
        var _0x4a80be = {
          value: _0x520cd0[0] ? _0x520cd0[1] : undefined,
          done: true
        };
        return _0x4a80be;
      }
    }
    var _0xfaa47 = false;
    var _0x3e689d = new Map();
    var _0x3e3bc5 = false;
    var _0x2342e4 = false;
    var _0x5818e1 = 0;
    var _0x1d90cf = false;
    var _0x4d6aaa = "translate";
    var _0x3d453d = false;
    var _0x519d4d;
    function _0x54f0f6(_0x2827f2) {
      _0x38177e(_0x2827f2);
    }
    function _0x10a038(_0x4ee763) {
      _0x4d6aaa = _0x4ee763;
    }
    function _0x3401bb() {
      var _0x5eeb45 = settingsMemory.get("displayBorder");
      if (_0x5eeb45) {
        if (_0x5eeb45 == 0) {
          _0x54f0f6();
        } else {
          var _0x5a22f6 = 0;
          if ((_0x5a22f6 == 0 || _0x5a22f6 == null) && currentSelectedObject != 0) {
            _0x5a22f6 = currentSelectedObject;
          }
          if (_0x5a22f6) {
            if (!DoesEntityExist(_0x5a22f6)) {
              return;
            }
            setEntityOutline(_0x5a22f6);
          }
        }
      }
    }
    var _0x44e93f = function () {
      var _0x5eba29 = _0x7646f6(function (_0x29c7c6) {
        return _0x4233ba(this, function (_0x2a8749) {
          return [2, Math.round((_0x29c7c6 + Number.EPSILON) * 100) / 100];
        });
      });
      return function _0x5ab8cb(_0x239252) {
        return _0x5eba29.apply(this, arguments);
      };
    }();
    var _0x1e2c4a = function () {
      var _0x322bd9 = _0x7646f6(function () {
        var _0x2c1c28;
        return _0x4233ba(this, function (_0x84e71f) {
          _0x2c1c28 = _0x53e1f9;
          if (_0x2c1c28 == 0 || _0x43925e == undefined || _0x34a7cb != 0) {
            return [2];
          }
          _0x5933ff(_0x2c1c28, false);
          return [2];
        });
      });
      return function _0x13a48e() {
        return _0x322bd9.apply(this, arguments);
      };
    }();
    var _0x2be065 = function () {
      var _0x489c2c = _0x7646f6(function () {
        return _0x4233ba(this, function (_0x2fec77) {
          _0x5818e1 = new Date().getTime();
          _0x1d90cf = true;
          return [2];
        });
      });
      return function _0x363a66() {
        return _0x489c2c.apply(this, arguments);
      };
    }();
    var _0x37c912 = function () {
      var _0x2d68f0 = _0x7646f6(function (_0x32f6c9, _0x9617df) {
        var _0x513c1f;
        var _0xf3c034;
        var _0x1f9b87;
        var _0x30a8fb;
        var _0xad7cf1;
        var _0x4bbc24;
        var _0x207488;
        var _0x465894;
        var _0x502aad;
        var _0x27b699;
        var _0x323e79;
        var _0x1e0915;
        var _0x1d8fb8;
        var _0x11ea61;
        var _0x357b0f;
        var _0x5d6b14;
        var _0xcb64fc;
        var _0x1b718b;
        var _0x3ee362;
        var _0x15c7e3;
        var _0x10a8cc;
        var _0x20374f;
        var _0x37e323;
        var _0x452080;
        var _0x490d53;
        var _0x18a2da;
        var _0x2daa05;
        var _0x400892;
        var _0xa22d5e;
        var _0x46f495;
        var _0x458664;
        var _0x561e73;
        var _0xb50855;
        var _0x535845;
        var _0x58c168;
        var _0x395e49;
        var _0x23f964;
        return _0x4233ba(this, function (_0x3712ce) {
          switch (_0x3712ce.label) {
            case 0:
              _0x513c1f = _0x29e4a0 || 0;
              if (!_0x9617df && _0x29e4a0) {
                _0x54f0f6(_0x29e4a0);
                _0x288a7d(0);
              }
              if (!_0x9617df) {
                _0x3d453d = false;
                return [2];
              }
              if (_0x32f6c9 && _0x32f6c9 != 0) {
                _0x288a7d(_0x32f6c9);
                _0x513c1f = _0x32f6c9;
              }
              DisableControlAction(0, 24, true);
              _0xf3c034 = IsDisabledControlJustPressed(0, 24);
              if (!_0xf3c034 || !!_0x4b8ac4 || !_0x4ccaeb()) {
                return [3, 3];
              }
              _0x1f9b87 = GetDisabledControlNormal(0, 239);
              _0x30a8fb = GetDisabledControlNormal(0, 240);
              _0xad7cf1 = _0x2f0658(GetWorldCoordFromScreenCoord(_0x1f9b87, _0x30a8fb), 2);
              _0x4bbc24 = _0xad7cf1[0];
              _0x207488 = _0xad7cf1[1];
              _0x465894 = 30;
              _0x502aad = new _0x45b4c7(_0x4bbc24[0] + _0x207488[0] * _0x465894, _0x4bbc24[1] + _0x207488[1] * _0x465894, _0x4bbc24[2] + _0x207488[2] * _0x465894);
              return [4, _0x21bb12(_0x502aad, _0x2cdcce, -1)];
            case 1:
              _0x27b699 = _0x2f0658.apply(undefined, [_0x3712ce.sent(), 3]);
              _0x323e79 = _0x27b699[0];
              _0x1e0915 = _0x27b699[1];
              _0x1d8fb8 = _0x27b699[2];
              _0x11ea61 = _0x1d8fb8;
              _0x519d4d = _0x1e0915;
              _0x357b0f = _0x45b4c7.fromArray(GetEntityCoords(_0x11ea61, true));
              if (_0x357b0f.x == 0 && _0x357b0f.y == 0 && _0x357b0f.z == 0) {
                _0x11ea61 = 0;
              }
              return [4, _0x208b52(_0x11ea61)];
            case 2:
              _0x5d6b14 = _0x2f0658.apply(undefined, [_0x3712ce.sent(), 2]);
              _0xcb64fc = _0x5d6b14[0];
              _0x1b718b = _0x5d6b14[1];
              _0x3ee362 = _0x29e4a0 ?? _0x11ea61;
              _0x357b0f = _0x45b4c7.fromArray(GetEntityCoords(_0x3ee362, true));
              _0x15c7e3 = _0x2f0658(GetScreenCoordFromWorldCoord(_0x357b0f.x, _0x357b0f.y, _0x357b0f.z), 3);
              _0x10a8cc = _0x15c7e3[0];
              _0x20374f = _0x15c7e3[1];
              _0x37e323 = _0x15c7e3[2];
              _0x452080 = _0x2f0658(GetNuiCursorPosition(), 2);
              _0x490d53 = _0x452080[0];
              _0x18a2da = _0x452080[1];
              _0x2daa05 = _0x2f0658(GetActiveScreenResolution(), 2);
              _0x400892 = _0x2daa05[0];
              _0xa22d5e = _0x2daa05[1];
              _0x46f495 = (_0x490d53 - 0) / (_0x400892 - 0);
              _0x458664 = (_0x18a2da - 0) / (_0xa22d5e - 0);
              _0x561e73 = _0x200f99.get("gizmoXYArea");
              _0xb50855 = 0.06;
              if (_0x561e73 != null) {
                _0xb50855 = _0x561e73;
                if (_0xb50855 < 0.06) {
                  _0xb50855 = 0.06;
                }
                _0x535845 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), true));
                if (_0x4d6aaa == "rotate") {
                  _0xb50855 = _0xb50855 * 2;
                }
                _0x58c168 = _0x357b0f.getDistance(_0x535845);
                _0xb50855 = _0x561e73 + 1 / _0x58c168 * 0.15;
              }
              if (Math.abs(_0x20374f - _0x46f495) <= _0xb50855 && Math.abs(_0x37e323 - _0x458664) <= _0xb50855) {} else {
                _0x2342e4 = true;
                if (_0xcb64fc) {
                  if (_0x20374f == -1 || _0x37e323 == -1 || !_0x29e4a0) {
                    _0x513c1f = _0x11ea61;
                    _0x17e588(_0x513c1f, _0x1b718b);
                  } else {
                    _0x513c1f = _0x11ea61;
                    _0x17e588(_0x513c1f, _0x1b718b);
                  }
                } else {
                  _0x513c1f = 0;
                  _0x17e588(0, undefined);
                }
              }
              _0x3712ce.label = 3;
            case 3:
              if (IsDisabledControlJustReleased(0, 24)) {
                _0x2342e4 = false;
              }
              if (IsDisabledControlJustPressed(0, 22)) {
                _0x513c1f = 0;
                _0x17e588(0, undefined);
              }
              _0x395e49 = new Date().getTime();
              if (_0x395e49 - _0x5818e1 > 400 && !_0x1d90cf) {
                _0x1d90cf = true;
                if (_0x43925e != undefined) {
                  _0x1e2c4a();
                }
              }
              if (_0x513c1f === 0 && !_0x29e4a0) {
                return [2];
              }
              if (_0xfaa47) {
                return [2];
              }
              _0x23f964 = _0x200f99.get("displayBorder");
              if (_0x513c1f && _0x23f964 && _0x23f964 == 1) {
                _0x729824(_0x513c1f);
              }
              if (_0x513c1f !== _0x29e4a0) {
                if (_0x29e4a0) {
                  _0x54f0f6(_0x29e4a0);
                }
                _0x288a7d(_0x513c1f);
              }
              _0x3d453d = true;
              return [2];
          }
        });
      });
      return function _0x542e54(_0x45f6db, _0x22f1c4) {
        return _0x2d68f0.apply(this, arguments);
      };
    }();
    var _0x414997 = false;
    var _0x49bcef = function () {
      var _0x869355 = _0x7646f6(function (_0x5452bb, _0x2233e0) {
        var _0x1dca8d;
        var _0x3a47ca;
        var _0x65a1d;
        var _0x2d1c93;
        var _0x3b62e4;
        var _0x22b851;
        var _0x3fae9b;
        var _0x14fe79;
        var _0x57f54a;
        var _0x59791a;
        var _0x34a9af;
        return _0x4233ba(this, function (_0x546f73) {
          switch (_0x546f73.label) {
            case 0:
              _0x1dca8d = _0x5452bb.entity;
              if (_0x53e1f9) {
                if (_0x53e1f9 != _0x1dca8d) {
                  return [2];
                }
              }
              if (_0x43925e) {
                _0x3a47ca = _0x43925e.entityID;
                if (_0x1dca8d != _0x3a47ca) {
                  return [2];
                }
              }
              if (_0x34a7cb) {
                _0x3a47ca = _0x34a7cb;
              }
              if (!_0x3a47ca) {
                return [2];
              }
              _0x65a1d = new _0x45b4c7(_0x5452bb.position.x, _0x5452bb.position.y, _0x5452bb.position.z);
              _0x2d1c93 = new _0x45b4c7(_0x5452bb.rotation.x, _0x5452bb.rotation.y, _0x5452bb.rotation.z);
              _0x3b62e4 = _0x45b4c7.fromArray(GetEntityCoords(_0x3a47ca, true));
              _0x22b851 = GetInteriorFromPrimaryView();
              _0x3fae9b = _0xf35f0d.get(_0x22b851);
              _0x14fe79 = true;
              if (!_0x3fae9b) {
                return [3, 8];
              }
              if (!_0x3fae9b.ready) {
                return [3, 8];
              }
              if (!_0x3fae9b.inside) {
                return [3, 8];
              }
              _0x57f54a = _0x2b98da.get(_0x3fae9b.databaseID);
              if (!_0x57f54a) {
                return [3, 6];
              }
              if (!_0x57f54a.isApartment) {
                return [3, 3];
              }
              if (!_0x181a57) {
                return [3, 2];
              }
              if (!_0x181a57.apartmentInformation) {
                return [3, 2];
              }
              _0x59791a = _0x181a57.apartmentInformation.points;
              var _0xc5c6ca = {
                min: -0.1,
                max: 0.1
              };
              return [4, _0x44e419(_0x65a1d, _0x59791a[0], _0x59791a[1], _0x59791a[2], _0x59791a[3], _0xc5c6ca)];
            case 1:
              _0x14fe79 = _0x546f73.sent();
              _0x546f73.label = 2;
            case 2:
              return [3, 5];
            case 3:
              return [4, _0x17cbe3(_0x22b851, _0x65a1d)];
            case 4:
              _0x14fe79 = _0x546f73.sent();
              _0x546f73.label = 5;
            case 5:
              return [3, 8];
            case 6:
              return [4, _0x17cbe3(_0x22b851, _0x65a1d)];
            case 7:
              _0x14fe79 = _0x546f73.sent();
              _0x546f73.label = 8;
            case 8:
              if (!_0x14fe79) {
                SetEntityCoordsNoOffset(_0x3a47ca, _0x3b62e4.x, _0x3b62e4.y, _0x3b62e4.z, false, false, false);
                return [2];
              }
              if (!!_0x414997) {
                return [3, 11];
              }
              return [4, _0x4d6c18(_0x65a1d)];
            case 9:
              _0x414997 = _0x546f73.sent();
              if (!_0x414997) {
                return [3, 11];
              }
              _0x414997 = true;
              SetEntityCoordsNoOffset(_0x3a47ca, _0x3b62e4.x, _0x3b62e4.y, _0x3b62e4.z, false, false, false);
              return [4, _0x1988a6(_0x65a1d)];
            case 10:
              _0x546f73.sent();
              _0x414997 = false;
              return [2];
            case 11:
              SetEntityCoordsNoOffset(_0x3a47ca, _0x5452bb.position.x, _0x5452bb.position.y, _0x5452bb.position.z, false, false, false);
              SetEntityRotation(_0x3a47ca, _0x5452bb.rotation.x, _0x5452bb.rotation.y, _0x5452bb.rotation.z, 0, true);
              _0x3e689d.set(_0x3a47ca, {
                Rotation: _0x2d1c93,
                Quat: _0x21193b.fromArray(GetEntityQuaternion(_0x3a47ca)),
                pos: _0x65a1d
              });
              _0x34a9af = new Date().getTime();
              if (!_0x2342e4) {
                _0x5818e1 = _0x34a9af;
                _0x1d90cf = false;
              }
              _0x3b7f4c(_0x2233e0);
              return [2];
          }
        });
      });
      return function _0x326dbf(_0x33c90b, _0xa4ab5b) {
        return _0x869355.apply(this, arguments);
      };
    }();
    var _0x2adc67 = function () {
      var _0x21cc75 = _0x7646f6(function () {
        return _0x4233ba(this, function (_0x558516) {
          if (_0x34a7cb) {
            PlaceObjectOnGroundProperly(_0x34a7cb);
          }
          if (_0x53e1f9) {
            PlaceObjectOnGroundProperly(_0x53e1f9);
            _0x5933ff(_0x53e1f9, true);
          }
          _0x3b7f4c();
          return [2];
        });
      });
      return function _0x159db2() {
        return _0x21cc75.apply(this, arguments);
      };
    }();
    RegisterCommand("gizmoToggleSelection", function () {
      if (_0x29e4a0 || _0x3e3bc5) {
        _0x3e3bc5 = !_0x3e3bc5;
      }
    }, false);
    ;
    var _0x5bb0f1 = _0x5f5650(480);
    function _0x3172d4(_0x429774, _0x5ee794) {
      if (_0x5ee794 == null || _0x5ee794 > _0x429774.length) {
        _0x5ee794 = _0x429774.length;
      }
      for (var _0x93cd8b = 0, _0x55b15d = new Array(_0x5ee794); _0x93cd8b < _0x5ee794; _0x93cd8b++) {
        _0x55b15d[_0x93cd8b] = _0x429774[_0x93cd8b];
      }
      return _0x55b15d;
    }
    function _0x391a82(_0x4c1b6d) {
      if (Array.isArray(_0x4c1b6d)) {
        return _0x4c1b6d;
      }
    }
    function _0x11bf0d(_0x4f089b, _0x1b2367, _0x2118ff, _0x18a396, _0x292fc2, _0x46d265, _0x373820) {
      try {
        var _0x40c3b5 = _0x4f089b[_0x46d265](_0x373820);
        var _0x15152c = _0x40c3b5.value;
      } catch (_0x70fa8b) {
        _0x2118ff(_0x70fa8b);
        return;
      }
      if (_0x40c3b5.done) {
        _0x1b2367(_0x15152c);
      } else {
        Promise.resolve(_0x15152c).then(_0x18a396, _0x292fc2);
      }
    }
    function _0x19ee37(_0x4bb415) {
      return function () {
        var _0x501043 = this;
        var _0x377676 = arguments;
        return new Promise(function (_0x2ec21a, _0x1faa64) {
          var _0x32c04b = _0x4bb415.apply(_0x501043, _0x377676);
          function _0x23a9ce(_0x38f1df) {
            _0x11bf0d(_0x32c04b, _0x2ec21a, _0x1faa64, _0x23a9ce, _0x83faaa, "next", _0x38f1df);
          }
          function _0x83faaa(_0x1869ef) {
            _0x11bf0d(_0x32c04b, _0x2ec21a, _0x1faa64, _0x23a9ce, _0x83faaa, "throw", _0x1869ef);
          }
          _0x23a9ce(undefined);
        });
      };
    }
    function _0x242aa0(_0x4cf850, _0x3c01a0) {
      var _0x5e2151 = _0x4cf850 == null ? null : typeof Symbol !== "undefined" && _0x4cf850[Symbol.iterator] || _0x4cf850["@@iterator"];
      if (_0x5e2151 == null) {
        return;
      }
      var _0x5746af = [];
      var _0x5dc9a4 = true;
      var _0x21ecd0 = false;
      var _0x54680d;
      var _0x5c4d5b;
      try {
        for (_0x5e2151 = _0x5e2151.call(_0x4cf850); !(_0x5dc9a4 = (_0x54680d = _0x5e2151.next()).done); _0x5dc9a4 = true) {
          _0x5746af.push(_0x54680d.value);
          if (_0x3c01a0 && _0x5746af.length === _0x3c01a0) {
            break;
          }
        }
      } catch (_0x430d81) {
        _0x21ecd0 = true;
        _0x5c4d5b = _0x430d81;
      } finally {
        try {
          if (!_0x5dc9a4 && _0x5e2151.return != null) {
            _0x5e2151.return();
          }
        } finally {
          if (_0x21ecd0) {
            throw _0x5c4d5b;
          }
        }
      }
      return _0x5746af;
    }
    function _0x4d3bd9() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x3617db(_0x1f62c4, _0x4318a1) {
      return _0x391a82(_0x1f62c4) || _0x242aa0(_0x1f62c4, _0x4318a1) || _0x347aba(_0x1f62c4, _0x4318a1) || _0x4d3bd9();
    }
    function _0x347aba(_0x5509bd, _0x3acdc7) {
      if (!_0x5509bd) {
        return;
      }
      if (typeof _0x5509bd === "string") {
        return _0x3172d4(_0x5509bd, _0x3acdc7);
      }
      var _0x321e07 = Object.prototype.toString.call(_0x5509bd).slice(8, -1);
      if (_0x321e07 === "Object" && _0x5509bd.constructor) {
        _0x321e07 = _0x5509bd.constructor.name;
      }
      if (_0x321e07 === "Map" || _0x321e07 === "Set") {
        return Array.from(_0x321e07);
      }
      if (_0x321e07 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x321e07)) {
        return _0x3172d4(_0x5509bd, _0x3acdc7);
      }
    }
    function _0x3c5109(_0x2bce9c, _0x3544b7) {
      var _0x1ccfaf;
      var _0x523bd0;
      var _0x192743;
      var _0x1fc10a;
      var _0xaae6bb = {
        label: 0,
        sent: function () {
          if (_0x192743[0] & 1) {
            throw _0x192743[1];
          }
          return _0x192743[1];
        },
        trys: [],
        ops: []
      };
      _0x1fc10a = {
        next: _0x47828f(0),
        throw: _0x47828f(1),
        return: _0x47828f(2)
      };
      if (typeof Symbol === "function") {
        _0x1fc10a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x1fc10a;
      function _0x47828f(_0x5ada78) {
        return function (_0x5b8dc2) {
          return _0x5ed34e([_0x5ada78, _0x5b8dc2]);
        };
      }
      function _0x5ed34e(_0x54d45e) {
        if (_0x1ccfaf) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xaae6bb) {
          try {
            _0x1ccfaf = 1;
            if (_0x523bd0 && (_0x192743 = _0x54d45e[0] & 2 ? _0x523bd0.return : _0x54d45e[0] ? _0x523bd0.throw || ((_0x192743 = _0x523bd0.return) && _0x192743.call(_0x523bd0), 0) : _0x523bd0.next) && !(_0x192743 = _0x192743.call(_0x523bd0, _0x54d45e[1])).done) {
              return _0x192743;
            }
            _0x523bd0 = 0;
            if (_0x192743) {
              _0x54d45e = [_0x54d45e[0] & 2, _0x192743.value];
            }
            switch (_0x54d45e[0]) {
              case 0:
              case 1:
                _0x192743 = _0x54d45e;
                break;
              case 4:
                _0xaae6bb.label++;
                var _0x1fc3e3 = {
                  value: _0x54d45e[1],
                  done: false
                };
                return _0x1fc3e3;
              case 5:
                _0xaae6bb.label++;
                _0x523bd0 = _0x54d45e[1];
                _0x54d45e = [0];
                continue;
              case 7:
                _0x54d45e = _0xaae6bb.ops.pop();
                _0xaae6bb.trys.pop();
                continue;
              default:
                if (!(_0x192743 = _0xaae6bb.trys, _0x192743 = _0x192743.length > 0 && _0x192743[_0x192743.length - 1]) && (_0x54d45e[0] === 6 || _0x54d45e[0] === 2)) {
                  _0xaae6bb = 0;
                  continue;
                }
                if (_0x54d45e[0] === 3 && (!_0x192743 || _0x54d45e[1] > _0x192743[0] && _0x54d45e[1] < _0x192743[3])) {
                  _0xaae6bb.label = _0x54d45e[1];
                  break;
                }
                if (_0x54d45e[0] === 6 && _0xaae6bb.label < _0x192743[1]) {
                  _0xaae6bb.label = _0x192743[1];
                  _0x192743 = _0x54d45e;
                  break;
                }
                if (_0x192743 && _0xaae6bb.label < _0x192743[2]) {
                  _0xaae6bb.label = _0x192743[2];
                  _0xaae6bb.ops.push(_0x54d45e);
                  break;
                }
                if (_0x192743[2]) {
                  _0xaae6bb.ops.pop();
                }
                _0xaae6bb.trys.pop();
                continue;
            }
            _0x54d45e = _0x3544b7.call(_0x2bce9c, _0xaae6bb);
          } catch (_0x2e52a3) {
            _0x54d45e = [6, _0x2e52a3];
            _0x523bd0 = 0;
          } finally {
            _0x1ccfaf = _0x192743 = 0;
          }
        }
        if (_0x54d45e[0] & 5) {
          throw _0x54d45e[1];
        }
        var _0x1f0fc6 = {
          value: _0x54d45e[0] ? _0x54d45e[1] : undefined,
          done: true
        };
        return _0x1f0fc6;
      }
    }
    var _0x2f6743 = new _0x1eb068();
    var _0x1fce82 = new Map();
    var _0x1d6e5c = [];
    var _0x5a951b = false;
    function _0x429a4d() {
      return _0x16f34d.apply(this, arguments);
    }
    function _0x16f34d() {
      _0x16f34d = _0x19ee37(function () {
        return _0x3c5109(this, function (_0x1a43bc) {
          return [2];
        });
      });
      return _0x16f34d.apply(this, arguments);
    }
    var _0x5770b0 = function () {
      var _0xdabccc = _0x19ee37(function (_0x4cbd8a) {
        var _0x50b24e;
        var _0x36a70e;
        return _0x3c5109(this, function (_0x2f00ca) {
          if (_0x4cbd8a.parent) {
            _0x50b24e = _0x4cbd8a.lead;
            if (_0x50b24e) {
              _0x36a70e = _0x2b98da.get(_0x50b24e);
              if (_0x36a70e) {
                return [2, _0x36a70e];
              }
            }
          }
          return [2];
        });
      });
      return function _0x118957(_0x1fce0d) {
        return _0xdabccc.apply(this, arguments);
      };
    }();
    var _0x14988b = function () {
      var _0x41144a = _0x19ee37(function (_0x1e202e, _0x3010c1, _0x1a8595, _0xf3a930, _0x26e233, _0x2ed698, _0x2d36a7) {
        var _0x565faa;
        var _0x1914fa;
        var _0x28e8ba;
        var _0x348bf3;
        var _0x30dd9e;
        var _0x3cd104;
        var _0x54bb0a;
        var _0x4b16f6;
        var _0x2e63ab;
        var _0x18f44b;
        var _0x1474af;
        var _0x399355;
        var _0x213990;
        var _0x580a5a;
        var _0x350130;
        var _0x283d2c;
        var _0x2827d6;
        var _0x36e456;
        var _0x5a6122;
        var _0x374eff;
        var _0x1ffcd0;
        var _0x4f9603;
        var _0x3cef36;
        var _0x4a0c74;
        var _0x2a8730;
        var _0x79558b;
        var _0xf345de;
        var _0x310e1f;
        var _0xd1e86a;
        var _0x166046;
        var _0x2a0480;
        var _0x338842;
        return _0x3c5109(this, function (_0x5218e9) {
          switch (_0x5218e9.label) {
            case 0:
              _0x1914fa = _0x4a89e0.bind;
              _0x28e8ba = [undefined, _0x3010c1, _0x1a8595, _0x1e202e, undefined, undefined];
              return [4, _0x44c27f()];
            case 1:
              _0x565faa = new (_0x1914fa.apply(_0x4a89e0, _0x28e8ba.concat([_0x5218e9.sent(), _0x26e233 ?? "default", false, false, -1, false, _0x2ed698])))();
              if (!!_0x2d36a7) {
                return [3, 3];
              }
              return [4, _0x565faa.GetDimForModel()];
            case 2:
              _0x5218e9.sent();
              _0x5218e9.label = 3;
            case 3:
              if (!_0xf3a930) {
                _0x348bf3 = true;
                _0x30dd9e = false;
                _0x3cd104 = undefined;
                try {
                  for (_0x54bb0a = _0x4c08c6.entries()[Symbol.iterator](); !(_0x348bf3 = (_0x4b16f6 = _0x54bb0a.next()).done); _0x348bf3 = true) {
                    _0x2e63ab = _0x3617db(_0x4b16f6.value, 2);
                    _0x18f44b = _0x2e63ab[0];
                    _0x1474af = _0x2e63ab[1];
                    if (_0x1474af.interiorCheckPlayer()) {
                      if (_0x1474af.isApartment) {
                        _0x399355 = GetRoomKeyFromEntity(_0x565faa.entityID);
                        if (_0x399355 == 0) {
                          _0x399355 = GetRoomKeyFromEntity(PlayerPedId());
                          if (_0x399355 == 0) {
                            emit("DoLongHudText", "Could not find room to place object correctly.", 2);
                            return [2];
                          }
                        }
                        if (_0x1474af.apartmentInformation.roomHash != 0 && _0x1474af.apartmentInformation.roomHash == _0x399355) {
                          _0xf3a930 = _0x1474af.databaseID;
                          _0x565faa.lead = _0xf3a930;
                          _0x565faa.isChildOfNonLoad = true;
                        }
                      } else {
                        _0xf3a930 = _0x1474af.databaseID;
                        _0x565faa.lead = _0xf3a930;
                        _0x565faa.isChildOfNonLoad = true;
                      }
                    }
                  }
                } catch (_0x5b2cbb) {
                  _0x30dd9e = true;
                  _0x3cd104 = _0x5b2cbb;
                } finally {
                  try {
                    if (!_0x348bf3 && _0x54bb0a.return != null) {
                      _0x54bb0a.return();
                    }
                  } finally {
                    if (_0x30dd9e) {
                      throw _0x3cd104;
                    }
                  }
                }
                if (!_0xf3a930) {
                  _0xf3a930 = _0x7f8b0a.keys().next().value;
                }
              }
              if (!_0x565faa.lead) {
                return [3, 10];
              }
              _0x565faa.checkModelName();
              _0x213990 = _0xebd538("limits");
              if (_0x213990 == null) {
                return [2];
              }
              _0x580a5a = _0x213990.totalLimitOfObjects;
              return [4, _0x5b882a(_0x565faa.lead)];
            case 4:
              _0x350130 = _0x3617db.apply(undefined, [_0x5218e9.sent(), 2]);
              _0x283d2c = _0x350130[0];
              _0x2827d6 = _0x350130[1];
              if (_0x283d2c + _0x2827d6 + 1 >= _0x580a5a) {
                emit("DoLongHudText", "You have reached the limit for objects on this current room or void.", 2);
                return [2];
              }
              if (!!_0xb24b3.has(_0x565faa.model)) {
                return [3, 6];
              }
              return [4, _0x12a6d6(_0x565faa.model)];
            case 5:
              _0x5218e9.sent();
              _0x5218e9.label = 6;
            case 6:
              if (_0x565faa.model !== _0x82bcf2) {
                return [3, 8];
              }
              return [4, _0x5f26af(_0x565faa.lead)];
            case 7:
              _0x36e456 = _0x5218e9.sent();
              if (_0x36e456) {
                emit("DoLongHudText", "You already have a spawn set in this property.", 2);
                return [2];
              }
              _0x5218e9.label = 8;
            case 8:
              _0x5a6122 = _0xb24b3.get(_0x565faa.model);
              if (!_0x5a6122) {
                return [3, 10];
              }
              return [4, _0x549a5a(_0x565faa.lead)];
            case 9:
              _0x374eff = _0x5218e9.sent();
              if (_0x374eff) {
                _0x1ffcd0 = true;
                _0x4f9603 = false;
                _0x3cef36 = undefined;
                try {
                  for (_0x4a0c74 = _0x374eff[Symbol.iterator](); !(_0x1ffcd0 = (_0x2a8730 = _0x4a0c74.next()).done); _0x1ffcd0 = true) {
                    _0x79558b = _0x3617db(_0x2a8730.value, 2);
                    _0xf345de = _0x79558b[0];
                    _0x310e1f = _0x79558b[1];
                    _0xd1e86a = _0x213990[_0xf345de];
                    if (!_0xd1e86a) {
                      continue;
                    }
                    _0x166046 = _0x310e1f;
                    if (_0x5a6122.name == _0xf345de) {
                      _0x166046++;
                      if (_0xd1e86a && _0x166046 > _0xd1e86a) {
                        emit("DoLongHudText", "You have reached the limit this type of object.", 2);
                        return [2];
                      }
                    }
                  }
                } catch (_0x54a5fe) {
                  _0x4f9603 = true;
                  _0x3cef36 = _0x54a5fe;
                } finally {
                  try {
                    if (!_0x1ffcd0 && _0x4a0c74.return != null) {
                      _0x4a0c74.return();
                    }
                  } finally {
                    if (_0x4f9603) {
                      throw _0x3cef36;
                    }
                  }
                }
              }
              _0x5218e9.label = 10;
            case 10:
              if (_0xf3a930) {
                _0x565faa.parent = _0xf3a930;
              }
              if (!_0x565faa.parent) {
                return [3, 12];
              }
              _0x2a0480 = 0;
              return [4, _0x30e93e(_0x565faa.parent)];
            case 11:
              _0x338842 = _0x5218e9.sent();
              if (_0x338842 && _0x338842 != -1) {
                _0x2a0480 = _0x338842;
              }
              _0x565faa.groupIndex = _0x2a0480;
              _0x5218e9.label = 12;
            case 12:
              return [4, _0x565faa.CheckIsChildOfNonLoad()];
            case 13:
              _0x5218e9.sent();
              return [4, _0x1fb1f6.get()];
            case 14:
              _0x5218e9.sent();
              return [2, _0x565faa];
          }
        });
      });
      return function _0x24f78f(_0x55c7cf, _0x2a4b33, _0x4bc8e4, _0x3353c6, _0x5f4ef7, _0x3ab33d, _0x158f53) {
        return _0x41144a.apply(this, arguments);
      };
    }();
    var _0x25c455 = function () {
      var _0x41651d = _0x19ee37(function (_0x7e3e7b, _0x3a8ff3, _0x650fdb, _0x76827d) {
        var _0x54ba9;
        return _0x3c5109(this, function (_0x1306f6) {
          _0x54ba9 = _0x1fce82.get(_0x7e3e7b);
          if (!_0x54ba9) {
            if (_0x650fdb) {
              var _0x28b908 = {
                databaseID: _0x7e3e7b,
                objectState: _0x650fdb
              };
              _0x54ba9 = _0x28b908;
            }
          }
          if (!_0x54ba9) {
            var _0x3606d0 = {
              databaseID: _0x7e3e7b
            };
            _0x54ba9 = _0x3606d0;
          }
          if (_0x650fdb) {
            _0x54ba9.objectState = _0x650fdb;
          }
          switch (_0x3a8ff3) {
            case "creation":
              _0x54ba9.creation = true;
              if (_0x76827d) {
                _0x54ba9.creation = false;
              }
              break;
            case "remove":
              _0x54ba9.removed = true;
              if (_0x76827d) {
                _0x54ba9.removed = false;
              }
              break;
            case "update":
              _0x54ba9.update = true;
              break;
          }
          _0x92ed1f(_0x54ba9);
          _0x1fce82.set(_0x7e3e7b, _0x54ba9);
          _0x32f58b(true);
          return [2];
        });
      });
      return function _0x5e9004(_0x242afd, _0x5181be, _0x1ed3b1, _0x4d87ef) {
        return _0x41651d.apply(this, arguments);
      };
    }();
    var _0x1885b5 = function () {
      var _0x313f81 = _0x19ee37(function (_0x50bbc4, _0x14290a, _0x3af55e, _0x50e864, _0x2966e3, _0x5bb260, _0x46fdfc) {
        var _0x12a593;
        var _0x79b7d0;
        var _0x4f4a8d;
        return _0x3c5109(this, function (_0x136472) {
          switch (_0x136472.label) {
            case 0:
              _0x12a593 = false;
              if (_0x50bbc4.substring(0, 5) == "DUMMY") {
                _0x12a593 = true;
              }
              if (!IsModelValid(_0x50bbc4) && !_0x12a593) {
                return [3, 3];
              }
              return [4, _0x14988b(_0x50bbc4, _0x14290a, _0x3af55e, _0x50e864, _0x2966e3, _0x5bb260, _0x12a593)];
            case 1:
              _0x79b7d0 = _0x136472.sent();
              if (!_0x79b7d0) {
                return [2];
              }
              _0x4f4a8d = function () {
                var _0x59ea59 = _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x2d090a) {
                    switch (_0x2d090a.label) {
                      case 0:
                        _0x2b98da.set(_0x79b7d0.databaseID, _0x79b7d0);
                        return [4, _0x46004c(_0x79b7d0, 1)];
                      case 1:
                        _0x2d090a.sent();
                        if (!_0x12a593 && !_0x46fdfc) {
                          _0x79b7d0.shouldRender(true);
                        }
                        _0x4aefda();
                        return [4, _0x25c455(_0x79b7d0.databaseID, "creation", _0x79b7d0)];
                      case 2:
                        _0x2d090a.sent();
                        _0x848780.reset();
                        _0x848780.get();
                        return [2];
                    }
                  });
                });
                return function _0x55033b() {
                  return _0x59ea59.apply(this, arguments);
                };
              }();
              return [4, _0x4f4a8d()];
            case 2:
              _0x136472.sent();
              _0x2f6743.add({
                undo: _0x19ee37(function () {
                  var _0x1787d7;
                  return _0x3c5109(this, function (_0xc84399) {
                    switch (_0xc84399.label) {
                      case 0:
                        _0x1787d7 = _0x2b98da.get(_0x79b7d0.databaseID);
                        if (!_0x1787d7) {
                          return [3, 2];
                        }
                        if (!_0x12a593) {
                          _0x1787d7.shouldRender(false);
                        }
                        _0xb262e(_0x1787d7);
                        _0x2b98da.delete(_0x79b7d0.databaseID);
                        _0x4aefda();
                        return [4, _0x25c455(_0x79b7d0.databaseID, "creation", undefined, true)];
                      case 1:
                        _0xc84399.sent();
                        _0x848780.reset();
                        _0x848780.get();
                        _0xc84399.label = 2;
                      case 2:
                        return [2];
                    }
                  });
                }),
                redo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x3a25e4) {
                    switch (_0x3a25e4.label) {
                      case 0:
                        return [4, _0x4f4a8d()];
                      case 1:
                        _0x3a25e4.sent();
                        return [2];
                    }
                  });
                })
              });
              return [2, _0x79b7d0];
            case 3:
              _0x5bb0f1.log("(EDITOR) ERROR: Invalid Model For Creation. #IMC");
              return [2];
            case 4:
              return [2];
          }
        });
      });
      return function _0x53ccb2(_0x1bed35, _0x644e08, _0x3dcc93, _0x396002, _0x59e20c, _0x3c7c30, _0x1a739f) {
        return _0x313f81.apply(this, arguments);
      };
    }();
    var _0x14d527 = function () {
      var _0x42a2c7 = _0x19ee37(function (_0x3872f8, _0x3c23ea, _0x293d3b, _0x53b47c) {
        var _0x14421c;
        var _0x5275ca;
        var _0x57875d;
        var _0x3a49d4;
        var _0x27b95d;
        var _0x1405d8;
        var _0x3174e5;
        return _0x3c5109(this, function (_0x54f3e5) {
          switch (_0x54f3e5.label) {
            case 0:
              _0x14421c = _0x2b98da.get(_0x3872f8);
              if (!_0x14421c) {
                return [3, 2];
              }
              _0x5275ca = _0x14421c.position;
              _0x57875d = _0x14421c.quat;
              _0x3a49d4 = new _0x21193b(+_0x293d3b.x.toFixed(14), +_0x293d3b.y.toFixed(14), +_0x293d3b.z.toFixed(14), +_0x293d3b.w.toFixed(14));
              _0x27b95d = new _0x45b4c7(+_0x3c23ea.x.toFixed(14), +_0x3c23ea.y.toFixed(14), +_0x3c23ea.z.toFixed(14));
              _0x1405d8 = false;
              _0x3174e5 = _0x3e689d.get(_0x14421c.entityID);
              if (_0x53b47c) {
                _0x1405d8 = true;
              } else {
                if (_0x3174e5 && _0x3174e5.Quat) {
                  _0x3a49d4 = _0x3174e5.Quat;
                  _0x1405d8 = true;
                }
                if (_0x3174e5 && _0x3174e5.pos) {
                  _0x27b95d = _0x3174e5.pos;
                  _0x1405d8 = true;
                }
              }
              if (!_0x1405d8) {
                return [2];
              }
              if (_0x5275ca.equals(_0x27b95d) && _0x57875d.equals(_0x3a49d4)) {
                return [2];
              }
              _0x14421c.updateObject(_0x27b95d, _0x3a49d4);
              return [4, _0x25c455(_0x3872f8, "update", _0x14421c)];
            case 1:
              _0x54f3e5.sent();
              _0x3b7f4c();
              _0x2f6743.add({
                undo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x1cbe23) {
                    switch (_0x1cbe23.label) {
                      case 0:
                        _0x14421c.updateObject(_0x5275ca, _0x57875d);
                        return [4, _0x25c455(_0x3872f8, "update", _0x14421c)];
                      case 1:
                        _0x1cbe23.sent();
                        _0x4c8712();
                        return [2];
                    }
                  });
                }),
                redo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x4263bf) {
                    switch (_0x4263bf.label) {
                      case 0:
                        _0x14421c.updateObject(_0x27b95d, _0x3a49d4);
                        return [4, _0x25c455(_0x3872f8, "update", _0x14421c)];
                      case 1:
                        _0x4263bf.sent();
                        _0x4c8712();
                        return [2];
                    }
                  });
                })
              });
              return [3, 3];
            case 2:
              _0x5bb0f1.log("(EDITOR) ERROR: Missing Object For Update. #UE");
              _0x54f3e5.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x4eab38(_0xae3f20, _0x54995d, _0x137fc6, _0x1b3b6b) {
        return _0x42a2c7.apply(this, arguments);
      };
    }();
    var _0x3f0777 = function () {
      var _0x330541 = _0x19ee37(function (_0x46d200) {
        var _0x39bdee;
        return _0x3c5109(this, function (_0x3b1b00) {
          switch (_0x3b1b00.label) {
            case 0:
              _0x39bdee = _0x2b98da.get(_0x46d200);
              if (!_0x39bdee) {
                return [3, 2];
              }
              return [4, _0x25c455(_0x46d200, "update", _0x39bdee)];
            case 1:
              _0x3b1b00.sent();
              _0x2f6743.add({
                undo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x4aefb7) {
                    switch (_0x4aefb7.label) {
                      case 0:
                        _0x4c8712();
                        return [4, _0x25c455(_0x46d200, "update", _0x39bdee)];
                      case 1:
                        _0x4aefb7.sent();
                        _0x4c8712();
                        return [2];
                    }
                  });
                }),
                redo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x3f768a) {
                    switch (_0x3f768a.label) {
                      case 0:
                        _0x4c8712();
                        return [4, _0x25c455(_0x46d200, "update", _0x39bdee)];
                      case 1:
                        _0x3f768a.sent();
                        _0x4c8712();
                        return [2];
                    }
                  });
                })
              });
              return [3, 3];
            case 2:
              _0x5bb0f1.log("(EDITOR) ERROR: Missing Object For Update. #UO");
              _0x3b1b00.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x57389a(_0xf251d8) {
        return _0x330541.apply(this, arguments);
      };
    }();
    var _0x29785c = function () {
      var _0x275e3d = _0x19ee37(function (_0x3fcc25) {
        var _0x5cf7d0;
        var _0x1e84f0;
        return _0x3c5109(this, function (_0x4a5bdd) {
          switch (_0x4a5bdd.label) {
            case 0:
              _0x5cf7d0 = _0x2b98da.get(_0x3fcc25);
              if (!_0x5cf7d0) {
                return [3, 5];
              }
              _0x1e84f0 = _0x5cf7d0.model.split(/\s*:\s*/);
              if (_0x1e84f0[0] != "DUMMY") {
                return [3, 3];
              }
              if (_0x1e84f0[1] != "ROOM") {
                return [3, 2];
              }
              return [4, _0xd4327d(_0x3fcc25)];
            case 1:
              return [2, _0x4a5bdd.sent()];
            case 2:
              return [2];
            case 3:
              return [4, _0xd4327d(_0x3fcc25)];
            case 4:
              return [2, _0x4a5bdd.sent()];
            case 5:
              return [2];
          }
        });
      });
      return function _0x5871eb(_0x171329) {
        return _0x275e3d.apply(this, arguments);
      };
    }();
    var _0x5bc865 = [];
    var _0xd4327d = function () {
      var _0x4f5cb6 = _0x19ee37(function (_0x44e6d9) {
        var _0x2b8ea9;
        var _0x440123;
        var _0x41f4e4;
        var _0x510bdb;
        var _0x5ed5ba;
        var _0x4ad9db;
        var _0x2d27b6;
        return _0x3c5109(this, function (_0x25bfca) {
          switch (_0x25bfca.label) {
            case 0:
              _0x2b8ea9 = _0x2b98da.get(_0x44e6d9);
              if (!_0x2b8ea9) {
                return [3, 3];
              }
              if (_0x4cd1fb(_0x2b8ea9.databaseID) != false) {
                return [3, 2];
              }
              _0x5bc865 = [];
              _0x5bc865.push(_0x44e6d9);
              return [4, _0x136df5(_0x2b8ea9.databaseID)];
            case 1:
              _0x440123 = _0x25bfca.sent();
              _0x5bc865 = [];
              if (_0x440123) {
                if (_0x440123.includes("kill")) {
                  return [2];
                }
                _0x41f4e4 = new Map();
                for (_0x510bdb = 0; _0x510bdb < _0x440123.length; _0x510bdb++) {
                  _0x5ed5ba = _0x440123[_0x510bdb];
                  _0x4ad9db = _0x2b98da.get(_0x5ed5ba);
                  if (_0x4ad9db) {
                    _0x41f4e4.set(_0x5ed5ba, _0x4ad9db);
                  }
                }
                _0x2d27b6 = function () {
                  var _0x439555 = _0x19ee37(function () {
                    var _0x138b5a;
                    var _0x4ef520;
                    var _0x5a43ea;
                    return _0x3c5109(this, function (_0x2b0b23) {
                      switch (_0x2b0b23.label) {
                        case 0:
                          _0x138b5a = 0;
                          _0x2b0b23.label = 1;
                        case 1:
                          if (_0x138b5a >= _0x440123.length) {
                            return [3, 7];
                          }
                          _0x4ef520 = _0x440123[_0x138b5a];
                          _0x5a43ea = _0x2b98da.get(_0x4ef520);
                          if (!_0x5a43ea) {
                            return [3, 6];
                          }
                          return [4, _0x5a43ea.getCurrentConnectionData()];
                        case 2:
                          if (_0x2b0b23.sent().length < 1) {
                            return [3, 4];
                          }
                          _0x5a43ea.stopAll();
                          if (!_0x5a43ea.model.includes("DUMMY:ROOM")) {
                            return [3, 4];
                          }
                          return [4, _0x4fae5d(_0x5a43ea)];
                        case 3:
                          _0x2b0b23.sent();
                          _0x2b0b23.label = 4;
                        case 4:
                          _0x5a43ea.shouldRender(false);
                          _0xb262e(_0x5a43ea);
                          _0x2b98da.delete(_0x5a43ea.databaseID);
                          return [4, _0x25c455(_0x5a43ea.databaseID, "remove", _0x5a43ea)];
                        case 5:
                          _0x2b0b23.sent();
                          _0x2b0b23.label = 6;
                        case 6:
                          _0x138b5a++;
                          return [3, 1];
                        case 7:
                          _0x848780.reset();
                          _0x848780.get();
                          _0x4aefda();
                          _0x520c78();
                          return [2];
                      }
                    });
                  });
                  return function _0x74b291() {
                    return _0x439555.apply(this, arguments);
                  };
                }();
                _0x2d27b6();
                _0x2f6743.add({
                  undo: _0x19ee37(function () {
                    var _0x1de99f;
                    var _0x2bb7b6;
                    var _0x371608;
                    var _0xacff1b;
                    var _0x28ac1f;
                    var _0x435c26;
                    var _0x71ba3f;
                    var _0x4d69ea;
                    return _0x3c5109(this, function (_0x2dbad8) {
                      switch (_0x2dbad8.label) {
                        case 0:
                          _0x1de99f = [];
                          _0x2bb7b6 = 0;
                          _0x2dbad8.label = 1;
                        case 1:
                          if (_0x2bb7b6 >= _0x440123.length) {
                            return [3, 4];
                          }
                          _0x371608 = _0x440123[_0x2bb7b6];
                          _0xacff1b = _0x41f4e4.get(_0x371608);
                          if (!_0xacff1b) {
                            return [3, 3];
                          }
                          _0x2b8ea9.navagation = false;
                          if (_0x2b8ea9.lead && _0x1de99f.includes(_0x2b8ea9.lead) == false) {
                            _0x1de99f.push(_0x2b8ea9.lead);
                          }
                          _0x2b98da.set(_0xacff1b.databaseID, _0xacff1b);
                          _0xacff1b.shouldRender(true);
                          return [4, _0x25c455(_0xacff1b.databaseID, "remove", _0xacff1b, true)];
                        case 2:
                          _0x2dbad8.sent();
                          _0x2dbad8.label = 3;
                        case 3:
                          _0x2bb7b6++;
                          return [3, 1];
                        case 4:
                          _0x28ac1f = 0;
                          _0x2dbad8.label = 5;
                        case 5:
                          if (_0x28ac1f >= _0x440123.length) {
                            return [3, 8];
                          }
                          _0x435c26 = _0x440123[_0x28ac1f];
                          _0x71ba3f = _0x41f4e4.get(_0x435c26);
                          if (!_0x71ba3f) {
                            return [3, 7];
                          }
                          return [4, _0x46004c(_0x71ba3f, 1)];
                        case 6:
                          _0x2dbad8.sent();
                          _0x2dbad8.label = 7;
                        case 7:
                          _0x28ac1f++;
                          return [3, 5];
                        case 8:
                          _0x4d69ea = 0;
                          _0x2dbad8.label = 9;
                        case 9:
                          if (_0x4d69ea >= _0x1de99f.length) {
                            return [3, 12];
                          }
                          return [4, _0x418617(_0x1de99f[_0x4d69ea])];
                        case 10:
                          _0x2dbad8.sent();
                          _0x2dbad8.label = 11;
                        case 11:
                          _0x4d69ea++;
                          return [3, 9];
                        case 12:
                          _0x848780.reset();
                          _0x848780.get();
                          _0x4aefda();
                          return [2];
                      }
                    });
                  }),
                  redo: _0x19ee37(function () {
                    return _0x3c5109(this, function (_0x22676e) {
                      _0x2d27b6();
                      return [2];
                    });
                  })
                });
              } else {
                _0x5877a5(_0x44e6d9);
              }
              _0x25bfca.label = 2;
            case 2:
              return [3, 4];
            case 3:
              _0x5bb0f1.log("(EDITOR) ERROR: Missing Object For Delete With Child. #DEWC");
              _0x25bfca.label = 4;
            case 4:
              return [2];
          }
        });
      });
      return function _0x3474da(_0x356711) {
        return _0x4f5cb6.apply(this, arguments);
      };
    }();
    var _0x136df5 = function () {
      var _0x41c883 = _0x19ee37(function (_0x537281) {
        var _0x374e66;
        var _0x469069;
        var _0x54bc2f;
        var _0x582105;
        var _0x2088ad;
        var _0x283dfc;
        var _0x577aa7;
        var _0xd1818a;
        var _0x5033e8;
        var _0x4c9275;
        return _0x3c5109(this, function (_0x28a019) {
          switch (_0x28a019.label) {
            case 0:
              _0x374e66 = _0x4c6bb4.get(_0x537281);
              _0x469069 = _0x2b98da.get(_0x537281);
              if (!_0x469069) {
                return [3, 2];
              }
              return [4, _0x5eba6f(_0x469069)];
            case 1:
              _0x54bc2f = _0x28a019.sent();
              if (!_0x54bc2f) {
                return [2, ["kill"]];
              }
              _0x28a019.label = 2;
            case 2:
              if (_0x374e66 == null) {
                return [2];
              }
              _0x582105 = [];
              for (_0x2088ad in _0x374e66) {
                _0x582105.push(_0x2088ad);
              }
              _0x283dfc = 0;
              _0x28a019.label = 3;
            case 3:
              if (_0x283dfc >= _0x582105.length) {
                return [3, 7];
              }
              _0x577aa7 = _0x582105[_0x283dfc];
              _0xd1818a = _0x374e66[_0x577aa7];
              if (_0xd1818a == null) {
                return [3, 6];
              }
              _0x5033e8 = _0x2b98da.get(_0xd1818a);
              if (!_0x5033e8) {
                return [3, 6];
              }
              return [4, _0x5eba6f(_0x5033e8)];
            case 4:
              _0x4c9275 = _0x28a019.sent();
              if (!_0x4c9275) {
                return [2, ["kill"]];
              }
              _0x5bc865.push(_0xd1818a);
              return [4, _0x136df5(_0xd1818a)];
            case 5:
              _0x28a019.sent();
              _0x28a019.label = 6;
            case 6:
              _0x283dfc++;
              return [3, 3];
            case 7:
              return [2, _0x5bc865];
          }
        });
      });
      return function _0x2f28f4(_0x1b4e00) {
        return _0x41c883.apply(this, arguments);
      };
    }();
    var _0x5eba6f = function () {
      var _0xadd09e = _0x19ee37(function (_0x6ba611) {
        var _0x51a5c4;
        return _0x3c5109(this, function (_0x5acc36) {
          switch (_0x5acc36.label) {
            case 0:
              return [4, _0x1bb188(_0x6ba611)];
            case 1:
              if (!_0x5acc36.sent()) {
                return [3, 3];
              }
              return [4, _0x2b8ae7(_0x6ba611)];
            case 2:
              if (!_0x5acc36.sent()) {
                emit("DoLongHudText", "Cannot delete material box with items inside.", 2);
                return [2, false];
              }
              _0x5acc36.label = 3;
            case 3:
              return [4, _0x78e9e1(_0x6ba611)];
            case 4:
              if (!_0x5acc36.sent()) {
                return [3, 6];
              }
              return [4, _0x233c48(_0x6ba611)];
            case 5:
              if (!_0x5acc36.sent()) {
                emit("DoLongHudText", "Cannot delete crafting bench with items inside.", 2);
                return [2, false];
              }
              _0x5acc36.label = 6;
            case 6:
              if (_0x6ba611.model == "prop_ped_gib_01" && _0x6ba611.lead) {
                _0x51a5c4 = _0x2b98da.get(_0x6ba611.lead);
                if (_0x51a5c4 && _0x51a5c4.model.includes("DUMMY:APARTMENTS")) {
                  emit("DoLongHudText", "Cannot delete spawn in apartments.", 2);
                  return [2, false];
                }
              }
              return [2, true];
          }
        });
      });
      return function _0x323089(_0x5295bb) {
        return _0xadd09e.apply(this, arguments);
      };
    }();
    var _0x4fae5d = function () {
      var _0x2d68dd = _0x19ee37(function (_0x367117) {
        var _0x3b1fe4;
        var _0x2db307;
        var _0x2f9ee3;
        var _0x59911e;
        var _0x259358;
        var _0x51d9f3;
        return _0x3c5109(this, function (_0x39e81f) {
          switch (_0x39e81f.label) {
            case 0:
              if (!_0x367117) {
                return [2];
              }
              _0x3b1fe4 = _0x367117.getConnection("room");
              if (!_0x3b1fe4) {
                return [2];
              }
              _0x2db307 = [];
              for (_0x2f9ee3 in _0x3b1fe4.links) {
                _0x2db307.push(_0x2f9ee3);
              }
              _0x59911e = 0;
              _0x39e81f.label = 1;
            case 1:
              if (_0x59911e >= _0x2db307.length) {
                return [3, 4];
              }
              _0x259358 = _0x2db307[_0x59911e];
              _0x51d9f3 = _0x3b1fe4.links[_0x259358];
              return [4, _0x35775d(_0x367117.databaseID, _0x51d9f3)];
            case 2:
              _0x39e81f.sent();
              _0x39e81f.label = 3;
            case 3:
              _0x59911e++;
              return [3, 1];
            case 4:
              return [2];
          }
        });
      });
      return function _0x4af348(_0x1c9298) {
        return _0x2d68dd.apply(this, arguments);
      };
    }();
    var _0x5877a5 = function () {
      var _0x27a3fd = _0x19ee37(function (_0x1d30f1) {
        var _0x1cefac;
        var _0x4cfc25;
        var _0x5a9f77;
        return _0x3c5109(this, function (_0x4cd5f9) {
          switch (_0x4cd5f9.label) {
            case 0:
              _0x1cefac = _0x2b98da.get(_0x1d30f1);
              if (!_0x1cefac) {
                return [3, 2];
              }
              return [4, _0x5eba6f(_0x1cefac)];
            case 1:
              _0x4cfc25 = _0x4cd5f9.sent();
              if (!_0x4cfc25) {
                return [2];
              }
              _0x5a9f77 = function () {
                var _0x274e01 = _0x19ee37(function () {
                  return _0x3c5109(this, function (_0xc04ef8) {
                    switch (_0xc04ef8.label) {
                      case 0:
                        _0x1cefac.shouldRender(false);
                        _0xb262e(_0x1cefac);
                        return [4, _0x1cefac.getCurrentConnectionData()];
                      case 1:
                        if (_0xc04ef8.sent().length < 1) {
                          return [3, 3];
                        }
                        _0x1cefac.stopAll();
                        if (!_0x1cefac.model.includes("DUMMY:ROOM")) {
                          return [3, 3];
                        }
                        return [4, _0x4fae5d(_0x1cefac)];
                      case 2:
                        _0xc04ef8.sent();
                        _0xc04ef8.label = 3;
                      case 3:
                        _0x2b98da.delete(_0x1cefac.databaseID);
                        _0x4aefda();
                        _0x520c78();
                        return [4, _0x25c455(_0x1d30f1, "remove", _0x1cefac)];
                      case 4:
                        _0xc04ef8.sent();
                        return [2];
                    }
                  });
                });
                return function _0x282d1d() {
                  return _0x274e01.apply(this, arguments);
                };
              }();
              _0x5a9f77();
              _0x2f6743.add({
                undo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x1a68b1) {
                    switch (_0x1a68b1.label) {
                      case 0:
                        _0x1cefac.navagation = false;
                        _0x2b98da.set(_0x1cefac.databaseID, _0x1cefac);
                        return [4, _0x46004c(_0x1cefac, 1)];
                      case 1:
                        _0x1a68b1.sent();
                        _0x1cefac.shouldRender(true);
                        _0x4aefda();
                        return [4, _0x25c455(_0x1d30f1, "remove", _0x1cefac, true)];
                      case 2:
                        _0x1a68b1.sent();
                        return [2];
                    }
                  });
                }),
                redo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x2c38e8) {
                    _0x5a9f77();
                    return [2];
                  });
                })
              });
              return [3, 3];
            case 2:
              _0x5bb0f1.log("(EDITOR) ERROR: Missing Object For Delete. #DE");
              _0x4cd5f9.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x45ff72(_0x2ab908) {
        return _0x27a3fd.apply(this, arguments);
      };
    }();
    var _0x1752b9 = function () {
      var _0x1f4f30 = _0x19ee37(function (_0x397616, _0x3609aa) {
        var _0x5d80af;
        var _0x407970;
        var _0x2397f1;
        return _0x3c5109(this, function (_0xa3be49) {
          switch (_0xa3be49.label) {
            case 0:
              _0x5d80af = _0x2b98da.get(_0x397616);
              if (!_0x5d80af) {
                return [3, 2];
              }
              return [4, _0x5d80af.getCurrentConnectionData()];
            case 1:
              _0xa3be49.sent();
              _0x407970 = _0x5d80af.databaseConnectionData;
              _0x2397f1 = function () {
                var _0x7adda = _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x162ee5) {
                    switch (_0x162ee5.label) {
                      case 0:
                        return [4, _0x5d80af.removeConnection(_0x3609aa)];
                      case 1:
                        _0x162ee5.sent();
                        return [4, _0x25c455(_0x397616, "update", _0x5d80af)];
                      case 2:
                        _0x162ee5.sent();
                        return [2];
                    }
                  });
                });
                return function _0x9be893() {
                  return _0x7adda.apply(this, arguments);
                };
              }();
              _0x2397f1();
              _0x2f6743.add({
                undo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x1cf1c2) {
                    switch (_0x1cf1c2.label) {
                      case 0:
                        _0x5d80af.correctlyGenerateConnection(_0x407970);
                        _0x5d80af.connectionsAltered = true;
                        return [4, _0x25c455(_0x397616, "update", _0x5d80af)];
                      case 1:
                        _0x1cf1c2.sent();
                        return [2];
                    }
                  });
                }),
                redo: _0x19ee37(function () {
                  return _0x3c5109(this, function (_0x56d54f) {
                    _0x2397f1();
                    return [2];
                  });
                })
              });
              return [3, 3];
            case 2:
              _0x5bb0f1.log("(EDITOR) ERROR: Missing Object For Delete. #RC");
              _0xa3be49.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x1e0293(_0x16f1fc, _0x1c014b) {
        return _0x1f4f30.apply(this, arguments);
      };
    }();
    var _0x2ecf39 = function () {
      var _0x32722f = _0x19ee37(function (_0x4dc868) {
        var _0x566e30;
        var _0x307dd9;
        var _0x217885;
        return _0x3c5109(this, function (_0x131b4e) {
          _0x566e30 = _0x4dc868.objectID;
          _0x307dd9 = _0x2b98da.get(_0x566e30);
          if (_0x307dd9) {
            _0x217885 = function () {
              var _0x34cf3a = _0x19ee37(function () {
                return _0x3c5109(this, function (_0x26c725) {
                  switch (_0x26c725.label) {
                    case 0:
                      _0x307dd9.correctlyAttatchConnection(_0x4dc868);
                      _0x307dd9.connectionsAltered = true;
                      return [4, _0x25c455(_0x566e30, "update", _0x307dd9)];
                    case 1:
                      _0x26c725.sent();
                      return [2];
                  }
                });
              });
              return function _0x785221() {
                return _0x34cf3a.apply(this, arguments);
              };
            }();
            _0x217885();
            _0x2f6743.add({
              undo: _0x19ee37(function () {
                return _0x3c5109(this, function (_0x142e71) {
                  switch (_0x142e71.label) {
                    case 0:
                      _0x307dd9.undoConnection(_0x4dc868);
                      _0x307dd9.connectionsAltered = true;
                      return [4, _0x25c455(_0x566e30, "update", _0x307dd9)];
                    case 1:
                      _0x142e71.sent();
                      return [2];
                  }
                });
              }),
              redo: _0x19ee37(function () {
                return _0x3c5109(this, function (_0x584a20) {
                  _0x217885();
                  return [2];
                });
              })
            });
          } else {
            _0x5bb0f1.log("(EDITOR) ERROR: Missing Object For Delete. #RC");
          }
          return [2];
        });
      });
      return function _0x52a597(_0x574dc8) {
        return _0x32722f.apply(this, arguments);
      };
    }();
    var _0x463b68 = function () {
      var _0x245b96 = _0x19ee37(function () {
        var _0x52005a;
        var _0x7510da;
        var _0x447576;
        var _0x4539e9;
        var _0x261f10;
        var _0x5b1950;
        var _0x51f810;
        var _0x571c16;
        var _0x213ea1;
        var _0x554ea2;
        var _0x2740df;
        return _0x3c5109(this, function (_0x8b6da1) {
          switch (_0x8b6da1.label) {
            case 0:
              if (!_0x6ada10) {
                return [3, 13];
              }
              _0x52005a = false;
              _0x7510da = _0x6ada10;
              _0x447576 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId()));
              _0x4539e9 = GetInteriorFromCollision(_0x447576.x, _0x447576.y, _0x447576.z);
              if (_0x4539e9 != 0 && _0x4539e9 != _0x6ada10.interiorID) {
                _0x261f10 = _0xf35f0d.get(_0x4539e9);
                if (_0x261f10) {
                  _0x5b1950 = _0x2b98da.get(_0x261f10.databaseID);
                  if (_0x5b1950) {
                    _0x7510da = _0x5b1950;
                  }
                }
              }
              if (_0x181a57) {
                if (_0x181a57.apartmentInformation) {
                  _0x7510da = _0x181a57;
                  _0x52005a = true;
                }
              }
              if (!_0x7510da) {
                return [2];
              }
              if (!!_0x52005a) {
                return [3, 2];
              }
              return [4, _0x14177c(_0x7510da)];
            case 1:
              _0x8b6da1.sent();
              return [3, 5];
            case 2:
              return [4, _0x1d409c(_0x7510da)];
            case 3:
              _0x8b6da1.sent();
              return [4, _0x14177c(_0x7510da)];
            case 4:
              _0x8b6da1.sent();
              _0x8b6da1.label = 5;
            case 5:
              return [4, NPX.Procedures.execute("np-editor:clearMyState", _0x7510da.databaseID)];
            case 6:
              _0x51f810 = _0x8b6da1.sent();
              if (!!_0x52005a) {
                return [3, 8];
              }
              _0x46f2b0.reset(_0x7510da.databaseID);
              return [4, _0x1cae0f(_0x7510da, true)];
            case 7:
              _0x8b6da1.sent();
              return [3, 11];
            case 8:
              _0x46f2b0.reset(_0x7510da.databaseID);
              _0x571c16 = _0x4c6bb4.get(_0x7510da.databaseID);
              if (_0x571c16) {
                for (var _0x286481 in _0x51f810) {
                  _0x554ea2 = _0x51f810[_0x286481];
                  _0x2740df = _0x571c16.indexOf(_0x554ea2, 0);
                  if (_0x2740df > -1) {
                    _0x571c16.splice(_0x2740df, 1);
                  }
                }
                _0x4c6bb4.set(_0x7510da.databaseID, _0x571c16);
              }
              return [4, _0x1cae0f(_0x7510da, false)];
            case 9:
              _0x8b6da1.sent();
              return [4, _0x1cfc1b(_0x7510da.databaseID)];
            case 10:
              _0x8b6da1.sent();
              _0x8b6da1.label = 11;
            case 11:
              return [4, _0x4aefda()];
            case 12:
              _0x8b6da1.sent();
              _0x32f58b(false);
              _0x1fce82.clear();
              _0x1d6e5c = [];
              _0x8b6da1.label = 13;
            case 13:
              return [2];
          }
        });
      });
      return function _0x4533af() {
        return _0x245b96.apply(this, arguments);
      };
    }();
    var _0x92ed1f = function () {
      var _0x4b0fa8 = _0x19ee37(function (_0x1c13c) {
        var _0x329bcb;
        var _0x4b5bcd;
        var _0x164ea3;
        return _0x3c5109(this, function (_0x433e14) {
          switch (_0x433e14.label) {
            case 0:
              _0x329bcb = _0x1c13c.objectState;
              _0x4b5bcd = "void";
              if (!_0x329bcb || _0x329bcb.position.getDistance(new _0x45b4c7(0, 0, 0)) <= 1) {
                return [3, 3];
              }
              if (_0x329bcb.isApartmentChild) {}
              return [4, _0x5770b0(_0x329bcb)];
            case 1:
              _0x164ea3 = _0x433e14.sent();
              if (_0x164ea3) {
                _0x4b5bcd = _0x164ea3.databaseID;
              }
              if (_0x4b5bcd == "void") {
                return [3, 3];
              }
              return [4, NPX.Procedures.execute("np-editor:SaveStateToServer", _0x4b5bcd, _0x1c13c)];
            case 2:
              _0x433e14.sent();
              _0x433e14.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x45c83a(_0x2efc23) {
        return _0x4b0fa8.apply(this, arguments);
      };
    }();
    var _0x5065ac = function () {
      var _0x4e7972 = _0x19ee37(function (_0x282dee) {
        var _0x1499fa;
        var _0x4a26e3;
        var _0x36bee0;
        var _0x3394bc;
        var _0x4b0482;
        var _0x3a295c;
        var _0x237f9e;
        var _0x4673f0;
        var _0x3a868b;
        var _0x510883;
        var _0x41c0e9;
        return _0x3c5109(this, function (_0x3d894b) {
          switch (_0x3d894b.label) {
            case 0:
              return [4, NPX.Procedures.execute("np-editor:getCurrentStateForLead", _0x282dee)];
            case 1:
              _0x1499fa = _0x3d894b.sent();
              if (!_0x1499fa || _0x1499fa.length <= 0) {
                return [2];
              }
              _0x4a26e3 = [];
              for (_0x36bee0 in _0x1499fa) {
                _0x4a26e3.push(_0x36bee0);
              }
              _0x3394bc = 0;
              _0x3d894b.label = 2;
            case 2:
              if (_0x3394bc >= _0x4a26e3.length) {
                return [3, 15];
              }
              _0x4b0482 = _0x4a26e3[_0x3394bc];
              _0x3a295c = _0x1499fa[_0x4b0482];
              _0x237f9e = _0x2b98da.get(_0x3a295c.databaseID);
              if (!_0x237f9e) {
                return [3, 10];
              }
              if (!_0x3a295c.removed) {
                return [3, 7];
              }
              if (!_0x237f9e) {
                return [3, 6];
              }
              return [4, _0x237f9e.getCurrentConnectionData()];
            case 3:
              if (_0x3d894b.sent().length < 1) {
                return [3, 5];
              }
              _0x237f9e.stopAll();
              if (!_0x237f9e.model.includes("DUMMY:ROOM")) {
                return [3, 5];
              }
              return [4, _0x4fae5d(_0x237f9e)];
            case 4:
              _0x3d894b.sent();
              _0x3d894b.label = 5;
            case 5:
              _0x237f9e.shouldRender(false);
              _0xb262e(_0x237f9e);
              _0x2b98da.delete(_0x237f9e.databaseID);
              _0x3d894b.label = 6;
            case 6:
              return [3, 9];
            case 7:
              if (!_0x3a295c.update || !_0x3a295c.objectState) {
                return [3, 9];
              }
              _0x237f9e.removeObject();
              _0x237f9e.stopAll();
              _0xb262e(_0x237f9e);
              _0x4673f0 = _0x3a295c.objectState;
              _0x3a868b = new _0x4a89e0(_0x4673f0.position, _0x4673f0.quat, _0x4673f0.model, _0x4673f0.parent, _0x4673f0.lead, _0x4673f0.databaseID, _0x4673f0.worldId, _0x4673f0.hasChild, _0x4673f0.isSaved, _0x4673f0.groupIndex, _0x4673f0.isBuilt, _0x4673f0.databaseConnectionData);
              _0x2b98da.set(_0x4673f0.databaseID, _0x3a868b);
              _0x3a868b.attemptToRender();
              return [4, _0x46004c(_0x3a868b, 1)];
            case 8:
              _0x3d894b.sent();
              _0x3d894b.label = 9;
            case 9:
              return [3, 13];
            case 10:
              if (!_0x3a295c.creation || !_0x3a295c.objectState) {
                return [3, 13];
              }
              _0x510883 = _0x3a295c.objectState;
              _0x41c0e9 = new _0x4a89e0(_0x510883.position, _0x510883.quat, _0x510883.model, _0x510883.parent, _0x510883.lead, _0x510883.databaseID, _0x510883.worldId, _0x510883.hasChild, _0x510883.isSaved, _0x510883.groupIndex, _0x510883.isBuilt, _0x510883.databaseConnectionData);
              _0x2b98da.set(_0x510883.databaseID, _0x41c0e9);
              _0x41c0e9.attemptToRender();
              _0x41c0e9.startAll();
              return [4, _0x46004c(_0x41c0e9, 1)];
            case 11:
              _0x3d894b.sent();
              return [4, _0x41c0e9.CheckIsChildOfNonLoad()];
            case 12:
              _0x3d894b.sent();
              _0x3d894b.label = 13;
            case 13:
              _0x848780.reset();
              _0x848780.get();
              _0x4aefda();
              _0x3d894b.label = 14;
            case 14:
              _0x3394bc++;
              return [3, 2];
            case 15:
              return [2];
          }
        });
      });
      return function _0x142299(_0x1c1112) {
        return _0x4e7972.apply(this, arguments);
      };
    }();
    var _0x5d237e = function () {
      var _0x2c1567 = _0x19ee37(function () {
        var _0x306db8;
        var _0x1920c6;
        var _0x203980;
        var _0x473c65;
        var _0x137ca0;
        var _0x47b17f;
        var _0x2f2931;
        var _0x3f95a6;
        var _0x23e6e3;
        var _0x440a2f;
        var _0x235a33;
        var _0x5af147;
        var _0x4d34e0;
        var _0x1e4dce;
        var _0x14721e;
        var _0x583327;
        var _0x5996f0;
        var _0x23a124;
        var _0x1d3153;
        var _0x333ac2;
        var _0x3d1680;
        var _0x24a73d;
        var _0x407bc6;
        var _0x3f4c46;
        var _0x111500;
        var _0x172335;
        var _0x104830;
        var _0x515e12;
        var _0x30d9b8;
        var _0x58a8f6;
        return _0x3c5109(this, function (_0x2990ed) {
          switch (_0x2990ed.label) {
            case 0:
              if (_0x5a951b) {
                return [2];
              }
              _0x5bb0f1.log(" --------- SAVING TO SERVER ------------- ");
              _0x306db8 = new Map();
              _0x1920c6 = new Map();
              _0x203980 = new Map();
              _0x473c65 = true;
              _0x137ca0 = false;
              _0x47b17f = undefined;
              _0x2990ed.label = 1;
            case 1:
              _0x2990ed.trys.push([1, 17, 18, 19]);
              _0x2f2931 = _0x1fce82.entries()[Symbol.iterator]();
              _0x2990ed.label = 2;
            case 2:
              if (!!(_0x473c65 = (_0x3f95a6 = _0x2f2931.next()).done)) {
                return [3, 16];
              }
              _0x23e6e3 = _0x3617db(_0x3f95a6.value, 2);
              _0x440a2f = _0x23e6e3[0];
              _0x235a33 = _0x23e6e3[1];
              _0x5af147 = _0x235a33.objectState;
              _0x4d34e0 = "void";
              if (!_0x5af147 || _0x5af147.position.getDistance(new _0x45b4c7(0, 0, 0)) <= 1) {
                return [3, 15];
              }
              if (!_0x5af147.isApartmentChild) {
                return [3, 4];
              }
              return [4, _0x38d174(_0x5af147)];
            case 3:
              _0x1e4dce = _0x2990ed.sent();
              if (_0x1e4dce) {
                _0x5af147.position = _0x1e4dce[0];
                _0x5af147.quat = _0x1e4dce[1];
              }
              _0x2990ed.label = 4;
            case 4:
              if (!_0x235a33.removed) {
                return [3, 9];
              }
              if (!_0x235a33.creation) {
                return [3, 5];
              }
              return [3, 8];
            case 5:
              return [4, _0x5af147.getAllConnectionIDs()];
            case 6:
              _0x2990ed.sent();
              return [4, _0x5770b0(_0x5af147)];
            case 7:
              _0x14721e = _0x2990ed.sent();
              if (_0x14721e) {
                _0x4d34e0 = _0x14721e.databaseID;
              }
              _0x583327 = _0x1920c6.get(_0x4d34e0);
              if (!_0x583327) {
                var _0x712b07 = {
                  leadObject: undefined,
                  changedObjects: []
                };
                _0x583327 = _0x712b07;
                if (_0x14721e) {
                  _0x583327.leadObject = _0x14721e;
                }
              }
              _0x583327.changedObjects.push(_0x5af147);
              _0x1920c6.set(_0x4d34e0, _0x583327);
              _0x2990ed.label = 8;
            case 8:
              return [3, 14];
            case 9:
              return [4, _0x5af147.getCurrentConnectionData()];
            case 10:
              _0x2990ed.sent();
              if (!_0x235a33.creation) {
                return [3, 12];
              }
              return [4, _0x5770b0(_0x5af147)];
            case 11:
              _0x5996f0 = _0x2990ed.sent();
              if (_0x5996f0) {
                _0x4d34e0 = _0x5996f0.databaseID;
              }
              _0x23a124 = _0x306db8.get(_0x4d34e0);
              if (!_0x23a124) {
                var _0x238729 = {
                  leadObject: undefined,
                  changedObjects: []
                };
                _0x23a124 = _0x238729;
                if (_0x5996f0) {
                  _0x23a124.leadObject = _0x5996f0;
                }
              }
              _0x23a124.changedObjects.push(_0x5af147);
              _0x5af147.shouldRender(false);
              _0x306db8.set(_0x4d34e0, _0x23a124);
              _0x1d3153 = _0x2b98da.get(_0x5af147.databaseID);
              if (_0x1d3153) {
                _0x1d3153.isSaved = true;
                _0x2b98da.set(_0x5af147.databaseID, _0x1d3153);
              }
              return [3, 14];
            case 12:
              if (!_0x235a33.update) {
                return [3, 14];
              }
              return [4, _0x5770b0(_0x5af147)];
            case 13:
              _0x333ac2 = _0x2990ed.sent();
              if (_0x333ac2) {
                _0x4d34e0 = _0x333ac2.databaseID;
              }
              _0x3d1680 = _0x203980.get(_0x4d34e0);
              if (!_0x3d1680) {
                var _0x4022b7 = {
                  leadObject: undefined,
                  changedObjects: []
                };
                _0x3d1680 = _0x4022b7;
                if (_0x333ac2) {
                  _0x3d1680.leadObject = _0x333ac2;
                }
              }
              _0x3d1680.changedObjects.push(_0x5af147);
              _0x203980.set(_0x4d34e0, _0x3d1680);
              _0x24a73d = _0x2b98da.get(_0x5af147.databaseID);
              if (_0x24a73d) {
                _0x407bc6 = _0x24a73d.CheckIfIsDoor();
                if (_0x407bc6[0]) {
                  _0x24a73d.UpdateDoor();
                }
              }
              _0x2990ed.label = 14;
            case 14:
              _0x1fce82.delete(_0x440a2f);
              _0x2990ed.label = 15;
            case 15:
              _0x473c65 = true;
              return [3, 2];
            case 16:
              return [3, 19];
            case 17:
              _0x3f4c46 = _0x2990ed.sent();
              _0x137ca0 = true;
              _0x47b17f = _0x3f4c46;
              return [3, 19];
            case 18:
              try {
                if (!_0x473c65 && _0x2f2931.return != null) {
                  _0x2f2931.return();
                }
              } finally {
                if (_0x137ca0) {
                  throw _0x47b17f;
                }
              }
              return [7];
            case 19:
              if (_0x1d6e5c.length < 1) {
                return [3, 21];
              }
              _0x5a951b = true;
              return [4, NPX.Procedures.execute("np-editor:SetIndexfromArrayOfData", _0x1d6e5c)];
            case 20:
              _0x2990ed.sent();
              _0x5a951b = false;
              _0x2990ed.label = 21;
            case 21:
              _0x111500 = Array.from(_0x306db8, function (_0x54c78b) {
                var _0x32d8f0 = _0x3617db(_0x54c78b, 2);
                var _0x21041c = _0x32d8f0[0];
                var _0x164274 = _0x32d8f0[1];
                var _0x365d8c = {
                  name: _0x21041c,
                  value: _0x164274
                };
                return _0x365d8c;
              });
              _0x172335 = Array.from(_0x1920c6, function (_0x5da9e9) {
                var _0x5cddb3 = _0x3617db(_0x5da9e9, 2);
                var _0x548ce1 = _0x5cddb3[0];
                var _0x18a930 = _0x5cddb3[1];
                var _0x62a8a4 = {
                  name: _0x548ce1,
                  value: _0x18a930
                };
                return _0x62a8a4;
              });
              _0x104830 = Array.from(_0x203980, function (_0x132ff9) {
                var _0x56742d = _0x3617db(_0x132ff9, 2);
                var _0x92c98f = _0x56742d[0];
                var _0x45a6fe = _0x56742d[1];
                var _0x7116f5 = {
                  name: _0x92c98f,
                  value: _0x45a6fe
                };
                return _0x7116f5;
              });
              return [4, NPX.Procedures.execute("np-editor:SendingState", _0x111500, _0x172335, _0x104830)];
            case 22:
              _0x515e12 = _0x2990ed.sent();
              _0x30d9b8 = _0x515e12[0];
              _0x58a8f6 = _0x515e12[1];
              _0x5bb0f1.log(" --------- FINISHED OBJECTS TO SERVER ------------- ");
              _0x848780.reset();
              _0x848780.get();
              _0x4aefda();
              _0x32f58b(false);
              _0x1d6e5c = [];
              return [2];
          }
        });
      });
      return function _0x25b910() {
        return _0x2c1567.apply(this, arguments);
      };
    }();
    var _0x32f58b = function () {
      var _0x4c44d5 = _0x19ee37(function (_0x480aa0) {
        return _0x3c5109(this, function (_0x2b7c8e) {
          var _0x3b8bf4 = {
            hasChanges: _0x480aa0
          };
          var _0x2a82fb = {
            action: "hasChanges",
            data: _0x3b8bf4
          };
          SendNUIMessage(_0x2a82fb);
          return [2];
        });
      });
      return function _0x37320b(_0x342ad7) {
        return _0x4c44d5.apply(this, arguments);
      };
    }();
    var _0x38d174 = function () {
      var _0x1180a9 = _0x19ee37(function (_0x2ea325) {
        var _0xc1d925;
        var _0xc3c505;
        var _0x296bcf;
        var _0x4d8f57;
        var _0x1e9f78;
        var _0x44593c;
        return _0x3c5109(this, function (_0x33865b) {
          switch (_0x33865b.label) {
            case 0:
              _0xc1d925 = _0x2ea325.position;
              _0xc3c505 = _0x2ea325.quat;
              _0x296bcf = _0x2ea325.lead;
              if (!_0x296bcf) {
                return [2];
              }
              _0x4d8f57 = _0x2b98da.get(_0x296bcf);
              if (!_0x4d8f57) {
                return [2];
              }
              _0x1e9f78 = _0x45b4c7.fromArray(GetEntityCoords(_0x4d8f57.refferenceObject));
              _0x44593c = _0x21193b.fromArray(GetEntityQuaternion(_0x4d8f57.refferenceObject));
              return [4, _0x444d60(_0xc1d925, _0xc3c505, _0x1e9f78, _0x44593c)];
            case 1:
              return [2, _0x33865b.sent()];
          }
        });
      });
      return function _0x33ae7d(_0x1746a5) {
        return _0x1180a9.apply(this, arguments);
      };
    }();
    var _0xbc57e7 = function () {
      var _0x53a9db = _0x19ee37(function (_0x2e4e1c) {
        var _0x164842;
        var _0xca11f5;
        var _0x4f226e;
        var _0x430f41;
        var _0x493448;
        var _0x517d8b;
        return _0x3c5109(this, function (_0x17d94c) {
          switch (_0x17d94c.label) {
            case 0:
              _0x164842 = _0x2e4e1c.position;
              _0xca11f5 = _0x2e4e1c.quat;
              _0x4f226e = _0x2e4e1c.lead;
              if (!_0x4f226e) {
                return [2];
              }
              _0x430f41 = _0x2b98da.get(_0x4f226e);
              if (!_0x430f41) {
                return [2];
              }
              _0x493448 = _0x45b4c7.fromArray(GetEntityCoords(_0x430f41.refferenceObject));
              _0x517d8b = _0x21193b.fromArray(GetEntityQuaternion(_0x430f41.refferenceObject));
              return [4, _0x5682d1(_0x164842, _0xca11f5, _0x493448, _0x517d8b)];
            case 1:
              return [2, _0x17d94c.sent()];
          }
        });
      });
      return function _0x3471d6(_0x56a9d2) {
        return _0x53a9db.apply(this, arguments);
      };
    }();
    ;
    function _0x453f25(_0x4eae3d, _0x3b1bb5) {
      if (_0x3b1bb5 == null || _0x3b1bb5 > _0x4eae3d.length) {
        _0x3b1bb5 = _0x4eae3d.length;
      }
      for (var _0xbddd54 = 0, _0x316e4c = new Array(_0x3b1bb5); _0xbddd54 < _0x3b1bb5; _0xbddd54++) {
        _0x316e4c[_0xbddd54] = _0x4eae3d[_0xbddd54];
      }
      return _0x316e4c;
    }
    function _0x5e8bda(_0x47fc5b) {
      if (Array.isArray(_0x47fc5b)) {
        return _0x47fc5b;
      }
    }
    function _0x2b1510(_0x573330, _0xc06b62, _0x38472c, _0x342a22, _0x502518, _0x45fdb7, _0xf77862) {
      try {
        var _0x86fd12 = _0x573330[_0x45fdb7](_0xf77862);
        var _0x43cbab = _0x86fd12.value;
      } catch (_0x12abce) {
        _0x38472c(_0x12abce);
        return;
      }
      if (_0x86fd12.done) {
        _0xc06b62(_0x43cbab);
      } else {
        Promise.resolve(_0x43cbab).then(_0x342a22, _0x502518);
      }
    }
    function _0xe6d83(_0x53b137) {
      return function () {
        var _0x3a3ffb = this;
        var _0x31467a = arguments;
        return new Promise(function (_0x2a66b4, _0x2d8cf7) {
          var _0x372d7d = _0x53b137.apply(_0x3a3ffb, _0x31467a);
          function _0x5c4f85(_0x1862a9) {
            _0x2b1510(_0x372d7d, _0x2a66b4, _0x2d8cf7, _0x5c4f85, _0x3a8200, "next", _0x1862a9);
          }
          function _0x3a8200(_0x321b2e) {
            _0x2b1510(_0x372d7d, _0x2a66b4, _0x2d8cf7, _0x5c4f85, _0x3a8200, "throw", _0x321b2e);
          }
          _0x5c4f85(undefined);
        });
      };
    }
    function _0x1155a8(_0x25c818, _0x4020ee) {
      var _0x4c3778 = _0x25c818 == null ? null : typeof Symbol !== "undefined" && _0x25c818[Symbol.iterator] || _0x25c818["@@iterator"];
      if (_0x4c3778 == null) {
        return;
      }
      var _0x45bdd0 = [];
      var _0x30ee14 = true;
      var _0x176fa8 = false;
      var _0x976846;
      var _0x562d71;
      try {
        for (_0x4c3778 = _0x4c3778.call(_0x25c818); !(_0x30ee14 = (_0x976846 = _0x4c3778.next()).done); _0x30ee14 = true) {
          _0x45bdd0.push(_0x976846.value);
          if (_0x4020ee && _0x45bdd0.length === _0x4020ee) {
            break;
          }
        }
      } catch (_0x535d0c) {
        _0x176fa8 = true;
        _0x562d71 = _0x535d0c;
      } finally {
        try {
          if (!_0x30ee14 && _0x4c3778.return != null) {
            _0x4c3778.return();
          }
        } finally {
          if (_0x176fa8) {
            throw _0x562d71;
          }
        }
      }
      return _0x45bdd0;
    }
    function _0x2b9e03() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x19a3e4(_0x242d9e, _0x12eea8) {
      return _0x5e8bda(_0x242d9e) || _0x1155a8(_0x242d9e, _0x12eea8) || _0x61de7a(_0x242d9e, _0x12eea8) || _0x2b9e03();
    }
    function _0x61de7a(_0x1d3b96, _0x1fdbae) {
      if (!_0x1d3b96) {
        return;
      }
      if (typeof _0x1d3b96 === "string") {
        return _0x453f25(_0x1d3b96, _0x1fdbae);
      }
      var _0x5f0bd3 = Object.prototype.toString.call(_0x1d3b96).slice(8, -1);
      if (_0x5f0bd3 === "Object" && _0x1d3b96.constructor) {
        _0x5f0bd3 = _0x1d3b96.constructor.name;
      }
      if (_0x5f0bd3 === "Map" || _0x5f0bd3 === "Set") {
        return Array.from(_0x5f0bd3);
      }
      if (_0x5f0bd3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5f0bd3)) {
        return _0x453f25(_0x1d3b96, _0x1fdbae);
      }
    }
    function _0x584861(_0x3e39c7, _0x223c84) {
      var _0x187d00;
      var _0x7945fe;
      var _0x262c73;
      var _0x6922f6;
      var _0xac2748 = {
        label: 0,
        sent: function () {
          if (_0x262c73[0] & 1) {
            throw _0x262c73[1];
          }
          return _0x262c73[1];
        },
        trys: [],
        ops: []
      };
      _0x6922f6 = {
        next: _0x431b50(0),
        throw: _0x431b50(1),
        return: _0x431b50(2)
      };
      if (typeof Symbol === "function") {
        _0x6922f6[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x6922f6;
      function _0x431b50(_0x58bf70) {
        return function (_0x49009e) {
          return _0x109b29([_0x58bf70, _0x49009e]);
        };
      }
      function _0x109b29(_0x20b501) {
        if (_0x187d00) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xac2748) {
          try {
            _0x187d00 = 1;
            if (_0x7945fe && (_0x262c73 = _0x20b501[0] & 2 ? _0x7945fe.return : _0x20b501[0] ? _0x7945fe.throw || ((_0x262c73 = _0x7945fe.return) && _0x262c73.call(_0x7945fe), 0) : _0x7945fe.next) && !(_0x262c73 = _0x262c73.call(_0x7945fe, _0x20b501[1])).done) {
              return _0x262c73;
            }
            _0x7945fe = 0;
            if (_0x262c73) {
              _0x20b501 = [_0x20b501[0] & 2, _0x262c73.value];
            }
            switch (_0x20b501[0]) {
              case 0:
              case 1:
                _0x262c73 = _0x20b501;
                break;
              case 4:
                _0xac2748.label++;
                var _0x4fc1b9 = {
                  value: _0x20b501[1],
                  done: false
                };
                return _0x4fc1b9;
              case 5:
                _0xac2748.label++;
                _0x7945fe = _0x20b501[1];
                _0x20b501 = [0];
                continue;
              case 7:
                _0x20b501 = _0xac2748.ops.pop();
                _0xac2748.trys.pop();
                continue;
              default:
                if (!(_0x262c73 = _0xac2748.trys, _0x262c73 = _0x262c73.length > 0 && _0x262c73[_0x262c73.length - 1]) && (_0x20b501[0] === 6 || _0x20b501[0] === 2)) {
                  _0xac2748 = 0;
                  continue;
                }
                if (_0x20b501[0] === 3 && (!_0x262c73 || _0x20b501[1] > _0x262c73[0] && _0x20b501[1] < _0x262c73[3])) {
                  _0xac2748.label = _0x20b501[1];
                  break;
                }
                if (_0x20b501[0] === 6 && _0xac2748.label < _0x262c73[1]) {
                  _0xac2748.label = _0x262c73[1];
                  _0x262c73 = _0x20b501;
                  break;
                }
                if (_0x262c73 && _0xac2748.label < _0x262c73[2]) {
                  _0xac2748.label = _0x262c73[2];
                  _0xac2748.ops.push(_0x20b501);
                  break;
                }
                if (_0x262c73[2]) {
                  _0xac2748.ops.pop();
                }
                _0xac2748.trys.pop();
                continue;
            }
            _0x20b501 = _0x223c84.call(_0x3e39c7, _0xac2748);
          } catch (_0x2c96b5) {
            _0x20b501 = [6, _0x2c96b5];
            _0x7945fe = 0;
          } finally {
            _0x187d00 = _0x262c73 = 0;
          }
        }
        if (_0x20b501[0] & 5) {
          throw _0x20b501[1];
        }
        var _0x34ea45 = {
          value: _0x20b501[0] ? _0x20b501[1] : undefined,
          done: true
        };
        return _0x34ea45;
      }
    }
    var _0x432779;
    var _0x171d2a = 0;
    var _0x6ad50c = false;
    var _0x44fdfb = false;
    var _0x40955f = false;
    var _0x4717d7 = 0;
    var _0x465eb3 = 0;
    var _0x4bed06 = 0;
    var _0x4541f8 = 0;
    var _0x196009 = 0;
    var _0x2f3d46 = "none";
    var _0x571d48 = 0;
    var _0x2813f4 = {
      onGround: _0x44fdfb,
      useModelOffset: _0x40955f,
      alignToSurface: false,
      surfaceOffset: 0,
      curZ: _0x171d2a,
      heading: 0,
      model: 0
    };
    var _0x24bde2 = _0x2813f4;
    function _0xeb122d(_0x2dea31) {
      if (_0x432779 != null) {
        return;
      }
      var _0x519ea8 = _0x19a3e4(GetModelDimensions(_0x2dea31), 2);
      var _0x38b7a0 = _0x519ea8[0];
      var _0x207e94 = _0x519ea8[1];
      var _0x3d14df = _0x45b4c7.fromArray(_0x38b7a0);
      var _0xc2d594 = _0x45b4c7.fromArray(_0x207e94);
      _0x432779 = _0xc2d594.sub(_0x3d14df);
      return _0x432779;
    }
    function _0x143d47() {
      var _0x17b0d8 = PlayerPedId();
      _0x24bde2.model = 0;
      _0x6818f3(true);
      _0x2f3d46 = "selection";
      globalThis.exports.hud.sendAppEvent({
        crosshairShow: true
      });
      _0x4541f8 = setTick(function () {
        _0x152011(_0x17b0d8);
      });
      _0x4bed06 = setTick(function () {
        _0x1450d0(_0x17b0d8);
      });
      _0x465eb3 = setTick(function () {
        _0x5d518b(_0x17b0d8);
      });
      _0x4717d7 = setTick(function () {
        _0x4a25fa();
      });
    }
    function _0x45df1e() {
      clearTick(_0x4717d7);
      clearTick(_0x465eb3);
      clearTick(_0x4bed06);
      clearTick(_0x4541f8);
      _0x6818f3(false);
      globalThis.exports.hud.sendAppEvent({
        crosshairShow: false
      });
      _0x432779 = undefined;
      _0x171d2a = 0;
      _0x6ad50c = false;
      _0x44fdfb = false;
      _0x40955f = false;
      _0x4717d7 = 0;
      _0x465eb3 = 0;
      _0x4bed06 = 0;
      _0x4541f8 = 0;
      _0x38177e(_0x196009);
      if (_0x34a7cb != 0 && _0x34a7cb != null) {
        globalThis.exports["np-cleanup"].RemoveBypassObject(_0x34a7cb);
        _0x23b88f(_0x34a7cb);
      }
    }
    function _0x1450d0(_0x4f78d0) {
      if (_0x2f3d46 != "selection") {
        return;
      }
      var _0x277c77 = _0x19a3e4(_0x17ab28(-1, _0x4f78d0, 10), 6);
      var _0x3be2ed = _0x277c77[1];
      var _0x592f4b = _0x277c77[2];
      var _0x7ee68f = _0x277c77[3];
      var _0x74d0f6 = _0x277c77[4];
      var _0x480d5d = _0x277c77[5];
      var _0x2c3d94 = _0x45b4c7.fromArray(_0x592f4b);
      if (_0x480d5d == 0 || _0x480d5d == null) {
        if (_0x196009) {
          _0x38177e(_0x196009);
        }
      }
      if (_0x3be2ed) {
        DrawMarker(28, _0x2c3d94.x, _0x2c3d94.y, _0x2c3d94.z, 0, 0, 0, 0, 0, 0, 0.2, 0.2, 0.2, 0, 255, 150, 100, false, false, 2, false, null, null, false);
        if (_0x196009 != _0x480d5d) {
          if (_0x196009) {
            _0x38177e(_0x196009);
          }
          _0x196009 = _0x480d5d;
          _0x729824(_0x196009);
        }
      }
    }
    function _0x152011(_0x35881c) {
      if (_0x2f3d46 != "selection") {
        return;
      }
      var _0x37abcd = _0x19a3e4(_0x17ab28(31, _0x35881c, 10), 6);
      var _0x66b817 = _0x37abcd[1];
      var _0x769126 = _0x37abcd[2];
      var _0x5589c2 = _0x37abcd[4];
      var _0x1ae9f4 = _0x37abcd[5];
      if (!_0x66b817) {
        return;
      }
      var _0x2bed81 = exports["np-target"].GetCurrentEntity();
      _0x571d48 = _0x2bed81 ? _0x2bed81 : _0x1ae9f4;
    }
    var _0x520196 = function () {
      var _0x1146ff = _0xe6d83(function () {
        var _0xdcea3e;
        var _0x5499ad;
        var _0x3455d4;
        var _0x21674a;
        return _0x584861(this, function (_0xcfba71) {
          switch (_0xcfba71.label) {
            case 0:
              if (_0x2f3d46 != "selection") {
                return [3, 3];
              }
              if (!_0x571d48) {
                return [3, 2];
              }
              return [4, _0x208b52(_0x571d48)];
            case 1:
              _0xdcea3e = _0x19a3e4.apply(undefined, [_0xcfba71.sent(), 2]);
              _0x5499ad = _0xdcea3e[0];
              _0x3455d4 = _0xdcea3e[1];
              if (_0x5499ad) {
                _0x288a7d(_0x571d48);
                _0x17e588(_0x571d48, _0x3455d4);
                _0x21674a = GetEntityHeading(_0x571d48);
                _0x24bde2.heading = _0x21674a;
                _0x2f3d46 = "movement";
              } else {
                _0x288a7d(0);
                _0x17e588(0, undefined);
              }
              _0xcfba71.label = 2;
            case 2:
              return [3, 4];
            case 3:
              if (_0x2f3d46 == "movement") {
                _0x1e2c4a();
                _0x288a7d(0);
                _0x17e588(0, undefined);
                _0x2f3d46 = "selection";
              }
              _0xcfba71.label = 4;
            case 4:
              return [2];
          }
        });
      });
      return function _0x36b221() {
        return _0x1146ff.apply(this, arguments);
      };
    }();
    function _0x4a25fa(_0x2e031e) {
      if (_0x2f3d46 != "movement") {
        return;
      }
      var _0x553c9a = _0x24bde2;
      _0xeb122d(_0x553c9a.model);
      var _0x5a4825 = _0x19a3e4(_0x17ab28(19, _0x53e1f9, 10), 6);
      var _0x4fe24c = _0x5a4825[1];
      var _0x49405f = _0x5a4825[2];
      var _0x2bcbe6 = _0x5a4825[3];
      var _0x39b736 = _0x5a4825[4];
      var _0x1a1b9b = _0x5a4825[5];
      var _0x50e965 = _0x45b4c7.fromArray(GetEntityCoords(_0x53e1f9, true));
      var _0x752fbe = _0x45b4c7.fromArray(_0x49405f);
      if (_0x4fe24c) {
        if (!_0x2e031e && _0x553c9a.useModelOffset && _0x432779) {
          _0x752fbe.z += _0x432779.z / 2;
        }
        var _0xd0981e = [0, 0, 0];
        SetEntityHeading(_0x53e1f9, _0x553c9a.heading);
        SetEntityCoords(_0x53e1f9, _0x752fbe.x - _0xd0981e[0], _0x752fbe.y - _0xd0981e[1], _0x752fbe.z - _0xd0981e[2], false, false, false, false);
        if (_0x2e031e || _0x553c9a.onGround) {
          PlaceObjectOnGroundProperly_2(_0x53e1f9);
        }
        SetEntityHeading(_0x53e1f9, _0x553c9a.heading);
        if (_0x553c9a.curZ !== 0) {
          var _0x3fb1cd = _0x45b4c7.fromArray(GetEntityCoords(_0x53e1f9, false));
          _0x752fbe.z += _0x553c9a.curZ;
          SetEntityCoords(_0x53e1f9, _0x3fb1cd.x, _0x3fb1cd.y, _0x3fb1cd.z + _0x553c9a.curZ, false, false, false, false);
        }
      } else if (!_0x4fe24c) {}
      return [_0x50e965, _0x752fbe];
    }
    function _0x5d518b(_0xfbae7d) {
      var _0x3df00a = _0x24bde2.heading;
      DisableControlAction(0, 44, true);
      DisableControlAction(0, 46, true);
      DisableControlAction(0, 20, true);
      DisableControlAction(0, 26, true);
      DisableControlAction(0, 23, true);
      DisableControlAction(0, 16, true);
      DisableControlAction(0, 17, true);
      DisableControlAction(0, 36, true);
      DisableControlAction(0, 236, true);
      DisableControlAction(0, 24, true);
      DisableControlAction(0, 157, true);
      DisableControlAction(0, 158, true);
      DisableControlAction(0, 160, true);
      DisableControlAction(0, 178, true);
      var _0x3db466 = IsDisabledControlPressed(0, 36);
      if (_0x2f3d46 == "movement") {
        if (IsDisabledControlPressed(2, 17)) {
          if (_0x6ad50c) {
            _0x171d2a += _0x3db466 ? 0.1 : 0.5;
          } else {
            _0x3df00a += _0x3db466 ? 1 : 5;
            if (!_0x3db466) {
              _0x3df00a = Math.round(_0x3df00a);
            }
          }
        } else if (IsDisabledControlPressed(2, 16)) {
          if (_0x6ad50c) {
            _0x171d2a -= _0x3db466 ? 0.1 : 0.5;
          } else {
            _0x3df00a -= _0x3db466 ? 1 : 5;
            if (!_0x3db466) {
              _0x3df00a = Math.round(_0x3df00a);
            }
          }
        }
        if (_0x3df00a > 360) {
          _0x3df00a -= 360;
        } else if (_0x3df00a < 0) {
          _0x3df00a += 360;
        }
        if (IsDisabledControlJustPressed(0, 44)) {
          _0x44fdfb = !_0x44fdfb;
        }
        if (IsDisabledControlJustPressed(0, 20)) {
          _0x6ad50c = !_0x6ad50c;
        }
        if (IsDisabledControlJustPressed(0, 178)) {
          if (_0x53e1f9 != 0 && _0x43925e != null) {
            _0xd4327d(_0x43925e.databaseID);
          }
        }
      }
      if (IsDisabledControlJustPressed(0, 46)) {
        _0x520196();
      }
      _0x24bde2.curZ = _0x171d2a;
      _0x24bde2.onGround = _0x44fdfb;
      _0x24bde2.useModelOffset = _0x40955f;
      _0x24bde2.heading = _0x3df00a;
      if (IsDisabledControlJustPressed(0, 200)) {
        _0x5d237e();
        _0x179abe.setState("none");
      }
      if (_0x2f3d46 == "selection") {
        if (IsDisabledControlJustPressed(0, 158)) {
          _0x179abe.setState("GizmoNoCam");
        }
        if (IsDisabledControlJustPressed(0, 160)) {
          _0x179abe.setState("GizmoCam");
        }
      }
    }
    function _0xefff5e() {
      _0x432779 = undefined;
    }
    function _0x6818f3(_0x15c27d) {
      if (_0x15c27d) {
        globalThis.exports.inventory.SetInventoryDisabled(true);
        globalThis.exports.inventory.SetActionBarDisabled(true);
        SendNUIMessage({
          action: "shallow",
          data: {
            shallow: true
          }
        });
        SendNUIMessage({
          action: "display",
          data: {
            display: true
          }
        });
      } else {
        globalThis.exports.inventory.SetInventoryDisabled(false);
        globalThis.exports.inventory.SetActionBarDisabled(false);
        SendNUIMessage({
          action: "display",
          data: {
            display: false
          }
        });
        SendNUIMessage({
          action: "shallow",
          data: {
            shallow: false
          }
        });
        SendNUIMessage({
          action: "closeDisplay"
        });
      }
    }
    ;
    function _0x3c69db(_0x250c33, _0x598153) {
      if (_0x598153 == null || _0x598153 > _0x250c33.length) {
        _0x598153 = _0x250c33.length;
      }
      for (var _0x21bdcb = 0, _0x108926 = new Array(_0x598153); _0x21bdcb < _0x598153; _0x21bdcb++) {
        _0x108926[_0x21bdcb] = _0x250c33[_0x21bdcb];
      }
      return _0x108926;
    }
    function _0x3ba95a(_0x275703) {
      if (Array.isArray(_0x275703)) {
        return _0x275703;
      }
    }
    function _0x3e9928(_0x3def9e, _0x4e7840, _0x2e4f3d, _0x1ec62d, _0x3d073f, _0x92c11f, _0x543440) {
      try {
        var _0x32d8f2 = _0x3def9e[_0x92c11f](_0x543440);
        var _0x2805ca = _0x32d8f2.value;
      } catch (_0x448a93) {
        _0x2e4f3d(_0x448a93);
        return;
      }
      if (_0x32d8f2.done) {
        _0x4e7840(_0x2805ca);
      } else {
        Promise.resolve(_0x2805ca).then(_0x1ec62d, _0x3d073f);
      }
    }
    function _0x455d56(_0x48a232) {
      return function () {
        var _0x5056a3 = this;
        var _0x16406f = arguments;
        return new Promise(function (_0x3549e3, _0x26422f) {
          var _0x1c80c1 = _0x48a232.apply(_0x5056a3, _0x16406f);
          function _0x5f3fab(_0x333e1a) {
            _0x3e9928(_0x1c80c1, _0x3549e3, _0x26422f, _0x5f3fab, _0x5e911b, "next", _0x333e1a);
          }
          function _0x5e911b(_0x17c7d4) {
            _0x3e9928(_0x1c80c1, _0x3549e3, _0x26422f, _0x5f3fab, _0x5e911b, "throw", _0x17c7d4);
          }
          _0x5f3fab(undefined);
        });
      };
    }
    function _0x23b001(_0x1e97fc, _0x45b675) {
      var _0x22e539 = _0x1e97fc == null ? null : typeof Symbol !== "undefined" && _0x1e97fc[Symbol.iterator] || _0x1e97fc["@@iterator"];
      if (_0x22e539 == null) {
        return;
      }
      var _0x7355da = [];
      var _0x2770bf = true;
      var _0x200907 = false;
      var _0x1c7080;
      var _0x5868f3;
      try {
        for (_0x22e539 = _0x22e539.call(_0x1e97fc); !(_0x2770bf = (_0x1c7080 = _0x22e539.next()).done); _0x2770bf = true) {
          _0x7355da.push(_0x1c7080.value);
          if (_0x45b675 && _0x7355da.length === _0x45b675) {
            break;
          }
        }
      } catch (_0x393083) {
        _0x200907 = true;
        _0x5868f3 = _0x393083;
      } finally {
        try {
          if (!_0x2770bf && _0x22e539.return != null) {
            _0x22e539.return();
          }
        } finally {
          if (_0x200907) {
            throw _0x5868f3;
          }
        }
      }
      return _0x7355da;
    }
    function _0x3f3608() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x3f371e(_0xcfb0a9, _0x4ab3d7) {
      return _0x3ba95a(_0xcfb0a9) || _0x23b001(_0xcfb0a9, _0x4ab3d7) || _0x247bda(_0xcfb0a9, _0x4ab3d7) || _0x3f3608();
    }
    function _0x247bda(_0xc6adf9, _0x53108c) {
      if (!_0xc6adf9) {
        return;
      }
      if (typeof _0xc6adf9 === "string") {
        return _0x3c69db(_0xc6adf9, _0x53108c);
      }
      var _0x30680f = Object.prototype.toString.call(_0xc6adf9).slice(8, -1);
      if (_0x30680f === "Object" && _0xc6adf9.constructor) {
        _0x30680f = _0xc6adf9.constructor.name;
      }
      if (_0x30680f === "Map" || _0x30680f === "Set") {
        return Array.from(_0x30680f);
      }
      if (_0x30680f === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x30680f)) {
        return _0x3c69db(_0xc6adf9, _0x53108c);
      }
    }
    function _0x3b14a5(_0x3258ef, _0x586236) {
      var _0x150937;
      var _0xd10d57;
      var _0x50f6ae;
      var _0x2c9bc0;
      var _0x1e0665 = {
        label: 0,
        sent: function () {
          if (_0x50f6ae[0] & 1) {
            throw _0x50f6ae[1];
          }
          return _0x50f6ae[1];
        },
        trys: [],
        ops: []
      };
      _0x2c9bc0 = {
        next: _0x208f2f(0),
        throw: _0x208f2f(1),
        return: _0x208f2f(2)
      };
      if (typeof Symbol === "function") {
        _0x2c9bc0[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x2c9bc0;
      function _0x208f2f(_0x823d8e) {
        return function (_0x40c4f7) {
          return _0x123b5f([_0x823d8e, _0x40c4f7]);
        };
      }
      function _0x123b5f(_0x1ddde9) {
        if (_0x150937) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1e0665) {
          try {
            _0x150937 = 1;
            if (_0xd10d57 && (_0x50f6ae = _0x1ddde9[0] & 2 ? _0xd10d57.return : _0x1ddde9[0] ? _0xd10d57.throw || ((_0x50f6ae = _0xd10d57.return) && _0x50f6ae.call(_0xd10d57), 0) : _0xd10d57.next) && !(_0x50f6ae = _0x50f6ae.call(_0xd10d57, _0x1ddde9[1])).done) {
              return _0x50f6ae;
            }
            _0xd10d57 = 0;
            if (_0x50f6ae) {
              _0x1ddde9 = [_0x1ddde9[0] & 2, _0x50f6ae.value];
            }
            switch (_0x1ddde9[0]) {
              case 0:
              case 1:
                _0x50f6ae = _0x1ddde9;
                break;
              case 4:
                _0x1e0665.label++;
                var _0x44c213 = {
                  value: _0x1ddde9[1],
                  done: false
                };
                return _0x44c213;
              case 5:
                _0x1e0665.label++;
                _0xd10d57 = _0x1ddde9[1];
                _0x1ddde9 = [0];
                continue;
              case 7:
                _0x1ddde9 = _0x1e0665.ops.pop();
                _0x1e0665.trys.pop();
                continue;
              default:
                if (!(_0x50f6ae = _0x1e0665.trys, _0x50f6ae = _0x50f6ae.length > 0 && _0x50f6ae[_0x50f6ae.length - 1]) && (_0x1ddde9[0] === 6 || _0x1ddde9[0] === 2)) {
                  _0x1e0665 = 0;
                  continue;
                }
                if (_0x1ddde9[0] === 3 && (!_0x50f6ae || _0x1ddde9[1] > _0x50f6ae[0] && _0x1ddde9[1] < _0x50f6ae[3])) {
                  _0x1e0665.label = _0x1ddde9[1];
                  break;
                }
                if (_0x1ddde9[0] === 6 && _0x1e0665.label < _0x50f6ae[1]) {
                  _0x1e0665.label = _0x50f6ae[1];
                  _0x50f6ae = _0x1ddde9;
                  break;
                }
                if (_0x50f6ae && _0x1e0665.label < _0x50f6ae[2]) {
                  _0x1e0665.label = _0x50f6ae[2];
                  _0x1e0665.ops.push(_0x1ddde9);
                  break;
                }
                if (_0x50f6ae[2]) {
                  _0x1e0665.ops.pop();
                }
                _0x1e0665.trys.pop();
                continue;
            }
            _0x1ddde9 = _0x586236.call(_0x3258ef, _0x1e0665);
          } catch (_0x59d3bd) {
            _0x1ddde9 = [6, _0x59d3bd];
            _0xd10d57 = 0;
          } finally {
            _0x150937 = _0x50f6ae = 0;
          }
        }
        if (_0x1ddde9[0] & 5) {
          throw _0x1ddde9[1];
        }
        var _0x2e2152 = {
          value: _0x1ddde9[0] ? _0x1ddde9[1] : undefined,
          done: true
        };
        return _0x2e2152;
      }
    }
    var _0x50985b = 6;
    var _0x502688 = 4;
    var _0x2d85a0 = [];
    var _0x19f5cb = false;
    var _0x538cdb;
    var _0x198b1d = 0;
    var _0x363357 = 0;
    var _0x417e1e = [0, 200, 0, 30];
    var _0x3271b9 = 0;
    var _0x41b164 = 0;
    var _0x2ca2e0 = false;
    var _0x515711 = "none";
    var _0x4533c5 = function () {
      var _0x1351a2 = _0x455d56(function (_0x913afe) {
        return _0x3b14a5(this, function (_0x255aa4) {
          _0x291bb4(true);
          return [2];
        });
      });
      return function _0x1efdb8(_0x2a74d3) {
        return _0x1351a2.apply(this, arguments);
      };
    }();
    var _0x377336 = function () {
      var _0x857a4e = _0x455d56(function () {
        return _0x3b14a5(this, function (_0x35472d) {
          _0x515711 = "none";
          _0x291bb4(false);
          return [2];
        });
      });
      return function _0x5e79a2() {
        return _0x857a4e.apply(this, arguments);
      };
    }();
    var _0x1dc734 = function () {
      var _0x1ec49d = _0x455d56(function (_0xe3e7aa) {
        return _0x3b14a5(this, function (_0x3802b6) {
          _0x2d85a0.push(_0xe3e7aa);
          return [2];
        });
      });
      return function _0x366a82(_0x453c12) {
        return _0x1ec49d.apply(this, arguments);
      };
    }();
    var _0x30effb = function () {
      var _0x1f03c3 = _0x455d56(function (_0x3b4417) {
        return _0x3b14a5(this, function (_0x14db6a) {
          _0x515711 = _0x3b4417;
          return [2];
        });
      });
      return function _0x5b50c1(_0x32e147) {
        return _0x1f03c3.apply(this, arguments);
      };
    }();
    var _0x20f60f = function () {
      var _0x1cc7ee = _0x455d56(function () {
        return _0x3b14a5(this, function (_0x5e699c) {
          _0x2d85a0.pop();
          return [2];
        });
      });
      return function _0x459ded() {
        return _0x1cc7ee.apply(this, arguments);
      };
    }();
    var _0x4b1341 = function () {
      var _0x34055c = _0x455d56(function (_0x1b8565) {
        var _0x58ad1c;
        var _0x26e700;
        var _0x1a1833;
        return _0x3b14a5(this, function (_0x2c15d8) {
          for (_0x26e700 = 0; _0x26e700 < _0x2d85a0.length; _0x26e700++) {
            _0x1a1833 = _0x2d85a0[_0x26e700];
            if (_0x1b8565.getDistance(_0x1a1833) < 1) {
              if (_0x26e700 != 0) {
                _0x1ac2c2();
                return [2, [false, false]];
              } else {
                _0x58ad1c = _0x1a1833;
              }
            }
          }
          if (_0x2d85a0.length >= _0x50985b && _0x58ad1c == undefined) {
            _0x1ac2c2();
            return [2, [false, false]];
          }
          if (_0x58ad1c != undefined) {
            if (_0x2d85a0.length <= 3) {
              _0x1ac2c2();
              return [2, [false, false]];
            } else {
              return [2, [true, true]];
            }
          }
          return [2, [true, false]];
        });
      });
      return function _0x1a6bbe(_0xb2361a) {
        return _0x34055c.apply(this, arguments);
      };
    }();
    var _0x1ac2c2 = function () {
      var _0x2118a9 = _0x455d56(function () {
        return _0x3b14a5(this, function (_0x5c9d60) {
          _0x417e1e = [255, 0, 0, 60];
          setTimeout(function () {
            _0x417e1e = [0, 200, 0, 30];
          }, 500);
          return [2];
        });
      });
      return function _0x1f6500() {
        return _0x2118a9.apply(this, arguments);
      };
    }();
    var _0x291bb4 = function () {
      var _0x31d8bf = _0x455d56(function (_0x3633ea) {
        var _0xe8caa6;
        var _0x17069d;
        var _0x2a9acd;
        return _0x3b14a5(this, function (_0x3ebd28) {
          _0xe8caa6 = GetInteriorFromPrimaryView();
          _0x17069d = _0xf35f0d.get(_0xe8caa6);
          if (_0x17069d) {
            if (_0x17069d.ready) {
              if (_0x17069d.inside) {
                _0x2a9acd = _0x2b98da.get(_0x17069d.databaseID);
                if (_0x2a9acd && _0x2a9acd.isApartment) {
                  emit("DoLongHudText", "Cannot use rooms inside Apartments.", 2);
                  return [2];
                }
              }
            }
          }
          if (_0x3633ea != null) {
            _0x19f5cb = _0x3633ea;
          } else {
            _0x19f5cb = !_0x19f5cb;
          }
          if (_0x19f5cb) {
            if (_0x198b1d != 0 || _0x363357 != 0) {
              return [2];
            }
            _0x2ca2e0 = true;
            _0x198b1d = setTick(function () {
              _0x1d4011();
            });
            _0x363357 = setTick(function () {
              _0x5b2f0d();
            });
            _0x5a2fd2(true);
          } else {
            _0x2ca2e0 = false;
            clearTick(_0x198b1d);
            clearTick(_0x363357);
            _0x198b1d = 0;
            _0x363357 = 0;
            _0x2d85a0 = [];
            _0x5a2fd2(false);
            SendNUIMessage({
              data: {
                showRoom: false
              }
            });
          }
          return [2];
        });
      });
      return function _0x42eb4f(_0x5762e7) {
        return _0x31d8bf.apply(this, arguments);
      };
    }();
    var _0x1d4011 = function () {
      var _0x472c83 = _0x455d56(function () {
        var _0x368b99;
        var _0x196400;
        var _0x475782;
        var _0x461176;
        var _0x450bb0;
        var _0xd227e6;
        var _0xd7f26d;
        var _0x1e54a3;
        var _0x40fdd2;
        var _0x48fbf1;
        var _0x18ab33;
        var _0x484d77;
        return _0x3b14a5(this, function (_0x23efa3) {
          if (_0x538cdb != null) {
            if (_0x2d85a0.length != 0) {
              _0x368b99 = _0x2d85a0[0];
              _0x196400 = _0x2d85a0[_0x2d85a0.length - 1];
              if (_0x2ca2e0) {
                _0x24792f(_0x196400, _0x538cdb, _0x368b99.z + _0x3271b9, _0x368b99.z + _0x502688 + _0x41b164, _0x417e1e);
              }
              for (_0x475782 = 1; _0x475782 < _0x2d85a0.length; _0x475782++) {
                _0x461176 = _0x2d85a0[_0x475782];
                _0x450bb0 = _0x2d85a0[_0x475782 - 1];
                if (_0x461176 != null && _0x450bb0 != null) {
                  _0x24792f(_0x450bb0, _0x461176, _0x368b99.z + _0x3271b9, _0x368b99.z + _0x502688 + _0x41b164, _0x417e1e);
                }
              }
              if (!_0x2ca2e0) {
                _0x24792f(_0x196400, _0x368b99, _0x368b99.z + _0x3271b9, _0x368b99.z + _0x502688 + _0x41b164, _0x417e1e);
              }
            } else if (_0x2ca2e0) {
              _0xd227e6 = _0x538cdb;
              _0xd7f26d = _0xd227e6.z + _0x3271b9;
              _0x1e54a3 = _0xd227e6.z + _0x502688 + _0x41b164;
              _0x40fdd2 = new _0x45b4c7(_0xd227e6.x + 0.1, _0xd227e6.y + 0.1, _0xd7f26d);
              _0x48fbf1 = new _0x45b4c7(_0xd227e6.x - 0.1, _0xd227e6.y - 0.1, _0xd7f26d);
              _0x18ab33 = new _0x45b4c7(_0xd227e6.x + 0.1, _0xd227e6.y - 0.1, _0xd7f26d);
              _0x484d77 = new _0x45b4c7(_0xd227e6.x - 0.1, _0xd227e6.y + 0.1, _0xd7f26d);
              _0x24792f(_0x40fdd2, _0x48fbf1, _0xd7f26d, _0x1e54a3, [0, 255, 0, 30]);
              _0x24792f(_0x48fbf1, _0x18ab33, _0xd7f26d, _0x1e54a3, [0, 255, 0, 30]);
              _0x24792f(_0x18ab33, _0x484d77, _0xd7f26d, _0x1e54a3, [0, 255, 0, 30]);
              _0x24792f(_0x484d77, _0x40fdd2, _0xd7f26d, _0x1e54a3, [0, 255, 0, 30]);
            }
          }
          return [2];
        });
      });
      return function _0x5acb8d() {
        return _0x472c83.apply(this, arguments);
      };
    }();
    var _0x5b2f0d = function () {
      var _0x90b574 = _0x455d56(function () {
        var _0x394469;
        var _0x268bf5;
        var _0x15e94b;
        var _0x57f5bd;
        var _0x518814;
        var _0x3da9c8;
        var _0x1c45d2;
        var _0x18f511;
        var _0x74ad65;
        var _0x5d07db;
        var _0xa3771e;
        var _0x365161;
        var _0xd360c9;
        var _0xf30a42;
        var _0x2df45f;
        return _0x3b14a5(this, function (_0x1658b4) {
          switch (_0x1658b4.label) {
            case 0:
              _0x394469 = GetDisabledControlNormal(0, 239);
              _0x268bf5 = GetDisabledControlNormal(0, 240);
              _0x15e94b = _0x3f371e(GetWorldCoordFromScreenCoord(_0x394469, _0x268bf5), 2);
              _0x57f5bd = _0x15e94b[0];
              _0x518814 = _0x15e94b[1];
              _0x3da9c8 = 30;
              _0x1c45d2 = new _0x45b4c7(_0x57f5bd[0] + _0x518814[0] * _0x3da9c8, _0x57f5bd[1] + _0x518814[1] * _0x3da9c8, _0x57f5bd[2] + _0x518814[2] * _0x3da9c8);
              return [4, _0x21bb12(_0x1c45d2, _0x2cdcce, -1)];
            case 1:
              _0x18f511 = _0x3f371e.apply(undefined, [_0x1658b4.sent(), 3]);
              _0x74ad65 = _0x18f511[0];
              _0x5d07db = _0x18f511[1];
              _0xa3771e = _0x18f511[2];
              _0x538cdb = _0x45b4c7.fromArray(_0x5d07db);
              _0x365161 = IsDisabledControlJustPressed(0, 24);
              if (!_0x365161 || !!_0x4b8ac4 || !_0x2ca2e0) {
                return [3, 3];
              }
              return [4, _0x4b1341(_0x538cdb)];
            case 2:
              _0xd360c9 = _0x3f371e.apply(undefined, [_0x1658b4.sent(), 2]);
              _0xf30a42 = _0xd360c9[0];
              _0x2df45f = _0xd360c9[1];
              if (_0xf30a42 && !_0x2df45f) {
                _0x1dc734(_0x538cdb);
              }
              if (_0xf30a42 && _0x2df45f) {
                _0x2ca2e0 = false;
                SendNUIMessage({
                  action: "openCreateRoom"
                });
              }
              _0x1658b4.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x11516d() {
        return _0x90b574.apply(this, arguments);
      };
    }();
    var _0x3c7ee6 = function () {
      var _0x4535ff = _0x455d56(function (_0x31675a, _0x2e78b3) {
        return _0x3b14a5(this, function (_0x4b3f33) {
          _0x3271b9 = _0x31675a;
          _0x41b164 = _0x2e78b3;
          return [2];
        });
      });
      return function _0x9f05be(_0x5950d6, _0x43ca00) {
        return _0x4535ff.apply(this, arguments);
      };
    }();
    var _0x16488c = function () {
      var _0x15f904 = _0x455d56(function (_0x3135e1) {
        var _0x4cc499;
        var _0x2a18e2;
        var _0x107180;
        var _0x59e84d;
        var _0x31f6e7;
        return _0x3b14a5(this, function (_0x4c9669) {
          switch (_0x4c9669.label) {
            case 0:
              _0x4cc499 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false)).add(new _0x45b4c7(0, 0, 1));
              return [4, _0x1885b5("DUMMY:ROOM:" + _0x3135e1, _0x4cc499, new _0x21193b(0, 0, 0, 0), undefined, undefined)];
            case 1:
              _0x2a18e2 = _0x4c9669.sent();
              if (!_0x2a18e2) {
                return [3, 4];
              }
              _0x107180 = _0x2d85a0[0];
              _0x59e84d = {
                points: _0x5457f6(_0x2d85a0),
                minZ: _0x107180.z + _0x3271b9,
                maxZ: _0x107180.z + _0x502688 + _0x41b164
              };
              return [4, _0x511a6d("room", JSON.stringify(_0x59e84d), _0x2a18e2.databaseID)];
            case 2:
              _0x31f6e7 = _0x4c9669.sent();
              return [4, _0x2ecf39(_0x31f6e7)];
            case 3:
              _0x4c9669.sent();
              _0x2a18e2.startAll();
              _0x4c9669.label = 4;
            case 4:
              _0x179abe.setState(_0x515711);
              return [2];
          }
        });
      });
      return function _0x5d612e(_0x531f64) {
        return _0x15f904.apply(this, arguments);
      };
    }();
    ;
    function _0x29bcfb(_0x22c05d, _0xdaa3d7) {
      if (_0xdaa3d7 == null || _0xdaa3d7 > _0x22c05d.length) {
        _0xdaa3d7 = _0x22c05d.length;
      }
      for (var _0x4cd580 = 0, _0x260010 = new Array(_0xdaa3d7); _0x4cd580 < _0xdaa3d7; _0x4cd580++) {
        _0x260010[_0x4cd580] = _0x22c05d[_0x4cd580];
      }
      return _0x260010;
    }
    function _0xd6735c(_0x5409d9) {
      if (Array.isArray(_0x5409d9)) {
        return _0x5409d9;
      }
    }
    function _0x2245ea(_0x293443, _0x94f9cf, _0x335675, _0x2710fa, _0x143989, _0x33693f, _0xd1bc71) {
      try {
        var _0x3cd977 = _0x293443[_0x33693f](_0xd1bc71);
        var _0xab524a = _0x3cd977.value;
      } catch (_0x24bb48) {
        _0x335675(_0x24bb48);
        return;
      }
      if (_0x3cd977.done) {
        _0x94f9cf(_0xab524a);
      } else {
        Promise.resolve(_0xab524a).then(_0x2710fa, _0x143989);
      }
    }
    function _0x1ab24a(_0x13e7b4) {
      return function () {
        var _0x3dc942 = this;
        var _0x5e7354 = arguments;
        return new Promise(function (_0x409eb2, _0x11e06e) {
          var _0x37f53b = _0x13e7b4.apply(_0x3dc942, _0x5e7354);
          function _0xa8715f(_0x182729) {
            _0x2245ea(_0x37f53b, _0x409eb2, _0x11e06e, _0xa8715f, _0x255f1c, "next", _0x182729);
          }
          function _0x255f1c(_0x4fc48c) {
            _0x2245ea(_0x37f53b, _0x409eb2, _0x11e06e, _0xa8715f, _0x255f1c, "throw", _0x4fc48c);
          }
          _0xa8715f(undefined);
        });
      };
    }
    function _0x59d437(_0x26466f, _0x532435) {
      var _0x4e20b8 = _0x26466f == null ? null : typeof Symbol !== "undefined" && _0x26466f[Symbol.iterator] || _0x26466f["@@iterator"];
      if (_0x4e20b8 == null) {
        return;
      }
      var _0x2b6e18 = [];
      var _0x352289 = true;
      var _0x32291e = false;
      var _0x455ee1;
      var _0x7aff80;
      try {
        for (_0x4e20b8 = _0x4e20b8.call(_0x26466f); !(_0x352289 = (_0x455ee1 = _0x4e20b8.next()).done); _0x352289 = true) {
          _0x2b6e18.push(_0x455ee1.value);
          if (_0x532435 && _0x2b6e18.length === _0x532435) {
            break;
          }
        }
      } catch (_0x4a251b) {
        _0x32291e = true;
        _0x7aff80 = _0x4a251b;
      } finally {
        try {
          if (!_0x352289 && _0x4e20b8.return != null) {
            _0x4e20b8.return();
          }
        } finally {
          if (_0x32291e) {
            throw _0x7aff80;
          }
        }
      }
      return _0x2b6e18;
    }
    function _0x373c74() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x26e83d(_0x12a663, _0x582122) {
      return _0xd6735c(_0x12a663) || _0x59d437(_0x12a663, _0x582122) || _0x551245(_0x12a663, _0x582122) || _0x373c74();
    }
    function _0x551245(_0x208002, _0x38a8b2) {
      if (!_0x208002) {
        return;
      }
      if (typeof _0x208002 === "string") {
        return _0x29bcfb(_0x208002, _0x38a8b2);
      }
      var _0x5d3437 = Object.prototype.toString.call(_0x208002).slice(8, -1);
      if (_0x5d3437 === "Object" && _0x208002.constructor) {
        _0x5d3437 = _0x208002.constructor.name;
      }
      if (_0x5d3437 === "Map" || _0x5d3437 === "Set") {
        return Array.from(_0x5d3437);
      }
      if (_0x5d3437 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5d3437)) {
        return _0x29bcfb(_0x208002, _0x38a8b2);
      }
    }
    function _0x4ef02f(_0x76e7a5, _0x90d36f) {
      var _0x26bc27;
      var _0x37ce5d;
      var _0x2b9cfb;
      var _0x37723a;
      var _0x3f1213 = {
        label: 0,
        sent: function () {
          if (_0x2b9cfb[0] & 1) {
            throw _0x2b9cfb[1];
          }
          return _0x2b9cfb[1];
        },
        trys: [],
        ops: []
      };
      _0x37723a = {
        next: _0x143cd8(0),
        throw: _0x143cd8(1),
        return: _0x143cd8(2)
      };
      if (typeof Symbol === "function") {
        _0x37723a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x37723a;
      function _0x143cd8(_0x385572) {
        return function (_0x36de20) {
          return _0x2a8ae4([_0x385572, _0x36de20]);
        };
      }
      function _0x2a8ae4(_0x45a879) {
        if (_0x26bc27) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3f1213) {
          try {
            _0x26bc27 = 1;
            if (_0x37ce5d && (_0x2b9cfb = _0x45a879[0] & 2 ? _0x37ce5d.return : _0x45a879[0] ? _0x37ce5d.throw || ((_0x2b9cfb = _0x37ce5d.return) && _0x2b9cfb.call(_0x37ce5d), 0) : _0x37ce5d.next) && !(_0x2b9cfb = _0x2b9cfb.call(_0x37ce5d, _0x45a879[1])).done) {
              return _0x2b9cfb;
            }
            _0x37ce5d = 0;
            if (_0x2b9cfb) {
              _0x45a879 = [_0x45a879[0] & 2, _0x2b9cfb.value];
            }
            switch (_0x45a879[0]) {
              case 0:
              case 1:
                _0x2b9cfb = _0x45a879;
                break;
              case 4:
                _0x3f1213.label++;
                var _0x35c59f = {
                  value: _0x45a879[1],
                  done: false
                };
                return _0x35c59f;
              case 5:
                _0x3f1213.label++;
                _0x37ce5d = _0x45a879[1];
                _0x45a879 = [0];
                continue;
              case 7:
                _0x45a879 = _0x3f1213.ops.pop();
                _0x3f1213.trys.pop();
                continue;
              default:
                if (!(_0x2b9cfb = _0x3f1213.trys, _0x2b9cfb = _0x2b9cfb.length > 0 && _0x2b9cfb[_0x2b9cfb.length - 1]) && (_0x45a879[0] === 6 || _0x45a879[0] === 2)) {
                  _0x3f1213 = 0;
                  continue;
                }
                if (_0x45a879[0] === 3 && (!_0x2b9cfb || _0x45a879[1] > _0x2b9cfb[0] && _0x45a879[1] < _0x2b9cfb[3])) {
                  _0x3f1213.label = _0x45a879[1];
                  break;
                }
                if (_0x45a879[0] === 6 && _0x3f1213.label < _0x2b9cfb[1]) {
                  _0x3f1213.label = _0x2b9cfb[1];
                  _0x2b9cfb = _0x45a879;
                  break;
                }
                if (_0x2b9cfb && _0x3f1213.label < _0x2b9cfb[2]) {
                  _0x3f1213.label = _0x2b9cfb[2];
                  _0x3f1213.ops.push(_0x45a879);
                  break;
                }
                if (_0x2b9cfb[2]) {
                  _0x3f1213.ops.pop();
                }
                _0x3f1213.trys.pop();
                continue;
            }
            _0x45a879 = _0x90d36f.call(_0x76e7a5, _0x3f1213);
          } catch (_0x4cef6d) {
            _0x45a879 = [6, _0x4cef6d];
            _0x37ce5d = 0;
          } finally {
            _0x26bc27 = _0x2b9cfb = 0;
          }
        }
        if (_0x45a879[0] & 5) {
          throw _0x45a879[1];
        }
        var _0x3b0b56 = {
          value: _0x45a879[0] ? _0x45a879[1] : undefined,
          done: true
        };
        return _0x3b0b56;
      }
    }
    var _0x64c8e5 = false;
    var _0x4c3e92 = function () {
      var _0x198652 = _0x1ab24a(function () {
        return _0x4ef02f(this, function (_0x309ba5) {
          _0x64c8e5 = !_0x64c8e5;
          return [2];
        });
      });
      return function _0x1ceff4() {
        return _0x198652.apply(this, arguments);
      };
    }();
    var _0x250817 = function () {
      var _0x2cd1bb = _0x1ab24a(function () {
        var _0x92f4e3;
        var _0x29a822;
        var _0x375f66;
        var _0x248bd2;
        var _0x4652a6;
        return _0x4ef02f(this, function (_0x10e08f) {
          switch (_0x10e08f.label) {
            case 0:
              return [4, NPX.Procedures.execute("editor:viewPerms")];
            case 1:
              _0x92f4e3 = _0x10e08f.sent();
              if (!_0x6ada10) {
                return [3, 8];
              }
              if (!_0x6ada10.isApartment) {
                return [3, 4];
              }
              if (!_0x181a57) {
                return [3, 3];
              }
              if (!_0x34cc43) {
                emit("DoLongHudText", "You are not inside a known area", 2);
                return [2, false];
              }
              return [4, NPX.Procedures.execute("apartments:HasPermissions", _0x181a57.model)];
            case 2:
              _0x29a822 = _0x10e08f.sent();
              if (!_0x29a822) {
                emit("DoLongHudText", "You do not have permissions to open menu here", 2);
              }
              return [2, _0x29a822];
            case 3:
              return [2, false];
            case 4:
              if (!_0x6ada10.isHousing) {
                return [3, 7];
              }
              _0x375f66 = _0x6ada10.model.split(/\s*:\s*/);
              if (_0x375f66[0] != "DUMMY") {
                return [3, 7];
              }
              if (_0x375f66[1] != "HOUSING") {
                return [3, 7];
              }
              return [4, NPX.Procedures.execute("np-housing:HasFurniturePermission", _0x375f66[2])];
            case 5:
              _0x248bd2 = _0x10e08f.sent();
              return [4, NPX.Procedures.execute("np-editor:canPlayerChangeLeadObjectState", _0x6ada10.databaseID)];
            case 6:
              _0x4652a6 = _0x10e08f.sent();
              if (_0x248bd2 && _0x4652a6) {
                return [2, true];
              } else {
                emit("DoLongHudText", "You do not have permissions to open menu here", 2);
                return [2, false];
              }
              _0x10e08f.label = 7;
            case 7:
              return [3, 9];
            case 8:
              _0x64c8e5 = true;
              if (_0x92f4e3 && _0x64c8e5) {
                return [2, true];
              }
              _0x10e08f.label = 9;
            case 9:
              return [2, false];
          }
        });
      });
      return function _0x34caf2() {
        return _0x2cd1bb.apply(this, arguments);
      };
    }();
    var _0x64af29 = function () {
      var _0x179327 = _0x1ab24a(function () {
        var _0x5be688;
        var _0x15c041;
        var _0x18f146;
        var _0x24d286;
        var _0x43b146;
        var _0x18833e;
        var _0x5669bd;
        var _0x45a536;
        var _0x158c89;
        var _0x250fe4;
        var _0x3c3c52;
        var _0x40bbec;
        var _0xa1446c;
        var _0x1fcba3;
        var _0x5210af;
        var _0xa85a95;
        var _0x167777;
        var _0x10da60;
        var _0x127720;
        var _0x37bb6d;
        var _0xd1208f;
        var _0x580f47;
        var _0x116fdb;
        var _0x42b615;
        var _0x41569a;
        return _0x4ef02f(this, function (_0x54dcab) {
          switch (_0x54dcab.label) {
            case 0:
              return [4, NPX.Procedures.execute("editor:viewPerms")];
            case 1:
              _0x5be688 = _0x54dcab.sent();
              _0x15c041 = new Map();
              if (!!_0x64c8e5) {
                return [3, 4];
              }
              if (!_0x6ada10) {
                return [3, 3];
              }
              _0x18f146 = _0x6ada10.model;
              _0x24d286 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId()));
              _0x43b146 = GetInteriorFromCollision(_0x24d286.x, _0x24d286.y, _0x24d286.z);
              if (_0x43b146 != 0 && _0x43b146 != _0x6ada10.interiorID) {
                _0x18833e = _0xf35f0d.get(_0x43b146);
                if (_0x18833e) {
                  _0x5669bd = _0x2b98da.get(_0x18833e.databaseID);
                  if (_0x5669bd) {
                    _0x18f146 = _0x5669bd.model;
                  }
                }
              }
              if (_0x181a57) {
                if (_0x181a57.apartmentInformation) {
                  _0x18f146 = _0x181a57.model;
                }
              }
              return [4, _0x610a2d(_0x7f8b0a, _0x18f146)];
            case 2:
              _0x45a536 = _0x54dcab.sent();
              if (_0x45a536 && _0x45a536.child) {
                _0x158c89 = true;
                _0x250fe4 = false;
                _0x3c3c52 = undefined;
                try {
                  for (_0x40bbec = _0x45a536.child.entries()[Symbol.iterator](); !(_0x158c89 = (_0xa1446c = _0x40bbec.next()).done); _0x158c89 = true) {
                    _0x1fcba3 = _0x26e83d(_0xa1446c.value, 2);
                    _0x5210af = _0x1fcba3[0];
                    _0xa85a95 = _0x1fcba3[1];
                    _0x15c041.set(_0x5210af, _0xa85a95);
                  }
                } catch (_0x21bbe1) {
                  _0x250fe4 = true;
                  _0x3c3c52 = _0x21bbe1;
                } finally {
                  try {
                    if (!_0x158c89 && _0x40bbec.return != null) {
                      _0x40bbec.return();
                    }
                  } finally {
                    if (_0x250fe4) {
                      throw _0x3c3c52;
                    }
                  }
                }
              }
              _0x54dcab.label = 3;
            case 3:
              return [3, 6];
            case 4:
              if (!_0x5be688) {
                return [3, 6];
              }
              return [4, _0x610a2d(_0x7f8b0a, "DUMMY:ROOT")];
            case 5:
              _0x167777 = _0x54dcab.sent();
              if (_0x167777 && _0x167777.child) {
                _0x10da60 = true;
                _0x127720 = false;
                _0x37bb6d = undefined;
                try {
                  for (_0xd1208f = _0x167777.child.entries()[Symbol.iterator](); !(_0x10da60 = (_0x580f47 = _0xd1208f.next()).done); _0x10da60 = true) {
                    _0x116fdb = _0x26e83d(_0x580f47.value, 2);
                    _0x42b615 = _0x116fdb[0];
                    _0x41569a = _0x116fdb[1];
                    _0x15c041.set(_0x42b615, _0x41569a);
                  }
                } catch (_0x4cc2da) {
                  _0x127720 = true;
                  _0x37bb6d = _0x4cc2da;
                } finally {
                  try {
                    if (!_0x10da60 && _0xd1208f.return != null) {
                      _0xd1208f.return();
                    }
                  } finally {
                    if (_0x127720) {
                      throw _0x37bb6d;
                    }
                  }
                }
              }
              _0x54dcab.label = 6;
            case 6:
              return [2, _0x15c041];
          }
        });
      });
      return function _0x47e1ce() {
        return _0x179327.apply(this, arguments);
      };
    }();
    var _0x610a2d = function () {
      var _0x1cbd28 = _0x1ab24a(function (_0x469a49, _0x5fb877) {
        var _0x39796e;
        var _0x121a8c;
        var _0xc26c32;
        var _0x26abb7;
        var _0xed8f1f;
        var _0xedef1f;
        var _0x40fd3c;
        var _0x2986a7;
        var _0x366706;
        var _0x35c8af;
        return _0x4ef02f(this, function (_0x40c72b) {
          switch (_0x40c72b.label) {
            case 0:
              _0x39796e = true;
              _0x121a8c = false;
              _0xc26c32 = undefined;
              _0x40c72b.label = 1;
            case 1:
              _0x40c72b.trys.push([1, 7, 8, 9]);
              _0x26abb7 = _0x469a49.entries()[Symbol.iterator]();
              _0x40c72b.label = 2;
            case 2:
              if (!!(_0x39796e = (_0xed8f1f = _0x26abb7.next()).done)) {
                return [3, 6];
              }
              _0xedef1f = _0x26e83d(_0xed8f1f.value, 2);
              _0x40fd3c = _0xedef1f[0];
              _0x2986a7 = _0xedef1f[1];
              if (_0x2986a7.model !== _0x5fb877) {
                return [3, 3];
              }
              return [2, _0x2986a7];
            case 3:
              if (!_0x2986a7.child) {
                return [3, 5];
              }
              return [4, _0x610a2d(_0x2986a7.child, _0x5fb877)];
            case 4:
              _0x366706 = _0x40c72b.sent();
              if (_0x366706) {
                return [2, _0x366706];
              }
              _0x40c72b.label = 5;
            case 5:
              _0x39796e = true;
              return [3, 2];
            case 6:
              return [3, 9];
            case 7:
              _0x35c8af = _0x40c72b.sent();
              _0x121a8c = true;
              _0xc26c32 = _0x35c8af;
              return [3, 9];
            case 8:
              try {
                if (!_0x39796e && _0x26abb7.return != null) {
                  _0x26abb7.return();
                }
              } finally {
                if (_0x121a8c) {
                  throw _0xc26c32;
                }
              }
              return [7];
            case 9:
              return [2];
          }
        });
      });
      return function _0x18e85c(_0x4eb5e7, _0x1a38ac) {
        return _0x1cbd28.apply(this, arguments);
      };
    }();
    ;
    var _0x1d2629 = _0x5f5650(480);
    function _0x143aab(_0x5780ea, _0xeac7cc, _0x5f35ca, _0x261654, _0x34194f, _0x4d1d31, _0x3db414) {
      try {
        var _0x342b57 = _0x5780ea[_0x4d1d31](_0x3db414);
        var _0x11660f = _0x342b57.value;
      } catch (_0xce3e6) {
        _0x5f35ca(_0xce3e6);
        return;
      }
      if (_0x342b57.done) {
        _0xeac7cc(_0x11660f);
      } else {
        Promise.resolve(_0x11660f).then(_0x261654, _0x34194f);
      }
    }
    function _0x21c8b5(_0x3f6cdd) {
      return function () {
        var _0x3a6164 = this;
        var _0x7f4d1a = arguments;
        return new Promise(function (_0x1672c3, _0x103342) {
          var _0x15a440 = _0x3f6cdd.apply(_0x3a6164, _0x7f4d1a);
          function _0x29a42c(_0x528084) {
            _0x143aab(_0x15a440, _0x1672c3, _0x103342, _0x29a42c, _0x1d75e2, "next", _0x528084);
          }
          function _0x1d75e2(_0x4850c3) {
            _0x143aab(_0x15a440, _0x1672c3, _0x103342, _0x29a42c, _0x1d75e2, "throw", _0x4850c3);
          }
          _0x29a42c(undefined);
        });
      };
    }
    function _0x4b49d2(_0x6ec94e, _0x242402) {
      if (!(_0x6ec94e instanceof _0x242402)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x29d532(_0x48e791, _0x25cf9f) {
      for (var _0x46fea1 = 0; _0x46fea1 < _0x25cf9f.length; _0x46fea1++) {
        var _0x115d94 = _0x25cf9f[_0x46fea1];
        _0x115d94.enumerable = _0x115d94.enumerable || false;
        _0x115d94.configurable = true;
        if ("value" in _0x115d94) {
          _0x115d94.writable = true;
        }
        Object.defineProperty(_0x48e791, _0x115d94.key, _0x115d94);
      }
    }
    function _0x50ec51(_0x191ddb, _0x12e022, _0x2a658a) {
      if (_0x12e022) {
        _0x29d532(_0x191ddb.prototype, _0x12e022);
      }
      if (_0x2a658a) {
        _0x29d532(_0x191ddb, _0x2a658a);
      }
      return _0x191ddb;
    }
    function _0xfd9303(_0x5a66ad, _0x418046, _0x243ae9) {
      if (_0x418046 in _0x5a66ad) {
        var _0x495f8e = {
          value: _0x243ae9,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x5a66ad, _0x418046, _0x495f8e);
      } else {
        _0x5a66ad[_0x418046] = _0x243ae9;
      }
      return _0x5a66ad;
    }
    function _0x5ba72e(_0x335bad, _0x2d9c6a) {
      var _0x1e2375;
      var _0x11e57a;
      var _0x10a89a;
      var _0x394b5d;
      var _0x1c45a6 = {
        label: 0,
        sent: function () {
          if (_0x10a89a[0] & 1) {
            throw _0x10a89a[1];
          }
          return _0x10a89a[1];
        },
        trys: [],
        ops: []
      };
      _0x394b5d = {
        next: _0x461965(0),
        throw: _0x461965(1),
        return: _0x461965(2)
      };
      if (typeof Symbol === "function") {
        _0x394b5d[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x394b5d;
      function _0x461965(_0x200a3f) {
        return function (_0xcd8b9) {
          return _0x58b2d9([_0x200a3f, _0xcd8b9]);
        };
      }
      function _0x58b2d9(_0x3d7e03) {
        if (_0x1e2375) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1c45a6) {
          try {
            _0x1e2375 = 1;
            if (_0x11e57a && (_0x10a89a = _0x3d7e03[0] & 2 ? _0x11e57a.return : _0x3d7e03[0] ? _0x11e57a.throw || ((_0x10a89a = _0x11e57a.return) && _0x10a89a.call(_0x11e57a), 0) : _0x11e57a.next) && !(_0x10a89a = _0x10a89a.call(_0x11e57a, _0x3d7e03[1])).done) {
              return _0x10a89a;
            }
            _0x11e57a = 0;
            if (_0x10a89a) {
              _0x3d7e03 = [_0x3d7e03[0] & 2, _0x10a89a.value];
            }
            switch (_0x3d7e03[0]) {
              case 0:
              case 1:
                _0x10a89a = _0x3d7e03;
                break;
              case 4:
                _0x1c45a6.label++;
                var _0x227548 = {
                  value: _0x3d7e03[1],
                  done: false
                };
                return _0x227548;
              case 5:
                _0x1c45a6.label++;
                _0x11e57a = _0x3d7e03[1];
                _0x3d7e03 = [0];
                continue;
              case 7:
                _0x3d7e03 = _0x1c45a6.ops.pop();
                _0x1c45a6.trys.pop();
                continue;
              default:
                if (!(_0x10a89a = _0x1c45a6.trys, _0x10a89a = _0x10a89a.length > 0 && _0x10a89a[_0x10a89a.length - 1]) && (_0x3d7e03[0] === 6 || _0x3d7e03[0] === 2)) {
                  _0x1c45a6 = 0;
                  continue;
                }
                if (_0x3d7e03[0] === 3 && (!_0x10a89a || _0x3d7e03[1] > _0x10a89a[0] && _0x3d7e03[1] < _0x10a89a[3])) {
                  _0x1c45a6.label = _0x3d7e03[1];
                  break;
                }
                if (_0x3d7e03[0] === 6 && _0x1c45a6.label < _0x10a89a[1]) {
                  _0x1c45a6.label = _0x10a89a[1];
                  _0x10a89a = _0x3d7e03;
                  break;
                }
                if (_0x10a89a && _0x1c45a6.label < _0x10a89a[2]) {
                  _0x1c45a6.label = _0x10a89a[2];
                  _0x1c45a6.ops.push(_0x3d7e03);
                  break;
                }
                if (_0x10a89a[2]) {
                  _0x1c45a6.ops.pop();
                }
                _0x1c45a6.trys.pop();
                continue;
            }
            _0x3d7e03 = _0x2d9c6a.call(_0x335bad, _0x1c45a6);
          } catch (_0x164c58) {
            _0x3d7e03 = [6, _0x164c58];
            _0x11e57a = 0;
          } finally {
            _0x1e2375 = _0x10a89a = 0;
          }
        }
        if (_0x3d7e03[0] & 5) {
          throw _0x3d7e03[1];
        }
        var _0x3b4ff7 = {
          value: _0x3d7e03[0] ? _0x3d7e03[1] : undefined,
          done: true
        };
        return _0x3b4ff7;
      }
    }
    var _0x197d21 = function () {
      'use strict';

      function _0x3cc008() {
        _0x4b49d2(this, _0x3cc008);
        _0xfd9303(this, "states", new Map());
        _0xfd9303(this, "currentState", undefined);
      }
      _0x50ec51(_0x3cc008, [{
        key: "isCurrentState",
        value: function _0x492b19(_0x5edf20) {
          if (!this.currentState) {
            return false;
          }
          return this.currentState.name === _0x5edf20;
        }
      }, {
        key: "addState",
        value: function _0x2a08bb(_0x54eb57, _0x3a87e1) {
          var _0x3dd958;
          var _0xba66e1;
          var _0x18ce59;
          var _0x285536;
          var _0x215be9;
          var _0x384954;
          this.states.set(_0x54eb57, {
            name: _0x54eb57,
            onEnter: (_0xba66e1 = _0x3a87e1) === null || _0xba66e1 === undefined ? undefined : (_0x3dd958 = _0xba66e1.onEnter) === null || _0x3dd958 === undefined ? undefined : _0x3dd958.bind(this),
            onUpdate: (_0x285536 = _0x3a87e1) === null || _0x285536 === undefined ? undefined : (_0x18ce59 = _0x285536.onUpdate) === null || _0x18ce59 === undefined ? undefined : _0x18ce59.bind(this),
            onExit: (_0x384954 = _0x3a87e1) === null || _0x384954 === undefined ? undefined : (_0x215be9 = _0x384954.onExit) === null || _0x215be9 === undefined ? undefined : _0x215be9.bind(this)
          });
          return this;
        }
      }, {
        key: "setState",
        value: function _0xec3820(_0x48f68b) {
          var _0x3af9be = this;
          return _0x21c8b5(function () {
            var _0x5952ec;
            return _0x5ba72e(this, function (_0x219a4a) {
              switch (_0x219a4a.label) {
                case 0:
                  if (_0x48f68b == "none") {
                    return [3, 2];
                  }
                  return [4, _0x250817()];
                case 1:
                  _0x5952ec = _0x219a4a.sent();
                  if (!_0x5952ec) {
                    return [2];
                  }
                  _0x219a4a.label = 2;
                case 2:
                  if (!_0x3af9be.states.has(_0x48f68b)) {
                    _0x1d2629.warn(`Tried to change to unknown state: ${_0x48f68b}`);
                    return [2];
                  }
                  if (_0x3af9be.isCurrentState(_0x48f68b)) {
                    return [2];
                  }
                  _0x1d2629.log(`[StateMachine] change from ${_0x3af9be.currentState?.name ?? "none"} to ${_0x48f68b}`);
                  if (_0x3af9be.currentState && _0x3af9be.currentState.onExit) {
                    _0x3af9be.currentState.onExit(_0x48f68b);
                  }
                  _0x3af9be.currentState = _0x3af9be.states.get(_0x48f68b);
                  if (_0x3af9be.currentState && _0x3af9be.currentState.onEnter) {
                    ;
                    ;
                    _0x3af9be.currentState.onEnter(_0x3af9be.currentState?.name ?? "none");
                  }
                  var _0x38bada = {
                    Interface: _0x3af9be.currentState?.name
                  };
                  var _0x5d5123 = {
                    action: "currentInterface",
                    data: _0x38bada
                  };
                  SendNUIMessage(_0x5d5123);
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "getCurrentStateName",
        value: function _0x376808() {
          if (this.currentState) {
            return this.currentState.name;
          }
          return;
        }
      }]);
      return _0x3cc008;
    }();
    ;
    function _0x2d781d(_0x3946bc, _0x5e5306, _0x1572d3, _0x15a354, _0x45b5f9, _0x2acfa3, _0x46dea1) {
      try {
        var _0x3eb916 = _0x3946bc[_0x2acfa3](_0x46dea1);
        var _0x5b7d3a = _0x3eb916.value;
      } catch (_0xfdd439) {
        _0x1572d3(_0xfdd439);
        return;
      }
      if (_0x3eb916.done) {
        _0x5e5306(_0x5b7d3a);
      } else {
        Promise.resolve(_0x5b7d3a).then(_0x15a354, _0x45b5f9);
      }
    }
    function _0xd30809(_0x783905) {
      return function () {
        var _0x4418c8 = this;
        var _0x49c73a = arguments;
        return new Promise(function (_0x43765f, _0x1b58c2) {
          var _0x580b9d = _0x783905.apply(_0x4418c8, _0x49c73a);
          function _0x8121ac(_0x620ad9) {
            _0x2d781d(_0x580b9d, _0x43765f, _0x1b58c2, _0x8121ac, _0x4ac9cc, "next", _0x620ad9);
          }
          function _0x4ac9cc(_0x41243d) {
            _0x2d781d(_0x580b9d, _0x43765f, _0x1b58c2, _0x8121ac, _0x4ac9cc, "throw", _0x41243d);
          }
          _0x8121ac(undefined);
        });
      };
    }
    function _0x17dd19(_0x167ae2, _0x4690de) {
      var _0xba104f;
      var _0x1e9f19;
      var _0x1822c4;
      var _0x65dff9;
      var _0xbfb8f7 = {
        label: 0,
        sent: function () {
          if (_0x1822c4[0] & 1) {
            throw _0x1822c4[1];
          }
          return _0x1822c4[1];
        },
        trys: [],
        ops: []
      };
      _0x65dff9 = {
        next: _0x37577d(0),
        throw: _0x37577d(1),
        return: _0x37577d(2)
      };
      if (typeof Symbol === "function") {
        _0x65dff9[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x65dff9;
      function _0x37577d(_0x1902aa) {
        return function (_0x5c8256) {
          return _0x35cc37([_0x1902aa, _0x5c8256]);
        };
      }
      function _0x35cc37(_0x268b02) {
        if (_0xba104f) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0xbfb8f7) {
          try {
            _0xba104f = 1;
            if (_0x1e9f19 && (_0x1822c4 = _0x268b02[0] & 2 ? _0x1e9f19.return : _0x268b02[0] ? _0x1e9f19.throw || ((_0x1822c4 = _0x1e9f19.return) && _0x1822c4.call(_0x1e9f19), 0) : _0x1e9f19.next) && !(_0x1822c4 = _0x1822c4.call(_0x1e9f19, _0x268b02[1])).done) {
              return _0x1822c4;
            }
            _0x1e9f19 = 0;
            if (_0x1822c4) {
              _0x268b02 = [_0x268b02[0] & 2, _0x1822c4.value];
            }
            switch (_0x268b02[0]) {
              case 0:
              case 1:
                _0x1822c4 = _0x268b02;
                break;
              case 4:
                _0xbfb8f7.label++;
                var _0x5067fe = {
                  value: _0x268b02[1],
                  done: false
                };
                return _0x5067fe;
              case 5:
                _0xbfb8f7.label++;
                _0x1e9f19 = _0x268b02[1];
                _0x268b02 = [0];
                continue;
              case 7:
                _0x268b02 = _0xbfb8f7.ops.pop();
                _0xbfb8f7.trys.pop();
                continue;
              default:
                if (!(_0x1822c4 = _0xbfb8f7.trys, _0x1822c4 = _0x1822c4.length > 0 && _0x1822c4[_0x1822c4.length - 1]) && (_0x268b02[0] === 6 || _0x268b02[0] === 2)) {
                  _0xbfb8f7 = 0;
                  continue;
                }
                if (_0x268b02[0] === 3 && (!_0x1822c4 || _0x268b02[1] > _0x1822c4[0] && _0x268b02[1] < _0x1822c4[3])) {
                  _0xbfb8f7.label = _0x268b02[1];
                  break;
                }
                if (_0x268b02[0] === 6 && _0xbfb8f7.label < _0x1822c4[1]) {
                  _0xbfb8f7.label = _0x1822c4[1];
                  _0x1822c4 = _0x268b02;
                  break;
                }
                if (_0x1822c4 && _0xbfb8f7.label < _0x1822c4[2]) {
                  _0xbfb8f7.label = _0x1822c4[2];
                  _0xbfb8f7.ops.push(_0x268b02);
                  break;
                }
                if (_0x1822c4[2]) {
                  _0xbfb8f7.ops.pop();
                }
                _0xbfb8f7.trys.pop();
                continue;
            }
            _0x268b02 = _0x4690de.call(_0x167ae2, _0xbfb8f7);
          } catch (_0x56f488) {
            _0x268b02 = [6, _0x56f488];
            _0x1e9f19 = 0;
          } finally {
            _0xba104f = _0x1822c4 = 0;
          }
        }
        if (_0x268b02[0] & 5) {
          throw _0x268b02[1];
        }
        var _0x575a6e = {
          value: _0x268b02[0] ? _0x268b02[1] : undefined,
          done: true
        };
        return _0x575a6e;
      }
    }
    var _0x179abe = new _0x197d21();
    var _0x1ce2e5 = function () {
      var _0x5a6c3a = _0xd30809(function () {
        return _0x17dd19(this, function (_0x537365) {
          _0x179abe.addState("pointer", {
            onEnter: _0xd30809(function () {
              return _0x17dd19(this, function (_0x1b18be) {
                _0x1136aa();
                _0x143d47();
                return [2];
              });
            }),
            onExit: function () {
              _0x45df1e();
            }
          });
          _0x179abe.addState("GizmoNoCam", {
            onEnter: _0xd30809(function () {
              return _0x17dd19(this, function (_0x121c3a) {
                _0x1136aa();
                _0x56aa0f(true);
                _0x52f54e(true);
                return [2];
              });
            }),
            onExit: function () {
              _0x52f54e(false);
              _0x56aa0f(false);
            }
          });
          _0x179abe.addState("GizmoCam", {
            onEnter: _0xd30809(function () {
              return _0x17dd19(this, function (_0x37bb87) {
                if (_0x4887dc == 0) {
                  _0x56aa0f(true);
                }
                _0x52f54e(true);
                _0x4f25f5(true);
                return [2];
              });
            }),
            onExit: function (_0x2df3ef) {
              if (_0x4887dc != 0) {
                _0x56aa0f(false);
              }
              if (_0x2df3ef != "room") {
                _0x4f25f5(false);
              }
              _0x52f54e(false);
            }
          });
          _0x179abe.addState("room", {
            onEnter: function () {
              var _0x131638 = _0xd30809(function (_0x6ffae1) {
                return _0x17dd19(this, function (_0x132c00) {
                  _0x4533c5(_0x6ffae1);
                  _0x52f54e(true);
                  return [2];
                });
              });
              return function (_0x167c5e) {
                return _0x131638.apply(this, arguments);
              };
            }(),
            onExit: function () {
              _0x377336();
              _0x52f54e(false);
            }
          });
          _0x179abe.addState("none", {
            onEnter: _0xd30809(function () {
              return _0x17dd19(this, function (_0x4d5946) {
                switch (_0x4d5946.label) {
                  case 0:
                    _0x1136aa();
                    return [4, _0xa4a5e4()];
                  case 1:
                    _0x4d5946.sent();
                    return [4, _0x52f54e(false)];
                  case 2:
                    _0x4d5946.sent();
                    return [4, _0xb57c08()];
                  case 3:
                    _0x4d5946.sent();
                    _0x532187(false);
                    return [2];
                }
              });
            }),
            onExit: _0xd30809(function () {
              return _0x17dd19(this, function (_0x3832da) {
                switch (_0x3832da.label) {
                  case 0:
                    return [4, _0xad25b7()];
                  case 1:
                    _0x3832da.sent();
                    return [4, _0x4b66bf()];
                  case 2:
                    _0x3832da.sent();
                    _0x532187(true);
                    return [2];
                }
              });
            })
          });
          _0x179abe.setState("none");
          return [2];
        });
      });
      return function _0x1235ff() {
        return _0x5a6c3a.apply(this, arguments);
      };
    }();
    function _0x1136aa() {
      if (_0x55ce36 != 0 && _0x4cb965 != 0) {
        _0x4f25f5(false);
      }
    }
    ;
    function _0x2d5442(_0x4d8640, _0x4cec76) {
      if (_0x4cec76 == null || _0x4cec76 > _0x4d8640.length) {
        _0x4cec76 = _0x4d8640.length;
      }
      for (var _0x32102b = 0, _0xebbf75 = new Array(_0x4cec76); _0x32102b < _0x4cec76; _0x32102b++) {
        _0xebbf75[_0x32102b] = _0x4d8640[_0x32102b];
      }
      return _0xebbf75;
    }
    function _0xc32893(_0x3282fb) {
      if (Array.isArray(_0x3282fb)) {
        return _0x3282fb;
      }
    }
    function _0x4d947d(_0x10fd4a, _0x40b213, _0x1fc15b, _0x4fbbb2, _0x43ec84, _0x252e4b, _0xda7cc) {
      try {
        var _0x1b02dd = _0x10fd4a[_0x252e4b](_0xda7cc);
        var _0x3148f8 = _0x1b02dd.value;
      } catch (_0x406956) {
        _0x1fc15b(_0x406956);
        return;
      }
      if (_0x1b02dd.done) {
        _0x40b213(_0x3148f8);
      } else {
        Promise.resolve(_0x3148f8).then(_0x4fbbb2, _0x43ec84);
      }
    }
    function _0x48b289(_0x2d055b) {
      return function () {
        var _0x179af2 = this;
        var _0x49acf3 = arguments;
        return new Promise(function (_0x5e29fd, _0x3967a6) {
          var _0x59e258 = _0x2d055b.apply(_0x179af2, _0x49acf3);
          function _0x2c874e(_0x3728f6) {
            _0x4d947d(_0x59e258, _0x5e29fd, _0x3967a6, _0x2c874e, _0x473c6d, "next", _0x3728f6);
          }
          function _0x473c6d(_0x44b6ee) {
            _0x4d947d(_0x59e258, _0x5e29fd, _0x3967a6, _0x2c874e, _0x473c6d, "throw", _0x44b6ee);
          }
          _0x2c874e(undefined);
        });
      };
    }
    function _0x385a72(_0x12420d, _0x26b31) {
      var _0x970e1e = _0x12420d == null ? null : typeof Symbol !== "undefined" && _0x12420d[Symbol.iterator] || _0x12420d["@@iterator"];
      if (_0x970e1e == null) {
        return;
      }
      var _0x5a4a9e = [];
      var _0x2633bb = true;
      var _0x5214c9 = false;
      var _0x1be40e;
      var _0x406f69;
      try {
        for (_0x970e1e = _0x970e1e.call(_0x12420d); !(_0x2633bb = (_0x1be40e = _0x970e1e.next()).done); _0x2633bb = true) {
          _0x5a4a9e.push(_0x1be40e.value);
          if (_0x26b31 && _0x5a4a9e.length === _0x26b31) {
            break;
          }
        }
      } catch (_0x301a15) {
        _0x5214c9 = true;
        _0x406f69 = _0x301a15;
      } finally {
        try {
          if (!_0x2633bb && _0x970e1e.return != null) {
            _0x970e1e.return();
          }
        } finally {
          if (_0x5214c9) {
            throw _0x406f69;
          }
        }
      }
      return _0x5a4a9e;
    }
    function _0x18788c() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x307637(_0x4c429d, _0x534d0a) {
      return _0xc32893(_0x4c429d) || _0x385a72(_0x4c429d, _0x534d0a) || _0x1c3b58(_0x4c429d, _0x534d0a) || _0x18788c();
    }
    function _0x1c3b58(_0x23bbeb, _0x1f6e85) {
      if (!_0x23bbeb) {
        return;
      }
      if (typeof _0x23bbeb === "string") {
        return _0x2d5442(_0x23bbeb, _0x1f6e85);
      }
      var _0x3a6f94 = Object.prototype.toString.call(_0x23bbeb).slice(8, -1);
      if (_0x3a6f94 === "Object" && _0x23bbeb.constructor) {
        _0x3a6f94 = _0x23bbeb.constructor.name;
      }
      if (_0x3a6f94 === "Map" || _0x3a6f94 === "Set") {
        return Array.from(_0x3a6f94);
      }
      if (_0x3a6f94 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x3a6f94)) {
        return _0x2d5442(_0x23bbeb, _0x1f6e85);
      }
    }
    function _0x1280f4(_0x541ea9, _0x5318f8) {
      var _0x5930ea;
      var _0x2abcb1;
      var _0x571cf2;
      var _0x59d03d;
      var _0x34538b = {
        label: 0,
        sent: function () {
          if (_0x571cf2[0] & 1) {
            throw _0x571cf2[1];
          }
          return _0x571cf2[1];
        },
        trys: [],
        ops: []
      };
      _0x59d03d = {
        next: _0x2f282f(0),
        throw: _0x2f282f(1),
        return: _0x2f282f(2)
      };
      if (typeof Symbol === "function") {
        _0x59d03d[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x59d03d;
      function _0x2f282f(_0x3b4c7a) {
        return function (_0x595fde) {
          return _0x557911([_0x3b4c7a, _0x595fde]);
        };
      }
      function _0x557911(_0x2ae4d7) {
        if (_0x5930ea) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x34538b) {
          try {
            _0x5930ea = 1;
            if (_0x2abcb1 && (_0x571cf2 = _0x2ae4d7[0] & 2 ? _0x2abcb1.return : _0x2ae4d7[0] ? _0x2abcb1.throw || ((_0x571cf2 = _0x2abcb1.return) && _0x571cf2.call(_0x2abcb1), 0) : _0x2abcb1.next) && !(_0x571cf2 = _0x571cf2.call(_0x2abcb1, _0x2ae4d7[1])).done) {
              return _0x571cf2;
            }
            _0x2abcb1 = 0;
            if (_0x571cf2) {
              _0x2ae4d7 = [_0x2ae4d7[0] & 2, _0x571cf2.value];
            }
            switch (_0x2ae4d7[0]) {
              case 0:
              case 1:
                _0x571cf2 = _0x2ae4d7;
                break;
              case 4:
                _0x34538b.label++;
                var _0x3a6cbb = {
                  value: _0x2ae4d7[1],
                  done: false
                };
                return _0x3a6cbb;
              case 5:
                _0x34538b.label++;
                _0x2abcb1 = _0x2ae4d7[1];
                _0x2ae4d7 = [0];
                continue;
              case 7:
                _0x2ae4d7 = _0x34538b.ops.pop();
                _0x34538b.trys.pop();
                continue;
              default:
                if (!(_0x571cf2 = _0x34538b.trys, _0x571cf2 = _0x571cf2.length > 0 && _0x571cf2[_0x571cf2.length - 1]) && (_0x2ae4d7[0] === 6 || _0x2ae4d7[0] === 2)) {
                  _0x34538b = 0;
                  continue;
                }
                if (_0x2ae4d7[0] === 3 && (!_0x571cf2 || _0x2ae4d7[1] > _0x571cf2[0] && _0x2ae4d7[1] < _0x571cf2[3])) {
                  _0x34538b.label = _0x2ae4d7[1];
                  break;
                }
                if (_0x2ae4d7[0] === 6 && _0x34538b.label < _0x571cf2[1]) {
                  _0x34538b.label = _0x571cf2[1];
                  _0x571cf2 = _0x2ae4d7;
                  break;
                }
                if (_0x571cf2 && _0x34538b.label < _0x571cf2[2]) {
                  _0x34538b.label = _0x571cf2[2];
                  _0x34538b.ops.push(_0x2ae4d7);
                  break;
                }
                if (_0x571cf2[2]) {
                  _0x34538b.ops.pop();
                }
                _0x34538b.trys.pop();
                continue;
            }
            _0x2ae4d7 = _0x5318f8.call(_0x541ea9, _0x34538b);
          } catch (_0x26efc3) {
            _0x2ae4d7 = [6, _0x26efc3];
            _0x2abcb1 = 0;
          } finally {
            _0x5930ea = _0x571cf2 = 0;
          }
        }
        if (_0x2ae4d7[0] & 5) {
          throw _0x2ae4d7[1];
        }
        var _0x42d2f0 = {
          value: _0x2ae4d7[0] ? _0x2ae4d7[1] : undefined,
          done: true
        };
        return _0x42d2f0;
      }
    }
    var _0x53e1f9 = 0;
    var _0x34a7cb = 0;
    var _0x43925e;
    var _0x29e4a0 = null;
    var _0x4b8ac4 = false;
    var _0x47c98f = "translate";
    var _0x156cae = "world";
    var _0x5b25a6 = function () {
      var _0x9afd91 = _0x48b289(function (_0x269a3b) {
        return _0x1280f4(this, function (_0x5f96e7) {
          _0x47c98f = _0x269a3b;
          return [2];
        });
      });
      return function _0x23f576(_0x4f4b49) {
        return _0x9afd91.apply(this, arguments);
      };
    }();
    var _0x8b3b79 = function () {
      var _0x596e42 = _0x48b289(function () {
        return _0x1280f4(this, function (_0x4c3b7c) {
          if (_0x156cae == "world") {
            _0x156cae = "local";
          } else {
            _0x156cae = "world";
          }
          return [2];
        });
      });
      return function _0x2d888b() {
        return _0x596e42.apply(this, arguments);
      };
    }();
    var _0x20f0bf;
    var _0x59756c = false;
    var _0x1f6483 = new _0x45b4c7(0, 0, 0);
    var _0x1dc2ed = 0;
    var _0x729824 = function () {
      var _0x43d698 = _0x48b289(function (_0x503f08) {
        var _0x369481;
        return _0x1280f4(this, function (_0x58caa4) {
          _0x369481 = _0x200f99.get("displayBorder");
          if (_0x369481 && _0x369481 == 1) {
            SetEntityDrawOutlineShader(1);
            SetEntityDrawOutlineColor(0, 255, 0, 80);
            if ((_0x503f08 == 0 || _0x503f08 == null) && _0x53e1f9 != 0) {
              _0x503f08 = _0x53e1f9;
            }
            if (_0x503f08) {
              if (!DoesEntityExist(_0x503f08)) {
                return [2];
              }
              SetEntityDrawOutline(_0x503f08, true);
            }
          }
          return [2];
        });
      });
      return function _0x1fca13(_0x40c863) {
        return _0x43d698.apply(this, arguments);
      };
    }();
    var _0x38177e = function () {
      var _0xe3e2ad = _0x48b289(function (_0x3affd3) {
        return _0x1280f4(this, function (_0x375792) {
          if (_0x3affd3 == null && _0x29e4a0) {
            _0x3affd3 = _0x29e4a0;
          }
          if ((_0x3affd3 == 0 || _0x3affd3 == null) && _0x53e1f9 != 0) {
            _0x3affd3 = _0x53e1f9;
          }
          if (_0x3affd3) {
            if (!DoesEntityExist(_0x3affd3)) {
              return [2];
            }
            SetEntityDrawOutline(_0x3affd3, false);
          }
          return [2];
        });
      });
      return function _0x697232(_0x5ad06a) {
        return _0xe3e2ad.apply(this, arguments);
      };
    }();
    var _0x5c70cc = function () {
      var _0x302c31 = _0x48b289(function (_0x5d892e) {
        return _0x1280f4(this, function (_0x3687ec) {
          _0x4b8ac4 = _0x5d892e;
          return [2];
        });
      });
      return function _0x5eea50(_0x2164bb) {
        return _0x302c31.apply(this, arguments);
      };
    }();
    var _0x3d0559 = function () {
      var _0x1fac4d = _0x48b289(function (_0x475023) {
        return _0x1280f4(this, function (_0x433649) {
          _0x53e1f9 = _0x475023;
          return [2];
        });
      });
      return function _0x436c6c(_0x1bb1a1) {
        return _0x1fac4d.apply(this, arguments);
      };
    }();
    var _0x9496f6 = function () {
      var _0x4213b3 = _0x48b289(function (_0x5d12b3, _0x2aa5da) {
        return _0x1280f4(this, function (_0x1e4ccd) {
          _0x34a7cb = _0x5d12b3;
          if (!_0x2aa5da) {
            _0x29e4a0 = _0x5d12b3;
          }
          return [2];
        });
      });
      return function _0x3cee00(_0xd5516d, _0x842f62) {
        return _0x4213b3.apply(this, arguments);
      };
    }();
    var _0x288a7d = function () {
      var _0x91e613 = _0x48b289(function (_0x5f43d1) {
        return _0x1280f4(this, function (_0x3a06f1) {
          if (_0x5f43d1 != _0x29e4a0 && _0x29e4a0) {
            SetEntityCollision(_0x29e4a0, true, true);
          }
          _0x29e4a0 = _0x5f43d1;
          if (_0x29e4a0) {
            SetEntityCollision(_0x29e4a0, false, false);
          }
          return [2];
        });
      });
      return function _0x160675(_0x243fd1) {
        return _0x91e613.apply(this, arguments);
      };
    }();
    var _0x2e7ddb = function () {
      var _0x5de430 = _0x48b289(function (_0x954f30) {
        return _0x1280f4(this, function (_0x5768de) {
          _0x43925e = _0x954f30;
          _0x4c8712();
          return [2];
        });
      });
      return function _0x583df4(_0xdee975) {
        return _0x5de430.apply(this, arguments);
      };
    }();
    var _0x5933ff = function () {
      var _0x3f9308 = _0x48b289(function (_0x5a167e, _0x45651a) {
        var _0x112ca7;
        var _0x693353;
        var _0x2f7cbb;
        var _0x32ddf0;
        var _0x26b577;
        var _0x5a231d;
        var _0x1d3855;
        var _0x239943;
        var _0x5c75de;
        return _0x1280f4(this, function (_0x5bc2c6) {
          switch (_0x5bc2c6.label) {
            case 0:
              _0x112ca7 = true;
              _0x693353 = false;
              _0x2f7cbb = undefined;
              _0x5bc2c6.label = 1;
            case 1:
              _0x5bc2c6.trys.push([1, 6, 7, 8]);
              _0x32ddf0 = _0x2b98da[Symbol.iterator]();
              _0x5bc2c6.label = 2;
            case 2:
              if (!!(_0x112ca7 = (_0x26b577 = _0x32ddf0.next()).done)) {
                return [3, 5];
              }
              _0x5a231d = _0x307637(_0x26b577.value, 2);
              _0x1d3855 = _0x5a231d[0];
              _0x239943 = _0x5a231d[1];
              if (!_0x239943 || _0x239943.entityID != _0x5a167e) {
                return [3, 4];
              }
              return [4, _0x14d527(_0x239943.databaseID, _0x45b4c7.fromArray(GetEntityCoords(_0x239943.entityID, true)), _0x21193b.fromArray(GetEntityQuaternion(_0x239943.entityID)), _0x45651a)];
            case 3:
              _0x5bc2c6.sent();
              _0x2be065();
              return [3, 5];
            case 4:
              _0x112ca7 = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x5c75de = _0x5bc2c6.sent();
              _0x693353 = true;
              _0x2f7cbb = _0x5c75de;
              return [3, 8];
            case 7:
              try {
                if (!_0x112ca7 && _0x32ddf0.return != null) {
                  _0x32ddf0.return();
                }
              } finally {
                if (_0x693353) {
                  throw _0x2f7cbb;
                }
              }
              return [7];
            case 8:
              return [2];
          }
        });
      });
      return function _0x293a42(_0x32341e, _0x5305a1) {
        return _0x3f9308.apply(this, arguments);
      };
    }();
    var _0x208b52 = function () {
      var _0x4b7ebb = _0x48b289(function (_0x57104c) {
        var _0x16d29d;
        var _0x129b60;
        var _0x523ba9;
        var _0x3a616b;
        var _0x2fe358;
        var _0x240eac;
        var _0x300e2a;
        var _0x3283c9;
        var _0x55fa44;
        var _0x3df21e;
        return _0x1280f4(this, function (_0x3ccb2c) {
          _0x16d29d = false;
          _0x523ba9 = true;
          _0x3a616b = false;
          _0x2fe358 = undefined;
          try {
            for (_0x240eac = _0x2b98da[Symbol.iterator](); !(_0x523ba9 = (_0x300e2a = _0x240eac.next()).done); _0x523ba9 = true) {
              _0x3283c9 = _0x307637(_0x300e2a.value, 2);
              _0x55fa44 = _0x3283c9[0];
              _0x3df21e = _0x3283c9[1];
              if (_0x3df21e && _0x3df21e.entityID == _0x57104c) {
                if (_0x3df21e.isBlockObject) {
                  return [2, [false, undefined]];
                }
                _0x16d29d = true;
                _0x129b60 = _0x3df21e;
                break;
              }
            }
          } catch (_0x7efa14) {
            _0x3a616b = true;
            _0x2fe358 = _0x7efa14;
          } finally {
            try {
              if (!_0x523ba9 && _0x240eac.return != null) {
                _0x240eac.return();
              }
            } finally {
              if (_0x3a616b) {
                throw _0x2fe358;
              }
            }
          }
          return [2, [_0x16d29d, _0x129b60]];
        });
      });
      return function _0x4d2fdd(_0x2a2dc3) {
        return _0x4b7ebb.apply(this, arguments);
      };
    }();
    var _0x17e588 = function () {
      var _0x2a0b58 = _0x48b289(function (_0x34e459, _0x1aa2ea) {
        return _0x1280f4(this, function (_0x17994c) {
          switch (_0x17994c.label) {
            case 0:
              if (_0x34e459 == _0x53e1f9) {
                return [3, 6];
              }
              _0x520c78();
              if (_0x34e459 != 0) {
                return [3, 3];
              }
              if (_0x53e1f9 != _0x34a7cb) {
                return [3, 2];
              }
              return [4, _0x38d43a(true)];
            case 1:
              _0x17994c.sent();
              return [2];
            case 2:
              _0x2e7ddb(undefined);
              _0x3d0559(0);
              _0x17994c.label = 3;
            case 3:
              if (_0x34a7cb == 0) {
                return [3, 5];
              }
              return [4, _0x38d43a(false)];
            case 4:
              _0x17994c.sent();
              _0x17994c.label = 5;
            case 5:
              if (_0x53e1f9 != 0) {
                _0x1e2c4a();
              }
              if (_0x1aa2ea) {
                _0x2e7ddb(_0x1aa2ea);
              } else {
                _0x2e7ddb(undefined);
              }
              _0x3d0559(_0x34e459);
              _0x17994c.label = 6;
            case 6:
              return [2];
          }
        });
      });
      return function _0x541d31(_0x54c670, _0x27eade) {
        return _0x2a0b58.apply(this, arguments);
      };
    }();
    var _0x38d43a = function () {
      var _0x22e65d = _0x48b289(function (_0x3733b9) {
        var _0x14865d;
        var _0x49b9eb;
        var _0x4ac23e;
        var _0x3be7ba;
        return _0x1280f4(this, function (_0x8e1fca) {
          switch (_0x8e1fca.label) {
            case 0:
              _0x14865d = GetEntityArchetypeName(_0x53e1f9);
              _0x49b9eb = _0x45b4c7.fromArray(GetEntityCoords(_0x53e1f9, false));
              _0x4ac23e = _0x21193b.fromArray(GetEntityQuaternion(_0x53e1f9));
              return [4, _0x1885b5(_0x14865d, _0x49b9eb, _0x4ac23e)];
            case 1:
              _0x3be7ba = _0x8e1fca.sent();
              if (_0x3be7ba) {
                _0x2e7ddb(_0x3be7ba);
                _0x3d0559(_0x3be7ba.entityID);
              }
              _0x23b88f(_0x34a7cb);
              _0x9496f6(0, !_0x3733b9);
              if (!_0x3be7ba) {
                return [3, 3];
              }
              return [4, globalThis.exports["np-fx"].PlayEntitySound(_0x3be7ba.entityID, "editor_place_01", "NOPIXEL_GENERAL", 0, "HOUSING_SOUNDS")];
            case 2:
              _0x8e1fca.sent();
              _0x8e1fca.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x506131(_0x1cd082) {
        return _0x22e65d.apply(this, arguments);
      };
    }();
    var _0x133f4b = function () {
      var _0x472888 = _0x48b289(function (_0x429677) {
        var _0x501a95;
        var _0x1834e8;
        return _0x1280f4(this, function (_0x198a25) {
          switch (_0x198a25.label) {
            case 0:
              if (!_0x429677) {
                return [3, 1];
              }
              if (_0x53e1f9 != 0) {
                _0x501a95 = GetEntityArchetypeName(_0x53e1f9);
                _0x1834e8 = _0x21193b.fromArray(GetEntityQuaternion(_0x53e1f9));
                var _0xbf8550 = {
                  model: _0x501a95,
                  rotation: _0x1834e8
                };
                _0x20f0bf = _0xbf8550;
              } else {
                _0x20f0bf = undefined;
              }
              return [3, 3];
            case 1:
              if (!_0x20f0bf) {
                return [3, 3];
              }
              _0x3d0559(0);
              _0x2e7ddb(undefined);
              if (_0x34a7cb != 0) {
                _0x23b88f(_0x34a7cb);
                _0x9496f6(0, false);
              }
              return [4, _0x598b40(_0x20f0bf.model, undefined, _0x20f0bf.rotation)];
            case 2:
              _0x198a25.sent();
              _0x198a25.label = 3;
            case 3:
              return [2];
          }
        });
      });
      return function _0x18158e(_0x1f8ab5) {
        return _0x472888.apply(this, arguments);
      };
    }();
    var _0x767121 = function () {
      var _0x479b74 = _0x48b289(function (_0x4823a9) {
        return _0x1280f4(this, function (_0x437597) {
          _0x59756c = _0x4823a9;
          if (!_0x59756c) {
            _0x1f6483 = new _0x45b4c7(0, 0, 0);
            _0x1dc2ed = 0;
          }
          return [2];
        });
      });
      return function _0x213da5(_0x2ddbdf) {
        return _0x479b74.apply(this, arguments);
      };
    }();
    var _0x4d6c18 = function () {
      var _0x386e2c = _0x48b289(function (_0x45aa28) {
        return _0x1280f4(this, function (_0x1f2e4b) {
          if (!_0x59756c) {
            return [2, false];
          }
          if (_0x1dc2ed != _0x53e1f9) {
            _0x1dc2ed = 0;
            _0x1f6483 = new _0x45b4c7(0, 0, 0);
          }
          if (_0x1f6483.equals(new _0x45b4c7(0, 0, 0))) {
            if (_0x53e1f9 != 0) {
              _0x1f6483 = _0x45aa28;
              _0x1dc2ed = _0x53e1f9;
            }
          }
          return [2, true];
        });
      });
      return function _0x16dee2(_0x2e32fe) {
        return _0x386e2c.apply(this, arguments);
      };
    }();
    var _0x1988a6 = function () {
      var _0x34d354 = _0x48b289(function (_0x58cdd4) {
        return _0x1280f4(this, function (_0x2ccae3) {
          switch (_0x2ccae3.label) {
            case 0:
              if (_0x53e1f9 == 0) {
                return [3, 2];
              }
              return [4, _0xea98ff(_0x58cdd4)];
            case 1:
              _0x2ccae3.sent();
              _0x1f6483 = new _0x45b4c7(0, 0, 0);
              _0x1dc2ed = 0;
              _0x59756c = false;
              _0x2ccae3.label = 2;
            case 2:
              return [2];
          }
        });
      });
      return function _0x5e49d0(_0x15bcb8) {
        return _0x34d354.apply(this, arguments);
      };
    }();
    var _0xea98ff = function () {
      var _0x25f5e0 = _0x48b289(function (_0x3e9329) {
        var _0x40e989;
        var _0x71422c;
        var _0x366114;
        var _0x171ba4;
        var _0x291252;
        var _0x179747;
        var _0x4de748;
        var _0x581fc7;
        var _0x270746;
        var _0x338617;
        var _0x1ce801;
        var _0x523c39;
        var _0x450698;
        return _0x1280f4(this, function (_0x57bdd2) {
          switch (_0x57bdd2.label) {
            case 0:
              if (_0x53e1f9 == 0) {
                return [2];
              }
              _0x40e989 = GetEntityArchetypeName(_0x53e1f9);
              _0x71422c = _0x1f6483;
              _0x366114 = _0x21193b.fromArray(GetEntityQuaternion(_0x53e1f9));
              _0x171ba4 = _0x45b4c7.fromArray(GetEntityRotation(_0x53e1f9));
              SetEntityCoords(_0x53e1f9, _0x71422c.x, _0x71422c.y, _0x71422c.z, false, false, false, false);
              return [4, _0x1e2c4a()];
            case 1:
              _0x57bdd2.sent();
              _0x291252 = typeof _0x40e989 === "string" ? _0x40e989.trim() : _0x40e989;
              if (!IsModelValid(_0x291252)) {
                return [2, [false, null]];
              }
              return [4, _0x5566d0(_0x291252)];
            case 2:
              _0x57bdd2.sent();
              if (_0x34a7cb == 0) {
                return [3, 4];
              }
              _0x23b88f(_0x34a7cb);
              return [4, _0x9496f6(0, false)];
            case 3:
              _0x57bdd2.sent();
              _0x57bdd2.label = 4;
            case 4:
              if (_0x53e1f9 == 0) {
                return [3, 6];
              }
              return [4, _0x5933ff(_0x53e1f9, false)];
            case 5:
              _0x57bdd2.sent();
              _0x54f0f6(_0x53e1f9);
              _0x57bdd2.label = 6;
            case 6:
              SetEntityCollision(_0x53e1f9, true, true);
              return [4, _0x598b40(_0x291252, _0x3e9329, _0x366114)];
            case 7:
              _0x57bdd2.sent();
              _0x179747 = _0x179abe.getCurrentStateName();
              if (_0x179747 != "GizmoNoCam" && _0x179747 != "GizmoCam") {
                return [3, 12];
              }
              return [4, _0x288a7d(_0x34a7cb)];
            case 8:
              _0x57bdd2.sent();
              return [4, _0x1d87b5(_0x291252)];
            case 9:
              _0x4de748 = _0x57bdd2.sent();
              _0x581fc7 = [undefined, null, null];
              _0x270746 = _0x581fc7[0];
              _0x338617 = _0x581fc7[1];
              _0x1ce801 = _0x581fc7[2];
              if (!_0x4de748) {
                return [3, 11];
              }
              return [4, _0x3e6a2f(_0x4de748)];
            case 10:
              _0x523c39 = _0x307637.apply(undefined, [_0x57bdd2.sent(), 3]);
              _0x270746 = _0x523c39[0];
              _0x338617 = _0x523c39[1];
              _0x1ce801 = _0x523c39[2];
              _0x523c39;
              _0x57bdd2.label = 11;
            case 11:
              _0x450698 = _0x45b4c7.fromArray(GetEntityCoords(_0x34a7cb, false));
              SendNUIMessage({
                action: "selectedItemSettings",
                data: {
                  modelHash: GetHashKey(_0x291252),
                  displayName: _0x291252,
                  x_y_z_rotation: [_0x171ba4.x, _0x171ba4.y, _0x171ba4.z],
                  x_y_z_position: [_0x450698.x, _0x450698.y, _0x450698.z],
                  remainingAmount: _0x270746,
                  url: _0x338617,
                  name: _0x1ce801,
                  id: ""
                }
              });
              _0x57bdd2.label = 12;
            case 12:
              return [2];
          }
        });
      });
      return function _0x3a8a91(_0x29be4f) {
        return _0x25f5e0.apply(this, arguments);
      };
    }();
    ;
    function _0x37d794(_0x3f8566, _0x40a042) {
      if (_0x40a042 == null || _0x40a042 > _0x3f8566.length) {
        _0x40a042 = _0x3f8566.length;
      }
      for (var _0x507dc0 = 0, _0xfcaa83 = new Array(_0x40a042); _0x507dc0 < _0x40a042; _0x507dc0++) {
        _0xfcaa83[_0x507dc0] = _0x3f8566[_0x507dc0];
      }
      return _0xfcaa83;
    }
    function _0x4846bf(_0x5510de) {
      if (Array.isArray(_0x5510de)) {
        return _0x5510de;
      }
    }
    function _0x21a4cb(_0x14c9bb, _0x24a3e4, _0x2150f5, _0x786ef1, _0x502d75, _0x1625e5, _0x1f83d4) {
      try {
        var _0x222102 = _0x14c9bb[_0x1625e5](_0x1f83d4);
        var _0x1e856b = _0x222102.value;
      } catch (_0x38b6bd) {
        _0x2150f5(_0x38b6bd);
        return;
      }
      if (_0x222102.done) {
        _0x24a3e4(_0x1e856b);
      } else {
        Promise.resolve(_0x1e856b).then(_0x786ef1, _0x502d75);
      }
    }
    function _0x4df991(_0x16b574) {
      return function () {
        var _0x36306e = this;
        var _0xfc809a = arguments;
        return new Promise(function (_0x29f39a, _0x301573) {
          var _0x281045 = _0x16b574.apply(_0x36306e, _0xfc809a);
          function _0xe4a0fe(_0x4f82e8) {
            _0x21a4cb(_0x281045, _0x29f39a, _0x301573, _0xe4a0fe, _0x2cd191, "next", _0x4f82e8);
          }
          function _0x2cd191(_0x140cbd) {
            _0x21a4cb(_0x281045, _0x29f39a, _0x301573, _0xe4a0fe, _0x2cd191, "throw", _0x140cbd);
          }
          _0xe4a0fe(undefined);
        });
      };
    }
    function _0x35231d(_0x2b1fd9, _0x5c2fdb) {
      var _0x31d103 = _0x2b1fd9 == null ? null : typeof Symbol !== "undefined" && _0x2b1fd9[Symbol.iterator] || _0x2b1fd9["@@iterator"];
      if (_0x31d103 == null) {
        return;
      }
      var _0x1db58c = [];
      var _0x350f36 = true;
      var _0x5968f3 = false;
      var _0x440249;
      var _0x93f1b1;
      try {
        for (_0x31d103 = _0x31d103.call(_0x2b1fd9); !(_0x350f36 = (_0x440249 = _0x31d103.next()).done); _0x350f36 = true) {
          _0x1db58c.push(_0x440249.value);
          if (_0x5c2fdb && _0x1db58c.length === _0x5c2fdb) {
            break;
          }
        }
      } catch (_0x307a47) {
        _0x5968f3 = true;
        _0x93f1b1 = _0x307a47;
      } finally {
        try {
          if (!_0x350f36 && _0x31d103.return != null) {
            _0x31d103.return();
          }
        } finally {
          if (_0x5968f3) {
            throw _0x93f1b1;
          }
        }
      }
      return _0x1db58c;
    }
    function _0x387d74() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0xc1286f(_0x514284, _0x3f9f2f) {
      return _0x4846bf(_0x514284) || _0x35231d(_0x514284, _0x3f9f2f) || _0x18b2c3(_0x514284, _0x3f9f2f) || _0x387d74();
    }
    function _0x18b2c3(_0x36903f, _0x2e025d) {
      if (!_0x36903f) {
        return;
      }
      if (typeof _0x36903f === "string") {
        return _0x37d794(_0x36903f, _0x2e025d);
      }
      var _0x4aca10 = Object.prototype.toString.call(_0x36903f).slice(8, -1);
      if (_0x4aca10 === "Object" && _0x36903f.constructor) {
        _0x4aca10 = _0x36903f.constructor.name;
      }
      if (_0x4aca10 === "Map" || _0x4aca10 === "Set") {
        return Array.from(_0x4aca10);
      }
      if (_0x4aca10 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x4aca10)) {
        return _0x37d794(_0x36903f, _0x2e025d);
      }
    }
    function _0x187394(_0x1fe3f2, _0x10e41a) {
      var _0x4ac8dd;
      var _0x56a1bb;
      var _0x43eb96;
      var _0x15e9e2;
      var _0x2bd730 = {
        label: 0,
        sent: function () {
          if (_0x43eb96[0] & 1) {
            throw _0x43eb96[1];
          }
          return _0x43eb96[1];
        },
        trys: [],
        ops: []
      };
      _0x15e9e2 = {
        next: _0x5d1e9a(0),
        throw: _0x5d1e9a(1),
        return: _0x5d1e9a(2)
      };
      if (typeof Symbol === "function") {
        _0x15e9e2[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x15e9e2;
      function _0x5d1e9a(_0x3d1859) {
        return function (_0x59b7c3) {
          return _0x2fc31b([_0x3d1859, _0x59b7c3]);
        };
      }
      function _0x2fc31b(_0x37b64f) {
        if (_0x4ac8dd) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2bd730) {
          try {
            _0x4ac8dd = 1;
            if (_0x56a1bb && (_0x43eb96 = _0x37b64f[0] & 2 ? _0x56a1bb.return : _0x37b64f[0] ? _0x56a1bb.throw || ((_0x43eb96 = _0x56a1bb.return) && _0x43eb96.call(_0x56a1bb), 0) : _0x56a1bb.next) && !(_0x43eb96 = _0x43eb96.call(_0x56a1bb, _0x37b64f[1])).done) {
              return _0x43eb96;
            }
            _0x56a1bb = 0;
            if (_0x43eb96) {
              _0x37b64f = [_0x37b64f[0] & 2, _0x43eb96.value];
            }
            switch (_0x37b64f[0]) {
              case 0:
              case 1:
                _0x43eb96 = _0x37b64f;
                break;
              case 4:
                _0x2bd730.label++;
                var _0x335a2b = {
                  value: _0x37b64f[1],
                  done: false
                };
                return _0x335a2b;
              case 5:
                _0x2bd730.label++;
                _0x56a1bb = _0x37b64f[1];
                _0x37b64f = [0];
                continue;
              case 7:
                _0x37b64f = _0x2bd730.ops.pop();
                _0x2bd730.trys.pop();
                continue;
              default:
                if (!(_0x43eb96 = _0x2bd730.trys, _0x43eb96 = _0x43eb96.length > 0 && _0x43eb96[_0x43eb96.length - 1]) && (_0x37b64f[0] === 6 || _0x37b64f[0] === 2)) {
                  _0x2bd730 = 0;
                  continue;
                }
                if (_0x37b64f[0] === 3 && (!_0x43eb96 || _0x37b64f[1] > _0x43eb96[0] && _0x37b64f[1] < _0x43eb96[3])) {
                  _0x2bd730.label = _0x37b64f[1];
                  break;
                }
                if (_0x37b64f[0] === 6 && _0x2bd730.label < _0x43eb96[1]) {
                  _0x2bd730.label = _0x43eb96[1];
                  _0x43eb96 = _0x37b64f;
                  break;
                }
                if (_0x43eb96 && _0x2bd730.label < _0x43eb96[2]) {
                  _0x2bd730.label = _0x43eb96[2];
                  _0x2bd730.ops.push(_0x37b64f);
                  break;
                }
                if (_0x43eb96[2]) {
                  _0x2bd730.ops.pop();
                }
                _0x2bd730.trys.pop();
                continue;
            }
            _0x37b64f = _0x10e41a.call(_0x1fe3f2, _0x2bd730);
          } catch (_0x195c51) {
            _0x37b64f = [6, _0x195c51];
            _0x56a1bb = 0;
          } finally {
            _0x4ac8dd = _0x43eb96 = 0;
          }
        }
        if (_0x37b64f[0] & 5) {
          throw _0x37b64f[1];
        }
        var _0x6c0d5e = {
          value: _0x37b64f[0] ? _0x37b64f[1] : undefined,
          done: true
        };
        return _0x6c0d5e;
      }
    }
    var _0x598b40 = function () {
      var _0x1b6d8d = _0x4df991(function (_0x5045a7, _0xf8f32c, _0x4fa820) {
        var _0x3d28e2;
        var _0x10bad5;
        var _0x41b599;
        var _0x136471;
        var _0x26a156;
        var _0xd5a9a;
        var _0x24b616;
        var _0x2c53e9;
        var _0x530969;
        var _0x278482;
        var _0x562da1;
        var _0x34243e;
        return _0x187394(this, function (_0x51d9e7) {
          switch (_0x51d9e7.label) {
            case 0:
              if (_0x179abe.getCurrentStateName() == "none") {
                return [2];
              }
              if (_0x6ada10 && _0x6ada10.isApartment && _0x181a57) {
                if (typeof _0x5045a7 == "string" && _0x5045a7.includes("np_prop_bench_01")) {
                  emit("DoLongHudText", "Benchs are disabled in apartments.", 2);
                  return [2];
                }
              }
              _0x3d0559(0);
              _0x9496f6(0, false);
              _0x288a7d(0);
              _0x2e7ddb();
              return [4, _0xe175db()];
            case 1:
              _0x3d28e2 = _0x51d9e7.sent();
              _0x10bad5 = CreateObjectNoOffset(_0x5045a7, 0, 0, 0, false, false, false);
              globalThis.exports["np-cleanup"].AddBypassObject(_0x10bad5);
              SetEntityAlpha(_0x10bad5, 200, false);
              SetEntityNoCollisionEntity(_0x10bad5, PlayerPedId(), false);
              SetCanClimbOnEntity(_0x10bad5, false);
              _0x41b599 = _0x3d28e2.x;
              _0x136471 = _0x3d28e2.y;
              _0x26a156 = _0x3d28e2.z;
              SetEntityCoords(_0x10bad5, _0x41b599, _0x136471, _0x26a156, false, false, false, false);
              if (_0xf8f32c) {
                _0xd5a9a = _0xf8f32c.x;
                _0x24b616 = _0xf8f32c.y;
                _0x2c53e9 = _0xf8f32c.z;
                SetEntityCoords(_0x10bad5, _0xd5a9a, _0x24b616, _0x2c53e9, false, false, false, false);
              }
              if (_0x4fa820) {
                _0x530969 = _0x4fa820.x;
                _0x278482 = _0x4fa820.y;
                _0x562da1 = _0x4fa820.z;
                _0x34243e = _0x4fa820.w;
                SetEntityQuaternion(_0x10bad5, _0x530969, _0x278482, _0x562da1, _0x34243e);
              }
              _0x729824(_0x10bad5);
              _0x3d0559(_0x10bad5);
              _0x9496f6(_0x10bad5, false);
              _0x4c8712();
              return [2];
          }
        });
      });
      return function _0x2df192(_0x5f0ab8, _0x214398, _0x5d200c) {
        return _0x1b6d8d.apply(this, arguments);
      };
    }();
    var _0xe175db = function () {
      var _0x197439 = _0x4df991(function () {
        var _0x1f5646;
        var _0x1b9d69;
        var _0x3ce847;
        var _0xc1a415;
        var _0xf4b66e;
        var _0x33c8fd;
        return _0x187394(this, function (_0x1a9e89) {
          switch (_0x1a9e89.label) {
            case 0:
              return [4, _0x226d16(20)];
            case 1:
              _0x1f5646 = _0xc1286f.apply(undefined, [_0x1a9e89.sent(), 3]);
              _0x1b9d69 = _0x1f5646[0];
              _0x3ce847 = _0x1f5646[1];
              _0xc1a415 = _0x1f5646[2];
              if (!_0x1b9d69) {
                _0xf4b66e = _0x45b4c7.fromArray(GetGameplayCamCoord());
                _0x33c8fd = _0x45b4c7.fromArray(GetOffsetFromEntityInWorldCoords(PlayerPedId(), 0, 4, -0.5));
                _0x33c8fd.sub(_0xf4b66e);
                _0xf4b66e.add(_0x33c8fd);
                return [2, _0xf4b66e];
              }
              return [2, _0x45b4c7.fromArray(_0x3ce847)];
          }
        });
      });
      return function _0x32b1cd() {
        return _0x197439.apply(this, arguments);
      };
    }();
    var _0x208c96 = function () {
      var _0x5375dd = _0x4df991(function (_0x51ee74) {
        var _0x191dbf;
        var _0x321333;
        return _0x187394(this, function (_0x28afea) {
          var _0x2caf84 = {
            x: Math.PI / 180 * _0x51ee74.x,
            y: Math.PI / 180 * _0x51ee74.y,
            z: Math.PI / 180 * _0x51ee74.z
          };
          _0x191dbf = _0x2caf84;
          _0x321333 = new _0x45b4c7(-Math.sin(_0x191dbf.z) * Math.abs(Math.cos(_0x191dbf.x)), Math.cos(_0x191dbf.z) * Math.abs(Math.cos(_0x191dbf.x)), Math.sin(_0x191dbf.x));
          return [2, _0x321333];
        });
      });
      return function _0x2f3e52(_0x3f62dd) {
        return _0x5375dd.apply(this, arguments);
      };
    }();
    var _0x226d16 = function () {
      var _0x47be12 = _0x4df991(function (_0xcf893d) {
        var _0x33a30e;
        var _0x23004b;
        var _0x13ecdc;
        var _0x5d4363;
        var _0x479958;
        var _0x3cee9c;
        var _0xd4ebf4;
        var _0x20a3a4;
        var _0x4e6731;
        var _0x6fbbd5;
        return _0x187394(this, function (_0x4f0d7d) {
          switch (_0x4f0d7d.label) {
            case 0:
              _0x33a30e = _0x45b4c7.fromArray(GetCamRot(_0x2cdcce, 2));
              _0x23004b = _0x45b4c7.fromArray(GetCamCoord(_0x2cdcce));
              return [4, _0x208c96(_0x33a30e)];
            case 1:
              _0x13ecdc = _0x4f0d7d.sent();
              var _0x13fe22 = {
                x: _0x23004b.x + _0x13ecdc.x * _0xcf893d,
                y: _0x23004b.y + _0x13ecdc.y * _0xcf893d,
                z: _0x23004b.z + _0x13ecdc.z * _0xcf893d
              };
              _0x5d4363 = _0x13fe22;
              _0x479958 = _0xc1286f(GetShapeTestResult(StartShapeTestSweptSphere(_0x23004b.x, _0x23004b.y, _0x23004b.z, _0x5d4363.x, _0x5d4363.y, _0x5d4363.z, 0.2, 339, PlayerPedId(), 4)), 5);
              _0x3cee9c = _0x479958[0];
              _0xd4ebf4 = _0x479958[1];
              _0x20a3a4 = _0x479958[2];
              _0x4e6731 = _0x479958[3];
              _0x6fbbd5 = _0x479958[4];
              return [2, [_0xd4ebf4, _0x20a3a4, _0x6fbbd5]];
          }
        });
      });
      return function _0x4f7dca(_0x2b25cf) {
        return _0x47be12.apply(this, arguments);
      };
    }();
    ;
    var _0x7e2ebf = _0x5f5650(480);
    function _0x2fcb74(_0x3a495d, _0x2840fa) {
      if (_0x2840fa == null || _0x2840fa > _0x3a495d.length) {
        _0x2840fa = _0x3a495d.length;
      }
      for (var _0x40d018 = 0, _0x237623 = new Array(_0x2840fa); _0x40d018 < _0x2840fa; _0x40d018++) {
        _0x237623[_0x40d018] = _0x3a495d[_0x40d018];
      }
      return _0x237623;
    }
    function _0x454140(_0x22d578) {
      if (Array.isArray(_0x22d578)) {
        return _0x22d578;
      }
    }
    function _0x595beb(_0x3118ef, _0x4a2384, _0x3da97f, _0x3583a8, _0x40e4ea, _0x2483f5, _0x38ab70) {
      try {
        var _0x152770 = _0x3118ef[_0x2483f5](_0x38ab70);
        var _0x5d4355 = _0x152770.value;
      } catch (_0x427a64) {
        _0x3da97f(_0x427a64);
        return;
      }
      if (_0x152770.done) {
        _0x4a2384(_0x5d4355);
      } else {
        Promise.resolve(_0x5d4355).then(_0x3583a8, _0x40e4ea);
      }
    }
    function _0xb9e079(_0x45ba74) {
      return function () {
        var _0x426207 = this;
        var _0x118f16 = arguments;
        return new Promise(function (_0x264f8b, _0x3a9655) {
          var _0x2bc525 = _0x45ba74.apply(_0x426207, _0x118f16);
          function _0x1a1796(_0x104ca1) {
            _0x595beb(_0x2bc525, _0x264f8b, _0x3a9655, _0x1a1796, _0x1a42a0, "next", _0x104ca1);
          }
          function _0x1a42a0(_0xa0146) {
            _0x595beb(_0x2bc525, _0x264f8b, _0x3a9655, _0x1a1796, _0x1a42a0, "throw", _0xa0146);
          }
          _0x1a1796(undefined);
        });
      };
    }
    function _0x7c628f(_0x3277e3, _0x51b7b7) {
      var _0x50b7a2 = _0x3277e3 == null ? null : typeof Symbol !== "undefined" && _0x3277e3[Symbol.iterator] || _0x3277e3["@@iterator"];
      if (_0x50b7a2 == null) {
        return;
      }
      var _0x55bdf6 = [];
      var _0x82a236 = true;
      var _0x3519f0 = false;
      var _0x2e8e85;
      var _0x17a8b7;
      try {
        for (_0x50b7a2 = _0x50b7a2.call(_0x3277e3); !(_0x82a236 = (_0x2e8e85 = _0x50b7a2.next()).done); _0x82a236 = true) {
          _0x55bdf6.push(_0x2e8e85.value);
          if (_0x51b7b7 && _0x55bdf6.length === _0x51b7b7) {
            break;
          }
        }
      } catch (_0x309b38) {
        _0x3519f0 = true;
        _0x17a8b7 = _0x309b38;
      } finally {
        try {
          if (!_0x82a236 && _0x50b7a2.return != null) {
            _0x50b7a2.return();
          }
        } finally {
          if (_0x3519f0) {
            throw _0x17a8b7;
          }
        }
      }
      return _0x55bdf6;
    }
    function _0x2998d2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x46729b(_0xb62bde, _0x1e600f) {
      return _0x454140(_0xb62bde) || _0x7c628f(_0xb62bde, _0x1e600f) || _0xf0ff17(_0xb62bde, _0x1e600f) || _0x2998d2();
    }
    function _0xf0ff17(_0x1be5bf, _0x664b12) {
      if (!_0x1be5bf) {
        return;
      }
      if (typeof _0x1be5bf === "string") {
        return _0x2fcb74(_0x1be5bf, _0x664b12);
      }
      var _0x5dc942 = Object.prototype.toString.call(_0x1be5bf).slice(8, -1);
      if (_0x5dc942 === "Object" && _0x1be5bf.constructor) {
        _0x5dc942 = _0x1be5bf.constructor.name;
      }
      if (_0x5dc942 === "Map" || _0x5dc942 === "Set") {
        return Array.from(_0x5dc942);
      }
      if (_0x5dc942 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5dc942)) {
        return _0x2fcb74(_0x1be5bf, _0x664b12);
      }
    }
    function _0x162674(_0x174879, _0x18ba06) {
      var _0x35aecf;
      var _0x6a91c4;
      var _0x1f7e3c;
      var _0x333c71;
      var _0x2a19f1 = {
        label: 0,
        sent: function () {
          if (_0x1f7e3c[0] & 1) {
            throw _0x1f7e3c[1];
          }
          return _0x1f7e3c[1];
        },
        trys: [],
        ops: []
      };
      _0x333c71 = {
        next: _0x4c3728(0),
        throw: _0x4c3728(1),
        return: _0x4c3728(2)
      };
      if (typeof Symbol === "function") {
        _0x333c71[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x333c71;
      function _0x4c3728(_0x376589) {
        return function (_0x19163a) {
          return _0x24e97d([_0x376589, _0x19163a]);
        };
      }
      function _0x24e97d(_0x140bd0) {
        if (_0x35aecf) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2a19f1) {
          try {
            _0x35aecf = 1;
            if (_0x6a91c4 && (_0x1f7e3c = _0x140bd0[0] & 2 ? _0x6a91c4.return : _0x140bd0[0] ? _0x6a91c4.throw || ((_0x1f7e3c = _0x6a91c4.return) && _0x1f7e3c.call(_0x6a91c4), 0) : _0x6a91c4.next) && !(_0x1f7e3c = _0x1f7e3c.call(_0x6a91c4, _0x140bd0[1])).done) {
              return _0x1f7e3c;
            }
            _0x6a91c4 = 0;
            if (_0x1f7e3c) {
              _0x140bd0 = [_0x140bd0[0] & 2, _0x1f7e3c.value];
            }
            switch (_0x140bd0[0]) {
              case 0:
              case 1:
                _0x1f7e3c = _0x140bd0;
                break;
              case 4:
                _0x2a19f1.label++;
                var _0x364bfa = {
                  value: _0x140bd0[1],
                  done: false
                };
                return _0x364bfa;
              case 5:
                _0x2a19f1.label++;
                _0x6a91c4 = _0x140bd0[1];
                _0x140bd0 = [0];
                continue;
              case 7:
                _0x140bd0 = _0x2a19f1.ops.pop();
                _0x2a19f1.trys.pop();
                continue;
              default:
                if (!(_0x1f7e3c = _0x2a19f1.trys, _0x1f7e3c = _0x1f7e3c.length > 0 && _0x1f7e3c[_0x1f7e3c.length - 1]) && (_0x140bd0[0] === 6 || _0x140bd0[0] === 2)) {
                  _0x2a19f1 = 0;
                  continue;
                }
                if (_0x140bd0[0] === 3 && (!_0x1f7e3c || _0x140bd0[1] > _0x1f7e3c[0] && _0x140bd0[1] < _0x1f7e3c[3])) {
                  _0x2a19f1.label = _0x140bd0[1];
                  break;
                }
                if (_0x140bd0[0] === 6 && _0x2a19f1.label < _0x1f7e3c[1]) {
                  _0x2a19f1.label = _0x1f7e3c[1];
                  _0x1f7e3c = _0x140bd0;
                  break;
                }
                if (_0x1f7e3c && _0x2a19f1.label < _0x1f7e3c[2]) {
                  _0x2a19f1.label = _0x1f7e3c[2];
                  _0x2a19f1.ops.push(_0x140bd0);
                  break;
                }
                if (_0x1f7e3c[2]) {
                  _0x2a19f1.ops.pop();
                }
                _0x2a19f1.trys.pop();
                continue;
            }
            _0x140bd0 = _0x18ba06.call(_0x174879, _0x2a19f1);
          } catch (_0x7b25f4) {
            _0x140bd0 = [6, _0x7b25f4];
            _0x6a91c4 = 0;
          } finally {
            _0x35aecf = _0x1f7e3c = 0;
          }
        }
        if (_0x140bd0[0] & 5) {
          throw _0x140bd0[1];
        }
        var _0x34596a = {
          value: _0x140bd0[0] ? _0x140bd0[1] : undefined,
          done: true
        };
        return _0x34596a;
      }
    }
    var _0x4887dc = 0;
    var _0xcab35d = 0;
    var _0x503f2d = false;
    var _0x4457ca = false;
    var _0x51f575 = false;
    var _0x513c7f = false;
    var _0x40d707 = false;
    var _0x2a9b0c = function () {
      var _0x23af20 = _0xb9e079(function (_0x344f6c) {
        var _0x76ec16;
        var _0x79b2a8;
        return _0x162674(this, function (_0xd10cf1) {
          switch (_0xd10cf1.label) {
            case 0:
              _0x76ec16 = typeof _0x344f6c === "string" ? _0x344f6c.trim() : _0x344f6c;
              if (_0x59756c) {
                _0x12a5ca(_0x76ec16);
                return [2];
              }
              if (!IsModelValid(_0x76ec16)) {
                return [2, [false, null]];
              }
              return [4, _0x5566d0(_0x76ec16)];
            case 1:
              _0xd10cf1.sent();
              if (_0x34a7cb != 0) {
                _0x23b88f(_0x34a7cb);
                _0x9496f6(0, false);
              }
              if (_0x53e1f9 != 0) {
                _0x5933ff(_0x53e1f9, false);
                _0x54f0f6(_0x53e1f9);
              }
              _0x598b40(_0x76ec16);
              _0x79b2a8 = _0x179abe.getCurrentStateName();
              if (_0x79b2a8 == "GizmoNoCam" || _0x79b2a8 == "GizmoCam") {
                _0x288a7d(_0x34a7cb);
              }
              return [2];
          }
        });
      });
      return function _0x389fd5(_0x400f2a) {
        return _0x23af20.apply(this, arguments);
      };
    }();
    var _0x12a5ca = function () {
      var _0x4a7bca = _0xb9e079(function (_0x549df9) {
        var _0x2a9f1f;
        var _0x2fa33a;
        var _0x57739d;
        var _0x361450;
        var _0x65e240;
        var _0x240d18;
        var _0xc22dd0;
        var _0x555556;
        var _0x20e3f1;
        var _0x17a28f;
        var _0x22b743;
        var _0x4ded86;
        var _0x15f5d8;
        var _0x12d0d8;
        var _0xdcba95;
        return _0x162674(this, function (_0x201222) {
          switch (_0x201222.label) {
            case 0:
              _0x2a9f1f = typeof _0x549df9 === "string" ? _0x549df9.trim() : _0x549df9;
              if (!IsModelValid(_0x2a9f1f)) {
                return [2, [false, null]];
              }
              return [4, _0x5566d0(_0x2a9f1f)];
            case 1:
              _0x201222.sent();
              if (_0x34a7cb != 0) {
                _0x2fa33a = _0x45b4c7.fromArray(GetEntityCoords(_0x34a7cb));
                _0x57739d = _0x21193b.fromArray(GetEntityQuaternion(_0x34a7cb));
                _0x23b88f(_0x34a7cb);
                _0x9496f6(0, false);
                _0x598b40(_0x2a9f1f, _0x2fa33a, _0x57739d);
                _0x361450 = _0x179abe.getCurrentStateName();
                if (_0x361450 == "GizmoNoCam" || _0x361450 == "GizmoCam") {
                  _0x288a7d(_0x34a7cb);
                }
                return [2];
              }
              if (_0x53e1f9 == 0) {
                return [3, 14];
              }
              _0x65e240 = true;
              _0x240d18 = false;
              _0xc22dd0 = undefined;
              _0x201222.label = 2;
            case 2:
              _0x201222.trys.push([2, 12, 13, 14]);
              _0x555556 = _0x2b98da[Symbol.iterator]();
              _0x201222.label = 3;
            case 3:
              if (!!(_0x65e240 = (_0x20e3f1 = _0x555556.next()).done)) {
                return [3, 11];
              }
              _0x17a28f = _0x46729b(_0x20e3f1.value, 2);
              _0x22b743 = _0x17a28f[0];
              _0x4ded86 = _0x17a28f[1];
              if (!_0x4ded86 || _0x4ded86.entityID != _0x53e1f9) {
                return [3, 10];
              }
              return [4, _0x1d87b5(_0x4ded86.model)];
            case 4:
              _0x15f5d8 = _0x201222.sent();
              if (!_0x15f5d8) {
                return [2];
              }
              return [4, _0x1d87b5(_0x2a9f1f)];
            case 5:
              _0x12d0d8 = _0x201222.sent();
              if (!_0x12d0d8) {
                return [2];
              }
              if (_0x15f5d8 != _0x12d0d8) {
                return [3, 8];
              }
              return [4, _0x4ded86.removeObject()];
            case 6:
              _0x201222.sent();
              _0x4ded86.model = _0x2a9f1f;
              return [4, _0x4ded86.renderObject()];
            case 7:
              _0x201222.sent();
              _0x2b98da.set(_0x4ded86.databaseID, _0x4ded86);
              _0x2e7ddb(_0x4ded86);
              _0x288a7d(_0x4ded86.entityID);
              _0x3d0559(_0x4ded86.entityID);
              _0x3f0777(_0x4ded86.databaseID);
              _0x4aefda();
              return [3, 9];
            case 8:
              emit("DoLongHudText", "Cannot change to model of different material.", 2);
              _0x201222.label = 9;
            case 9:
              return [2];
            case 10:
              _0x65e240 = true;
              return [3, 3];
            case 11:
              return [3, 14];
            case 12:
              _0xdcba95 = _0x201222.sent();
              _0x240d18 = true;
              _0xc22dd0 = _0xdcba95;
              return [3, 14];
            case 13:
              try {
                if (!_0x65e240 && _0x555556.return != null) {
                  _0x555556.return();
                }
              } finally {
                if (_0x240d18) {
                  throw _0xc22dd0;
                }
              }
              return [7];
            case 14:
              return [2];
          }
        });
      });
      return function _0xaa74f5(_0xe9e6dd) {
        return _0x4a7bca.apply(this, arguments);
      };
    }();
    var _0x36d2f3 = function () {
      var _0x554be1 = _0xb9e079(function (_0x198d6c) {
        return _0x162674(this, function (_0x23e80b) {
          if (_0x20ef4f(_0x198d6c)) {
            _0x2c1ed9(_0x198d6c);
          } else {
            _0x2a9b0c(_0x198d6c);
          }
          return [2];
        });
      });
      return function _0x525787(_0xb8ff9c) {
        return _0x554be1.apply(this, arguments);
      };
    }();
    var _0x2c1ed9 = function () {
      var _0x596261 = _0xb9e079(function (_0x34eee8) {
        var _0x3d5672;
        return _0x162674(this, function (_0x4cd296) {
          _0x3d5672 = _0x2b98da.get(_0x34eee8);
          if (!_0x3d5672) {
            return [2];
          }
          if (_0x34a7cb != 0) {
            _0x23b88f(_0x34a7cb);
            _0x9496f6(0, false);
          } else if (_0x53e1f9 != 0) {
            _0x5933ff(_0x53e1f9, false);
          }
          _0x54f0f6(_0x53e1f9);
          _0x2e7ddb(_0x3d5672);
          _0x288a7d(_0x3d5672.entityID);
          _0x3d0559(_0x3d5672.entityID);
          return [2];
        });
      });
      return function _0x2be4ce(_0x2cbd3d) {
        return _0x596261.apply(this, arguments);
      };
    }();
    function _0x999caa(_0x1e614d) {
      if (_0x4457ca) {
        _0x4457ca = false;
        if (!_0x1e614d) {
          SetNuiFocus(false, false);
        } else {
          SetNuiFocus(true, true);
        }
      }
    }
    function _0x5dfbd0(_0x5b3b94) {
      if (!_0x4457ca) {
        _0x4457ca = true;
        if (!_0x5b3b94) {
          SetNuiFocus(true, true);
        }
      }
    }
    function _0x3a577b(_0x402286, _0x4fd918) {
      _0x51f575 = _0x402286;
      if (_0x4fd918) {
        _0x513c7f = _0x4fd918;
      }
      if (_0x40d707) {
        return;
      }
      _0x40d707 = true;
      if (_0x402286) {
        _0x5dfbd0(_0x4fd918);
      } else {
        _0x999caa(_0x4fd918);
      }
      setTimeout(function () {
        if (_0x51f575 != _0x402286 || _0x513c7f != _0x4fd918) {
          if (_0x51f575) {
            _0x5dfbd0(_0x513c7f);
          } else {
            _0x999caa(_0x513c7f);
          }
        }
        _0x40d707 = false;
      }, 600);
    }
    function _0x1cd243(_0x56c5ad) {
      _0x302093(_0x56c5ad);
      SetNuiFocusKeepInput(!_0x56c5ad);
    }
    var _0x56aa0f = function () {
      var _0x48ce7e = _0xb9e079(function (_0x44bba1) {
        return _0x162674(this, function (_0x21fa1c) {
          if (_0x44bba1) {
            if (!_0x250817()) {
              return [2];
            }
            _0x4887dc = setTick(function () {
              _0x37c912(0, true);
            });
            _0x5a2fd2(true);
          } else {
            clearTick(_0x4887dc);
            _0x4887dc = 0;
            _0x37c912(0, false);
            _0x5a2fd2(false);
          }
          return [2];
        });
      });
      return function _0x303b73(_0x19d6c8) {
        return _0x48ce7e.apply(this, arguments);
      };
    }();
    var _0x5a2fd2 = function () {
      var _0x5f9364 = _0xb9e079(function (_0x4dcb0e) {
        return _0x162674(this, function (_0xb44c6) {
          if (!_0x250817()) {
            return [2];
          }
          if (_0x4dcb0e) {
            _0xcab35d = setTick(function () {
              if (!_0x3a6270) {
                DisableControlAction(0, 1, true);
                DisableControlAction(0, 2, true);
                DisableControlAction(0, 245, true);
              }
              if (_0x503f2d) {
                if (IsDisabledControlJustReleased(0, 177)) {
                  _0x3a577b(true);
                  _0x1cd243(false);
                }
              }
            });
            globalThis.exports.inventory.SetInventoryDisabled(true);
            globalThis.exports.inventory.SetActionBarDisabled(true);
            _0x1fb1f6.get();
            _0x3a577b(true);
            _0x1cd243(false);
            SendNUIMessage({
              action: "display",
              data: {
                display: true
              }
            });
            _0x5f3d51();
            _0x44f537();
            _0x503f2d = true;
          } else {
            globalThis.exports.inventory.SetInventoryDisabled(false);
            globalThis.exports.inventory.SetActionBarDisabled(false);
            clearTick(_0xcab35d);
            _0xcab35d = 0;
            _0x3a577b(false);
            _0x1cd243(true);
            _0x1fb1f6.reset();
            SendNUIMessage({
              action: "display",
              data: {
                display: false
              }
            });
            SendNUIMessage({
              action: "closeDisplay"
            });
            _0x5f3d51();
            _0x4ef6b0();
            _0x503f2d = false;
          }
          return [2];
        });
      });
      return function _0x260045(_0x424383) {
        return _0x5f9364.apply(this, arguments);
      };
    }();
    var _0x2bb03d = false;
    var _0x17cae4 = function () {
      var _0x362c41 = _0xb9e079(function (_0x15c740, _0x22eee0) {
        var _0x23ec6f;
        var _0x56fb64;
        var _0x454c90;
        var _0x2816f1;
        var _0x58a0f8;
        var _0x1f60ba;
        var _0x74b5b2;
        var _0x4957f5;
        var _0x48253f;
        var _0xea5357;
        var _0x44f856;
        var _0x19a4e7;
        var _0x24a58c;
        var _0x55611d;
        var _0x23a444;
        var _0x1008d2;
        var _0x3a3a4c;
        var _0xade59e;
        var _0x4972f2;
        var _0x4636d9;
        return _0x162674(this, function (_0x418e89) {
          switch (_0x418e89.label) {
            case 0:
              _0x23ec6f = {};
              _0x56fb64 = true;
              _0x454c90 = false;
              _0x2816f1 = undefined;
              _0x418e89.label = 1;
            case 1:
              _0x418e89.trys.push([1, 16, 17, 18]);
              _0x58a0f8 = _0x15c740[Symbol.iterator]();
              _0x418e89.label = 2;
            case 2:
              if (!!(_0x56fb64 = (_0x1f60ba = _0x58a0f8.next()).done)) {
                return [3, 15];
              }
              _0x74b5b2 = _0x46729b(_0x1f60ba.value, 2);
              _0x4957f5 = _0x74b5b2[0];
              _0x48253f = _0x74b5b2[1];
              _0xea5357 = _0x2b98da.get(_0x4957f5);
              _0x44f856 = _0x48253f.groupIndex;
              if (_0x48253f.groupIndex != -1) {
                return [3, 9];
              }
              if (_0xea5357 && _0xea5357.groupIndex != -1) {
                _0x44f856 = _0xea5357.groupIndex;
              }
              if (_0x44f856 != -1) {
                return [3, 8];
              }
              if (!_0xea5357 || _0xea5357.groupIndex != -1) {
                return [3, 7];
              }
              if (!_0xea5357.parent) {
                return [3, 4];
              }
              return [4, _0x1ce4d8(_0xea5357.parent)];
            case 3:
              _0x418e89.sent();
              return [3, 6];
            case 4:
              return [4, _0x1ce4d8(_0x4957f5)];
            case 5:
              _0x418e89.sent();
              _0x418e89.label = 6;
            case 6:
              return [3, 8];
            case 7:
              if (_0xea5357 && _0xea5357.groupIndex != -1) {
                _0x44f856 = _0xea5357.groupIndex;
              }
              _0x418e89.label = 8;
            case 8:
              _0xea5357 = _0x2b98da.get(_0x4957f5);
              if (_0xea5357 && _0xea5357.groupIndex != -1) {
                _0x44f856 = _0xea5357.groupIndex;
              } else {
                _0x7e2ebf.log("EDITOR: FAILURE TO GET INDEX FOR ", _0x48253f.model);
              }
              _0x418e89.label = 9;
            case 9:
              _0x19a4e7 = _0x48253f.model;
              _0x24a58c = _0x22eee0.get(_0x48253f.model);
              if (_0x24a58c) {
                _0x19a4e7 = _0x24a58c.display;
              }
              _0x55611d = true;
              if (!_0xea5357) {
                return [3, 11];
              }
              _0x23a444 = _0x22eee0.get(_0xea5357.model);
              if (_0x23a444) {
                _0x19a4e7 = _0x23a444.display;
                if (_0xea5357.isBlockObject) {
                  _0x55611d = false;
                }
              }
              if (_0xea5357.isBuilt != false || !_0xea5357.isSaved) {
                return [3, 11];
              }
              return [4, _0x1d87b5(_0xea5357.model)];
            case 10:
              _0x1008d2 = _0x418e89.sent();
              if (_0x1008d2 != "none") {
                _0x2bb03d = true;
              }
              _0x418e89.label = 11;
            case 11:
              if (!_0x55611d) {
                return [3, 14];
              }
              if (_0x48253f.child == null) {
                return [3, 13];
              }
              if (_0x23ec6f[_0x4957f5] == null) {
                _0x23ec6f[_0x4957f5] = {};
              }
              _0x23ec6f[_0x4957f5].display = _0x19a4e7;
              _0x23ec6f[_0x4957f5].groupindex = _0x44f856;
              return [4, _0x17cae4(_0x48253f.child, _0x22eee0)];
            case 12:
              _0x3a3a4c = _0x418e89.sent();
              _0x23ec6f[_0x4957f5].childItems = _0x3a3a4c ?? {};
              return [3, 14];
            case 13:
              if (_0x23ec6f[_0x4957f5] == null) {
                _0x23ec6f[_0x4957f5] = {};
              }
              _0x23ec6f[_0x4957f5].display = _0x19a4e7;
              _0x23ec6f[_0x4957f5].groupindex = _0x44f856;
              _0x23ec6f[_0x4957f5].childItems = {};
              _0x418e89.label = 14;
            case 14:
              _0x56fb64 = true;
              return [3, 2];
            case 15:
              return [3, 18];
            case 16:
              _0xade59e = _0x418e89.sent();
              _0x454c90 = true;
              _0x2816f1 = _0xade59e;
              return [3, 18];
            case 17:
              try {
                if (!_0x56fb64 && _0x58a0f8.return != null) {
                  _0x58a0f8.return();
                }
              } finally {
                if (_0x454c90) {
                  throw _0x2816f1;
                }
              }
              return [7];
            case 18:
              _0x4972f2 = Object.entries(_0x23ec6f);
              _0x4972f2.sort(function (_0x33ec81, _0x2e11ca) {
                return _0x33ec81[1].groupindex - _0x2e11ca[1].groupindex;
              });
              _0x4636d9 = Object.fromEntries(_0x4972f2);
              return [2, _0x4636d9];
          }
        });
      });
      return function _0xee8a44(_0x6ead0b, _0x33ff34) {
        return _0x362c41.apply(this, arguments);
      };
    }();
    var _0x55b37d = [];
    var _0x2a3888 = function () {
      var _0x325fe5 = _0xb9e079(function (_0x380041) {
        var _0x5450c9;
        var _0x360d1a;
        var _0x18c16c;
        var _0x38355a;
        var _0x4e633e;
        var _0x3a7631;
        var _0x29de12;
        var _0x15f55b;
        var _0x55317d;
        var _0x1074f5;
        var _0x12fa4b;
        return _0x162674(this, function (_0x42f836) {
          switch (_0x42f836.label) {
            case 0:
              _0x5450c9 = true;
              _0x360d1a = false;
              _0x18c16c = undefined;
              _0x42f836.label = 1;
            case 1:
              _0x42f836.trys.push([1, 6, 7, 8]);
              _0x38355a = _0x380041[Symbol.iterator]();
              _0x42f836.label = 2;
            case 2:
              if (!!(_0x5450c9 = (_0x4e633e = _0x38355a.next()).done)) {
                return [3, 5];
              }
              _0x3a7631 = _0x46729b(_0x4e633e.value, 2);
              _0x29de12 = _0x3a7631[0];
              _0x15f55b = _0x3a7631[1];
              _0x55317d = _0x2b98da.get(_0x29de12);
              if (_0x55317d) {
                if (_0x55317d.connection && _0x55317d.connection.room) {
                  _0x1074f5 = _0x55317d.connection.room.getLinks();
                  var _0xfa63d8 = {
                    id: _0x55317d.databaseID,
                    name: _0x55317d.model,
                    links: _0x1074f5 ?? []
                  };
                  _0x55b37d.push(_0xfa63d8);
                }
              }
              if (_0x15f55b.child == null) {
                return [3, 4];
              }
              return [4, _0x2a3888(_0x15f55b.child)];
            case 3:
              _0x42f836.sent();
              _0x42f836.label = 4;
            case 4:
              _0x5450c9 = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x12fa4b = _0x42f836.sent();
              _0x360d1a = true;
              _0x18c16c = _0x12fa4b;
              return [3, 8];
            case 7:
              try {
                if (!_0x5450c9 && _0x38355a.return != null) {
                  _0x38355a.return();
                }
              } finally {
                if (_0x360d1a) {
                  throw _0x18c16c;
                }
              }
              return [7];
            case 8:
              return [2];
          }
        });
      });
      return function _0x2c224b(_0x417a82) {
        return _0x325fe5.apply(this, arguments);
      };
    }();
    var _0x5f3d51 = function () {
      var _0x238958 = _0xb9e079(function () {
        var _0x5101e9;
        var _0x41d0da;
        var _0x43526b;
        var _0x1ccbd6;
        var _0x46addb;
        var _0x44aafe;
        var _0xfe05a5;
        return _0x162674(this, function (_0x485491) {
          switch (_0x485491.label) {
            case 0:
              return [4, _0x21bf42.get()];
            case 1:
              _0x5101e9 = _0x485491.sent();
              if (!_0x5101e9) {
                return [3, 6];
              }
              _0x2bb03d = false;
              return [4, _0x64af29()];
            case 2:
              return [4, _0x17cae4.apply(undefined, [_0x485491.sent(), _0x5101e9])];
            case 3:
              _0x41d0da = _0x485491.sent();
              if (Object.keys(_0x242390).length != 0 && _0x242390 != null) {
                return [3, 5];
              }
              return [4, _0x21bf42.get(undefined)];
            case 4:
              _0x485491.sent();
              _0x485491.label = 5;
            case 5:
              var _0x33357f = {
                display: "Objects",
                childItems: _0x242390
              };
              var _0x3d2dac = {
                display: "Current Objects",
                childItems: _0x41d0da
              };
              var _0x264489 = {
                objectSelection: _0x33357f,
                currentObjects: _0x3d2dac
              };
              _0x43526b = _0x264489;
              _0x1ccbd6 = false;
              _0x46addb = GetInteriorFromPrimaryView();
              if (_0x46addb != 0) {
                _0x44aafe = _0xf35f0d.get(_0x46addb);
                if (_0x44aafe && _0x44aafe.ready && _0x44aafe.inside) {
                  _0xfe05a5 = _0x2b98da.get(_0x44aafe.databaseID);
                  if (_0xfe05a5 && _0xfe05a5.isHousing) {
                    _0x1ccbd6 = true;
                  }
                }
              }
              var _0x427d82 = {
                objectNavigation: _0x43526b,
                hasUnbuilt: _0x2bb03d
              };
              var _0x4235db = {
                action: "updateTree",
                data: _0x427d82
              };
              SendNUIMessage(_0x4235db);
              var _0x34ca13 = {
                housingInZone: _0x1ccbd6
              };
              var _0x5420fe = {
                action: "setHousingInZone",
                data: _0x34ca13
              };
              SendNUIMessage(_0x5420fe);
              _0x485491.label = 6;
            case 6:
              return [2];
          }
        });
      });
      return function _0x4122c0() {
        return _0x238958.apply(this, arguments);
      };
    }();
    var _0x4aefda = function () {
      var _0x1c62df = _0xb9e079(function () {
        var _0xcc40e;
        var _0x400723;
        return _0x162674(this, function (_0x40d6e0) {
          switch (_0x40d6e0.label) {
            case 0:
              return [4, _0x21bf42.get()];
            case 1:
              _0xcc40e = _0x40d6e0.sent();
              if (!_0xcc40e) {
                return [3, 4];
              }
              _0x2bb03d = false;
              return [4, _0x64af29()];
            case 2:
              return [4, _0x17cae4.apply(undefined, [_0x40d6e0.sent(), _0xcc40e])];
            case 3:
              _0x400723 = _0x40d6e0.sent();
              var _0xe866b8 = {
                display: "Current Objects",
                childItems: _0x400723
              };
              var _0x13ebb1 = {
                currentObjects: _0xe866b8,
                hasUnbuilt: _0x2bb03d
              };
              var _0x163d44 = {
                action: "updatePlaced",
                data: _0x13ebb1
              };
              SendNUIMessage(_0x163d44);
              _0x40d6e0.label = 4;
            case 4:
              return [2];
          }
        });
      });
      return function _0x339bc2() {
        return _0x1c62df.apply(this, arguments);
      };
    }();
    var _0x520c78 = function () {
      var _0x925fcb = _0xb9e079(function () {
        return _0x162674(this, function (_0x2ebca7) {
          SendNUIMessage({
            action: "selectedItemSettings",
            data: {
              modelHash: "removed",
              displayName: null,
              x_y_z_rotation: null,
              x_y_z_position: null,
              remainingAmount: null,
              url: null,
              name: null,
              id: null
            }
          });
          return [2];
        });
      });
      return function _0x2f1e52() {
        return _0x925fcb.apply(this, arguments);
      };
    }();
    var _0x4c8712 = function () {
      var _0x10d1f2 = _0xb9e079(function () {
        var _0x1a7e35;
        var _0x13e5fd;
        var _0x158861;
        var _0x495a44;
        var _0x3908b8;
        var _0x5c8ee9;
        var _0x4cb2c4;
        var _0x5b3b3c;
        var _0x20980c;
        var _0x211963;
        return _0x162674(this, function (_0x493e07) {
          switch (_0x493e07.label) {
            case 0:
              if (!_0x34a7cb && _0x43925e == null) {
                SendNUIMessage({
                  action: "selectedItemSettings",
                  data: {
                    modelHash: null,
                    displayName: null,
                    x_y_z_rotation: null,
                    x_y_z_position: null,
                    remainingAmount: null,
                    url: null,
                    name: null,
                    id: null
                  }
                });
                return [2];
              }
              _0x1a7e35 = null;
              _0x13e5fd = null;
              _0x158861 = "none";
              if (_0x43925e && _0x43925e.entityID != 0) {
                _0x1a7e35 = _0x43925e.position;
                _0x13e5fd = _0x45b4c7.fromArray(GetEntityRotation(_0x43925e.entityID));
                _0x158861 = _0x43925e.model;
              }
              if (_0x34a7cb) {
                _0x1a7e35 = _0x45b4c7.fromArray(GetEntityCoords(_0x34a7cb, false));
                _0x13e5fd = _0x45b4c7.fromArray(GetEntityRotation(_0x34a7cb));
                _0x158861 = GetEntityArchetypeName(_0x34a7cb);
              }
              return [4, _0x1d87b5(_0x158861)];
            case 1:
              _0x495a44 = _0x493e07.sent();
              _0x3908b8 = [undefined, null, null];
              _0x5c8ee9 = _0x3908b8[0];
              _0x4cb2c4 = _0x3908b8[1];
              _0x5b3b3c = _0x3908b8[2];
              if (!_0x495a44) {
                return [3, 3];
              }
              return [4, _0x3e6a2f(_0x495a44)];
            case 2:
              _0x20980c = _0x46729b.apply(undefined, [_0x493e07.sent(), 3]);
              _0x5c8ee9 = _0x20980c[0];
              _0x4cb2c4 = _0x20980c[1];
              _0x5b3b3c = _0x20980c[2];
              _0x20980c;
              _0x493e07.label = 3;
            case 3:
              if (!_0x1a7e35 || !_0x13e5fd || !_0x158861) {
                return [3, 5];
              }
              _0x211963 = 0;
              if (_0x43925e) {
                _0x211963 = _0x43925e.entityID;
              }
              if (_0x34a7cb) {
                _0x211963 = _0x34a7cb;
              }
              return [4, _0x520c78()];
            case 4:
              _0x493e07.sent();
              SendNUIMessage({
                action: "selectedItemSettings",
                data: {
                  modelHash: GetHashKey(_0x158861),
                  displayName: _0x158861,
                  x_y_z_rotation: [_0x13e5fd.x, _0x13e5fd.y, _0x13e5fd.z],
                  x_y_z_position: [_0x1a7e35.x, _0x1a7e35.y, _0x1a7e35.z],
                  remainingAmount: _0x5c8ee9,
                  url: _0x4cb2c4,
                  name: _0x5b3b3c,
                  id: _0x43925e?.databaseID,
                  entity: _0x211963
                }
              });
              _0x493e07.label = 5;
            case 5:
              return [2];
          }
        });
      });
      return function _0x49a9c5() {
        return _0x10d1f2.apply(this, arguments);
      };
    }();
    var _0x2cd231 = null;
    var _0x3b7f4c = function () {
      var _0x49d562 = _0xb9e079(function (_0x4f1aaf) {
        var _0x7959a9;
        var _0x3522bc;
        var _0x4f7395;
        return _0x162674(this, function (_0x5ed752) {
          _0x7959a9 = null;
          _0x3522bc = null;
          _0x4f7395 = "none";
          if (_0x53e1f9) {
            _0x7959a9 = _0x45b4c7.fromArray(GetEntityCoords(_0x53e1f9, false));
            _0x3522bc = _0x45b4c7.fromArray(GetEntityRotation(_0x53e1f9));
            _0x4f7395 = GetEntityArchetypeName(_0x53e1f9);
          }
          if (_0x34a7cb) {
            _0x7959a9 = _0x45b4c7.fromArray(GetEntityCoords(_0x34a7cb, false));
            _0x3522bc = _0x45b4c7.fromArray(GetEntityRotation(_0x34a7cb));
            _0x4f7395 = GetEntityArchetypeName(_0x34a7cb);
          }
          if (_0x4f1aaf && _0x7959a9 && _0x3522bc) {
            var _0x4a8b99 = {
              x_y_z_rotation: [_0x3522bc.x, _0x3522bc.y, _0x3522bc.z],
              x_y_z_position: [_0x7959a9.x, _0x7959a9.y, _0x7959a9.z]
            };
            var _0x26c9d4 = {
              action: "updatePositionAndRot",
              data: _0x4a8b99
            };
            SendNUIMessage(_0x26c9d4);
          }
          _0x509a12(function () {
            if (_0x7959a9 && _0x3522bc && _0x4f7395) {
              var _0x4a3da8 = {
                x_y_z_rotation: [_0x3522bc.x, _0x3522bc.y, _0x3522bc.z],
                x_y_z_position: [_0x7959a9.x, _0x7959a9.y, _0x7959a9.z]
              };
              _0x5a7bc2(_0x4a3da8);
            }
          }, 200);
          return [2];
        });
      });
      return function _0x175a4c(_0x3965ef) {
        return _0x49d562.apply(this, arguments);
      };
    }();
    function _0x509a12(_0x220ce5, _0x486274) {
      if (_0x2cd231 === null || Date.now() - _0x2cd231 >= _0x486274) {
        _0x220ce5();
        _0x2cd231 = Date.now();
      }
    }
    function _0x5a7bc2(_0x4bf424) {
      var _0x4009b7 = {
        action: "updatePositionAndRot",
        data: _0x4bf424
      };
      SendNUIMessage(_0x4009b7);
    }
    var _0x13ccad = function () {
      var _0x5acba2 = _0xb9e079(function () {
        return _0x162674(this, function (_0x2aaf1e) {
          switch (_0x2aaf1e.label) {
            case 0:
              _0x55b37d = [];
              return [4, _0x64af29()];
            case 1:
              return [4, _0x2a3888.apply(undefined, [_0x2aaf1e.sent()])];
            case 2:
              _0x2aaf1e.sent();
              _0x55b37d.push({
                id: "worldLinkIDNopixel",
                name: "Void Link",
                links: []
              });
              var _0x45aeca = {
                action: "roomLinks",
                data: _0x55b37d
              };
              SendNUIMessage(_0x45aeca);
              return [2];
          }
        });
      });
      return function _0x5ecdbe() {
        return _0x5acba2.apply(this, arguments);
      };
    }();
    var _0x635c78 = function () {
      var _0x2db438 = _0xb9e079(function () {
        var _0x5b1b19;
        return _0x162674(this, function (_0x3b90b0) {
          switch (_0x3b90b0.label) {
            case 0:
              return [4, _0x55d3f0()];
            case 1:
              _0x5b1b19 = _0x3b90b0.sent();
              var _0x449a23 = {
                action: "shoppingList",
                data: _0x5b1b19
              };
              SendNUIMessage(_0x449a23);
              return [2];
          }
        });
      });
      return function _0x24db9e() {
        return _0x2db438.apply(this, arguments);
      };
    }();
    RegisterNuiCallbackType("exit");
    on("__cfx_nui:exit", function (_0x4f5c15, _0x4c4f30) {
      _0x3a577b(false);
      _0x4457ca = false;
      SetNuiFocus(false, false);
      SetNuiFocusKeepInput(false);
      _0x1cd243(true);
      _0x37c912(_0x34a7cb, false);
      SendNuiMessage(JSON.stringify({
        action: "display",
        data: {
          display: false
        }
      }));
      _0x4c4f30({});
    });
    ;
    var _0x4a7a97 = _0x5f5650(480);
    function _0x37249b(_0xbde37a, _0x710335) {
      if (_0x710335 == null || _0x710335 > _0xbde37a.length) {
        _0x710335 = _0xbde37a.length;
      }
      for (var _0x59cb8b = 0, _0x3843ab = new Array(_0x710335); _0x59cb8b < _0x710335; _0x59cb8b++) {
        _0x3843ab[_0x59cb8b] = _0xbde37a[_0x59cb8b];
      }
      return _0x3843ab;
    }
    function _0x5e714e(_0x5006ef) {
      if (Array.isArray(_0x5006ef)) {
        return _0x5006ef;
      }
    }
    function _0x43c1a1(_0x59d814, _0x4dbf18, _0x812f61, _0x2ab49b, _0x1fda17, _0x1a8303, _0x5f1be0) {
      try {
        var _0x198f40 = _0x59d814[_0x1a8303](_0x5f1be0);
        var _0x6acba2 = _0x198f40.value;
      } catch (_0x2a0a9e) {
        _0x812f61(_0x2a0a9e);
        return;
      }
      if (_0x198f40.done) {
        _0x4dbf18(_0x6acba2);
      } else {
        Promise.resolve(_0x6acba2).then(_0x2ab49b, _0x1fda17);
      }
    }
    function _0x4ac896(_0x18daf9) {
      return function () {
        var _0x3e6f45 = this;
        var _0x184385 = arguments;
        return new Promise(function (_0x2bd9ae, _0x161ed6) {
          var _0x352cc9 = _0x18daf9.apply(_0x3e6f45, _0x184385);
          function _0x57090d(_0x30d72d) {
            _0x43c1a1(_0x352cc9, _0x2bd9ae, _0x161ed6, _0x57090d, _0x3c7c64, "next", _0x30d72d);
          }
          function _0x3c7c64(_0x1f21be) {
            _0x43c1a1(_0x352cc9, _0x2bd9ae, _0x161ed6, _0x57090d, _0x3c7c64, "throw", _0x1f21be);
          }
          _0x57090d(undefined);
        });
      };
    }
    function _0x85c4b5(_0x2a5bc6, _0x24bb3f) {
      var _0x3fe1a4 = _0x2a5bc6 == null ? null : typeof Symbol !== "undefined" && _0x2a5bc6[Symbol.iterator] || _0x2a5bc6["@@iterator"];
      if (_0x3fe1a4 == null) {
        return;
      }
      var _0x556520 = [];
      var _0x19ee6d = true;
      var _0x5435e8 = false;
      var _0x21579d;
      var _0x29be0a;
      try {
        for (_0x3fe1a4 = _0x3fe1a4.call(_0x2a5bc6); !(_0x19ee6d = (_0x21579d = _0x3fe1a4.next()).done); _0x19ee6d = true) {
          _0x556520.push(_0x21579d.value);
          if (_0x24bb3f && _0x556520.length === _0x24bb3f) {
            break;
          }
        }
      } catch (_0x2e6aa0) {
        _0x5435e8 = true;
        _0x29be0a = _0x2e6aa0;
      } finally {
        try {
          if (!_0x19ee6d && _0x3fe1a4.return != null) {
            _0x3fe1a4.return();
          }
        } finally {
          if (_0x5435e8) {
            throw _0x29be0a;
          }
        }
      }
      return _0x556520;
    }
    function _0xb0cbad() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x3e7801(_0x41d5ad, _0x49bf5e) {
      return _0x5e714e(_0x41d5ad) || _0x85c4b5(_0x41d5ad, _0x49bf5e) || _0x297ed5(_0x41d5ad, _0x49bf5e) || _0xb0cbad();
    }
    function _0x297ed5(_0x2e11b8, _0x510aa0) {
      if (!_0x2e11b8) {
        return;
      }
      if (typeof _0x2e11b8 === "string") {
        return _0x37249b(_0x2e11b8, _0x510aa0);
      }
      var _0xf5f958 = Object.prototype.toString.call(_0x2e11b8).slice(8, -1);
      if (_0xf5f958 === "Object" && _0x2e11b8.constructor) {
        _0xf5f958 = _0x2e11b8.constructor.name;
      }
      if (_0xf5f958 === "Map" || _0xf5f958 === "Set") {
        return Array.from(_0xf5f958);
      }
      if (_0xf5f958 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0xf5f958)) {
        return _0x37249b(_0x2e11b8, _0x510aa0);
      }
    }
    function _0x3091e6(_0x1fbdf7, _0x53e79a) {
      var _0x50daa8;
      var _0x582475;
      var _0x11432d;
      var _0x693d02;
      var _0x2a65ad = {
        label: 0,
        sent: function () {
          if (_0x11432d[0] & 1) {
            throw _0x11432d[1];
          }
          return _0x11432d[1];
        },
        trys: [],
        ops: []
      };
      _0x693d02 = {
        next: _0x1b74a8(0),
        throw: _0x1b74a8(1),
        return: _0x1b74a8(2)
      };
      if (typeof Symbol === "function") {
        _0x693d02[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x693d02;
      function _0x1b74a8(_0x5f0d5a) {
        return function (_0x41723f) {
          return _0x4b1767([_0x5f0d5a, _0x41723f]);
        };
      }
      function _0x4b1767(_0x4d01a8) {
        if (_0x50daa8) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x2a65ad) {
          try {
            _0x50daa8 = 1;
            if (_0x582475 && (_0x11432d = _0x4d01a8[0] & 2 ? _0x582475.return : _0x4d01a8[0] ? _0x582475.throw || ((_0x11432d = _0x582475.return) && _0x11432d.call(_0x582475), 0) : _0x582475.next) && !(_0x11432d = _0x11432d.call(_0x582475, _0x4d01a8[1])).done) {
              return _0x11432d;
            }
            _0x582475 = 0;
            if (_0x11432d) {
              _0x4d01a8 = [_0x4d01a8[0] & 2, _0x11432d.value];
            }
            switch (_0x4d01a8[0]) {
              case 0:
              case 1:
                _0x11432d = _0x4d01a8;
                break;
              case 4:
                _0x2a65ad.label++;
                var _0x431242 = {
                  value: _0x4d01a8[1],
                  done: false
                };
                return _0x431242;
              case 5:
                _0x2a65ad.label++;
                _0x582475 = _0x4d01a8[1];
                _0x4d01a8 = [0];
                continue;
              case 7:
                _0x4d01a8 = _0x2a65ad.ops.pop();
                _0x2a65ad.trys.pop();
                continue;
              default:
                if (!(_0x11432d = _0x2a65ad.trys, _0x11432d = _0x11432d.length > 0 && _0x11432d[_0x11432d.length - 1]) && (_0x4d01a8[0] === 6 || _0x4d01a8[0] === 2)) {
                  _0x2a65ad = 0;
                  continue;
                }
                if (_0x4d01a8[0] === 3 && (!_0x11432d || _0x4d01a8[1] > _0x11432d[0] && _0x4d01a8[1] < _0x11432d[3])) {
                  _0x2a65ad.label = _0x4d01a8[1];
                  break;
                }
                if (_0x4d01a8[0] === 6 && _0x2a65ad.label < _0x11432d[1]) {
                  _0x2a65ad.label = _0x11432d[1];
                  _0x11432d = _0x4d01a8;
                  break;
                }
                if (_0x11432d && _0x2a65ad.label < _0x11432d[2]) {
                  _0x2a65ad.label = _0x11432d[2];
                  _0x2a65ad.ops.push(_0x4d01a8);
                  break;
                }
                if (_0x11432d[2]) {
                  _0x2a65ad.ops.pop();
                }
                _0x2a65ad.trys.pop();
                continue;
            }
            _0x4d01a8 = _0x53e79a.call(_0x1fbdf7, _0x2a65ad);
          } catch (_0x2bae59) {
            _0x4d01a8 = [6, _0x2bae59];
            _0x582475 = 0;
          } finally {
            _0x50daa8 = _0x11432d = 0;
          }
        }
        if (_0x4d01a8[0] & 5) {
          throw _0x4d01a8[1];
        }
        var _0x13f832 = {
          value: _0x4d01a8[0] ? _0x4d01a8[1] : undefined,
          done: true
        };
        return _0x13f832;
      }
    }
    var _0x7f8b0a = new Map();
    var _0x4c6bb4 = new Map();
    function _0xb262e(_0x494fc3) {
      if (_0x4cd1fb(_0x494fc3.databaseID) == false) {
        _0x1e9676(_0x494fc3.databaseID, _0x7f8b0a);
        _0x494fc3.navagation = false;
        _0x2b98da.set(_0x494fc3.databaseID, _0x494fc3);
      }
    }
    var _0x56800d = 0;
    var _0x1e9676 = function () {
      var _0x4d927a = _0x4ac896(function (_0x1d6a11, _0x34b56d) {
        var _0x3a0015;
        var _0x411dd0;
        var _0x5c71ec;
        var _0x2f0f2c;
        var _0xec29fd;
        var _0x1e83c2;
        var _0x2f5dbd;
        var _0x6e463a;
        var _0x3b7c2b;
        var _0x3f67f2;
        var _0x702d34;
        var _0x3fb88c;
        var _0x58c665;
        var _0x55e7f5;
        var _0x3ecb70;
        var _0x48c186;
        var _0x574977;
        var _0x1f0123;
        var _0x233092;
        var _0x35ca67;
        var _0x2fe166;
        return _0x3091e6(this, function (_0x5a0ff9) {
          _0x3a0015 = _0x34b56d;
          if (_0x3a0015 == null) {
            _0x3a0015 = _0x7f8b0a;
          }
          _0x411dd0 = true;
          _0x5c71ec = false;
          _0x2f0f2c = undefined;
          try {
            for (_0xec29fd = _0x3a0015.entries()[Symbol.iterator](); !(_0x411dd0 = (_0x1e83c2 = _0xec29fd.next()).done); _0x411dd0 = true) {
              _0x2f5dbd = _0x3e7801(_0x1e83c2.value, 2);
              _0x6e463a = _0x2f5dbd[0];
              _0x3b7c2b = _0x2f5dbd[1];
              if (_0x3b7c2b.child) {
                _0x3f67f2 = true;
                _0x702d34 = false;
                _0x3fb88c = undefined;
                try {
                  for (_0x58c665 = _0x3b7c2b.child.entries()[Symbol.iterator](); !(_0x3f67f2 = (_0x55e7f5 = _0x58c665.next()).done); _0x3f67f2 = true) {
                    _0x3ecb70 = _0x3e7801(_0x55e7f5.value, 2);
                    _0x48c186 = _0x3ecb70[0];
                    _0x574977 = _0x3ecb70[1];
                    if (_0x48c186 == _0x1d6a11) {
                      _0x1f0123 = _0x2b98da.get(_0x48c186);
                      if (_0x1f0123) {
                        _0x1f0123.hasNavigationChild = false;
                        _0x2b98da.set(_0x48c186, _0x1f0123);
                      }
                      _0x3b7c2b.child.delete(_0x48c186);
                      _0x4c6bb4.delete(_0x48c186);
                      _0x233092 = _0x4c6bb4.get(_0x6e463a);
                      if (_0x233092) {
                        for (var _0x38bee6 in _0x233092) {
                          _0x2fe166 = _0x233092[_0x38bee6];
                          if (_0x2fe166 == _0x1d6a11) {
                            _0x233092.splice(+_0x38bee6, 1);
                          }
                        }
                        _0x4c6bb4.set(_0x6e463a, _0x233092);
                      }
                    } else if (_0x574977.child) {
                      _0x1e9676(_0x1d6a11, _0x3b7c2b.child);
                    }
                  }
                } catch (_0x2755bd) {
                  _0x702d34 = true;
                  _0x3fb88c = _0x2755bd;
                } finally {
                  try {
                    if (!_0x3f67f2 && _0x58c665.return != null) {
                      _0x58c665.return();
                    }
                  } finally {
                    if (_0x702d34) {
                      throw _0x3fb88c;
                    }
                  }
                }
              }
            }
          } catch (_0x233ca7) {
            _0x5c71ec = true;
            _0x2f0f2c = _0x233ca7;
          } finally {
            try {
              if (!_0x411dd0 && _0xec29fd.return != null) {
                _0xec29fd.return();
              }
            } finally {
              if (_0x5c71ec) {
                throw _0x2f0f2c;
              }
            }
          }
          return [2, false];
        });
      });
      return function _0x218d75(_0x330318, _0x3bfc31) {
        return _0x4d927a.apply(this, arguments);
      };
    }();
    var _0x22c01d = function () {
      var _0x4c62bb = _0x4ac896(function (_0x8a24d, _0x14ae62) {
        var _0x2a7fb5;
        var _0x372284;
        var _0x1fb289;
        var _0x8e570;
        var _0x2e8b02;
        var _0x5e4338;
        var _0x5bd828;
        var _0x59b6d0;
        var _0x5245fd;
        return _0x3091e6(this, function (_0x530c7b) {
          _0x2a7fb5 = _0x14ae62;
          if (_0x2a7fb5 == null) {
            _0x2a7fb5 = _0x7f8b0a;
          }
          _0x372284 = true;
          _0x1fb289 = false;
          _0x8e570 = undefined;
          try {
            for (_0x2e8b02 = _0x2a7fb5.entries()[Symbol.iterator](); !(_0x372284 = (_0x5e4338 = _0x2e8b02.next()).done); _0x372284 = true) {
              _0x5bd828 = _0x3e7801(_0x5e4338.value, 2);
              _0x59b6d0 = _0x5bd828[0];
              _0x5245fd = _0x5bd828[1];
              if (_0x59b6d0 == _0x8a24d) {
                _0x5245fd.child = undefined;
                return [2, true];
              } else if (_0x5245fd.child) {
                _0x22c01d(_0x8a24d, _0x5245fd.child);
              }
            }
          } catch (_0xd5b481) {
            _0x1fb289 = true;
            _0x8e570 = _0xd5b481;
          } finally {
            try {
              if (!_0x372284 && _0x2e8b02.return != null) {
                _0x2e8b02.return();
              }
            } finally {
              if (_0x1fb289) {
                throw _0x8e570;
              }
            }
          }
          return [2, false];
        });
      });
      return function _0x35c9e7(_0x498752, _0x152278) {
        return _0x4c62bb.apply(this, arguments);
      };
    }();
    var _0x2e1a0b = function () {
      var _0x51b234 = _0x4ac896(function (_0x5e118d, _0x172725) {
        var _0x1668f1;
        var _0x25e356;
        var _0x299888;
        var _0x1299fa;
        var _0x5c90a1;
        var _0x41da82;
        var _0x916060;
        var _0x2356e0;
        var _0x3db287;
        var _0x69065b;
        return _0x3091e6(this, function (_0x4848aa) {
          switch (_0x4848aa.label) {
            case 0:
              _0x1668f1 = true;
              _0x25e356 = false;
              _0x299888 = undefined;
              _0x4848aa.label = 1;
            case 1:
              _0x4848aa.trys.push([1, 7, 8, 9]);
              _0x1299fa = _0x5e118d.entries()[Symbol.iterator]();
              _0x4848aa.label = 2;
            case 2:
              if (!!(_0x1668f1 = (_0x5c90a1 = _0x1299fa.next()).done)) {
                return [3, 6];
              }
              _0x41da82 = _0x3e7801(_0x5c90a1.value, 2);
              _0x916060 = _0x41da82[0];
              _0x2356e0 = _0x41da82[1];
              if (_0x916060 != _0x172725) {
                return [3, 3];
              }
              return [2, _0x2356e0];
            case 3:
              if (!_0x2356e0.child) {
                return [3, 5];
              }
              return [4, _0x2e1a0b(_0x2356e0.child, _0x172725)];
            case 4:
              _0x3db287 = _0x4848aa.sent();
              if (_0x3db287) {
                return [2, _0x3db287];
              }
              _0x4848aa.label = 5;
            case 5:
              _0x1668f1 = true;
              return [3, 2];
            case 6:
              return [3, 9];
            case 7:
              _0x69065b = _0x4848aa.sent();
              _0x25e356 = true;
              _0x299888 = _0x69065b;
              return [3, 9];
            case 8:
              try {
                if (!_0x1668f1 && _0x1299fa.return != null) {
                  _0x1299fa.return();
                }
              } finally {
                if (_0x25e356) {
                  throw _0x299888;
                }
              }
              return [7];
            case 9:
              return [2];
          }
        });
      });
      return function _0x53764e(_0x1402f2, _0x5a0607) {
        return _0x51b234.apply(this, arguments);
      };
    }();
    var _0x25c292 = function () {
      var _0xe02aba = _0x4ac896(function (_0x171ca9) {
        var _0x46edce;
        var _0x2a9728;
        var _0x1ec0ec;
        var _0x136cad;
        var _0x389e0d;
        var _0x41fc2e;
        var _0x41cfc6;
        var _0x35dd72;
        var _0xd544fa;
        return _0x3091e6(this, function (_0x100fde) {
          switch (_0x100fde.label) {
            case 0:
              _0x46edce = true;
              _0x2a9728 = false;
              _0x1ec0ec = undefined;
              _0x100fde.label = 1;
            case 1:
              _0x100fde.trys.push([1, 6, 7, 8]);
              _0x136cad = _0x171ca9.entries()[Symbol.iterator]();
              _0x100fde.label = 2;
            case 2:
              if (!!(_0x46edce = (_0x389e0d = _0x136cad.next()).done)) {
                return [3, 5];
              }
              _0x41fc2e = _0x3e7801(_0x389e0d.value, 2);
              _0x41cfc6 = _0x41fc2e[0];
              _0x35dd72 = _0x41fc2e[1];
              return [4, _0x46004c(_0x35dd72, 1)];
            case 3:
              _0x100fde.sent();
              _0x100fde.label = 4;
            case 4:
              _0x46edce = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0xd544fa = _0x100fde.sent();
              _0x2a9728 = true;
              _0x1ec0ec = _0xd544fa;
              return [3, 8];
            case 7:
              try {
                if (!_0x46edce && _0x136cad.return != null) {
                  _0x136cad.return();
                }
              } finally {
                if (_0x2a9728) {
                  throw _0x1ec0ec;
                }
              }
              return [7];
            case 8:
              return [2];
          }
        });
      });
      return function _0x474772(_0x1fde5b) {
        return _0xe02aba.apply(this, arguments);
      };
    }();
    var _0x3f8f04 = function () {
      var _0x5424b1 = _0x4ac896(function (_0x5c83c4, _0x2ada49) {
        var _0x53ad77;
        var _0x583193;
        var _0x4bb19b;
        var _0x450895;
        var _0x3f4aa5;
        var _0x203a7b;
        var _0x5f4c3b;
        var _0x1fd46d;
        var _0x3c8873;
        var _0x5c9592;
        return _0x3091e6(this, function (_0x360319) {
          switch (_0x360319.label) {
            case 0:
              _0x53ad77 = true;
              _0x583193 = false;
              _0x4bb19b = undefined;
              _0x360319.label = 1;
            case 1:
              _0x360319.trys.push([1, 6, 7, 8]);
              _0x450895 = _0x5c83c4.entries()[Symbol.iterator]();
              _0x360319.label = 2;
            case 2:
              if (!!(_0x53ad77 = (_0x3f4aa5 = _0x450895.next()).done)) {
                return [3, 5];
              }
              _0x203a7b = _0x3e7801(_0x3f4aa5.value, 2);
              _0x5f4c3b = _0x203a7b[0];
              _0x1fd46d = _0x203a7b[1];
              _0x3c8873 = _0x2b98da.get(_0x5f4c3b);
              if (!_0x3c8873) {
                return [3, 4];
              }
              _0x4a7a97.log("-".repeat(_0x2ada49 * 4) + _0x1fd46d.model + " Index " + _0x3c8873.groupIndex);
              if (!_0x1fd46d.child) {
                return [3, 4];
              }
              return [4, _0x3f8f04(_0x1fd46d.child, _0x2ada49 + 1)];
            case 3:
              _0x360319.sent();
              _0x360319.label = 4;
            case 4:
              _0x53ad77 = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x5c9592 = _0x360319.sent();
              _0x583193 = true;
              _0x4bb19b = _0x5c9592;
              return [3, 8];
            case 7:
              try {
                if (!_0x53ad77 && _0x450895.return != null) {
                  _0x450895.return();
                }
              } finally {
                if (_0x583193) {
                  throw _0x4bb19b;
                }
              }
              return [7];
            case 8:
              return [2];
          }
        });
      });
      return function _0x15f7d6(_0x441235, _0x50d019) {
        return _0x5424b1.apply(this, arguments);
      };
    }();
    var _0x46004c = function () {
      var _0xb4d820 = _0x4ac896(function (_0x5375e5, _0x1dc149) {
        var _0x5459a9;
        var _0x17b414;
        var _0x442b31;
        var _0x591ae8;
        var _0xcd6c2a;
        var _0x393627;
        var _0x545f1e;
        var _0x402e18;
        var _0x4ebf92;
        return _0x3091e6(this, function (_0x1d4d80) {
          switch (_0x1d4d80.label) {
            case 0:
              _0x5459a9 = _0x5375e5.parent;
              _0x17b414 = _0x5375e5.databaseID;
              _0x442b31 = _0x5375e5.model;
              _0x591ae8 = _0x5375e5.groupIndex;
              _0xcd6c2a = _0x2b98da.get(_0x5459a9);
              if (_0x5375e5.navagation) {
                return [2, false];
              }
              var _0x920d4a = {
                model: _0x442b31,
                groupIndex: _0x591ae8,
                child: undefined
              };
              _0x393627 = _0x920d4a;
              _0x545f1e = _0x4c6bb4.get(_0x5459a9);
              if (_0x545f1e == undefined) {
                _0x545f1e = [];
              }
              if (!_0x5459a9) {
                return [3, 6];
              }
              return [4, _0x2e1a0b(_0x7f8b0a, _0x5459a9)];
            case 1:
              _0x402e18 = _0x1d4d80.sent();
              if (!_0x402e18) {
                return [3, 2];
              }
              if (!_0x402e18.child) {
                _0x402e18.child = new Map();
              }
              _0x402e18.child.set(_0x17b414, _0x393627);
              if (!_0x545f1e.includes(_0x17b414)) {
                _0x545f1e.push(_0x17b414);
              }
              return [3, 5];
            case 2:
              _0x4ebf92 = _0x2b98da.get(_0x5459a9);
              if (!_0x4ebf92) {
                return [2, false];
              }
              return [4, _0x46004c(_0x4ebf92, _0x1dc149 + 1)];
            case 3:
              _0x1d4d80.sent();
              return [4, _0x2e1a0b(_0x7f8b0a, _0x5459a9)];
            case 4:
              _0x402e18 = _0x1d4d80.sent();
              if (_0x402e18) {
                if (!_0x402e18.child) {
                  _0x402e18.child = new Map();
                }
                _0x402e18.child.set(_0x17b414, _0x393627);
                if (!_0x545f1e.includes(_0x17b414)) {
                  _0x545f1e.push(_0x17b414);
                }
              }
              _0x1d4d80.label = 5;
            case 5:
              if (_0xcd6c2a) {
                _0xcd6c2a.hasNavigationChild = true;
              }
              return [3, 7];
            case 6:
              _0x7f8b0a.set(_0x17b414, _0x393627);
              _0x1d4d80.label = 7;
            case 7:
              if (_0xcd6c2a) {
                _0x2b98da.set(_0x5459a9, _0xcd6c2a);
              }
              _0x5375e5.navagation = true;
              _0x4c6bb4.set(_0x5459a9, _0x545f1e);
              return [2, true];
          }
        });
      });
      return function _0x11e07d(_0x1bfa83, _0x292c4f) {
        return _0xb4d820.apply(this, arguments);
      };
    }();
    var _0xcd2fb = function () {
      var _0x1cef17 = _0x4ac896(function (_0x29ab5d) {
        var _0x165795;
        var _0xaf8ed3;
        var _0x3809e5;
        var _0x2c52ee;
        var _0x14b32b;
        var _0x4e34bc;
        return _0x3091e6(this, function (_0x2a5c98) {
          switch (_0x2a5c98.label) {
            case 0:
              _0x165795 = [];
              for (var _0x387214 in _0x29ab5d) {
                _0x3809e5 = _0x29ab5d[_0x387214];
                _0x2c52ee = _0x3809e5.parent;
                _0x14b32b = _0x2b98da.get(_0x2c52ee);
                if (_0x14b32b) {
                  _0x4e34bc = _0x4c6bb4.get(_0x14b32b.databaseID);
                  if (_0x4e34bc) {
                    _0x4e34bc.push(_0x3809e5.databaseID);
                    if (!_0x4c6bb4.has(_0x3809e5.databaseID)) {
                      _0x4c6bb4.set(_0x3809e5.databaseID, []);
                    }
                    _0x4c6bb4.set(_0x14b32b.databaseID, _0x4e34bc);
                  } else {
                    _0x165795.push(_0x3809e5);
                  }
                } else {
                  _0x165795.push(_0x3809e5);
                }
              }
              if (_0x165795.length <= 0) {
                return [3, 2];
              }
              _0x56800d++;
              return [4, _0xcd2fb(_0x165795)];
            case 1:
              _0x2a5c98.sent();
              _0x2a5c98.label = 2;
            case 2:
              return [2];
          }
        });
      });
      return function _0x5c9c1d(_0x25d8f5) {
        return _0x1cef17.apply(this, arguments);
      };
    }();
    var _0x406e3b = function () {
      var _0x342f52 = _0x4ac896(function (_0x2d93dc, _0x20e1cd) {
        var _0x6325a8;
        var _0x51a4b3;
        var _0x21a82b;
        var _0x29caaf;
        var _0x19db0a;
        var _0x547b18;
        var _0xa9edc9;
        var _0x53026e;
        var _0x53b574;
        var _0x4bbef8;
        var _0x468bc1;
        var _0x5666c6 = arguments;
        return _0x3091e6(this, function (_0x4ee88e) {
          switch (_0x4ee88e.label) {
            case 0:
              _0x6325a8 = _0x5666c6.length > 2 && _0x5666c6[2] !== undefined ? _0x5666c6[2] : new Set();
              if (_0x6325a8.has(_0x20e1cd)) {
                return [2];
              }
              _0x6325a8.add(_0x20e1cd);
              _0x51a4b3 = _0x2d93dc.get(_0x20e1cd) || [];
              _0x21a82b = [];
              _0x29caaf = true;
              _0x19db0a = false;
              _0x547b18 = undefined;
              _0x4ee88e.label = 1;
            case 1:
              _0x4ee88e.trys.push([1, 6, 7, 8]);
              _0xa9edc9 = _0x51a4b3[Symbol.iterator]();
              _0x4ee88e.label = 2;
            case 2:
              if (!!(_0x29caaf = (_0x53026e = _0xa9edc9.next()).done)) {
                return [3, 5];
              }
              _0x53b574 = _0x53026e.value;
              return [4, _0x406e3b(_0x2d93dc, _0x53b574, _0x6325a8)];
            case 3:
              _0x4bbef8 = _0x4ee88e.sent();
              if (_0x4bbef8) {
                _0x21a82b.push(_0x4bbef8);
              }
              _0x4ee88e.label = 4;
            case 4:
              _0x29caaf = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x468bc1 = _0x4ee88e.sent();
              _0x19db0a = true;
              _0x547b18 = _0x468bc1;
              return [3, 8];
            case 7:
              try {
                if (!_0x29caaf && _0xa9edc9.return != null) {
                  _0xa9edc9.return();
                }
              } finally {
                if (_0x19db0a) {
                  throw _0x547b18;
                }
              }
              return [7];
            case 8:
              _0x6325a8.delete(_0x20e1cd);
              var _0x302e24 = {
                name: _0x20e1cd,
                children: _0x21a82b
              };
              return [2, _0x302e24];
          }
        });
      });
      return function _0x12f0d7(_0x44570c, _0x2d8d75) {
        return _0x342f52.apply(this, arguments);
      };
    }();
    var _0x5ecf30 = function () {
      var _0x412eb1 = _0x4ac896(function (_0x16db7c, _0xdf30d8) {
        var _0x51b5d8;
        var _0x149cf1;
        var _0x178c7b;
        var _0x490d01;
        var _0x54dfc7;
        var _0x294026;
        return _0x3091e6(this, function (_0xd0e218) {
          _0x51b5d8 = true;
          _0x149cf1 = false;
          _0x178c7b = undefined;
          try {
            _0x490d01 = function () {
              var _0x3a112d = _0x294026.value;
              var _0x558b4f = setTick(_0x4ac896(function () {
                var _0x2f743d;
                return _0x3091e6(this, function (_0x405d98) {
                  switch (_0x405d98.label) {
                    case 0:
                      _0x2f743d = _0x2b98da.get(_0x3a112d.name);
                      if (!_0x2f743d) {
                        return [3, 2];
                      }
                      _0x2f743d.navagation = false;
                      _0x2b98da.set(_0x3a112d.name, _0x2f743d);
                      return [4, _0x46004c(_0x2f743d, 1)];
                    case 1:
                      _0x405d98.sent();
                      _0x5ecf30(_0x3a112d, _0xdf30d8 + 1);
                      _0x405d98.label = 2;
                    case 2:
                      clearTick(_0x558b4f);
                      return [2];
                  }
                });
              }));
            };
            for (_0x54dfc7 = _0x16db7c.children[Symbol.iterator](); !(_0x51b5d8 = (_0x294026 = _0x54dfc7.next()).done); _0x51b5d8 = true) {
              _0x490d01();
            }
          } catch (_0x39096d) {
            _0x149cf1 = true;
            _0x178c7b = _0x39096d;
          } finally {
            try {
              if (!_0x51b5d8 && _0x54dfc7.return != null) {
                _0x54dfc7.return();
              }
            } finally {
              if (_0x149cf1) {
                throw _0x178c7b;
              }
            }
          }
          return [2];
        });
      });
      return function _0x3d89ad(_0xfcfe02, _0x4cb7c5) {
        return _0x412eb1.apply(this, arguments);
      };
    }();
    var _0x32f280 = function () {
      var _0x9fc210 = _0x4ac896(function (_0x452da4, _0x3a4ab9) {
        var _0x44381b;
        var _0x3fdac3;
        var _0xe081e4;
        var _0x4dfc59;
        var _0x2f89b2;
        var _0x8b4fef;
        var _0x1063ed;
        var _0x2ea7f4;
        return _0x3091e6(this, function (_0x5c410b) {
          switch (_0x5c410b.label) {
            case 0:
              if (_0x452da4 === null) {
                return [2];
              }
              if (_0x452da4.name === _0x3a4ab9) {
                return [2, _0x452da4];
              }
              _0x44381b = true;
              _0x3fdac3 = false;
              _0xe081e4 = undefined;
              _0x5c410b.label = 1;
            case 1:
              _0x5c410b.trys.push([1, 6, 7, 8]);
              _0x4dfc59 = _0x452da4.children[Symbol.iterator]();
              _0x5c410b.label = 2;
            case 2:
              if (!!(_0x44381b = (_0x2f89b2 = _0x4dfc59.next()).done)) {
                return [3, 5];
              }
              _0x8b4fef = _0x2f89b2.value;
              return [4, _0x32f280(_0x8b4fef, _0x3a4ab9)];
            case 3:
              _0x1063ed = _0x5c410b.sent();
              if (_0x1063ed) {
                return [2, _0x1063ed];
              }
              _0x5c410b.label = 4;
            case 4:
              _0x44381b = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x2ea7f4 = _0x5c410b.sent();
              _0x3fdac3 = true;
              _0xe081e4 = _0x2ea7f4;
              return [3, 8];
            case 7:
              try {
                if (!_0x44381b && _0x4dfc59.return != null) {
                  _0x4dfc59.return();
                }
              } finally {
                if (_0x3fdac3) {
                  throw _0xe081e4;
                }
              }
              return [7];
            case 8:
              return [2];
          }
        });
      });
      return function _0x3b0f7f(_0x1e3e03, _0x58ae22) {
        return _0x9fc210.apply(this, arguments);
      };
    }();
    var _0x418617 = function () {
      var _0x59591e = _0x4ac896(function (_0x45e37a) {
        var _0x109d21;
        var _0x227de0;
        var _0x344ccc;
        var _0x1e9522;
        var _0x2d0d40;
        var _0x55b2b4;
        return _0x3091e6(this, function (_0x17368f) {
          switch (_0x17368f.label) {
            case 0:
              _0x109d21 = _0x2b98da.get(_0x45e37a);
              if (!_0x109d21) {
                return [3, 6];
              }
              _0x56800d = 0;
              _0xb262e(_0x109d21);
              _0x109d21.navagation = false;
              _0x227de0 = [];
              _0x2b98da.forEach(function () {
                var _0x5bf4de = _0x4ac896(function (_0x3422d4, _0x9cdb80) {
                  return _0x3091e6(this, function (_0xa3a6f4) {
                    if (_0x3422d4.lead == _0x45e37a) {
                      _0x227de0.push(_0x3422d4);
                      _0x4c6bb4.set(_0x3422d4.databaseID, []);
                    }
                    return [2];
                  });
                });
                return function (_0x347bcd, _0x474acd) {
                  return _0x5bf4de.apply(this, arguments);
                };
              }());
              _0x4c6bb4.set(_0x45e37a, []);
              return [4, _0xcd2fb(_0x227de0)];
            case 1:
              _0x17368f.sent();
              if (_0x109d21.parent) {
                _0x344ccc = _0x4c6bb4.get(_0x109d21.parent);
                if (_0x344ccc) {
                  if (!_0x344ccc.includes(_0x45e37a)) {
                    _0x344ccc.push(_0x45e37a);
                    _0x4c6bb4.set(_0x109d21.parent, _0x344ccc);
                  }
                }
              }
              _0x1e9522 = _0x1cd39c();
              if (!_0x1e9522) {
                return [3, 5];
              }
              return [4, _0x406e3b(_0x4c6bb4, _0x1e9522)];
            case 2:
              _0x2d0d40 = _0x17368f.sent();
              if (!_0x2d0d40) {
                return [3, 5];
              }
              return [4, _0x32f280(_0x2d0d40, _0x45e37a)];
            case 3:
              _0x55b2b4 = _0x17368f.sent();
              if (!_0x55b2b4) {
                return [3, 5];
              }
              return [4, _0x5ecf30(_0x55b2b4, 0)];
            case 4:
              _0x17368f.sent();
              _0x17368f.label = 5;
            case 5:
              _0x4aefda();
              _0x17368f.label = 6;
            case 6:
              return [2];
          }
        });
      });
      return function _0x1c6fd6(_0x3467e8) {
        return _0x59591e.apply(this, arguments);
      };
    }();
    ;
    var _0x39d7c8 = _0x5f5650(480);
    function _0xa8792e(_0x6e7236, _0x5b6056) {
      if (_0x5b6056 == null || _0x5b6056 > _0x6e7236.length) {
        _0x5b6056 = _0x6e7236.length;
      }
      for (var _0x3994b2 = 0, _0x4159f3 = new Array(_0x5b6056); _0x3994b2 < _0x5b6056; _0x3994b2++) {
        _0x4159f3[_0x3994b2] = _0x6e7236[_0x3994b2];
      }
      return _0x4159f3;
    }
    function _0x37c1ca(_0xbcd82d) {
      if (Array.isArray(_0xbcd82d)) {
        return _0xbcd82d;
      }
    }
    function _0x2ba60a(_0x21981f) {
      if (Array.isArray(_0x21981f)) {
        return _0xa8792e(_0x21981f);
      }
    }
    function _0x29e6f6(_0x310d1c, _0x121103, _0x3323bb, _0x175b47, _0x277c7f, _0x5df7dd, _0x44a9dd) {
      try {
        var _0x25196 = _0x310d1c[_0x5df7dd](_0x44a9dd);
        var _0x3d1884 = _0x25196.value;
      } catch (_0xad055e) {
        _0x3323bb(_0xad055e);
        return;
      }
      if (_0x25196.done) {
        _0x121103(_0x3d1884);
      } else {
        Promise.resolve(_0x3d1884).then(_0x175b47, _0x277c7f);
      }
    }
    function _0x70fb70(_0x67849e) {
      return function () {
        var _0x19a734 = this;
        var _0x1452b3 = arguments;
        return new Promise(function (_0x57119e, _0x339030) {
          var _0x12b3df = _0x67849e.apply(_0x19a734, _0x1452b3);
          function _0x2227e9(_0x2ec381) {
            _0x29e6f6(_0x12b3df, _0x57119e, _0x339030, _0x2227e9, _0x35193c, "next", _0x2ec381);
          }
          function _0x35193c(_0x164315) {
            _0x29e6f6(_0x12b3df, _0x57119e, _0x339030, _0x2227e9, _0x35193c, "throw", _0x164315);
          }
          _0x2227e9(undefined);
        });
      };
    }
    function _0x31554e(_0x25c854) {
      if (typeof Symbol !== "undefined" && _0x25c854[Symbol.iterator] != null || _0x25c854["@@iterator"] != null) {
        return Array.from(_0x25c854);
      }
    }
    function _0x18acf7(_0x145ad7, _0x2425fe) {
      var _0x1061c2 = _0x145ad7 == null ? null : typeof Symbol !== "undefined" && _0x145ad7[Symbol.iterator] || _0x145ad7["@@iterator"];
      if (_0x1061c2 == null) {
        return;
      }
      var _0x9f627e = [];
      var _0x2fcbf3 = true;
      var _0xd9152 = false;
      var _0x18ff14;
      var _0x47103c;
      try {
        for (_0x1061c2 = _0x1061c2.call(_0x145ad7); !(_0x2fcbf3 = (_0x18ff14 = _0x1061c2.next()).done); _0x2fcbf3 = true) {
          _0x9f627e.push(_0x18ff14.value);
          if (_0x2425fe && _0x9f627e.length === _0x2425fe) {
            break;
          }
        }
      } catch (_0x5e04f9) {
        _0xd9152 = true;
        _0x47103c = _0x5e04f9;
      } finally {
        try {
          if (!_0x2fcbf3 && _0x1061c2.return != null) {
            _0x1061c2.return();
          }
        } finally {
          if (_0xd9152) {
            throw _0x47103c;
          }
        }
      }
      return _0x9f627e;
    }
    function _0x4a3679() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x50b132() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x2420b2(_0x4ec40a, _0x2f2a75) {
      return _0x37c1ca(_0x4ec40a) || _0x18acf7(_0x4ec40a, _0x2f2a75) || _0x110f6f(_0x4ec40a, _0x2f2a75) || _0x4a3679();
    }
    function _0xdd3f0f(_0x4ba3b8) {
      return _0x2ba60a(_0x4ba3b8) || _0x31554e(_0x4ba3b8) || _0x110f6f(_0x4ba3b8) || _0x50b132();
    }
    function _0x110f6f(_0x27cad9, _0x4d4609) {
      if (!_0x27cad9) {
        return;
      }
      if (typeof _0x27cad9 === "string") {
        return _0xa8792e(_0x27cad9, _0x4d4609);
      }
      var _0x582ee6 = Object.prototype.toString.call(_0x27cad9).slice(8, -1);
      if (_0x582ee6 === "Object" && _0x27cad9.constructor) {
        _0x582ee6 = _0x27cad9.constructor.name;
      }
      if (_0x582ee6 === "Map" || _0x582ee6 === "Set") {
        return Array.from(_0x582ee6);
      }
      if (_0x582ee6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x582ee6)) {
        return _0xa8792e(_0x27cad9, _0x4d4609);
      }
    }
    function _0x2ca69b(_0xaed6f4, _0x37fd22) {
      var _0x5bd273;
      var _0x4d573e;
      var _0x3dfefe;
      var _0x49e5b6;
      var _0x1cfe8b = {
        label: 0,
        sent: function () {
          if (_0x3dfefe[0] & 1) {
            throw _0x3dfefe[1];
          }
          return _0x3dfefe[1];
        },
        trys: [],
        ops: []
      };
      _0x49e5b6 = {
        next: _0x5e15f7(0),
        throw: _0x5e15f7(1),
        return: _0x5e15f7(2)
      };
      if (typeof Symbol === "function") {
        _0x49e5b6[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x49e5b6;
      function _0x5e15f7(_0x1c7ae5) {
        return function (_0x148fdb) {
          return _0x108d5e([_0x1c7ae5, _0x148fdb]);
        };
      }
      function _0x108d5e(_0x4c658a) {
        if (_0x5bd273) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x1cfe8b) {
          try {
            _0x5bd273 = 1;
            if (_0x4d573e && (_0x3dfefe = _0x4c658a[0] & 2 ? _0x4d573e.return : _0x4c658a[0] ? _0x4d573e.throw || ((_0x3dfefe = _0x4d573e.return) && _0x3dfefe.call(_0x4d573e), 0) : _0x4d573e.next) && !(_0x3dfefe = _0x3dfefe.call(_0x4d573e, _0x4c658a[1])).done) {
              return _0x3dfefe;
            }
            _0x4d573e = 0;
            if (_0x3dfefe) {
              _0x4c658a = [_0x4c658a[0] & 2, _0x3dfefe.value];
            }
            switch (_0x4c658a[0]) {
              case 0:
              case 1:
                _0x3dfefe = _0x4c658a;
                break;
              case 4:
                _0x1cfe8b.label++;
                var _0x3d28e6 = {
                  value: _0x4c658a[1],
                  done: false
                };
                return _0x3d28e6;
              case 5:
                _0x1cfe8b.label++;
                _0x4d573e = _0x4c658a[1];
                _0x4c658a = [0];
                continue;
              case 7:
                _0x4c658a = _0x1cfe8b.ops.pop();
                _0x1cfe8b.trys.pop();
                continue;
              default:
                if (!(_0x3dfefe = _0x1cfe8b.trys, _0x3dfefe = _0x3dfefe.length > 0 && _0x3dfefe[_0x3dfefe.length - 1]) && (_0x4c658a[0] === 6 || _0x4c658a[0] === 2)) {
                  _0x1cfe8b = 0;
                  continue;
                }
                if (_0x4c658a[0] === 3 && (!_0x3dfefe || _0x4c658a[1] > _0x3dfefe[0] && _0x4c658a[1] < _0x3dfefe[3])) {
                  _0x1cfe8b.label = _0x4c658a[1];
                  break;
                }
                if (_0x4c658a[0] === 6 && _0x1cfe8b.label < _0x3dfefe[1]) {
                  _0x1cfe8b.label = _0x3dfefe[1];
                  _0x3dfefe = _0x4c658a;
                  break;
                }
                if (_0x3dfefe && _0x1cfe8b.label < _0x3dfefe[2]) {
                  _0x1cfe8b.label = _0x3dfefe[2];
                  _0x1cfe8b.ops.push(_0x4c658a);
                  break;
                }
                if (_0x3dfefe[2]) {
                  _0x1cfe8b.ops.pop();
                }
                _0x1cfe8b.trys.pop();
                continue;
            }
            _0x4c658a = _0x37fd22.call(_0xaed6f4, _0x1cfe8b);
          } catch (_0x1549ef) {
            _0x4c658a = [6, _0x1549ef];
            _0x4d573e = 0;
          } finally {
            _0x5bd273 = _0x3dfefe = 0;
          }
        }
        if (_0x4c658a[0] & 5) {
          throw _0x4c658a[1];
        }
        var _0x2579c5 = {
          value: _0x4c658a[0] ? _0x4c658a[1] : undefined,
          done: true
        };
        return _0x2579c5;
      }
    }
    function _0x4fee99(_0x508fc7) {
      var _0x40ee12 = typeof Symbol === "function" && Symbol.iterator;
      var _0x227f96 = _0x40ee12 && _0x508fc7[_0x40ee12];
      var _0x293172 = 0;
      if (_0x227f96) {
        return _0x227f96.call(_0x508fc7);
      }
      if (_0x508fc7 && typeof _0x508fc7.length === "number") {
        return {
          next: function () {
            if (_0x508fc7 && _0x293172 >= _0x508fc7.length) {
              _0x508fc7 = undefined;
            }
            var _0x241e66 = {
              value: _0x508fc7 && _0x508fc7[_0x293172++],
              done: !_0x508fc7
            };
            return _0x241e66;
          }
        };
      }
      throw new TypeError(_0x40ee12 ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    var _0x54716c = new _0x47b9b7();
    var _0x2b144a = 0;
    var _0x5cac10 = 0;
    var _0x11f75e = false;
    var _0x2b98da = new Map();
    var _0xe5aa0c = null && [];
    var _0x4c08c6 = new Map();
    var _0x1689c6 = new Map();
    var _0x5cfb53 = new Map();
    var _0x1ddac5 = new Map();
    var _0x181a57;
    var _0xff92f0 = [];
    var _0x3956fd = [];
    function _0x42488e() {
      if (_0x4c08c6.size >= 0 && _0x2b144a == 0) {
        _0x2b144a = setTick(_0x70fb70(function () {
          var _0x27bf2d;
          var _0x43b253;
          var _0x3a2643;
          var _0x285b0c;
          var _0x5a52ab;
          var _0xf7e1f5;
          var _0x2397e5;
          var _0x1b1491;
          var _0x5119c2;
          return _0x2ca69b(this, function (_0x55a86e) {
            switch (_0x55a86e.label) {
              case 0:
                _0x27bf2d = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false));
                _0x43b253 = true;
                _0x3a2643 = false;
                _0x285b0c = undefined;
                try {
                  for (_0x5a52ab = _0x4c08c6.entries()[Symbol.iterator](); !(_0x43b253 = (_0xf7e1f5 = _0x5a52ab.next()).done); _0x43b253 = true) {
                    _0x2397e5 = _0x2420b2(_0xf7e1f5.value, 2);
                    _0x1b1491 = _0x2397e5[0];
                    _0x5119c2 = _0x2397e5[1];
                    if (_0x5119c2.position.getDistance(_0x27bf2d) < 60) {
                      _0x5119c2.interiorCheckSelf();
                      if (!_0x5119c2.isApartment) {
                        _0x16bf29(_0x5119c2.databaseID);
                      }
                    }
                  }
                } catch (_0x376a5b) {
                  _0x3a2643 = true;
                  _0x285b0c = _0x376a5b;
                } finally {
                  try {
                    if (!_0x43b253 && _0x5a52ab.return != null) {
                      _0x5a52ab.return();
                    }
                  } finally {
                    if (_0x3a2643) {
                      throw _0x285b0c;
                    }
                  }
                }
                if (_0x4c08c6.size == 0) {
                  clearTick(_0x2b144a);
                  _0x2b144a = 0;
                }
                return [4, _0x4e43fe(2000)];
              case 1:
                _0x55a86e.sent();
                return [2];
            }
          });
        }));
      }
    }
    var _0x47a36e = false;
    var _0x294d9d = true;
    function _0x191711() {
      if (_0x5cfb53.size >= 0) {
        var _0x282572 = _0x15a991.Sync.config.GetMiscConfig("spawn.apartments.only") ?? true;
        var _0x4522d2;
        _0x5cac10 = setTick(_0x70fb70(function () {
          var _0x3080c4;
          var _0x3927d7;
          var _0x480232;
          var _0x13aec3;
          var _0x4c4576;
          var _0x28bb39;
          var _0x5cfb1c;
          var _0x5cbeec;
          var _0x2f6f30;
          var _0x46b7be;
          var _0x21fb5e;
          var _0x5a5fe2;
          var _0x2face1;
          return _0x2ca69b(this, function (_0x123147) {
            switch (_0x123147.label) {
              case 0:
                if (_0x2cdcce != 0) {
                  return [3, 13];
                }
                _0x3080c4 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false));
                _0x480232 = true;
                _0x13aec3 = false;
                _0x4c4576 = undefined;
                _0x123147.label = 1;
              case 1:
                _0x123147.trys.push([1, 10, 11, 12]);
                _0x28bb39 = _0x5cfb53.entries()[Symbol.iterator]();
                _0x123147.label = 2;
              case 2:
                if (!!(_0x480232 = (_0x5cfb1c = _0x28bb39.next()).done)) {
                  return [3, 9];
                }
                _0x5cbeec = _0x2420b2(_0x5cfb1c.value, 2);
                _0x2f6f30 = _0x5cbeec[0];
                _0x46b7be = _0x5cbeec[1];
                return [4, _0x29042f(_0x46b7be, _0x3080c4)];
              case 3:
                _0x21fb5e = _0x123147.sent();
                if (!_0x21fb5e) {
                  return [3, 6];
                }
                if (!!_0x46b7be.loadedApartmentChild) {
                  return [3, 5];
                }
                _0x39d7c8.log("rendering apartment ", _0x46b7be.model);
                return [4, _0x1cfc1b(_0x46b7be.databaseID)];
              case 4:
                _0x5a5fe2 = _0x123147.sent();
                if (_0x5a5fe2) {
                  emit("editor:renderedApartment", _0x46b7be.model);
                  _0x46b7be.loadedApartmentChild = true;
                }
                _0x123147.label = 5;
              case 5:
                _0x3927d7 = _0x46b7be;
                _0x4522d2 = _0x46b7be;
                return [3, 8];
              case 6:
                if (!_0x46b7be.loadedApartmentChild) {
                  return [3, 8];
                }
                _0x46b7be.loadedApartmentChild = false;
                _0x39d7c8.log("deRendering apartment ");
                return [4, _0x1d409c(_0x46b7be)];
              case 7:
                _0x123147.sent();
                _0x123147.label = 8;
              case 8:
                _0x480232 = true;
                return [3, 2];
              case 9:
                return [3, 12];
              case 10:
                _0x2face1 = _0x123147.sent();
                _0x13aec3 = true;
                _0x4c4576 = _0x2face1;
                return [3, 12];
              case 11:
                try {
                  if (!_0x480232 && _0x28bb39.return != null) {
                    _0x28bb39.return();
                  }
                } finally {
                  if (_0x13aec3) {
                    throw _0x4c4576;
                  }
                }
                return [7];
              case 12:
                if (_0x3927d7) {
                  _0x181a57 = _0x3927d7;
                } else {
                  _0x181a57 = undefined;
                }
                _0x123147.label = 13;
              case 13:
                if (_0x5cfb53.size == 0) {
                  clearTick(_0x5cac10);
                }
                return [4, _0x4e43fe(500)];
              case 14:
                _0x123147.sent();
                return [2];
            }
          });
        }));
        if (_0x282572 && _0x294d9d) {
          var _0x3b7105 = setTick(_0x70fb70(function () {
            var _0x3453c7;
            var _0x516a72;
            var _0x1cb08a;
            var _0x4ae67b;
            var _0x2b948e;
            return _0x2ca69b(this, function (_0x101756) {
              switch (_0x101756.label) {
                case 0:
                  if (_0x47a36e || !_0x294d9d) {
                    clearTick(_0x3b7105);
                    _0x47a36e = false;
                    return [2];
                  }
                  if (!_0x181a57) {
                    _0x3453c7 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false));
                    var _0x17459a = {
                      x: -650.25,
                      y: -1084.89,
                      z: 13.72
                    };
                    _0x516a72 = _0x4522d2 ? _0x4522d2.position : _0x17459a;
                    var _0x32db63 = {
                      x: -3806.75,
                      y: -1300,
                      z: 202
                    };
                    _0x1cb08a = _0x32db63;
                    _0x4ae67b = _0x3453c7.getDistance(new _0x45b4c7(_0x516a72.x, _0x516a72.y, _0x516a72.z));
                    _0x2b948e = _0x3453c7.getDistance(new _0x45b4c7(_0x1cb08a.x, _0x1cb08a.y, _0x1cb08a.z));
                    if (_0x4ae67b > 20 && _0x2b948e > 50) {
                      SetEntityCoords(PlayerPedId(), _0x516a72.x, _0x516a72.y, _0x516a72.z, false, false, false, false);
                    }
                  }
                  return [4, _0x1532be.wait(1000)];
                case 1:
                  _0x101756.sent();
                  return [2];
              }
            });
          }));
        }
      }
    }
    onNet("temp:setBypassed", function () {
      _0x47a36e = true;
      _0x294d9d = false;
    });
    on("np-base:clearStates", function () {
      _0x47a36e = true;
    });
    var _0x1cfc1b = function () {
      var _0x3df018 = _0x70fb70(function (_0x4e8b4b) {
        var _0xbf0b32;
        var _0x7627a9;
        var _0x252b76;
        var _0x481f98;
        return _0x2ca69b(this, function (_0x42bcad) {
          switch (_0x42bcad.label) {
            case 0:
              _0xbf0b32 = _0x4c6bb4.get(_0x4e8b4b);
              if (!_0xbf0b32) {
                return [3, 5];
              }
              _0x7627a9 = function (_0x2305f8) {
                var _0x335c78;
                var _0x22aa5d;
                return _0x2ca69b(this, function (_0x29ea8c) {
                  switch (_0x29ea8c.label) {
                    case 0:
                      _0x335c78 = _0xbf0b32.slice(_0x2305f8, _0x2305f8 + _0x252b76);
                      _0x22aa5d = setTick(_0x70fb70(function () {
                        var _0x56276f;
                        var _0x28cf34;
                        var _0x25cd48;
                        var _0x5c63f0;
                        var _0xea349d;
                        var _0x4633ca;
                        return _0x2ca69b(this, function (_0x168b00) {
                          switch (_0x168b00.label) {
                            case 0:
                              _0x56276f = [];
                              for (_0x28cf34 in _0x335c78) {
                                _0x56276f.push(_0x28cf34);
                              }
                              _0x25cd48 = 0;
                              _0x168b00.label = 1;
                            case 1:
                              if (_0x25cd48 >= _0x56276f.length) {
                                return [3, 5];
                              }
                              _0x5c63f0 = _0x56276f[_0x25cd48];
                              _0xea349d = _0x335c78[_0x5c63f0];
                              _0x4633ca = _0x2b98da.get(_0xea349d);
                              if (!_0x4633ca) {
                                return [3, 3];
                              }
                              return [4, _0x4633ca.attemptToRender()];
                            case 2:
                              _0x168b00.sent();
                              _0x1cfc1b(_0x4633ca.databaseID);
                              return [3, 4];
                            case 3:
                              _0x39d7c8.log("(EDITOR) ERROR: Missing Object For Render On Load Children of Lead Apartments. #CH " + _0xea349d);
                              _0x168b00.label = 4;
                            case 4:
                              _0x25cd48++;
                              return [3, 1];
                            case 5:
                              clearTick(_0x22aa5d);
                              return [2];
                          }
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0x29ea8c.sent();
                      return [2];
                  }
                });
              };
              _0x252b76 = 5;
              _0x481f98 = 0;
              _0x42bcad.label = 1;
            case 1:
              if (_0x481f98 >= _0xbf0b32.length) {
                return [3, 4];
              }
              return [5, _0x4fee99(_0x7627a9(_0x481f98))];
            case 2:
              _0x42bcad.sent();
              _0x42bcad.label = 3;
            case 3:
              _0x481f98 += _0x252b76;
              return [3, 1];
            case 4:
              return [2, true];
            case 5:
              return [2, false];
            case 6:
              return [2];
          }
        });
      });
      return function _0x38acdc(_0x5d8298) {
        return _0x3df018.apply(this, arguments);
      };
    }();
    var _0x1d409c = function () {
      var _0x536626 = _0x70fb70(function (_0x5d79f0) {
        var _0x4ab0dc;
        return _0x2ca69b(this, function (_0x2a9187) {
          _0x4ab0dc = _0x5d79f0.databaseID;
          if (_0x5d79f0.lead) {
            _0x4ab0dc = _0x5d79f0.lead;
          }
          _0x2b98da.forEach(function (_0x5ff169) {
            if (_0x5ff169 && _0x5ff169.lead == _0x4ab0dc && _0x5ff169.databaseID != _0x4ab0dc) {
              _0x54716c.add(_0x5ff169.databaseID, _0x70fb70(function () {
                return _0x2ca69b(this, function (_0x41e412) {
                  _0x5ff169.shouldRender(false);
                  return [2];
                });
              }));
            }
          });
          return [2];
        });
      });
      return function _0x3ece80(_0x4d28c7) {
        return _0x536626.apply(this, arguments);
      };
    }();
    var _0x23367b = function () {
      var _0x1bc466 = _0x70fb70(function (_0x4ddff5) {
        var _0x47032e;
        var _0x45aee8;
        var _0x44246f;
        var _0xc7939b;
        var _0x5a322e;
        var _0x431a65;
        var _0x1c1ec0;
        var _0x3992b7;
        var _0x4a88ec;
        var _0xa8b19c;
        return _0x2ca69b(this, function (_0x427140) {
          switch (_0x427140.label) {
            case 0:
              if (_0x3956fd.includes(_0x4ddff5)) {
                return [2];
              }
              _0x3956fd.push(_0x4ddff5);
              _0x47032e = true;
              _0x45aee8 = false;
              _0x44246f = undefined;
              _0x427140.label = 1;
            case 1:
              _0x427140.trys.push([1, 6, 7, 8]);
              _0xc7939b = _0x2b98da[Symbol.iterator]();
              _0x427140.label = 2;
            case 2:
              if (!!(_0x47032e = (_0x5a322e = _0xc7939b.next()).done)) {
                return [3, 5];
              }
              _0x431a65 = _0x2420b2(_0x5a322e.value, 2);
              _0x1c1ec0 = _0x431a65[0];
              _0x3992b7 = _0x431a65[1];
              if (!_0x3992b7 || _0x3992b7.lead != _0x4ddff5 || _0x3992b7.databaseID == _0x4ddff5) {
                return [3, 4];
              }
              _0x3992b7.removeObject();
              return [4, _0x4e43fe(100)];
            case 3:
              _0x427140.sent();
              _0x3992b7.shouldRender(true);
              _0x427140.label = 4;
            case 4:
              _0x47032e = true;
              return [3, 2];
            case 5:
              return [3, 8];
            case 6:
              _0x4a88ec = _0x427140.sent();
              _0x45aee8 = true;
              _0x44246f = _0x4a88ec;
              return [3, 8];
            case 7:
              try {
                if (!_0x47032e && _0xc7939b.return != null) {
                  _0xc7939b.return();
                }
              } finally {
                if (_0x45aee8) {
                  throw _0x44246f;
                }
              }
              return [7];
            case 8:
              _0xa8b19c = _0x3956fd.indexOf(_0x4ddff5, 0);
              if (_0xa8b19c > -1) {
                _0x3956fd.splice(_0xa8b19c, 1);
              }
              return [2];
          }
        });
      });
      return function _0x15a410(_0x4e73be) {
        return _0x1bc466.apply(this, arguments);
      };
    }();
    var _0x29042f = function () {
      var _0x2e2e7a = _0x70fb70(function (_0x4b7784, _0x3b8676) {
        var _0x4ce0d1;
        return _0x2ca69b(this, function (_0xa04886) {
          if (!_0x4b7784) {
            return [2, false];
          }
          _0x4ce0d1 = _0x4b7784.apartmentInformation.points;
          return [2, _0x44e419(_0x3b8676, _0x4ce0d1[0], _0x4ce0d1[1], _0x4ce0d1[2], _0x4ce0d1[3])];
        });
      });
      return function _0x4c2161(_0x403557, _0x1dce07) {
        return _0x2e2e7a.apply(this, arguments);
      };
    }();
    var _0x44e419 = function () {
      var _0x15c5db = _0x70fb70(function (_0x1fffb7, _0x1b8a0d, _0x105dd7, _0x5888f0, _0x21af3a, _0x211912) {
        var _0x2a2172;
        var _0x5405d6;
        var _0x4d3a22;
        var _0x209918;
        var _0x22c8d8;
        var _0x3669a5;
        var _0x5258ca;
        var _0x4515a7;
        var _0x1e73d3;
        var _0x4b812c;
        var _0x35d356;
        var _0x3796ab;
        var _0x19502a;
        var _0x1c0160;
        return _0x2ca69b(this, function (_0x1151fa) {
          _0x2a2172 = [_0x1b8a0d, _0x105dd7, _0x5888f0, _0x21af3a, _0x1b8a0d];
          _0x5405d6 = false;
          _0x4d3a22 = 0;
          _0x209918 = _0x2a2172.length - 1;
          for (; _0x4d3a22 < _0x2a2172.length; _0x209918 = _0x4d3a22++) {
            _0x22c8d8 = _0x2a2172[_0x4d3a22].x;
            _0x3669a5 = _0x2a2172[_0x4d3a22].y;
            _0x5258ca = _0x2a2172[_0x209918].x;
            _0x4515a7 = _0x2a2172[_0x209918].y;
            _0x1e73d3 = _0x3669a5 > _0x1fffb7.y !== _0x4515a7 > _0x1fffb7.y && _0x1fffb7.x < (_0x5258ca - _0x22c8d8) * (_0x1fffb7.y - _0x3669a5) / (_0x4515a7 - _0x3669a5) + _0x22c8d8;
            if (_0x1e73d3) {
              _0x5405d6 = !_0x5405d6;
            }
          }
          _0x4b812c = 99999;
          _0x35d356 = -99999;
          _0x3796ab = 0;
          _0x19502a = _0x2a2172.length - 1;
          for (; _0x3796ab < _0x2a2172.length; _0x19502a = _0x3796ab++) {
            _0x1c0160 = _0x2a2172[_0x3796ab].z;
            if (_0x1c0160 > _0x35d356) {
              _0x35d356 = _0x1c0160;
            }
            if (_0x1c0160 < _0x4b812c) {
              _0x4b812c = _0x1c0160;
            }
          }
          if (_0x211912) {
            _0x4b812c = _0x4b812c + _0x211912.min;
            _0x35d356 = _0x35d356 + _0x211912.max;
          }
          if (_0x1fffb7.z > _0x35d356 || _0x1fffb7.z < _0x4b812c) {
            _0x5405d6 = false;
          }
          return [2, _0x5405d6];
        });
      });
      return function _0x57e569(_0x360ca8, _0x5a1cfd, _0x5945d0, _0x266ecf, _0x208eed, _0x566f6c) {
        return _0x15c5db.apply(this, arguments);
      };
    }();
    var _0xad25b7 = function () {
      var _0x3db193 = _0x70fb70(function () {
        var _0x3a4531;
        var _0x4d070a;
        var _0x1a929c;
        var _0x5d0458;
        var _0x1eee1c;
        var _0x26d39c;
        var _0x2a833;
        var _0x269141;
        return _0x2ca69b(this, function (_0x21ceb1) {
          _0x3a4531 = true;
          _0x4d070a = false;
          _0x1a929c = undefined;
          try {
            for (_0x5d0458 = _0x1ddac5.entries()[Symbol.iterator](); !(_0x3a4531 = (_0x1eee1c = _0x5d0458.next()).done); _0x3a4531 = true) {
              _0x26d39c = _0x2420b2(_0x1eee1c.value, 2);
              _0x2a833 = _0x26d39c[0];
              _0x269141 = _0x26d39c[1];
              _0x269141.renderObject();
            }
          } catch (_0x15d539) {
            _0x4d070a = true;
            _0x1a929c = _0x15d539;
          } finally {
            try {
              if (!_0x3a4531 && _0x5d0458.return != null) {
                _0x5d0458.return();
              }
            } finally {
              if (_0x4d070a) {
                throw _0x1a929c;
              }
            }
          }
          return [2];
        });
      });
      return function _0x53dfb0() {
        return _0x3db193.apply(this, arguments);
      };
    }();
    var _0xa4a5e4 = function () {
      var _0x393ac9 = _0x70fb70(function () {
        var _0x5cb0a7;
        var _0x4c4708;
        var _0x100693;
        var _0x186039;
        var _0x4a6a9e;
        var _0x45c19e;
        var _0x5593f9;
        var _0x1936aa;
        return _0x2ca69b(this, function (_0x5df7d2) {
          _0x5cb0a7 = true;
          _0x4c4708 = false;
          _0x100693 = undefined;
          try {
            for (_0x186039 = _0x1ddac5.entries()[Symbol.iterator](); !(_0x5cb0a7 = (_0x4a6a9e = _0x186039.next()).done); _0x5cb0a7 = true) {
              _0x45c19e = _0x2420b2(_0x4a6a9e.value, 2);
              _0x5593f9 = _0x45c19e[0];
              _0x1936aa = _0x45c19e[1];
              _0x1936aa.removeObject();
            }
          } catch (_0x4b4738) {
            _0x4c4708 = true;
            _0x100693 = _0x4b4738;
          } finally {
            try {
              if (!_0x5cb0a7 && _0x186039.return != null) {
                _0x186039.return();
              }
            } finally {
              if (_0x4c4708) {
                throw _0x100693;
              }
            }
          }
          return [2];
        });
      });
      return function _0x5d5de4() {
        return _0x393ac9.apply(this, arguments);
      };
    }();
    var _0x14177c = function () {
      var _0x158287 = _0x70fb70(function (_0x97f845) {
        var _0x4e6714;
        return _0x2ca69b(this, function (_0x31abc1) {
          _0x4e6714 = _0x97f845.databaseID;
          if (_0x97f845.lead) {
            _0x4e6714 = _0x97f845.lead;
          }
          _0x22c01d(_0x97f845.databaseID);
          _0x2b98da.forEach(function (_0x3f9089) {
            if (_0x3f9089 && _0x3f9089.lead == _0x4e6714 && _0x3f9089.databaseID != _0x4e6714) {
              _0x54716c.add(_0x3f9089.databaseID, _0x70fb70(function () {
                return _0x2ca69b(this, function (_0x1db2f0) {
                  if (_0x1689c6.get(_0x3f9089.databaseID) != null) {
                    _0x1689c6.delete(_0x3f9089.databaseID);
                  }
                  _0x3f9089.shouldRender(false);
                  _0x3f9089.stopAll();
                  _0x2b98da.delete(_0x3f9089.databaseID);
                  return [2];
                });
              }));
            }
          });
          return [2];
        });
      });
      return function _0x416245(_0x435a58) {
        return _0x158287.apply(this, arguments);
      };
    }();
    var _0x1cae0f = function () {
      var _0x3bae9e = _0x70fb70(function (_0x2e084c, _0x438373) {
        var _0x56171b;
        var _0x119f7a;
        var _0xb9e374;
        var _0x23e614;
        var _0x5c223e;
        var _0x3d27a6;
        var _0x108aba;
        var _0x3c00a9;
        var _0x549d42;
        var _0x1d1f5a;
        var _0x1f4c67;
        var _0x2a66e8;
        var _0x33a552;
        var _0x25a584;
        var _0x1a0997;
        var _0x760165;
        var _0x2a9aa3;
        var _0x2cf771;
        var _0xcf336c;
        return _0x2ca69b(this, function (_0x16fe20) {
          switch (_0x16fe20.label) {
            case 0:
              _0x56171b = _0x2e084c.databaseID;
              if (_0x2e084c.lead) {
                _0x56171b = _0x2e084c.lead;
              }
              _0x119f7a = new Map();
              return [4, _0x46f2b0.get(_0x56171b)];
            case 1:
              _0xb9e374 = _0x16fe20.sent();
              if (!_0xb9e374) {
                return [2];
              }
              return [4, Promise.all(_0xb9e374.map(function () {
                var _0x11e88c = _0x70fb70(function (_0xf239b8) {
                  var _0x136437;
                  return _0x2ca69b(this, function (_0x31c904) {
                    _0x136437 = new _0x4a89e0(_0x45b4c7.fromArray(_0xf239b8.position), _0x21193b.fromArray(_0xf239b8.quat), _0xf239b8.model, _0xf239b8.parent, _0xf239b8.lead, _0xf239b8.databaseID, _0xf239b8.world, _0xf239b8.hasChild, true, _0xf239b8.groupIndex, _0xf239b8.isBuilt, _0xf239b8.connections);
                    _0x2b98da.set(_0xf239b8.databaseID, _0x136437);
                    return [2];
                  });
                });
                return function (_0x346b16) {
                  return _0x11e88c.apply(this, arguments);
                };
              }()))];
            case 2:
              _0x16fe20.sent();
              _0x23e614 = 0;
              _0x5c223e = 0;
              if (!_0x438373) {
                return [3, 6];
              }
              _0x3d27a6 = function (_0x914540) {
                var _0xc42d9e;
                var _0x1364fd;
                return _0x2ca69b(this, function (_0x634143) {
                  switch (_0x634143.label) {
                    case 0:
                      _0xc42d9e = _0xb9e374.slice(_0x914540, _0x914540 + _0x108aba);
                      _0x23e614++;
                      _0x1364fd = setTick(_0x70fb70(function () {
                        var _0x486f02;
                        var _0xdd6bc6;
                        return _0x2ca69b(this, function (_0x5984da) {
                          _0x486f02 = function (_0x33176f) {
                            var _0x1b8293 = _0xc42d9e[_0x33176f];
                            var _0x3491c8 = _0x2b98da.get(_0x1b8293.databaseID);
                            if (_0x3491c8) {
                              var _0xf5d96e = setTick(_0x70fb70(function () {
                                var _0x3d1755;
                                return _0x2ca69b(this, function (_0xc14109) {
                                  switch (_0xc14109.label) {
                                    case 0:
                                      if (_0x3491c8.parent == _0x56171b) {
                                        return [3, 3];
                                      }
                                      _0x3d1755 = 0;
                                      _0xc14109.label = 1;
                                    case 1:
                                      if (!!_0x119f7a.has(_0x3491c8.parent) || _0x3d1755 >= 50) {
                                        return [3, 3];
                                      }
                                      return [4, _0x4e43fe(50)];
                                    case 2:
                                      _0xc14109.sent();
                                      _0x3d1755++;
                                      return [3, 1];
                                    case 3:
                                      return [4, _0x3491c8.attemptToRender()];
                                    case 4:
                                      _0xc14109.sent();
                                      _0x119f7a.set(_0x3491c8.databaseID, true);
                                      clearTick(_0xf5d96e);
                                      return [2];
                                  }
                                });
                              }));
                            } else {
                              _0x39d7c8.log("(EDITOR) ERROR: Missing Object For Render On Load Children of Lead. #CH " + _0x1b8293.databaseID);
                            }
                          };
                          for (var _0x17c2f1 in _0xc42d9e) {
                            _0x486f02(_0x17c2f1);
                          }
                          _0x5c223e++;
                          clearTick(_0x1364fd);
                          return [2];
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0x634143.sent();
                      return [2];
                  }
                });
              };
              _0x108aba = 15;
              _0x3c00a9 = 0;
              _0x16fe20.label = 3;
            case 3:
              if (_0x3c00a9 >= _0xb9e374.length) {
                return [3, 6];
              }
              return [5, _0x4fee99(_0x3d27a6(_0x3c00a9))];
            case 4:
              _0x16fe20.sent();
              _0x16fe20.label = 5;
            case 5:
              _0x3c00a9 += _0x108aba;
              return [3, 3];
            case 6:
              _0x549d42 = true;
              _0x1d1f5a = false;
              _0x1f4c67 = undefined;
              _0x16fe20.label = 7;
            case 7:
              _0x16fe20.trys.push([7, 15, 16, 17]);
              _0x2a66e8 = _0xb9e374[Symbol.iterator]();
              _0x16fe20.label = 8;
            case 8:
              if (!!(_0x549d42 = (_0x33a552 = _0x2a66e8.next()).done)) {
                return [3, 14];
              }
              _0x25a584 = _0x33a552.value;
              _0x1a0997 = _0x2b98da.get(_0x25a584.databaseID);
              if (!_0x1a0997) {
                return [3, 12];
              }
              return [4, _0x46004c(_0x1a0997, 1)];
            case 9:
              _0x16fe20.sent();
              _0x1a0997.CheckIsChildOfNonLoad();
              if (!_0x1a0997.isApartmentChild || !_0x1a0997.lead) {
                return [3, 11];
              }
              if (_0x1a0997.model.includes("np_building_apt_")) {
                _0x1a0997.quat = new _0x21193b(0, 0, 0.0000081704041, 1.00001571073994);
              }
              return [4, _0xbc57e7(_0x1a0997)];
            case 10:
              _0x760165 = _0x16fe20.sent();
              if (_0x760165) {
                _0x1a0997.position = _0x760165[0];
                _0x1a0997.quat = _0x760165[1];
              }
              _0x16fe20.label = 11;
            case 11:
              return [3, 13];
            case 12:
              _0x39d7c8.log("(EDITOR) ERROR: Missing Object For Navigation. #CH " + _0x25a584.databaseID);
              _0x16fe20.label = 13;
            case 13:
              _0x549d42 = true;
              return [3, 8];
            case 14:
              return [3, 17];
            case 15:
              _0x2a9aa3 = _0x16fe20.sent();
              _0x1d1f5a = true;
              _0x1f4c67 = _0x2a9aa3;
              return [3, 17];
            case 16:
              try {
                if (!_0x549d42 && _0x2a66e8.return != null) {
                  _0x2a66e8.return();
                }
              } finally {
                if (_0x1d1f5a) {
                  throw _0x1f4c67;
                }
              }
              return [7];
            case 17:
              _0x2cf771 = _0x2b98da.get(_0x56171b);
              if (!_0x2cf771 || !_0x2cf771.isHousing) {
                return [3, 21];
              }
              _0x16fe20.label = 18;
            case 18:
              if (_0x23e614 >= _0x5c223e) {
                return [3, 20];
              }
              return [4, _0x4e43fe(900)];
            case 19:
              _0x16fe20.sent();
              return [3, 18];
            case 20:
              _0xcf336c = GetInteriorAtCoords(_0x2cf771.position.x, _0x2cf771.position.y, _0x2cf771.position.z);
              if (_0xcf336c != 0) {
                _0x19efa8(_0xcf336c);
              }
              emit("editor:renderedHousing", _0x2cf771.model);
              _0x16fe20.label = 21;
            case 21:
              return [4, _0x5065ac(_0x56171b)];
            case 22:
              _0x16fe20.sent();
              return [2];
          }
        });
      });
      return function _0x253853(_0x2ab7e0, _0x3465f7) {
        return _0x3bae9e.apply(this, arguments);
      };
    }();
    var _0x478f27 = function () {
      var _0x3d6360 = _0x70fb70(function (_0x20825d, _0x1aecb2) {
        var _0x600e91;
        var _0x1fc6f7;
        var _0x2fd111;
        var _0x1076ac;
        var _0x229b27;
        var _0x5a174c;
        var _0x26b158;
        var _0x5caa69;
        var _0x7fa68e;
        var _0x5afa5f;
        return _0x2ca69b(this, function (_0x318b91) {
          switch (_0x318b91.label) {
            case 0:
              if (_0x4c6bb4 == null || _0x2b98da == null) {
                return [2];
              }
              _0x600e91 = _0x4c6bb4.get(_0x20825d);
              _0x1fc6f7 = _0x2b98da.get(_0x20825d);
              _0x2fd111 = 0;
              if (_0x1fc6f7 == null) {
                return [2, _0x1aecb2];
              }
              if (_0x1aecb2 == null) {
                _0x1aecb2 = [];
              }
              if (_0x1aecb2[_0x2fd111] == null) {
                _0x1aecb2[_0x2fd111] = [];
              }
              for (var _0x443851 in _0x1aecb2) {
                _0x229b27 = _0x1aecb2[_0x443851];
                if (_0x229b27.length >= 15) {
                  _0x2fd111++;
                }
              }
              if (_0x1aecb2[_0x2fd111] == null) {
                _0x1aecb2[_0x2fd111] = [];
              }
              _0x1aecb2[_0x2fd111].push(_0x1fc6f7);
              _0x5a174c = [];
              for (_0x26b158 in _0x600e91) {
                _0x5a174c.push(_0x26b158);
              }
              _0x5caa69 = 0;
              _0x318b91.label = 1;
            case 1:
              if (_0x5caa69 >= _0x5a174c.length) {
                return [3, 4];
              }
              _0x7fa68e = _0x5a174c[_0x5caa69];
              _0x5afa5f = _0x600e91[_0x7fa68e];
              return [4, _0x478f27(_0x5afa5f, _0x1aecb2)];
            case 2:
              _0x1aecb2 = _0x318b91.sent();
              _0x318b91.label = 3;
            case 3:
              _0x5caa69++;
              return [3, 1];
            case 4:
              return [2, _0x1aecb2];
          }
        });
      });
      return function _0x1ba7d4(_0x549daf, _0x3aee0a) {
        return _0x3d6360.apply(this, arguments);
      };
    }();
    var _0x3bd5ca = function () {
      var _0x17beb9 = _0x70fb70(function (_0xef3bf8) {
        var _0xdb6ef;
        var _0x220c54;
        var _0x5cb89f;
        var _0x1bc5de;
        var _0xf01243;
        var _0x12c33e;
        return _0x2ca69b(this, function (_0x314839) {
          switch (_0x314839.label) {
            case 0:
              _0xdb6ef = function (_0x2b1a26) {
                var _0x42f28f;
                return _0x2ca69b(this, function (_0x243001) {
                  switch (_0x243001.label) {
                    case 0:
                      _0x42f28f = setTick(_0x70fb70(function () {
                        var _0x161edb;
                        var _0x161a34;
                        var _0x42da8a;
                        var _0x12c4a9;
                        var _0x5dfb8c;
                        var _0x58fb91;
                        return _0x2ca69b(this, function (_0x32b5a7) {
                          switch (_0x32b5a7.label) {
                            case 0:
                              _0x161edb = _0x220c54[_0x2b1a26];
                              _0x161a34 = [];
                              for (_0x42da8a in _0x161edb) {
                                _0x161a34.push(_0x42da8a);
                              }
                              _0x12c4a9 = 0;
                              _0x32b5a7.label = 1;
                            case 1:
                              if (_0x12c4a9 >= _0x161a34.length) {
                                return [3, 4];
                              }
                              _0x5dfb8c = _0x161a34[_0x12c4a9];
                              _0x58fb91 = _0x161edb[_0x5dfb8c];
                              if (!_0x58fb91) {
                                return [3, 3];
                              }
                              return [4, _0x58fb91.attemptToRender(true)];
                            case 2:
                              _0x32b5a7.sent();
                              _0x32b5a7.label = 3;
                            case 3:
                              _0x12c4a9++;
                              return [3, 1];
                            case 4:
                              clearTick(_0x42f28f);
                              return [2];
                          }
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0x243001.sent();
                      return [2];
                  }
                });
              };
              if (_0xef3bf8.includes("worldLinkIDNopixel")) {
                return [2];
              }
              return [4, _0x478f27(_0xef3bf8)];
            case 1:
              _0x220c54 = _0x314839.sent();
              _0x5cb89f = [];
              for (_0x1bc5de in _0x220c54) {
                _0x5cb89f.push(_0x1bc5de);
              }
              _0xf01243 = 0;
              _0x314839.label = 2;
            case 2:
              if (_0xf01243 >= _0x5cb89f.length) {
                return [3, 5];
              }
              _0x12c33e = _0x5cb89f[_0xf01243];
              return [5, _0x4fee99(_0xdb6ef(_0x12c33e))];
            case 3:
              _0x314839.sent();
              _0x314839.label = 4;
            case 4:
              _0xf01243++;
              return [3, 2];
            case 5:
              return [2];
          }
        });
      });
      return function _0x2f3b63(_0x4bae07) {
        return _0x17beb9.apply(this, arguments);
      };
    }();
    var _0x4058ab = function () {
      var _0x11c19e = _0x70fb70(function (_0x3e1f26) {
        var _0x431396;
        var _0x5819af;
        var _0x2ba83a;
        return _0x2ca69b(this, function (_0x583ed0) {
          switch (_0x583ed0.label) {
            case 0:
              _0x431396 = function (_0x5b8bc9) {
                var _0x14f6e7 = setTick(_0x70fb70(function () {
                  var _0x4dce71;
                  var _0x312ebd;
                  var _0x3db2de;
                  return _0x2ca69b(this, function (_0x2ce454) {
                    _0x4dce71 = _0x5819af[_0x5b8bc9];
                    for (var _0x32037b in _0x4dce71) {
                      _0x3db2de = _0x4dce71[_0x32037b];
                      if (_0x3db2de) {
                        _0x3db2de.shouldRender(false);
                      }
                    }
                    clearTick(_0x14f6e7);
                    return [2];
                  });
                }));
              };
              if (_0x3e1f26.includes("worldLinkIDNopixel")) {
                return [2];
              }
              return [4, _0x478f27(_0x3e1f26)];
            case 1:
              _0x5819af = _0x583ed0.sent();
              for (var _0x5a1fbc in _0x5819af) {
                _0x431396(_0x5a1fbc);
              }
              return [2];
          }
        });
      });
      return function _0x1f8e74(_0x49f87b) {
        return _0x11c19e.apply(this, arguments);
      };
    }();
    var _0x46f2b0 = _0x1532be.cacheableMap(function () {
      var _0x52c090 = _0x70fb70(function (_0x4ddfa6, _0x36b083) {
        var _0x41e18c;
        return _0x2ca69b(this, function (_0x1bc764) {
          switch (_0x1bc764.label) {
            case 0:
              return [4, NPX.Procedures.execute("np-editor:ObjectsFromLead", _0x36b083)];
            case 1:
              _0x41e18c = _0x1bc764.sent();
              return [2, [true, _0x41e18c]];
          }
        });
      });
      return function (_0x1ce308, _0x3d5485) {
        return _0x52c090.apply(this, arguments);
      };
    }(), {
      timeToLive: 900000
    });
    var _0x511a6d = function () {
      var _0x3a08b4 = _0x70fb70(function (_0x281b61, _0x141099, _0x5e6027) {
        var _0x7540bc;
        var _0x4cbd92;
        return _0x2ca69b(this, function (_0x1bd085) {
          switch (_0x1bd085.label) {
            case 0:
              _0x4cbd92 = {};
              return [4, _0x44c27f()];
            case 1:
              _0x4cbd92.connectionID = _0x1bd085.sent();
              _0x4cbd92.connectionType = _0x281b61;
              _0x4cbd92.objectID = _0x5e6027;
              _0x4cbd92.data = _0x141099;
              _0x7540bc = _0x4cbd92;
              return [2, _0x7540bc];
          }
        });
      });
      return function _0x94fd90(_0x360ecb, _0x36a44a, _0x5d27c2) {
        return _0x3a08b4.apply(this, arguments);
      };
    }();
    function _0xcc4db3(_0xec3f47) {
      var _0x1fabf4 = _0x2b98da.get(_0xec3f47);
      if (_0x1fabf4) {
        return _0x1fabf4.model;
      }
      return null;
    }
    function _0x4cd1fb(_0x54adfa) {
      var _0x4cb5d4 = false;
      _0xff92f0.forEach(function (_0x20cbc2) {
        if (_0x54adfa == _0x20cbc2.databaseID) {
          _0x4cb5d4 = true;
        }
      });
      return _0x4cb5d4;
    }
    function _0x1cd39c() {
      var _0x482375;
      _0xff92f0.forEach(function (_0x2b8d9b) {
        if (_0x2b8d9b.model.includes("DUMMY:ROOT")) {
          _0x482375 = _0x2b8d9b.databaseID;
        }
      });
      return _0x482375;
    }
    function _0xa1c274(_0x5e6f17) {
      _0xff92f0 = _0x5e6f17;
    }
    var _0x4b66bf = function () {
      var _0x1a41c0 = _0x70fb70(function () {
        var _0x3c933b;
        var _0x335a6a;
        var _0x3cece7;
        var _0x53c576;
        var _0x28da84;
        var _0x4648b4;
        var _0x54aae1;
        var _0x2d53c7;
        var _0x103960;
        var _0x210e52;
        var _0xac79e8;
        var _0x42c748;
        var _0x5dbae2;
        return _0x2ca69b(this, function (_0x430472) {
          switch (_0x430472.label) {
            case 0:
              _0x3c933b = function (_0x48ca6e) {
                var _0x5ee503;
                var _0x324a0e;
                return _0x2ca69b(this, function (_0xf4e02e) {
                  switch (_0xf4e02e.label) {
                    case 0:
                      _0x5ee503 = _0x335a6a.slice(_0x48ca6e, _0x48ca6e + _0x42c748);
                      _0x324a0e = setTick(_0x70fb70(function () {
                        var _0x3a7de9;
                        var _0x4e8c7b;
                        return _0x2ca69b(this, function (_0x5e29f3) {
                          _0x3a7de9 = function (_0x3a1d82) {
                            var _0x42da91 = _0x5ee503[_0x3a1d82];
                            var _0x57bc26 = _0x2b98da.get(_0x42da91.databaseID);
                            if (_0x57bc26) {
                              var _0x4b92fd = setTick(_0x70fb70(function () {
                                return _0x2ca69b(this, function (_0x2d61a9) {
                                  switch (_0x2d61a9.label) {
                                    case 0:
                                      return [4, _0x57bc26.renderObject()];
                                    case 1:
                                      _0x2d61a9.sent();
                                      clearTick(_0x4b92fd);
                                      return [2];
                                  }
                                });
                              }));
                            }
                          };
                          for (var _0x2c71dc in _0x5ee503) {
                            _0x3a7de9(_0x2c71dc);
                          }
                          clearTick(_0x324a0e);
                          return [2];
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0xf4e02e.sent();
                      return [2];
                  }
                });
              };
              if (_0x11f75e) {
                return [2];
              }
              _0x11f75e = true;
              _0x335a6a = [];
              _0x3cece7 = true;
              _0x53c576 = false;
              _0x28da84 = undefined;
              try {
                for (_0x4648b4 = _0x2b98da.entries()[Symbol.iterator](); !(_0x3cece7 = (_0x54aae1 = _0x4648b4.next()).done); _0x3cece7 = true) {
                  _0x2d53c7 = _0x2420b2(_0x54aae1.value, 2);
                  _0x103960 = _0x2d53c7[0];
                  _0x210e52 = _0x2d53c7[1];
                  if (!_0x210e52.isBuilt) {
                    _0xac79e8 = _0x2b98da.get(_0x210e52.databaseID);
                    if (_0xac79e8) {
                      _0x335a6a.push(_0xac79e8);
                    }
                  }
                }
              } catch (_0x13efc0) {
                _0x53c576 = true;
                _0x28da84 = _0x13efc0;
              } finally {
                try {
                  if (!_0x3cece7 && _0x4648b4.return != null) {
                    _0x4648b4.return();
                  }
                } finally {
                  if (_0x53c576) {
                    throw _0x28da84;
                  }
                }
              }
              _0x42c748 = 15;
              _0x5dbae2 = 0;
              _0x430472.label = 1;
            case 1:
              if (_0x5dbae2 >= _0x335a6a.length) {
                return [3, 4];
              }
              return [5, _0x4fee99(_0x3c933b(_0x5dbae2))];
            case 2:
              _0x430472.sent();
              _0x430472.label = 3;
            case 3:
              _0x5dbae2 += _0x42c748;
              return [3, 1];
            case 4:
              return [2];
          }
        });
      });
      return function _0x4fcb94() {
        return _0x1a41c0.apply(this, arguments);
      };
    }();
    var _0xb57c08 = function () {
      var _0x52ad90 = _0x70fb70(function () {
        var _0x362c5e;
        var _0x3be163;
        var _0x334c87;
        var _0x3853bf;
        var _0x305cda;
        var _0x34a274;
        var _0x1a46de;
        var _0x5a330d;
        var _0x51dbed;
        var _0x3dab6e;
        var _0x43e8ea;
        var _0x280773;
        var _0xce7e99;
        return _0x2ca69b(this, function (_0x46919d) {
          switch (_0x46919d.label) {
            case 0:
              _0x362c5e = function (_0x4e124f) {
                var _0x2aa7f9;
                var _0x469c7e;
                return _0x2ca69b(this, function (_0x3fca25) {
                  switch (_0x3fca25.label) {
                    case 0:
                      _0x2aa7f9 = _0x3be163.slice(_0x4e124f, _0x4e124f + _0x280773);
                      _0x469c7e = setTick(_0x70fb70(function () {
                        var _0x14bb89;
                        var _0x393101;
                        return _0x2ca69b(this, function (_0x59cf30) {
                          _0x14bb89 = function (_0x3f6168) {
                            var _0x45da92 = _0x2aa7f9[_0x3f6168];
                            var _0x36d2b7 = _0x2b98da.get(_0x45da92.databaseID);
                            if (_0x36d2b7) {
                              var _0x152e33 = setTick(_0x70fb70(function () {
                                return _0x2ca69b(this, function (_0x411099) {
                                  switch (_0x411099.label) {
                                    case 0:
                                      return [4, _0x36d2b7.removeObject()];
                                    case 1:
                                      _0x411099.sent();
                                      clearTick(_0x152e33);
                                      return [2];
                                  }
                                });
                              }));
                            }
                          };
                          for (var _0x268258 in _0x2aa7f9) {
                            _0x14bb89(_0x268258);
                          }
                          clearTick(_0x469c7e);
                          return [2];
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0x3fca25.sent();
                      return [2];
                  }
                });
              };
              if (!_0x11f75e) {
                return [2];
              }
              _0x11f75e = false;
              _0x3be163 = [];
              _0x334c87 = true;
              _0x3853bf = false;
              _0x305cda = undefined;
              try {
                for (_0x34a274 = _0x2b98da.entries()[Symbol.iterator](); !(_0x334c87 = (_0x1a46de = _0x34a274.next()).done); _0x334c87 = true) {
                  _0x5a330d = _0x2420b2(_0x1a46de.value, 2);
                  _0x51dbed = _0x5a330d[0];
                  _0x3dab6e = _0x5a330d[1];
                  if (!_0x3dab6e.isBuilt) {
                    _0x43e8ea = _0x2b98da.get(_0x3dab6e.databaseID);
                    if (_0x43e8ea) {
                      _0x3be163.push(_0x43e8ea);
                    }
                  }
                }
              } catch (_0x45c265) {
                _0x3853bf = true;
                _0x305cda = _0x45c265;
              } finally {
                try {
                  if (!_0x334c87 && _0x34a274.return != null) {
                    _0x34a274.return();
                  }
                } finally {
                  if (_0x3853bf) {
                    throw _0x305cda;
                  }
                }
              }
              _0x280773 = 15;
              _0xce7e99 = 0;
              _0x46919d.label = 1;
            case 1:
              if (_0xce7e99 >= _0x3be163.length) {
                return [3, 4];
              }
              return [5, _0x4fee99(_0x362c5e(_0xce7e99))];
            case 2:
              _0x46919d.sent();
              _0x46919d.label = 3;
            case 3:
              _0xce7e99 += _0x280773;
              return [3, 1];
            case 4:
              return [2];
          }
        });
      });
      return function _0x4adb2f() {
        return _0x52ad90.apply(this, arguments);
      };
    }();
    function _0x33d6c2(_0x4a9f33) {
      var _0x455eab = _0xdd3f0f(_0x2b98da.values()).find(function (_0x28648f) {
        return _0x28648f.entityID == _0x4a9f33;
      });
      return _0x455eab;
    }
    exports("GetObjectFromEntity", _0x33d6c2);
    ;
    function _0x17e9d2(_0x17e653, _0x337ead) {
      if (!(_0x17e653 instanceof _0x337ead)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x1a6f85(_0x20361d, _0x5b46d7) {
      for (var _0x5e5147 = 0; _0x5e5147 < _0x5b46d7.length; _0x5e5147++) {
        var _0x4ebda8 = _0x5b46d7[_0x5e5147];
        _0x4ebda8.enumerable = _0x4ebda8.enumerable || false;
        _0x4ebda8.configurable = true;
        if ("value" in _0x4ebda8) {
          _0x4ebda8.writable = true;
        }
        Object.defineProperty(_0x20361d, _0x4ebda8.key, _0x4ebda8);
      }
    }
    function _0x260a9f(_0x4d07fb, _0x340090, _0xa218a9) {
      if (_0x340090) {
        _0x1a6f85(_0x4d07fb.prototype, _0x340090);
      }
      if (_0xa218a9) {
        _0x1a6f85(_0x4d07fb, _0xa218a9);
      }
      return _0x4d07fb;
    }
    function _0x3d1efa(_0xf94869, _0x31e1a6, _0x51fabb) {
      if (_0x31e1a6 in _0xf94869) {
        var _0x41f5e6 = {
          value: _0x51fabb,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0xf94869, _0x31e1a6, _0x41f5e6);
      } else {
        _0xf94869[_0x31e1a6] = _0x51fabb;
      }
      return _0xf94869;
    }
    var _0x252f80 = function () {
      'use strict';

      function _0x22abca(_0x447ade, _0x48aa8d, _0x580c7c) {
        _0x17e9d2(this, _0x22abca);
        _0x3d1efa(this, "connectionType", undefined);
        _0x3d1efa(this, "connectionID", undefined);
        _0x3d1efa(this, "parentObjectID", undefined);
        _0x3d1efa(this, "running", false);
        this.connectionType = _0x447ade;
        this.connectionID = _0x48aa8d;
        this.parentObjectID = _0x580c7c.databaseID;
      }
      var _0x12be8b = {
        key: "updateLocalData",
        value: function _0x21ac3c(_0x23f012) {}
      };
      var _0x3c588c = {
        key: "start",
        value: function _0x31e430() {}
      };
      var _0x5017c8 = {
        key: "stop",
        value: function _0x4acea0() {}
      };
      _0x260a9f(_0x22abca, [_0x12be8b, {
        key: "getLocalData",
        value: function _0x366682() {
          return;
        }
      }, {
        key: "dataToJson",
        value: function _0x5427af(_0x46d9c3) {
          return JSON.stringify(_0x46d9c3);
        }
      }, _0x3c588c, _0x5017c8]);
      return _0x22abca;
    }();
    ;
    function _0x31f0b8(_0x27999a) {
      if (_0x27999a === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x27999a;
    }
    function _0x47fd4b(_0x3c15e1, _0x86749a) {
      if (!(_0x3c15e1 instanceof _0x86749a)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x246bec(_0x4cd3d7, _0x5ebfe5) {
      for (var _0x35ef4b = 0; _0x35ef4b < _0x5ebfe5.length; _0x35ef4b++) {
        var _0xeb1687 = _0x5ebfe5[_0x35ef4b];
        _0xeb1687.enumerable = _0xeb1687.enumerable || false;
        _0xeb1687.configurable = true;
        if ("value" in _0xeb1687) {
          _0xeb1687.writable = true;
        }
        Object.defineProperty(_0x4cd3d7, _0xeb1687.key, _0xeb1687);
      }
    }
    function _0x67bddc(_0x498344, _0x353b78, _0x2c56c6) {
      if (_0x353b78) {
        _0x246bec(_0x498344.prototype, _0x353b78);
      }
      if (_0x2c56c6) {
        _0x246bec(_0x498344, _0x2c56c6);
      }
      return _0x498344;
    }
    function _0x8bf2ce(_0x4df91e, _0x28761f, _0x45ecce) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _0x8bf2ce = Reflect.get;
      } else {
        _0x8bf2ce = function _0x31236d(_0x4bf59d, _0x3eb56d, _0x445bab) {
          var _0x1420cf = _0x1c04a1(_0x4bf59d, _0x3eb56d);
          if (!_0x1420cf) {
            return;
          }
          var _0x13f16a = Object.getOwnPropertyDescriptor(_0x1420cf, _0x3eb56d);
          if (_0x13f16a.get) {
            return _0x13f16a.get.call(_0x445bab || _0x4bf59d);
          }
          return _0x13f16a.value;
        };
      }
      return _0x8bf2ce(_0x4df91e, _0x28761f, _0x45ecce || _0x4df91e);
    }
    function _0x22226b(_0x4076cc) {
      _0x22226b = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x88c8cf(_0x264193) {
        return _0x264193.__proto__ || Object.getPrototypeOf(_0x264193);
      };
      return _0x22226b(_0x4076cc);
    }
    function _0x1bd49a(_0x5a68fb, _0x44e548) {
      if (typeof _0x44e548 !== "function" && _0x44e548 !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x5a68fb.prototype = Object.create(_0x44e548 && _0x44e548.prototype, {
        constructor: {
          value: _0x5a68fb,
          writable: true,
          configurable: true
        }
      });
      if (_0x44e548) {
        _0x1e5a3e(_0x5a68fb, _0x44e548);
      }
    }
    function _0x4e0b83(_0x2ccdd6, _0x11a864) {
      if (_0x11a864 && (_0x312c46(_0x11a864) === "object" || typeof _0x11a864 === "function")) {
        return _0x11a864;
      }
      return _0x31f0b8(_0x2ccdd6);
    }
    function _0x1e5a3e(_0x2a8d5e, _0x1a7d0f) {
      _0x1e5a3e = Object.setPrototypeOf || function _0x322783(_0x29ef8f, _0x49dab4) {
        _0x29ef8f.__proto__ = _0x49dab4;
        return _0x29ef8f;
      };
      return _0x1e5a3e(_0x2a8d5e, _0x1a7d0f);
    }
    function _0x1c04a1(_0x58c322, _0x5eacb4) {
      while (!Object.prototype.hasOwnProperty.call(_0x58c322, _0x5eacb4)) {
        _0x58c322 = _0x22226b(_0x58c322);
        if (_0x58c322 === null) {
          break;
        }
      }
      return _0x58c322;
    }
    function _0x312c46(_0x500073) {
      '@swc/helpers - typeof';

      if (_0x500073 && typeof Symbol !== "undefined" && _0x500073.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x500073;
      }
    }
    function _0x1cc1fe() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x5c453e) {
        return false;
      }
    }
    function _0x469a68(_0x5bd0a4) {
      var _0x155eb9 = _0x1cc1fe();
      return function _0x1708d4() {
        var _0x1dd882 = _0x22226b(_0x5bd0a4);
        var _0x40ff13;
        if (_0x155eb9) {
          var _0x37c8d7 = _0x22226b(this).constructor;
          _0x40ff13 = Reflect.construct(_0x1dd882, arguments, _0x37c8d7);
        } else {
          _0x40ff13 = _0x1dd882.apply(this, arguments);
        }
        return _0x4e0b83(this, _0x40ff13);
      };
    }
    var _0xcaa6e0 = function (_0x1e18ad) {
      'use strict';

      _0x1bd49a(_0xfa266a, _0x1e18ad);
      var _0x203ec3 = _0x469a68(_0xfa266a);
      function _0xfa266a(_0x3d2f88, _0x26833d) {
        _0x47fd4b(this, _0xfa266a);
        return _0x203ec3.call(this, _0x3d2f88.connectionType, _0x3d2f88.connectionID, _0x26833d);
      }
      _0x67bddc(_0xfa266a, [{
        key: "dataToJson",
        value: function _0x62781d() {
          _0x8bf2ce(_0x22226b(_0xfa266a.prototype), "dataToJson", this).call(this, null);
          return "";
        }
      }, {
        key: "stop",
        value: function _0x304388() {
          _0x8bf2ce(_0x22226b(_0xfa266a.prototype), "stop", this).call(this);
        }
      }]);
      return _0xfa266a;
    }(_0x252f80);
    ;
    function _0x3d2d8f(_0x233bfd, _0x1eb65a) {
      if (_0x1eb65a == null || _0x1eb65a > _0x233bfd.length) {
        _0x1eb65a = _0x233bfd.length;
      }
      for (var _0x50f067 = 0, _0x2b6c3b = new Array(_0x1eb65a); _0x50f067 < _0x1eb65a; _0x50f067++) {
        _0x2b6c3b[_0x50f067] = _0x233bfd[_0x50f067];
      }
      return _0x2b6c3b;
    }
    function _0x3ad145(_0x322a5b) {
      if (Array.isArray(_0x322a5b)) {
        return _0x3d2d8f(_0x322a5b);
      }
    }
    function _0x34fe26(_0x493399) {
      if (_0x493399 === undefined) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return _0x493399;
    }
    function _0x1b6f7d(_0x492035, _0x40deb6) {
      if (!(_0x492035 instanceof _0x40deb6)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x34e9ac(_0x32c275, _0x56e58c) {
      for (var _0x51b6dc = 0; _0x51b6dc < _0x56e58c.length; _0x51b6dc++) {
        var _0x506ce6 = _0x56e58c[_0x51b6dc];
        _0x506ce6.enumerable = _0x506ce6.enumerable || false;
        _0x506ce6.configurable = true;
        if ("value" in _0x506ce6) {
          _0x506ce6.writable = true;
        }
        Object.defineProperty(_0x32c275, _0x506ce6.key, _0x506ce6);
      }
    }
    function _0x5cdd99(_0x3ecb65, _0x42174c, _0x417403) {
      if (_0x42174c) {
        _0x34e9ac(_0x3ecb65.prototype, _0x42174c);
      }
      if (_0x417403) {
        _0x34e9ac(_0x3ecb65, _0x417403);
      }
      return _0x3ecb65;
    }
    function _0x184246(_0x1ff12a, _0x300cf9, _0x18e314) {
      if (_0x300cf9 in _0x1ff12a) {
        var _0x1ecefe = {
          value: _0x18e314,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x1ff12a, _0x300cf9, _0x1ecefe);
      } else {
        _0x1ff12a[_0x300cf9] = _0x18e314;
      }
      return _0x1ff12a;
    }
    function _0x52f632(_0x8ab26f, _0x16d9e6, _0x2af3a1) {
      if (typeof Reflect !== "undefined" && Reflect.get) {
        _0x52f632 = Reflect.get;
      } else {
        _0x52f632 = function _0x3ac90a(_0x47d51f, _0x1ea995, _0xf5f755) {
          var _0x60121f = _0x2a692e(_0x47d51f, _0x1ea995);
          if (!_0x60121f) {
            return;
          }
          var _0x1a71da = Object.getOwnPropertyDescriptor(_0x60121f, _0x1ea995);
          if (_0x1a71da.get) {
            return _0x1a71da.get.call(_0xf5f755 || _0x47d51f);
          }
          return _0x1a71da.value;
        };
      }
      return _0x52f632(_0x8ab26f, _0x16d9e6, _0x2af3a1 || _0x8ab26f);
    }
    function _0x4c9485(_0x345081) {
      _0x4c9485 = Object.setPrototypeOf ? Object.getPrototypeOf : function _0x3909a0(_0x120546) {
        return _0x120546.__proto__ || Object.getPrototypeOf(_0x120546);
      };
      return _0x4c9485(_0x345081);
    }
    function _0x5c24ad(_0x5c68a7, _0x4107cf) {
      if (typeof _0x4107cf !== "function" && _0x4107cf !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      _0x5c68a7.prototype = Object.create(_0x4107cf && _0x4107cf.prototype, {
        constructor: {
          value: _0x5c68a7,
          writable: true,
          configurable: true
        }
      });
      if (_0x4107cf) {
        _0x92d720(_0x5c68a7, _0x4107cf);
      }
    }
    function _0x523181(_0x3eb841) {
      if (typeof Symbol !== "undefined" && _0x3eb841[Symbol.iterator] != null || _0x3eb841["@@iterator"] != null) {
        return Array.from(_0x3eb841);
      }
    }
    function _0x9f7c3a() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x452272(_0x3fef96, _0x6ec018) {
      if (_0x6ec018 && (_0x39b5ef(_0x6ec018) === "object" || typeof _0x6ec018 === "function")) {
        return _0x6ec018;
      }
      return _0x34fe26(_0x3fef96);
    }
    function _0x92d720(_0x3e5cdc, _0x956498) {
      _0x92d720 = Object.setPrototypeOf || function _0x485d1(_0x2dca7b, _0xab4f0c) {
        _0x2dca7b.__proto__ = _0xab4f0c;
        return _0x2dca7b;
      };
      return _0x92d720(_0x3e5cdc, _0x956498);
    }
    function _0x2a692e(_0x75b28e, _0x4df422) {
      while (!Object.prototype.hasOwnProperty.call(_0x75b28e, _0x4df422)) {
        _0x75b28e = _0x4c9485(_0x75b28e);
        if (_0x75b28e === null) {
          break;
        }
      }
      return _0x75b28e;
    }
    function _0x176ee3(_0xc88a63) {
      return _0x3ad145(_0xc88a63) || _0x523181(_0xc88a63) || _0x3799bb(_0xc88a63) || _0x9f7c3a();
    }
    function _0x39b5ef(_0x518062) {
      '@swc/helpers - typeof';

      if (_0x518062 && typeof Symbol !== "undefined" && _0x518062.constructor === Symbol) {
        return "symbol";
      } else {
        return typeof _0x518062;
      }
    }
    function _0x3799bb(_0x495c44, _0x13986d) {
      if (!_0x495c44) {
        return;
      }
      if (typeof _0x495c44 === "string") {
        return _0x3d2d8f(_0x495c44, _0x13986d);
      }
      var _0x5017c6 = Object.prototype.toString.call(_0x495c44).slice(8, -1);
      if (_0x5017c6 === "Object" && _0x495c44.constructor) {
        _0x5017c6 = _0x495c44.constructor.name;
      }
      if (_0x5017c6 === "Map" || _0x5017c6 === "Set") {
        return Array.from(_0x5017c6);
      }
      if (_0x5017c6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x5017c6)) {
        return _0x3d2d8f(_0x495c44, _0x13986d);
      }
    }
    function _0x1fd878() {
      if (typeof Reflect === "undefined" || !Reflect.construct) {
        return false;
      }
      if (Reflect.construct.sham) {
        return false;
      }
      if (typeof Proxy === "function") {
        return true;
      }
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
        return true;
      } catch (_0x9819a) {
        return false;
      }
    }
    function _0x22a17d(_0x593347) {
      var _0x31f5f8 = _0x1fd878();
      return function _0x5c5ec3() {
        var _0x98edb0 = _0x4c9485(_0x593347);
        var _0x400b0b;
        if (_0x31f5f8) {
          var _0x49f0a5 = _0x4c9485(this).constructor;
          _0x400b0b = Reflect.construct(_0x98edb0, arguments, _0x49f0a5);
        } else {
          _0x400b0b = _0x98edb0.apply(this, arguments);
        }
        return _0x452272(this, _0x400b0b);
      };
    }
    var _0x18729a = function (_0x3d318d) {
      'use strict';

      _0x5c24ad(_0x4739dd, _0x3d318d);
      var _0x2f7c2a = _0x22a17d(_0x4739dd);
      function _0x4739dd(_0x117b6b, _0x466a15) {
        _0x1b6f7d(this, _0x4739dd);
        var _0x103eab;
        _0x103eab = _0x2f7c2a.call(this, _0x117b6b.connectionType, _0x117b6b.connectionID, _0x466a15);
        _0x184246(_0x34fe26(_0x103eab), "points", []);
        _0x184246(_0x34fe26(_0x103eab), "links", []);
        _0x184246(_0x34fe26(_0x103eab), "leadObjectName", null);
        _0x184246(_0x34fe26(_0x103eab), "leadObject", null);
        _0x184246(_0x34fe26(_0x103eab), "minZ", 0);
        _0x184246(_0x34fe26(_0x103eab), "maxZ", 0);
        if (_0x117b6b.data) {
          var _0x416802 = JSON.parse(_0x117b6b.data);
          if (_0x416802.points) {
            _0x103eab.generatePointsFromJson(_0x416802.points);
            _0x103eab.minZ = _0x416802.minZ;
            _0x103eab.maxZ = _0x416802.maxZ;
            var _0x43742c = _0x466a15.lead;
            if (_0x43742c) {
              _0x103eab.leadObject = _0x43742c;
            }
            if (_0x103eab.links != null) {
              _0x103eab.links = _0x416802.links;
            }
            if (_0x466a15.lead != null && _0x466a15.lead.length != 0) {
              _0x103eab.leadObjectName = _0xcc4db3(_0x466a15.lead);
            }
          }
        }
        return _0x103eab;
      }
      _0x5cdd99(_0x4739dd, [{
        key: "updateLocalData",
        value: function _0x4a2695(_0x518436, _0x310e7d) {
          _0x52f632(_0x4c9485(_0x4739dd.prototype), "updateLocalData", this).call(this, _0x518436);
          this.points = _0x518436;
          if (_0x310e7d) {
            this.links = _0x310e7d;
          }
        }
      }, {
        key: "assignLinks",
        value: function _0x8f133(_0x4b18c5) {
          var _0x3a7b83;
          if (this.links && this.links.length >= 1) {
            for (var _0x15471e = 0; _0x15471e < this.links.length; _0x15471e++) {
              var _0x5627d3 = this.links[_0x15471e];
              for (var _0x247c8e = 0; _0x247c8e < _0x4b18c5.length; _0x247c8e++) {
                var _0x1581b8 = _0x4b18c5[_0x247c8e];
                if (_0x5627d3 == _0x1581b8) {
                  _0x4b18c5.splice(_0x247c8e, 1);
                }
              }
            }
          }
          if (this.links == null) {
            this.links = [];
          }
          (_0x3a7b83 = this.links).push.apply(_0x3a7b83, _0x176ee3(_0x4b18c5));
        }
      }, {
        key: "removeLink",
        value: function _0x3332a5(_0x3ba661) {
          for (var _0x5de3a0 = 0; _0x5de3a0 < this.links.length; _0x5de3a0++) {
            var _0x5e8875 = this.links[_0x5de3a0];
            if (_0x5e8875 == _0x3ba661) {
              this.links.splice(_0x5de3a0, 1);
              break;
            }
          }
        }
      }, {
        key: "getLocalData",
        value: function _0x35bd58() {
          return [this.points, this.minZ, this.maxZ, this.links];
        }
      }, {
        key: "getLinks",
        value: function _0x57669f() {
          return this.links;
        }
      }, {
        key: "generatePointsFromJson",
        value: function _0x183290(_0x1ac858) {
          var _0x411c7d = this;
          var _0x1dee48 = JSON.parse(_0x1ac858);
          _0x1dee48.forEach(function (_0x2a83ad) {
            var _0x64ace8 = _0x45b4c7.fromArray(_0x2a83ad);
            _0x411c7d.points.push(_0x64ace8);
          });
        }
      }, {
        key: "dataToJson",
        value: function _0x4272f4() {
          _0x52f632(_0x4c9485(_0x4739dd.prototype), "dataToJson", this).call(this, JSON.stringify(this.points));
          var _0x1c6b84 = JSON.stringify({
            points: _0x5457f6(this.points),
            minZ: this.minZ,
            maxZ: this.maxZ,
            links: this.links
          });
          return _0x1c6b84;
        }
      }, {
        key: "start",
        value: function _0xd246f9() {
          if (this.running || this.leadObjectName == null) {
            return;
          }
          _0x52f632(_0x4c9485(_0x4739dd.prototype), "start", this).call(this);
          var _0xf4aee5 = {
            objectID: this.parentObjectID,
            points: this.points,
            minZ: this.minZ,
            maxZ: this.maxZ,
            links: this.links
          };
          var _0x5d28a8 = _0xf4aee5;
          _0x4dd971(_0x5d28a8, this.leadObjectName);
          this.running = true;
          if (this.links && this.links.includes("worldLinkIDNopixel")) {
            if (this.leadObject != null) {
              var _0x339343 = _0x2b98da.get(this.leadObject);
              if (_0x339343) {
                _0x339343.roomsLinkedToWorld.push(this.parentObjectID);
              }
            }
          }
        }
      }, {
        key: "stop",
        value: function _0x17ec16() {
          if (!this.running || this.leadObjectName == null) {
            return;
          }
          _0x52f632(_0x4c9485(_0x4739dd.prototype), "stop", this).call(this);
          var _0x2ad912 = {
            objectID: this.parentObjectID,
            points: this.points,
            minZ: this.minZ,
            maxZ: this.maxZ,
            links: this.links
          };
          var _0xa4677f = _0x2ad912;
          _0x13c117(_0xa4677f, this.leadObjectName);
          this.running = false;
        }
      }]);
      return _0x4739dd;
    }(_0x252f80);
    ;
    ;
    function _0x3735ae(_0x3524a4, _0x4f0a94) {
      if (_0x4f0a94 == null || _0x4f0a94 > _0x3524a4.length) {
        _0x4f0a94 = _0x3524a4.length;
      }
      for (var _0x4e29a7 = 0, _0x2e89e4 = new Array(_0x4f0a94); _0x4e29a7 < _0x4f0a94; _0x4e29a7++) {
        _0x2e89e4[_0x4e29a7] = _0x3524a4[_0x4e29a7];
      }
      return _0x2e89e4;
    }
    function _0x1191dd(_0x5a6426) {
      if (Array.isArray(_0x5a6426)) {
        return _0x5a6426;
      }
    }
    function _0x13d8a4(_0x102545, _0x5cf245, _0x527c23, _0x35a4b2, _0x4382db, _0xa580c8, _0x5a52f5) {
      try {
        var _0x527bb1 = _0x102545[_0xa580c8](_0x5a52f5);
        var _0x592dfe = _0x527bb1.value;
      } catch (_0xa526ed) {
        _0x527c23(_0xa526ed);
        return;
      }
      if (_0x527bb1.done) {
        _0x5cf245(_0x592dfe);
      } else {
        Promise.resolve(_0x592dfe).then(_0x35a4b2, _0x4382db);
      }
    }
    function _0x236960(_0x449cb9) {
      return function () {
        var _0x478652 = this;
        var _0x2591aa = arguments;
        return new Promise(function (_0x1de758, _0x5c1db5) {
          var _0x435c6b = _0x449cb9.apply(_0x478652, _0x2591aa);
          function _0x5dc14a(_0xd57c0a) {
            _0x13d8a4(_0x435c6b, _0x1de758, _0x5c1db5, _0x5dc14a, _0x55485c, "next", _0xd57c0a);
          }
          function _0x55485c(_0xb78027) {
            _0x13d8a4(_0x435c6b, _0x1de758, _0x5c1db5, _0x5dc14a, _0x55485c, "throw", _0xb78027);
          }
          _0x5dc14a(undefined);
        });
      };
    }
    function _0x2a8668(_0x324f9a, _0x54ad51) {
      var _0x5de572 = _0x324f9a == null ? null : typeof Symbol !== "undefined" && _0x324f9a[Symbol.iterator] || _0x324f9a["@@iterator"];
      if (_0x5de572 == null) {
        return;
      }
      var _0x183cf4 = [];
      var _0x512869 = true;
      var _0x4a34b3 = false;
      var _0x22f11a;
      var _0x286ecd;
      try {
        for (_0x5de572 = _0x5de572.call(_0x324f9a); !(_0x512869 = (_0x22f11a = _0x5de572.next()).done); _0x512869 = true) {
          _0x183cf4.push(_0x22f11a.value);
          if (_0x54ad51 && _0x183cf4.length === _0x54ad51) {
            break;
          }
        }
      } catch (_0x202475) {
        _0x4a34b3 = true;
        _0x286ecd = _0x202475;
      } finally {
        try {
          if (!_0x512869 && _0x5de572.return != null) {
            _0x5de572.return();
          }
        } finally {
          if (_0x4a34b3) {
            throw _0x286ecd;
          }
        }
      }
      return _0x183cf4;
    }
    function _0x25f2aa() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x1d5310(_0x3b7c6d, _0x38e5ea) {
      return _0x1191dd(_0x3b7c6d) || _0x2a8668(_0x3b7c6d, _0x38e5ea) || _0x6d9c40(_0x3b7c6d, _0x38e5ea) || _0x25f2aa();
    }
    function _0x6d9c40(_0x2f33a9, _0x116582) {
      if (!_0x2f33a9) {
        return;
      }
      if (typeof _0x2f33a9 === "string") {
        return _0x3735ae(_0x2f33a9, _0x116582);
      }
      var _0x2ff070 = Object.prototype.toString.call(_0x2f33a9).slice(8, -1);
      if (_0x2ff070 === "Object" && _0x2f33a9.constructor) {
        _0x2ff070 = _0x2f33a9.constructor.name;
      }
      if (_0x2ff070 === "Map" || _0x2ff070 === "Set") {
        return Array.from(_0x2ff070);
      }
      if (_0x2ff070 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x2ff070)) {
        return _0x3735ae(_0x2f33a9, _0x116582);
      }
    }
    function _0x3ad8dd(_0x390824, _0x558f05) {
      var _0x2a0b5c;
      var _0x2c16e1;
      var _0x1f6f19;
      var _0x594a89;
      var _0x3aae94 = {
        label: 0,
        sent: function () {
          if (_0x1f6f19[0] & 1) {
            throw _0x1f6f19[1];
          }
          return _0x1f6f19[1];
        },
        trys: [],
        ops: []
      };
      _0x594a89 = {
        next: _0x3ea4b6(0),
        throw: _0x3ea4b6(1),
        return: _0x3ea4b6(2)
      };
      if (typeof Symbol === "function") {
        _0x594a89[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x594a89;
      function _0x3ea4b6(_0x10df87) {
        return function (_0x47551d) {
          return _0x47b5dd([_0x10df87, _0x47551d]);
        };
      }
      function _0x47b5dd(_0xea80b7) {
        if (_0x2a0b5c) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x3aae94) {
          try {
            _0x2a0b5c = 1;
            if (_0x2c16e1 && (_0x1f6f19 = _0xea80b7[0] & 2 ? _0x2c16e1.return : _0xea80b7[0] ? _0x2c16e1.throw || ((_0x1f6f19 = _0x2c16e1.return) && _0x1f6f19.call(_0x2c16e1), 0) : _0x2c16e1.next) && !(_0x1f6f19 = _0x1f6f19.call(_0x2c16e1, _0xea80b7[1])).done) {
              return _0x1f6f19;
            }
            _0x2c16e1 = 0;
            if (_0x1f6f19) {
              _0xea80b7 = [_0xea80b7[0] & 2, _0x1f6f19.value];
            }
            switch (_0xea80b7[0]) {
              case 0:
              case 1:
                _0x1f6f19 = _0xea80b7;
                break;
              case 4:
                _0x3aae94.label++;
                var _0x196c72 = {
                  value: _0xea80b7[1],
                  done: false
                };
                return _0x196c72;
              case 5:
                _0x3aae94.label++;
                _0x2c16e1 = _0xea80b7[1];
                _0xea80b7 = [0];
                continue;
              case 7:
                _0xea80b7 = _0x3aae94.ops.pop();
                _0x3aae94.trys.pop();
                continue;
              default:
                if (!(_0x1f6f19 = _0x3aae94.trys, _0x1f6f19 = _0x1f6f19.length > 0 && _0x1f6f19[_0x1f6f19.length - 1]) && (_0xea80b7[0] === 6 || _0xea80b7[0] === 2)) {
                  _0x3aae94 = 0;
                  continue;
                }
                if (_0xea80b7[0] === 3 && (!_0x1f6f19 || _0xea80b7[1] > _0x1f6f19[0] && _0xea80b7[1] < _0x1f6f19[3])) {
                  _0x3aae94.label = _0xea80b7[1];
                  break;
                }
                if (_0xea80b7[0] === 6 && _0x3aae94.label < _0x1f6f19[1]) {
                  _0x3aae94.label = _0x1f6f19[1];
                  _0x1f6f19 = _0xea80b7;
                  break;
                }
                if (_0x1f6f19 && _0x3aae94.label < _0x1f6f19[2]) {
                  _0x3aae94.label = _0x1f6f19[2];
                  _0x3aae94.ops.push(_0xea80b7);
                  break;
                }
                if (_0x1f6f19[2]) {
                  _0x3aae94.ops.pop();
                }
                _0x3aae94.trys.pop();
                continue;
            }
            _0xea80b7 = _0x558f05.call(_0x390824, _0x3aae94);
          } catch (_0x2820e1) {
            _0xea80b7 = [6, _0x2820e1];
            _0x2c16e1 = 0;
          } finally {
            _0x2a0b5c = _0x1f6f19 = 0;
          }
        }
        if (_0xea80b7[0] & 5) {
          throw _0xea80b7[1];
        }
        var _0xd9c535 = {
          value: _0xea80b7[0] ? _0xea80b7[1] : undefined,
          done: true
        };
        return _0xd9c535;
      }
    }
    var _0x48c414 = ["np_housedoor_tier_one", "np_housedoor_tier_one_b", "np_housedoor_tier_two", "np_housedoor_tier_two_b", "np_housedoor_tier_three", "np_housedoor_tier_three_b", "np_housedoor_tier_three_c", "np_methtraildoor", "np_trevtraildr", "3dp_apt_door_01", "3dp_apt_door_02"];
    var _0x3e168e = [new _0x45b4c7(2.529824426682353, 1.75642053451611, -1.7060004325680413), new _0x45b4c7(0, 0, 0), new _0x45b4c7(0, 0, 0)];
    var _0x5b64ac = function () {
      var _0x51d5f9 = _0x236960(function (_0x806b33) {
        var _0x715b03;
        var _0x6d0f59;
        var _0x1fe45c;
        var _0x7bbe73;
        var _0x48a2f9;
        var _0x4a4788;
        var _0x2eba27;
        var _0xe51075;
        var _0x3909f8;
        var _0x564973;
        var _0x5e98ca;
        var _0x3487aa;
        var _0x17736a;
        var _0x1ba3a7;
        var _0x1f2a07;
        var _0x3493bf;
        var _0x2ce6c5;
        var _0x34afa5;
        var _0x2e08ba;
        var _0x43d224;
        var _0x327ce0;
        var _0x31e7d9;
        var _0x271620;
        var _0x380723;
        var _0x4da81c;
        var _0x3edb40;
        var _0x2a3df6;
        var _0x5cd5aa;
        var _0x304699;
        var _0x32d690;
        var _0x183097;
        var _0x4ec6ff;
        var _0x2e57d2;
        var _0x3904df;
        return _0x3ad8dd(this, function (_0x593107) {
          _0x715b03 = _0x2b98da.get(_0x806b33);
          if (_0x715b03 && _0x715b03.interiorID != null && _0x715b03.interiorID != 0) {
            _0x6d0f59 = 0;
            for (_0x1fe45c = 0; _0x1fe45c < _0x6d0f59 + 1; _0x1fe45c++) {
              if (_0x715b03.interiorID != 0) {
                _0x7bbe73 = GetInteriorPortalEntityCount(_0x715b03.interiorID, _0x1fe45c);
                for (_0x48a2f9 = 0; _0x48a2f9 < _0x7bbe73; _0x48a2f9++) {
                  _0x4a4788 = GetInteriorPortalEntityArchetype(_0x715b03.interiorID, _0x1fe45c, _0x48a2f9);
                  for (var _0x30fd63 in _0x48c414) {
                    _0xe51075 = _0x48c414[_0x30fd63];
                    if (GetHashKey(_0xe51075) == _0x4a4788) {
                      _0x3909f8 = _0x1d5310(GetInteriorPortalEntityPosition(_0x715b03.interiorID, _0x1fe45c, _0x48a2f9), 3);
                      _0x564973 = _0x3909f8[0];
                      _0x5e98ca = _0x3909f8[1];
                      _0x3487aa = _0x3909f8[2];
                      _0x17736a = _0x1d5310(GetInteriorPosition(_0x715b03.interiorID), 3);
                      _0x1ba3a7 = _0x17736a[0];
                      _0x1f2a07 = _0x17736a[1];
                      _0x3493bf = _0x17736a[2];
                      _0x2ce6c5 = _0x1ba3a7 + _0x564973;
                      _0x34afa5 = _0x1f2a07 + _0x5e98ca;
                      _0x2e08ba = _0x3493bf + _0x3487aa;
                      _0x43d224 = _0x1d5310(GetInteriorRotation(_0x715b03.interiorID), 4);
                      _0x327ce0 = _0x43d224[0];
                      _0x31e7d9 = _0x43d224[1];
                      _0x271620 = _0x43d224[2];
                      _0x380723 = _0x43d224[3];
                      _0x4da81c = new _0x4c82ed(_0x2ce6c5, _0x34afa5, _0x2e08ba);
                      _0x3edb40 = new _0x4c82ed(_0x1ba3a7, _0x1f2a07, _0x3493bf);
                      _0x2a3df6 = new _0x2af827(_0x327ce0, _0x31e7d9, _0x271620, _0x380723);
                      _0x5cd5aa = _0x2a3df6.clone();
                      _0x304699 = _0x4da81c.clone().sub(_0x3edb40);
                      _0x32d690 = _0x304699.applyQuaternion(_0x5cd5aa);
                      _0x183097 = _0x32d690.add(_0x3edb40);
                      _0x4ec6ff = GetClosestObjectOfType(_0x183097.x, _0x183097.y, _0x183097.z, 3, _0x4a4788, false, false, false);
                      if (_0x4ec6ff != 0) {
                        _0x2e57d2 = _0x21193b.fromArray(GetEntityQuaternion(_0x4ec6ff));
                        SetEntityQuaternion(_0x4ec6ff, 0, 0, 0, 0);
                        _0x3904df = _0x45b4c7.fromArray(GetEntityCoords(_0x4ec6ff, false));
                        SetEntityQuaternion(_0x4ec6ff, _0x2e57d2.x, _0x2e57d2.y, _0x2e57d2.z, _0x2e57d2.w);
                        return [2, [_0xe51075, _0x3904df]];
                      }
                    }
                  }
                }
              }
            }
          }
          return [2, [undefined, undefined]];
        });
      });
      return function _0x78b41b(_0x1d482e) {
        return _0x51d5f9.apply(this, arguments);
      };
    }();
    ;
    const _0x512077 = new _0x4c82ed();
    const _0x3c13d3 = new _0x4c82ed();
    class _0x536320 {
      constructor(_0xd29ac3 = new _0x4c82ed(), _0x1585a4 = new _0x4c82ed()) {
        this.start = _0xd29ac3;
        this.end = _0x1585a4;
      }
      set(_0x5b51f0, _0x1aad28) {
        this.start.copy(_0x5b51f0);
        this.end.copy(_0x1aad28);
        return this;
      }
      copy(_0x40d350) {
        this.start.copy(_0x40d350.start);
        this.end.copy(_0x40d350.end);
        return this;
      }
      getCenter(_0x994867) {
        return _0x994867.addVectors(this.start, this.end).multiplyScalar(0.5);
      }
      delta(_0x35afef) {
        return _0x35afef.subVectors(this.end, this.start);
      }
      distanceSq() {
        return this.start.distanceToSquared(this.end);
      }
      distance() {
        return this.start.distanceTo(this.end);
      }
      at(_0x1de38a, _0xca6061) {
        return this.delta(_0xca6061).multiplyScalar(_0x1de38a).add(this.start);
      }
      closestPointToPointParameter(_0x3c946b, _0x5f201e) {
        _0x512077.subVectors(_0x3c946b, this.start);
        _0x3c13d3.subVectors(this.end, this.start);
        const _0x25887f = _0x3c13d3.dot(_0x3c13d3);
        const _0xeb520a = _0x3c13d3.dot(_0x512077);
        let _0x108cf5 = _0xeb520a / _0x25887f;
        if (_0x5f201e) {
          _0x108cf5 = _0x283adc(_0x108cf5, 0, 1);
        }
        return _0x108cf5;
      }
      closestPointToPoint(_0x2ead7c, _0x1df852, _0x7d6c77) {
        const _0x1f8ed2 = this.closestPointToPointParameter(_0x2ead7c, _0x1df852);
        return this.delta(_0x7d6c77).multiplyScalar(_0x1f8ed2).add(this.start);
      }
      applyMatrix4(_0x194853) {
        this.start.applyMatrix4(_0x194853);
        this.end.applyMatrix4(_0x194853);
        return this;
      }
      equals(_0x79b70) {
        return _0x79b70.start.equals(this.start) && _0x79b70.end.equals(this.end);
      }
      clone() {
        return new this.constructor().copy(this);
      }
    }
    ;
    var _0x5ae69f = _0x5f5650(480);
    function _0x16427a(_0x1e3197, _0x3552e8) {
      if (_0x3552e8 == null || _0x3552e8 > _0x1e3197.length) {
        _0x3552e8 = _0x1e3197.length;
      }
      for (var _0xd9d55a = 0, _0x5e4b72 = new Array(_0x3552e8); _0xd9d55a < _0x3552e8; _0xd9d55a++) {
        _0x5e4b72[_0xd9d55a] = _0x1e3197[_0xd9d55a];
      }
      return _0x5e4b72;
    }
    function _0x29ac3d(_0x46b145) {
      if (Array.isArray(_0x46b145)) {
        return _0x46b145;
      }
    }
    function _0x4ef8e9(_0x507004, _0x218c2e, _0x413d47, _0x4853fe, _0x2302f4, _0x282c83, _0x3e45dc) {
      try {
        var _0x1a1e13 = _0x507004[_0x282c83](_0x3e45dc);
        var _0x57f13f = _0x1a1e13.value;
      } catch (_0x35b413) {
        _0x413d47(_0x35b413);
        return;
      }
      if (_0x1a1e13.done) {
        _0x218c2e(_0x57f13f);
      } else {
        Promise.resolve(_0x57f13f).then(_0x4853fe, _0x2302f4);
      }
    }
    function _0x6bca60(_0x2998e1) {
      return function () {
        var _0x1d1663 = this;
        var _0x56a751 = arguments;
        return new Promise(function (_0x3a5d17, _0x4fd830) {
          var _0x1e99ec = _0x2998e1.apply(_0x1d1663, _0x56a751);
          function _0x4779d6(_0x1c38ae) {
            _0x4ef8e9(_0x1e99ec, _0x3a5d17, _0x4fd830, _0x4779d6, _0x2ae30b, "next", _0x1c38ae);
          }
          function _0x2ae30b(_0x2703cc) {
            _0x4ef8e9(_0x1e99ec, _0x3a5d17, _0x4fd830, _0x4779d6, _0x2ae30b, "throw", _0x2703cc);
          }
          _0x4779d6(undefined);
        });
      };
    }
    function _0x3c618c(_0x5959c5, _0x54406f) {
      if (!(_0x5959c5 instanceof _0x54406f)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _0x359fcd(_0x1db1c6, _0x49d919) {
      for (var _0xd475b2 = 0; _0xd475b2 < _0x49d919.length; _0xd475b2++) {
        var _0x28a1ff = _0x49d919[_0xd475b2];
        _0x28a1ff.enumerable = _0x28a1ff.enumerable || false;
        _0x28a1ff.configurable = true;
        if ("value" in _0x28a1ff) {
          _0x28a1ff.writable = true;
        }
        Object.defineProperty(_0x1db1c6, _0x28a1ff.key, _0x28a1ff);
      }
    }
    function _0x5a0601(_0x1ab963, _0x400ff6, _0x381c95) {
      if (_0x400ff6) {
        _0x359fcd(_0x1ab963.prototype, _0x400ff6);
      }
      if (_0x381c95) {
        _0x359fcd(_0x1ab963, _0x381c95);
      }
      return _0x1ab963;
    }
    function _0x2ade12(_0x3ed41f, _0x52c615, _0x197b9b) {
      if (_0x52c615 in _0x3ed41f) {
        var _0x21aee9 = {
          value: _0x197b9b,
          enumerable: true,
          configurable: true,
          writable: true
        };
        Object.defineProperty(_0x3ed41f, _0x52c615, _0x21aee9);
      } else {
        _0x3ed41f[_0x52c615] = _0x197b9b;
      }
      return _0x3ed41f;
    }
    function _0x357608(_0x55b12d, _0x435ef3) {
      var _0x70489 = _0x55b12d == null ? null : typeof Symbol !== "undefined" && _0x55b12d[Symbol.iterator] || _0x55b12d["@@iterator"];
      if (_0x70489 == null) {
        return;
      }
      var _0x26572a = [];
      var _0x71695b = true;
      var _0x2526cd = false;
      var _0x536db8;
      var _0x295170;
      try {
        for (_0x70489 = _0x70489.call(_0x55b12d); !(_0x71695b = (_0x536db8 = _0x70489.next()).done); _0x71695b = true) {
          _0x26572a.push(_0x536db8.value);
          if (_0x435ef3 && _0x26572a.length === _0x435ef3) {
            break;
          }
        }
      } catch (_0x5f5bb6) {
        _0x2526cd = true;
        _0x295170 = _0x5f5bb6;
      } finally {
        try {
          if (!_0x71695b && _0x70489.return != null) {
            _0x70489.return();
          }
        } finally {
          if (_0x2526cd) {
            throw _0x295170;
          }
        }
      }
      return _0x26572a;
    }
    function _0x34dbf6() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x4e813b(_0x1815da, _0x3a0ec0) {
      return _0x29ac3d(_0x1815da) || _0x357608(_0x1815da, _0x3a0ec0) || _0x432d85(_0x1815da, _0x3a0ec0) || _0x34dbf6();
    }
    function _0x432d85(_0x5b2d6c, _0x31fa73) {
      if (!_0x5b2d6c) {
        return;
      }
      if (typeof _0x5b2d6c === "string") {
        return _0x16427a(_0x5b2d6c, _0x31fa73);
      }
      var _0x2fd039 = Object.prototype.toString.call(_0x5b2d6c).slice(8, -1);
      if (_0x2fd039 === "Object" && _0x5b2d6c.constructor) {
        _0x2fd039 = _0x5b2d6c.constructor.name;
      }
      if (_0x2fd039 === "Map" || _0x2fd039 === "Set") {
        return Array.from(_0x2fd039);
      }
      if (_0x2fd039 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x2fd039)) {
        return _0x16427a(_0x5b2d6c, _0x31fa73);
      }
    }
    function _0x4b5af3(_0x1bae24, _0x5656a3) {
      var _0x56bf38;
      var _0x3397f9;
      var _0x26c8d0;
      var _0x20e9c9;
      var _0x114823 = {
        label: 0,
        sent: function () {
          if (_0x26c8d0[0] & 1) {
            throw _0x26c8d0[1];
          }
          return _0x26c8d0[1];
        },
        trys: [],
        ops: []
      };
      _0x20e9c9 = {
        next: _0x87adf1(0),
        throw: _0x87adf1(1),
        return: _0x87adf1(2)
      };
      if (typeof Symbol === "function") {
        _0x20e9c9[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x20e9c9;
      function _0x87adf1(_0x5dbd2b) {
        return function (_0x4105d5) {
          return _0x1b1f5e([_0x5dbd2b, _0x4105d5]);
        };
      }
      function _0x1b1f5e(_0x37707a) {
        if (_0x56bf38) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x114823) {
          try {
            _0x56bf38 = 1;
            if (_0x3397f9 && (_0x26c8d0 = _0x37707a[0] & 2 ? _0x3397f9.return : _0x37707a[0] ? _0x3397f9.throw || ((_0x26c8d0 = _0x3397f9.return) && _0x26c8d0.call(_0x3397f9), 0) : _0x3397f9.next) && !(_0x26c8d0 = _0x26c8d0.call(_0x3397f9, _0x37707a[1])).done) {
              return _0x26c8d0;
            }
            _0x3397f9 = 0;
            if (_0x26c8d0) {
              _0x37707a = [_0x37707a[0] & 2, _0x26c8d0.value];
            }
            switch (_0x37707a[0]) {
              case 0:
              case 1:
                _0x26c8d0 = _0x37707a;
                break;
              case 4:
                _0x114823.label++;
                var _0x5f170f = {
                  value: _0x37707a[1],
                  done: false
                };
                return _0x5f170f;
              case 5:
                _0x114823.label++;
                _0x3397f9 = _0x37707a[1];
                _0x37707a = [0];
                continue;
              case 7:
                _0x37707a = _0x114823.ops.pop();
                _0x114823.trys.pop();
                continue;
              default:
                if (!(_0x26c8d0 = _0x114823.trys, _0x26c8d0 = _0x26c8d0.length > 0 && _0x26c8d0[_0x26c8d0.length - 1]) && (_0x37707a[0] === 6 || _0x37707a[0] === 2)) {
                  _0x114823 = 0;
                  continue;
                }
                if (_0x37707a[0] === 3 && (!_0x26c8d0 || _0x37707a[1] > _0x26c8d0[0] && _0x37707a[1] < _0x26c8d0[3])) {
                  _0x114823.label = _0x37707a[1];
                  break;
                }
                if (_0x37707a[0] === 6 && _0x114823.label < _0x26c8d0[1]) {
                  _0x114823.label = _0x26c8d0[1];
                  _0x26c8d0 = _0x37707a;
                  break;
                }
                if (_0x26c8d0 && _0x114823.label < _0x26c8d0[2]) {
                  _0x114823.label = _0x26c8d0[2];
                  _0x114823.ops.push(_0x37707a);
                  break;
                }
                if (_0x26c8d0[2]) {
                  _0x114823.ops.pop();
                }
                _0x114823.trys.pop();
                continue;
            }
            _0x37707a = _0x5656a3.call(_0x1bae24, _0x114823);
          } catch (_0x33b476) {
            _0x37707a = [6, _0x33b476];
            _0x3397f9 = 0;
          } finally {
            _0x56bf38 = _0x26c8d0 = 0;
          }
        }
        if (_0x37707a[0] & 5) {
          throw _0x37707a[1];
        }
        var _0x14084c = {
          value: _0x37707a[0] ? _0x37707a[1] : undefined,
          done: true
        };
        return _0x14084c;
      }
    }
    var _0x4a89e0 = function () {
      'use strict';

      function _0x19026e() {
        var _0x5694bd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _0x45b4c7(0, 0, 0);
        var _0x11c86c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new _0x21193b(0, 0, 0, 0);
        var _0xcba60d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "Unk";
        var _0x11e5b9 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";
        var _0xbcc972 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";
        var _0x13867a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "";
        var _0x277634 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : "default";
        var _0x2ad2d3 = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
        var _0x38d44b = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : false;
        var _0x599a4b = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;
        var _0x393935 = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : false;
        var _0x1c8d6d = arguments.length > 11 ? arguments[11] : undefined;
        _0x3c618c(this, _0x19026e);
        _0x2ade12(this, "parent", undefined);
        _0x2ade12(this, "lead", undefined);
        _0x2ade12(this, "quat", undefined);
        _0x2ade12(this, "position", undefined);
        _0x2ade12(this, "model", undefined);
        _0x2ade12(this, "databaseID", undefined);
        _0x2ade12(this, "expireTime", null);
        _0x2ade12(this, "worldId", undefined);
        _0x2ade12(this, "isChildOfNonLoad", false);
        _0x2ade12(this, "hasChild", undefined);
        _0x2ade12(this, "navagation", false);
        _0x2ade12(this, "groupIndex", undefined);
        _0x2ade12(this, "isBuilt", undefined);
        _0x2ade12(this, "entityID", 0);
        _0x2ade12(this, "shouldBeRendering", false);
        _0x2ade12(this, "isDummy", false);
        _0x2ade12(this, "isHousing", false);
        _0x2ade12(this, "isApartment", false);
        _0x2ade12(this, "isRoom", false);
        _0x2ade12(this, "isLoaded", false);
        _0x2ade12(this, "isLead", false);
        _0x2ade12(this, "interiorID", null);
        _0x2ade12(this, "modelDim", null);
        _0x2ade12(this, "groupDim", null);
        _0x2ade12(this, "inRenderView", false);
        _0x2ade12(this, "connection", {});
        _0x2ade12(this, "databaseConnectionData", []);
        _0x2ade12(this, "connectionID", []);
        _0x2ade12(this, "connectionsAltered", false);
        _0x2ade12(this, "hasNavigationChild", false);
        _0x2ade12(this, "roomsLinkedToWorld", []);
        _0x2ade12(this, "hashedObjectData", null);
        _0x2ade12(this, "doorData", undefined);
        _0x2ade12(this, "isSaved", false);
        _0x2ade12(this, "assigningDoor", false);
        _0x2ade12(this, "refferenceObject", 0);
        _0x2ade12(this, "loadedApartmentChild", false);
        _0x2ade12(this, "isApartmentChild", false);
        _0x2ade12(this, "isHiddenObject", false);
        _0x2ade12(this, "isBlockObject", false);
        _0x2ade12(this, "attributes", undefined);
        _0x2ade12(this, "apartmentTick", 0);
        _0x2ade12(this, "hasSetHousingEntitySet", false);
        _0x2ade12(this, "apartmentInformation", {
          roomID: -1,
          roomHash: 0,
          rotation: new _0x21193b(0, 0, 0),
          points: [],
          camPoints: [],
          interiorID: 0
        });
        this.position = _0x5694bd;
        this.quat = _0x11c86c;
        this.model = _0xcba60d;
        this.parent = _0x11e5b9;
        this.lead = _0xbcc972;
        this.databaseID = _0x13867a;
        this.worldId = _0x277634;
        this.hasChild = _0x2ad2d3;
        this.isSaved = _0x38d44b;
        this.groupIndex = _0x599a4b;
        this.isBuilt = _0x393935;
        if (this.databaseID == this.lead) {
          this.isLead = true;
        }
        this.GetHashDataForModel();
        this.checkModelName();
        if (_0x1c8d6d != null) {
          this.correctlyGenerateConnection(_0x1c8d6d);
        }
        _0x12a6d6(this.model);
        this.IsAHiddenObject();
        this.IsABlockedObject();
      }
      _0x5a0601(_0x19026e, [{
        key: "OnObjectSave",
        value: function _0x3cc71a() {
          var _0xce3550 = this;
          return _0x6bca60(function () {
            return _0x4b5af3(this, function (_0x233deb) {
              _0xce3550.isSaved = true;
              _0xce3550.AssignDoor();
              return [2];
            });
          })();
        }
      }, {
        key: "GetHashDataForModel",
        value: function _0x538ab6() {
          var _0x1595a1 = this;
          return _0x6bca60(function () {
            var _0x40b703;
            var _0x5487bc;
            return _0x4b5af3(this, function (_0x550a06) {
              switch (_0x550a06.label) {
                case 0:
                  if (_0x1595a1.hashedObjectData != null) {
                    return [2];
                  }
                  return [4, _0x21bf42.get(undefined)];
                case 1:
                  _0x40b703 = _0x550a06.sent();
                  if (_0x40b703 == null) {
                    return [2];
                  }
                  _0x5487bc = _0x40b703.get(_0x1595a1.model);
                  if (_0x5487bc) {
                    _0x1595a1.hashedObjectData = _0x5487bc;
                  }
                  if (_0x1595a1.hashedObjectData && _0x1595a1.hashedObjectData.attributes) {
                    _0x1595a1.attributes = _0x1595a1.hashedObjectData.attributes;
                  }
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "GetDimForModel",
        value: function _0x4a673d() {
          return _0x6bca60(function () {
            return _0x4b5af3(this, function (_0x5ffb19) {
              return [2];
            });
          })();
        }
      }, {
        key: "IsAHiddenObject",
        value: function _0x3a7192() {
          var _0xd0c34d = this;
          return _0x6bca60(function () {
            return _0x4b5af3(this, function (_0x13dd57) {
              if (_0xd0c34d.hashedObjectData && _0xd0c34d.hashedObjectData.attributes && _0xd0c34d.hashedObjectData.attributes.hideInWorld && _0xd0c34d.isHiddenObject == false) {
                _0xd0c34d.isHiddenObject = true;
                _0x1ddac5.set(_0xd0c34d.databaseID, _0xd0c34d);
                return [2, true];
              }
              return [2, false];
            });
          })();
        }
      }, {
        key: "IsABlockedObject",
        value: function _0x26629e() {
          var _0x4bfd1d = this;
          return _0x6bca60(function () {
            return _0x4b5af3(this, function (_0x4b036f) {
              if (_0x4bfd1d.hashedObjectData && _0x4bfd1d.hashedObjectData.attributes && _0x4bfd1d.hashedObjectData.attributes.blockHide && _0x4bfd1d.isBlockObject == false) {
                _0x4bfd1d.isBlockObject = true;
              }
              return [2];
            });
          })();
        }
      }, {
        key: "AssignDoor",
        value: function _0x48a220() {
          var _0x4e20a5 = this;
          return _0x6bca60(function () {
            var _0x4f3e26;
            var _0x436307;
            var _0xc06b28;
            var _0x42290a;
            return _0x4b5af3(this, function (_0x17f362) {
              switch (_0x17f362.label) {
                case 0:
                  if (_0x4e20a5.assigningDoor) {
                    return [2];
                  }
                  _0x4e20a5.assigningDoor = true;
                  if (!_0x4e20a5.isSaved) {
                    return [2];
                  }
                  _0x4f3e26 = 0;
                  _0x17f362.label = 1;
                case 1:
                  if (_0x4e20a5.hashedObjectData != null || _0x4f3e26 >= 100) {
                    return [3, 3];
                  }
                  _0x4f3e26++;
                  return [4, _0x4e43fe(10)];
                case 2:
                  _0x17f362.sent();
                  return [3, 1];
                case 3:
                  _0x436307 = _0x4e20a5.CheckIfIsDoor();
                  if (!_0x436307[0]) {
                    return [2];
                  }
                  if (_0x436307[1]) {
                    _0xc06b28 = {
                      distance: 2,
                      rate: 1
                    };
                  }
                  var _0x215164 = {
                    id: _0x4e20a5.databaseID,
                    coords: [_0x4e20a5.position.x, _0x4e20a5.position.y, _0x4e20a5.position.z],
                    model: _0x4e20a5.model,
                    locked: true,
                    automatic: _0xc06b28,
                    access: {
                      jobs: {
                        ems: true,
                        doctor: true,
                        police: true
                      },
                      house: true
                    }
                  };
                  _0x42290a = _0x215164;
                  return [4, NPX.Procedures.execute("np-editor:AttemptToAddDoor", _0x42290a)];
                case 4:
                  _0x4e20a5.doorData = _0x17f362.sent();
                  _0x4e20a5.assigningDoor = false;
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "FindFrontDoor",
        value: function _0x768fa8() {
          var _0x37c645 = this;
          return _0x6bca60(function () {
            var _0x2fe8f3;
            var _0x35b703;
            var _0x4258ee;
            var _0x1332e1;
            var _0x134660;
            var _0xdc9d01;
            return _0x4b5af3(this, function (_0x1519ca) {
              switch (_0x1519ca.label) {
                case 0:
                  return [4, _0x5b64ac(_0x37c645.databaseID)];
                case 1:
                  _0x2fe8f3 = _0x4e813b.apply(undefined, [_0x1519ca.sent(), 2]);
                  _0x35b703 = _0x2fe8f3[0];
                  _0x4258ee = _0x2fe8f3[1];
                  if (_0x35b703 == null || _0x4258ee == null) {
                    return [2];
                  }
                  _0x1332e1 = false;
                  if (_0x1332e1) {
                    _0x134660 = {
                      distance: 2,
                      rate: 1
                    };
                  }
                  var _0x35d7ce = {
                    id: _0x37c645.databaseID,
                    coords: [_0x4258ee.x, _0x4258ee.y, _0x4258ee.z],
                    model: _0x35b703,
                    locked: true,
                    automatic: _0x134660,
                    access: {
                      jobs: {
                        ems: true,
                        doctor: true,
                        police: true
                      },
                      house: true
                    }
                  };
                  _0xdc9d01 = _0x35d7ce;
                  _0x37c645.doorData = _0xdc9d01;
                  return [4, NPX.Procedures.execute("np-editor:AttemptToAddDoor", _0xdc9d01)];
                case 2:
                  _0x37c645.doorData = _0x1519ca.sent();
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "UpdateDoor",
        value: function _0x2960c5() {
          var _0x838621 = this;
          return _0x6bca60(function () {
            var _0x49ed80;
            return _0x4b5af3(this, function (_0x5475c0) {
              switch (_0x5475c0.label) {
                case 0:
                  _0x49ed80 = _0x838621.CheckIfIsDoor();
                  if (!_0x49ed80[0] || _0x838621.doorData == null) {
                    return [2];
                  }
                  return [4, NPX.Procedures.execute("np-editor:AttemptToUpdateDoor", _0x838621.position, _0x838621.databaseID)];
                case 1:
                  _0x838621.doorData = _0x5475c0.sent();
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "CheckIsChildOfNonLoad",
        value: function _0xadd5f() {
          var _0x1765bd = this;
          return _0x6bca60(function () {
            var _0x557bce;
            return _0x4b5af3(this, function (_0x246e3f) {
              if (_0x1765bd.parent == null || _0x1765bd.isChildOfNonLoad) {
                return [2];
              }
              _0x557bce = _0x2b98da.get(_0x1765bd.parent);
              if (!_0x557bce) {
                _0x1765bd.isChildOfNonLoad = true;
                return [2];
              }
              if (_0x557bce.isDummy && _0x557bce.isHousing) {
                _0x1765bd.isChildOfNonLoad = true;
                return [2];
              }
              if (_0x557bce.isDummy && _0x557bce.isRoom) {
                _0x1765bd.isChildOfNonLoad = true;
                return [2];
              }
              if (_0x557bce.isChildOfNonLoad) {
                _0x1765bd.isChildOfNonLoad = true;
                return [2];
              }
              _0x1765bd.isChildOfNonLoad = false;
              return [2];
            });
          })();
        }
      }, {
        key: "CheckIfIsDoor",
        value: function _0x4eb45e() {
          if (this.hashedObjectData && this.hashedObjectData.attributes && this.hashedObjectData.attributes.isDoor) {
            if (this.hashedObjectData.attributes.isSliding) {
              return [true, true];
            }
            return [true, false];
          }
          return [false, false];
        }
      }, {
        key: "renderObject",
        value: function _0x462c4a() {
          var _0x2a39e9 = this;
          return _0x6bca60(function () {
            var _0xcd1571;
            var _0x43d412;
            var _0x5ebecb;
            var _0xc00a83;
            var _0x105be1;
            var _0xbfdafe;
            var _0x1024ba;
            var _0x20782b;
            return _0x4b5af3(this, function (_0x2080b4) {
              switch (_0x2080b4.label) {
                case 0:
                  _0x2a39e9.isLoaded = true;
                  return [4, _0x5566d0(_0x2a39e9.model)];
                case 1:
                  _0xcd1571 = _0x2080b4.sent();
                  if (!_0xcd1571) {
                    return [2];
                  }
                  if (!HasModelLoaded(_0x2a39e9.model)) {
                    throw new Error(`Unable to load model ${_0x2a39e9.model} (id: ${_0x2a39e9.databaseID}) at ${_0x2a39e9.position.x},${_0x2a39e9.position.y},${_0x2a39e9.position.z}`);
                  }
                  if (_0x2a39e9.hashedObjectData != null) {
                    return [3, 3];
                  }
                  return [4, _0x2a39e9.GetHashDataForModel()];
                case 2:
                  _0x2080b4.sent();
                  _0x2080b4.label = 3;
                case 3:
                  return [4, _0x2a39e9.IsAHiddenObject()];
                case 4:
                  _0x2080b4.sent();
                  return [4, _0x2a39e9.IsABlockedObject()];
                case 5:
                  _0x2080b4.sent();
                  if (_0x2a39e9.isHiddenObject && (_0x179abe.getCurrentStateName() == "none" || _0x179abe.getCurrentStateName() == undefined)) {
                    return [2];
                  }
                  _0x43d412 = 0;
                  _0x5ebecb = 0;
                  if (_0x2a39e9.lead) {
                    _0xc00a83 = _0x2b98da.get(_0x2a39e9.lead);
                    if (_0xc00a83) {
                      if (_0xc00a83.isHousing && _0xc00a83.interiorID) {
                        _0x105be1 = _0xf35f0d.get(_0xc00a83.interiorID);
                        if (_0x105be1) {
                          _0x5ebecb = _0xc00a83.interiorID;
                          _0x43d412 = _0x105be1.roomHash;
                        }
                      }
                      if (_0xc00a83.isApartment) {
                        _0x5ae69f.log("loading this object for my apartment ", _0x2a39e9.model, _0xc00a83.model);
                      }
                    }
                  }
                  _0xbfdafe = _0x2a39e9.CheckIfIsDoor();
                  _0x1024ba = _0xbfdafe[0];
                  _0x2a39e9.entityID = CreateObjectNoOffset(_0x2a39e9.model, _0x2a39e9.position.x, _0x2a39e9.position.y, _0x2a39e9.position.z, false, false, false);
                  SetEntityQuaternion(_0x2a39e9.entityID, _0x2a39e9.quat.x, _0x2a39e9.quat.y, _0x2a39e9.quat.z, _0x2a39e9.quat.w);
                  FreezeEntityPosition(_0x2a39e9.entityID, !_0x1024ba);
                  if (_0x1024ba) {
                    _0x2a39e9.AssignDoor();
                  }
                  if (_0x2a39e9.isHiddenObject) {
                    SetEntityCollision(_0x2a39e9.entityID, false, false);
                  }
                  SetEntityAsMissionEntity(_0x2a39e9.entityID, true, true);
                  SetModelAsNoLongerNeeded(_0x2a39e9.model);
                  if (_0x43d412 != 0 && _0x5ebecb != 0) {
                    ForceRoomForEntity(_0x2a39e9.entityID, _0x5ebecb, _0x43d412);
                  }
                  if (_0x2a39e9.hashedObjectData && _0x2a39e9.hashedObjectData.attributes && _0x2a39e9.hashedObjectData.attributes.craftingBench && _0x2a39e9.entityID != 0 && _0x2a39e9.isBuilt) {
                    _0x20782b = _0x2a39e9.databaseID.replace(/[^0-9a-z]/gi, "");
                    var _0x9d5adc = {
                      name: _0x20782b,
                      prop: _0x2a39e9.entityID
                    };
                    globalThis.exports.crafting.addBench(_0x9d5adc);
                  }
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "removeObject",
        value: function _0x1be9d4() {
          var _0x34d21a = this;
          return _0x6bca60(function () {
            var _0x166e80;
            return _0x4b5af3(this, function (_0x493b16) {
              _0x34d21a.isLoaded = false;
              if (_0x34d21a.hashedObjectData && _0x34d21a.hashedObjectData.attributes && _0x34d21a.hashedObjectData.attributes.craftingBench) {
                _0x166e80 = _0x34d21a.databaseID.replace(/[^0-9a-z]/gi, "");
                var _0x13f213 = {
                  name: _0x166e80
                };
                globalThis.exports.crafting.removeBench(_0x13f213);
              }
              if (DoesEntityExist(_0x34d21a.entityID)) {
                DeleteObject(_0x34d21a.entityID);
              }
              _0x34d21a.entityID = 0;
              return [2];
            });
          })();
        }
      }, {
        key: "checkModelName",
        value: function _0x271c5b() {
          var _0x37cfd3 = this.model.split(/\s*:\s*/);
          if (_0x37cfd3[0] == "DUMMY") {
            this.isDummy = true;
            if (_0x37cfd3[1] == "HOUSING") {
              this.isHousing = true;
            }
            if (_0x37cfd3[1] == "APARTMENTS") {
              this.isApartment = true;
            }
            if (_0x37cfd3[1] == "ROOM") {
              this.isRoom = true;
            }
          }
          if (this.lead) {
            var _0x3d29f1 = _0x2b98da.get(this.lead);
            if (_0x3d29f1) {
              var _0x2209ea = _0x3d29f1.model.split(/\s*:\s*/);
              if (_0x2209ea[0] == "DUMMY") {
                if (_0x2209ea[1] == "APARTMENTS") {
                  this.isApartmentChild = true;
                }
              }
            }
          }
        }
      }, {
        key: "shouldRender",
        value: function _0x59b6b7(_0x2073a8) {
          var _0x3cd9cb = this;
          return _0x6bca60(function () {
            var _0x309df8;
            var _0xe44ee7;
            var _0x585315;
            return _0x4b5af3(this, function (_0x474507) {
              switch (_0x474507.label) {
                case 0:
                  _0x3cd9cb.shouldBeRendering = _0x2073a8;
                  if ((_0x3cd9cb.isHousing || _0x3cd9cb.isApartment) && !_0x3cd9cb.isLead) {
                    if (_0x2073a8 && !_0x3cd9cb.hasSetHousingEntitySet) {
                      _0x309df8 = _0x3cd9cb.model.split(/\s*:\s*/);
                      if (_0x309df8[0] == "DUMMY" && _0x309df8[1] == "HOUSING" && _0x309df8[2]) {
                        _0x3cd9cb.hasSetHousingEntitySet = true;
                        globalThis.exports.housing.loadKnownEntitysetsForHouse(_0x309df8[2]);
                      }
                    }
                    _0x3cd9cb.interiorCheckGroup(_0x3cd9cb.shouldBeRendering);
                    return [2];
                  }
                  if (!_0x2073a8) {
                    return [3, 10];
                  }
                  if (_0x3cd9cb.isLead) {
                    _0x5ae69f.log("we are loading children of lead", _0x3cd9cb.model);
                    _0x1cae0f(_0x3cd9cb, true);
                  }
                  _0xe44ee7 = true;
                  if (!_0x3cd9cb.lead) {
                    return [3, 7];
                  }
                  _0x585315 = _0x2b98da.get(_0x3cd9cb.lead);
                  if (!_0x585315) {
                    return [3, 7];
                  }
                  if (!_0x585315.isApartment && !_0x585315.isHousing) {
                    return [3, 7];
                  }
                  if (!!_0x3cd9cb.isBuilt) {
                    return [3, 7];
                  }
                  if (!_0x503f2d) {
                    return [3, 6];
                  }
                  if (_0x3cd9cb.entityID == 0) {
                    return [3, 3];
                  }
                  return [4, _0x3cd9cb.removeObject()];
                case 1:
                  _0x474507.sent();
                  return [4, _0x3cd9cb.renderObject()];
                case 2:
                  _0x474507.sent();
                  return [3, 5];
                case 3:
                  return [4, _0x3cd9cb.renderObject()];
                case 4:
                  _0x474507.sent();
                  _0xe44ee7 = false;
                  _0x474507.label = 5;
                case 5:
                  return [3, 7];
                case 6:
                  _0x3cd9cb.shouldBeRendering = false;
                  _0xe44ee7 = false;
                  _0x474507.label = 7;
                case 7:
                  if (!_0xe44ee7) {
                    return [3, 9];
                  }
                  _0x3cd9cb.startAll();
                  return [4, _0x3cd9cb.renderObject()];
                case 8:
                  _0x474507.sent();
                  _0x474507.label = 9;
                case 9:
                  return [3, 12];
                case 10:
                  if (_0x3cd9cb.isLead) {
                    _0x14177c(_0x3cd9cb);
                    _0x5ae69f.log("triggering default leave zone");
                    emit("np-editor:insideInteriorZone", false);
                  }
                  return [4, _0x3cd9cb.removeObject()];
                case 11:
                  _0x474507.sent();
                  _0x474507.label = 12;
                case 12:
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "attemptToRender",
        value: function _0x1dfa15(_0x1cad3e) {
          var _0x70d230 = this;
          return _0x6bca60(function () {
            var _0x22e5cd;
            var _0x24c41f;
            return _0x4b5af3(this, function (_0x580c81) {
              switch (_0x580c81.label) {
                case 0:
                  if (_0x70d230.parent == null || !!_0x70d230.shouldBeRendering) {
                    return [3, 21];
                  }
                  _0x22e5cd = _0x2b98da.get(_0x70d230.parent);
                  if (!_0x22e5cd) {
                    return [3, 21];
                  }
                  if (!_0x22e5cd.shouldBeRendering && !_0x22e5cd.isHousing && _0x22e5cd.model != "DUMMY:ROOT" && _0x22e5cd.model != "DUMMY:HOUSING" && _0x22e5cd.model != "DUMMY:APARTMENTS") {
                    return [3, 21];
                  }
                  if (!_0x70d230.isRoom) {
                    return [3, 15];
                  }
                  if (!_0x1cad3e) {
                    return [3, 6];
                  }
                  if (_0x70d230.entityID == 0) {
                    return [3, 3];
                  }
                  return [4, _0x70d230.shouldRender(false)];
                case 1:
                  _0x580c81.sent();
                  return [4, _0x70d230.shouldRender(true)];
                case 2:
                  _0x580c81.sent();
                  return [3, 5];
                case 3:
                  return [4, _0x70d230.shouldRender(true)];
                case 4:
                  _0x580c81.sent();
                  _0x580c81.label = 5;
                case 5:
                  return [3, 14];
                case 6:
                  if (!_0x70d230.connection || !_0x70d230.connection.room) {
                    return [3, 13];
                  }
                  _0x24c41f = _0x70d230.connection.room.getLinks();
                  if (!_0x24c41f) {
                    return [3, 12];
                  }
                  if (!_0x24c41f.includes("worldLinkIDNopixel")) {
                    return [3, 12];
                  }
                  if (_0x70d230.entityID == 0) {
                    return [3, 9];
                  }
                  return [4, _0x70d230.shouldRender(false)];
                case 7:
                  _0x580c81.sent();
                  return [4, _0x70d230.shouldRender(true)];
                case 8:
                  _0x580c81.sent();
                  return [3, 11];
                case 9:
                  return [4, _0x70d230.shouldRender(true)];
                case 10:
                  _0x580c81.sent();
                  _0x580c81.label = 11;
                case 11:
                  return [2, true];
                case 12:
                  return [2, false];
                case 13:
                  return [2, false];
                case 14:
                  return [3, 20];
                case 15:
                  if (_0x70d230.entityID == 0) {
                    return [3, 18];
                  }
                  return [4, _0x70d230.shouldRender(false)];
                case 16:
                  _0x580c81.sent();
                  return [4, _0x70d230.shouldRender(true)];
                case 17:
                  _0x580c81.sent();
                  return [3, 20];
                case 18:
                  return [4, _0x70d230.shouldRender(true)];
                case 19:
                  _0x580c81.sent();
                  _0x580c81.label = 20;
                case 20:
                  return [2, true];
                case 21:
                  return [2, false];
              }
            });
          })();
        }
      }, {
        key: "updateObject",
        value: function _0x363d78(_0x2a46e3, _0x181182, _0x3d028e) {
          var _0x462f18 = this;
          return _0x6bca60(function () {
            var _0x1bd47f;
            return _0x4b5af3(this, function (_0x42e2a2) {
              switch (_0x42e2a2.label) {
                case 0:
                  if (_0x3d028e && _0x462f18.isLoaded) {
                    _0x462f18.removeObject();
                  }
                  if (_0x2a46e3) {
                    _0x462f18.position = _0x2a46e3;
                  }
                  if (_0x181182) {
                    _0x1bd47f = new _0x21193b(+_0x181182.x.toFixed(14), +_0x181182.y.toFixed(14), +_0x181182.z.toFixed(14), +_0x181182.w.toFixed(14));
                    _0x462f18.quat = _0x1bd47f;
                  }
                  if (_0x462f18.entityID != 0) {
                    _0x462f18.setPositionAndQuatCorrectly();
                  }
                  if (!_0x3d028e || !!_0x462f18.isLoaded) {
                    return [3, 2];
                  }
                  return [4, _0x462f18.renderObject()];
                case 1:
                  _0x42e2a2.sent();
                  _0x42e2a2.label = 2;
                case 2:
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "setPositionAndQuatCorrectly",
        value: function _0x4cb07d() {
          SetEntityCoords(this.entityID, this.position.x, this.position.y, this.position.z, false, false, false, false);
          SetEntityQuaternion(this.entityID, this.quat.x, this.quat.y, this.quat.z, this.quat.w);
        }
      }, {
        key: "interiorCheckGroup",
        value: function _0x406a5e(_0x43f12a) {
          if (_0x43f12a) {
            if (_0x4c08c6.size == 0) {
              _0x42488e();
            }
            _0x4c08c6.set(this.databaseID, this);
          } else {
            _0x4c08c6.delete(this.databaseID);
          }
        }
      }, {
        key: "interiorCheckPlayer",
        value: function _0x2b5a14() {
          if (this.isApartment) {
            return true;
          } else {
            var _0x35ecb9 = PlayerPedId();
            var _0x4d645a = GetInteriorFromEntity(_0x35ecb9);
            if (_0x4d645a == this.interiorID) {
              return true;
            }
          }
          return false;
        }
      }, {
        key: "interiorCheckSelf",
        value: function _0x42d5eb() {
          var _0x454580 = this;
          return _0x6bca60(function () {
            var _0x29315c;
            var _0x1cb2bf;
            var _0x857c10;
            var _0x1ee79d;
            var _0x45514e;
            var _0x2ced9c;
            return _0x4b5af3(this, function (_0xd62d7a) {
              switch (_0xd62d7a.label) {
                case 0:
                  if (!_0x454580.interiorID) {
                    if (_0x454580.isApartment) {
                      _0x454580.interiorID = GetInteriorFromCollision(_0x454580.position.x, _0x454580.position.y, _0x454580.position.z);
                    } else {
                      _0x454580.interiorID = GetInteriorAtCoords(_0x454580.position.x, _0x454580.position.y, _0x454580.position.z);
                    }
                  }
                  _0x29315c = IsInteriorReady(_0x454580.interiorID);
                  _0x1871e1(_0x454580.interiorID, _0x29315c, _0x454580.databaseID);
                  if (!_0x29315c) {
                    return [3, 4];
                  }
                  if (_0x454580.isHousing && _0x454580.interiorID && _0x454580.doorData == null) {
                    _0x454580.FindFrontDoor();
                  }
                  _0x1cb2bf = true;
                  if (!_0x454580.isApartment) {
                    return [3, 1];
                  }
                  _0x857c10 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId()));
                  _0x1ee79d = GetInteriorFromCollision(_0x857c10.x, _0x857c10.y, _0x857c10.z);
                  if (_0x1ee79d != _0x454580.interiorID) {
                    _0x1cb2bf = false;
                  }
                  if (_0x2cdcce == 0) {
                    if (_0x454580.isLoaded) {
                      if (!_0x1cb2bf) {
                        _0x454580.isLoaded = false;
                        _0x454580.stopAll();
                        _0x14177c(_0x454580);
                        if (_0x454580.isApartment) {
                          _0x5ae69f.log("we De-rendering apartment", _0x454580.model);
                          _0x454580.refferenceObject &&= 0;
                          clearTick(_0x454580.apartmentTick);
                          _0x5cfb53.delete(_0x454580.databaseID);
                          _0x5ae69f.log("triggering apartment leave zone");
                          _0x46f2b0.reset(_0x454580.databaseID);
                          emit("np-editor:insideInteriorZone", false);
                        }
                      }
                    } else if (_0x1cb2bf) {
                      _0x5ae69f.log("I Should be loading Apartment now ... moving to leave check", _0x454580.model);
                      _0x45514e = GetInteriorFromCollision(_0x857c10.x, _0x857c10.y, _0x857c10.z);
                      if (_0x45514e == _0x454580.interiorID) {
                        _0x454580.isLoaded = true;
                        _0x454580.apartmentTick = setTick(_0x6bca60(function () {
                          var _0x165479;
                          var _0x1a1d70;
                          return _0x4b5af3(this, function (_0x5aa4f2) {
                            switch (_0x5aa4f2.label) {
                              case 0:
                                _0x165479 = IsInteriorReady(_0x45514e);
                                _0x1a1d70 = false;
                                if (!_0x165479) {
                                  return [3, 2];
                                }
                                return [4, _0x454580.ApartmentRegister()];
                              case 1:
                                _0x1a1d70 = _0x5aa4f2.sent();
                                _0x5aa4f2.label = 2;
                              case 2:
                                if (!!_0x1a1d70) {
                                  return [3, 4];
                                }
                                return [4, _0x4e43fe(200)];
                              case 3:
                                _0x5aa4f2.sent();
                                return [3, 5];
                              case 4:
                                emit("np-editor:insideInteriorZone", true);
                                clearTick(_0x454580.apartmentTick);
                                _0x5aa4f2.label = 5;
                              case 5:
                                return [2];
                            }
                          });
                        }));
                      }
                    }
                  }
                  return [3, 3];
                case 1:
                  _0x2ced9c = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId()));
                  return [4, _0x17cbe3(_0x454580.interiorID, _0x2ced9c)];
                case 2:
                  _0x1cb2bf = _0xd62d7a.sent();
                  if (_0x2cdcce == 0) {
                    if (_0x454580.isLoaded) {
                      if (!_0x1cb2bf) {
                        _0x454580.isLoaded = false;
                        _0x454580.stopAll();
                        _0x14177c(_0x454580);
                        _0x5ae69f.log("triggering housing leave zone");
                        emit("np-editor:insideInteriorZone", false);
                      }
                    } else if (_0x1cb2bf) {
                      _0x454580.isLoaded = true;
                      if (_0x454580.hasChild) {
                        _0x454580.startAll();
                        _0x1cae0f(_0x454580, true);
                        emit("np-editor:insideInteriorZone", true);
                      }
                    }
                  }
                  _0xd62d7a.label = 3;
                case 3:
                  return [3, 5];
                case 4:
                  if (_0x454580.isLoaded && _0x2cdcce == 0) {
                    _0x454580.isLoaded = false;
                    _0x454580.stopAll();
                    _0x14177c(_0x454580);
                    _0x5ae69f.log("triggering default leave zone");
                    emit("np-editor:insideInteriorZone", false);
                    if (_0x454580.isApartment) {
                      if (_0x454580.refferenceObject) {
                        _0x454580.refferenceObject = 0;
                      }
                      _0x5cfb53.delete(_0x454580.databaseID);
                    }
                  }
                  _0xd62d7a.label = 5;
                case 5:
                  return [2];
              }
            });
          })();
        }
      }, {
        key: "ApartmentRegister",
        value: function _0x11e7cd() {
          var _0x5abf99 = this;
          return _0x6bca60(function () {
            var _0x1100e2;
            var _0x4fd3df;
            var _0x3b741d;
            var _0x59bf8f;
            var _0x3d1ef4;
            var _0x5707bd;
            var _0x2906f4;
            var _0x1c2740;
            var _0x2a8bbe;
            var _0x2170e4;
            var _0x18c73a;
            var _0xef039b;
            var _0x175db2;
            var _0x482f25;
            var _0x2a07ab;
            var _0x30a148;
            return _0x4b5af3(this, function (_0x30255a) {
              switch (_0x30255a.label) {
                case 0:
                  if (_0x5abf99.refferenceObject == 0) {
                    _0x1100e2 = GetClosestObjectOfType(_0x5abf99.position.x, _0x5abf99.position.y, _0x5abf99.position.z, 1, GetHashKey("center_room_ref"), false, false, false);
                    _0x5abf99.refferenceObject = _0x1100e2;
                  }
                  if (_0x5abf99.refferenceObject == 0) {
                    return [2, false];
                  }
                  _0x4fd3df = _0x21193b.fromArray(GetEntityQuaternion(_0x5abf99.refferenceObject));
                  _0x3b741d = GetInteriorFromEntity(_0x5abf99.refferenceObject);
                  _0x59bf8f = GetRoomKeyFromEntity(_0x5abf99.refferenceObject);
                  _0x3d1ef4 = GetInteriorRoomIndexByHash(_0x3b741d, _0x59bf8f);
                  _0x5707bd = _0x4e813b(GetInteriorRoomExtents(_0x3b741d, _0x3d1ef4), 6);
                  _0x2906f4 = _0x5707bd[0];
                  _0x1c2740 = _0x5707bd[1];
                  _0x2a8bbe = _0x5707bd[2];
                  _0x2170e4 = _0x5707bd[3];
                  _0x18c73a = _0x5707bd[4];
                  _0xef039b = _0x5707bd[5];
                  _0x175db2 = new _0x45b4c7(_0x2906f4, _0x1c2740, _0x2a8bbe);
                  _0x482f25 = new _0x45b4c7(_0x2170e4, _0x18c73a, _0xef039b);
                  _0x2a07ab = new _0x4c82ed(0, 0, 0);
                  _0x30a148 = [new _0x4c82ed(_0x175db2.x, _0x175db2.y, _0x2a8bbe), new _0x4c82ed(_0x175db2.x, _0x482f25.y, _0xef039b), new _0x4c82ed(_0x2170e4, _0x18c73a, _0xef039b), new _0x4c82ed(_0x482f25.x, _0x175db2.y, _0xef039b)];
                  return [4, _0x5abf99.getMainApartmentInformationCalc(_0x30a148, _0x2a07ab, _0x3b741d)];
                case 1:
                  _0x30255a.sent();
                  return [4, _0x5abf99.getCameraBoundsPositionApartment(_0x30a148, _0x2a07ab, _0x3b741d)];
                case 2:
                  _0x30255a.sent();
                  _0x5abf99.apartmentInformation.rotation = _0x4fd3df;
                  _0x5abf99.apartmentInformation.roomID = _0x3d1ef4;
                  _0x5abf99.apartmentInformation.roomHash = _0x59bf8f;
                  _0x5abf99.apartmentInformation.interiorID = _0x3b741d;
                  if (_0x5cfb53.size == 0) {
                    _0x5cfb53.set(_0x5abf99.databaseID, _0x5abf99);
                    _0x191711();
                  } else {
                    _0x5cfb53.set(_0x5abf99.databaseID, _0x5abf99);
                  }
                  _0x5ae69f.log("loading children of apartment ", _0x5abf99.model);
                  _0x1cae0f(_0x5abf99, false);
                  return [2, true];
              }
            });
          })();
        }
      }, {
        key: "getMainApartmentInformationCalc",
        value: function _0x3bb3e3(_0x38427c, _0x4a3d88, _0x576639) {
          var _0x56384e = this;
          return _0x6bca60(function () {
            var _0x27514a;
            var _0x1eaabe;
            var _0x53fc4d;
            var _0x204cd7;
            var _0x11104a;
            var _0x218928;
            var _0x243e26;
            var _0x273f9f;
            var _0x552c70;
            var _0x394d5a;
            var _0x51d59d;
            var _0x8b4e4c;
            var _0x173067;
            var _0x1893b5;
            var _0x717868;
            var _0x436f43;
            var _0xe9a3cc;
            var _0x9adfc7;
            var _0xdcc9bb;
            var _0x54a1f8;
            var _0x57fe35;
            var _0xbde77a;
            return _0x4b5af3(this, function (_0x1a247d) {
              _0x27514a = new _0x536320(_0x38427c[0], _0x38427c[1]);
              _0x1eaabe = new _0x4c82ed();
              _0x53fc4d = new _0x4c82ed();
              _0x27514a.closestPointToPoint(_0x38427c[2], true, _0x1eaabe);
              _0x53fc4d.subVectors(_0x38427c[2], _0x1eaabe).normalize();
              _0x38427c[2].add(_0x53fc4d.multiplyScalar(0.6));
              _0x204cd7 = new _0x4c82ed();
              _0x11104a = new _0x4c82ed();
              _0x27514a.closestPointToPoint(_0x38427c[3], true, _0x204cd7);
              _0x11104a.subVectors(_0x38427c[3], _0x204cd7).normalize();
              _0x38427c[3].add(_0x11104a.multiplyScalar(0.6));
              _0x218928 = _0x21193b.fromArray(GetInteriorRotation(_0x576639));
              _0x243e26 = new _0x2af827(_0x218928.x, _0x218928.y, _0x218928.z, _0x218928.w);
              _0x273f9f = _0x21193b.fromArray(GetEntityQuaternion(_0x56384e.refferenceObject));
              _0x552c70 = new _0x2af827(_0x273f9f.x, _0x273f9f.y, _0x273f9f.z, _0x273f9f.w);
              _0x394d5a = new _0x2af827();
              _0x394d5a.copy(_0x243e26);
              _0x51d59d = new _0x2af827();
              _0x51d59d.copy(_0x552c70).invert();
              _0x394d5a.multiply(_0x51d59d);
              _0x8b4e4c = [];
              _0x173067 = true;
              _0x1893b5 = false;
              _0x717868 = undefined;
              try {
                for (_0x436f43 = _0x38427c[Symbol.iterator](); !(_0x173067 = (_0xe9a3cc = _0x436f43.next()).done); _0x173067 = true) {
                  _0x9adfc7 = _0xe9a3cc.value;
                  _0xdcc9bb = _0x9adfc7.clone().sub(_0x4a3d88);
                  _0x54a1f8 = _0xdcc9bb.applyQuaternion(_0x243e26);
                  _0x57fe35 = _0x54a1f8.applyQuaternion(_0x394d5a);
                  _0xbde77a = _0x57fe35.add(_0x4a3d88);
                  _0x8b4e4c.push(new _0x45b4c7(_0xbde77a.x, _0xbde77a.y, _0xbde77a.z).add(_0x56384e.position));
                }
              } catch (_0x55affa) {
                _0x1893b5 = true;
                _0x717868 = _0x55affa;
              } finally {
                try {
                  if (!_0x173067 && _0x436f43.return != null) {
                    _0x436f43.return();
                  }
                } finally {
                  if (_0x1893b5) {
                    throw _0x717868;
                  }
                }
              }
              _0x56384e.apartmentInformation.points = _0x8b4e4c;
              return [2];
            });
          })();
        }
      }, {
        key: "getCameraBoundsPositionApartment",
        value: function _0x3f6acd(_0x3dd7c8, _0x2cfd66, _0x5171e0) {
          var _0x39038e = this;
          return _0x6bca60(function () {
            var _0x51eac1;
            var _0x4bd1b6;
            var _0x50bb72;
            var _0x308965;
            var _0x757378;
            var _0x2b3e97;
            var _0x2d6f71;
            var _0x4d8e85;
            var _0x181dde;
            var _0x52ab74;
            var _0x4d8c69;
            var _0xdd35a2;
            var _0x2bc1fd;
            var _0x19cb0a;
            var _0x26894d;
            var _0x419dc1;
            var _0x42ad7f;
            var _0x417fe5;
            return _0x4b5af3(this, function (_0x3c5372) {
              _0x51eac1 = 0.05;
              _0x3dd7c8[0].lerp(_0x2cfd66, _0x51eac1);
              _0x3dd7c8[1].lerp(_0x2cfd66, _0x51eac1);
              _0x3dd7c8[2].lerp(_0x2cfd66, _0x51eac1);
              _0x3dd7c8[3].lerp(_0x2cfd66, _0x51eac1);
              _0x4bd1b6 = _0x21193b.fromArray(GetInteriorRotation(_0x5171e0));
              _0x50bb72 = new _0x2af827(_0x4bd1b6.x, _0x4bd1b6.y, _0x4bd1b6.z, _0x4bd1b6.w);
              _0x308965 = _0x21193b.fromArray(GetEntityQuaternion(_0x39038e.refferenceObject));
              _0x757378 = new _0x2af827(_0x308965.x, _0x308965.y, _0x308965.z, _0x308965.w);
              _0x2b3e97 = new _0x2af827();
              _0x2b3e97.copy(_0x50bb72);
              _0x2d6f71 = new _0x2af827();
              _0x2d6f71.copy(_0x757378).invert();
              _0x2b3e97.multiply(_0x2d6f71);
              _0x4d8e85 = [];
              _0x181dde = true;
              _0x52ab74 = false;
              _0x4d8c69 = undefined;
              try {
                for (_0xdd35a2 = _0x3dd7c8[Symbol.iterator](); !(_0x181dde = (_0x2bc1fd = _0xdd35a2.next()).done); _0x181dde = true) {
                  _0x19cb0a = _0x2bc1fd.value;
                  _0x26894d = _0x19cb0a.clone().sub(_0x2cfd66);
                  _0x419dc1 = _0x26894d.applyQuaternion(_0x50bb72);
                  _0x42ad7f = _0x419dc1.applyQuaternion(_0x2b3e97);
                  _0x417fe5 = _0x42ad7f.add(_0x2cfd66);
                  _0x4d8e85.push(new _0x45b4c7(_0x417fe5.x, _0x417fe5.y, _0x417fe5.z).add(_0x39038e.position));
                }
              } catch (_0x5ad390) {
                _0x52ab74 = true;
                _0x4d8c69 = _0x5ad390;
              } finally {
                try {
                  if (!_0x181dde && _0xdd35a2.return != null) {
                    _0xdd35a2.return();
                  }
                } finally {
                  if (_0x52ab74) {
                    throw _0x4d8c69;
                  }
                }
              }
              _0x39038e.apartmentInformation.camPoints = _0x4d8e85;
              return [2];
            });
          })();
        }
      }, {
        key: "removeConnection",
        value: function _0x3857ab(_0x413113) {
          var _0x34e277 = this;
          return _0x6bca60(function () {
            var _0x1e9638;
            return _0x4b5af3(this, function (_0x27528a) {
              if (_0x34e277.connection[_0x413113]) {
                _0x1e9638 = _0x34e277.connection[_0x413113];
                _0x1e9638.stop();
                _0x1e9638.connectionType = "remove";
                _0x34e277.connection[_0x413113] = _0x1e9638;
                _0x34e277.connectionsAltered = true;
              }
              return [2];
            });
          })();
        }
      }, {
        key: "undoConnection",
        value: function _0x39114d(_0x248799) {
          var _0x30f6bd = this;
          if (_0x248799 != null && _0x248799.connectionType != null && this.connection[_0x248799.connectionType] != null) {
            this.connection[_0x248799.connectionType].stop();
            this.connection[_0x248799.connectionType] = null;
          }
          var _0x262553 = false;
          Object.keys(this.connection || {}).forEach(function (_0x49596a) {
            if (_0x30f6bd.connection[_0x49596a] != null) {
              _0x262553 = true;
            }
          });
          if (!_0x262553) {
            this.connection = {};
          }
        }
      }, {
        key: "correctlyGenerateConnection",
        value: function _0x433e21(_0x49f289) {
          var _0x51af59 = this;
          if (_0x49f289 == null || _0x49f289.length == 0 || !_0x49f289) {
            return;
          }
          this.stopAll();
          this.connection = {};
          _0x49f289.forEach(function (_0x19118e) {
            if (_0x19118e != null) {
              var _0x402407 = _0x19118e.connectionType;
              if (_0x402407 != null) {
                _0x51af59.connection[_0x402407] = new _0x4dc751[_0x402407](_0x19118e, _0x51af59);
                _0x51af59.connection[_0x402407].start();
              }
            }
          });
        }
      }, {
        key: "startAll",
        value: function _0x247768() {
          var _0x2ec4fd = this;
          Object.keys(this.connection || {}).forEach(function (_0x22fd58) {
            if (_0x2ec4fd.connection[_0x22fd58] != null) {
              var _0x2559c7 = _0x2ec4fd.connection[_0x22fd58];
              if (_0x2559c7 != null) {
                _0x2559c7.start();
              }
            }
          });
        }
      }, {
        key: "stopAll",
        value: function _0x1d202a() {
          var _0x58e580 = this;
          Object.keys(this.connection || {}).forEach(function (_0x5da73f) {
            if (_0x58e580.connection[_0x5da73f] != null) {
              var _0x31c8dc = _0x58e580.connection[_0x5da73f];
              if (_0x31c8dc != null) {
                _0x31c8dc.stop();
              }
            }
          });
        }
      }, {
        key: "correctlyAttatchConnection",
        value: function _0x5d188d(_0x17da2e) {
          if (_0x17da2e == null) {
            return;
          }
          this.connection[_0x17da2e.connectionType] = new _0x4dc751[_0x17da2e.connectionType](_0x17da2e, this);
        }
      }, {
        key: "updateConnection",
        value: function _0x5eef17(_0x3f001f, _0x103a9d) {
          if (_0x3f001f == null || _0x103a9d == null) {
            return;
          }
          var _0x5bddf9 = this.connection[_0x3f001f];
          if (_0x5bddf9 == null) {
            return;
          }
          _0x5bddf9.updateLocalData(_0x103a9d);
          this.connectionsAltered = true;
        }
      }, {
        key: "getConnection",
        value: function _0x5e9441(_0x4315a0) {
          if (_0x4315a0 == null) {
            return;
          }
          var _0x2ce963 = this.connection[_0x4315a0];
          if (_0x2ce963 != null) {
            return _0x2ce963;
          }
          return;
        }
      }, {
        key: "getAllConnectionIDs",
        value: function _0x270a4b() {
          var _0x1cfee9 = this;
          return _0x6bca60(function () {
            var _0x103dc7;
            return _0x4b5af3(this, function (_0x53dfa6) {
              _0x103dc7 = [];
              Object.keys(_0x1cfee9.connection || {}).forEach(function (_0x58d25b) {
                if (_0x1cfee9.connection[_0x58d25b] != undefined) {
                  var _0x48a0f9 = _0x1cfee9.connection[_0x58d25b];
                  if (_0x48a0f9 != undefined && _0x48a0f9 != null) {
                    _0x103dc7.push(_0x48a0f9.connectionID);
                  }
                }
              });
              _0x1cfee9.connectionID = _0x103dc7;
              return [2];
            });
          })();
        }
      }, {
        key: "getCurrentConnectionData",
        value: function _0x1318f4() {
          var _0x5a887d = this;
          return _0x6bca60(function () {
            var _0x5cc435;
            return _0x4b5af3(this, function (_0x194073) {
              _0x5cc435 = [];
              Object.keys(_0x5a887d.connection || {}).forEach(function (_0x21ffa6) {
                if (_0x21ffa6) {
                  var _0x352d83 = _0x5a887d.connection[_0x21ffa6];
                  if (_0x352d83 != null) {
                    var _0x3912b2;
                    _0x5cc435.push({
                      connectionID: _0x352d83.connectionID,
                      connectionType: _0x352d83.connectionType,
                      objectID: _0x5a887d.databaseID,
                      data: (_0x3912b2 = _0x5a887d.connection[_0x21ffa6]) === null || _0x3912b2 === undefined ? undefined : _0x3912b2.dataToJson()
                    });
                  }
                }
              });
              _0x5a887d.databaseConnectionData = _0x5cc435;
              return [2, _0x5cc435];
            });
          })();
        }
      }]);
      return _0x19026e;
    }();
    ;
    var _0x467cd0 = globalThis.NPX;
    var _0x18d5ec = _0x467cd0.Hud;
    var _0x301cd5 = _0x467cd0.Utils;
    var _0x4eeef6 = _0x467cd0.Zones;
    var _0x386279 = _0x467cd0.Events;
    var _0x4f7f79 = _0x467cd0.Streaming;
    var _0x58f2b5 = _0x467cd0.Procedures;
    var _0x4ac915 = _0x467cd0.Interface;
    const _0x35c471 = null && _0x467cd0;
    ;
    function _0x11982c(_0x134f7a, _0x3fd914, _0x350d8d, _0x40142a, _0x6b98ff, _0x531849, _0x3a2e63) {
      try {
        var _0x20cde0 = _0x134f7a[_0x531849](_0x3a2e63);
        var _0x547a1c = _0x20cde0.value;
      } catch (_0x2e2847) {
        _0x350d8d(_0x2e2847);
        return;
      }
      if (_0x20cde0.done) {
        _0x3fd914(_0x547a1c);
      } else {
        Promise.resolve(_0x547a1c).then(_0x40142a, _0x6b98ff);
      }
    }
    function _0x4d999d(_0x1d21d0) {
      return function () {
        var _0x3dedc3 = this;
        var _0x2a0fea = arguments;
        return new Promise(function (_0x1c7c2c, _0x1bba2c) {
          var _0x4ab346 = _0x1d21d0.apply(_0x3dedc3, _0x2a0fea);
          function _0x4fb714(_0xc8a14f) {
            _0x11982c(_0x4ab346, _0x1c7c2c, _0x1bba2c, _0x4fb714, _0x162916, "next", _0xc8a14f);
          }
          function _0x162916(_0x3cc974) {
            _0x11982c(_0x4ab346, _0x1c7c2c, _0x1bba2c, _0x4fb714, _0x162916, "throw", _0x3cc974);
          }
          _0x4fb714(undefined);
        });
      };
    }
    function _0xdb8cb8(_0x29b2ca, _0x44fc7a) {
      var _0x10e806;
      var _0x4cb4f0;
      var _0x54d21d;
      var _0x5cbe1d;
      var _0x5ec772 = {
        label: 0,
        sent: function () {
          if (_0x54d21d[0] & 1) {
            throw _0x54d21d[1];
          }
          return _0x54d21d[1];
        },
        trys: [],
        ops: []
      };
      _0x5cbe1d = {
        next: _0x12d309(0),
        throw: _0x12d309(1),
        return: _0x12d309(2)
      };
      if (typeof Symbol === "function") {
        _0x5cbe1d[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5cbe1d;
      function _0x12d309(_0x127b30) {
        return function (_0xf0b9ce) {
          return _0x133dda([_0x127b30, _0xf0b9ce]);
        };
      }
      function _0x133dda(_0x4c68eb) {
        if (_0x10e806) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x5ec772) {
          try {
            _0x10e806 = 1;
            if (_0x4cb4f0 && (_0x54d21d = _0x4c68eb[0] & 2 ? _0x4cb4f0.return : _0x4c68eb[0] ? _0x4cb4f0.throw || ((_0x54d21d = _0x4cb4f0.return) && _0x54d21d.call(_0x4cb4f0), 0) : _0x4cb4f0.next) && !(_0x54d21d = _0x54d21d.call(_0x4cb4f0, _0x4c68eb[1])).done) {
              return _0x54d21d;
            }
            _0x4cb4f0 = 0;
            if (_0x54d21d) {
              _0x4c68eb = [_0x4c68eb[0] & 2, _0x54d21d.value];
            }
            switch (_0x4c68eb[0]) {
              case 0:
              case 1:
                _0x54d21d = _0x4c68eb;
                break;
              case 4:
                _0x5ec772.label++;
                var _0x2f5bac = {
                  value: _0x4c68eb[1],
                  done: false
                };
                return _0x2f5bac;
              case 5:
                _0x5ec772.label++;
                _0x4cb4f0 = _0x4c68eb[1];
                _0x4c68eb = [0];
                continue;
              case 7:
                _0x4c68eb = _0x5ec772.ops.pop();
                _0x5ec772.trys.pop();
                continue;
              default:
                if (!(_0x54d21d = _0x5ec772.trys, _0x54d21d = _0x54d21d.length > 0 && _0x54d21d[_0x54d21d.length - 1]) && (_0x4c68eb[0] === 6 || _0x4c68eb[0] === 2)) {
                  _0x5ec772 = 0;
                  continue;
                }
                if (_0x4c68eb[0] === 3 && (!_0x54d21d || _0x4c68eb[1] > _0x54d21d[0] && _0x4c68eb[1] < _0x54d21d[3])) {
                  _0x5ec772.label = _0x4c68eb[1];
                  break;
                }
                if (_0x4c68eb[0] === 6 && _0x5ec772.label < _0x54d21d[1]) {
                  _0x5ec772.label = _0x54d21d[1];
                  _0x54d21d = _0x4c68eb;
                  break;
                }
                if (_0x54d21d && _0x5ec772.label < _0x54d21d[2]) {
                  _0x5ec772.label = _0x54d21d[2];
                  _0x5ec772.ops.push(_0x4c68eb);
                  break;
                }
                if (_0x54d21d[2]) {
                  _0x5ec772.ops.pop();
                }
                _0x5ec772.trys.pop();
                continue;
            }
            _0x4c68eb = _0x44fc7a.call(_0x29b2ca, _0x5ec772);
          } catch (_0x28417c) {
            _0x4c68eb = [6, _0x28417c];
            _0x4cb4f0 = 0;
          } finally {
            _0x10e806 = _0x54d21d = 0;
          }
        }
        if (_0x4c68eb[0] & 5) {
          throw _0x4c68eb[1];
        }
        var _0x43bf57 = {
          value: _0x4c68eb[0] ? _0x4c68eb[1] : undefined,
          done: true
        };
        return _0x43bf57;
      }
    }
    var _0x2dcebb = function () {
      var _0x4939ee = _0x4d999d(function (_0x3d9f36) {
        var _0x4ff14b;
        var _0x239ad7;
        var _0x21a3f4;
        var _0x7118c2;
        var _0xedac9e;
        var _0x4ba1e4;
        var _0x5cc64d;
        var _0x14cbd2;
        var _0x1979ad;
        return _0xdb8cb8(this, function (_0x32ed47) {
          switch (_0x32ed47.label) {
            case 0:
              if (!_0x181a57) {
                return [3, 8];
              }
              _0x4ff14b = _0x4c6bb4.get(_0x181a57.databaseID);
              _0x239ad7 = [];
              for (_0x21a3f4 in _0x4ff14b) {
                _0x239ad7.push(_0x21a3f4);
              }
              _0x7118c2 = 0;
              _0x32ed47.label = 1;
            case 1:
              if (_0x7118c2 >= _0x239ad7.length) {
                return [3, 8];
              }
              _0xedac9e = _0x239ad7[_0x7118c2];
              _0x4ba1e4 = _0x4ff14b[_0xedac9e];
              _0x5cc64d = _0x2b98da.get(_0x4ba1e4);
              if (!_0x5cc64d || !_0x5cc64d.model.includes("np_building_apt_")) {
                return [3, 7];
              }
              _0x14cbd2 = _0x471644[_0x3d9f36];
              if (!_0x14cbd2) {
                return [3, 6];
              }
              return [4, _0x5cc64d.removeObject()];
            case 2:
              _0x32ed47.sent();
              _0x5cc64d.model = _0x14cbd2;
              return [4, _0x5cc64d.renderObject()];
            case 3:
              _0x32ed47.sent();
              _0x2b98da.set(_0x5cc64d.databaseID, _0x5cc64d);
              return [4, _0x38d174(_0x5cc64d)];
            case 4:
              _0x1979ad = _0x32ed47.sent();
              if (!_0x1979ad) {
                return [3, 6];
              }
              _0x5cc64d.position = _0x1979ad[0];
              _0x5cc64d.quat = _0x1979ad[1];
              return [4, NPX.Procedures.execute("np-editor:saveApartmentWall", _0x181a57, _0x5cc64d)];
            case 5:
              _0x32ed47.sent();
              _0x46f2b0.reset(_0x181a57.databaseID);
              _0x32ed47.label = 6;
            case 6:
              return [3, 8];
            case 7:
              _0x7118c2++;
              return [3, 1];
            case 8:
              return [2];
          }
        });
      });
      return function _0x5e9cab(_0x3cc8fc) {
        return _0x4939ee.apply(this, arguments);
      };
    }();
    var _0x29a47c = function () {
      var _0x53ea4b = _0x4d999d(function () {
        var _0x69961a;
        var _0x44f569;
        var _0x277cac;
        var _0x5a7262;
        var _0xfe548a;
        var _0x5d40b9;
        return _0xdb8cb8(this, function (_0xee8ec3) {
          if (_0x181a57) {
            _0x69961a = _0x4c6bb4.get(_0x181a57.databaseID);
            for (var _0x94c16a in _0x69961a) {
              _0x277cac = _0x69961a[_0x94c16a];
              _0x5a7262 = _0x2b98da.get(_0x277cac);
              if (_0x5a7262 && _0x5a7262.model.includes("np_building_apt_")) {
                for (_0xfe548a = 0; _0xfe548a < _0x471644.length; _0xfe548a++) {
                  _0x5d40b9 = _0x471644[_0xfe548a];
                  if (_0x5d40b9 == _0x5a7262.model) {
                    return [2, _0xfe548a];
                  }
                }
              }
            }
          }
          return [2, 0];
        });
      });
      return function _0xd95339() {
        return _0x53ea4b.apply(this, arguments);
      };
    }();
    ;
    var _0x5966a0 = _0x5f5650(480);
    function _0x4dc81e(_0x412b4c, _0x4d7ea8) {
      if (_0x4d7ea8 == null || _0x4d7ea8 > _0x412b4c.length) {
        _0x4d7ea8 = _0x412b4c.length;
      }
      for (var _0x5e33c9 = 0, _0x3ad28b = new Array(_0x4d7ea8); _0x5e33c9 < _0x4d7ea8; _0x5e33c9++) {
        _0x3ad28b[_0x5e33c9] = _0x412b4c[_0x5e33c9];
      }
      return _0x3ad28b;
    }
    function _0x3da5f2(_0x4e359a) {
      if (Array.isArray(_0x4e359a)) {
        return _0x4e359a;
      }
    }
    function _0x5e061b(_0x7d0c20, _0x1165a5, _0x476d49, _0x559285, _0x608a8e, _0x56a81d, _0x45ad59) {
      try {
        var _0x3c14fd = _0x7d0c20[_0x56a81d](_0x45ad59);
        var _0x2c21af = _0x3c14fd.value;
      } catch (_0x4c2f6a) {
        _0x476d49(_0x4c2f6a);
        return;
      }
      if (_0x3c14fd.done) {
        _0x1165a5(_0x2c21af);
      } else {
        Promise.resolve(_0x2c21af).then(_0x559285, _0x608a8e);
      }
    }
    function _0x3bef29(_0x5b3fda) {
      return function () {
        var _0x1864c4 = this;
        var _0x1cd2f1 = arguments;
        return new Promise(function (_0x12ccf8, _0x57b68f) {
          var _0x1e4aaa = _0x5b3fda.apply(_0x1864c4, _0x1cd2f1);
          function _0x325512(_0x4002bd) {
            _0x5e061b(_0x1e4aaa, _0x12ccf8, _0x57b68f, _0x325512, _0x177ee6, "next", _0x4002bd);
          }
          function _0x177ee6(_0x2ba3c0) {
            _0x5e061b(_0x1e4aaa, _0x12ccf8, _0x57b68f, _0x325512, _0x177ee6, "throw", _0x2ba3c0);
          }
          _0x325512(undefined);
        });
      };
    }
    function _0x5ba241(_0xad67bd, _0x28e3b3) {
      var _0x1d3d96 = _0xad67bd == null ? null : typeof Symbol !== "undefined" && _0xad67bd[Symbol.iterator] || _0xad67bd["@@iterator"];
      if (_0x1d3d96 == null) {
        return;
      }
      var _0x36d4cb = [];
      var _0x5e84c3 = true;
      var _0x367f0a = false;
      var _0x26a3f8;
      var _0x1a3c61;
      try {
        for (_0x1d3d96 = _0x1d3d96.call(_0xad67bd); !(_0x5e84c3 = (_0x26a3f8 = _0x1d3d96.next()).done); _0x5e84c3 = true) {
          _0x36d4cb.push(_0x26a3f8.value);
          if (_0x28e3b3 && _0x36d4cb.length === _0x28e3b3) {
            break;
          }
        }
      } catch (_0x4e0791) {
        _0x367f0a = true;
        _0x1a3c61 = _0x4e0791;
      } finally {
        try {
          if (!_0x5e84c3 && _0x1d3d96.return != null) {
            _0x1d3d96.return();
          }
        } finally {
          if (_0x367f0a) {
            throw _0x1a3c61;
          }
        }
      }
      return _0x36d4cb;
    }
    function _0x2ff445() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _0x21aa20(_0x1a2206, _0x2c7972) {
      return _0x3da5f2(_0x1a2206) || _0x5ba241(_0x1a2206, _0x2c7972) || _0x15a385(_0x1a2206, _0x2c7972) || _0x2ff445();
    }
    function _0x15a385(_0x1144de, _0x1d9c88) {
      if (!_0x1144de) {
        return;
      }
      if (typeof _0x1144de === "string") {
        return _0x4dc81e(_0x1144de, _0x1d9c88);
      }
      var _0x428387 = Object.prototype.toString.call(_0x1144de).slice(8, -1);
      if (_0x428387 === "Object" && _0x1144de.constructor) {
        _0x428387 = _0x1144de.constructor.name;
      }
      if (_0x428387 === "Map" || _0x428387 === "Set") {
        return Array.from(_0x428387);
      }
      if (_0x428387 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(_0x428387)) {
        return _0x4dc81e(_0x1144de, _0x1d9c88);
      }
    }
    function _0x11ac31(_0xa6e0c0, _0x4f9feb) {
      var _0x41d5a6;
      var _0x4d2bf8;
      var _0x2417a5;
      var _0x6fc5bc;
      var _0x47e92a = {
        label: 0,
        sent: function () {
          if (_0x2417a5[0] & 1) {
            throw _0x2417a5[1];
          }
          return _0x2417a5[1];
        },
        trys: [],
        ops: []
      };
      _0x6fc5bc = {
        next: _0x4fda31(0),
        throw: _0x4fda31(1),
        return: _0x4fda31(2)
      };
      if (typeof Symbol === "function") {
        _0x6fc5bc[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x6fc5bc;
      function _0x4fda31(_0x42d2b3) {
        return function (_0xd9ee03) {
          return _0x293e4c([_0x42d2b3, _0xd9ee03]);
        };
      }
      function _0x293e4c(_0x3c728a) {
        if (_0x41d5a6) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x47e92a) {
          try {
            _0x41d5a6 = 1;
            if (_0x4d2bf8 && (_0x2417a5 = _0x3c728a[0] & 2 ? _0x4d2bf8.return : _0x3c728a[0] ? _0x4d2bf8.throw || ((_0x2417a5 = _0x4d2bf8.return) && _0x2417a5.call(_0x4d2bf8), 0) : _0x4d2bf8.next) && !(_0x2417a5 = _0x2417a5.call(_0x4d2bf8, _0x3c728a[1])).done) {
              return _0x2417a5;
            }
            _0x4d2bf8 = 0;
            if (_0x2417a5) {
              _0x3c728a = [_0x3c728a[0] & 2, _0x2417a5.value];
            }
            switch (_0x3c728a[0]) {
              case 0:
              case 1:
                _0x2417a5 = _0x3c728a;
                break;
              case 4:
                _0x47e92a.label++;
                var _0x409997 = {
                  value: _0x3c728a[1],
                  done: false
                };
                return _0x409997;
              case 5:
                _0x47e92a.label++;
                _0x4d2bf8 = _0x3c728a[1];
                _0x3c728a = [0];
                continue;
              case 7:
                _0x3c728a = _0x47e92a.ops.pop();
                _0x47e92a.trys.pop();
                continue;
              default:
                if (!(_0x2417a5 = _0x47e92a.trys, _0x2417a5 = _0x2417a5.length > 0 && _0x2417a5[_0x2417a5.length - 1]) && (_0x3c728a[0] === 6 || _0x3c728a[0] === 2)) {
                  _0x47e92a = 0;
                  continue;
                }
                if (_0x3c728a[0] === 3 && (!_0x2417a5 || _0x3c728a[1] > _0x2417a5[0] && _0x3c728a[1] < _0x2417a5[3])) {
                  _0x47e92a.label = _0x3c728a[1];
                  break;
                }
                if (_0x3c728a[0] === 6 && _0x47e92a.label < _0x2417a5[1]) {
                  _0x47e92a.label = _0x2417a5[1];
                  _0x2417a5 = _0x3c728a;
                  break;
                }
                if (_0x2417a5 && _0x47e92a.label < _0x2417a5[2]) {
                  _0x47e92a.label = _0x2417a5[2];
                  _0x47e92a.ops.push(_0x3c728a);
                  break;
                }
                if (_0x2417a5[2]) {
                  _0x47e92a.ops.pop();
                }
                _0x47e92a.trys.pop();
                continue;
            }
            _0x3c728a = _0x4f9feb.call(_0xa6e0c0, _0x47e92a);
          } catch (_0x5e0d48) {
            _0x3c728a = [6, _0x5e0d48];
            _0x4d2bf8 = 0;
          } finally {
            _0x41d5a6 = _0x2417a5 = 0;
          }
        }
        if (_0x3c728a[0] & 5) {
          throw _0x3c728a[1];
        }
        var _0x5cf461 = {
          value: _0x3c728a[0] ? _0x3c728a[1] : undefined,
          done: true
        };
        return _0x5cf461;
      }
    }
    function _0x4694a8(_0x38b546) {
      var _0x44cd37 = typeof Symbol === "function" && Symbol.iterator;
      var _0x2dc2e2 = _0x44cd37 && _0x38b546[_0x44cd37];
      var _0x2edcfe = 0;
      if (_0x2dc2e2) {
        return _0x2dc2e2.call(_0x38b546);
      }
      if (_0x38b546 && typeof _0x38b546.length === "number") {
        return {
          next: function () {
            if (_0x38b546 && _0x2edcfe >= _0x38b546.length) {
              _0x38b546 = undefined;
            }
            var _0x256b15 = {
              value: _0x38b546 && _0x38b546[_0x2edcfe++],
              done: !_0x38b546
            };
            return _0x256b15;
          }
        };
      }
      throw new TypeError(_0x44cd37 ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    var _0x1976be = new _0x47b9b7();
    var _0x34cc43 = false;
    var _0x352dad = 0;
    var _0x28c282 = 0;
    var _0x57f65d = new Map();
    function _0x1680b3() {
      return _0x4ee243.apply(this, arguments);
    }
    function _0x4ee243() {
      _0x4ee243 = _0x3bef29(function () {
        return _0x11ac31(this, function (_0x179149) {
          RegisterCommand("e-exit", function (_0x104fc, _0xd432a5) {
            _0x179abe.setState("none");
          }, false);
          RegisterCommand("+entereditor", function () {
            var _0x498b95 = _0x3bef29(function (_0x37d426, _0x3bde1d) {
              var _0xbf8338;
              var _0x317bc4;
              return _0x11ac31(this, function (_0x3a35d0) {
                switch (_0x3a35d0.label) {
                  case 0:
                    _0xbf8338 = _0x15a991.Sync.config.GetMiscConfig("spawn.apartments.only") ?? true;
                    if (_0xbf8338) {
                      return [2];
                    }
                    if (!!_0x503f2d) {
                      return [3, 2];
                    }
                    return [4, _0x250817()];
                  case 1:
                    _0x317bc4 = _0x3a35d0.sent();
                    if (_0x317bc4) {
                      if (!_0x200f99.get("startingView")) {
                        _0x200f99.set("startingView", 3);
                      }
                      switch (_0x200f99.get("startingView")) {
                        case 2:
                          _0x179abe.setState("GizmoNoCam");
                          break;
                        case 3:
                          _0x179abe.setState("GizmoCam");
                          break;
                        default:
                          _0x179abe.setState("GizmoCam");
                          break;
                      }
                    }
                    _0x3a35d0.label = 2;
                  case 2:
                    return [2];
                }
              });
            });
            return function (_0x49e436, _0x230d06) {
              return _0x498b95.apply(this, arguments);
            };
          }(), false);
          RegisterCommand("-entereditor", function (_0x283294, _0x1d1f58) {}, false);
          setImmediate(function () {
            _0x58f2b5.execute("np-datagrid:subscribe", "editor");
            exports["np-keybinds"].registerKeyMapping("", "Editor", "Enter Editor", "+entereditor", "-entereditor");
          });
          return [2];
        });
      });
      return _0x4ee243.apply(this, arguments);
    }
    onNet("np-datagrid:updates", function () {
      var _0x2cc9ef = _0x3bef29(function (_0x4d78d2, _0x1b7036, _0x207127, _0x56738f, _0x5967b1, _0x3f27b9, _0x3bcd58) {
        var _0x166817;
        var _0x435776;
        var _0x1da965;
        var _0x69d38;
        var _0x30af67;
        var _0x3f3638;
        var _0x9df858;
        var _0x3046bc;
        var _0x4469d0;
        var _0x53474d;
        var _0x5d1ede;
        var _0x4c04a2;
        var _0x411122;
        var _0x3b7dbd;
        var _0x1a6211;
        var _0x1fd20a;
        var _0x2eedd3;
        var _0x80400c;
        var _0x8e9399;
        var _0x537d11;
        var _0x2d087d;
        var _0x579fbf;
        var _0x10c092;
        var _0x2dc7fe;
        var _0x761834;
        var _0x3aedd2;
        var _0x1a6211;
        var _0x11ba54;
        var _0x2a1aab;
        var _0x391803;
        var _0x9938e;
        var _0xfdcb6d;
        var _0x1b9b47;
        var _0x158f7f;
        var _0x340ff3;
        var _0x2079f7;
        return _0x11ac31(this, function (_0x164336) {
          switch (_0x164336.label) {
            case 0:
              _0x166817 = function (_0x49eff5) {
                var _0x76d0aa;
                var _0x44f3f1;
                return _0x11ac31(this, function (_0x371f61) {
                  switch (_0x371f61.label) {
                    case 0:
                      _0x76d0aa = _0x1b7036.slice(_0x49eff5, _0x49eff5 + _0x1da965);
                      _0x44f3f1 = setTick(_0x3bef29(function () {
                        var _0x4118bf;
                        var _0x1e0ef4;
                        var _0x2091fc;
                        var _0xe6ff76;
                        var _0x1b7a54;
                        var _0x136877;
                        return _0x11ac31(this, function (_0x2a588b) {
                          for (var _0x74137d in _0x76d0aa) {
                            _0x1e0ef4 = _0x76d0aa[_0x74137d];
                            _0x2091fc = _0x1e0ef4.id;
                            _0xe6ff76 = _0x1e0ef4.data._id;
                            _0x1b7a54 = _0x21193b.fromArray(_0x1e0ef4.data._q.split(",").map(function (_0x55fc6f) {
                              return parseFloat(_0x55fc6f);
                            }));
                            if (!_0x2b98da.has(_0xe6ff76)) {
                              _0x136877 = new _0x4a89e0(new _0x45b4c7(_0x1e0ef4.x, _0x1e0ef4.y, _0x1e0ef4.z), new _0x21193b(+_0x1b7a54.x.toFixed(14), +_0x1b7a54.y.toFixed(14), +_0x1b7a54.z.toFixed(14), +_0x1b7a54.w.toFixed(14)), _0x1e0ef4.data._m, _0x1e0ef4.data._p, _0x1e0ef4.data._l, _0xe6ff76, _0x1e0ef4.data._w, _0x1e0ef4.data._hsc, true, _0x1e0ef4.data.grpid, _0x1e0ef4.data.isblt, _0x1e0ef4.data._cndta);
                              if (_0x136877.model.includes("DUMMY")) {
                                _0x57f65d.set(_0x2091fc, _0xe6ff76);
                              }
                              _0x2b98da.set(_0xe6ff76, _0x136877);
                              _0x136877.attemptToRender();
                            }
                          }
                          clearTick(_0x44f3f1);
                          return [2];
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0x371f61.sent();
                      return [2];
                  }
                });
              };
              _0x435776 = function (_0x568a9f) {
                var _0x220719;
                var _0xd90b72;
                return _0x11ac31(this, function (_0x1f3d23) {
                  switch (_0x1f3d23.label) {
                    case 0:
                      _0x220719 = _0x3f27b9.slice(_0x568a9f, _0x568a9f + _0x1da965);
                      _0xd90b72 = setTick(_0x3bef29(function () {
                        var _0xc81c37;
                        var _0x1d162a;
                        var _0x32a8a1;
                        var _0x3e6e58;
                        var _0x53de7b;
                        var _0x25cebd;
                        var _0x3b0fc2;
                        var _0x218556;
                        var _0x448aa3;
                        return _0x11ac31(this, function (_0x9dafcd) {
                          switch (_0x9dafcd.label) {
                            case 0:
                              _0xc81c37 = [];
                              for (_0x1d162a in _0x220719) {
                                _0xc81c37.push(_0x1d162a);
                              }
                              _0x32a8a1 = 0;
                              _0x9dafcd.label = 1;
                            case 1:
                              if (_0x32a8a1 >= _0xc81c37.length) {
                                return [3, 4];
                              }
                              _0x3e6e58 = _0xc81c37[_0x32a8a1];
                              _0x53de7b = _0x220719[_0x3e6e58];
                              _0x25cebd = _0x53de7b;
                              _0x3b0fc2 = _0x57f65d.get(_0x25cebd);
                              if (!_0x3b0fc2) {
                                return [3, 3];
                              }
                              _0x218556 = _0x2b98da.get(_0x3b0fc2);
                              if (!_0x218556) {
                                return [3, 3];
                              }
                              _0x448aa3 = _0x2b98da.get(_0x218556.databaseID);
                              if (!_0x448aa3) {
                                return [3, 3];
                              }
                              return [4, _0x46004c(_0x448aa3, 1)];
                            case 2:
                              _0x9dafcd.sent();
                              _0x9dafcd.label = 3;
                            case 3:
                              _0x32a8a1++;
                              return [3, 1];
                            case 4:
                              clearTick(_0xd90b72);
                              return [2];
                          }
                        });
                      }));
                      return [4, _0x4e43fe(10)];
                    case 1:
                      _0x1f3d23.sent();
                      return [2];
                  }
                });
              };
              if (_0x4d78d2 !== "editor") {
                return [2];
              }
              _0x5966a0.log("reciving datagrid update");
              _0x1da965 = 5;
              _0x69d38 = [];
              _0x30af67 = [];
              _0x3f3638 = true;
              return [4, _0x1be418()];
            case 1:
              _0x164336.sent();
              _0x9df858 = 0;
              _0x164336.label = 2;
            case 2:
              if (_0x9df858 >= _0x1b7036.length) {
                return [3, 5];
              }
              return [5, _0x4694a8(_0x166817(_0x9df858))];
            case 3:
              _0x164336.sent();
              _0x164336.label = 4;
            case 4:
              _0x9df858 += _0x1da965;
              return [3, 2];
            case 5:
              _0x56738f.forEach(function (_0x2bc6cd) {
                var _0x460d69 = _0x2bc6cd.id;
                var _0x1987b7 = _0x2bc6cd.updatedItem;
                var _0x5d6970 = _0x2bc6cd.data;
                _0x1976be.add(_0x460d69, _0x3bef29(function () {
                  var _0x3c7d27;
                  var _0x456ecd;
                  var _0xf931d4;
                  var _0x202e37;
                  var _0x4a5216;
                  var _0x20b4f6;
                  var _0x576bdc;
                  var _0x58c8a6;
                  var _0x4d4159;
                  var _0x5e711e;
                  var _0xa9244b;
                  var _0x62930;
                  var _0x39e787;
                  var _0x376419;
                  var _0x20e423;
                  var _0x57e2a9;
                  var _0x14e235;
                  var _0x6a3456;
                  var _0x488651;
                  var _0x44c578;
                  var _0x1cbfe0;
                  var _0x481f4f;
                  var _0x564cd4;
                  var _0x4757ed;
                  var _0x4eaa13;
                  var _0x51d361;
                  return _0x11ac31(this, function (_0x2b5957) {
                    switch (_0x2b5957.label) {
                      case 0:
                        _0x5966a0.log("updating datagrid item");
                        _0x3c7d27 = _0x460d69;
                        _0x456ecd = _0x57f65d.get(_0x3c7d27) ?? _0x5d6970._id;
                        _0xf931d4 = _0x2b98da.get(_0x456ecd);
                        _0x202e37 = _0x21193b.fromArray(_0x5d6970._q.split(",").map(function (_0x5a017f) {
                          return parseFloat(_0x5a017f);
                        }));
                        _0x4a5216 = new _0x21193b(+_0x202e37.x.toFixed(14), +_0x202e37.y.toFixed(14), +_0x202e37.z.toFixed(14), +_0x202e37.w.toFixed(14));
                        if (_0x5d6970._dltId) {
                          for (var _0x21981b in _0x5d6970._dltId) {
                            _0x576bdc = _0x5d6970._dltId[_0x21981b];
                            _0x58c8a6 = _0x2b98da.get(_0x576bdc);
                            if (_0x58c8a6) {
                              _0x58c8a6.removeObject();
                              _0x2b98da.delete(_0x576bdc);
                            }
                          }
                        }
                        if (!_0xf931d4 || !_0x4a5216) {
                          return [3, 19];
                        }
                        if (_0x56738f.length != 1) {
                          return [3, 17];
                        }
                        if (!_0xf931d4.isHousing && !_0xf931d4.isApartment || !_0x4c08c6.get(_0x456ecd) || !_0xf931d4.interiorID) {
                          return [3, 15];
                        }
                        _0x4d4159 = _0xf35f0d.get(_0xf931d4.interiorID);
                        if (!_0x4d4159 || !_0x4d4159.inside) {
                          return [3, 13];
                        }
                        _0x5966a0.log("reset data on update for ", _0xf931d4.model);
                        _0x46f2b0.reset(_0x456ecd);
                        return [4, _0x46f2b0.get(_0x456ecd)];
                      case 1:
                        _0x5e711e = _0x2b5957.sent();
                        if (!_0x5e711e) {
                          return [3, 12];
                        }
                        _0xa9244b = true;
                        _0x62930 = false;
                        _0x39e787 = undefined;
                        _0x2b5957.label = 2;
                      case 2:
                        _0x2b5957.trys.push([2, 10, 11, 12]);
                        _0x376419 = _0x5e711e.entries()[Symbol.iterator]();
                        _0x2b5957.label = 3;
                      case 3:
                        if (!!(_0xa9244b = (_0x20e423 = _0x376419.next()).done)) {
                          return [3, 9];
                        }
                        _0x57e2a9 = _0x21aa20(_0x20e423.value, 2);
                        _0x14e235 = _0x57e2a9[0];
                        _0x6a3456 = _0x57e2a9[1];
                        _0x488651 = _0x2b98da.get(_0x6a3456.databaseID);
                        if (!_0x488651) {
                          return [3, 6];
                        }
                        _0x44c578 = _0x45b4c7.fromArray(_0x6a3456.position);
                        _0x1cbfe0 = _0x21193b.fromArray(_0x6a3456.quat);
                        _0x488651.updateObject(_0x44c578, _0x1cbfe0);
                        if (_0x488651.parent != _0x6a3456.parent) {
                          _0x488651.parent = _0x6a3456.parent;
                          _0x30af67.push(_0x488651);
                        }
                        if (!_0xf931d4.isApartment || !_0x488651.lead) {
                          return [3, 5];
                        }
                        return [4, _0xbc57e7(_0x488651)];
                      case 4:
                        _0x481f4f = _0x2b5957.sent();
                        if (_0x481f4f) {
                          _0x488651.position = _0x481f4f[0];
                          _0x488651.quat = _0x481f4f[1];
                          _0x488651.updateObject(_0x488651.position, _0x488651.quat);
                        }
                        _0x2b5957.label = 5;
                      case 5:
                        if (_0x6a3456.connections) {
                          _0x488651.correctlyGenerateConnection(_0x6a3456.connections);
                        }
                        _0x488651.isBuilt = _0x6a3456.isBuilt;
                        _0x488651.attemptToRender();
                        if (!_0x488651.isSaved) {
                          _0x488651.OnObjectSave();
                        }
                        _0x2b98da.set(_0x488651.databaseID, _0x488651);
                        return [3, 8];
                      case 6:
                        _0x564cd4 = new _0x4a89e0(_0x45b4c7.fromArray(_0x6a3456.position), _0x21193b.fromArray(_0x6a3456.quat), _0x6a3456.model, _0x6a3456.parent, _0x6a3456.lead, _0x6a3456.databaseID, _0x6a3456.world, _0x6a3456.hasChild, true, _0x6a3456.groupIndex, _0x6a3456.isBuilt, _0x6a3456.connections);
                        _0x2b98da.set(_0x564cd4.databaseID, _0x564cd4);
                        return [4, _0x46004c(_0x564cd4, 1)];
                      case 7:
                        _0x2b5957.sent();
                        _0x564cd4.attemptToRender();
                        _0x564cd4.CheckIsChildOfNonLoad();
                        _0x2b5957.label = 8;
                      case 8:
                        _0xa9244b = true;
                        return [3, 3];
                      case 9:
                        return [3, 12];
                      case 10:
                        _0x4757ed = _0x2b5957.sent();
                        _0x62930 = true;
                        _0x39e787 = _0x4757ed;
                        return [3, 12];
                      case 11:
                        try {
                          if (!_0xa9244b && _0x376419.return != null) {
                            _0x376419.return();
                          }
                        } finally {
                          if (_0x62930) {
                            throw _0x39e787;
                          }
                        }
                        return [7];
                      case 12:
                        return [3, 14];
                      case 13:
                        _0xf931d4.updateObject(new _0x45b4c7(_0x1987b7.x, _0x1987b7.y, _0x1987b7.z), _0x4a5216);
                        _0x2b5957.label = 14;
                      case 14:
                        return [3, 16];
                      case 15:
                        _0xf931d4.updateObject(new _0x45b4c7(_0x1987b7.x, _0x1987b7.y, _0x1987b7.z), _0x4a5216);
                        _0x2b5957.label = 16;
                      case 16:
                        return [3, 18];
                      case 17:
                        _0xf931d4.updateObject(new _0x45b4c7(_0x1987b7.x, _0x1987b7.y, _0x1987b7.z), _0x4a5216);
                        _0x2b5957.label = 18;
                      case 18:
                        return [3, 20];
                      case 19:
                        _0x4eaa13 = _0x21193b.fromArray(_0x1987b7.data._q.split(",").map(function (_0x2586fa) {
                          return parseFloat(_0x2586fa);
                        }));
                        _0x51d361 = new _0x4a89e0(new _0x45b4c7(_0x1987b7.x, _0x1987b7.y, _0x1987b7.z), new _0x21193b(+_0x4eaa13.x.toFixed(14), +_0x4eaa13.y.toFixed(14), +_0x4eaa13.z.toFixed(14), +_0x4eaa13.w.toFixed(14)), _0x1987b7.data._m, _0x1987b7.data._p, _0x1987b7.data._l, _0x1987b7.data._id, _0x1987b7.data._w, _0x1987b7.data._hsc, true, _0x1987b7.data.grpid, _0x1987b7.data.isblt, _0x1987b7.data._cndta);
                        _0x2b98da.set(_0x1987b7.data._id, _0x51d361);
                        _0x51d361.attemptToRender();
                        _0x69d38.push(_0x51d361);
                        _0x2b5957.label = 20;
                      case 20:
                        _0x3f3638 = false;
                        return [2];
                    }
                  });
                }));
              });
              _0x3f27b9.forEach(function (_0x47ba4d) {
                _0x1976be.add(_0x47ba4d, _0x3bef29(function () {
                  var _0x3a6c99;
                  var _0x17e76f;
                  var _0x4392e1;
                  return _0x11ac31(this, function (_0x2a9900) {
                    switch (_0x2a9900.label) {
                      case 0:
                        _0x3a6c99 = _0x47ba4d;
                        _0x17e76f = _0x57f65d.get(_0x3a6c99);
                        if (!_0x17e76f) {
                          return [3, 2];
                        }
                        _0x4392e1 = _0x2b98da.get(_0x17e76f);
                        if (!_0x4392e1) {
                          return [3, 2];
                        }
                        return [4, _0x4392e1.attemptToRender()];
                      case 1:
                        _0x2a9900.sent();
                        _0x2a9900.label = 2;
                      case 2:
                        return [2];
                    }
                  });
                }));
              });
              _0x3bcd58.forEach(function (_0x32ef63) {
                _0x1976be.add(_0x32ef63, _0x3bef29(function () {
                  var _0x5e1dca;
                  var _0x13acb5;
                  var _0x4b0c7d;
                  return _0x11ac31(this, function (_0x43bb13) {
                    _0x5e1dca = _0x32ef63;
                    _0x13acb5 = _0x57f65d.get(_0x5e1dca);
                    if (_0x13acb5) {
                      _0x4b0c7d = _0x2b98da.get(_0x13acb5);
                      if (_0x4b0c7d) {
                        _0x4b0c7d.shouldRender(false);
                        if (_0x1ddac5.get(_0x13acb5) != null) {
                          _0x4b0c7d.isHiddenObject = false;
                          _0x1ddac5.delete(_0x13acb5);
                        }
                        if (_0x1689c6.get(_0x13acb5) != null) {
                          _0x1689c6.delete(_0x13acb5);
                        }
                      }
                    }
                    return [2];
                  });
                }));
              });
              _0x207127.forEach(function (_0x3e331f) {
                _0x1976be.add(_0x3e331f, _0x3bef29(function () {
                  var _0x112888;
                  var _0x466496;
                  var _0x499dd7;
                  return _0x11ac31(this, function (_0x277fda) {
                    _0x112888 = _0x3e331f;
                    _0x466496 = _0x57f65d.get(_0x112888);
                    if (_0x466496) {
                      _0x499dd7 = _0x2b98da.get(_0x466496);
                      if (_0x499dd7) {
                        _0xb262e(_0x499dd7);
                        _0x499dd7.removeObject();
                        _0x499dd7.stopAll();
                        _0x14177c(_0x499dd7);
                        _0x5966a0.log("triggering destroyed", _0x499dd7.model);
                        if (_0x499dd7.isApartment) {
                          _0x5cfb53.delete(_0x499dd7.databaseID);
                          _0x4c08c6.delete(_0x499dd7.databaseID);
                        }
                      }
                      _0x2b98da.delete(_0x466496);
                    }
                    return [2];
                  });
                }));
              });
              _0x3046bc = true;
              _0x4469d0 = false;
              _0x53474d = undefined;
              _0x164336.label = 6;
            case 6:
              _0x164336.trys.push([6, 11, 12, 13]);
              _0x5d1ede = _0x69d38[Symbol.iterator]();
              _0x164336.label = 7;
            case 7:
              if (!!(_0x3046bc = (_0x4c04a2 = _0x5d1ede.next()).done)) {
                return [3, 10];
              }
              _0x411122 = _0x4c04a2.value;
              _0x3b7dbd = _0x2b98da.get(_0x411122.databaseID);
              if (!_0x3b7dbd) {
                return [3, 9];
              }
              return [4, _0x46004c(_0x3b7dbd, 1)];
            case 8:
              _0x164336.sent();
              _0x164336.label = 9;
            case 9:
              _0x3046bc = true;
              return [3, 7];
            case 10:
              return [3, 13];
            case 11:
              _0x1a6211 = _0x164336.sent();
              _0x4469d0 = true;
              _0x53474d = _0x1a6211;
              return [3, 13];
            case 12:
              try {
                if (!_0x3046bc && _0x5d1ede.return != null) {
                  _0x5d1ede.return();
                }
              } finally {
                if (_0x4469d0) {
                  throw _0x53474d;
                }
              }
              return [7];
            case 13:
              _0x1fd20a = 0;
              _0x164336.label = 14;
            case 14:
              if (_0x1fd20a >= _0x3f27b9.length) {
                return [3, 17];
              }
              return [5, _0x4694a8(_0x435776(_0x1fd20a))];
            case 15:
              _0x164336.sent();
              _0x164336.label = 16;
            case 16:
              _0x1fd20a += _0x1da965;
              return [3, 14];
            case 17:
              _0x2eedd3 = true;
              _0x80400c = false;
              _0x8e9399 = undefined;
              _0x164336.label = 18;
            case 18:
              _0x164336.trys.push([18, 23, 24, 25]);
              _0x537d11 = _0x3f27b9[Symbol.iterator]();
              _0x164336.label = 19;
            case 19:
              if (!!(_0x2eedd3 = (_0x2d087d = _0x537d11.next()).done)) {
                return [3, 22];
              }
              _0x579fbf = _0x2d087d.value;
              _0x10c092 = _0x579fbf;
              _0x2dc7fe = _0x57f65d.get(_0x10c092);
              if (!_0x2dc7fe) {
                return [3, 21];
              }
              _0x761834 = _0x2b98da.get(_0x2dc7fe);
              if (!_0x761834) {
                return [3, 21];
              }
              _0x3aedd2 = _0x2b98da.get(_0x761834.databaseID);
              if (!_0x3aedd2) {
                return [3, 21];
              }
              return [4, _0x3aedd2.CheckIsChildOfNonLoad()];
            case 20:
              _0x164336.sent();
              _0x164336.label = 21;
            case 21:
              _0x2eedd3 = true;
              return [3, 19];
            case 22:
              return [3, 25];
            case 23:
              _0x1a6211 = _0x164336.sent();
              _0x80400c = true;
              _0x8e9399 = _0x1a6211;
              return [3, 25];
            case 24:
              try {
                if (!_0x2eedd3 && _0x537d11.return != null) {
                  _0x537d11.return();
                }
              } finally {
                if (_0x80400c) {
                  throw _0x8e9399;
                }
              }
              return [7];
            case 25:
              _0x11ba54 = true;
              _0x2a1aab = false;
              _0x391803 = undefined;
              try {
                for (_0x9938e = _0x3bcd58[Symbol.iterator](); !(_0x11ba54 = (_0xfdcb6d = _0x9938e.next()).done); _0x11ba54 = true) {
                  _0x1b9b47 = _0xfdcb6d.value;
                  _0x158f7f = _0x1b9b47;
                  _0x340ff3 = _0x57f65d.get(_0x158f7f);
                  if (_0x340ff3) {
                    _0x2079f7 = _0x2b98da.get(_0x340ff3);
                    if (_0x2079f7) {
                      _0xb262e(_0x2079f7);
                    }
                  }
                }
              } catch (_0x395701) {
                _0x2a1aab = true;
                _0x391803 = _0x395701;
              } finally {
                try {
                  if (!_0x11ba54 && _0x9938e.return != null) {
                    _0x9938e.return();
                  }
                } finally {
                  if (_0x2a1aab) {
                    throw _0x391803;
                  }
                }
              }
              return [2];
          }
        });
      });
      return function (_0x274500, _0x12590d, _0x54b7ee, _0x42b45f, _0x3f55fa, _0x1b5048, _0x5cd561) {
        return _0x2cc9ef.apply(this, arguments);
      };
    }());
    function _0x2e8fad(_0x358e7f) {
      return _0x20b52c.apply(this, arguments);
    }
    function _0x20b52c() {
      _0x20b52c = _0x3bef29(function (_0x50183e) {
        var _0x14ce37;
        var _0x2ce071;
        var _0x35758f;
        var _0x2aec49;
        var _0x57a86c;
        var _0x21cbf4;
        var _0x192141;
        var _0x5121ea;
        var _0x4dec7b;
        var _0x5bdb88;
        return _0x11ac31(this, function (_0x103586) {
          _0x14ce37 = null;
          _0x2ce071 = true;
          _0x35758f = false;
          _0x2aec49 = undefined;
          try {
            for (_0x57a86c = _0x2b98da[Symbol.iterator](); !(_0x2ce071 = (_0x21cbf4 = _0x57a86c.next()).done); _0x2ce071 = true) {
              _0x192141 = _0x21aa20(_0x21cbf4.value, 2);
              _0x5121ea = _0x192141[0];
              _0x4dec7b = _0x192141[1];
              if (_0x4dec7b && _0x4dec7b.entityID == _0x50183e) {
                _0x14ce37 = _0x4dec7b;
                break;
              }
            }
          } catch (_0x578a58) {
            _0x35758f = true;
            _0x2aec49 = _0x578a58;
          } finally {
            try {
              if (!_0x2ce071 && _0x57a86c.return != null) {
                _0x57a86c.return();
              }
            } finally {
              if (_0x35758f) {
                throw _0x2aec49;
              }
            }
          }
          if (_0x14ce37 != null) {
            _0x5bdb88 = _0x14ce37.databaseID;
            var _0x31d36a = {
              entityDB: _0x5bdb88,
              entityModel: _0x14ce37.model
            };
            return [2, _0x31d36a];
          }
          return [2, {
            entityDB: "failed",
            entityModel: "failed"
          }];
        });
      });
      return _0x20b52c.apply(this, arguments);
    }
    function _0x2455ab(_0x40047c) {
      return _0x111a2a.apply(this, arguments);
    }
    function _0x111a2a() {
      _0x111a2a = _0x3bef29(function (_0x33e9cb) {
        var _0x5e98c7;
        var _0x554a07;
        var _0x304282;
        var _0x297dae;
        var _0x939bdc;
        var _0xafeb3a;
        var _0x32f09a;
        var _0x53739f;
        var _0x1402a7;
        var _0xb72169;
        var _0x4097e8;
        var _0x2b4077;
        return _0x11ac31(this, function (_0x295f3e) {
          _0x5e98c7 = null;
          _0x554a07 = true;
          _0x304282 = false;
          _0x297dae = undefined;
          try {
            for (_0x939bdc = _0x2b98da[Symbol.iterator](); !(_0x554a07 = (_0xafeb3a = _0x939bdc.next()).done); _0x554a07 = true) {
              _0x32f09a = _0x21aa20(_0xafeb3a.value, 2);
              _0x53739f = _0x32f09a[0];
              _0x1402a7 = _0x32f09a[1];
              if (_0x1402a7 && _0x1402a7.entityID == _0x33e9cb) {
                _0x5e98c7 = _0x1402a7;
                break;
              }
            }
          } catch (_0x21ffc0) {
            _0x304282 = true;
            _0x297dae = _0x21ffc0;
          } finally {
            try {
              if (!_0x554a07 && _0x939bdc.return != null) {
                _0x939bdc.return();
              }
            } finally {
              if (_0x304282) {
                throw _0x297dae;
              }
            }
          }
          if (_0x5e98c7 != null && _0x5e98c7.lead) {
            _0xb72169 = _0x2b98da.get(_0x5e98c7.lead);
            if (_0xb72169) {
              if (_0xb72169.isApartment) {
                _0x4097e8 = _0xb72169.model.split(/\s*:\s*/);
                if (_0x4097e8[0] == "DUMMY" && _0x4097e8[1] == "APARTMENTS" && _0x4097e8[3] != null) {
                  var _0x45067b = {
                    entityDB: _0x4097e8[2],
                    entityModel: _0x5e98c7.model,
                    interactionType: "apartments",
                    fullName: _0xb72169.model
                  };
                  return [2, _0x45067b];
                }
              } else {
                _0x2b4077 = _0xb72169.model.split(/\s*:\s*/);
                if (_0x2b4077[0] == "DUMMY" && _0x2b4077[1] == "HOUSING" && _0x2b4077[2] != null) {
                  var _0xb8adb1 = {
                    entityDB: _0xb72169.databaseID,
                    entityModel: _0x5e98c7.model,
                    interactionType: "housing",
                    fullName: _0xb72169.model
                  };
                  return [2, _0xb8adb1];
                }
              }
            }
          }
          var _0x5c26ad = {
            entityDB: "failed",
            entityModel: "failed",
            interactionType: undefined,
            fullName: ""
          };
          return [2, _0x5c26ad];
        });
      });
      return _0x111a2a.apply(this, arguments);
    }
    function _0x3efb9b(_0x1c4afb) {
      return _0xaa459b.apply(this, arguments);
    }
    function _0xaa459b() {
      _0xaa459b = _0x3bef29(function (_0x179b93) {
        var _0x574ed1;
        var _0x3b7368;
        var _0x111f30;
        var _0x4005c0;
        var _0x2c969b;
        var _0x4cc453;
        var _0x5d8ac1;
        var _0x933a3e;
        var _0xaf0f87;
        var _0x56bbf4;
        var _0x3dae21;
        return _0x11ac31(this, function (_0x3728cb) {
          switch (_0x3728cb.label) {
            case 0:
              return [4, _0x1be418()];
            case 1:
              _0x3728cb.sent();
              _0x574ed1 = null;
              _0x3b7368 = true;
              _0x111f30 = false;
              _0x4005c0 = undefined;
              try {
                for (_0x2c969b = _0x2b98da[Symbol.iterator](); !(_0x3b7368 = (_0x4cc453 = _0x2c969b.next()).done); _0x3b7368 = true) {
                  _0x5d8ac1 = _0x21aa20(_0x4cc453.value, 2);
                  _0x933a3e = _0x5d8ac1[0];
                  _0xaf0f87 = _0x5d8ac1[1];
                  if (_0xaf0f87 && _0xaf0f87.model == "DUMMY:HOUSING") {
                    _0x574ed1 = _0xaf0f87.databaseID;
                    break;
                  }
                }
              } catch (_0x3b55be) {
                _0x111f30 = true;
                _0x4005c0 = _0x3b55be;
              } finally {
                try {
                  if (!_0x3b7368 && _0x2c969b.return != null) {
                    _0x2c969b.return();
                  }
                } finally {
                  if (_0x111f30) {
                    throw _0x4005c0;
                  }
                }
              }
              if (_0x574ed1 == null) {
                return [2, false];
              }
              _0x56bbf4 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false)).add(new _0x45b4c7(0, 0, 1));
              return [4, _0x1885b5("DUMMY:HOUSING:" + _0x179b93, _0x56bbf4, new _0x21193b(0, 0, 0, 0), _0x574ed1, undefined)];
            case 2:
              _0x3dae21 = _0x3728cb.sent();
              if (!_0x3dae21) {
                return [3, 5];
              }
              _0x3dae21.lead = undefined;
              _0x3dae21.hasChild = true;
              _0x3dae21.isChildOfNonLoad = false;
              return [4, _0x3f0777(_0x3dae21.databaseID)];
            case 3:
              _0x3728cb.sent();
              return [4, _0x5d237e()];
            case 4:
              _0x3728cb.sent();
              return [2, true];
            case 5:
              return [2, false];
          }
        });
      });
      return _0xaa459b.apply(this, arguments);
    }
    function _0x38a9bb() {
      return _0x317ec5.apply(this, arguments);
    }
    function _0x317ec5() {
      _0x317ec5 = _0x3bef29(function () {
        var _0x46fe42;
        var _0x3558c4;
        var _0x1529d4;
        var _0x290c22;
        var _0x5b6154;
        var _0x47ef34;
        var _0x23c4b6;
        var _0xd5490d;
        var _0x45918d;
        var _0x541022;
        var _0x1802ec;
        var _0x5d10c5;
        var _0x4adfc9;
        var _0x13595f;
        var _0x1bc801;
        var _0xa8b42b;
        var _0x352dce;
        var _0x262256;
        var _0x390f28;
        return _0x11ac31(this, function (_0x416ff5) {
          _0x46fe42 = PlayerPedId();
          _0x3558c4 = true;
          _0x1529d4 = false;
          _0x290c22 = undefined;
          try {
            for (_0x5b6154 = _0x4c08c6[Symbol.iterator](); !(_0x3558c4 = (_0x47ef34 = _0x5b6154.next()).done); _0x3558c4 = true) {
              _0x23c4b6 = _0x21aa20(_0x47ef34.value, 2);
              _0xd5490d = _0x23c4b6[0];
              _0x45918d = _0x23c4b6[1];
              _0x541022 = true;
              _0x1802ec = _0x45918d.interiorID;
              if (_0x1802ec == null) {
                continue;
              }
              _0x5d10c5 = _0x21aa20(GetInteriorEntitiesExtents(_0x1802ec), 6);
              _0x4adfc9 = _0x5d10c5[0];
              _0x13595f = _0x5d10c5[1];
              _0x1bc801 = _0x5d10c5[2];
              _0xa8b42b = _0x5d10c5[3];
              _0x352dce = _0x5d10c5[4];
              _0x262256 = _0x5d10c5[5];
              if (_0x4adfc9 == null || _0x4adfc9 == 0 || _0x13595f == null || _0x13595f == 0) {
                _0x541022 = false;
              }
              _0x390f28 = _0x45b4c7.fromArray(GetEntityCoords(_0x46fe42, false));
              if (_0x541022) {
                if (_0x390f28.x < _0x4adfc9 || _0x390f28.x > _0xa8b42b || _0x390f28.y < _0x13595f || _0x390f28.y > _0x352dce) {
                  _0x541022 = false;
                }
                if (_0x1bc801 && _0x390f28.z < _0x1bc801 || _0x262256 && _0x390f28.z > _0x262256) {
                  _0x541022 = false;
                }
                if (_0x541022) {
                  return [2, _0x45918d.model];
                }
              }
            }
          } catch (_0x3e2d94) {
            _0x1529d4 = true;
            _0x290c22 = _0x3e2d94;
          } finally {
            try {
              if (!_0x3558c4 && _0x5b6154.return != null) {
                _0x5b6154.return();
              }
            } finally {
              if (_0x1529d4) {
                throw _0x290c22;
              }
            }
          }
          return [2];
        });
      });
      return _0x317ec5.apply(this, arguments);
    }
    function _0x1be418() {
      return _0x2b5b88.apply(this, arguments);
    }
    function _0x2b5b88() {
      _0x2b5b88 = _0x3bef29(function () {
        var _0x3ff858;
        var _0x27c29b;
        var _0x1c8d1f;
        var _0x363b4a;
        var _0x1a5fb8;
        var _0x25c4e8;
        var _0x58841a;
        var _0x59b1b6;
        var _0x259df7;
        var _0x1d7ae4;
        return _0x11ac31(this, function (_0x2c7e9d) {
          switch (_0x2c7e9d.label) {
            case 0:
              _0x3ff858 = [];
              if (_0x7f8b0a.size != 0 && _0x7f8b0a != null) {
                return [3, 2];
              }
              return [4, NPX.Procedures.execute("np-editor:GetGlobalObjects")];
            case 1:
              _0x27c29b = _0x2c7e9d.sent();
              if (_0x27c29b && _0x27c29b.length >= 1) {
                _0xa1c274(_0x27c29b);
                _0x27c29b.forEach(function (_0x5c44aa) {
                  _0x1976be.add(_0x5c44aa.databaseID, _0x3bef29(function () {
                    var _0x288f25;
                    return _0x11ac31(this, function (_0x4c6581) {
                      _0x288f25 = new _0x4a89e0(_0x45b4c7.fromArray(_0x5c44aa.position), _0x21193b.fromArray(_0x5c44aa.quat), _0x5c44aa.model, _0x5c44aa.parent, _0x5c44aa.lead, _0x5c44aa.databaseID, _0x5c44aa.world, _0x5c44aa.hasChild, true, _0x5c44aa.groupIndex, _0x5c44aa.isBuilt, _0x5c44aa.connections);
                      _0x288f25.shouldBeRendering = true;
                      _0x2b98da.set(_0x5c44aa.databaseID, _0x288f25);
                      _0x3ff858.push(_0x288f25);
                      return [2];
                    });
                  }));
                });
              }
              _0x2c7e9d.label = 2;
            case 2:
              _0x1c8d1f = true;
              _0x363b4a = false;
              _0x1a5fb8 = undefined;
              _0x2c7e9d.label = 3;
            case 3:
              _0x2c7e9d.trys.push([3, 8, 9, 10]);
              _0x25c4e8 = _0x3ff858[Symbol.iterator]();
              _0x2c7e9d.label = 4;
            case 4:
              if (!!(_0x1c8d1f = (_0x58841a = _0x25c4e8.next()).done)) {
                return [3, 7];
              }
              _0x59b1b6 = _0x58841a.value;
              _0x259df7 = _0x2b98da.get(_0x59b1b6.databaseID);
              if (!_0x259df7) {
                return [3, 6];
              }
              return [4, _0x46004c(_0x259df7, 1)];
            case 5:
              _0x2c7e9d.sent();
              _0x2c7e9d.label = 6;
            case 6:
              _0x1c8d1f = true;
              return [3, 4];
            case 7:
              return [3, 10];
            case 8:
              _0x1d7ae4 = _0x2c7e9d.sent();
              _0x363b4a = true;
              _0x1a5fb8 = _0x1d7ae4;
              return [3, 10];
            case 9:
              try {
                if (!_0x1c8d1f && _0x25c4e8.return != null) {
                  _0x25c4e8.return();
                }
              } finally {
                if (_0x363b4a) {
                  throw _0x1a5fb8;
                }
              }
              return [7];
            case 10:
              return [2];
          }
        });
      });
      return _0x2b5b88.apply(this, arguments);
    }
    function _0x4eaa3f() {
      return _0x33a933.apply(this, arguments);
    }
    function _0x33a933() {
      _0x33a933 = _0x3bef29(function () {
        return _0x11ac31(this, function (_0x126abe) {
          if (_0x2cdcce == 0) {
            return [2, false];
          }
          return [2, true];
        });
      });
      return _0x33a933.apply(this, arguments);
    }
    function _0x40cc74() {
      return _0x4fe878.apply(this, arguments);
    }
    function _0x4fe878() {
      _0x4fe878 = _0x3bef29(function () {
        return _0x11ac31(this, function (_0x543bbe) {
          return [2, _0x34cc43];
        });
      });
      return _0x4fe878.apply(this, arguments);
    }
    function _0x557a78(_0x20b50c) {
      return _0x468c43.apply(this, arguments);
    }
    function _0x468c43() {
      _0x468c43 = _0x3bef29(function (_0x4bc536) {
        var _0x103492;
        var _0x183eec;
        var _0x368db7;
        var _0x53a8c4;
        var _0x12c967;
        var _0x495e1;
        var _0x2e3332;
        var _0x5f545b;
        var _0x33d67f;
        return _0x11ac31(this, function (_0x256328) {
          _0x103492 = true;
          _0x183eec = false;
          _0x368db7 = undefined;
          try {
            for (_0x53a8c4 = _0x4c08c6.entries()[Symbol.iterator](); !(_0x103492 = (_0x12c967 = _0x53a8c4.next()).done); _0x103492 = true) {
              _0x495e1 = _0x21aa20(_0x12c967.value, 2);
              _0x2e3332 = _0x495e1[0];
              _0x5f545b = _0x495e1[1];
              if (_0x5f545b.isHousing) {
                _0x33d67f = GetInteriorAtCoords(_0x5f545b.position.x, _0x5f545b.position.y, _0x5f545b.position.z);
                if (_0x4bc536 == _0x33d67f) {
                  return [2, true];
                }
              }
            }
          } catch (_0xa7dcb4) {
            _0x183eec = true;
            _0x368db7 = _0xa7dcb4;
          } finally {
            try {
              if (!_0x103492 && _0x53a8c4.return != null) {
                _0x53a8c4.return();
              }
            } finally {
              if (_0x183eec) {
                throw _0x368db7;
              }
            }
          }
          return [2, false];
        });
      });
      return _0x468c43.apply(this, arguments);
    }
    function _0x19efa8(_0x262899) {
      return _0x5014d0.apply(this, arguments);
    }
    function _0x5014d0() {
      _0x5014d0 = _0x3bef29(function (_0x180a93) {
        return _0x11ac31(this, function (_0x104be8) {
          if (_0x180a93 == _0x28c282) {
            _0x28c282 = 0;
          }
          return [2];
        });
      });
      return _0x5014d0.apply(this, arguments);
    }
    function _0x15ab4c(_0x1318d9, _0x2782df) {
      return _0xb5d219.apply(this, arguments);
    }
    function _0xb5d219() {
      _0xb5d219 = _0x3bef29(function (_0xe0e519, _0x1c198b) {
        var _0x74f0aa;
        var _0x9d8847;
        return _0x11ac31(this, function (_0x1ecf6c) {
          _0x74f0aa = PlayerPedId();
          _0x352dad = 0;
          _0x28c282 = _0xe0e519;
          if (_0x1c198b) {
            SetEntityCoords(_0x74f0aa, _0x1c198b.x, _0x1c198b.y, _0x1c198b.z, false, false, false, false);
          }
          _0x9d8847 = setTick(_0x3bef29(function () {
            return _0x11ac31(this, function (_0x34bedd) {
              switch (_0x34bedd.label) {
                case 0:
                  _0x352dad++;
                  FreezeEntityPosition(_0x74f0aa, true);
                  if (_0x352dad < 80) {
                    return [3, 2];
                  }
                  if (_0x1c198b) {
                    SetEntityCoords(_0x74f0aa, _0x1c198b.x, _0x1c198b.y, _0x1c198b.z, false, false, false, false);
                  }
                  DoScreenFadeIn(500);
                  return [4, _0x4e43fe(500)];
                case 1:
                  _0x34bedd.sent();
                  FreezeEntityPosition(_0x74f0aa, false);
                  _0x2287f7();
                  _0x258945.emitNet("spawn:resetWorld");
                  emit("spawn:passedSpawnLoadedState");
                  clearTick(_0x9d8847);
                  _0x34bedd.label = 2;
                case 2:
                  if (_0x28c282 == 0) {
                    return [3, 4];
                  }
                  return [4, _0x4e43fe(200)];
                case 3:
                  _0x34bedd.sent();
                  return [3, 6];
                case 4:
                  if (_0x1c198b) {
                    SetEntityCoords(_0x74f0aa, _0x1c198b.x, _0x1c198b.y, _0x1c198b.z, false, false, false, false);
                  }
                  DoScreenFadeIn(500);
                  return [4, _0x4e43fe(500)];
                case 5:
                  _0x34bedd.sent();
                  FreezeEntityPosition(_0x74f0aa, false);
                  _0x2287f7();
                  _0x258945.emitNet("spawn:resetWorld");
                  emit("spawn:passedSpawnLoadedState");
                  clearTick(_0x9d8847);
                  _0x34bedd.label = 6;
                case 6:
                  return [2];
              }
            });
          }));
          return [2];
        });
      });
      return _0xb5d219.apply(this, arguments);
    }
    function _0x2287f7() {
      return _0x547968.apply(this, arguments);
    }
    function _0x547968() {
      _0x547968 = _0x3bef29(function () {
        var _0x384a59;
        var _0x3d22ea;
        var _0x2f8bcf;
        var _0x4deb19;
        var _0x3268f0;
        var _0x5d5316;
        return _0x11ac31(this, function (_0x16775e) {
          _0x384a59 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false));
          _0x3d22ea = GetInteriorAtCoords(_0x384a59.x, _0x384a59.y, _0x384a59.z);
          _0x2f8bcf = _0xf35f0d.get(_0x3d22ea);
          if (_0x2f8bcf && _0x2f8bcf.ready && _0x2f8bcf.inside) {
            _0x4deb19 = _0x2b98da.get(_0x2f8bcf.databaseID);
            if (_0x4deb19 && _0x4deb19.isHousing && _0x6ada10 && _0x6ada10.interiorID) {
              _0x3268f0 = _0xf35f0d.get(_0x6ada10.interiorID);
              if (!_0x3268f0) {
                return [2];
              }
              if (_0x3268f0.roomHash == 0 || _0x6ada10.interiorID == 0) {
                return [2];
              }
              _0x5d5316 = _0x3268f0.roomHash;
              if (_0x181a57 && _0x181a57.apartmentInformation) {
                _0x5d5316 = _0x181a57.apartmentInformation.roomHash;
              }
              if (_0x3d22ea != 0 && _0x3d22ea == _0x6ada10.interiorID) {
                ForceRoomForEntity(PlayerPedId(), _0x6ada10.interiorID, _0x5d5316);
              }
            }
          }
          return [2];
        });
      });
      return _0x547968.apply(this, arguments);
    }
    function _0x55cc54() {
      return _0x2227e3.apply(this, arguments);
    }
    function _0x2227e3() {
      _0x2227e3 = _0x3bef29(function () {
        var _0x43fc55;
        var _0x107f3a;
        var _0x383f19;
        var _0x37f453;
        return _0x11ac31(this, function (_0x3377eb) {
          switch (_0x3377eb.label) {
            case 0:
              _0x43fc55 = _0x45b4c7.fromArray(GetEntityCoords(PlayerPedId(), false));
              _0x107f3a = GetInteriorAtCoords(_0x43fc55.x, _0x43fc55.y, _0x43fc55.z);
              _0x383f19 = _0xf35f0d.get(_0x107f3a);
              if (!_0x383f19 || !_0x383f19.ready || !_0x383f19.inside) {
                return [3, 4];
              }
              _0x37f453 = _0x2b98da.get(_0x383f19.databaseID);
              if (!_0x37f453 || !_0x37f453.isHousing || !_0x6ada10 || !_0x6ada10.interiorID) {
                return [3, 4];
              }
              return [4, _0x14177c(_0x37f453)];
            case 1:
              _0x3377eb.sent();
              return [4, _0x4e43fe(200)];
            case 2:
              _0x3377eb.sent();
              return [4, _0x1cae0f(_0x37f453, true)];
            case 3:
              _0x3377eb.sent();
              _0x3377eb.label = 4;
            case 4:
              return [2];
          }
        });
      });
      return _0x2227e3.apply(this, arguments);
    }
    function _0x26f1cb() {
      return _0x2c18dd.apply(this, arguments);
    }
    function _0x2c18dd() {
      _0x2c18dd = _0x3bef29(function () {
        return _0x11ac31(this, function (_0x32d859) {
          if (_0x6ada10) {
            if (_0x6ada10.isApartment) {
              if (_0x181a57) {
                return [2, true];
              }
            }
          }
          return [2, false];
        });
      });
      return _0x2c18dd.apply(this, arguments);
    }
    globalThis.exports("GetHousingNameFromEntityID", _0x2455ab);
    globalThis.exports("GetDatabaseIDFromEntity", _0x2e8fad);
    globalThis.exports("CreateHousing", _0x3efb9b);
    globalThis.exports("GetModelNameFromCurrentIterior", _0x38a9bb);
    globalThis.exports("ChangeApartmentColor", _0x2dcebb);
    globalThis.exports("CurrentApartmentColor", _0x29a47c);
    globalThis.exports("isCameraRunning", _0x4eaa3f);
    globalThis.exports("canOpenFromMenu", _0x40cc74);
    globalThis.exports("spawnTestForCurrentHousing", _0x557a78);
    globalThis.exports("waitForHousingToLoad", _0x15ab4c);
    globalThis.exports("setRoomOnSitting", _0x2287f7);
    globalThis.exports("refreshInterior", _0x55cc54);
    globalThis.exports("isInsideApartment", _0x26f1cb);
    NPX.Procedures.register("editor:placeObjectFromInventory", function () {
      var _0x45a1f3 = _0x3bef29(function (_0x3bdc76) {
        var _0x584d10;
        return _0x11ac31(this, function (_0x3f4748) {
          switch (_0x3f4748.label) {
            case 0:
              if (!_0x250817()) {
                return [2, false];
              }
              _0x179abe.setState("GizmoNoCam");
              _0x584d10 = 0;
              _0x3f4748.label = 1;
            case 1:
              if (!!_0x3d453d || _0x584d10 >= 20) {
                return [3, 3];
              }
              return [4, _0x4e43fe(100)];
            case 2:
              _0x3f4748.sent();
              _0x584d10++;
              return [3, 1];
            case 3:
              return [4, _0x598b40(_0x3bdc76)];
            case 4:
              _0x3f4748.sent();
              return [2, true];
          }
        });
      });
      return function (_0x3c8e21) {
        return _0x45a1f3.apply(this, arguments);
      };
    }());
    on("onResourceStop", function (_0x4c18dc) {
      if (_0x4c18dc !== GetCurrentResourceName()) {
        return;
      }
      _0x179abe.setState("none");
      var _0x4e5ea6 = true;
      var _0x3fa8bb = false;
      var _0x1c74b6 = undefined;
      try {
        for (var _0x3dc365 = _0x2b98da[Symbol.iterator](), _0x247137; !(_0x4e5ea6 = (_0x247137 = _0x3dc365.next()).done); _0x4e5ea6 = true) {
          var _0x2d2dca = _0x21aa20(_0x247137.value, 2);
          var _0x17a01e = _0x2d2dca[0];
          var _0x46d51d = _0x2d2dca[1];
          if (_0x46d51d) {
            _0x46d51d.removeObject();
          }
        }
      } catch (_0x1c4b96) {
        _0x3fa8bb = true;
        _0x1c74b6 = _0x1c4b96;
      } finally {
        try {
          if (!_0x4e5ea6 && _0x3dc365.return != null) {
            _0x3dc365.return();
          }
        } finally {
          if (_0x3fa8bb) {
            throw _0x1c74b6;
          }
        }
      }
    });
    on("onResourceStart", function () {
      var _0x3749df = _0x3bef29(function (_0x44c154) {
        return _0x11ac31(this, function (_0x337698) {
          switch (_0x337698.label) {
            case 0:
              if (_0x44c154 !== GetCurrentResourceName()) {
                return [2];
              }
              return [4, _0x1be418()];
            case 1:
              _0x337698.sent();
              return [2];
          }
        });
      });
      return function (_0x2ad7f8) {
        return _0x3749df.apply(this, arguments);
      };
    }());
    on("np-binds:keyEvent", function () {
      var _0x4522a0 = _0x3bef29(function (_0xdd164c, _0x615212) {
        return _0x11ac31(this, function (_0x64898f) {
          switch (_0xdd164c) {
            case "gizmoTranslate":
              _0x5b25a6("translate");
              break;
            case "gizmoRotation":
              _0x5b25a6("rotation");
              break;
            case "gizmoLocalWorld":
              if (_0x615212) {
                _0x8b3b79();
              }
              break;
            default:
              break;
          }
          return [2];
        });
      });
      return function (_0x175c6d, _0x50d5a6) {
        return _0x4522a0.apply(this, arguments);
      };
    }());
    on("np-housing:openMaterial", function () {
      var _0xf0b173 = _0x3bef29(function (_0xe193fe, _0x37bc83) {
        var _0x286d3e;
        var _0x206a87;
        var _0x4e02f3;
        var _0x6eab91;
        return _0x11ac31(this, function (_0xe0649a) {
          switch (_0xe0649a.label) {
            case 0:
              return [4, _0x2e8fad(_0x37bc83)];
            case 1:
              _0x286d3e = _0xe0649a.sent();
              if (!_0x286d3e.entityDB) {
                return [2];
              }
              return [4, _0x2455ab(_0x37bc83)];
            case 2:
              _0x206a87 = _0xe0649a.sent();
              if (!_0x206a87.entityDB) {
                return [2];
              }
              if (_0x206a87.interactionType != "housing" || !_0x206a87.fullName) {
                return [3, 3];
              }
              return [3, 5];
            case 3:
              return [4, NPX.Procedures.execute("apartments:HasPermissions", _0x206a87.fullName)];
            case 4:
              _0x4e02f3 = _0xe0649a.sent();
              if (!_0x4e02f3) {
                emit("DoLongHudText", "You do not have permissions to open this.", 2);
                return [2];
              }
              _0xe0649a.label = 5;
            case 5:
              _0x6eab91 = `furniture::${_0x286d3e.entityDB}`;
              globalThis.exports.inventory.OpenInventory([_0x6eab91], true);
              return [2];
          }
        });
      });
      return function (_0x1ec410, _0x3a57c5) {
        return _0xf0b173.apply(this, arguments);
      };
    }());
    on("apartments:openOutfits", _0x3bef29(function () {
      return _0x11ac31(this, function (_0x22a055) {
        emit("np-clothing:outfits", true);
        return [2];
      });
    }));
    on("np-editor:insideInteriorZone", function () {
      var _0xf8565e = _0x3bef29(function (_0x5ea516) {
        return _0x11ac31(this, function (_0x4bb5b8) {
          _0x5966a0.log("changing inside zone", _0x34cc43, "to ->", _0x5ea516);
          _0x34cc43 = _0x5ea516;
          return [2];
        });
      });
      return function (_0x44ca09) {
        return _0xf8565e.apply(this, arguments);
      };
    }());
    on("editor-open-editor", _0x3bef29(function () {
      var _0x1a95be;
      return _0x11ac31(this, function (_0x49e0cd) {
        _0x1a95be = _0x15a991.Sync.config.GetMiscConfig("spawn.apartments.only") ?? true;
        if (_0x1a95be) {
          return [2];
        }
        if (!_0x503f2d) {
          if (!_0x200f99.get("startingView")) {
            _0x200f99.set("startingView", 3);
          }
          switch (_0x200f99.get("startingView")) {
            case 2:
              _0x179abe.setState("GizmoNoCam");
              break;
            case 3:
              _0x179abe.setState("GizmoCam");
              break;
            default:
              _0x179abe.setState("GizmoCam");
              break;
          }
        }
        return [2];
      });
    }));
    ;
    function _0x3d58f7(_0x3335e6, _0x544457, _0x40f254, _0x3aa2b8, _0x334c33, _0x1b7acc, _0x4abbd2) {
      try {
        var _0x58faac = _0x3335e6[_0x1b7acc](_0x4abbd2);
        var _0x445cb6 = _0x58faac.value;
      } catch (_0x4636af) {
        _0x40f254(_0x4636af);
        return;
      }
      if (_0x58faac.done) {
        _0x544457(_0x445cb6);
      } else {
        Promise.resolve(_0x445cb6).then(_0x3aa2b8, _0x334c33);
      }
    }
    function _0x373713(_0x601dab) {
      return function () {
        var _0x3edf90 = this;
        var _0x584eb5 = arguments;
        return new Promise(function (_0x1f3ff1, _0x26217e) {
          var _0x344e12 = _0x601dab.apply(_0x3edf90, _0x584eb5);
          function _0x2ca24b(_0x270de8) {
            _0x3d58f7(_0x344e12, _0x1f3ff1, _0x26217e, _0x2ca24b, _0x566b6a, "next", _0x270de8);
          }
          function _0x566b6a(_0x4cde5b) {
            _0x3d58f7(_0x344e12, _0x1f3ff1, _0x26217e, _0x2ca24b, _0x566b6a, "throw", _0x4cde5b);
          }
          _0x2ca24b(undefined);
        });
      };
    }
    function _0x3e6bd8(_0x5bd737, _0x56efa1) {
      var _0x16d65f;
      var _0x2b7908;
      var _0x3b6870;
      var _0x34ca20;
      var _0x52c3ad = {
        label: 0,
        sent: function () {
          if (_0x3b6870[0] & 1) {
            throw _0x3b6870[1];
          }
          return _0x3b6870[1];
        },
        trys: [],
        ops: []
      };
      _0x34ca20 = {
        next: _0x30bcce(0),
        throw: _0x30bcce(1),
        return: _0x30bcce(2)
      };
      if (typeof Symbol === "function") {
        _0x34ca20[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x34ca20;
      function _0x30bcce(_0x21dfb3) {
        return function (_0xb979ab) {
          return _0x1054e6([_0x21dfb3, _0xb979ab]);
        };
      }
      function _0x1054e6(_0x16708c) {
        if (_0x16d65f) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x52c3ad) {
          try {
            _0x16d65f = 1;
            if (_0x2b7908 && (_0x3b6870 = _0x16708c[0] & 2 ? _0x2b7908.return : _0x16708c[0] ? _0x2b7908.throw || ((_0x3b6870 = _0x2b7908.return) && _0x3b6870.call(_0x2b7908), 0) : _0x2b7908.next) && !(_0x3b6870 = _0x3b6870.call(_0x2b7908, _0x16708c[1])).done) {
              return _0x3b6870;
            }
            _0x2b7908 = 0;
            if (_0x3b6870) {
              _0x16708c = [_0x16708c[0] & 2, _0x3b6870.value];
            }
            switch (_0x16708c[0]) {
              case 0:
              case 1:
                _0x3b6870 = _0x16708c;
                break;
              case 4:
                _0x52c3ad.label++;
                var _0x2e8980 = {
                  value: _0x16708c[1],
                  done: false
                };
                return _0x2e8980;
              case 5:
                _0x52c3ad.label++;
                _0x2b7908 = _0x16708c[1];
                _0x16708c = [0];
                continue;
              case 7:
                _0x16708c = _0x52c3ad.ops.pop();
                _0x52c3ad.trys.pop();
                continue;
              default:
                if (!(_0x3b6870 = _0x52c3ad.trys, _0x3b6870 = _0x3b6870.length > 0 && _0x3b6870[_0x3b6870.length - 1]) && (_0x16708c[0] === 6 || _0x16708c[0] === 2)) {
                  _0x52c3ad = 0;
                  continue;
                }
                if (_0x16708c[0] === 3 && (!_0x3b6870 || _0x16708c[1] > _0x3b6870[0] && _0x16708c[1] < _0x3b6870[3])) {
                  _0x52c3ad.label = _0x16708c[1];
                  break;
                }
                if (_0x16708c[0] === 6 && _0x52c3ad.label < _0x3b6870[1]) {
                  _0x52c3ad.label = _0x3b6870[1];
                  _0x3b6870 = _0x16708c;
                  break;
                }
                if (_0x3b6870 && _0x52c3ad.label < _0x3b6870[2]) {
                  _0x52c3ad.label = _0x3b6870[2];
                  _0x52c3ad.ops.push(_0x16708c);
                  break;
                }
                if (_0x3b6870[2]) {
                  _0x52c3ad.ops.pop();
                }
                _0x52c3ad.trys.pop();
                continue;
            }
            _0x16708c = _0x56efa1.call(_0x5bd737, _0x52c3ad);
          } catch (_0x31e9f5) {
            _0x16708c = [6, _0x31e9f5];
            _0x2b7908 = 0;
          } finally {
            _0x16d65f = _0x3b6870 = 0;
          }
        }
        if (_0x16708c[0] & 5) {
          throw _0x16708c[1];
        }
        var _0x52a334 = {
          value: _0x16708c[0] ? _0x16708c[1] : undefined,
          done: true
        };
        return _0x52a334;
      }
    }
    var _0x3da1db;
    function _0x1396fd() {
      return _0x416bf2.apply(this, arguments);
    }
    function _0x416bf2() {
      _0x416bf2 = _0x373713(function () {
        return _0x3e6bd8(this, function (_0x22175e) {
          return [2];
        });
      });
      return _0x416bf2.apply(this, arguments);
    }
    ;
    function _0x287f48(_0x1f72b8, _0x1f894b, _0x4356a0, _0x2f68bc, _0x551d59, _0x50335b, _0x4b0521) {
      try {
        var _0x54449c = _0x1f72b8[_0x50335b](_0x4b0521);
        var _0x5703a1 = _0x54449c.value;
      } catch (_0x423077) {
        _0x4356a0(_0x423077);
        return;
      }
      if (_0x54449c.done) {
        _0x1f894b(_0x5703a1);
      } else {
        Promise.resolve(_0x5703a1).then(_0x2f68bc, _0x551d59);
      }
    }
    function _0x13150a(_0x2e8757) {
      return function () {
        var _0x21b9f0 = this;
        var _0x33d216 = arguments;
        return new Promise(function (_0x44d91e, _0x35936d) {
          var _0x2e88ec = _0x2e8757.apply(_0x21b9f0, _0x33d216);
          function _0x5cafa1(_0x3400da) {
            _0x287f48(_0x2e88ec, _0x44d91e, _0x35936d, _0x5cafa1, _0x55e1da, "next", _0x3400da);
          }
          function _0x55e1da(_0x26b7dc) {
            _0x287f48(_0x2e88ec, _0x44d91e, _0x35936d, _0x5cafa1, _0x55e1da, "throw", _0x26b7dc);
          }
          _0x5cafa1(undefined);
        });
      };
    }
    function _0x316616(_0x1b8ca3, _0x4cd564) {
      var _0x51e59a;
      var _0x149b1d;
      var _0x40feef;
      var _0x348037;
      var _0x487f34 = {
        label: 0,
        sent: function () {
          if (_0x40feef[0] & 1) {
            throw _0x40feef[1];
          }
          return _0x40feef[1];
        },
        trys: [],
        ops: []
      };
      _0x348037 = {
        next: _0x1b5a11(0),
        throw: _0x1b5a11(1),
        return: _0x1b5a11(2)
      };
      if (typeof Symbol === "function") {
        _0x348037[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x348037;
      function _0x1b5a11(_0x4501cf) {
        return function (_0x2f6caa) {
          return _0x2a97d8([_0x4501cf, _0x2f6caa]);
        };
      }
      function _0x2a97d8(_0xb8cbb3) {
        if (_0x51e59a) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x487f34) {
          try {
            _0x51e59a = 1;
            if (_0x149b1d && (_0x40feef = _0xb8cbb3[0] & 2 ? _0x149b1d.return : _0xb8cbb3[0] ? _0x149b1d.throw || ((_0x40feef = _0x149b1d.return) && _0x40feef.call(_0x149b1d), 0) : _0x149b1d.next) && !(_0x40feef = _0x40feef.call(_0x149b1d, _0xb8cbb3[1])).done) {
              return _0x40feef;
            }
            _0x149b1d = 0;
            if (_0x40feef) {
              _0xb8cbb3 = [_0xb8cbb3[0] & 2, _0x40feef.value];
            }
            switch (_0xb8cbb3[0]) {
              case 0:
              case 1:
                _0x40feef = _0xb8cbb3;
                break;
              case 4:
                _0x487f34.label++;
                var _0x122558 = {
                  value: _0xb8cbb3[1],
                  done: false
                };
                return _0x122558;
              case 5:
                _0x487f34.label++;
                _0x149b1d = _0xb8cbb3[1];
                _0xb8cbb3 = [0];
                continue;
              case 7:
                _0xb8cbb3 = _0x487f34.ops.pop();
                _0x487f34.trys.pop();
                continue;
              default:
                if (!(_0x40feef = _0x487f34.trys, _0x40feef = _0x40feef.length > 0 && _0x40feef[_0x40feef.length - 1]) && (_0xb8cbb3[0] === 6 || _0xb8cbb3[0] === 2)) {
                  _0x487f34 = 0;
                  continue;
                }
                if (_0xb8cbb3[0] === 3 && (!_0x40feef || _0xb8cbb3[1] > _0x40feef[0] && _0xb8cbb3[1] < _0x40feef[3])) {
                  _0x487f34.label = _0xb8cbb3[1];
                  break;
                }
                if (_0xb8cbb3[0] === 6 && _0x487f34.label < _0x40feef[1]) {
                  _0x487f34.label = _0x40feef[1];
                  _0x40feef = _0xb8cbb3;
                  break;
                }
                if (_0x40feef && _0x487f34.label < _0x40feef[2]) {
                  _0x487f34.label = _0x40feef[2];
                  _0x487f34.ops.push(_0xb8cbb3);
                  break;
                }
                if (_0x40feef[2]) {
                  _0x487f34.ops.pop();
                }
                _0x487f34.trys.pop();
                continue;
            }
            _0xb8cbb3 = _0x4cd564.call(_0x1b8ca3, _0x487f34);
          } catch (_0x133023) {
            _0xb8cbb3 = [6, _0x133023];
            _0x149b1d = 0;
          } finally {
            _0x51e59a = _0x40feef = 0;
          }
        }
        if (_0xb8cbb3[0] & 5) {
          throw _0xb8cbb3[1];
        }
        var _0xcc5346 = {
          value: _0xb8cbb3[0] ? _0xb8cbb3[1] : undefined,
          done: true
        };
        return _0xcc5346;
      }
    }
    var _0x25921d = function () {
      var _0x3f988a = _0x13150a(function (_0x2f087e, _0x21e016) {
        var _0x2a1fe5;
        var _0x33127c;
        var _0x336c49;
        return _0x316616(this, function (_0x5cea29) {
          switch (_0x5cea29.label) {
            case 0:
              _0x2a1fe5 = _0x2b98da.get(_0x2f087e);
              if (_0x2a1fe5 == null) {
                return [2];
              }
              if (_0x21e016 == null) {
                if (_0x2a1fe5.lead) {
                  _0x21e016 = _0x2a1fe5.lead;
                } else {
                  _0x33127c = _0x1cd39c();
                  if (_0x33127c) {
                    _0x21e016 = _0x33127c;
                  }
                }
              }
              _0x2a1fe5.parent = _0x21e016;
              return [4, _0x30e93e(_0x2a1fe5.parent)];
            case 1:
              _0x336c49 = _0x5cea29.sent();
              if (_0x336c49) {
                _0x2a1fe5.groupIndex = _0x336c49;
                _0x2b98da.set(_0x2f087e, _0x2a1fe5);
              } else {
                _0x2a1fe5.groupIndex = 0;
                _0x2b98da.set(_0x2f087e, _0x2a1fe5);
              }
              _0x3f0777(_0x2a1fe5.databaseID);
              if (_0x2a1fe5.lead) {
                _0x418617(_0x2a1fe5.lead);
              }
              return [2];
          }
        });
      });
      return function _0x44c342(_0x4fef07, _0x8efe5) {
        return _0x3f988a.apply(this, arguments);
      };
    }();
    ;
    function _0x365da3(_0x52d035, _0x536776, _0x5b58b1, _0x414515, _0x1b8172, _0x9d3230, _0x3cb94c) {
      try {
        var _0x24118a = _0x52d035[_0x9d3230](_0x3cb94c);
        var _0x1a9c62 = _0x24118a.value;
      } catch (_0x159195) {
        _0x5b58b1(_0x159195);
        return;
      }
      if (_0x24118a.done) {
        _0x536776(_0x1a9c62);
      } else {
        Promise.resolve(_0x1a9c62).then(_0x414515, _0x1b8172);
      }
    }
    function _0x249300(_0x285bfd) {
      return function () {
        var _0x206d56 = this;
        var _0x4a1eb1 = arguments;
        return new Promise(function (_0x404730, _0x26214b) {
          var _0x3a6f83 = _0x285bfd.apply(_0x206d56, _0x4a1eb1);
          function _0x5585a4(_0x1ba76a) {
            _0x365da3(_0x3a6f83, _0x404730, _0x26214b, _0x5585a4, _0x512d5b, "next", _0x1ba76a);
          }
          function _0x512d5b(_0x51fc00) {
            _0x365da3(_0x3a6f83, _0x404730, _0x26214b, _0x5585a4, _0x512d5b, "throw", _0x51fc00);
          }
          _0x5585a4(undefined);
        });
      };
    }
    function _0x1e2c42(_0x14094b, _0x435a5e) {
      var _0xadfcae;
      var _0x56db42;
      var _0x22ad79;
      var _0xa1b457;
      var _0x372141 = {
        label: 0,
        sent: function () {
          if (_0x22ad79[0] & 1) {
            throw _0x22ad79[1];
          }
          return _0x22ad79[1];
        },
        trys: [],
        ops: []
      };
      _0xa1b457 = {
        next: _0x292619(0),
        throw: _0x292619(1),
        return: _0x292619(2)
      };
      if (typeof Symbol === "function") {
        _0xa1b457[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0xa1b457;
      function _0x292619(_0x2d1e7f) {
        return function (_0x293a61) {
          return _0x4cebd0([_0x2d1e7f, _0x293a61]);
        };
      }
      function _0x4cebd0(_0xe8852d) {
        if (_0xadfcae) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x372141) {
          try {
            _0xadfcae = 1;
            if (_0x56db42 && (_0x22ad79 = _0xe8852d[0] & 2 ? _0x56db42.return : _0xe8852d[0] ? _0x56db42.throw || ((_0x22ad79 = _0x56db42.return) && _0x22ad79.call(_0x56db42), 0) : _0x56db42.next) && !(_0x22ad79 = _0x22ad79.call(_0x56db42, _0xe8852d[1])).done) {
              return _0x22ad79;
            }
            _0x56db42 = 0;
            if (_0x22ad79) {
              _0xe8852d = [_0xe8852d[0] & 2, _0x22ad79.value];
            }
            switch (_0xe8852d[0]) {
              case 0:
              case 1:
                _0x22ad79 = _0xe8852d;
                break;
              case 4:
                _0x372141.label++;
                var _0x1db6a6 = {
                  value: _0xe8852d[1],
                  done: false
                };
                return _0x1db6a6;
              case 5:
                _0x372141.label++;
                _0x56db42 = _0xe8852d[1];
                _0xe8852d = [0];
                continue;
              case 7:
                _0xe8852d = _0x372141.ops.pop();
                _0x372141.trys.pop();
                continue;
              default:
                if (!(_0x22ad79 = _0x372141.trys, _0x22ad79 = _0x22ad79.length > 0 && _0x22ad79[_0x22ad79.length - 1]) && (_0xe8852d[0] === 6 || _0xe8852d[0] === 2)) {
                  _0x372141 = 0;
                  continue;
                }
                if (_0xe8852d[0] === 3 && (!_0x22ad79 || _0xe8852d[1] > _0x22ad79[0] && _0xe8852d[1] < _0x22ad79[3])) {
                  _0x372141.label = _0xe8852d[1];
                  break;
                }
                if (_0xe8852d[0] === 6 && _0x372141.label < _0x22ad79[1]) {
                  _0x372141.label = _0x22ad79[1];
                  _0x22ad79 = _0xe8852d;
                  break;
                }
                if (_0x22ad79 && _0x372141.label < _0x22ad79[2]) {
                  _0x372141.label = _0x22ad79[2];
                  _0x372141.ops.push(_0xe8852d);
                  break;
                }
                if (_0x22ad79[2]) {
                  _0x372141.ops.pop();
                }
                _0x372141.trys.pop();
                continue;
            }
            _0xe8852d = _0x435a5e.call(_0x14094b, _0x372141);
          } catch (_0x264672) {
            _0xe8852d = [6, _0x264672];
            _0x56db42 = 0;
          } finally {
            _0xadfcae = _0x22ad79 = 0;
          }
        }
        if (_0xe8852d[0] & 5) {
          throw _0xe8852d[1];
        }
        var _0x17d1f6 = {
          value: _0xe8852d[0] ? _0xe8852d[1] : undefined,
          done: true
        };
        return _0x17d1f6;
      }
    }
    function _0x853789() {
      return _0x1c3995.apply(this, arguments);
    }
    function _0x1c3995() {
      _0x1c3995 = _0x249300(function () {
        return _0x1e2c42(this, function (_0x18797d) {
          return [2];
        });
      });
      return _0x1c3995.apply(this, arguments);
    }
    RegisterNuiCallbackType("enableMovement");
    on("__cfx_nui:enableMovement", function (_0x437694, _0x59b7eb) {
      if (_0x437694.isOnDown && !_0x4b8ac4) {
        _0x3a577b(false);
        _0x1cd243(true);
      }
      _0x59b7eb({});
    });
    RegisterNuiCallbackType("exitCam");
    on("__cfx_nui:exitCam", function (_0x51b549, _0x2f883f) {
      if (_0x34a7cb != 0) {
        _0x23b88f(_0x34a7cb);
        _0x9496f6(0, false);
        return;
      }
      if (_0x179abe.getCurrentStateName() == "room") {
        _0x179abe.setState(_0x515711);
      } else {
        _0x179abe.setState("none");
      }
      _0x2f883f({});
    });
    RegisterNuiCallbackType("moveHistory");
    on("__cfx_nui:moveHistory", function (_0x17a772, _0x2ff389) {
      if (_0x17a772.isUndo) {
        if (_0x179abe.getCurrentStateName() == "room") {
          _0x20f60f();
        } else {
          _0x2f6743.undo();
        }
      } else {
        _0x2f6743.redo();
      }
      _0x2ff389({});
    });
    RegisterNuiCallbackType("delete");
    on("__cfx_nui:delete", function (_0x328b76, _0x34ea0) {
      if (_0x53e1f9 != 0 && _0x43925e != undefined) {
        _0xd4327d(_0x43925e.databaseID);
      }
      _0x34ea0({});
    });
    RegisterNuiCallbackType("setZHeight");
    on("__cfx_nui:setZHeight", function (_0x197892, _0x21e029) {
      _0x3c7ee6(_0x197892.zFloorHeight, -_0x197892.zCeilingHeight);
      _0x21e029({});
    });
    RegisterNuiCallbackType("startRoomCreation");
    on("__cfx_nui:startRoomCreation", function (_0x2c610c, _0x42714f) {
      var _0x3a849e = GetInteriorFromPrimaryView();
      var _0x34d126 = _0xf35f0d.get(_0x3a849e);
      if (_0x34d126 && _0x34d126.ready && _0x34d126.inside && _0x2b98da.get(_0x34d126.databaseID)?.isApartment) {
        emit("DoLongHudText", "Cannot use rooms inside Apartments.", 2);
        return;
      }
      var _0x2358ba = _0x179abe.getCurrentStateName();
      if (_0x2358ba) {
        _0x30effb(_0x2358ba);
      }
      _0x179abe.setState("room");
      _0x42714f({});
    });
    RegisterNuiCallbackType("finishedRoom");
    on("__cfx_nui:finishedRoom", function (_0x37c4ad, _0x430bc1) {
      _0x16488c(_0x37c4ad.roomName);
      _0x430bc1({});
    });
    RegisterNuiCallbackType("updateRoomLinks");
    on("__cfx_nui:updateRoomLinks", function (_0x2f56b6, _0xdb5fd6) {
      _0x13ccad();
      _0xdb5fd6({});
    });
    RegisterNuiCallbackType("addRoomLink");
    on("__cfx_nui:addRoomLink", function () {
      var _0x49d975 = _0x249300(function (_0x35cb78, _0x35f3aa) {
        return _0x1e2c42(this, function (_0x1b4ca1) {
          switch (_0x1b4ca1.label) {
            case 0:
              if (_0x35cb78.roomID != "worldLinkIDNopixel") {
                return [3, 2];
              }
              return [4, _0x1e0ffa(_0x35cb78.linkID)];
            case 1:
              _0x1b4ca1.sent();
              return [3, 4];
            case 2:
              return [4, _0x5c4ac1(_0x35cb78.linkID, _0x35cb78.roomID)];
            case 3:
              _0x1b4ca1.sent();
              _0x1b4ca1.label = 4;
            case 4:
              _0x13ccad();
              _0x35f3aa({});
              return [2];
          }
        });
      });
      return function (_0x291060, _0x1b32ea) {
        return _0x49d975.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("removeRoomLink");
    on("__cfx_nui:removeRoomLink", function () {
      var _0x290a84 = _0x249300(function (_0x4b9809, _0x45ce34) {
        return _0x1e2c42(this, function (_0x53e2a9) {
          switch (_0x53e2a9.label) {
            case 0:
              if (_0x4b9809.linkID != "worldLinkIDNopixel") {
                return [3, 2];
              }
              return [4, _0x21a604(_0x4b9809.roomID)];
            case 1:
              _0x53e2a9.sent();
              return [3, 4];
            case 2:
              return [4, _0x35775d(_0x4b9809.linkID, _0x4b9809.roomID)];
            case 3:
              _0x53e2a9.sent();
              _0x53e2a9.label = 4;
            case 4:
              _0x13ccad();
              _0x45ce34({});
              return [2];
          }
        });
      });
      return function (_0x44199d, _0x47c4ae) {
        return _0x290a84.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("interface");
    on("__cfx_nui:interface", function (_0x301b99, _0x295e3b) {
      if (_0x301b99.interface) {
        if (_0x179abe.getCurrentStateName() == "room") {
          _0x179abe.setState(_0x515711);
        } else {
          _0x179abe.setState(_0x301b99.interface);
        }
      }
      _0x295e3b({});
    });
    RegisterNuiCallbackType("copyPaste");
    on("__cfx_nui:copyPaste", function (_0x10de7a, _0x25f88c) {
      _0x133f4b(_0x10de7a.copy);
      _0x25f88c({});
    });
    RegisterNuiCallbackType("hoverElement");
    on("__cfx_nui:hoverElement", function (_0x58366c, _0x14a765) {
      if (_0x58366c.hoveringElement) {
        _0x5c70cc(true);
        SetNuiFocusKeepInput(false);
        _0x38d9b6(true);
      } else {
        _0x5c70cc(false);
        SetNuiFocusKeepInput(true);
        _0x38d9b6(false);
      }
      _0x14a765({});
    });
    RegisterNuiCallbackType("selectItem");
    on("__cfx_nui:selectItem", function (_0x22b797, _0x5d375a) {
      _0x36d2f3(_0x22b797.selected);
      _0x5d375a({});
    });
    RegisterNuiCallbackType("openShoppingList");
    on("__cfx_nui:openShoppingList", function () {
      var _0x4a26e9 = _0x249300(function (_0x38fe43, _0x3c5b0f) {
        return _0x1e2c42(this, function (_0x18ba00) {
          switch (_0x18ba00.label) {
            case 0:
              return [4, _0x1e2c4a()];
            case 1:
              _0x18ba00.sent();
              return [4, _0x5d237e()];
            case 2:
              _0x18ba00.sent();
              _0x3c5b0f({});
              return [2];
          }
        });
      });
      return function (_0x407a53, _0x517f25) {
        return _0x4a26e9.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("save");
    on("__cfx_nui:save", function () {
      var _0x45e46c = _0x249300(function (_0x1073b3, _0x28c002) {
        return _0x1e2c42(this, function (_0x195ff3) {
          switch (_0x195ff3.label) {
            case 0:
              return [4, _0x1e2c4a()];
            case 1:
              _0x195ff3.sent();
              return [4, _0x5d237e()];
            case 2:
              _0x195ff3.sent();
              _0x28c002({});
              return [2];
          }
        });
      });
      return function (_0x11f86e, _0x154d72) {
        return _0x45e46c.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("saveandbuild");
    on("__cfx_nui:saveandbuild", function () {
      var _0x4bbeb5 = _0x249300(function (_0x5b3b8c, _0x1354cc) {
        return _0x1e2c42(this, function (_0x37dca7) {
          switch (_0x37dca7.label) {
            case 0:
              return [4, _0x1e2c4a()];
            case 1:
              _0x37dca7.sent();
              return [4, _0x5d237e()];
            case 2:
              _0x37dca7.sent();
              return [4, _0x259089()];
            case 3:
              _0x37dca7.sent();
              _0x1354cc({});
              return [2];
          }
        });
      });
      return function (_0x2de1e8, _0x765f33) {
        return _0x4bbeb5.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("updateSettings");
    on("__cfx_nui:updateSettings", function (_0x53d2ec, _0x44fbef) {
      _0x95acc3(_0x53d2ec.settings);
      _0x44fbef({});
    });
    RegisterNuiCallbackType("moveItem");
    on("__cfx_nui:moveItem", function () {
      var _0x1f7d9c = _0x249300(function (_0x372369, _0x2e69e) {
        var _0x186e0e;
        var _0x534046;
        return _0x1e2c42(this, function (_0x1f3d09) {
          switch (_0x1f3d09.label) {
            case 0:
              _0x186e0e = _0x372369.item;
              _0x534046 = _0x372369.parent;
              return [4, _0x25921d(_0x186e0e, _0x534046)];
            case 1:
              _0x1f3d09.sent();
              _0x2e69e({});
              return [2];
          }
        });
      });
      return function (_0x43add0, _0x23bf17) {
        return _0x1f7d9c.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("holdingForDupe");
    on("__cfx_nui:holdingForDupe", function () {
      var _0x2e226c = _0x249300(function (_0x1be849, _0x16073b) {
        return _0x1e2c42(this, function (_0x288c3a) {
          _0x767121(_0x1be849.holding);
          _0x238dba(_0x1be849.holding);
          _0x16073b({});
          return [2];
        });
      });
      return function (_0x5a50f5, _0x394a4d) {
        return _0x2e226c.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("snapToGround");
    on("__cfx_nui:snapToGround", function () {
      var _0x51ba95 = _0x249300(function (_0x42d713, _0x102689) {
        return _0x1e2c42(this, function (_0x237bea) {
          _0x2adc67();
          _0x102689({});
          return [2];
        });
      });
      return function (_0x242aa7, _0x5dd2ad) {
        return _0x51ba95.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("deleteItem");
    on("__cfx_nui:deleteItem", function () {
      var _0x174a88 = _0x249300(function (_0x5361b3, _0x2c8ac3) {
        return _0x1e2c42(this, function (_0x531d63) {
          _0x29785c(_0x5361b3.item);
          _0x2c8ac3({});
          return [2];
        });
      });
      return function (_0x4d2187, _0x28c178) {
        return _0x174a88.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("discard");
    on("__cfx_nui:discard", function () {
      var _0x24e306 = _0x249300(function (_0x1d0ab8, _0x27bd23) {
        return _0x1e2c42(this, function (_0x74087) {
          _0x463b68();
          _0x27bd23({});
          return [2];
        });
      });
      return function (_0x388e49, _0x2702cc) {
        return _0x24e306.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("updateShopping");
    on("__cfx_nui:updateShopping", function () {
      var _0x44fd7d = _0x249300(function (_0x4f5f04, _0x2e24c7) {
        return _0x1e2c42(this, function (_0x467ff6) {
          _0x635c78();
          _0x2e24c7({});
          return [2];
        });
      });
      return function (_0x2e350a, _0x22733d) {
        return _0x44fd7d.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("moveEntity");
    on("__cfx_nui:moveEntity", function () {
      var _0x4d6dfd = _0x249300(function (_0x3a4e33, _0xd5cd1) {
        return _0x1e2c42(this, function (_0x41ac8b) {
          _0x49bcef(_0x3a4e33);
          _0xd5cd1({});
          return [2];
        });
      });
      return function (_0x29a147, _0x3e252b) {
        return _0x4d6dfd.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("manualItemMove");
    on("__cfx_nui:manualItemMove", function () {
      var _0x71f7c1 = _0x249300(function (_0x574a3a, _0x47671a) {
        var _0x140726;
        return _0x1e2c42(this, function (_0x22f6db) {
          switch (_0x22f6db.label) {
            case 0:
              _0x140726 = {
                position: new _0x4cd9d1(_0x574a3a.pos[0], _0x574a3a.pos[1], _0x574a3a.pos[2]),
                rotation: new _0x4cd9d1(_0x574a3a.rot[0], _0x574a3a.rot[1], _0x574a3a.rot[2]),
                entity: _0x574a3a.entity
              };
              return [4, _0x49bcef(_0x140726, true)];
            case 1:
              _0x22f6db.sent();
              _0x47671a({});
              return [2];
          }
        });
      });
      return function (_0x1f3830, _0x5ce1ad) {
        return _0x71f7c1.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("isDragging");
    on("__cfx_nui:isDragging", function () {
      var _0x57d513 = _0x249300(function (_0x41469f, _0x3d916f) {
        var _0x3e1caa;
        return _0x1e2c42(this, function (_0x5546a3) {
          _0x3e1caa = _0x41469f.isDragging;
          _0xe35ea6(_0x3e1caa);
          _0x3d916f({});
          return [2];
        });
      });
      return function (_0x3f99f5, _0x182ead) {
        return _0x57d513.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("gizmoMode");
    on("__cfx_nui:gizmoMode", function () {
      var _0x211de2 = _0x249300(function (_0x2c98b6, _0x44a695) {
        return _0x1e2c42(this, function (_0x44b394) {
          _0x10a038(_0x2c98b6.mode);
          _0x44a695({});
          return [2];
        });
      });
      return function (_0x4b6c03, _0x169cd8) {
        return _0x211de2.apply(this, arguments);
      };
    }());
    RegisterNuiCallbackType("placeCurrentObject");
    on("__cfx_nui:placeCurrentObject", function () {
      var _0x4a6b96 = _0x249300(function (_0x13203b, _0x33340e) {
        return _0x1e2c42(this, function (_0x594723) {
          _0x17e588(0, undefined);
          _0x33340e({});
          return [2];
        });
      });
      return function (_0x8d7785, _0x5dc78e) {
        return _0x4a6b96.apply(this, arguments);
      };
    }());
    ;
    function _0x5b7f17(_0xfa237e, _0x2c5cac, _0x184f8a, _0x271113, _0x4f0eb8, _0x3718c0, _0x292eb9) {
      try {
        var _0x405036 = _0xfa237e[_0x3718c0](_0x292eb9);
        var _0x3b83ec = _0x405036.value;
      } catch (_0x2158fa) {
        _0x184f8a(_0x2158fa);
        return;
      }
      if (_0x405036.done) {
        _0x2c5cac(_0x3b83ec);
      } else {
        Promise.resolve(_0x3b83ec).then(_0x271113, _0x4f0eb8);
      }
    }
    function _0x1962d0(_0x104ff4) {
      return function () {
        var _0x5bde25 = this;
        var _0x4798b5 = arguments;
        return new Promise(function (_0x2fe000, _0x461e57) {
          var _0x14604d = _0x104ff4.apply(_0x5bde25, _0x4798b5);
          function _0x2d6d17(_0x5b6723) {
            _0x5b7f17(_0x14604d, _0x2fe000, _0x461e57, _0x2d6d17, _0x5633ef, "next", _0x5b6723);
          }
          function _0x5633ef(_0x8b162e) {
            _0x5b7f17(_0x14604d, _0x2fe000, _0x461e57, _0x2d6d17, _0x5633ef, "throw", _0x8b162e);
          }
          _0x2d6d17(undefined);
        });
      };
    }
    function _0xa7fb38(_0x5055b7, _0x326740) {
      var _0x358930;
      var _0x1c139b;
      var _0x5521fd;
      var _0x4f14a2;
      var _0x422a61 = {
        label: 0,
        sent: function () {
          if (_0x5521fd[0] & 1) {
            throw _0x5521fd[1];
          }
          return _0x5521fd[1];
        },
        trys: [],
        ops: []
      };
      _0x4f14a2 = {
        next: _0x3346a0(0),
        throw: _0x3346a0(1),
        return: _0x3346a0(2)
      };
      if (typeof Symbol === "function") {
        _0x4f14a2[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x4f14a2;
      function _0x3346a0(_0x364b64) {
        return function (_0x4e94b8) {
          return _0x1aa963([_0x364b64, _0x4e94b8]);
        };
      }
      function _0x1aa963(_0x37fb91) {
        if (_0x358930) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x422a61) {
          try {
            _0x358930 = 1;
            if (_0x1c139b && (_0x5521fd = _0x37fb91[0] & 2 ? _0x1c139b.return : _0x37fb91[0] ? _0x1c139b.throw || ((_0x5521fd = _0x1c139b.return) && _0x5521fd.call(_0x1c139b), 0) : _0x1c139b.next) && !(_0x5521fd = _0x5521fd.call(_0x1c139b, _0x37fb91[1])).done) {
              return _0x5521fd;
            }
            _0x1c139b = 0;
            if (_0x5521fd) {
              _0x37fb91 = [_0x37fb91[0] & 2, _0x5521fd.value];
            }
            switch (_0x37fb91[0]) {
              case 0:
              case 1:
                _0x5521fd = _0x37fb91;
                break;
              case 4:
                _0x422a61.label++;
                var _0x11b9a5 = {
                  value: _0x37fb91[1],
                  done: false
                };
                return _0x11b9a5;
              case 5:
                _0x422a61.label++;
                _0x1c139b = _0x37fb91[1];
                _0x37fb91 = [0];
                continue;
              case 7:
                _0x37fb91 = _0x422a61.ops.pop();
                _0x422a61.trys.pop();
                continue;
              default:
                if (!(_0x5521fd = _0x422a61.trys, _0x5521fd = _0x5521fd.length > 0 && _0x5521fd[_0x5521fd.length - 1]) && (_0x37fb91[0] === 6 || _0x37fb91[0] === 2)) {
                  _0x422a61 = 0;
                  continue;
                }
                if (_0x37fb91[0] === 3 && (!_0x5521fd || _0x37fb91[1] > _0x5521fd[0] && _0x37fb91[1] < _0x5521fd[3])) {
                  _0x422a61.label = _0x37fb91[1];
                  break;
                }
                if (_0x37fb91[0] === 6 && _0x422a61.label < _0x5521fd[1]) {
                  _0x422a61.label = _0x5521fd[1];
                  _0x5521fd = _0x37fb91;
                  break;
                }
                if (_0x5521fd && _0x422a61.label < _0x5521fd[2]) {
                  _0x422a61.label = _0x5521fd[2];
                  _0x422a61.ops.push(_0x37fb91);
                  break;
                }
                if (_0x5521fd[2]) {
                  _0x422a61.ops.pop();
                }
                _0x422a61.trys.pop();
                continue;
            }
            _0x37fb91 = _0x326740.call(_0x5055b7, _0x422a61);
          } catch (_0x128485) {
            _0x37fb91 = [6, _0x128485];
            _0x1c139b = 0;
          } finally {
            _0x358930 = _0x5521fd = 0;
          }
        }
        if (_0x37fb91[0] & 5) {
          throw _0x37fb91[1];
        }
        var _0x4c26b6 = {
          value: _0x37fb91[0] ? _0x37fb91[1] : undefined,
          done: true
        };
        return _0x4c26b6;
      }
    }
    function _0x4507fe() {
      return _0x3eec9a.apply(this, arguments);
    }
    function _0x3eec9a() {
      _0x3eec9a = _0x1962d0(function () {
        return _0xa7fb38(this, function (_0x1f3567) {
          switch (_0x1f3567.label) {
            case 0:
              return [4, _0x57a660()];
            case 1:
              _0x1f3567.sent();
              return [4, _0x84e37c()];
            case 2:
              _0x1f3567.sent();
              return [4, _0x1680b3()];
            case 3:
              _0x1f3567.sent();
              return [4, _0x429a4d()];
            case 4:
              _0x1f3567.sent();
              return [4, _0x3194ce()];
            case 5:
              _0x1f3567.sent();
              return [4, _0x1396fd()];
            case 6:
              _0x1f3567.sent();
              return [4, _0xa5d061()];
            case 7:
              _0x1f3567.sent();
              return [4, _0x4d46cb()];
            case 8:
              _0x1f3567.sent();
              return [4, _0x853789()];
            case 9:
              _0x1f3567.sent();
              return [4, _0x30b924()];
            case 10:
              _0x1f3567.sent();
              return [4, _0x1ce2e5()];
            case 11:
              _0x1f3567.sent();
              return [2];
          }
        });
      });
      return _0x3eec9a.apply(this, arguments);
    }
    ;
    function _0x26e4df(_0x201de4, _0x5e04ff, _0x6e39b8, _0x3545b0, _0x13fa5a, _0x57b1d6, _0x2d736c) {
      try {
        var _0x2ee40a = _0x201de4[_0x57b1d6](_0x2d736c);
        var _0xfd5bd7 = _0x2ee40a.value;
      } catch (_0x136b8d) {
        _0x6e39b8(_0x136b8d);
        return;
      }
      if (_0x2ee40a.done) {
        _0x5e04ff(_0xfd5bd7);
      } else {
        Promise.resolve(_0xfd5bd7).then(_0x3545b0, _0x13fa5a);
      }
    }
    function _0x15994e(_0x37937d) {
      return function () {
        var _0x393356 = this;
        var _0x5b7b15 = arguments;
        return new Promise(function (_0x2a5665, _0x49bf18) {
          var _0x2b53ce = _0x37937d.apply(_0x393356, _0x5b7b15);
          function _0x113417(_0x4189dd) {
            _0x26e4df(_0x2b53ce, _0x2a5665, _0x49bf18, _0x113417, _0x54d70c, "next", _0x4189dd);
          }
          function _0x54d70c(_0x1b4283) {
            _0x26e4df(_0x2b53ce, _0x2a5665, _0x49bf18, _0x113417, _0x54d70c, "throw", _0x1b4283);
          }
          _0x113417(undefined);
        });
      };
    }
    function _0x135c57(_0x53cdd9, _0x2d7d3f) {
      var _0x301f1b;
      var _0x54ed3e;
      var _0x35635e;
      var _0x5be94a;
      var _0x108fc4 = {
        label: 0,
        sent: function () {
          if (_0x35635e[0] & 1) {
            throw _0x35635e[1];
          }
          return _0x35635e[1];
        },
        trys: [],
        ops: []
      };
      _0x5be94a = {
        next: _0x1212f0(0),
        throw: _0x1212f0(1),
        return: _0x1212f0(2)
      };
      if (typeof Symbol === "function") {
        _0x5be94a[Symbol.iterator] = function () {
          return this;
        };
      }
      return _0x5be94a;
      function _0x1212f0(_0x151d19) {
        return function (_0x32ac9e) {
          return _0x4b9bb7([_0x151d19, _0x32ac9e]);
        };
      }
      function _0x4b9bb7(_0x3ddbde) {
        if (_0x301f1b) {
          throw new TypeError("Generator is already executing.");
        }
        while (_0x108fc4) {
          try {
            _0x301f1b = 1;
            if (_0x54ed3e && (_0x35635e = _0x3ddbde[0] & 2 ? _0x54ed3e.return : _0x3ddbde[0] ? _0x54ed3e.throw || ((_0x35635e = _0x54ed3e.return) && _0x35635e.call(_0x54ed3e), 0) : _0x54ed3e.next) && !(_0x35635e = _0x35635e.call(_0x54ed3e, _0x3ddbde[1])).done) {
              return _0x35635e;
            }
            _0x54ed3e = 0;
            if (_0x35635e) {
              _0x3ddbde = [_0x3ddbde[0] & 2, _0x35635e.value];
            }
            switch (_0x3ddbde[0]) {
              case 0:
              case 1:
                _0x35635e = _0x3ddbde;
                break;
              case 4:
                _0x108fc4.label++;
                var _0x47328d = {
                  value: _0x3ddbde[1],
                  done: false
                };
                return _0x47328d;
              case 5:
                _0x108fc4.label++;
                _0x54ed3e = _0x3ddbde[1];
                _0x3ddbde = [0];
                continue;
              case 7:
                _0x3ddbde = _0x108fc4.ops.pop();
                _0x108fc4.trys.pop();
                continue;
              default:
                if (!(_0x35635e = _0x108fc4.trys, _0x35635e = _0x35635e.length > 0 && _0x35635e[_0x35635e.length - 1]) && (_0x3ddbde[0] === 6 || _0x3ddbde[0] === 2)) {
                  _0x108fc4 = 0;
                  continue;
                }
                if (_0x3ddbde[0] === 3 && (!_0x35635e || _0x3ddbde[1] > _0x35635e[0] && _0x3ddbde[1] < _0x35635e[3])) {
                  _0x108fc4.label = _0x3ddbde[1];
                  break;
                }
                if (_0x3ddbde[0] === 6 && _0x108fc4.label < _0x35635e[1]) {
                  _0x108fc4.label = _0x35635e[1];
                  _0x35635e = _0x3ddbde;
                  break;
                }
                if (_0x35635e && _0x108fc4.label < _0x35635e[2]) {
                  _0x108fc4.label = _0x35635e[2];
                  _0x108fc4.ops.push(_0x3ddbde);
                  break;
                }
                if (_0x35635e[2]) {
                  _0x108fc4.ops.pop();
                }
                _0x108fc4.trys.pop();
                continue;
            }
            _0x3ddbde = _0x2d7d3f.call(_0x53cdd9, _0x108fc4);
          } catch (_0xf4e49b) {
            _0x3ddbde = [6, _0xf4e49b];
            _0x54ed3e = 0;
          } finally {
            _0x301f1b = _0x35635e = 0;
          }
        }
        if (_0x3ddbde[0] & 5) {
          throw _0x3ddbde[1];
        }
        var _0x154107 = {
          value: _0x3ddbde[0] ? _0x3ddbde[1] : undefined,
          done: true
        };
        return _0x154107;
      }
    }
    var _0x191849 = new _0x11066b({
      codename: "editor",
      version: "0.0.0"
    });
    on("onClientResourceStart", function () {
      var _0x1a8487 = _0x15994e(function (_0x5c5ce5) {
        return _0x135c57(this, function (_0x3dbd34) {
          switch (_0x3dbd34.label) {
            case 0:
              if (_0x5c5ce5 !== GetCurrentResourceName()) {
                return [2];
              }
              return [4, _0x4507fe()];
            case 1:
              _0x3dbd34.sent();
              return [2];
          }
        });
      });
      return function (_0x3ffaf0) {
        return _0x1a8487.apply(this, arguments);
      };
    }());
  })();
})();